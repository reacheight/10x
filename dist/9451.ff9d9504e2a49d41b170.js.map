{"version":3,"file":"9451.ff9d9504e2a49d41b170.js","mappings":"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","sources":["webpack://telegram-t/./src/components/mediaViewer/helpers/getViewableMedia.ts","webpack://telegram-t/./src/components/mediaViewer/helpers/ghostAnimation.ts","webpack://telegram-t/./src/hooks/usePictureInPicture.ts","webpack://telegram-t/./src/hooks/useBlur.ts","webpack://telegram-t/./src/components/mediaViewer/hooks/useMediaProps.ts","webpack://telegram-t/./src/hooks/useBlurSync.ts","webpack://telegram-t/./src/components/mediaViewer/hooks/useZoomChangeSignal.ts","webpack://telegram-t/./src/components/common/DeleteProfilePhotoModal.tsx","webpack://telegram-t/./src/components/mediaViewer/MediaViewerActions.tsx","webpack://telegram-t/./src/hooks/useSignalRef.ts","webpack://telegram-t/./src/components/mediaViewer/hooks/useControlsSignal.ts","webpack://telegram-t/./src/components/mediaViewer/MediaViewerFooter.tsx","webpack://telegram-t/./src/hooks/useCurrentTimeSignal.ts","webpack://telegram-t/./src/components/mediaViewer/hooks/useVideoWaitingSignal.ts","webpack://telegram-t/./src/lib/video-preview/VideoPreview.ts","webpack://telegram-t/./src/components/mediaViewer/SeekLine.module.scss?dc47","webpack://telegram-t/./src/components/mediaViewer/SeekLine.tsx","webpack://telegram-t/./src/components/mediaViewer/VideoPlayerControls.tsx","webpack://telegram-t/./src/components/mediaViewer/VideoPlayer.tsx","webpack://telegram-t/./src/components/mediaViewer/MediaViewerContent.tsx","webpack://telegram-t/./src/components/mediaViewer/MediaViewerSlides.tsx","webpack://telegram-t/./src/components/mediaViewer/SenderInfo.tsx","webpack://telegram-t/./src/components/mediaViewer/MediaViewer.tsx","webpack://telegram-t/./src/components/story/StoryRibbon.module.scss?8966","webpack://telegram-t/./src/components/story/StoryViewer.module.scss?5f32","webpack://telegram-t/./src/components/story/helpers/ghostAnimation.ts","webpack://telegram-t/./src/components/story/helpers/dimensions.ts","webpack://telegram-t/./src/components/story/hooks/useSlideSizes.ts","webpack://telegram-t/./src/components/story/hooks/useStoryProps.ts","webpack://telegram-t/./src/components/story/StealthModeModal.module.scss?40cf","webpack://telegram-t/./src/components/story/StealthModeModal.tsx","webpack://telegram-t/./src/components/story/StoryDeleteConfirmModal.tsx","webpack://telegram-t/./src/components/story/privacy/AllowDenyList.tsx","webpack://telegram-t/./src/components/story/privacy/CloseFriends.module.scss?5d02","webpack://telegram-t/./src/components/story/privacy/CloseFriends.tsx","webpack://telegram-t/./src/components/story/StorySettings.module.scss?b887","webpack://telegram-t/./src/components/story/StorySettings.tsx","webpack://telegram-t/./src/util/scrollLock.ts","webpack://telegram-t/./src/components/story/helpers/videoFormats.ts","webpack://telegram-t/./src/util/progressieveLoader.ts","webpack://telegram-t/./src/hooks/useStreaming.ts","webpack://telegram-t/./src/components/story/hooks/useStoryPreloader.ts","webpack://telegram-t/./src/components/common/embedded/EmbeddedStoryForward.tsx","webpack://telegram-t/./src/components/story/StoryCaption.tsx","webpack://telegram-t/./src/components/story/StoryFooter.module.scss?19b1","webpack://telegram-t/./src/components/story/StoryFooter.tsx","webpack://telegram-t/./src/components/story/StoryProgress.tsx","webpack://telegram-t/./src/components/story/StoryProgress.module.scss?59b4","webpack://telegram-t/./src/components/story/Story.tsx","webpack://telegram-t/./src/components/story/StoryPreview.tsx","webpack://telegram-t/./src/components/story/StorySlides.tsx","webpack://telegram-t/./src/hooks/useScrolledState.ts","webpack://telegram-t/./src/components/story/StoryViewModal.module.scss?06b1","webpack://telegram-t/./src/components/story/StoryView.tsx","webpack://telegram-t/./src/components/story/StoryViewModal.tsx","webpack://telegram-t/./src/components/story/StoryViewer.tsx","webpack://telegram-t/./src/components/common/pickers/ChatOrUserPicker.tsx","webpack://telegram-t/./src/components/common/RecipientPicker.tsx","webpack://telegram-t/./src/components/main/ForwardRecipientPicker.tsx","webpack://telegram-t/./src/components/main/DraftRecipientPicker.tsx","webpack://telegram-t/./src/components/main/AttachBotRecipientPicker.tsx","webpack://telegram-t/./src/components/main/Dialogs.tsx","webpack://telegram-t/./src/components/main/Notifications.tsx","webpack://telegram-t/./src/components/main/SafeLinkModal.tsx","webpack://telegram-t/./src/components/modals/map/MapModal.module.scss?0842","webpack://telegram-t/./src/components/modals/map/MapModal.tsx","webpack://telegram-t/./src/components/modals/urlAuth/UrlAuthModal.module.scss?df39","webpack://telegram-t/./src/components/modals/urlAuth/UrlAuthModal.tsx","webpack://telegram-t/./src/components/common/CalendarModal.tsx","webpack://telegram-t/./src/components/main/HistoryCalendar.tsx","webpack://telegram-t/./src/components/main/NewContactModal.tsx","webpack://telegram-t/./src/hooks/useDraggable.ts","webpack://telegram-t/./src/components/modals/webApp/MinimizedWebAppModal.module.scss?a30f","webpack://telegram-t/./src/components/modals/webApp/MinimizedWebAppModal.tsx","webpack://telegram-t/./src/components/modals/webApp/hooks/useWebAppFrame.ts","webpack://telegram-t/./src/components/modals/webApp/WebAppModalTabContent.module.scss?c843","webpack://telegram-t/./src/components/modals/webApp/WebAppModalTabContent.tsx","webpack://telegram-t/./src/components/modals/webApp/hooks/usePopupLimit.ts","webpack://telegram-t/./src/components/modals/webApp/WebAppModal.module.scss?615e","webpack://telegram-t/./src/components/modals/webApp/WebAppModal.tsx","webpack://telegram-t/./src/components/main/BotTrustModal.tsx","webpack://telegram-t/./src/components/modals/attachBotInstall/AttachBotInstallModal.tsx","webpack://telegram-t/./src/components/main/DeleteFolderDialog.tsx","webpack://telegram-t/./src/components/main/premium/PremiumFeatureItem.module.scss?7431","webpack://telegram-t/./src/components/main/premium/PremiumFeatureItem.tsx","webpack://telegram-t/./src/components/common/SliderDots.module.scss?afdd","webpack://telegram-t/./src/components/common/SliderDots.tsx","webpack://telegram-t/./src/components/main/premium/common/PremiumLimitsCompare.module.scss?00e6","webpack://telegram-t/./src/components/main/premium/common/PremiumLimitsCompare.tsx","webpack://telegram-t/./src/components/main/premium/common/PremiumLimitPreview.tsx","webpack://telegram-t/./src/components/main/premium/common/PremiumLimitPreview.module.scss?28b4","webpack://telegram-t/./src/components/main/premium/previews/PremiumFeaturePreviewStickers.module.scss?0900","webpack://telegram-t/./src/components/main/premium/previews/PremiumFeaturePreviewStickers.tsx","webpack://telegram-t/./src/components/main/premium/previews/PremiumFeaturePreviewStories.module.scss?e925","webpack://telegram-t/./src/components/main/premium/previews/PremiumFeaturePreviewStories.tsx","webpack://telegram-t/./src/components/main/premium/previews/PremiumFeaturePreviewVideo.module.scss?0228","webpack://telegram-t/./src/components/main/premium/previews/PremiumFeaturePreviewVideo.tsx","webpack://telegram-t/./src/components/main/premium/PremiumFeatureModal.module.scss?b65b","webpack://telegram-t/./src/components/main/premium/PremiumFeatureModal.tsx","webpack://telegram-t/./src/components/main/premium/PremiumSubscriptionOption.tsx","webpack://telegram-t/./src/components/main/premium/PremiumSubscriptionOption.module.scss?b798","webpack://telegram-t/./src/components/main/premium/PremiumMainModal.module.scss?323f","webpack://telegram-t/./src/components/main/premium/PremiumMainModal.tsx","webpack://telegram-t/./src/components/main/premium/PremiumGiftModal.module.scss?67d9","webpack://telegram-t/./src/components/main/premium/PremiumGiftModal.tsx","webpack://telegram-t/./src/components/modals/stars/StarTopupOptionList.module.scss?22c9","webpack://telegram-t/./src/components/modals/stars/StarTopupOptionList.tsx","webpack://telegram-t/./src/components/main/premium/StarsGiftModal.module.scss?c1d3","webpack://telegram-t/./src/components/main/premium/StarsGiftModal.tsx","webpack://telegram-t/./src/components/common/pickers/ItemPicker.tsx","webpack://telegram-t/./src/components/common/CountryPickerModal.module.scss?d5e6","webpack://telegram-t/./src/components/common/CountryPickerModal.tsx","webpack://telegram-t/./src/components/common/pickers/PickerModal.tsx","webpack://telegram-t/./src/components/common/pickers/PickerModal.module.scss?7af2","webpack://telegram-t/./src/components/main/premium/GiveawayChannelPickerModal.tsx","webpack://telegram-t/./src/components/main/premium/GiveawayTypeOption.tsx","webpack://telegram-t/./src/components/main/premium/GiveawayTypeOption.module.scss?6d7c","webpack://telegram-t/./src/components/main/premium/GiveawayUserPickerModal.tsx","webpack://telegram-t/./src/components/main/premium/GiveawayModal.module.scss?ac86","webpack://telegram-t/./src/components/main/premium/GiveawayModal.tsx","webpack://telegram-t/./src/components/main/premium/PremiumGiftingPickerModal.tsx","webpack://telegram-t/./src/components/main/premium/PremiumGiftingPickerModal.module.scss?e51e","webpack://telegram-t/./src/components/main/premium/StarsGiftingPickerModal.tsx","webpack://telegram-t/./src/components/main/premium/StarsGiftingPickerModal.module.scss?3156","webpack://telegram-t/./src/components/main/premium/common/PremiumLimitReachedModal.tsx","webpack://telegram-t/./src/components/main/premium/common/PremiumLimitReachedModal.module.scss?434e","webpack://telegram-t/./src/components/common/hooks/useStickerPickerObservers.ts","webpack://telegram-t/./src/components/middle/composer/StickerSetCover.module.scss?4629","webpack://telegram-t/./src/components/middle/composer/StickerSetCover.tsx","webpack://telegram-t/./src/components/common/StickerButton.tsx","webpack://telegram-t/./src/components/common/ReactionEmoji.module.scss?b399","webpack://telegram-t/./src/components/common/ReactionEmoji.tsx","webpack://telegram-t/./src/components/common/StickerSet.tsx","webpack://telegram-t/./src/components/middle/composer/StickerPicker.module.scss?0978","webpack://telegram-t/./src/components/common/CustomEmojiPicker.tsx","webpack://telegram-t/./src/components/common/CustomEmojiPicker.module.scss?b9fd","webpack://telegram-t/./src/components/left/main/StatusPickerMenu.module.scss?d7cd","webpack://telegram-t/./src/components/left/main/StatusPickerMenu.tsx","webpack://telegram-t/./src/components/modals/boost/BoostModal.module.scss?aeb4","webpack://telegram-t/./src/components/modals/boost/BoostModal.tsx","webpack://telegram-t/./src/components/modals/common/TableInfoModal.module.scss?4f33","webpack://telegram-t/./src/components/modals/common/TableInfoModal.tsx","webpack://telegram-t/./src/components/modals/giftcode/GiftCodeModal.module.scss?1c77","webpack://telegram-t/./src/components/modals/giftcode/GiftCodeModal.tsx","webpack://telegram-t/./src/components/modals/chatlist/ChatlistModal.module.scss?f731","webpack://telegram-t/./src/components/modals/chatlist/ChatlistAlready.tsx","webpack://telegram-t/./src/components/modals/chatlist/ChatlistDelete.tsx","webpack://telegram-t/./src/components/modals/chatlist/ChatlistNew.tsx","webpack://telegram-t/./src/components/modals/chatlist/ChatlistModal.tsx","webpack://telegram-t/./src/components/modals/stars/StarsBalanceModal.module.scss?bbd4","webpack://telegram-t/./src/components/modals/stars/BalanceBlock.tsx","webpack://telegram-t/./src/components/modals/stars/transaction/PaidMediaThumb.module.scss?605d","webpack://telegram-t/./src/components/modals/stars/transaction/PaidMediaThumb.tsx","webpack://telegram-t/./src/components/modals/stars/transaction/StarsTransactionItem.tsx","webpack://telegram-t/./src/components/modals/stars/transaction/StarsTransactionItem.module.scss?b947","webpack://telegram-t/./src/components/modals/stars/StarsBalanceModal.tsx","webpack://telegram-t/./src/components/modals/stars/StarsPaymentModal.tsx","webpack://telegram-t/./src/components/modals/stars/transaction/StarsTransactionModal.module.scss?a215","webpack://telegram-t/./src/components/modals/stars/transaction/StarsTransactionModal.tsx","webpack://telegram-t/./src/components/modals/common/TableAboutModal.module.scss?0459","webpack://telegram-t/./src/components/modals/common/TableAboutModal.tsx","webpack://telegram-t/./src/components/common/AboutAdsModal.module.scss?0072","webpack://telegram-t/./src/components/common/AboutAdsModal.tsx","webpack://telegram-t/./src/components/common/AboutMonetizationModal.module.scss?2ca6","webpack://telegram-t/./src/components/common/AboutMonetizationModal.tsx","webpack://telegram-t/./src/components/common/VerificationMonetizationModal.module.scss?bb6b","webpack://telegram-t/./src/components/common/VerificationMonetizationModal.tsx","webpack://telegram-t/./src/components/modals/reportAd/ReportAdModal.module.scss?b26e","webpack://telegram-t/./src/components/modals/reportAd/ReportAdModal.tsx","webpack://telegram-t/./src/components/right/hooks/useManagePermissions.ts","webpack://telegram-t/./src/components/main/PermissionCheckboxList.tsx","webpack://telegram-t/./src/components/common/DeleteMessageModal.module.scss?fbca","webpack://telegram-t/./src/components/common/DeleteMessageModal.tsx","webpack://telegram-t/./src/components/common/PinMessageModal.tsx","webpack://telegram-t/./src/components/common/UnpinAllMessagesModal.tsx","webpack://telegram-t/./src/components/middle/hooks/useCopySelectedMessages.ts","webpack://telegram-t/./src/components/middle/DeleteSelectedMessageModal.module.scss?84a2","webpack://telegram-t/./src/components/middle/DeleteSelectedMessageModal.tsx","webpack://telegram-t/./src/components/middle/MessageSelectToolbar.tsx","webpack://telegram-t/./src/components/common/SeenByModal.tsx","webpack://telegram-t/./src/components/common/SeenByModal.module.scss?1d45","webpack://telegram-t/./src/components/common/PrivacySettingsNoticeModal.module.scss?a8aa","webpack://telegram-t/./src/components/common/PrivacySettingsNoticeModal.tsx","webpack://telegram-t/./src/components/middle/ReactorListModal.tsx","webpack://telegram-t/./src/components/middle/EmojiInteractionAnimation.tsx","webpack://telegram-t/./src/components/middle/ChatLanguageModal.tsx","webpack://telegram-t/./src/components/middle/ChatLanguageModal.module.scss?68c3","webpack://telegram-t/./src/components/modals/collectible/CollectibleInfoModal.module.scss?497f","webpack://telegram-t/./src/components/modals/collectible/CollectibleInfoModal.tsx","webpack://telegram-t/./src/components/left/search/helpers/createMapStateToProps.ts","webpack://telegram-t/./src/components/left/search/AudioResults.tsx","webpack://telegram-t/./src/hooks/useSelectWithEnter.ts","webpack://telegram-t/./src/components/left/search/LeftSearchResultChat.tsx","webpack://telegram-t/./src/components/left/search/BotAppResults.tsx","webpack://telegram-t/./src/components/left/search/ChatMessage.tsx","webpack://telegram-t/./src/components/left/search/DateSuggest.tsx","webpack://telegram-t/./src/components/left/search/LeftSearchResultTopic.tsx","webpack://telegram-t/./src/components/left/search/ChatMessageResults.tsx","webpack://telegram-t/./src/components/left/search/RecentContacts.tsx","webpack://telegram-t/./src/components/left/search/ChatResults.tsx","webpack://telegram-t/./src/components/left/search/FileResults.tsx","webpack://telegram-t/./src/components/left/search/LinkResults.tsx","webpack://telegram-t/./src/components/left/search/MediaResults.tsx","webpack://telegram-t/./src/components/left/search/LeftSearch.tsx","webpack://telegram-t/./src/hooks/reducers/useTwoFaReducer.ts","webpack://telegram-t/./src/components/left/settings/folders/SettingsFoldersChatFilters.tsx","webpack://telegram-t/./src/components/left/settings/folders/SettingsFoldersEdit.tsx","webpack://telegram-t/./src/components/left/settings/folders/SettingsFoldersMain.tsx","webpack://telegram-t/./src/components/left/settings/folders/SettingsShareChatlist.tsx","webpack://telegram-t/./src/components/left/settings/folders/SettingsFolders.tsx","webpack://telegram-t/./src/components/left/settings/SettingsPasswordForm.tsx","webpack://telegram-t/./src/components/left/settings/passcode/SettingsPasscodeCongratulations.tsx","webpack://telegram-t/./src/components/left/settings/passcode/SettingsPasscodeEnabled.tsx","webpack://telegram-t/./src/components/left/settings/passcode/SettingsPasscodeStart.tsx","webpack://telegram-t/./src/components/left/settings/passcode/SettingsPasscode.tsx","webpack://telegram-t/./src/components/left/settings/PremiumStatusItem.tsx","webpack://telegram-t/./src/components/left/settings/PrivacyLockedOption.tsx","webpack://telegram-t/./src/components/left/settings/PrivacyLockedOption.module.scss?16a3","webpack://telegram-t/./src/components/left/settings/PrivacyMessages.tsx","webpack://telegram-t/./src/components/left/settings/helpers/getSessionIcon.ts","webpack://telegram-t/./src/components/left/settings/SettingsActiveSession.module.scss?ead4","webpack://telegram-t/./src/components/left/settings/SettingsActiveSession.tsx","webpack://telegram-t/./src/components/left/settings/SettingsActiveSessions.tsx","webpack://telegram-t/./src/components/left/settings/SettingsActiveWebsite.module.scss?99ae","webpack://telegram-t/./src/components/left/settings/SettingsActiveWebsite.tsx","webpack://telegram-t/./src/components/left/settings/SettingsActiveWebsites.module.scss?28f4","webpack://telegram-t/./src/components/left/settings/SettingsActiveWebsites.tsx","webpack://telegram-t/./src/components/common/StickerSetCard.tsx","webpack://telegram-t/./src/components/left/settings/SettingsCustomEmoji.tsx","webpack://telegram-t/./src/components/left/settings/SettingsDataStorage.tsx","webpack://telegram-t/./src/components/left/settings/SettingsDoNotTranslate.module.scss?24c7","webpack://telegram-t/./src/components/left/settings/SettingsDoNotTranslate.tsx","webpack://telegram-t/./src/components/common/ManageUsernames.tsx","webpack://telegram-t/./src/components/common/ManageUsernames.module.scss?3086","webpack://telegram-t/./src/components/common/UsernameInput.tsx","webpack://telegram-t/./src/components/left/settings/SettingsEditProfile.tsx","webpack://telegram-t/./src/components/left/settings/SettingsExperimental.tsx","webpack://telegram-t/./src/components/left/settings/SettingsGeneral.tsx","webpack://telegram-t/./src/components/left/settings/WallpaperTile.tsx","webpack://telegram-t/./src/components/left/settings/SettingsGeneralBackground.tsx","webpack://telegram-t/./src/components/left/settings/SettingsGeneralBackgroundColor.tsx","webpack://telegram-t/./src/components/left/settings/SettingsHeader.tsx","webpack://telegram-t/./src/hooks/useMultiClick.ts","webpack://telegram-t/./src/components/left/settings/SettingsLanguage.tsx","webpack://telegram-t/./src/components/left/settings/SettingsMain.tsx","webpack://telegram-t/./src/components/left/settings/SettingsNotifications.tsx","webpack://telegram-t/./src/components/left/settings/SettingsPerformance.tsx","webpack://telegram-t/./src/components/left/settings/SettingsPrivacy.tsx","webpack://telegram-t/./src/components/left/settings/BlockUserModal.tsx","webpack://telegram-t/./src/components/left/settings/SettingsPrivacyBlockedUsers.tsx","webpack://telegram-t/./src/components/left/settings/helpers/privacy.ts","webpack://telegram-t/./src/components/left/settings/SettingsPrivacyLastSeen.tsx","webpack://telegram-t/./src/components/left/settings/SettingsPrivacyPublicPhoto.module.scss?04c5","webpack://telegram-t/./src/components/left/settings/SettingsPrivacyPublicProfilePhoto.tsx","webpack://telegram-t/./src/components/left/settings/SettingsPrivacyVisibility.tsx","webpack://telegram-t/./src/components/left/settings/SettingsPrivacyVisibilityExceptionList.tsx","webpack://telegram-t/./src/components/left/settings/SettingsQuickReaction.tsx","webpack://telegram-t/./src/components/left/settings/SettingsStickers.tsx","webpack://telegram-t/./src/components/left/settings/twoFa/SettingsTwoFaCongratulations.tsx","webpack://telegram-t/./src/components/left/settings/twoFa/SettingsTwoFaEmailCode.tsx","webpack://telegram-t/./src/components/left/settings/twoFa/SettingsTwoFaEnabled.tsx","webpack://telegram-t/./src/components/left/settings/twoFa/SettingsTwoFaSkippableForm.tsx","webpack://telegram-t/./src/components/left/settings/twoFa/SettingsTwoFaStart.tsx","webpack://telegram-t/./src/components/left/settings/twoFa/SettingsTwoFa.tsx","webpack://telegram-t/./src/components/left/settings/Settings.tsx","webpack://telegram-t/./src/components/left/main/ContactList.tsx","webpack://telegram-t/./src/components/left/newChat/NewChatStep1.tsx","webpack://telegram-t/./src/components/left/newChat/NewChatStep2.tsx","webpack://telegram-t/./src/components/left/newChat/NewChat.tsx","webpack://telegram-t/./src/components/story/StoryToggler.module.scss?58fa","webpack://telegram-t/./src/components/story/helpers/ribbonAnimation.ts","webpack://telegram-t/./src/components/story/StoryRibbonButton.tsx","webpack://telegram-t/./src/components/story/StoryRibbon.tsx","webpack://telegram-t/./src/components/story/StoryToggler.tsx","webpack://telegram-t/./src/components/left/ArchivedChats.tsx","webpack://telegram-t/./src/components/left/ChatFolderModal.tsx","webpack://telegram-t/./src/components/left/ChatFolderModal.module.scss?6993","webpack://telegram-t/./src/components/left/MuteChatModal.tsx","webpack://telegram-t/./src/components/middle/message/helpers/getSelectionAsFormattedText.ts","webpack://telegram-t/./src/components/common/PinMessageModal.async.tsx","webpack://telegram-t/./src/components/middle/message/helpers/copyOptions.ts","webpack://telegram-t/./src/components/middle/message/ReadTimeMenuItem.module.scss?c38f","webpack://telegram-t/./src/components/middle/message/ReadTimeMenuItem.tsx","webpack://telegram-t/./src/components/middle/message/MessageContextMenu.tsx","webpack://telegram-t/./src/components/middle/message/ContextMenuContainer.tsx","webpack://telegram-t/./src/components/middle/message/helpers/isSelectionRangeInsideMessage.ts","webpack://telegram-t/./src/components/middle/message/SponsoredMessageContextMenuContainer.tsx","webpack://telegram-t/./src/components/common/StickerSetModal.tsx","webpack://telegram-t/./src/components/common/CustomEmojiSetsModal.module.scss?b138","webpack://telegram-t/./src/components/common/CustomEmojiSetsModal.tsx","webpack://telegram-t/./src/components/middle/HeaderMenuContainer.tsx","webpack://telegram-t/./src/components/middle/search/MiddleSearchResult.module.scss?f0ab","webpack://telegram-t/./src/components/middle/search/MiddleSearchResult.tsx","webpack://telegram-t/./src/components/middle/search/MiddleSearch.module.scss?725f","webpack://telegram-t/./src/components/middle/search/MiddleSearch.tsx","webpack://telegram-t/./src/hooks/events/useOutsideClick.ts","webpack://telegram-t/./src/components/middle/composer/StickerPicker.tsx","webpack://telegram-t/./src/components/middle/message/reactions/ReactionPickerLimited.tsx","webpack://telegram-t/./src/components/middle/message/reactions/ReactionPickerLimited.module.scss?0536","webpack://telegram-t/./src/components/middle/message/reactions/ReactionPicker.tsx","webpack://telegram-t/./src/components/middle/message/reactions/ReactionPicker.module.scss?695a","webpack://telegram-t/./src/components/middle/composer/helpers/getHtmlTextLength.ts","webpack://telegram-t/./src/components/middle/composer/AttachmentModalItem.module.scss?41a0","webpack://telegram-t/./src/components/middle/composer/AttachmentModalItem.tsx","webpack://telegram-t/./src/util/findInViewport.ts","webpack://telegram-t/./src/util/isFullyVisible.ts","webpack://telegram-t/./src/util/setTooltipItemVisible.ts","webpack://telegram-t/./src/components/middle/composer/hooks/useKeyboardNavigation.ts","webpack://telegram-t/./src/components/middle/composer/MentionTooltip.tsx","webpack://telegram-t/./src/components/middle/composer/AttachmentModal.module.scss?23ea","webpack://telegram-t/./src/components/middle/composer/AttachmentModal.tsx","webpack://telegram-t/./src/components/middle/composer/PollModal.tsx","webpack://telegram-t/./src/components/middle/composer/EmojiButton.tsx","webpack://telegram-t/./src/components/middle/composer/EmojiCategory.tsx","webpack://telegram-t/./src/components/middle/composer/EmojiPicker.tsx","webpack://telegram-t/./src/components/common/GifButton.tsx","webpack://telegram-t/./src/components/middle/composer/GifPicker.tsx","webpack://telegram-t/./src/components/middle/composer/SymbolMenuFooter.tsx","webpack://telegram-t/./src/components/middle/composer/SymbolMenu.tsx","webpack://telegram-t/./src/components/middle/composer/ChatCommand.tsx","webpack://telegram-t/./src/components/middle/composer/ChatCommandTooltip.tsx","webpack://telegram-t/./src/components/middle/composer/ChatCommandTooltip.module.scss?f347","webpack://telegram-t/./src/components/middle/composer/BotCommandMenu.tsx","webpack://telegram-t/./src/components/middle/composer/StickerTooltip.tsx","webpack://telegram-t/./src/components/middle/composer/CustomEmojiTooltip.module.scss?c44f","webpack://telegram-t/./src/components/middle/composer/CustomEmojiTooltip.tsx","webpack://telegram-t/./src/components/middle/composer/CustomSendMenu.tsx","webpack://telegram-t/./src/components/middle/composer/TextFormatter.tsx","webpack://telegram-t/./src/util/getKeyFromEvent.ts","webpack://telegram-t/./src/components/middle/composer/CustomEmojiButton.tsx","webpack://telegram-t/./src/components/middle/composer/EmojiTooltip.tsx","webpack://telegram-t/./src/components/middle/composer/inlineResults/BaseResult.tsx","webpack://telegram-t/./src/components/middle/composer/inlineResults/ArticleResult.tsx","webpack://telegram-t/./src/components/middle/composer/inlineResults/GifResult.tsx","webpack://telegram-t/./src/components/middle/composer/inlineResults/MediaResult.tsx","webpack://telegram-t/./src/components/middle/composer/inlineResults/StickerResult.tsx","webpack://telegram-t/./src/components/middle/composer/InlineBotTooltip.tsx","webpack://telegram-t/./src/components/middle/composer/SendAsMenu.tsx","webpack://telegram-t/./src/components/right/StickerSetResult.tsx","webpack://telegram-t/./src/components/right/StickerSearch.tsx","webpack://telegram-t/./src/components/right/GifSearch.tsx","webpack://telegram-t/./src/components/right/statistics/StatisticsRecentPost.module.scss?fea0","webpack://telegram-t/./src/components/right/statistics/StatisticsRecentPostMeta.tsx","webpack://telegram-t/./src/components/right/statistics/StatisticsRecentMessage.tsx","webpack://telegram-t/./src/components/right/statistics/StatisticsRecentStory.tsx","webpack://telegram-t/./src/components/right/statistics/Statistics.module.scss?96a0","webpack://telegram-t/./src/components/right/statistics/Statistics.tsx","webpack://telegram-t/./src/components/right/statistics/StatisticsPublicForward.module.scss?bbd6","webpack://telegram-t/./src/components/right/statistics/StatisticsMessagePublicForward.tsx","webpack://telegram-t/./src/components/right/statistics/MessageStatistics.tsx","webpack://telegram-t/./src/components/right/statistics/StatisticsStoryPublicForward.tsx","webpack://telegram-t/./src/components/right/statistics/StoryStatistics.tsx","webpack://telegram-t/./src/components/right/PollAnswerResults.tsx","webpack://telegram-t/./src/components/right/PollResults.tsx","webpack://telegram-t/./src/components/right/ManageTopic.module.scss?04dd","webpack://telegram-t/./src/components/right/CreateTopic.tsx","webpack://telegram-t/./src/components/right/EditTopic.tsx","webpack://telegram-t/./src/components/right/management/ManageBot.tsx","webpack://telegram-t/./src/components/right/management/ManageChannel.tsx","webpack://telegram-t/./src/components/right/management/ManageChatAdministrators.tsx","webpack://telegram-t/./src/components/right/management/ManageChatPrivacyType.tsx","webpack://telegram-t/./src/components/right/management/RemoveGroupUserModal.tsx","webpack://telegram-t/./src/components/right/management/ManageChatRemovedUsers.tsx","webpack://telegram-t/./src/components/right/management/ManageDiscussion.tsx","webpack://telegram-t/./src/components/right/management/ManageGroup.tsx","webpack://telegram-t/./src/components/right/management/ManageGroupAdminRights.tsx","webpack://telegram-t/./src/components/right/management/ManageGroupMembers.tsx","webpack://telegram-t/./src/components/right/management/ManageGroupPermissions.tsx","webpack://telegram-t/./src/components/right/management/ManageGroupUserPermissions.tsx","webpack://telegram-t/./src/components/right/management/ManageGroupUserPermissionsCreate.tsx","webpack://telegram-t/./src/components/right/management/ManageInvite.tsx","webpack://telegram-t/./src/components/right/management/ManageInviteInfo.tsx","webpack://telegram-t/./src/components/right/management/ManageInvites.tsx","webpack://telegram-t/./src/components/right/management/JoinRequest.tsx","webpack://telegram-t/./src/components/right/management/ManageJoinRequests.tsx","webpack://telegram-t/./src/components/right/management/ManageReactions.tsx","webpack://telegram-t/./src/components/right/management/ManageUser.tsx","webpack://telegram-t/./src/components/right/management/Management.tsx","webpack://telegram-t/./src/components/common/helpers/detectCardType.ts","webpack://telegram-t/./src/hooks/reducers/usePaymentReducer.ts","webpack://telegram-t/./src/components/payment/Checkout.module.scss?4e47","webpack://telegram-t/./src/components/payment/Checkout.tsx","webpack://telegram-t/./src/components/payment/ConfirmPayment.tsx","webpack://telegram-t/./src/components/payment/PasswordConfirm.tsx","webpack://telegram-t/./src/hooks/useFocusAfterAnimation.ts","webpack://telegram-t/./src/components/payment/CardInput.tsx","webpack://telegram-t/./src/components/middle/helpers/inputFormatters.ts","webpack://telegram-t/./src/components/payment/ExpiryInput.tsx","webpack://telegram-t/./src/components/payment/PaymentInfo.tsx","webpack://telegram-t/./src/components/payment/SavedPaymentCredentials.tsx","webpack://telegram-t/./src/components/payment/Shipping.tsx","webpack://telegram-t/./src/components/payment/ShippingInfo.tsx","webpack://telegram-t/./src/components/payment/PaymentModal.tsx","webpack://telegram-t/./src/components/payment/ReceiptModal.tsx","webpack://telegram-t/./src/components/modals/inviteViaLink/InviteViaLinkModal.module.scss?717b","webpack://telegram-t/./src/components/modals/inviteViaLink/InviteViaLinkModal.tsx","webpack://telegram-t/./src/components/modals/oneTimeMedia/OneTimeMediaModal.module.scss?de6c","webpack://telegram-t/./src/components/modals/oneTimeMedia/OneTimeMediaModal.tsx","webpack://telegram-t/./src/components/common/PasswordMonkey.tsx"],"sourcesContent":["import type {\n  ApiMessage, ApiPeer, ApiPeerPhotos, ApiSponsoredMessage,\n} from '../../../api/types';\nimport type { MediaViewerMedia } from '../../../types';\n\nimport { getMessageContent, isDocumentPhoto, isDocumentVideo } from '../../../global/helpers';\n\nexport type MediaViewerItem = {\n  type: 'message';\n  message: ApiMessage;\n  mediaIndex?: number;\n} | {\n  type: 'avatar';\n  avatarOwner: ApiPeer;\n  profilePhotos: ApiPeerPhotos;\n  mediaIndex: number;\n} | {\n  type: 'standalone';\n  media: MediaViewerMedia[];\n  mediaIndex: number;\n} | {\n  type: 'sponsoredMessage';\n  message: ApiSponsoredMessage;\n  mediaIndex?: number;\n};\n\ntype ViewableMedia = {\n  media: MediaViewerMedia;\n  isSingle?: boolean;\n};\n\nexport function getMediaViewerItem({\n  message, avatarOwner, profilePhotos, standaloneMedia, mediaIndex, sponsoredMessage,\n}: {\n  message?: ApiMessage;\n  avatarOwner?: ApiPeer;\n  profilePhotos?: ApiPeerPhotos;\n  standaloneMedia?: MediaViewerMedia[];\n  sponsoredMessage?: ApiSponsoredMessage;\n  mediaIndex?: number;\n}): MediaViewerItem | undefined {\n  if (avatarOwner && profilePhotos) {\n    return {\n      type: 'avatar',\n      avatarOwner,\n      profilePhotos,\n      mediaIndex: mediaIndex!,\n    };\n  }\n\n  if (standaloneMedia) {\n    return {\n      type: 'standalone',\n      media: standaloneMedia!,\n      mediaIndex: mediaIndex!,\n    };\n  }\n\n  if (message) {\n    return {\n      type: 'message',\n      message,\n      mediaIndex,\n    };\n  }\n\n  if (sponsoredMessage) {\n    return {\n      type: 'sponsoredMessage',\n      message: sponsoredMessage,\n      mediaIndex,\n    };\n  }\n\n  return undefined;\n}\n\nexport default function getViewableMedia(params?: MediaViewerItem): ViewableMedia | undefined {\n  if (!params) return undefined;\n\n  if (params.type === 'standalone') {\n    return {\n      media: params.media[params.mediaIndex],\n      isSingle: params.media.length === 1,\n    };\n  }\n\n  if (params.type === 'avatar') {\n    const avatar = params.profilePhotos?.photos[params.mediaIndex];\n    if (avatar) {\n      return {\n        media: avatar,\n      };\n    }\n    return undefined;\n  }\n\n  const {\n    action, document, photo, video, webPage, paidMedia,\n  } = getMessageContent(params.message);\n\n  if (action?.photo) {\n    return {\n      media: action.photo,\n      isSingle: true,\n    };\n  }\n\n  if (document && (isDocumentPhoto(document) || isDocumentVideo(document))) {\n    return {\n      media: document,\n    };\n  }\n\n  if (webPage) {\n    const { photo: webPagePhoto, video: webPageVideo } = webPage;\n    const media = webPageVideo || webPagePhoto;\n    if (media) {\n      return {\n        media,\n        isSingle: true,\n      };\n    }\n  }\n\n  if (paidMedia) {\n    const extendedMedia = paidMedia.extendedMedia[params.mediaIndex || 0];\n    if (!('mediaType' in extendedMedia)) {\n      const { photo: extendedPhoto, video: extendedVideo } = extendedMedia;\n      return {\n        media: (extendedPhoto || extendedVideo)!,\n      };\n    }\n  }\n\n  const media = video || photo;\n\n  if (media) {\n    return {\n      media,\n      isSingle: video?.isGif,\n    };\n  }\n\n  return undefined;\n}\n","import type { ApiDimensions, ApiMessage } from '../../../api/types';\nimport { MediaViewerOrigin } from '../../../types';\n\nimport { ANIMATION_END_DELAY, MESSAGE_CONTENT_SELECTOR } from '../../../config';\nimport { requestMutation } from '../../../lib/fasterdom/fasterdom';\nimport { getMessageHtmlId } from '../../../global/helpers';\nimport { applyStyles } from '../../../util/animation';\nimport { isElementInViewport } from '../../../util/isElementInViewport';\nimport stopEvent from '../../../util/stopEvent';\nimport { IS_TOUCH_ENV } from '../../../util/windowEnvironment';\nimport windowSize from '../../../util/windowSize';\nimport {\n  calculateDimensions,\n  getMediaViewerAvailableDimensions,\n  MEDIA_VIEWER_MEDIA_QUERY,\n  REM,\n} from '../../common/helpers/mediaDimensions';\n\nconst ANIMATION_DURATION = 200;\n\nexport function animateOpening(\n  hasFooter: boolean,\n  origin: MediaViewerOrigin,\n  bestImageData: string,\n  dimensions: ApiDimensions,\n  isVideo: boolean,\n  message?: ApiMessage,\n  mediaIndex?: number,\n) {\n  const { mediaEl: fromImage } = getNodes(origin, message, mediaIndex);\n  if (!fromImage) {\n    return;\n  }\n\n  const { width: windowWidth } = windowSize.get();\n  const {\n    width: availableWidth, height: availableHeight,\n  } = getMediaViewerAvailableDimensions(hasFooter, isVideo);\n  const { width: toWidth, height: toHeight } = calculateDimensions(\n    availableWidth, availableHeight, dimensions.width, dimensions.height,\n  );\n  const toLeft = (windowWidth - toWidth) / 2;\n  const toTop = getTopOffset(hasFooter) + (availableHeight - toHeight) / 2;\n\n  let {\n    top: fromTop, left: fromLeft, width: fromWidth, height: fromHeight,\n  } = fromImage.getBoundingClientRect();\n\n  if ([\n    MediaViewerOrigin.SharedMedia,\n    MediaViewerOrigin.Album,\n    MediaViewerOrigin.ScheduledAlbum,\n    MediaViewerOrigin.SearchResult,\n  ].includes(origin)) {\n    const uncovered = uncover(toWidth, toHeight, fromTop, fromLeft, fromWidth, fromHeight);\n    fromTop = uncovered.top;\n    fromLeft = uncovered.left;\n    fromWidth = uncovered.width;\n    fromHeight = uncovered.height;\n  }\n\n  const fromTranslateX = (fromLeft + fromWidth / 2) - (toLeft + toWidth / 2);\n  const fromTranslateY = (fromTop + fromHeight / 2) - (toTop + toHeight / 2);\n  const fromScaleX = fromWidth / toWidth;\n  const fromScaleY = fromHeight / toHeight;\n\n  requestMutation(() => {\n    const ghost = createGhost(bestImageData || fromImage);\n    applyStyles(ghost, {\n      top: `${toTop}px`,\n      left: `${toLeft}px`,\n      width: `${toWidth}px`,\n      height: `${toHeight}px`,\n      transform: `translate3d(${fromTranslateX}px, ${fromTranslateY}px, 0) scale(${fromScaleX}, ${fromScaleY})`,\n    });\n    applyShape(ghost, origin);\n\n    document.body.appendChild(ghost);\n    document.body.classList.add('ghost-animating');\n\n    requestMutation(() => {\n      ghost.style.transform = '';\n      clearShape(ghost);\n\n      setTimeout(() => {\n        requestMutation(() => {\n          if (document.body.contains(ghost)) {\n            document.body.removeChild(ghost);\n          }\n          document.body.classList.remove('ghost-animating');\n        });\n      }, ANIMATION_DURATION + ANIMATION_END_DELAY);\n    });\n  });\n}\n\nexport function animateClosing(\n  origin: MediaViewerOrigin, bestImageData: string, message?: ApiMessage, mediaIndex?: number,\n) {\n  const { container, mediaEl: toImage } = getNodes(origin, message, mediaIndex);\n  if (!toImage) {\n    return;\n  }\n\n  const fromImage = document.getElementById('MediaViewer')!.querySelector<HTMLImageElement>(\n    '.MediaViewerSlide--active img, .MediaViewerSlide--active video',\n  );\n  if (!fromImage) {\n    return;\n  }\n\n  const {\n    top: fromTop, left: fromLeft, width: fromWidth, height: fromHeight,\n  } = fromImage.getBoundingClientRect();\n  const {\n    top: targetTop, left: toLeft, width: toWidth, height: toHeight,\n  } = toImage.getBoundingClientRect();\n\n  let toTop = targetTop;\n  if (!isElementInViewport(container)) {\n    const { height: windowHeight } = windowSize.get();\n    toTop = targetTop < fromTop ? -toHeight : windowHeight;\n  }\n\n  const fromTranslateX = (fromLeft + fromWidth / 2) - (toLeft + toWidth / 2);\n  const fromTranslateY = (fromTop + fromHeight / 2) - (toTop + toHeight / 2);\n  let fromScaleX = fromWidth / toWidth;\n  let fromScaleY = fromHeight / toHeight;\n\n  const shouldFadeOut = (\n    [MediaViewerOrigin.Inline, MediaViewerOrigin.ScheduledInline].includes(origin)\n    && !isMessageImageFullyVisible(container, toImage)\n  ) || (\n    [MediaViewerOrigin.Album, MediaViewerOrigin.ScheduledAlbum].includes(origin)\n    && !isMessageImageFullyVisible(container, toImage)\n  );\n\n  if ([\n    MediaViewerOrigin.SharedMedia,\n    MediaViewerOrigin.Album,\n    MediaViewerOrigin.ScheduledAlbum,\n    MediaViewerOrigin.SearchResult,\n  ].includes(origin)) {\n    if (fromScaleX > fromScaleY) {\n      fromScaleX = fromScaleY;\n    } else if (fromScaleY > fromScaleX) {\n      fromScaleY = fromScaleX;\n    }\n  }\n\n  const existingGhost = document.getElementsByClassName('ghost')[0] as HTMLDivElement;\n  const ghost = existingGhost || createGhost(bestImageData || toImage, origin);\n\n  let styles: Record<string, string>;\n  if (existingGhost) {\n    const {\n      top, left, width, height,\n    } = existingGhost.getBoundingClientRect();\n    const scaleX = width / toWidth;\n    const scaleY = height / toHeight;\n\n    styles = {\n      transition: 'none',\n      top: `${toTop}px`,\n      left: `${toLeft}px`,\n      transformOrigin: 'top left',\n      transform: `translate3d(${left - toLeft}px, ${top - toTop}px, 0) scale(${scaleX}, ${scaleY})`,\n      width: `${toWidth}px`,\n      height: `${toHeight}px`,\n    };\n  } else {\n    styles = {\n      top: `${toTop}px`,\n      left: `${toLeft}px`,\n      width: `${toWidth}px`,\n      height: `${toHeight}px`,\n      transform: `translate3d(${fromTranslateX}px, ${fromTranslateY}px, 0) scale(${fromScaleX}, ${fromScaleY})`,\n    };\n  }\n\n  requestMutation(() => {\n    applyStyles(ghost, styles);\n    if (!existingGhost) document.body.appendChild(ghost);\n    document.body.classList.add('ghost-animating');\n\n    requestMutation(() => {\n      if (existingGhost) {\n        existingGhost.style.transition = '';\n      }\n\n      ghost.style.transform = '';\n\n      if (shouldFadeOut) {\n        ghost.style.opacity = '0';\n      }\n\n      applyShape(ghost, origin);\n\n      setTimeout(() => {\n        requestMutation(() => {\n          if (document.body.contains(ghost)) {\n            document.body.removeChild(ghost);\n          }\n          document.body.classList.remove('ghost-animating');\n        });\n      }, ANIMATION_DURATION + ANIMATION_END_DELAY);\n    });\n  });\n}\n\nfunction createGhost(source: string | HTMLImageElement | HTMLVideoElement, origin?: MediaViewerOrigin) {\n  const ghost = document.createElement('div');\n  ghost.classList.add('ghost');\n\n  const img = new Image();\n  img.draggable = false;\n  img.oncontextmenu = stopEvent;\n\n  if (typeof source === 'string') {\n    img.src = source;\n  } else if (source instanceof HTMLVideoElement) {\n    img.src = source.poster;\n  } else {\n    img.src = source.src;\n  }\n\n  ghost.appendChild(img);\n\n  if (origin === MediaViewerOrigin.ProfileAvatar || origin === MediaViewerOrigin.SettingsAvatar) {\n    ghost.classList.add('ProfileInfo');\n    if (origin === MediaViewerOrigin.SettingsAvatar) {\n      ghost.classList.add('self');\n    }\n    const profileInfo = document.querySelector(\n      origin === MediaViewerOrigin.ProfileAvatar\n        ? '#RightColumn .ProfileInfo .info'\n        : '#Settings .ProfileInfo .info',\n    );\n    if (profileInfo) {\n      ghost.appendChild(profileInfo.cloneNode(true));\n    }\n  }\n\n  return ghost;\n}\n\nfunction uncover(realWidth: number, realHeight: number, top: number, left: number, width: number, height: number) {\n  if (realWidth === realHeight) {\n    const size = Math.max(width, height) * (realWidth / realHeight);\n    left -= (size - width) / 2;\n    top -= (size - height) / 2;\n    width = size;\n    height = size;\n  } else if (realWidth > realHeight) {\n    const srcWidth = width;\n    width = height * (realWidth / realHeight);\n    left -= (width - srcWidth) / 2;\n  } else if (realHeight > realWidth) {\n    const srcHeight = height;\n    height = width * (realHeight / realWidth);\n    top -= (height - srcHeight) / 2;\n  }\n\n  return {\n    top, left, width, height,\n  };\n}\n\nfunction isMessageImageFullyVisible(container: HTMLElement, imageEl: HTMLElement) {\n  const messageListElement = document.querySelector<HTMLDivElement>('.Transition_slide-active > .MessageList')!;\n  let imgOffsetTop = container.offsetTop + imageEl.closest<HTMLDivElement>('.content-inner, .WebPage')!.offsetTop;\n  if (container.id.includes('album-media-')) {\n    imgOffsetTop += container.parentElement!.offsetTop + container.closest<HTMLDivElement>('.Message')!.offsetTop;\n  }\n\n  return imgOffsetTop > messageListElement.scrollTop\n    && imgOffsetTop + imageEl.offsetHeight < messageListElement.scrollTop + messageListElement.offsetHeight;\n}\n\nfunction getTopOffset(hasFooter: boolean) {\n  const mql = window.matchMedia(MEDIA_VIEWER_MEDIA_QUERY);\n  let topOffsetRem = 4.125;\n  if (hasFooter && !IS_TOUCH_ENV) {\n    topOffsetRem += mql.matches ? 0.875 : 2.125;\n  }\n\n  return topOffsetRem * REM;\n}\n\nfunction getNodes(origin: MediaViewerOrigin, message?: ApiMessage, index?: number) {\n  let containerSelector;\n  let mediaSelector;\n\n  switch (origin) {\n    case MediaViewerOrigin.Album:\n    case MediaViewerOrigin.ScheduledAlbum:\n      // eslint-disable-next-line max-len\n      containerSelector = `.Transition_slide-active > .MessageList #album-media-${getMessageHtmlId(message!.id, index)}`;\n      mediaSelector = '.full-media';\n      break;\n\n    case MediaViewerOrigin.PreviewMedia:\n      containerSelector = `#preview-media${index}`;\n      mediaSelector = 'img';\n      break;\n\n    case MediaViewerOrigin.SharedMedia:\n      containerSelector = `#shared-media${getMessageHtmlId(message!.id, index)}`;\n      mediaSelector = 'img';\n      break;\n\n    case MediaViewerOrigin.SearchResult:\n      containerSelector = `#search-media${getMessageHtmlId(message!.id, index)}`;\n      mediaSelector = 'img';\n      break;\n\n    case MediaViewerOrigin.MiddleHeaderAvatar:\n      containerSelector = '.MiddleHeader .Transition_slide-active .ChatInfo .Avatar';\n      mediaSelector = '.avatar-media';\n      break;\n\n    case MediaViewerOrigin.SettingsAvatar:\n      containerSelector = '#Settings .ProfileInfo .Transition_slide-active .ProfilePhoto';\n      mediaSelector = '.avatar-media';\n      break;\n\n    case MediaViewerOrigin.ProfileAvatar:\n      containerSelector = '#RightColumn .ProfileInfo .Transition_slide-active .ProfilePhoto';\n      mediaSelector = '.avatar-media';\n      break;\n\n    case MediaViewerOrigin.SuggestedAvatar:\n      containerSelector = `.Transition_slide-active > .MessageList #${getMessageHtmlId(message!.id, index)}`;\n      mediaSelector = '.Avatar img';\n      break;\n\n    case MediaViewerOrigin.StarsTransaction:\n      containerSelector = '.transaction-media-preview';\n      mediaSelector = index === 0 ? `.stars-transaction-media-${index} :is(img, video)` : undefined;\n      break;\n\n    case MediaViewerOrigin.SponsoredMessage:\n      containerSelector = '.Transition_slide-active > .MessageList .sponsored-media-preview';\n      mediaSelector = `${MESSAGE_CONTENT_SELECTOR} .full-media,${MESSAGE_CONTENT_SELECTOR} .thumbnail:not(.blurred-bg)`;\n      break;\n\n    case MediaViewerOrigin.ScheduledInline:\n    case MediaViewerOrigin.Inline:\n    default:\n      containerSelector = `.Transition_slide-active > .MessageList #${getMessageHtmlId(message!.id, index)}`;\n      mediaSelector = `${MESSAGE_CONTENT_SELECTOR} .full-media,${MESSAGE_CONTENT_SELECTOR} .thumbnail:not(.blurred-bg)`;\n  }\n\n  const container = document.querySelector<HTMLElement>(containerSelector)!;\n  const mediaEls = mediaSelector\n    ? container?.querySelectorAll<HTMLImageElement | HTMLVideoElement>(mediaSelector) : undefined;\n\n  return {\n    container,\n    mediaEl: mediaEls?.[0],\n  };\n}\n\nfunction applyShape(ghost: HTMLDivElement, origin: MediaViewerOrigin) {\n  switch (origin) {\n    case MediaViewerOrigin.Album:\n    case MediaViewerOrigin.ScheduledAlbum:\n    case MediaViewerOrigin.Inline:\n    case MediaViewerOrigin.ScheduledInline:\n    case MediaViewerOrigin.StarsTransaction:\n    case MediaViewerOrigin.PreviewMedia:\n      ghost.classList.add('rounded-corners');\n      break;\n\n    case MediaViewerOrigin.SharedMedia:\n    case MediaViewerOrigin.SettingsAvatar:\n    case MediaViewerOrigin.ProfileAvatar:\n    case MediaViewerOrigin.SearchResult:\n      (ghost.firstChild as HTMLElement).style.objectFit = 'cover';\n      break;\n\n    case MediaViewerOrigin.MiddleHeaderAvatar:\n    case MediaViewerOrigin.SuggestedAvatar:\n      ghost.classList.add('circle');\n      if (origin === MediaViewerOrigin.SuggestedAvatar) {\n        ghost.classList.add('transition-circle');\n      }\n      break;\n  }\n}\n\nfunction clearShape(ghost: HTMLDivElement) {\n  (ghost.firstChild as HTMLElement).style.objectFit = 'default';\n  ghost.classList.remove('rounded-corners', 'circle');\n}\n","import { useCallback, useLayoutEffect, useState } from '../lib/teact/teact';\n\nimport { DEBUG } from '../config';\nimport safePlay, { getIsVideoPlaying } from '../util/safePlay';\nimport { createSignal } from '../util/signals';\nimport { IS_IOS, IS_PWA } from '../util/windowEnvironment';\n\ntype RefType = {\n  current: HTMLVideoElement | null;\n};\n\ntype ReturnType = [boolean, () => void, boolean] | [false];\ntype CallbackType = () => void;\n\nconst signal = createSignal(false);\nconst setIsPictureInPicture = signal[1];\n\nexport function usePictureInPictureSignal() {\n  return signal;\n}\n\nexport default function usePictureInPicture(\n  elRef: RefType,\n  onEnter: CallbackType,\n  onLeave: CallbackType,\n): ReturnType {\n  const [isSupported, setIsSupported] = useState(false);\n  const [isActive, setIsActive] = useState(false);\n\n  useLayoutEffect(() => {\n    // PIP is not supported in PWA on iOS, despite being detected\n    if ((IS_IOS && IS_PWA) || !elRef.current) return undefined;\n    const video = elRef.current;\n    const setMode = getSetPresentationMode(video);\n    const isEnabled = (document.pictureInPictureEnabled && !elRef.current?.disablePictureInPicture)\n      || setMode !== undefined;\n    if (!isEnabled) return undefined;\n    // @ts-ignore\n    video.autoPictureInPicture = true;\n    setIsSupported(true);\n    const onEnterInternal = () => {\n      onEnter();\n      setIsActive(true);\n      setIsPictureInPicture(true);\n    };\n    const onLeaveInternal = () => {\n      setIsPictureInPicture(false);\n      setIsActive(false);\n      onLeave();\n    };\n    video.addEventListener('enterpictureinpicture', onEnterInternal);\n    video.addEventListener('leavepictureinpicture', onLeaveInternal);\n    return () => {\n      video.removeEventListener('enterpictureinpicture', onEnterInternal);\n      video.removeEventListener('leavepictureinpicture', onLeaveInternal);\n    };\n  }, [elRef, onEnter, onLeave]);\n\n  const exitPictureInPicture = useCallback(() => {\n    if (!elRef.current) return;\n    const video = elRef.current;\n    const setMode = getSetPresentationMode(video);\n    if (setMode) {\n      setMode('inline');\n    } else {\n      exitPictureInPictureIfNeeded();\n    }\n  }, [elRef]);\n\n  const enterPictureInPicture = useCallback(() => {\n    if (!elRef.current) return;\n    exitPictureInPicture();\n    const video = elRef.current;\n    const isPlaying = getIsVideoPlaying(video);\n    const setMode = getSetPresentationMode(video);\n    if (setMode) {\n      setMode('picture-in-picture');\n    } else {\n      requestPictureInPicture(video);\n    }\n    // Muted video stops in PiP mode, so we need to play it again\n    if (isPlaying) {\n      safePlay(video);\n    }\n  }, [elRef, exitPictureInPicture]);\n\n  if (!isSupported) {\n    return [false];\n  }\n\n  return [isSupported, enterPictureInPicture, isActive];\n}\n\nfunction getSetPresentationMode(video: HTMLVideoElement) {\n  // @ts-ignore\n  if (video.webkitSupportsPresentationMode && typeof video.webkitSetPresentationMode === 'function') {\n    // @ts-ignore\n    return video.webkitSetPresentationMode.bind(video);\n  }\n  return undefined;\n}\n\nfunction requestPictureInPicture(video: HTMLVideoElement) {\n  if (video.requestPictureInPicture) {\n    try {\n      video.requestPictureInPicture();\n    } catch (err) {\n      if (DEBUG) {\n        // eslint-disable-next-line no-console\n        console.log('[MV] PictureInPicture Error', err);\n      }\n    }\n  }\n}\n\nexport function exitPictureInPictureIfNeeded() {\n  if (document.pictureInPictureElement) {\n    try {\n      document.exitPictureInPicture();\n    } catch (err) {\n      if (DEBUG) {\n        // eslint-disable-next-line no-console\n        console.log('[MV] PictureInPicture Error', err);\n      }\n    }\n  }\n}\n","import { useEffect, useRef } from '../lib/teact/teact';\n\nimport fastBlur from '../lib/fastBlur';\nimport { imgToCanvas } from '../util/files';\nimport useForceUpdate from './useForceUpdate';\n\nconst RADIUS = 2;\nconst ITERATIONS = 2;\nconst MAX_CACHE_SIZE = 1000;\n\nconst cache = new Map<string, string>();\n\nexport default function useBlur(dataUri?: string, isDisabled = false, delay?: number) {\n  const blurredRef = useRef<string | undefined>(dataUri ? cache.get(dataUri) : undefined);\n  const timeoutRef = useRef<number>();\n  const forceUpdate = useForceUpdate();\n\n  if (timeoutRef.current && isDisabled) {\n    clearTimeout(timeoutRef.current);\n    timeoutRef.current = undefined;\n  }\n\n  useEffect(() => {\n    if (!dataUri || blurredRef.current || isDisabled) {\n      return;\n    }\n\n    const img = new Image();\n\n    img.onload = () => {\n      const canvas = imgToCanvas(img);\n      fastBlur(canvas.getContext('2d'), 0, 0, canvas.width, canvas.height, RADIUS, ITERATIONS);\n      const blurredDataUri = canvas.toDataURL();\n\n      blurredRef.current = blurredDataUri;\n      forceUpdate();\n\n      if (cache.size >= MAX_CACHE_SIZE) {\n        cache.clear();\n      }\n      cache.set(dataUri, blurredDataUri);\n    };\n\n    if (delay) {\n      timeoutRef.current = window.setTimeout(() => {\n        img.src = dataUri;\n      }, delay);\n    } else {\n      img.src = dataUri;\n    }\n  }, [dataUri, delay, forceUpdate, isDisabled]);\n\n  return blurredRef.current;\n}\n","import { useMemo } from '../../../lib/teact/teact';\n\nimport type { MediaViewerMedia } from '../../../types';\nimport { ApiMediaFormat } from '../../../api/types';\nimport { MediaViewerOrigin } from '../../../types';\n\nimport {\n  getMediaFileSize,\n  getMediaFormat,\n  getMediaHash,\n  getMediaThumbUri,\n  getPhotoFullDimensions,\n  getProfilePhotoMediaHash,\n  getVideoDimensions,\n  getVideoProfilePhotoMediaHash,\n  isDocumentPhoto,\n  isDocumentVideo,\n} from '../../../global/helpers';\nimport { AVATAR_FULL_DIMENSIONS, VIDEO_AVATAR_FULL_DIMENSIONS } from '../../common/helpers/mediaDimensions';\n\nimport useBlurSync from '../../../hooks/useBlurSync';\nimport useMedia from '../../../hooks/useMedia';\nimport useMediaWithLoadProgress from '../../../hooks/useMediaWithLoadProgress';\n\nconst FALLBACK_DIMENSIONS = AVATAR_FULL_DIMENSIONS;\n\ntype UseMediaProps = {\n  media?: MediaViewerMedia;\n  isAvatar?: boolean;\n  origin?: MediaViewerOrigin;\n  delay: number | false;\n};\n\nexport const useMediaProps = ({\n  media,\n  isAvatar,\n  origin,\n  delay,\n}: UseMediaProps) => {\n  const isPhotoAvatar = isAvatar && media?.mediaType === 'photo' && !media.isVideo;\n  const isVideoAvatar = isAvatar && media?.mediaType === 'photo' && media.isVideo;\n  const isDocument = media?.mediaType === 'document';\n  const isVideo = (media?.mediaType === 'video' && !media.isRound) || (isDocument && isDocumentVideo(media));\n  const isPhoto = media?.mediaType === 'photo' || (isDocument && isDocumentPhoto(media));\n  const isGif = media?.mediaType === 'video' && media.isGif;\n  const isFromSharedMedia = origin === MediaViewerOrigin.SharedMedia;\n  const isFromSearch = origin === MediaViewerOrigin.SearchResult;\n\n  const getMediaOrAvatarHash = useMemo(() => (isFull?: boolean) => {\n    if (!media) return undefined;\n\n    if ((isPhotoAvatar || isVideoAvatar) && !isFull) {\n      return getProfilePhotoMediaHash(media);\n    }\n\n    if (isVideoAvatar && isFull) {\n      return getVideoProfilePhotoMediaHash(media);\n    }\n\n    return getMediaHash(media, isFull ? 'full' : 'preview');\n  }, [isVideoAvatar, isPhotoAvatar, media]);\n\n  const pictogramBlobUrl = useMedia(\n    media\n    // Only use pictogram if it's already loaded\n    && (isFromSharedMedia || isFromSearch || isDocument)\n    && getMediaHash(media, 'pictogram'),\n    undefined,\n    ApiMediaFormat.BlobUrl,\n    delay,\n  );\n  const previewMediaHash = getMediaOrAvatarHash();\n  const previewBlobUrl = useMedia(\n    previewMediaHash,\n    undefined,\n    ApiMediaFormat.BlobUrl,\n    delay,\n  );\n  const {\n    mediaData: fullMediaBlobUrl,\n    loadProgress,\n  } = useMediaWithLoadProgress(\n    getMediaOrAvatarHash(true),\n    undefined,\n    media && getMediaFormat(media, 'full'),\n    delay,\n  );\n\n  const localBlobUrl = media && 'blobUrl' in media ? media.blobUrl : undefined;\n  let bestImageData = (!isVideo && (localBlobUrl || fullMediaBlobUrl)) || previewBlobUrl || pictogramBlobUrl;\n  const thumbDataUri = useBlurSync(!bestImageData && media && getMediaThumbUri(media));\n  if (!bestImageData && origin !== MediaViewerOrigin.SearchResult) {\n    bestImageData = thumbDataUri;\n  }\n  if (isVideoAvatar && previewBlobUrl) {\n    bestImageData = previewBlobUrl;\n  }\n  const bestData = localBlobUrl || fullMediaBlobUrl || (\n    (!isVideoAvatar && !isVideo) ? (previewBlobUrl || pictogramBlobUrl || bestImageData) : undefined\n  );\n\n  const mediaSize = media && getMediaFileSize(media);\n\n  const isLocal = Boolean(localBlobUrl);\n\n  const dimensions = useMemo(() => {\n    if (isAvatar) {\n      return isVideoAvatar ? VIDEO_AVATAR_FULL_DIMENSIONS : AVATAR_FULL_DIMENSIONS;\n    }\n\n    if (isDocument) {\n      return media.mediaSize!;\n    }\n\n    if (isPhoto) {\n      return getPhotoFullDimensions(media);\n    }\n\n    if (isVideo) {\n      return getVideoDimensions(media);\n    }\n\n    return FALLBACK_DIMENSIONS;\n  }, [isAvatar, isDocument, isPhoto, isVideo, isVideoAvatar, media]);\n\n  return {\n    getMediaHash: getMediaOrAvatarHash,\n    media,\n    isVideo,\n    isPhoto,\n    isGif,\n    isDocument,\n    bestImageData,\n    bestData,\n    dimensions,\n    isFromSharedMedia,\n    isVideoAvatar,\n    isLocal,\n    loadProgress,\n    mediaSize,\n  };\n};\n","import { useRef } from '../lib/teact/teact';\n\nimport fastBlur from '../lib/fastBlur';\nimport { imgToCanvas } from '../util/files';\nimport useBlur from './useBlur';\nimport useSyncEffect from './useSyncEffect';\n\nconst RADIUS = 2;\nconst ITERATIONS = 2;\n\nexport default function useBlurSync(dataUri: string | false | undefined) {\n  const blurredRef = useRef<string>();\n\n  let isChanged = false;\n\n  useSyncEffect(() => {\n    // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n    isChanged = true;\n\n    blurredRef.current = undefined;\n\n    if (!dataUri) {\n      return;\n    }\n\n    const img = new Image();\n    img.src = dataUri;\n    if (!img.width) {\n      return;\n    }\n\n    const canvas = imgToCanvas(img);\n    fastBlur(canvas.getContext('2d'), 0, 0, canvas.width, canvas.height, RADIUS, ITERATIONS);\n\n    blurredRef.current = canvas.toDataURL();\n  }, [dataUri]);\n\n  // Sometimes `Image` do not manage to load synchronously,\n  // so we fall back the non-blurred variant and prepare the async one at least for the next time\n  const blurredAsync = useBlur(dataUri || undefined, Boolean(blurredRef.current));\n\n  return blurredRef.current || (!isChanged && blurredAsync) || dataUri || undefined;\n}\n","import { useUnmountCleanup } from '../../../lib/teact/teact';\n\nimport { createSignal } from '../../../util/signals';\n\nconst [getZoomChange, setZoomChange] = createSignal(1);\n\nexport default function useZoomChange() {\n  useUnmountCleanup(() => {\n    setZoomChange(1);\n  });\n\n  return [getZoomChange, setZoomChange] as const;\n}\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport type { ApiPhoto } from '../../api/types';\n\nimport { isUserId } from '../../global/helpers';\n\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Button from '../ui/Button';\nimport Modal from '../ui/Modal';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  photo: ApiPhoto;\n  profileId: string;\n  onConfirm?: NoneToVoidFunction;\n  onClose: NoneToVoidFunction;\n};\n\nconst DeleteProfilePhotoModal: FC<OwnProps> = ({\n  isOpen,\n  photo,\n  profileId,\n  onClose,\n  onConfirm,\n}) => {\n  const {\n    deleteProfilePhoto,\n    deleteChatPhoto,\n  } = getActions();\n\n  const handleDeletePhoto = useCallback(() => {\n    onConfirm?.();\n    if (isUserId(profileId)) {\n      deleteProfilePhoto({ photo });\n    } else {\n      deleteChatPhoto({\n        photo,\n        chatId: profileId,\n      });\n    }\n    onClose();\n  }, [onConfirm, profileId, onClose, deleteProfilePhoto, photo, deleteChatPhoto]);\n\n  const lang = useOldLang();\n\n  return (\n    <Modal\n      isOpen={isOpen}\n      onClose={onClose}\n      onEnter={handleDeletePhoto}\n      className=\"delete dialog-buttons-column\"\n      title={lang('AreYouSure')}\n    >\n      <div className=\"dialog-buttons mt-2\">\n        <Button color=\"danger\" className=\"confirm-dialog-button\" isText onClick={handleDeletePhoto}>\n          {lang('Preview.DeletePhoto')}\n        </Button>\n        <Button className=\"confirm-dialog-button\" isText onClick={onClose}>{lang('Cancel')}</Button>\n      </div>\n    </Modal>\n  );\n};\n\nexport default memo(DeleteProfilePhotoModal);\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useMemo } from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { ActiveDownloads, MessageListType } from '../../global/types';\nimport type { MediaViewerOrigin } from '../../types';\nimport type { MenuItemProps } from '../ui/MenuItem';\nimport type { MediaViewerItem } from './helpers/getViewableMedia';\n\nimport {\n  getIsDownloading,\n  getMediaFilename,\n  getMediaFormat,\n  getMediaHash,\n  isUserId,\n} from '../../global/helpers';\nimport {\n  selectActiveDownloads,\n  selectAllowedMessageActionsSlow,\n  selectCurrentMessageList,\n  selectIsChatProtected,\n  selectIsMessageProtected,\n  selectTabState,\n} from '../../global/selectors';\nimport getViewableMedia from './helpers/getViewableMedia';\n\nimport useAppLayout from '../../hooks/useAppLayout';\nimport useFlag from '../../hooks/useFlag';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useMediaWithLoadProgress from '../../hooks/useMediaWithLoadProgress';\nimport useOldLang from '../../hooks/useOldLang';\nimport useZoomChange from './hooks/useZoomChangeSignal';\n\nimport DeleteProfilePhotoModal from '../common/DeleteProfilePhotoModal';\nimport Button from '../ui/Button';\nimport DropdownMenu from '../ui/DropdownMenu';\nimport MenuItem from '../ui/MenuItem';\nimport ProgressSpinner from '../ui/ProgressSpinner';\n\nimport './MediaViewerActions.scss';\n\ntype StateProps = {\n  activeDownloads: ActiveDownloads;\n  isProtected?: boolean;\n  isChatProtected?: boolean;\n  canDelete?: boolean;\n  canUpdate?: boolean;\n  messageListType?: MessageListType;\n  origin?: MediaViewerOrigin;\n};\n\ntype OwnProps = {\n  item?: MediaViewerItem;\n  mediaData?: string;\n  isVideo: boolean;\n  canUpdateMedia?: boolean;\n  canReport?: boolean;\n  activeDownloads?: ActiveDownloads;\n  onReport: NoneToVoidFunction;\n  onBeforeDelete: NoneToVoidFunction;\n  onCloseMediaViewer: NoneToVoidFunction;\n  onForward: NoneToVoidFunction;\n};\n\nconst MediaViewerActions: FC<OwnProps & StateProps> = ({\n  item,\n  mediaData,\n  isVideo,\n  isChatProtected,\n  isProtected,\n  canReport,\n  canDelete,\n  canUpdate,\n  messageListType,\n  activeDownloads,\n  origin,\n  onReport,\n  onCloseMediaViewer,\n  onBeforeDelete,\n  onForward,\n}) => {\n  const [isDeleteModalOpen, openDeleteModal, closeDeleteModal] = useFlag(false);\n  const [getZoomChange, setZoomChange] = useZoomChange();\n  const { isMobile } = useAppLayout();\n\n  const {\n    downloadMedia,\n    cancelMediaDownload,\n    updateProfilePhoto,\n    updateChatPhoto,\n    openMediaViewer,\n    openDeleteMessageModal,\n  } = getActions();\n\n  const isMessage = item?.type === 'message';\n\n  const { media } = getViewableMedia(item) || {};\n  const fileName = media && getMediaFilename(media);\n  const isDownloading = media && getIsDownloading(activeDownloads, media);\n\n  const { loadProgress: downloadProgress } = useMediaWithLoadProgress(\n    media && getMediaHash(media, 'download'),\n    !isDownloading,\n    media && getMediaFormat(media, 'download'),\n  );\n\n  const handleDownloadClick = useLastCallback(() => {\n    if (!media) return;\n\n    if (isDownloading) {\n      cancelMediaDownload({ media });\n    } else {\n      const message = item?.type === 'message' ? item.message : undefined;\n      downloadMedia({ media, originMessage: message });\n    }\n  });\n\n  const handleZoomOut = useLastCallback(() => {\n    const zoomChange = getZoomChange();\n    const change = zoomChange < 0 ? zoomChange : 0;\n    setZoomChange(change - 1);\n  });\n\n  const handleZoomIn = useLastCallback(() => {\n    const zoomChange = getZoomChange();\n    const change = zoomChange > 0 ? zoomChange : 0;\n    setZoomChange(change + 1);\n  });\n\n  const handleUpdate = useLastCallback(() => {\n    if (item?.type !== 'avatar') return;\n    const { avatarOwner, profilePhotos, mediaIndex } = item;\n    const avatarPhoto = profilePhotos?.photos[mediaIndex]!;\n    if (isUserId(avatarOwner.id)) {\n      updateProfilePhoto({ photo: avatarPhoto });\n    } else {\n      updateChatPhoto({ chatId: avatarOwner.id, photo: avatarPhoto });\n    }\n\n    openMediaViewer({\n      origin: origin!,\n      chatId: avatarOwner.id,\n      mediaIndex: 0,\n      isAvatarView: true,\n    }, {\n      forceOnHeavyAnimation: true,\n    });\n  });\n\n  const lang = useOldLang();\n\n  const MenuButton: FC<{ onTrigger: () => void; isOpen?: boolean }> = useMemo(() => {\n    return ({ onTrigger, isOpen }) => (\n      <Button\n        round\n        size=\"smaller\"\n        color=\"translucent\"\n        className={isOpen ? 'active' : undefined}\n        onClick={onTrigger}\n        ariaLabel=\"More actions\"\n      >\n        <i className=\"icon icon-more\" />\n      </Button>\n    );\n  }, []);\n\n  function renderDeleteModal() {\n    return (item?.type === 'avatar') ? (\n      <DeleteProfilePhotoModal\n        isOpen={isDeleteModalOpen}\n        onClose={closeDeleteModal}\n        onConfirm={onBeforeDelete}\n        profileId={item.avatarOwner.id}\n        photo={item.profilePhotos.photos[item.mediaIndex!]}\n      />\n    ) : undefined;\n  }\n\n  function renderDownloadButton() {\n    if (isProtected || item?.type === 'standalone') {\n      return undefined;\n    }\n\n    return item?.type !== 'sponsoredMessage' && (isVideo ? (\n      <Button\n        round\n        size=\"smaller\"\n        color=\"translucent-white\"\n        ariaLabel={lang('AccActionDownload')}\n        onClick={handleDownloadClick}\n      >\n        {isDownloading ? (\n          <ProgressSpinner progress={downloadProgress} size=\"s\" onClick={handleDownloadClick} />\n        ) : (\n          <i className=\"icon icon-download\" />\n        )}\n      </Button>\n    ) : (\n      <Button\n        href={mediaData}\n        download={fileName}\n        round\n        size=\"smaller\"\n        color=\"translucent-white\"\n        ariaLabel={lang('AccActionDownload')}\n      >\n        <i className=\"icon icon-download\" />\n      </Button>\n    ));\n  }\n\n  const openDeleteModalHandler = useLastCallback(() => {\n    if (item?.type === 'message') {\n      openDeleteMessageModal({\n        isSchedule: messageListType === 'scheduled',\n        message: item.message,\n        onConfirm: onBeforeDelete,\n      });\n    } else {\n      openDeleteModal();\n    }\n  });\n\n  if (isMobile) {\n    const menuItems: MenuItemProps[] = [];\n    if (isMessage && item.message.isForwardingAllowed && !item.message.content.action && !isChatProtected) {\n      menuItems.push({\n        icon: 'forward',\n        onClick: onForward,\n        children: lang('Forward'),\n      });\n    }\n    if (!isProtected) {\n      if (isVideo) {\n        menuItems.push({\n          icon: isDownloading ? 'close' : 'download',\n          onClick: handleDownloadClick,\n          children: isDownloading ? `${Math.round(downloadProgress * 100)}% Downloading...` : 'Download',\n        });\n      } else {\n        menuItems.push({\n          icon: 'download',\n          href: mediaData,\n          download: fileName,\n          children: lang('AccActionDownload'),\n        });\n      }\n    }\n\n    if (canReport) {\n      menuItems.push({\n        icon: 'flag',\n        onClick: onReport,\n        children: lang('ReportPeer.Report'),\n      });\n    }\n\n    if (canUpdate) {\n      menuItems.push({\n        icon: 'copy-media',\n        onClick: handleUpdate,\n        children: lang('ProfilePhoto.SetMainPhoto'),\n      });\n    }\n\n    if (canDelete) {\n      menuItems.push({\n        icon: 'delete',\n        onClick: openDeleteModalHandler,\n        children: lang('Delete'),\n        destructive: true,\n      });\n    }\n\n    if (menuItems.length === 0) {\n      return undefined;\n    }\n\n    return (\n      <div className=\"MediaViewerActions-mobile\">\n        <DropdownMenu\n          trigger={MenuButton}\n          positionX=\"right\"\n        >\n          {menuItems.map(({\n            icon, onClick, href, download, children, destructive,\n          }) => (\n            <MenuItem\n              key={icon}\n              icon={icon}\n              href={href}\n              download={download}\n              onClick={onClick}\n              destructive={destructive}\n            >\n              {children}\n            </MenuItem>\n          ))}\n        </DropdownMenu>\n        {isDownloading && <ProgressSpinner progress={downloadProgress} size=\"s\" noCross />}\n        {canDelete && renderDeleteModal()}\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"MediaViewerActions\">\n      {isMessage && item.message.isForwardingAllowed && !isChatProtected && (\n        <Button\n          round\n          size=\"smaller\"\n          color=\"translucent-white\"\n          ariaLabel={lang('Forward')}\n          onClick={onForward}\n        >\n          <i className=\"icon icon-forward\" />\n        </Button>\n      )}\n      {renderDownloadButton()}\n      <Button\n        round\n        size=\"smaller\"\n        color=\"translucent-white\"\n        ariaLabel={lang('MediaZoomOut')}\n        onClick={handleZoomOut}\n      >\n        <i className=\"icon icon-zoom-out\" />\n      </Button>\n      <Button\n        round\n        size=\"smaller\"\n        color=\"translucent-white\"\n        ariaLabel={lang('MediaZoomIn')}\n        onClick={handleZoomIn}\n      >\n        <i className=\"icon icon-zoom-in\" />\n      </Button>\n      {canReport && (\n        <Button\n          round\n          size=\"smaller\"\n          color=\"translucent-white\"\n          ariaLabel={lang(isVideo ? 'PeerInfo.ReportProfileVideo' : 'PeerInfo.ReportProfilePhoto')}\n          onClick={onReport}\n        >\n          <i className=\"icon icon-flag\" />\n        </Button>\n      )}\n      {canUpdate && (\n        <Button\n          round\n          size=\"smaller\"\n          color=\"translucent-white\"\n          ariaLabel={lang('ProfilePhoto.SetMainPhoto')}\n          onClick={handleUpdate}\n        >\n          <i className=\"icon icon-copy-media\" />\n        </Button>\n      )}\n      {canDelete && (\n        <Button\n          round\n          size=\"smaller\"\n          color=\"translucent-white\"\n          ariaLabel={lang('Delete')}\n          onClick={openDeleteModalHandler}\n        >\n          <i className=\"icon icon-delete\" />\n        </Button>\n      )}\n      <Button\n        round\n        size=\"smaller\"\n        color=\"translucent-white\"\n        ariaLabel={lang('Close')}\n        onClick={onCloseMediaViewer}\n      >\n        <i className=\"icon icon-close\" />\n      </Button>\n      {canDelete && renderDeleteModal()}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, {\n    item, canUpdateMedia,\n  }): StateProps => {\n    const tabState = selectTabState(global);\n    const { origin } = tabState.mediaViewer;\n\n    const message = item?.type === 'message' ? item.message : undefined;\n    const avatarOwner = item?.type === 'avatar' ? item.avatarOwner : undefined;\n    const avatarPhoto = item?.type === 'avatar' && item.profilePhotos.photos[item.mediaIndex];\n\n    const currentMessageList = selectCurrentMessageList(global);\n    const { threadId } = selectCurrentMessageList(global) || {};\n    const isProtected = selectIsMessageProtected(global, message);\n    const activeDownloads = selectActiveDownloads(global);\n    const isChatProtected = message && selectIsChatProtected(global, message?.chatId);\n    const { canDelete: canDeleteMessage } = (threadId\n      && message && selectAllowedMessageActionsSlow(global, message, threadId)) || {};\n    const isCurrentAvatar = avatarPhoto && (avatarPhoto.id === avatarOwner?.avatarPhotoId);\n    const canDeleteAvatar = canUpdateMedia && Boolean(avatarPhoto);\n    const canDelete = canDeleteMessage || canDeleteAvatar;\n    const canUpdate = canUpdateMedia && Boolean(avatarPhoto) && !isCurrentAvatar;\n    const messageListType = currentMessageList?.type;\n\n    return {\n      activeDownloads,\n      isProtected,\n      isChatProtected,\n      canDelete,\n      canUpdate,\n      messageListType,\n      origin,\n    };\n  },\n)(MediaViewerActions));\n","import { useRef } from '../lib/teact/teact';\n\nimport type { Signal } from '../util/signals';\n\nimport useEffectOnce from './useEffectOnce';\n\n// Allows to use signal value as \"silent\" dependency in hooks (not causing updates)\nexport function useSignalRef<T>(getValue: Signal<T>) {\n  const ref = useRef<T>(getValue());\n\n  useEffectOnce(() => {\n    return getValue.subscribe(() => {\n      ref.current = getValue();\n    });\n  });\n\n  return ref;\n}\n","import { createSignal } from '../../../util/signals';\n\nimport useDerivedSignal from '../../../hooks/useDerivedSignal';\n\nconst [getControlsVisible, setControlsVisible] = createSignal(false);\nconst [getIsLocked, setIsLocked] = createSignal(false);\n\nexport default function useControlsSignal() {\n  const getVisible = useDerivedSignal(\n    () => getControlsVisible() && !getIsLocked(),\n    // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n    [getControlsVisible, getIsLocked],\n  );\n\n  return [getVisible, setControlsVisible, setIsLocked] as const;\n}\n","import type { FC } from '../../lib/teact/teact';\nimport React, { useEffect, useState } from '../../lib/teact/teact';\n\nimport type { TextPart } from '../../types';\n\nimport buildClassName from '../../util/buildClassName';\nimport { throttle } from '../../util/schedulers';\nimport { IS_TOUCH_ENV } from '../../util/windowEnvironment';\nimport { REM } from '../common/helpers/mediaDimensions';\n\nimport useAppLayout from '../../hooks/useAppLayout';\nimport useDerivedState from '../../hooks/useDerivedState';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useControlsSignal from './hooks/useControlsSignal';\n\nimport Button from '../ui/Button';\n\nimport './MediaViewerFooter.scss';\n\nconst RESIZE_THROTTLE_MS = 500;\n\ntype OwnProps = {\n  text: TextPart | TextPart[];\n  buttonText?: string;\n  onClick: () => void;\n  handleSponsoredClick: (isFromMedia?: boolean) => void;\n  isForVideo: boolean;\n  isForceMobileVersion?: boolean;\n  isProtected?: boolean;\n};\n\nconst MediaViewerFooter: FC<OwnProps> = ({\n  text = '', buttonText, isForVideo, onClick, handleSponsoredClick, isProtected, isForceMobileVersion,\n}) => {\n  const [isMultiline, setIsMultiline] = useState(false);\n  const { isMobile } = useAppLayout();\n  const [getIsVisible] = useControlsSignal();\n  const isHidden = useDerivedState(() => (IS_TOUCH_ENV ? !getIsVisible() : false), [getIsVisible]);\n\n  useEffect(() => {\n    const footerContent = document.querySelector('.MediaViewerFooter .media-text') as HTMLDivElement | null;\n\n    const checkIsMultiline = () => {\n      const height = footerContent ? footerContent.clientHeight : 0;\n\n      setIsMultiline(height > REM * 2);\n    };\n\n    // First run for initial detection of multiline footer text\n    checkIsMultiline();\n\n    const handleResize = throttle(checkIsMultiline, RESIZE_THROTTLE_MS, true);\n\n    window.addEventListener('resize', handleResize, false);\n\n    return () => {\n      window.removeEventListener('resize', handleResize, false);\n    };\n  }, []);\n\n  function stopEvent(e: React.MouseEvent<HTMLDivElement, MouseEvent>) {\n    if (text) {\n      e.stopPropagation();\n    }\n  }\n\n  const onButtonClick = useLastCallback(() => {\n    handleSponsoredClick();\n  });\n\n  const classNames = buildClassName(\n    'MediaViewerFooter',\n    isForVideo && 'is-for-video',\n    isHidden && 'is-hidden',\n    isProtected && 'is-protected',\n    isForceMobileVersion && 'mobile',\n  );\n\n  return (\n    <div className={classNames} onClick={stopEvent}>\n      {Boolean(text) && (\n        <div className=\"media-viewer-footer-content\" onClick={!isMobile ? onClick : undefined}>\n          <p className={`media-text custom-scroll allow-selection ${isMultiline ? 'multiline' : ''}`} dir=\"auto\">\n            {text}\n          </p>\n        </div>\n      )}\n      {Boolean(buttonText) && (\n        <Button\n          className={buildClassName('media-viewer-footer-content', 'media-viewer-button')}\n          size=\"default\"\n          color=\"primary\"\n          isRectangular\n          onClick={onButtonClick}\n        >\n          {buttonText}\n        </Button>\n      )}\n    </div>\n  );\n};\n\nexport default MediaViewerFooter;\n","import { useUnmountCleanup } from '../lib/teact/teact';\n\nimport { createSignal } from '../util/signals';\n\nexport const [getCurrentTime, setCurrentTime] = createSignal(0);\n\nexport default function useCurrentTimeSignal() {\n  useUnmountCleanup(() => {\n    setCurrentTime(0);\n  });\n\n  return [getCurrentTime, setCurrentTime] as const;\n}\n","import { useUnmountCleanup } from '../../../lib/teact/teact';\n\nimport { createSignal } from '../../../util/signals';\n\nexport const [getIsVideoWaiting, setIsVideoWaiting] = createSignal(false);\n\nexport default function useVideoWaitingSignal() {\n  useUnmountCleanup(() => {\n    setIsVideoWaiting(false);\n  });\n\n  return [getIsVideoWaiting, setIsVideoWaiting] as const;\n}\n","import { ApiMediaFormat } from '../../api/types';\n\nimport launchMediaWorkers, { MAX_WORKERS } from '../../util/launchMediaWorkers';\nimport { IS_ANDROID, IS_IOS } from '../../util/windowEnvironment';\nimport { callApi } from '../../api/gramjs';\nimport { requestMutation } from '../fasterdom/fasterdom';\n\nconst IS_MOBILE = IS_ANDROID || IS_IOS;\nconst PREVIEW_SIZE_RATIO = (IS_ANDROID || IS_IOS) ? 0.3 : 0.25;\nconst MAX_FRAMES = IS_MOBILE ? 40 : 80;\nconst PREVIEW_MAX_SIDE = 200;\n\nconst connections = launchMediaWorkers();\n\nlet videoPreview: VideoPreview | undefined;\n\nexport class VideoPreview {\n  frames: Map<number, ImageBitmap> = new Map();\n\n  currentTime = 0;\n\n  canvas: HTMLCanvasElement;\n\n  constructor(url: string, canvas: HTMLCanvasElement) {\n    this.canvas = canvas;\n    connections.forEach(({ connector }, index) => {\n      void connector.request({\n        name: 'video-preview:init',\n        args: [\n          url,\n          MAX_FRAMES,\n          index,\n          MAX_WORKERS,\n          this.onFrame.bind(this),\n        ],\n      });\n    });\n  }\n\n  private onFrame(time: number, frame: ImageBitmap) {\n    this.frames.set(time, frame);\n    if (time === this.currentTime) {\n      this.render(time);\n    }\n  }\n\n  private clearCache() {\n    this.frames.forEach((frame) => {\n      frame.close();\n    });\n    this.frames.clear();\n  }\n\n  render(time: number) {\n    this.currentTime = time;\n    const frame = this.frames.get(time);\n    if (!frame) return false;\n    requestMutation(() => {\n      this.canvas.width = frame.width;\n      this.canvas.height = frame.height;\n      const ctx = this.canvas.getContext('2d')!;\n      ctx.drawImage(frame, 0, 0, this.canvas.width, this.canvas.height);\n    });\n    return true;\n  }\n\n  destroy() {\n    this.clearCache();\n    connections.forEach(({ connector }) => {\n      void connector.request({\n        name: 'video-preview:destroy',\n        args: [],\n      });\n    });\n  }\n}\n\nexport function getPreviewDimensions(width: number, height: number) {\n  width = Math.round(width * PREVIEW_SIZE_RATIO);\n  height = Math.round(height * PREVIEW_SIZE_RATIO);\n  const ratio = width / height;\n  if (width > PREVIEW_MAX_SIDE) {\n    width = PREVIEW_MAX_SIDE;\n    height = Math.round(width / ratio);\n  }\n  if (height > PREVIEW_MAX_SIDE) {\n    height = PREVIEW_MAX_SIDE;\n    width = Math.round(height * ratio);\n  }\n  return { width, height };\n}\n\nconnections.forEach(({ worker }) => {\n  worker.addEventListener('message', async (e) => {\n    const { type, messageId, params } = e.data as {\n      type: string;\n      messageId: string;\n      params: { url: string; start: number; end: number };\n    };\n\n    if (type !== 'requestPart') {\n      return;\n    }\n\n    const result = await callApi('downloadMedia', { mediaFormat: ApiMediaFormat.Progressive, ...params });\n    if (!result) {\n      return;\n    }\n\n    const { arrayBuffer } = result;\n\n    worker.postMessage({\n      type: 'partResponse',\n      messageId,\n      result: arrayBuffer,\n    }, [arrayBuffer!]);\n  });\n});\n\nexport function createVideoPreviews(url: string, canvas: HTMLCanvasElement) {\n  if (videoPreview) {\n    videoPreview.destroy();\n  }\n  videoPreview = new VideoPreview(url, canvas);\n  return () => {\n    videoPreview?.destroy();\n    videoPreview = undefined;\n  };\n}\n\nexport function renderVideoPreview(time: number) {\n  if (!videoPreview) return false;\n  return videoPreview.render(time);\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"ingarEvU\",\"preview\":\"TqpEWfl3\",\"previewCanvas\":\"fKVz2lln\",\"previewTime\":\"bGiNvx5D\",\"previewTimeText\":\"mnkqvOMR\",\"track\":\"Od9ZSc1U\",\"buffered\":\"ANe2DKfp\",\"played\":\"igaGLblf\",\"seeking\":\"beUP6SqY\"};","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useLayoutEffect,\n  useMemo, useRef, useSignal, useState,\n} from '../../lib/teact/teact';\n\nimport type { ApiDimensions } from '../../api/types';\nimport type { BufferedRange } from '../../hooks/useBuffering';\n\nimport { createVideoPreviews, getPreviewDimensions, renderVideoPreview } from '../../lib/video-preview/VideoPreview';\nimport { animateNumber } from '../../util/animation';\nimport buildClassName from '../../util/buildClassName';\nimport { captureEvents } from '../../util/captureEvents';\nimport { formatMediaDuration } from '../../util/dates/dateFormat';\nimport { clamp, round } from '../../util/math';\nimport { IS_TOUCH_ENV } from '../../util/windowEnvironment';\n\nimport { useThrottledSignal } from '../../hooks/useAsyncResolvers';\nimport useCurrentTimeSignal from '../../hooks/useCurrentTimeSignal';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useVideoWaitingSignal from './hooks/useVideoWaitingSignal';\n\nimport ShowTransition from '../ui/ShowTransition';\n\nimport styles from './SeekLine.module.scss';\n\ntype OwnProps = {\n  url?: string;\n  duration: number;\n  bufferedRanges: BufferedRange[];\n  playbackRate: number;\n  isActive?: boolean;\n  isPlaying?: boolean;\n  isPreviewDisabled?: boolean;\n  isReady: boolean;\n  posterSize?: ApiDimensions;\n  onSeek: (position: number) => void;\n  onSeekStart: () => void;\n};\n\nconst LOCK_TIMEOUT = 250;\nlet cancelAnimation: Function | undefined;\n\nconst SeekLine: FC<OwnProps> = ({\n  duration,\n  bufferedRanges,\n  isReady,\n  posterSize,\n  playbackRate,\n  url,\n  isActive,\n  isPlaying,\n  isPreviewDisabled,\n  onSeek,\n  onSeekStart,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const seekerRef = useRef<HTMLDivElement>(null);\n  const [getCurrentTimeSignal] = useCurrentTimeSignal();\n  const [getIsWaiting] = useVideoWaitingSignal();\n  const getCurrentTime = useThrottledSignal(getCurrentTimeSignal, LOCK_TIMEOUT);\n  const [getSelectedTime, setSelectedTime] = useSignal(getCurrentTime());\n  const [getPreviewOffset, setPreviewOffset] = useSignal(0);\n  const [getPreviewTime, setPreviewTime] = useSignal(0);\n  const isLockedRef = useRef<boolean>(false);\n  const [isPreviewVisible, setPreviewVisible] = useState(false);\n  const [isSeeking, setIsSeeking] = useState(false);\n  // eslint-disable-next-line no-null/no-null\n  const previewCanvasRef = useRef<HTMLCanvasElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const previewRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const progressRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const previewTimeRef = useRef<HTMLDivElement>(null);\n\n  const previewSize = useMemo(() => {\n    return getPreviewDimensions(posterSize?.width || 0, posterSize?.height || 0);\n  }, [posterSize]);\n\n  const setPreview = useLastCallback((time: number) => {\n    time = Math.floor(time);\n    setPreviewTime(time);\n    renderVideoPreview(time);\n  });\n\n  useEffect(() => {\n    if (isPreviewDisabled || !url || !isReady) return undefined;\n    return createVideoPreviews(url, previewCanvasRef.current!);\n  }, [url, isReady, isPreviewDisabled]);\n\n  useEffect(() => {\n    setPreviewVisible(false);\n  }, [isActive]);\n\n  useEffect(() => {\n    if (cancelAnimation) cancelAnimation();\n    cancelAnimation = undefined;\n    if (!isLockedRef.current && !isSeeking) {\n      const time = getCurrentTime();\n      const remaining = duration - time;\n      cancelAnimation = animateNumber({\n        from: time,\n        to: duration,\n        duration: (remaining * 1000) / playbackRate,\n        onUpdate: setSelectedTime,\n      });\n    }\n  }, [getCurrentTime, isSeeking, setSelectedTime, playbackRate, duration]);\n\n  useEffect(() => {\n    if (!isPlaying || getIsWaiting()) {\n      if (cancelAnimation) cancelAnimation();\n      cancelAnimation = undefined;\n    }\n  }, [isPlaying, getSelectedTime, getIsWaiting]);\n\n  useEffect(() => {\n    if (isPlaying) {\n      if (cancelAnimation) cancelAnimation();\n      cancelAnimation = undefined;\n      const time = getCurrentTime();\n      const remaining = duration - time;\n      cancelAnimation = animateNumber({\n        from: time,\n        to: duration,\n        duration: (remaining * 1000) / playbackRate,\n        onUpdate: setSelectedTime,\n      });\n    }\n    // eslint-disable-next-line\n  }, [isPlaying, playbackRate, duration]);\n\n  useLayoutEffect(() => {\n    if (!progressRef.current) return;\n    const progress = round((getSelectedTime() / duration) * 100, 2);\n    progressRef.current.style.width = `${progress}%`;\n  }, [getSelectedTime, duration]);\n\n  useLayoutEffect(() => {\n    if (!previewRef.current) return;\n    previewRef.current.style.left = `${getPreviewOffset()}px`;\n  }, [getPreviewOffset]);\n\n  useLayoutEffect(() => {\n    if (!previewTimeRef.current) return;\n    previewTimeRef.current.innerText = formatMediaDuration(getPreviewTime());\n  }, [getPreviewTime]);\n\n  useEffect(() => {\n    if (!seekerRef.current || !isActive) return undefined;\n    const seeker = seekerRef.current;\n    let seekerSize = seeker.getBoundingClientRect();\n\n    let time = 0;\n    let offset = 0;\n\n    const getPreviewProps = (e: MouseEvent | TouchEvent) => {\n      const pageX = e instanceof MouseEvent ? e.pageX : e.touches[0].pageX;\n      const t = clamp(duration * ((pageX - seekerSize.left) / seekerSize.width), 0, duration);\n      if (isPreviewDisabled) return [t, 0];\n      if (!seekerSize.width) seekerSize = seeker.getBoundingClientRect();\n      const preview = previewRef.current!;\n      const o = clamp(\n        pageX - seekerSize.left - preview.clientWidth / 2, -4, seekerSize.width - preview.clientWidth + 4,\n      );\n      return [t, o];\n    };\n\n    const stopAnimation = () => {\n      if (cancelAnimation) cancelAnimation();\n      cancelAnimation = undefined;\n    };\n\n    const handleSeek = (e: MouseEvent | TouchEvent) => {\n      stopAnimation();\n      setPreviewVisible(true);\n      ([time, offset] = getPreviewProps(e));\n      void setPreview(time);\n      setPreviewOffset(offset);\n      setSelectedTime(time);\n    };\n\n    const handleStartSeek = () => {\n      stopAnimation();\n      setPreviewVisible(true);\n      setIsSeeking(true);\n      onSeekStart();\n    };\n\n    const handleStopSeek = () => {\n      stopAnimation();\n      isLockedRef.current = true;\n      setPreviewVisible(false);\n      setIsSeeking(false);\n      setSelectedTime(time);\n      onSeek(time);\n      // Prevent current time updates from overriding the selected time\n      setTimeout(() => {\n        isLockedRef.current = false;\n      }, LOCK_TIMEOUT);\n    };\n\n    const cleanup = captureEvents(seeker, {\n      onCapture: handleStartSeek,\n      onRelease: handleStopSeek,\n      onClick: handleStopSeek,\n      onDrag: handleSeek,\n    });\n\n    if (IS_TOUCH_ENV || isPreviewDisabled) {\n      return cleanup;\n    }\n\n    const handleSeekMouseMove = (e: MouseEvent) => {\n      setPreviewVisible(true);\n      ([time, offset] = getPreviewProps(e));\n      setPreviewOffset(offset);\n      void setPreview(time);\n    };\n\n    const handleSeekMouseLeave = () => {\n      setPreviewVisible(false);\n    };\n\n    seeker.addEventListener('mousemove', handleSeekMouseMove);\n    seeker.addEventListener('mouseenter', handleSeekMouseMove);\n    seeker.addEventListener('mouseleave', handleSeekMouseLeave);\n\n    return () => {\n      cleanup();\n      seeker.removeEventListener('mousemove', handleSeekMouseMove);\n      seeker.removeEventListener('mouseenter', handleSeekMouseMove);\n      seeker.removeEventListener('mouseleave', handleSeekMouseLeave);\n    };\n  }, [\n    duration,\n    setPreview,\n    isActive,\n    onSeek,\n    onSeekStart,\n    setPreviewOffset,\n    setSelectedTime,\n    setIsSeeking,\n    isPreviewDisabled,\n    playbackRate,\n  ]);\n\n  return (\n    <div className={styles.container} ref={seekerRef}>\n      {!isPreviewDisabled && (\n        <ShowTransition\n          isOpen\n          isHidden={!isPreviewVisible}\n          className={styles.preview}\n          style={`width: ${previewSize.width}px; height: ${previewSize.height}px`}\n          ref={previewRef}\n        >\n          <canvas className={styles.previewCanvas} ref={previewCanvasRef} />\n          <div className={styles.previewTime}>\n            <span className={styles.previewTimeText} ref={previewTimeRef} />\n          </div>\n        </ShowTransition>\n      )}\n      <div className={styles.track}>\n        {bufferedRanges.map(({\n          start,\n          end,\n        }) => (\n          <div\n            key={`${start}-${end}`}\n            className={styles.buffered}\n            // @ts-ignore\n            style={`left: ${start * 100}%; right: ${100 - end * 100}%`}\n          />\n        ))}\n      </div>\n      <div className={styles.track}>\n        <div\n          ref={progressRef}\n          className={buildClassName(styles.played, isSeeking && styles.seeking)}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default memo(SeekLine);\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useLayoutEffect,\n  useMemo,\n  useSignal,\n} from '../../lib/teact/teact';\n\nimport type { ApiDimensions } from '../../api/types';\nimport type { BufferedRange } from '../../hooks/useBuffering';\n\nimport buildClassName from '../../util/buildClassName';\nimport { formatMediaDuration } from '../../util/dates/dateFormat';\nimport { formatFileSize } from '../../util/textFormat';\nimport { IS_IOS, IS_TOUCH_ENV } from '../../util/windowEnvironment';\n\nimport useAppLayout from '../../hooks/useAppLayout';\nimport useCurrentTimeSignal from '../../hooks/useCurrentTimeSignal';\nimport useDerivedState from '../../hooks/useDerivedState';\nimport useFlag from '../../hooks/useFlag';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\nimport useControlsSignal from './hooks/useControlsSignal';\n\nimport Button from '../ui/Button';\nimport Menu from '../ui/Menu';\nimport MenuItem from '../ui/MenuItem';\nimport RangeSlider from '../ui/RangeSlider';\nimport SeekLine from './SeekLine';\n\nimport './VideoPlayerControls.scss';\n\ntype OwnProps = {\n  url?: string;\n  bufferedRanges: BufferedRange[];\n  bufferedProgress: number;\n  duration: number;\n  isReady: boolean;\n  fileSize: number;\n  isForceMobileVersion?: boolean;\n  isPlaying: boolean;\n  isFullscreenSupported: boolean;\n  isPictureInPictureSupported: boolean;\n  isFullscreen: boolean;\n  isPreviewDisabled?: boolean;\n  isBuffered: boolean;\n  volume: number;\n  isMuted: boolean;\n  playbackRate: number;\n  posterSize?: ApiDimensions;\n  onChangeFullscreen: (e: React.MouseEvent<HTMLButtonElement, MouseEvent>) => void;\n  onPictureInPictureChange?: () => void;\n  onVolumeClick: () => void;\n  onVolumeChange: (volume: number) => void;\n  onPlaybackRateChange: (playbackRate: number) => void;\n  onPlayPause: (e: React.MouseEvent<HTMLButtonElement, MouseEvent>) => void;\n  onSeek: (position: number) => void;\n};\n\nconst stopEvent = (e: React.MouseEvent<HTMLElement>) => {\n  e.stopPropagation();\n};\n\nconst PLAYBACK_RATES = [\n  0.5,\n  1,\n  1.5,\n  2,\n];\n\nconst HIDE_CONTROLS_TIMEOUT_MS = 3000;\n\nconst VideoPlayerControls: FC<OwnProps> = ({\n  url,\n  bufferedRanges,\n  bufferedProgress,\n  duration,\n  isReady,\n  fileSize,\n  isForceMobileVersion,\n  isPlaying,\n  isFullscreenSupported,\n  isFullscreen,\n  isBuffered,\n  isPreviewDisabled,\n  volume,\n  isMuted,\n  playbackRate,\n  posterSize,\n  onChangeFullscreen,\n  onVolumeClick,\n  onVolumeChange,\n  onPlaybackRateChange,\n  isPictureInPictureSupported,\n  onPictureInPictureChange,\n  onPlayPause,\n  onSeek,\n}) => {\n  const [isPlaybackMenuOpen, openPlaybackMenu, closePlaybackMenu] = useFlag();\n  const [getCurrentTime] = useCurrentTimeSignal();\n  const currentTime = useDerivedState(() => Math.trunc(getCurrentTime()), [getCurrentTime]);\n  const [getIsSeeking, setIsSeeking] = useSignal(false);\n\n  const { isMobile } = useAppLayout();\n  const [getIsVisible, setVisibility] = useControlsSignal();\n  const isVisible = useDerivedState(getIsVisible);\n\n  useEffect(() => {\n    if (!IS_TOUCH_ENV && !isForceMobileVersion) return undefined;\n    let timeout: number | undefined;\n    if (!isVisible || !isPlaying || isPlaybackMenuOpen || getIsSeeking()) {\n      if (timeout) window.clearTimeout(timeout);\n      return undefined;\n    }\n    timeout = window.setTimeout(() => {\n      setVisibility(false);\n    }, HIDE_CONTROLS_TIMEOUT_MS);\n    return () => {\n      if (timeout) window.clearTimeout(timeout);\n    };\n  }, [isPlaying, isVisible, setVisibility, isPlaybackMenuOpen, getIsSeeking, isForceMobileVersion]);\n\n  useLayoutEffect(() => {\n    if (isVisible) {\n      document.body.classList.add('video-controls-visible');\n    } else {\n      document.body.classList.remove('video-controls-visible');\n    }\n    return () => {\n      document.body.classList.remove('video-controls-visible');\n    };\n  }, [isVisible]);\n\n  useEffect(() => {\n    if (!isVisible) {\n      closePlaybackMenu();\n    }\n  }, [closePlaybackMenu, isVisible]);\n\n  const lang = useOldLang();\n\n  const handleSeek = useLastCallback((position: number) => {\n    setIsSeeking(false);\n    onSeek(position);\n  });\n\n  const handleSeekStart = useLastCallback(() => {\n    setIsSeeking(true);\n  });\n\n  const volumeIcon = useMemo(() => {\n    if (volume === 0 || isMuted) return 'icon-muted';\n    if (volume < 0.3) return 'icon-volume-1';\n    if (volume < 0.6) return 'icon-volume-2';\n    return 'icon-volume-3';\n  }, [volume, isMuted]);\n\n  return (\n    <div\n      className={buildClassName('VideoPlayerControls', isForceMobileVersion && 'mobile', isVisible && 'active')}\n      onClick={stopEvent}\n    >\n      <SeekLine\n        url={url}\n        duration={duration}\n        isReady={isReady}\n        isPlaying={isPlaying}\n        isPreviewDisabled={isPreviewDisabled}\n        posterSize={posterSize}\n        bufferedRanges={bufferedRanges}\n        playbackRate={playbackRate}\n        onSeek={handleSeek}\n        onSeekStart={handleSeekStart}\n        isActive={isVisible}\n      />\n      <div className=\"buttons\">\n        <Button\n          ariaLabel={lang('AccActionPlay')}\n          size=\"tiny\"\n          ripple={!isMobile}\n          color=\"translucent-white\"\n          className=\"play\"\n          round\n          onClick={onPlayPause}\n        >\n          <i className={buildClassName('icon', isPlaying ? 'icon-pause' : 'icon-play')} />\n        </Button>\n        <Button\n          ariaLabel=\"Volume\"\n          size=\"tiny\"\n          color=\"translucent-white\"\n          className=\"volume\"\n          round\n          onClick={onVolumeClick}\n        >\n          <i className={buildClassName('icon', volumeIcon)} />\n        </Button>\n        {!IS_IOS && (\n          <RangeSlider bold className=\"volume-slider\" value={isMuted ? 0 : volume * 100} onChange={onVolumeChange} />\n        )}\n        {renderTime(currentTime, duration)}\n        {!isBuffered && (\n          <div className=\"player-file-size\">\n            {`${formatFileSize(lang, fileSize * bufferedProgress)} / ${formatFileSize(lang, fileSize)}`}\n          </div>\n        )}\n        <div className=\"spacer\" />\n        <Button\n          ariaLabel=\"Playback rate\"\n          size=\"tiny\"\n          color=\"translucent-white\"\n          className=\"playback-rate\"\n          round\n          onClick={openPlaybackMenu}\n        >\n          {`${playbackRate}x`}\n        </Button>\n        {isPictureInPictureSupported && (\n          <Button\n            ariaLabel=\"Picture in picture\"\n            size=\"tiny\"\n            color=\"translucent-white\"\n            className=\"fullscreen\"\n            round\n            onClick={onPictureInPictureChange}\n          >\n            <i className=\"icon icon-pip\" />\n          </Button>\n        )}\n        {isFullscreenSupported && (\n          <Button\n            ariaLabel=\"Fullscreen\"\n            size=\"tiny\"\n            color=\"translucent-white\"\n            className=\"fullscreen\"\n            round\n            onClick={onChangeFullscreen}\n          >\n            <i className={buildClassName('icon ', isFullscreen ? 'icon-smallscreen' : 'icon-fullscreen')} />\n          </Button>\n        )}\n      </div>\n      <Menu\n        isOpen={isPlaybackMenuOpen}\n        className={buildClassName(\n          'playback-rate-menu',\n          !isFullscreenSupported && 'no-fullscreen',\n          !isPictureInPictureSupported && 'no-pip',\n        )}\n        positionX=\"right\"\n        positionY=\"bottom\"\n        autoClose\n        onClose={closePlaybackMenu}\n      >\n        {PLAYBACK_RATES.map((rate) => (\n          // eslint-disable-next-line react/jsx-no-bind\n          <MenuItem disabled={playbackRate === rate} onClick={() => onPlaybackRateChange(rate)}>\n            {`${rate}x`}\n          </MenuItem>\n        ))}\n      </Menu>\n    </div>\n  );\n};\n\nfunction renderTime(currentTime: number, duration: number) {\n  return (\n    <div className=\"player-time\">\n      {`${formatMediaDuration(currentTime)} / ${formatMediaDuration(duration)}`}\n    </div>\n  );\n}\n\nexport default memo(VideoPlayerControls);\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useRef, useState,\n} from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport type { ApiDimensions } from '../../api/types';\n\nimport { clamp } from '../../util/math';\nimport safePlay from '../../util/safePlay';\nimport stopEvent from '../../util/stopEvent';\nimport { IS_IOS, IS_TOUCH_ENV, IS_YA_BROWSER } from '../../util/windowEnvironment';\n\nimport useUnsupportedMedia from '../../hooks/media/useUnsupportedMedia';\nimport useAppLayout from '../../hooks/useAppLayout';\nimport useBuffering from '../../hooks/useBuffering';\nimport useCurrentTimeSignal from '../../hooks/useCurrentTimeSignal';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport usePictureInPicture from '../../hooks/usePictureInPicture';\nimport useShowTransitionDeprecated from '../../hooks/useShowTransitionDeprecated';\nimport useVideoCleanup from '../../hooks/useVideoCleanup';\nimport useFullscreen from '../../hooks/window/useFullscreen';\nimport useControlsSignal from './hooks/useControlsSignal';\nimport useVideoWaitingSignal from './hooks/useVideoWaitingSignal';\n\nimport Button from '../ui/Button';\nimport ProgressSpinner from '../ui/ProgressSpinner';\nimport VideoPlayerControls from './VideoPlayerControls';\n\nimport './VideoPlayer.scss';\n\ntype OwnProps = {\n  url?: string;\n  isGif?: boolean;\n  posterData?: string;\n  posterSize?: ApiDimensions;\n  loadProgress?: number;\n  fileSize: number;\n  isPreviewDisabled?: boolean;\n  isMediaViewerOpen?: boolean;\n  noPlay?: boolean;\n  volume: number;\n  isMuted: boolean;\n  isHidden?: boolean;\n  playbackRate: number;\n  isProtected?: boolean;\n  shouldCloseOnClick?: boolean;\n  isForceMobileVersion?: boolean;\n  onClose: (e: React.MouseEvent<HTMLElement, MouseEvent>) => void;\n  isClickDisabled?: boolean;\n  isSponsoredMessage?: boolean;\n  handleSponsoredClick?: (isFromMedia?: boolean) => void;\n};\n\nconst MAX_LOOP_DURATION = 30; // Seconds\nconst MIN_READY_STATE = 4;\nconst REWIND_STEP = 5; // Seconds\n\nconst VideoPlayer: FC<OwnProps> = ({\n  url,\n  isGif,\n  posterData,\n  posterSize,\n  loadProgress,\n  fileSize,\n  isMediaViewerOpen,\n  noPlay,\n  volume,\n  isMuted,\n  playbackRate,\n  onClose,\n  isForceMobileVersion,\n  shouldCloseOnClick,\n  isProtected,\n  isClickDisabled,\n  isPreviewDisabled,\n  isSponsoredMessage,\n  handleSponsoredClick,\n}) => {\n  const {\n    setMediaViewerVolume,\n    setMediaViewerMuted,\n    setMediaViewerPlaybackRate,\n    setMediaViewerHidden,\n  } = getActions();\n  // eslint-disable-next-line no-null/no-null\n  const videoRef = useRef<HTMLVideoElement>(null);\n  const [isPlaying, setIsPlaying] = useState(!IS_TOUCH_ENV || !IS_IOS);\n  const [isFullscreen, setFullscreen, exitFullscreen] = useFullscreen(videoRef, setIsPlaying);\n  const { isMobile } = useAppLayout();\n  const duration = videoRef.current?.duration || 0;\n  const isLooped = isGif || duration <= MAX_LOOP_DURATION;\n\n  const handleEnterFullscreen = useLastCallback(() => {\n    // Yandex browser doesn't support PIP when video is hidden\n    if (IS_YA_BROWSER) return;\n    setMediaViewerHidden({ isHidden: true });\n  });\n\n  const handleLeaveFullscreen = useLastCallback(() => {\n    if (IS_YA_BROWSER) return;\n    setMediaViewerHidden({ isHidden: false });\n  });\n\n  const [\n    isPictureInPictureSupported,\n    enterPictureInPicture,\n    isInPictureInPicture,\n  ] = usePictureInPicture(videoRef, handleEnterFullscreen, handleLeaveFullscreen);\n\n  const [, toggleControls, lockControls] = useControlsSignal();\n\n  const handleVideoMove = useLastCallback(() => {\n    toggleControls(true);\n  });\n\n  const handleVideoLeave = useLastCallback((e) => {\n    const bounds = videoRef.current?.getBoundingClientRect();\n    if (!bounds) return;\n    if (e.clientX < bounds.left || e.clientX > bounds.right || e.clientY < bounds.top || e.clientY > bounds.bottom) {\n      toggleControls(false);\n    }\n  });\n\n  const {\n    isReady, isBuffered, bufferedRanges, bufferingHandlers, bufferedProgress,\n  } = useBuffering();\n  const isUnsupported = useUnsupportedMedia(videoRef, undefined, !url);\n\n  const {\n    shouldRender: shouldRenderSpinner,\n    transitionClassNames: spinnerClassNames,\n  } = useShowTransitionDeprecated(\n    !isBuffered && !isUnsupported, undefined, undefined, 'slow',\n  );\n  const {\n    shouldRender: shouldRenderPlayButton,\n    transitionClassNames: playButtonClassNames,\n  } = useShowTransitionDeprecated(\n    IS_IOS && !isPlaying && !shouldRenderSpinner && !isUnsupported, undefined, undefined, 'slow',\n  );\n\n  useEffect(() => {\n    lockControls(shouldRenderSpinner);\n  }, [lockControls, shouldRenderSpinner]);\n\n  useEffect(() => {\n    if (noPlay || !isMediaViewerOpen || isUnsupported) {\n      videoRef.current!.pause();\n    } else if (url && !IS_TOUCH_ENV) {\n      // Chrome does not automatically start playing when `url` becomes available (even with `autoPlay`),\n      // so we force it here. Contrary, iOS does not allow to call `play` without mouse event,\n      // so we need to use `autoPlay` instead to allow pre-buffering.\n      safePlay(videoRef.current!);\n    }\n  }, [noPlay, isMediaViewerOpen, url, setMediaViewerMuted, isUnsupported]);\n\n  useEffect(() => {\n    videoRef.current!.volume = volume;\n  }, [volume]);\n\n  useEffect(() => {\n    videoRef.current!.playbackRate = playbackRate;\n  }, [playbackRate]);\n\n  const togglePlayState = useLastCallback((e: React.MouseEvent<HTMLElement, MouseEvent> | KeyboardEvent) => {\n    e.stopPropagation();\n    if (isPlaying) {\n      videoRef.current!.pause();\n      setIsPlaying(false);\n    } else {\n      safePlay(videoRef.current!);\n      setIsPlaying(true);\n    }\n  });\n\n  const handleClick = useLastCallback((e: React.MouseEvent<HTMLVideoElement, MouseEvent>) => {\n    if (isSponsoredMessage) {\n      handleSponsoredClick?.(true);\n      onClose(e);\n    }\n    if (isClickDisabled) {\n      return;\n    }\n    if (shouldCloseOnClick) {\n      onClose(e);\n    } else {\n      togglePlayState(e);\n    }\n  });\n\n  useVideoCleanup(videoRef, bufferingHandlers);\n\n  const [, setCurrentTime] = useCurrentTimeSignal();\n  const [, setIsVideoWaiting] = useVideoWaitingSignal();\n\n  const handleTimeUpdate = useLastCallback((e: React.SyntheticEvent<HTMLVideoElement>) => {\n    const video = e.currentTarget;\n    if (video.readyState >= MIN_READY_STATE) {\n      setIsVideoWaiting(false);\n      setCurrentTime(video.currentTime);\n    }\n    if (!isLooped && video.currentTime === video.duration) {\n      setCurrentTime(0);\n      setIsPlaying(false);\n    }\n  });\n\n  const handleEnded = useLastCallback(() => {\n    if (isLooped) return;\n    setCurrentTime(0);\n    setIsPlaying(false);\n    toggleControls(true);\n  });\n\n  const handleFullscreenChange = useLastCallback(() => {\n    if (isFullscreen && exitFullscreen) {\n      exitFullscreen();\n    } else if (!isFullscreen && setFullscreen) {\n      setFullscreen();\n    }\n  });\n\n  const handleSeek = useLastCallback((position: number) => {\n    videoRef.current!.currentTime = position;\n  });\n\n  const handleVolumeChange = useLastCallback((newVolume: number) => {\n    setMediaViewerVolume({ volume: newVolume / 100 });\n  });\n\n  const handleVolumeMuted = useLastCallback(() => {\n    // Browser requires explicit user interaction to keep video playing after unmuting\n    videoRef.current!.muted = !videoRef.current!.muted;\n    setMediaViewerMuted({ isMuted: !isMuted });\n  });\n\n  const handlePlaybackRateChange = useLastCallback((newPlaybackRate: number) => {\n    setMediaViewerPlaybackRate({ playbackRate: newPlaybackRate });\n  });\n\n  useEffect(() => {\n    if (!isMediaViewerOpen) return undefined;\n    const rewind = (dir: number) => {\n      if (!isFullscreen) return;\n      const video = videoRef.current!;\n      const newTime = clamp(video.currentTime + dir * REWIND_STEP, 0, video.duration);\n      if (Number.isFinite(newTime)) {\n        video.currentTime = newTime;\n      }\n    };\n    const handleKeyDown = (e: KeyboardEvent) => {\n      if (isInPictureInPicture) return;\n      switch (e.key) {\n        case ' ':\n        case 'Enter':\n          e.preventDefault();\n          togglePlayState(e);\n          break;\n        case 'Left': // IE/Edge specific value\n        case 'ArrowLeft':\n          e.preventDefault();\n          rewind(-1);\n          break;\n        case 'Right': // IE/Edge specific value\n        case 'ArrowRight':\n          e.preventDefault();\n          rewind(1);\n          break;\n      }\n    };\n\n    document.addEventListener('keydown', handleKeyDown, false);\n\n    return () => {\n      document.removeEventListener('keydown', handleKeyDown, false);\n    };\n  }, [togglePlayState, isMediaViewerOpen, isFullscreen, isInPictureInPicture]);\n\n  const wrapperStyle = posterSize && `width: ${posterSize.width}px; height: ${posterSize.height}px`;\n  const videoStyle = `background-image: url(${posterData})`;\n  const shouldToggleControls = !IS_TOUCH_ENV && !isForceMobileVersion;\n\n  return (\n    // eslint-disable-next-line jsx-a11y/mouse-events-have-key-events\n    <div\n      className=\"VideoPlayer\"\n      onMouseMove={shouldToggleControls ? handleVideoMove : undefined}\n      onMouseOut={shouldToggleControls ? handleVideoLeave : undefined}\n    >\n      <div\n        style={wrapperStyle}\n      >\n        {/* eslint-disable-next-line jsx-a11y/media-has-caption */}\n        {isProtected && (\n          <div\n            onContextMenu={stopEvent}\n            onDoubleClick={!IS_TOUCH_ENV ? handleFullscreenChange : undefined}\n            onClick={!isMobile ? togglePlayState : undefined}\n            className=\"protector\"\n          />\n        )}\n        <video\n          ref={videoRef}\n          autoPlay={IS_TOUCH_ENV}\n          controlsList=\"nodownload\"\n          playsInline\n          loop={isLooped}\n          // This is to force autoplaying on mobiles\n          muted={isGif || isMuted}\n          id=\"media-viewer-video\"\n          style={videoStyle}\n          onWaiting={() => setIsVideoWaiting(true)}\n          onPlay={() => setIsPlaying(true)}\n          onEnded={handleEnded}\n          onClick={!isMobile && !isFullscreen ? handleClick : undefined}\n          onDoubleClick={!IS_TOUCH_ENV ? handleFullscreenChange : undefined}\n          // eslint-disable-next-line react/jsx-props-no-spreading\n          {...bufferingHandlers}\n          onPause={(e) => {\n            setIsPlaying(false);\n            bufferingHandlers.onPause(e);\n          }}\n          onTimeUpdate={handleTimeUpdate}\n          src={url}\n        />\n      </div>\n      {shouldRenderPlayButton && (\n        <Button round className={`play-button ${playButtonClassNames}`} onClick={togglePlayState}>\n          <i className=\"icon icon-play\" />\n        </Button>\n      )}\n      {shouldRenderSpinner && (\n        <div className={['spinner-container', spinnerClassNames].join(' ')}>\n          {!isBuffered && <div className=\"buffering\">Buffering...</div>}\n          <ProgressSpinner\n            size=\"xl\"\n            progress={isBuffered ? 1 : loadProgress}\n            onClick={onClose}\n          />\n        </div>\n      )}\n      {!isGif && !isSponsoredMessage && !isUnsupported && (\n        <VideoPlayerControls\n          url={url}\n          isPlaying={isPlaying}\n          bufferedRanges={bufferedRanges}\n          bufferedProgress={bufferedProgress}\n          isBuffered={isBuffered}\n          isFullscreenSupported={Boolean(setFullscreen)}\n          isPictureInPictureSupported={isPictureInPictureSupported}\n          isFullscreen={isFullscreen}\n          isPreviewDisabled={isPreviewDisabled}\n          fileSize={fileSize}\n          duration={duration}\n          isReady={isReady}\n          posterSize={posterSize}\n          isForceMobileVersion={isForceMobileVersion}\n          onSeek={handleSeek}\n          onChangeFullscreen={handleFullscreenChange}\n          onPictureInPictureChange={enterPictureInPicture}\n          onPlayPause={togglePlayState}\n          volume={volume}\n          playbackRate={playbackRate}\n          isMuted={isMuted}\n          onVolumeClick={handleVolumeMuted}\n          onVolumeChange={handleVolumeChange}\n          onPlaybackRateChange={handlePlaybackRateChange}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default memo(VideoPlayer);\n","import React, { memo } from '../../lib/teact/teact';\nimport { withGlobal } from '../../global';\n\nimport type {\n  ApiDimensions, ApiMessage, ApiSponsoredMessage,\n} from '../../api/types';\nimport type { MediaViewerOrigin } from '../../types';\nimport type { MediaViewerItem } from './helpers/getViewableMedia';\n\nimport {\n  selectIsMessageProtected, selectTabState,\n} from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport stopEvent from '../../util/stopEvent';\nimport { ARE_WEBCODECS_SUPPORTED, IS_TOUCH_ENV } from '../../util/windowEnvironment';\nimport { calculateMediaViewerDimensions } from '../common/helpers/mediaDimensions';\nimport { renderMessageText } from '../common/helpers/renderMessageText';\nimport getViewableMedia from './helpers/getViewableMedia';\n\nimport useAppLayout from '../../hooks/useAppLayout';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\nimport useControlsSignal from './hooks/useControlsSignal';\nimport { useMediaProps } from './hooks/useMediaProps';\n\nimport Spinner from '../ui/Spinner';\nimport MediaViewerFooter from './MediaViewerFooter';\nimport VideoPlayer from './VideoPlayer';\n\nimport './MediaViewerContent.scss';\n\ntype OwnProps = {\n  item: MediaViewerItem;\n  isActive?: boolean;\n  withAnimation?: boolean;\n  isMoving?: boolean;\n  onClose: () => void;\n  onFooterClick: () => void;\n  handleSponsoredClick: () => void;\n};\n\ntype StateProps = {\n  textMessage?: ApiMessage | ApiSponsoredMessage;\n  origin?: MediaViewerOrigin;\n  isProtected?: boolean;\n  volume: number;\n  isMuted: boolean;\n  isHidden?: boolean;\n  playbackRate: number;\n};\n\nconst ANIMATION_DURATION = 350;\nconst MOBILE_VERSION_CONTROL_WIDTH = 350;\n\nconst MediaViewerContent = ({\n  item,\n  isActive,\n  textMessage,\n  origin,\n  withAnimation,\n  isProtected,\n  volume,\n  playbackRate,\n  isMuted,\n  isHidden,\n  isMoving,\n  onClose,\n  onFooterClick,\n  handleSponsoredClick,\n}: OwnProps & StateProps) => {\n  const lang = useOldLang();\n\n  const isAvatar = item.type === 'avatar';\n  const isSponsoredMessage = item.type === 'sponsoredMessage';\n  const { media } = getViewableMedia(item) || {};\n\n  const {\n    isVideo,\n    isPhoto,\n    bestImageData,\n    bestData,\n    dimensions,\n    isGif,\n    isLocal,\n    isVideoAvatar,\n    mediaSize,\n    loadProgress,\n  } = useMediaProps({\n    media, isAvatar, origin, delay: withAnimation ? ANIMATION_DURATION : false,\n  });\n\n  const [, toggleControls] = useControlsSignal();\n\n  const isOpen = Boolean(media);\n  const { isMobile } = useAppLayout();\n\n  const toggleControlsOnMove = useLastCallback(() => {\n    toggleControls(true);\n  });\n\n  if (!media) return undefined;\n\n  if (item.type === 'avatar') {\n    if (!isVideoAvatar) {\n      return (\n        <div key={media.id} className=\"MediaViewerContent\">\n          {renderPhoto(\n            bestData,\n            calculateMediaViewerDimensions(dimensions!, false),\n            !isMobile && !isProtected,\n            isProtected,\n          )}\n        </div>\n      );\n    } else {\n      return (\n        <div key={media.id} className=\"MediaViewerContent\">\n          <VideoPlayer\n            key={media.id}\n            url={bestData}\n            isGif\n            posterData={bestImageData}\n            posterSize={calculateMediaViewerDimensions(dimensions!, false, true)}\n            loadProgress={loadProgress}\n            fileSize={mediaSize!}\n            isMediaViewerOpen={isOpen && isActive}\n            isProtected={isProtected}\n            isPreviewDisabled={!ARE_WEBCODECS_SUPPORTED || isLocal}\n            noPlay={!isActive}\n            onClose={onClose}\n            isMuted\n            shouldCloseOnClick\n            volume={0}\n            isClickDisabled={isMoving}\n            playbackRate={1}\n            isSponsoredMessage={isSponsoredMessage}\n            handleSponsoredClick={handleSponsoredClick}\n          />\n        </div>\n      );\n    }\n  }\n\n  const textParts = textMessage && (textMessage.content.action?.type === 'suggestProfilePhoto'\n    ? lang('Conversation.SuggestedPhotoTitle')\n    : renderMessageText({ message: textMessage, forcePlayback: true, isForMediaViewer: true }));\n  const buttonText = textMessage && 'buttonText' in textMessage ? textMessage.buttonText : undefined;\n  const hasFooter = Boolean(textParts);\n  const posterSize = calculateMediaViewerDimensions(dimensions!, hasFooter, isVideo);\n  const isForceMobileVersion = isMobile || shouldForceMobileVersion(posterSize);\n\n  return (\n    <div\n      className={buildClassName('MediaViewerContent', hasFooter && 'has-footer')}\n      onMouseMove={isForceMobileVersion && !IS_TOUCH_ENV ? toggleControlsOnMove : undefined}\n    >\n      {isPhoto && renderPhoto(\n        bestData,\n        posterSize,\n        !isMobile && !isProtected,\n        isProtected,\n      )}\n      {isVideo && (!isActive ? renderVideoPreview(\n        bestImageData,\n        posterSize,\n        !isMobile && !isProtected,\n        isProtected,\n      ) : (\n        <VideoPlayer\n          key={media.id}\n          url={bestData}\n          isGif={isGif}\n          posterData={bestImageData}\n          posterSize={posterSize}\n          loadProgress={loadProgress}\n          fileSize={mediaSize!}\n          isMediaViewerOpen={isOpen && isActive}\n          noPlay={!isActive}\n          isPreviewDisabled={!ARE_WEBCODECS_SUPPORTED || isLocal}\n          onClose={onClose}\n          isMuted={isMuted}\n          isHidden={isHidden}\n          isForceMobileVersion={isForceMobileVersion}\n          isProtected={isProtected}\n          volume={volume}\n          isClickDisabled={isMoving}\n          playbackRate={playbackRate}\n          isSponsoredMessage={isSponsoredMessage}\n          handleSponsoredClick={handleSponsoredClick}\n        />\n      ))}\n      {textParts && (\n        <MediaViewerFooter\n          text={textParts}\n          buttonText={buttonText}\n          onClick={onFooterClick}\n          isProtected={isProtected}\n          isForceMobileVersion={isForceMobileVersion}\n          isForVideo={isVideo && !isGif}\n          handleSponsoredClick={handleSponsoredClick}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { item }): StateProps => {\n    const {\n      volume,\n      isMuted,\n      playbackRate,\n      isHidden,\n      origin,\n    } = selectTabState(global).mediaViewer;\n    const message = item.type === 'message' ? item.message : undefined;\n    const sponsoredMessage = item.type === 'sponsoredMessage' ? item.message : undefined;\n    const textMessage = message || sponsoredMessage;\n\n    return {\n      origin,\n      textMessage,\n      isProtected: message && selectIsMessageProtected(global, message),\n      volume,\n      isMuted,\n      isHidden,\n      playbackRate,\n    };\n  },\n)(MediaViewerContent));\n\nfunction renderPhoto(blobUrl?: string, imageSize?: ApiDimensions, canDrag?: boolean, isProtected?: boolean) {\n  return blobUrl\n    ? (\n      <div style=\"position: relative;\">\n        {isProtected && <div onContextMenu={stopEvent} className=\"protector\" />}\n        <img\n          src={blobUrl}\n          alt=\"\"\n          className={buildClassName(isProtected && 'is-protected')}\n          style={imageSize ? `width: ${imageSize.width}px` : ''}\n          draggable={Boolean(canDrag)}\n        />\n      </div>\n    )\n    : (\n      <div\n        className=\"spinner-wrapper\"\n        style={imageSize ? `width: ${imageSize.width}px` : ''}\n      >\n        <Spinner color=\"white\" />\n      </div>\n    );\n}\n\nfunction renderVideoPreview(blobUrl?: string, imageSize?: ApiDimensions, canDrag?: boolean, isProtected?: boolean) {\n  const wrapperStyle = imageSize && `width: ${imageSize.width}px; height: ${imageSize.height}px`;\n  const videoStyle = `background-image: url(${blobUrl})`;\n  return blobUrl\n    ? (\n      <div\n        className=\"VideoPlayer\"\n      >\n        {isProtected && <div onContextMenu={stopEvent} className=\"protector\" />}\n        <div\n          style={wrapperStyle}\n        >\n          {/* eslint-disable-next-line jsx-a11y/media-has-caption */}\n          <video\n            style={videoStyle}\n            className={buildClassName(isProtected && 'is-protected')}\n            draggable={Boolean(canDrag)}\n          />\n        </div>\n      </div>\n    )\n    : (\n      <div\n        className=\"spinner-wrapper\"\n        style={imageSize ? `width: ${imageSize.width}px` : ''}\n      >\n        <Spinner color=\"white\" />\n      </div>\n    );\n}\n\nfunction shouldForceMobileVersion(posterSize?: { width: number; height: number }) {\n  if (!posterSize) return false;\n  return posterSize.width < MOBILE_VERSION_CONTROL_WIDTH;\n}\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useLayoutEffect, useMemo, useRef, useSignal, useState,\n} from '../../lib/teact/teact';\n\nimport type { MediaViewerOrigin, ThreadId } from '../../types';\nimport type { RealTouchEvent } from '../../util/captureEvents';\nimport type { MediaViewerItem } from './helpers/getViewableMedia';\n\nimport { animateNumber, timingFunctions } from '../../util/animation';\nimport buildClassName from '../../util/buildClassName';\nimport {\n  captureEvents,\n  IOS_SCREEN_EDGE_THRESHOLD,\n  SWIPE_DIRECTION_THRESHOLD,\n  SWIPE_DIRECTION_TOLERANCE,\n} from '../../util/captureEvents';\nimport { clamp, isBetween, round } from '../../util/math';\nimport { debounce } from '../../util/schedulers';\nimport { IS_IOS, IS_TOUCH_ENV } from '../../util/windowEnvironment';\n\nimport useTimeout from '../../hooks/schedulers/useTimeout';\nimport useDebouncedCallback from '../../hooks/useDebouncedCallback';\nimport useDerivedState from '../../hooks/useDerivedState';\nimport useHistoryBack from '../../hooks/useHistoryBack';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\nimport { useSignalRef } from '../../hooks/useSignalRef';\nimport { useFullscreenStatus } from '../../hooks/window/useFullscreen';\nimport useWindowSize from '../../hooks/window/useWindowSize';\nimport useControlsSignal from './hooks/useControlsSignal';\nimport useZoomChange from './hooks/useZoomChangeSignal';\n\nimport MediaViewerContent from './MediaViewerContent';\n\nimport './MediaViewerSlides.scss';\n\nconst { easeOutCubic, easeOutQuart } = timingFunctions;\n\ntype OwnProps = {\n  item?: MediaViewerItem;\n  isLoadingMoreMedia?: boolean;\n  isSynced?: boolean;\n  isVideo?: boolean;\n  isGif?: boolean;\n  isPhoto?: boolean;\n  isOpen?: boolean;\n  chatId?: string;\n  threadId?: ThreadId;\n  avatarOwnerId?: string;\n  origin?: MediaViewerOrigin;\n  withAnimation?: boolean;\n  isHidden?: boolean;\n  hasFooter?: boolean;\n  getNextItem: (from: MediaViewerItem, direction: number) => MediaViewerItem | undefined;\n  selectItem: (item: MediaViewerItem) => void;\n  loadMoreItemsIfNeeded: (item: MediaViewerItem) => void;\n  onFooterClick: () => void;\n  handleSponsoredClick: (isFromMedia?: boolean) => void;\n  onClose: () => void;\n};\n\nconst SWIPE_X_THRESHOLD = 50;\nconst SWIPE_Y_THRESHOLD = 50;\nconst SLIDES_GAP = IS_TOUCH_ENV ? 40 : 0;\nconst ANIMATION_DURATION = 350;\nconst DEBOUNCE_SELECT_MEDIA = 350;\nconst DEBOUNCE_SWIPE = 500;\nconst DEBOUNCE_ACTIVE = 800;\nconst DOUBLE_TAP_ZOOM = 3;\nconst CLICK_Y_THRESHOLD = 80;\nconst HEADER_HEIGHT = 60;\nconst MAX_ZOOM = 4;\nconst MIN_ZOOM = 1;\nlet cancelAnimation: Function | undefined;\nlet cancelZoomAnimation: Function | undefined;\n\ntype Transform = {\n  x: number;\n  y: number;\n  scale: number;\n};\n\nenum SwipeDirection {\n  Horizontal,\n  Vertical,\n}\n\nconst MediaViewerSlides: FC<OwnProps> = ({\n  item,\n  isVideo,\n  isGif,\n  isOpen,\n  withAnimation,\n  isHidden,\n  isLoadingMoreMedia,\n  isSynced,\n  loadMoreItemsIfNeeded,\n  getNextItem,\n  selectItem,\n  onClose,\n  onFooterClick,\n  handleSponsoredClick,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const activeSlideRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const leftSlideRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const rightSlideRef = useRef<HTMLDivElement>(null);\n  const lastTransformRef = useRef<Transform>({ x: 0, y: 0, scale: 1 });\n  const swipeDirectionRef = useRef<SwipeDirection | undefined>(undefined);\n  const initialContentRectRef = useRef<DOMRect | undefined>(undefined);\n  const isReleasedRef = useRef(false);\n  const [isActive, setIsActive] = useState(true);\n  const [getZoomChange] = useZoomChange();\n  const prevZoomChangeRef = useRef(getZoomChange());\n  const isFullscreen = useFullscreenStatus();\n  const [isMouseDown, setIsMouseDown] = useState(false);\n  const [getTransform, setTransform] = useSignal<Transform>({ x: 0, y: 0, scale: 1 });\n  const transformRef = useSignalRef(getTransform);\n  const [getActiveItem, setActiveItem] = useSignal<MediaViewerItem | undefined>(item);\n  const activeItemRef = useSignalRef(getActiveItem);\n  const isScaled = useDerivedState(() => getTransform().scale !== 1, [getTransform]);\n  const activeItem = useDerivedState(getActiveItem);\n  const { height: windowHeight, width: windowWidth, isResizing } = useWindowSize();\n  const [getControlsVisible, setControlsVisible, lockControls] = useControlsSignal();\n\n  const lang = useOldLang();\n\n  useHistoryBack({\n    isActive: isOpen,\n    onBack: onClose,\n    shouldBeReplaced: true,\n  });\n\n  const selectItemDebounced = useDebouncedCallback(selectItem, [selectItem], DEBOUNCE_SELECT_MEDIA, true);\n  const clearSwipeDirectionDebounced = useDebouncedCallback(() => {\n    swipeDirectionRef.current = undefined;\n  }, [], DEBOUNCE_SWIPE, true);\n\n  const setIsActiveDebounced = useDebouncedCallback((value) => setIsActive(value), [], DEBOUNCE_ACTIVE, true);\n\n  const shouldCloseOnVideo = Boolean(isGif && !IS_IOS);\n  const clickXThreshold = IS_TOUCH_ENV ? 40 : windowWidth / 10;\n\n  const handleControlsVisibility = useLastCallback((e: React.MouseEvent<HTMLDivElement, MouseEvent>) => {\n    if (!IS_TOUCH_ENV) return;\n    const isFooter = windowHeight - e.pageY < CLICK_Y_THRESHOLD;\n    if (!isFooter && e.pageX < clickXThreshold) return;\n    if (!isFooter && e.pageX > windowWidth - clickXThreshold) return;\n    setControlsVisible(!getControlsVisible());\n  });\n\n  useTimeout(() => setControlsVisible(true), ANIMATION_DURATION);\n\n  useEffect(() => {\n    const { scale, x, y } = transformRef.current;\n    // Only update active media if slide is in default position\n    if (x === 0 && y === 0 && scale === 1) {\n      setActiveItem(item);\n    }\n  }, [item, setActiveItem, transformRef]);\n\n  useEffect(() => {\n    if (!isSynced || !activeItem || isLoadingMoreMedia) return;\n    loadMoreItemsIfNeeded(activeItem);\n  }, [activeItem, loadMoreItemsIfNeeded, isSynced, isLoadingMoreMedia]);\n\n  useLayoutEffect(() => {\n    const { x, y, scale } = getTransform();\n    lockControls(scale !== 1);\n    if (leftSlideRef.current) {\n      leftSlideRef.current.style.transform = getTransformStyle(-windowWidth + x - SLIDES_GAP);\n    }\n    if (activeSlideRef.current) {\n      activeSlideRef.current.style.transform = getTransformStyle(x, y, scale);\n    }\n    if (rightSlideRef.current) {\n      rightSlideRef.current.style.transform = getTransformStyle(windowWidth + x + SLIDES_GAP);\n    }\n  }, [getTransform, lockControls, windowWidth]);\n\n  useEffect(() => {\n    if (!containerRef.current || activeItemRef.current === undefined || isHidden || isFullscreen) {\n      return undefined;\n    }\n    let lastTransform = lastTransformRef.current;\n    const lastDragOffset = {\n      x: 0,\n      y: 0,\n    };\n    const lastZoomCenter = {\n      x: 0,\n      y: 0,\n    };\n    const panDelta = {\n      x: 0,\n      y: 0,\n    };\n    let lastGestureTime = Date.now();\n    let content: HTMLElement | null;\n    const setLastGestureTime = debounce(() => {\n      lastGestureTime = Date.now();\n    }, 500, false, true);\n\n    const changeSlide = (direction: number) => {\n      const cActiveItem = activeItemRef.current;\n      if (cActiveItem === undefined) return false;\n      const nextItem = getNextItem(cActiveItem, direction);\n      if (nextItem !== undefined) {\n        const offset = (windowWidth + SLIDES_GAP) * direction;\n        const transform = transformRef.current;\n        const x = transform.x + offset;\n        setIsActive(false);\n        setActiveItem(nextItem);\n        selectItemDebounced(nextItem);\n        setIsActiveDebounced(true);\n        lastTransform = { x: 0, y: 0, scale: 1 };\n        if (!withAnimation) {\n          setTransform(lastTransform);\n          return true;\n        }\n        cancelAnimation = animateNumber({\n          from: x,\n          to: 0,\n          duration: ANIMATION_DURATION,\n          timing: easeOutCubic,\n          onUpdate: (value) => setTransform({\n            y: 0,\n            x: value,\n            scale: 1,\n          }),\n        });\n        return true;\n      }\n      return false;\n    };\n\n    const changeSlideOnClick = (e: MouseEvent): [boolean, boolean] => {\n      const { scale } = transformRef.current;\n      if (scale !== 1) return [false, false];\n      if ((e.target as HTMLElement).closest('div.VideoPlayerControls')) {\n        return [false, false];\n      }\n      let direction = 0;\n      if (windowHeight - e.pageY < CLICK_Y_THRESHOLD) {\n        return [false, false];\n      }\n      if (e.pageX < clickXThreshold) {\n        direction = -1;\n      } else if (e.pageX > windowWidth - clickXThreshold) {\n        direction = 1;\n      }\n      const hasNextSlide = changeSlide(direction);\n      const isInThreshold = direction !== 0;\n      return [isInThreshold, hasNextSlide];\n    };\n\n    const handleKeyDown = (e: KeyboardEvent) => {\n      const { scale } = transformRef.current;\n      if (scale !== 1) return;\n      switch (e.key) {\n        case 'Left': // IE/Edge specific value\n        case 'ArrowLeft':\n          changeSlide(-1);\n          break;\n\n        case 'Right': // IE/Edge specific value\n        case 'ArrowRight':\n          changeSlide(1);\n          break;\n      }\n    };\n\n    const calculateOffsetBoundaries = (\n      { x, y, scale }: Transform,\n      offsetTop = 0,\n    ): [Transform, boolean, boolean] => {\n      const initialContentRect = initialContentRectRef.current;\n      if (!initialContentRect) return [{ x, y, scale }, true, true];\n      // Get current content boundaries\n      let inBoundsX = true;\n      let inBoundsY = true;\n\n      const centerX = (windowWidth - windowWidth * scale) / 2;\n      const centerY = (windowHeight - windowHeight * scale) / 2;\n\n      // If content is outside window we calculate offset boundaries\n      // based on initial content rect and current scale\n      const minOffsetX = Math.max(-initialContentRect.left * scale, centerX);\n      const maxOffsetX = windowWidth - initialContentRect.right * scale;\n      inBoundsX = isBetween(x, maxOffsetX, minOffsetX);\n      x = clamp(x, maxOffsetX, minOffsetX);\n\n      const minOffsetY = Math.max(-initialContentRect.top * scale + offsetTop, centerY);\n      const maxOffsetY = windowHeight - initialContentRect.bottom * scale;\n      inBoundsY = isBetween(y, maxOffsetY, minOffsetY);\n      y = clamp(y, maxOffsetY, minOffsetY);\n\n      return [{ x, y, scale }, inBoundsX, inBoundsY];\n    };\n\n    const onRelease = (e: MouseEvent | RealTouchEvent | WheelEvent) => {\n      // This allows to prevent onRelease triggered by debounced wheel event\n      // after onRelease was triggered manually in onDrag\n      if (isReleasedRef.current) {\n        isReleasedRef.current = false;\n        return;\n      }\n      if (e.type === 'mouseup') {\n        setIsMouseDown(false);\n      }\n      const transform = transformRef.current;\n      const { y, scale } = transform;\n      let x = transform.x;\n      const absX = Math.abs(x);\n      const absY = Math.abs(y);\n\n      clearSwipeDirectionDebounced();\n      setIsActiveDebounced(true);\n\n      // If scale is less than 1 we need to bounce back\n      if (scale < 1) {\n        lastTransform = { x: 0, y: 0, scale: 1 };\n        cancelAnimation = animateNumber({\n          from: [x, y, scale],\n          to: [0, 0, 1],\n          duration: ANIMATION_DURATION,\n          timing: easeOutCubic,\n          onUpdate: (value) => setTransform({\n            x: value[0],\n            y: value[1],\n            scale: value[2],\n          }),\n        });\n        return;\n      }\n      if (scale > 1) {\n        // Get current content boundaries\n        const s1 = Math.min(scale, MAX_ZOOM);\n        const scaleFactor = s1 / scale;\n\n        // Calculate new position based on the last zoom center to keep the zoom center\n        // at the same position when bouncing back from max zoom\n        let x1 = x * scaleFactor + (lastZoomCenter.x - scaleFactor * lastZoomCenter.x);\n        let y1 = y * scaleFactor + (lastZoomCenter.y - scaleFactor * lastZoomCenter.y);\n\n        // Arbitrary pan velocity coefficient\n        const k = 0.15;\n\n        // If scale didn't change, we need to add inertia to pan gesture\n        if (e.type !== 'wheel' && lastTransform.scale === scale) {\n          // Calculate user gesture velocity\n          const Vx = Math.abs(lastDragOffset.x) / (Date.now() - lastGestureTime);\n          const Vy = Math.abs(lastDragOffset.y) / (Date.now() - lastGestureTime);\n\n          // Add extra distance based on gesture velocity and last pan delta\n          x1 -= Math.abs(lastDragOffset.x) * Vx * k * panDelta.x;\n          y1 -= Math.abs(lastDragOffset.y) * Vy * k * panDelta.y;\n        }\n\n        [lastTransform] = calculateOffsetBoundaries({ x: x1, y: y1, scale: s1 }, HEADER_HEIGHT);\n        cancelAnimation = animateNumber({\n          from: [x, y, scale],\n          to: [lastTransform.x, lastTransform.y, lastTransform.scale],\n          duration: ANIMATION_DURATION,\n          timing: easeOutCubic,\n          onUpdate: (value) => setTransform({\n            x: value[0],\n            y: value[1],\n            scale: value[2],\n          }),\n        });\n        return;\n      }\n      lastTransform = {\n        x,\n        y,\n        scale,\n      };\n      if (absY >= SWIPE_Y_THRESHOLD) {\n        onClose();\n        return;\n      }\n      // Bounce back if vertical swipe is below threshold\n      if (absY > 0) {\n        cancelAnimation = animateNumber({\n          from: y,\n          to: 0,\n          duration: ANIMATION_DURATION,\n          timing: easeOutCubic,\n          onUpdate: (value) => setTransform({\n            x: 0,\n            y: value,\n            scale,\n          }),\n        });\n        return;\n      }\n      // Get horizontal swipe direction\n      const direction = x < 0 ? 1 : -1;\n      const cActiveItem = activeItemRef.current;\n      const nextItem = cActiveItem && getNextItem(cActiveItem, x < 0 ? 1 : -1);\n      // Get the direction of the last pan gesture.\n      // Could be different from the total horizontal swipe direction\n      // if user starts a swipe in one direction and then changes the direction\n      // we need to cancel slide transition\n      const dirX = panDelta.x < 0 ? -1 : 1;\n      if (nextItem !== undefined && absX >= SWIPE_X_THRESHOLD && direction === dirX) {\n        const offset = (windowWidth + SLIDES_GAP) * direction;\n        // If image is shifted by more than SWIPE_X_THRESHOLD,\n        // We shift everything by one screen width and then set new active message id\n        x += offset;\n        setActiveItem(nextItem);\n        selectItemDebounced(nextItem);\n      }\n      // Then we always return to the original position\n      cancelAnimation = animateNumber({\n        from: x,\n        to: 0,\n        duration: ANIMATION_DURATION,\n        timing: easeOutCubic,\n        onUpdate: (value) => setTransform({\n          y: 0,\n          x: value,\n          scale: scale ?? 1,\n        }),\n      });\n    };\n\n    const cleanup = captureEvents(containerRef.current, {\n      isNotPassive: true,\n      withNativeDrag: true,\n      excludedClosestSelector: '.MediaViewerFooter, .ZoomControls, .VideoPlayerControls',\n      minZoom: MIN_ZOOM,\n      maxZoom: MAX_ZOOM,\n      doubleTapZoom: DOUBLE_TAP_ZOOM,\n      withWheelDrag: true,\n      onCapture: (e) => {\n        if (checkIfControlTarget(e)) return;\n        const { x, y, scale } = transformRef.current;\n        if (e.type === 'mousedown') {\n          setIsMouseDown(true);\n          if (scale !== 1) {\n            e.preventDefault();\n            return;\n          }\n        }\n        lastGestureTime = Date.now();\n        if (x === 0 && y === 0 && scale === 1) {\n          if (!activeSlideRef.current) return;\n          content = activeSlideRef.current.querySelector('img, video');\n          if (!content) return;\n          // Store initial content rect, without transformations\n          initialContentRectRef.current = content.getBoundingClientRect();\n        }\n      },\n      onDrag: (event, captureEvent, {\n        dragOffsetX,\n        dragOffsetY,\n      }, cancelDrag) => {\n        if (isReleasedRef.current || checkIfControlTarget(event)) return;\n        // Avoid conflicts with swipe-to-back gestures\n        if (IS_IOS && captureEvent.type === 'touchstart') {\n          const { pageX } = (captureEvent as RealTouchEvent).touches[0];\n          if (pageX <= IOS_SCREEN_EDGE_THRESHOLD || pageX >= windowWidth - IOS_SCREEN_EDGE_THRESHOLD) {\n            return;\n          }\n        }\n        if (cancelAnimation) {\n          cancelAnimation();\n          cancelAnimation = undefined;\n        }\n        panDelta.x = lastDragOffset.x - dragOffsetX;\n        panDelta.y = lastDragOffset.y - dragOffsetY;\n        lastDragOffset.x = dragOffsetX;\n        lastDragOffset.y = dragOffsetY;\n        const absOffsetX = Math.abs(dragOffsetX);\n        const absOffsetY = Math.abs(dragOffsetY);\n        const { x, y, scale } = transformRef.current;\n\n        // If user is inactive but is still touching the screen\n        // we reset last gesture time\n        setLastGestureTime();\n\n        // If image is scaled we just need to pan it\n        if (scale !== 1) {\n          const x1 = lastTransform.x + dragOffsetX;\n          const y1 = lastTransform.y + dragOffsetY;\n          if (['wheel', 'mousemove'].includes(event.type)) {\n            const [transform, inBoundsX, inBoundsY] = calculateOffsetBoundaries({ x: x1, y: y1, scale }, HEADER_HEIGHT);\n            if (cancelDrag) cancelDrag(!inBoundsX, !inBoundsY);\n            setTransform(transform);\n            return;\n          }\n          if ('touches' in event && event.touches.length === 1) {\n            setTransform({\n              x: x1,\n              y: y1,\n              scale,\n            });\n          }\n          return;\n        }\n        if (event.type === 'mousemove') return;\n        if (swipeDirectionRef.current !== SwipeDirection.Vertical) {\n          // If user is swiping horizontally or horizontal shift is dominant\n          // we change only horizontal position\n          if (swipeDirectionRef.current === SwipeDirection.Horizontal\n            || Math.abs(x) > SWIPE_DIRECTION_THRESHOLD || absOffsetX / absOffsetY > SWIPE_DIRECTION_TOLERANCE) {\n            swipeDirectionRef.current = SwipeDirection.Horizontal;\n            setIsActive(false);\n            const limit = windowWidth + SLIDES_GAP;\n            const x1 = clamp(dragOffsetX, -limit, limit);\n            setTransform({\n              x: x1,\n              y: 0,\n              scale,\n            });\n            // We know that at this point onRelease will trigger slide change,\n            // We can trigger onRelease directly instead of waiting for the debounced callback\n            // to avoid a delay\n            if (event.type === 'wheel' && Math.abs(x1) > SWIPE_X_THRESHOLD * 2) {\n              onRelease(event);\n              isReleasedRef.current = true;\n            }\n            return;\n          }\n        }\n        // If vertical shift is dominant we change only vertical position\n        if (swipeDirectionRef.current === SwipeDirection.Vertical\n          || Math.abs(y) > SWIPE_DIRECTION_THRESHOLD || absOffsetY / absOffsetX > SWIPE_DIRECTION_TOLERANCE) {\n          swipeDirectionRef.current = SwipeDirection.Vertical;\n          const limit = windowHeight;\n          const y1 = clamp(dragOffsetY, -limit, limit);\n          setTransform({\n            x: 0,\n            y: y1,\n            scale,\n          });\n          if (event.type === 'wheel' && Math.abs(y1) > SWIPE_Y_THRESHOLD * 2) {\n            onRelease(event);\n            isReleasedRef.current = true;\n          }\n        }\n      },\n      onZoom: (e, {\n        zoom,\n        zoomFactor,\n        initialCenterX,\n        initialCenterY,\n        dragOffsetX,\n        dragOffsetY,\n        currentCenterX,\n        currentCenterY,\n      }) => {\n        if (cancelAnimation) cancelAnimation();\n        initialCenterX = initialCenterX || windowWidth / 2;\n        initialCenterY = initialCenterY || windowHeight / 2;\n        currentCenterX = currentCenterX || windowWidth / 2;\n        currentCenterY = currentCenterY || windowHeight / 2;\n\n        // Calculate current scale based on zoom factor and limits, add zoom margin for bounce back effect\n        const scale = zoom ?? clamp(lastTransform.scale * zoomFactor!, MIN_ZOOM * 0.5, MAX_ZOOM * 3);\n        const scaleFactor = scale / lastTransform.scale;\n        const offsetX = Math.abs(Math.min(lastTransform.x, 0));\n        const offsetY = Math.abs(Math.min(lastTransform.y, 0));\n\n        // Save last zoom center for bounce back effect\n        lastZoomCenter.x = currentCenterX;\n        lastZoomCenter.y = currentCenterY;\n\n        // Calculate new center relative to the shifted image\n        const scaledCenterX = offsetX + initialCenterX;\n        const scaledCenterY = offsetY + initialCenterY;\n\n        // Calculate how much we need to shift the image to keep the zoom center at the same position\n        const scaleOffsetX = (scaledCenterX - scaleFactor * scaledCenterX);\n        const scaleOffsetY = (scaledCenterY - scaleFactor * scaledCenterY);\n\n        const [transform] = calculateOffsetBoundaries({\n          x: lastTransform.x + scaleOffsetX + dragOffsetX,\n          y: lastTransform.y + scaleOffsetY + dragOffsetY,\n          scale,\n        });\n\n        setTransform(transform);\n      },\n      onClick(e) {\n        setIsMouseDown(false);\n        const [isInThreshold, hasNextSlide] = changeSlideOnClick(e as MouseEvent);\n        if (isInThreshold) {\n          e.preventDefault();\n          e.stopPropagation();\n          if (IS_TOUCH_ENV) return;\n          if (!hasNextSlide) onClose();\n          return;\n        }\n        if (lastTransform.scale !== 1 || IS_TOUCH_ENV) return;\n        if (shouldCloseOnVideo || !checkIfInsideSelector(e.target as HTMLElement, '.VideoPlayer')) {\n          onClose();\n        }\n      },\n      onDoubleClick(e, {\n        centerX,\n        centerY,\n      }) {\n        const [isInThreshold] = changeSlideOnClick(e as MouseEvent);\n        if (isInThreshold) {\n          e.preventDefault();\n          e.stopPropagation();\n          return;\n        }\n        if (!IS_TOUCH_ENV && e.type !== 'wheel') return;\n        const { x, y, scale } = transformRef.current;\n        // Calculate how much we need to shift the image to keep the zoom center at the same position\n        const scaleOffsetX = (centerX - DOUBLE_TAP_ZOOM * centerX);\n        const scaleOffsetY = (centerY - DOUBLE_TAP_ZOOM * centerY);\n        if (scale === 1) {\n          if (x !== 0 || y !== 0) return;\n          lastTransform = calculateOffsetBoundaries({\n            x: scaleOffsetX,\n            y: scaleOffsetY,\n            scale: DOUBLE_TAP_ZOOM,\n          })[0];\n        } else {\n          lastTransform = {\n            x: 0,\n            y: 0,\n            scale: 1,\n          };\n        }\n        cancelAnimation = animateNumber({\n          from: [x, y, scale],\n          to: [lastTransform.x, lastTransform.y, lastTransform.scale],\n          duration: ANIMATION_DURATION,\n          timing: easeOutCubic,\n          onUpdate: (value) => {\n            const transform = {\n              x: value[0],\n              y: value[1],\n              scale: value[2],\n            };\n            setTransform(transform);\n          },\n        });\n      },\n      onRelease,\n    });\n    document.addEventListener('keydown', handleKeyDown, false);\n    return () => {\n      cleanup();\n      document.removeEventListener('keydown', handleKeyDown, false);\n    };\n  },\n  [\n    activeItemRef,\n    clearSwipeDirectionDebounced,\n    clickXThreshold,\n    getNextItem,\n    isFullscreen,\n    isHidden,\n    onClose,\n    selectItemDebounced,\n    setActiveItem,\n    setIsActiveDebounced,\n    setTransform,\n    shouldCloseOnVideo,\n    transformRef,\n    windowHeight,\n    windowWidth,\n    withAnimation,\n  ]);\n\n  useEffect(() => {\n    const zoomChange = getZoomChange();\n    const hasZoomChanged = prevZoomChangeRef.current !== undefined\n      && prevZoomChangeRef.current !== zoomChange;\n    if (!containerRef.current || !hasZoomChanged || isHidden || isFullscreen) return;\n    prevZoomChangeRef.current = zoomChange;\n    const { scale } = transformRef.current;\n    const dir = zoomChange > 0 ? -1 : +1;\n    const minZoom = MIN_ZOOM * 0.6;\n    const maxZoom = MAX_ZOOM * 3;\n    let steps = 100;\n    let prevValue = 0;\n    if (scale <= minZoom && dir > 0) return;\n    if (scale >= maxZoom && dir < 0) return;\n    if (scale === 1 && dir > 0) steps = 20;\n    if (cancelZoomAnimation) cancelZoomAnimation();\n    cancelZoomAnimation = animateNumber({\n      from: dir,\n      to: dir * steps,\n      duration: ANIMATION_DURATION,\n      timing: easeOutQuart,\n      onUpdate: (value) => {\n        if (!containerRef.current) return;\n        const delta = round(value - prevValue, 2);\n        prevValue = value;\n        // To reuse existing logic we trigger wheel event for zoom buttons\n        const wheelEvent = new WheelEvent('wheel', {\n          deltaY: delta,\n          ctrlKey: true,\n        });\n        containerRef.current.dispatchEvent(wheelEvent);\n      },\n    });\n  }, [getZoomChange, isHidden, isFullscreen, transformRef]);\n\n  const [prevItem, nextItem] = useMemo(() => {\n    if (activeItem === undefined) return [undefined, undefined];\n    return [getNextItem(activeItem, -1), getNextItem(activeItem, 1)];\n  }, [activeItem, getNextItem]);\n\n  if (activeItem === undefined) return undefined;\n\n  const hasPrev = prevItem !== undefined;\n  const hasNext = nextItem !== undefined;\n  const isMoving = isMouseDown && isScaled;\n\n  return (\n    <div className=\"MediaViewerSlides\" ref={containerRef}>\n      <div className=\"MediaViewerSlide\" ref={leftSlideRef}>\n        {hasPrev && !isScaled && !isResizing && (\n          <MediaViewerContent\n            withAnimation={withAnimation}\n            isMoving={isMoving}\n            item={prevItem}\n            onClose={onClose}\n            onFooterClick={onFooterClick}\n            handleSponsoredClick={handleSponsoredClick}\n          />\n        )}\n      </div>\n      <div\n        className={buildClassName(\n          'MediaViewerSlide',\n          'MediaViewerSlide--active',\n          isMoving && 'MediaViewerSlide--moving',\n        )}\n        onClick={handleControlsVisibility}\n        ref={activeSlideRef}\n      >\n        <MediaViewerContent\n          item={activeItem}\n          withAnimation={withAnimation}\n          isActive={isActive}\n          isMoving={isMoving}\n          onClose={onClose}\n          onFooterClick={onFooterClick}\n          handleSponsoredClick={handleSponsoredClick}\n        />\n      </div>\n      <div className=\"MediaViewerSlide\" ref={rightSlideRef}>\n        {hasNext && !isScaled && !isResizing && (\n          <MediaViewerContent\n            withAnimation={withAnimation}\n            isMoving={isMoving}\n            item={nextItem}\n            onClose={onClose}\n            onFooterClick={onFooterClick}\n            handleSponsoredClick={handleSponsoredClick}\n          />\n        )}\n      </div>\n      {hasPrev && !isScaled && !IS_TOUCH_ENV && (\n        <button\n          type=\"button\"\n          className={`navigation prev ${isVideo && !isGif && 'inline'}`}\n          aria-label={lang('AccDescrPrevious')}\n          dir={lang.isRtl ? 'rtl' : undefined}\n        />\n      )}\n      {hasNext && !isScaled && !IS_TOUCH_ENV && (\n        <button\n          type=\"button\"\n          className={`navigation next ${isVideo && !isGif && 'inline'}`}\n          aria-label={lang('Next')}\n          dir={lang.isRtl ? 'rtl' : undefined}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default memo(MediaViewerSlides);\n\nfunction getTransformStyle(x = 0, y = 0, scale = 1) {\n  return `translate3d(${x.toFixed(3)}px, ${y.toFixed(3)}px, 0px) scale(${scale.toFixed(3)})`;\n}\n\nfunction checkIfInsideSelector(element: HTMLElement, selector: string) {\n  if (!element) return false;\n  if (element.matches(selector)) return true;\n  return Boolean(element.closest(selector));\n}\n\nfunction checkIfControlTarget(e: TouchEvent | MouseEvent) {\n  const target = e.target as HTMLElement;\n  if (checkIfInsideSelector(target, '.VideoPlayerControls')) {\n    if (checkIfInsideSelector(\n      target,\n      '.play, .fullscreen, .volume, .volume-slider, .playback-rate, .playback-rate-menu, .SeekLine',\n    )) {\n      return true;\n    }\n    e.preventDefault();\n    return true;\n  }\n  return false;\n}\n","import type { FC } from '../../lib/teact/teact';\nimport React, { useMemo } from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { ApiChat, ApiPeer } from '../../api/types';\nimport type { MediaViewerItem } from './helpers/getViewableMedia';\n\nimport {\n  getSenderTitle, isChatChannel, isChatGroup, isUserId,\n} from '../../global/helpers';\nimport {\n  selectSender,\n} from '../../global/selectors';\nimport { formatMediaDateTime } from '../../util/dates/dateFormat';\nimport renderText from '../common/helpers/renderText';\n\nimport useAppLayout from '../../hooks/useAppLayout';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Avatar from '../common/Avatar';\n\nimport './SenderInfo.scss';\n\ntype OwnProps = {\n  item?: MediaViewerItem;\n};\n\ntype StateProps = {\n  owner?: ApiPeer;\n};\n\nconst BULLET = '\\u2022';\nconst ANIMATION_DURATION = 350;\n\nconst SenderInfo: FC<OwnProps & StateProps> = ({\n  owner,\n  item,\n}) => {\n  const {\n    closeMediaViewer,\n    focusMessage,\n    toggleChatInfo,\n  } = getActions();\n\n  const { isMobile } = useAppLayout();\n\n  const handleFocusMessage = useLastCallback(() => {\n    closeMediaViewer();\n\n    if (item?.type !== 'message') return;\n\n    const message = item.message;\n\n    if (isMobile) {\n      setTimeout(() => {\n        toggleChatInfo({ force: false }, { forceSyncOnIOs: true });\n        focusMessage({ chatId: message.chatId, messageId: message.id });\n      }, ANIMATION_DURATION);\n    } else {\n      focusMessage({ chatId: message.chatId, messageId: message.id });\n    }\n  });\n\n  const lang = useOldLang();\n\n  const subtitle = useMemo(() => {\n    if (!item || item.type === 'standalone') return undefined;\n\n    const avatarOwner = item.type === 'avatar' ? item.avatarOwner : undefined;\n    const profilePhotos = item.type === 'avatar' ? item.profilePhotos : undefined;\n    const avatar = profilePhotos?.photos[item.mediaIndex!];\n    const isFallbackAvatar = avatar?.id === profilePhotos?.fallbackPhoto?.id;\n    const date = item.type === 'message' ? item.message.date : avatar?.date;\n    if (!date) return undefined;\n\n    const formattedDate = formatMediaDateTime(lang, date * 1000, true);\n    const count = profilePhotos?.count\n      && (profilePhotos.count + (profilePhotos?.fallbackPhoto ? 1 : 0));\n    const countText = count && lang('Of', [item.mediaIndex! + 1, count]);\n\n    const parts: string[] = [];\n    if (avatar) {\n      const chat = !isUserId(avatarOwner!.id) ? avatarOwner as ApiChat : undefined;\n      const isChannel = chat && isChatChannel(chat);\n      const isGroup = chat && isChatGroup(chat);\n      parts.push(lang(\n        isFallbackAvatar ? 'lng_mediaview_profile_public_photo'\n          : isChannel ? 'lng_mediaview_channel_photo'\n            : isGroup ? 'lng_mediaview_group_photo' : 'lng_mediaview_profile_photo',\n      ));\n    }\n\n    if (countText) parts.push(countText);\n\n    parts.push(formattedDate);\n\n    return parts.join(` ${BULLET} `);\n  }, [item, lang]);\n\n  if (!owner) {\n    return undefined;\n  }\n\n  const senderTitle = getSenderTitle(lang, owner);\n\n  return (\n    <div className=\"SenderInfo\" onClick={handleFocusMessage}>\n      <Avatar key={owner.id} size=\"medium\" peer={owner} />\n      <div className=\"meta\">\n        <div className=\"title\" dir=\"auto\">\n          {senderTitle && renderText(senderTitle)}\n        </div>\n        <div className=\"date\" dir=\"auto\">\n          {subtitle}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default withGlobal<OwnProps>(\n  (global, { item }): StateProps => {\n    const message = item?.type === 'message' ? item.message : undefined;\n    const messageSender = message && selectSender(global, message);\n\n    const owner = item?.type === 'avatar' ? item.avatarOwner : messageSender;\n\n    return {\n      owner,\n    };\n  },\n)(SenderInfo);\n","import React, {\n  beginHeavyAnimation,\n  memo, useEffect, useMemo, useRef,\n} from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type {\n  ApiChat,\n  ApiMessage,\n  ApiPeer,\n  ApiPeerPhotos,\n  ApiPhoto,\n  ApiSponsoredMessage,\n} from '../../api/types';\nimport { type MediaViewerMedia, MediaViewerOrigin, type ThreadId } from '../../types';\n\nimport { ANIMATION_END_DELAY } from '../../config';\nimport { requestMutation } from '../../lib/fasterdom/fasterdom';\nimport {\n  getChatMediaMessageIds, getMessagePaidMedia, isChatAdmin, isUserId,\n} from '../../global/helpers';\nimport {\n  selectChatMessage,\n  selectChatMessages,\n  selectChatScheduledMessages,\n  selectCurrentChatMediaSearch,\n  selectCurrentSharedMediaSearch,\n  selectIsChatWithSelf,\n  selectListedIds,\n  selectOutlyingListByMessageId,\n  selectPeer,\n  selectPeerPhotos,\n  selectPerformanceSettingsValue,\n  selectScheduledMessage, selectSponsoredMessage,\n  selectTabState,\n} from '../../global/selectors';\nimport { stopCurrentAudio } from '../../util/audioPlayer';\nimport captureEscKeyListener from '../../util/captureEscKeyListener';\nimport { disableDirectTextInput, enableDirectTextInput } from '../../util/directInputManager';\nimport { MEDIA_VIEWER_MEDIA_QUERY } from '../common/helpers/mediaDimensions';\nimport { renderMessageText } from '../common/helpers/renderMessageText';\nimport getViewableMedia, { getMediaViewerItem, type MediaViewerItem } from './helpers/getViewableMedia';\nimport { animateClosing, animateOpening } from './helpers/ghostAnimation';\n\nimport useAppLayout from '../../hooks/useAppLayout';\nimport useElectronDrag from '../../hooks/useElectronDrag';\nimport useFlag from '../../hooks/useFlag';\nimport useForceUpdate from '../../hooks/useForceUpdate';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\nimport { exitPictureInPictureIfNeeded, usePictureInPictureSignal } from '../../hooks/usePictureInPicture';\nimport usePreviousDeprecated from '../../hooks/usePreviousDeprecated';\nimport { dispatchPriorityPlaybackEvent } from '../../hooks/usePriorityPlaybackCheck';\nimport { useMediaProps } from './hooks/useMediaProps';\n\nimport ReportModal from '../common/ReportModal';\nimport Button from '../ui/Button';\nimport ShowTransition from '../ui/ShowTransition';\nimport Transition from '../ui/Transition';\nimport MediaViewerActions from './MediaViewerActions';\nimport MediaViewerSlides from './MediaViewerSlides';\nimport SenderInfo from './SenderInfo';\n\nimport './MediaViewer.scss';\n\ntype StateProps = {\n  chatId?: string;\n  threadId?: ThreadId;\n  messageId?: number;\n  message?: ApiMessage;\n  collectedMessageIds?: number[];\n  isChatWithSelf?: boolean;\n  canUpdateMedia?: boolean;\n  origin?: MediaViewerOrigin;\n  avatar?: ApiPhoto;\n  avatarOwner?: ApiPeer;\n  profilePhotos?: ApiPeerPhotos;\n  chatMessages?: Record<number, ApiMessage>;\n  sponsoredMessage?: ApiSponsoredMessage;\n  standaloneMedia?: MediaViewerMedia[];\n  mediaIndex?: number;\n  isHidden?: boolean;\n  withAnimation?: boolean;\n  shouldSkipHistoryAnimations?: boolean;\n  withDynamicLoading?: boolean;\n  isLoadingMoreMedia?: boolean;\n  isSynced?: boolean;\n};\n\nconst ANIMATION_DURATION = 250;\nconst AVATAR_LOAD_TRIGGER = 4;\n\nconst MediaViewer = ({\n  chatId,\n  threadId,\n  messageId,\n  message,\n  collectedMessageIds,\n  isChatWithSelf,\n  canUpdateMedia,\n  origin,\n  avatar,\n  avatarOwner,\n  profilePhotos,\n  chatMessages,\n  sponsoredMessage,\n  standaloneMedia,\n  mediaIndex,\n  withAnimation,\n  isHidden,\n  shouldSkipHistoryAnimations,\n  withDynamicLoading,\n  isLoadingMoreMedia,\n  isSynced,\n}: StateProps) => {\n  const {\n    openMediaViewer,\n    closeMediaViewer,\n    openForwardMenu,\n    focusMessage,\n    toggleChatInfo,\n    searchChatMediaMessages,\n    loadMoreProfilePhotos,\n    clickSponsoredMessage,\n    openUrl,\n  } = getActions();\n\n  const isOpen = Boolean(avatarOwner || message || standaloneMedia || sponsoredMessage);\n  const { isMobile } = useAppLayout();\n\n  /* Animation */\n  const animationKey = useRef<number>();\n  const senderId = message?.senderId || avatarOwner?.id || message?.chatId;\n  const prevSenderId = usePreviousDeprecated<string | undefined>(senderId);\n  const headerAnimation = withAnimation ? 'slideFade' : 'none';\n  const isGhostAnimation = Boolean(withAnimation && !shouldSkipHistoryAnimations);\n\n  /* Controls */\n  const [isReportModalOpen, openReportModal, closeReportModal] = useFlag();\n\n  const currentItem = getMediaViewerItem({\n    message, avatarOwner, standaloneMedia, profilePhotos, mediaIndex, sponsoredMessage,\n  });\n  const { media, isSingle } = getViewableMedia(currentItem) || {};\n\n  const {\n    isVideo,\n    isPhoto,\n    bestImageData,\n    bestData,\n    dimensions,\n    isGif,\n    isFromSharedMedia,\n  } = useMediaProps({\n    media, isAvatar: Boolean(avatarOwner), origin, delay: isGhostAnimation && ANIMATION_DURATION,\n  });\n\n  const canReport = avatarOwner && !isChatWithSelf;\n  const isVisible = !isHidden && isOpen;\n\n  const messageMediaIds = useMemo(() => {\n    return withDynamicLoading\n      ? collectedMessageIds\n      : getChatMediaMessageIds(chatMessages || {}, collectedMessageIds || [], isFromSharedMedia);\n  }, [chatMessages, collectedMessageIds, isFromSharedMedia, withDynamicLoading]);\n\n  if (isOpen && (!prevSenderId || prevSenderId !== senderId || animationKey.current === undefined)) {\n    animationKey.current = isSingle ? 0 : (messageId || mediaIndex);\n  }\n\n  const [getIsPictureInPicture] = usePictureInPictureSignal();\n\n  useEffect(() => {\n    if (!isOpen || getIsPictureInPicture()) {\n      return undefined;\n    }\n\n    disableDirectTextInput();\n    const stopPriorityPlayback = dispatchPriorityPlaybackEvent();\n\n    return () => {\n      stopPriorityPlayback();\n      enableDirectTextInput();\n    };\n  }, [isOpen, getIsPictureInPicture]);\n\n  useEffect(() => {\n    if (isVisible) {\n      exitPictureInPictureIfNeeded();\n    }\n  }, [isVisible]);\n\n  useEffect(() => {\n    if (isMobile) {\n      requestMutation(() => {\n        document.body.classList.toggle('is-media-viewer-open', isOpen);\n      });\n    }\n  }, [isMobile, isOpen]);\n\n  // eslint-disable-next-line no-null/no-null\n  const headerRef = useRef<HTMLDivElement>(null);\n  useElectronDrag(headerRef);\n\n  const forceUpdate = useForceUpdate();\n  useEffect(() => {\n    const mql = window.matchMedia(MEDIA_VIEWER_MEDIA_QUERY);\n    mql.addEventListener('change', forceUpdate);\n\n    return () => {\n      mql.removeEventListener('change', forceUpdate);\n    };\n  }, [forceUpdate]);\n\n  const prevMessage = usePreviousDeprecated<ApiMessage | undefined>(message);\n  const prevIsHidden = usePreviousDeprecated<boolean | undefined>(isHidden);\n  const prevOrigin = usePreviousDeprecated(origin);\n  const prevItem = usePreviousDeprecated(currentItem);\n  const prevBestImageData = usePreviousDeprecated(bestImageData);\n  const textParts = message ? renderMessageText({ message, forcePlayback: true, isForMediaViewer: true }) : undefined;\n  const hasFooter = Boolean(textParts);\n  const shouldAnimateOpening = prevIsHidden && prevItem !== currentItem;\n\n  useEffect(() => {\n    if (isGhostAnimation && isOpen && (shouldAnimateOpening || !prevItem)) {\n      beginHeavyAnimation(ANIMATION_DURATION + ANIMATION_END_DELAY);\n      animateOpening(hasFooter, origin!, bestImageData!, dimensions!, isVideo, message, mediaIndex);\n    }\n\n    if (isGhostAnimation && !isOpen && prevItem) {\n      beginHeavyAnimation(ANIMATION_DURATION + ANIMATION_END_DELAY);\n      animateClosing(prevOrigin!, prevBestImageData!, prevMessage, prevItem?.mediaIndex);\n    }\n  }, [\n    bestImageData, dimensions, hasFooter, isGhostAnimation, isOpen, isVideo, message, origin,\n    prevBestImageData, prevItem, prevMessage, prevOrigin, shouldAnimateOpening, mediaIndex,\n  ]);\n\n  const handleClose = useLastCallback(() => closeMediaViewer());\n\n  const handleFooterClick = useLastCallback(() => {\n    handleClose();\n\n    if (!chatId || !messageId) return;\n\n    if (isMobile) {\n      setTimeout(() => {\n        toggleChatInfo({ force: false }, { forceSyncOnIOs: true });\n        focusMessage({ chatId, threadId, messageId });\n      }, ANIMATION_DURATION);\n    } else {\n      focusMessage({ chatId, threadId, messageId });\n    }\n  });\n\n  const handleSponsoredClick = useLastCallback((isFromMedia?: boolean) => {\n    if (!sponsoredMessage || !chatId) return;\n\n    clickSponsoredMessage({ isMedia: isFromMedia, isFullscreen: true, chatId });\n    openUrl({ url: sponsoredMessage!.url });\n    closeMediaViewer();\n  });\n\n  const handleForward = useLastCallback(() => {\n    openForwardMenu({\n      fromChatId: chatId!,\n      messageIds: [messageId!],\n    });\n  });\n\n  useEffect(() => (isOpen ? captureEscKeyListener(() => {\n    handleClose();\n  }) : undefined), [handleClose, isOpen]);\n\n  useEffect(() => {\n    if (isVideo && !isGif) {\n      stopCurrentAudio();\n    }\n  }, [isGif, isVideo]);\n\n  const loadMoreItemsIfNeeded = useLastCallback((item?: MediaViewerItem) => {\n    if (!item || isLoadingMoreMedia) return;\n\n    if (item.type === 'avatar') {\n      const isNearEnd = item.mediaIndex >= item.profilePhotos.photos.length - AVATAR_LOAD_TRIGGER;\n      if (!isNearEnd) return;\n      loadMoreProfilePhotos({ peerId: item.avatarOwner.id });\n    }\n\n    if (item.type === 'message' && withDynamicLoading) {\n      searchChatMediaMessages({ chatId, threadId, currentMediaMessageId: item.message.id });\n    }\n  });\n\n  const getNextItem = useLastCallback((from: MediaViewerItem, direction: number): MediaViewerItem | undefined => {\n    if (direction === 0 || isSingle) return undefined;\n\n    if (from.type === 'standalone') {\n      const { media: fromMedia, mediaIndex: fromMediaIndex } = from;\n      const nextIndex = fromMediaIndex + direction;\n      if (nextIndex >= 0 && nextIndex < fromMedia.length) {\n        return { type: 'standalone', media: fromMedia, mediaIndex: nextIndex };\n      }\n\n      return undefined;\n    }\n\n    if (from.type === 'avatar') {\n      const { avatarOwner: fromAvatarOwner, profilePhotos: fromProfilePhotos, mediaIndex: fromMediaIndex } = from;\n      const nextIndex = fromMediaIndex + direction;\n      if (nextIndex >= 0 && fromProfilePhotos && nextIndex < fromProfilePhotos.photos.length) {\n        return {\n          type: 'avatar',\n          avatarOwner: fromAvatarOwner,\n          profilePhotos: fromProfilePhotos,\n          mediaIndex: nextIndex,\n        };\n      }\n\n      return undefined;\n    }\n\n    if (from.type === 'sponsoredMessage') {\n      const { message: fromSponsoredMessage, mediaIndex: fromSponsoredMessageIndex } = from;\n      const nextIndex = fromSponsoredMessageIndex! + direction;\n      if (nextIndex >= 0 && fromSponsoredMessage) {\n        return { type: 'sponsoredMessage', message: fromSponsoredMessage, mediaIndex: nextIndex };\n      }\n\n      return undefined;\n    }\n\n    const { message: fromMessage, mediaIndex: fromMediaIndex } = from;\n\n    const paidMedia = getMessagePaidMedia(fromMessage);\n    if (paidMedia) {\n      const nextIndex = fromMediaIndex! + direction;\n\n      if (nextIndex >= 0 && nextIndex < paidMedia.extendedMedia.length) {\n        return { type: 'message', message: fromMessage, mediaIndex: nextIndex };\n      }\n    }\n\n    const index = messageMediaIds?.indexOf(fromMessage.id);\n    if (index === undefined) return undefined;\n    const nextIndex = index + direction;\n    const nextMessageId = messageMediaIds![nextIndex];\n    const nextMessage = chatMessages?.[nextMessageId];\n    if (nextMessage) {\n      return { type: 'message', message: nextMessage };\n    }\n\n    return undefined;\n  });\n\n  const openMediaViewerItem = useLastCallback((item?: MediaViewerItem) => {\n    if (!item) {\n      handleClose();\n      return;\n    }\n\n    const itemChatId = item.type === 'avatar'\n      ? item.avatarOwner.id : item.type === 'message'\n        ? item.message.chatId : undefined;\n    const itemMessageId = item.type === 'message' ? item.message.id : undefined;\n    const itemStandaloneMedia = item.type === 'standalone' ? item.media : undefined;\n\n    openMediaViewer({\n      origin: origin!,\n      chatId: itemChatId,\n      messageId: itemMessageId,\n      standaloneMedia: itemStandaloneMedia,\n      mediaIndex: item.mediaIndex,\n      isAvatarView: item.type === 'avatar',\n      withDynamicLoading,\n    }, {\n      forceOnHeavyAnimation: true,\n    });\n  });\n\n  const handleBeforeDelete = useLastCallback(() => {\n    const mediaCount = profilePhotos?.photos.length\n      || standaloneMedia?.length || messageMediaIds?.length || 0;\n    if (mediaCount <= 1 || !currentItem) {\n      handleClose();\n      return;\n    }\n    // Before deleting, select previous media\n    const prevMedia = getNextItem(currentItem, -1);\n    if (prevMedia) {\n      openMediaViewerItem(prevMedia);\n      return;\n    }\n\n    if ((currentItem.type === 'avatar' && isUserId(currentItem.avatarOwner.id)) || currentItem.type === 'standalone') {\n      // Keep current item, it'll update when indexes shift\n      return;\n    }\n\n    handleClose();\n  });\n\n  const lang = useOldLang();\n\n  return (\n    <ShowTransition\n      id=\"MediaViewer\"\n      isOpen={isOpen}\n      isHidden={isHidden}\n      shouldAnimateFirstRender\n      noCloseTransition={shouldSkipHistoryAnimations}\n    >\n      <div className=\"media-viewer-head\" dir={lang.isRtl ? 'rtl' : undefined} ref={headerRef}>\n        {isMobile && (\n          <Button\n            className=\"media-viewer-close\"\n            round\n            size=\"smaller\"\n            color=\"translucent-white\"\n            ariaLabel={lang('Close')}\n            onClick={handleClose}\n          >\n            <i className=\"icon icon-close\" />\n          </Button>\n        )}\n        <Transition activeKey={animationKey.current!} name={headerAnimation}>\n          <SenderInfo\n            key={media?.id}\n            item={currentItem}\n          />\n        </Transition>\n        <MediaViewerActions\n          mediaData={bestData}\n          isVideo={isVideo}\n          item={currentItem}\n          canUpdateMedia={canUpdateMedia}\n          canReport={canReport}\n          onBeforeDelete={handleBeforeDelete}\n          onReport={openReportModal}\n          onCloseMediaViewer={handleClose}\n          onForward={handleForward}\n        />\n        <ReportModal\n          isOpen={isReportModalOpen}\n          onClose={closeReportModal}\n          subject=\"media\"\n          photo={avatar}\n          peerId={avatarOwner?.id}\n        />\n      </div>\n      <MediaViewerSlides\n        item={currentItem}\n        loadMoreItemsIfNeeded={loadMoreItemsIfNeeded}\n        isLoadingMoreMedia={isLoadingMoreMedia}\n        isSynced={isSynced}\n        getNextItem={getNextItem}\n        chatId={chatId}\n        isPhoto={isPhoto}\n        isGif={isGif}\n        threadId={threadId}\n        avatarOwnerId={avatarOwner?.id}\n        origin={origin}\n        isOpen={isOpen}\n        hasFooter={hasFooter}\n        isVideo={isVideo}\n        withAnimation={withAnimation}\n        onClose={handleClose}\n        selectItem={openMediaViewerItem}\n        isHidden={isHidden}\n        onFooterClick={handleFooterClick}\n        handleSponsoredClick={handleSponsoredClick}\n      />\n    </ShowTransition>\n  );\n};\n\nexport default memo(withGlobal(\n  (global): StateProps => {\n    const { mediaViewer, shouldSkipHistoryAnimations } = selectTabState(global);\n    const {\n      chatId,\n      threadId,\n      messageId,\n      origin,\n      isHidden,\n      withDynamicLoading,\n      standaloneMedia,\n      mediaIndex,\n      isAvatarView,\n      isSponsoredMessage,\n    } = mediaViewer;\n    const withAnimation = selectPerformanceSettingsValue(global, 'mediaViewerAnimations');\n\n    const { currentUserId, isSynced } = global;\n    const isChatWithSelf = Boolean(chatId) && selectIsChatWithSelf(global, chatId);\n\n    if (isAvatarView) {\n      const peer = selectPeer(global, chatId!);\n      let canUpdateMedia = false;\n      if (peer) {\n        canUpdateMedia = isUserId(peer.id) ? peer.id === currentUserId : isChatAdmin(peer as ApiChat);\n      }\n\n      const profilePhotos = selectPeerPhotos(global, chatId!);\n\n      return {\n        profilePhotos,\n        avatar: profilePhotos?.photos[mediaIndex!],\n        avatarOwner: peer,\n        isLoadingMoreMedia: profilePhotos?.isLoading,\n        isChatWithSelf,\n        canUpdateMedia,\n        withAnimation,\n        origin,\n        shouldSkipHistoryAnimations,\n        isHidden,\n        standaloneMedia,\n        mediaIndex,\n        isSynced,\n      };\n    }\n\n    let message: ApiMessage | undefined;\n    if (chatId && messageId) {\n      if (origin && [MediaViewerOrigin.ScheduledAlbum, MediaViewerOrigin.ScheduledInline].includes(origin)) {\n        message = selectScheduledMessage(global, chatId, messageId);\n      } else {\n        message = selectChatMessage(global, chatId, messageId);\n      }\n    }\n\n    let sponsoredMessage: ApiSponsoredMessage | undefined;\n    if (isSponsoredMessage && chatId) {\n      if (origin === MediaViewerOrigin.SponsoredMessage) {\n        sponsoredMessage = selectSponsoredMessage(global, chatId);\n      }\n    }\n\n    let chatMessages: Record<number, ApiMessage> | undefined;\n\n    if (chatId) {\n      if (origin && [MediaViewerOrigin.ScheduledAlbum, MediaViewerOrigin.ScheduledInline].includes(origin)) {\n        chatMessages = selectChatScheduledMessages(global, chatId);\n      } else {\n        chatMessages = selectChatMessages(global, chatId);\n      }\n    }\n\n    let isLoadingMoreMedia = false;\n    const isOriginInline = origin === MediaViewerOrigin.Inline;\n    const isOriginAlbum = origin === MediaViewerOrigin.Album;\n    let collectedMessageIds: number[] | undefined;\n\n    if (chatId && threadId && messageId) {\n      if (withDynamicLoading && (isOriginInline || isOriginAlbum)) {\n        const currentSearch = selectCurrentChatMediaSearch(global);\n        isLoadingMoreMedia = Boolean(currentSearch?.isLoading);\n        const { foundIds } = (currentSearch?.currentSegment) || {};\n        collectedMessageIds = foundIds;\n      } else if (origin === MediaViewerOrigin.SharedMedia) {\n        const currentSearch = selectCurrentSharedMediaSearch(global);\n        const { foundIds } = (currentSearch && currentSearch.resultsByType && currentSearch.resultsByType.media) || {};\n        collectedMessageIds = foundIds;\n      } else if (isOriginInline || isOriginAlbum) {\n        const outlyingList = selectOutlyingListByMessageId(global, chatId, threadId, messageId);\n        collectedMessageIds = outlyingList || selectListedIds(global, chatId, threadId);\n      }\n    }\n\n    return {\n      chatId,\n      threadId,\n      messageId,\n      isChatWithSelf,\n      origin,\n      message,\n      chatMessages,\n      sponsoredMessage,\n      collectedMessageIds,\n      withAnimation,\n      isHidden,\n      shouldSkipHistoryAnimations,\n      withDynamicLoading,\n      standaloneMedia,\n      mediaIndex,\n      isLoadingMoreMedia,\n      isSynced,\n    };\n  },\n)(MediaViewer));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"CdTfL4f7\",\"fadeIn\":\"MyeHARy0\",\"closing\":\"EZbKn_M3\",\"peer\":\"kW0xpExG\",\"name\":\"BDZrSTO_\",\"name_hasUnreadStory\":\"OoUm5AUZ\",\"nameHasUnreadStory\":\"OoUm5AUZ\",\"hidden\":\"lnVtxMZI\",\"contextMenu\":\"N1sagA0s\"};","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"bu_hGbaa\",\"fullSize\":\"W9A8SEMl\",\"backdrop\":\"OFh6u50Q\",\"captionBackdrop\":\"Jd1DYS6Y\",\"backdropNonInteractive\":\"xe67dhtF\",\"close\":\"Mye8Dwxa\",\"wrapper\":\"gLHHo5k8\",\"slideAnimation\":\"GJVwqV9e\",\"slideAnimationToActive\":\"_Yn4SWUB\",\"content\":\"hGCH03qc\",\"slideAnimationFromActive\":\"ZecqXqKy\",\"storyHeader\":\"e7HHuS1g\",\"composer\":\"FXineBYO\",\"caption\":\"RKedwa0I\",\"captionGradient\":\"sHNAfxzf\",\"media\":\"PVZ8TOWS\",\"mediaPreview\":\"lQfkulvp\",\"contentInner\":\"Wi0DXPH2\",\"name\":\"Ka1CGfzq\",\"slide\":\"urTtSsk9\",\"mobileSlide\":\"AjXOHOgE\",\"slidePreview\":\"Sef28wEh\",\"activeSlide\":\"uAlXNXJN\",\"slideInner\":\"g8ypsnnC\",\"mediaWrapper\":\"YiuvOPgT\",\"forward\":\"pGKsAszF\",\"storyIndicators\":\"jGDd2sza\",\"sender\":\"eMYhXF_X\",\"senderInfoTransition\":\"PXnfXZur\",\"senderInfo\":\"WpyVfrsc\",\"senderMeta\":\"jmKI_lhC\",\"senderName\":\"H1uod43o\",\"storyMetaRow\":\"zimpR8Hz\",\"storyMeta\":\"hGTnZuar\",\"closeButton\":\"WlLsjJ2Z\",\"actions\":\"GrsJNw3y\",\"active\":\"q756IpZB\",\"visibilityButton\":\"prxptFFf\",\"visibilityButtonSelf\":\"_MVsZpgB\",\"button\":\"TkphaPyQ\",\"buttonMenu\":\"K0_xAdzf\",\"captionInner\":\"D_5mWNmi\",\"captionContent\":\"ilyTRZtw\",\"captionText\":\"hmFA5qb1\",\"hasOverflow\":\"e1gyTmKe\",\"expanded\":\"HIMnUViv\",\"animate\":\"CvnxnCxN\",\"withShowMore\":\"Vq8pl_kQ\",\"captionShowMore\":\"bM5rlQtM\",\"navigate\":\"nZ30pf4g\",\"prev\":\"SXpRZiax\",\"next\":\"twOBFwUE\",\"modal\":\"nLPOogqS\",\"thumbnail\":\"MnNC7VHS\",\"ghost\":\"fME2l_yv\",\"ghost2\":\"TYicp2_K\",\"ghostImage\":\"HjoURJRK\",\"forwardHeader\":\"JJFtefb9\",\"clickable\":\"BsqMBS2I\",\"headerTitle\":\"G8OgmMDJ\",\"forwardInfo\":\"_M8CgT7s\",\"fromPeer\":\"nJr8QgYX\"};","import type { IDimensions } from '../../../global/types';\nimport { StoryViewerOrigin } from '../../../types';\n\nimport { ANIMATION_END_DELAY } from '../../../config';\nimport fastBlur from '../../../lib/fastBlur';\nimport { requestMutation } from '../../../lib/fasterdom/fasterdom';\nimport { getPeerStoryHtmlId } from '../../../global/helpers';\nimport { applyStyles } from '../../../util/animation';\nimport stopEvent from '../../../util/stopEvent';\nimport { IS_CANVAS_FILTER_SUPPORTED } from '../../../util/windowEnvironment';\nimport windowSize from '../../../util/windowSize';\nimport { REM } from '../../common/helpers/mediaDimensions';\n\nimport storyRibbonStyles from '../StoryRibbon.module.scss';\nimport styles from '../StoryViewer.module.scss';\n\nconst ANIMATION_DURATION = 200;\nconst OFFSET_BOTTOM = 3.5 * REM;\nconst MOBILE_OFFSET = 0.5 * REM;\nconst MOBILE_WIDTH = 600;\n\nexport function animateOpening(\n  userId: string,\n  origin: StoryViewerOrigin,\n  thumb: string,\n  bestImageData: string | undefined,\n  dimensions: IDimensions,\n) {\n  const { mediaEl: fromImage } = getNodes(origin, userId);\n  if (!fromImage) {\n    return;\n  }\n  const { width: windowWidth, height: windowHeight } = windowSize.get();\n  let { width: toWidth, height: toHeight } = dimensions;\n\n  const isMobile = windowWidth <= MOBILE_WIDTH;\n\n  if (isMobile) {\n    toWidth = windowWidth - 2 * MOBILE_OFFSET;\n    toHeight = windowHeight - OFFSET_BOTTOM - 2 * MOBILE_OFFSET;\n\n    const safeAreaBottom = getComputedStyle(document.documentElement).getPropertyValue('--safe-area-bottom');\n    if (safeAreaBottom) {\n      toHeight -= parseFloat(safeAreaBottom);\n    }\n  }\n\n  const toLeft = isMobile ? MOBILE_OFFSET : (windowWidth - toWidth) / 2;\n  const toTop = isMobile ? MOBILE_OFFSET : (windowHeight - (toHeight + OFFSET_BOTTOM)) / 2;\n\n  const {\n    top: fromTop, left: fromLeft, width: fromWidth, height: fromHeight,\n  } = fromImage.getBoundingClientRect();\n\n  const fromTranslateX = (fromLeft + fromWidth / 2) - (toLeft + toWidth / 2);\n  const fromTranslateY = (fromTop + fromHeight / 2) - (toTop + toHeight / 2);\n  const fromScaleX = fromWidth / toWidth;\n  const fromScaleY = fromHeight / toHeight;\n\n  requestMutation(() => {\n    const ghost = createGhost(bestImageData || thumb, !bestImageData);\n    applyStyles(ghost, {\n      top: `${toTop}px`,\n      left: `${toLeft}px`,\n      width: `${toWidth}px`,\n      height: `${toHeight}px`,\n      transform: `translate3d(${fromTranslateX}px, ${fromTranslateY}px, 0) scale(${fromScaleX}, ${fromScaleY})`,\n    });\n\n    const container = document.getElementById('StoryViewer')!;\n    container.appendChild(ghost);\n    document.body.classList.add('ghost-animating');\n\n    requestMutation(() => {\n      applyStyles(ghost, {\n        transform: '',\n      });\n\n      setTimeout(() => {\n        requestMutation(() => {\n          if (container.contains(ghost)) {\n            container.removeChild(ghost);\n          }\n          document.body.classList.remove('ghost-animating');\n        });\n      }, ANIMATION_DURATION + ANIMATION_END_DELAY);\n    });\n  });\n}\n\nexport function animateClosing(\n  userId: string,\n  origin: StoryViewerOrigin,\n  bestImageData: string,\n) {\n  const { mediaEl: toImage } = getNodes(origin, userId);\n\n  const fromImage = document.getElementById('StoryViewer')!.querySelector<HTMLImageElement>(\n    `.${styles.mobileSlide} .${styles.media}, .${styles.activeSlide} .${styles.media}`,\n  );\n  if (!fromImage || !toImage) {\n    return;\n  }\n  const {\n    top: fromTop, left: fromLeft, width: fromWidth, height: fromHeight,\n  } = fromImage.getBoundingClientRect();\n  const {\n    top: toTop, left: toLeft, width: toWidth, height: toHeight,\n  } = toImage.getBoundingClientRect();\n\n  const toTranslateX = (toLeft + toWidth / 2) - (fromLeft + fromWidth / 2);\n  const toTranslateY = (toTop + toHeight / 2) - (fromTop + fromHeight / 2);\n  const toScaleX = toWidth / fromWidth;\n  const toScaleY = toHeight / fromHeight;\n\n  requestMutation(() => {\n    const ghost = createGhost(bestImageData);\n    applyStyles(ghost, {\n      top: `${fromTop}px`,\n      left: `${fromLeft}px`,\n      width: `${fromWidth}px`,\n      height: `${fromHeight}px`,\n    });\n\n    const ghost2 = createGhost(toImage.src, undefined, true);\n    const ghost2Top = (fromTop + fromHeight / 2) - fromWidth / 2;\n    applyStyles(ghost2, {\n      top: `${ghost2Top}px`,\n      left: `${fromLeft}px`,\n      width: `${fromWidth}px`,\n      height: `${fromWidth}px`,\n    });\n\n    const container = document.getElementById('StoryViewer')!;\n    container.appendChild(ghost);\n    document.body.appendChild(ghost2);\n    document.body.classList.add('ghost-animating');\n\n    requestMutation(() => {\n      applyStyles(ghost, {\n        transform: `translate3d(${toTranslateX}px, ${toTranslateY}px, 0) scale(${toScaleX}, ${toScaleY})`,\n      });\n\n      applyStyles(ghost2, {\n        transform: `translate3d(${toTranslateX}px, ${toTranslateY}px, 0) scale(${toScaleX})`,\n        opacity: '1',\n      });\n\n      setTimeout(() => {\n        requestMutation(() => {\n          if (container.contains(ghost)) {\n            container.removeChild(ghost);\n          }\n\n          if (document.body.contains(ghost2)) {\n            document.body.removeChild(ghost2);\n          }\n\n          document.body.classList.remove('ghost-animating');\n        });\n      }, ANIMATION_DURATION + ANIMATION_END_DELAY);\n    });\n  });\n}\n\nconst RADIUS = 2;\nconst ITERATIONS = 2;\n\nfunction createGhost(source: string, hasBlur = false, isGhost2 = false) {\n  const ghost = document.createElement('div');\n  ghost.classList.add(!isGhost2 ? styles.ghost : styles.ghost2);\n\n  const img = new Image();\n  img.draggable = false;\n  img.oncontextmenu = stopEvent;\n  img.classList.add(styles.ghostImage);\n\n  if (hasBlur) {\n    const canvas = document.createElement('canvas');\n    canvas.classList.add(styles.thumbnail);\n    img.onload = () => {\n      const ctx = canvas.getContext('2d', { alpha: false })!;\n      const {\n        width,\n        height,\n      } = img;\n\n      requestMutation(() => {\n        canvas.width = width;\n        canvas.height = height;\n\n        if (IS_CANVAS_FILTER_SUPPORTED) {\n          ctx.filter = `blur(${RADIUS}px)`;\n        }\n\n        ctx.drawImage(img, -RADIUS * 2, -RADIUS * 2, width + RADIUS * 4, height + RADIUS * 4);\n\n        if (!IS_CANVAS_FILTER_SUPPORTED) {\n          fastBlur(ctx, 0, 0, width, height, RADIUS, ITERATIONS);\n        }\n      });\n    };\n    img.src = source;\n    ghost.appendChild(canvas);\n  } else {\n    img.src = source;\n    ghost.appendChild(img);\n  }\n\n  return ghost;\n}\n\nfunction getNodes(origin: StoryViewerOrigin, userId: string) {\n  let containerSelector;\n  const mediaSelector = `#${getPeerStoryHtmlId(userId)}`;\n\n  switch (origin) {\n    case StoryViewerOrigin.StoryRibbon:\n      containerSelector = `#LeftColumn .${storyRibbonStyles.root}`;\n      break;\n    case StoryViewerOrigin.MiddleHeaderAvatar:\n      containerSelector = '.MiddleHeader .Transition_slide-active .ChatInfo';\n      break;\n    case StoryViewerOrigin.ChatList:\n      containerSelector = '#LeftColumn .chat-list';\n      break;\n    case StoryViewerOrigin.SearchResult:\n      containerSelector = '#LeftColumn .LeftSearch--container';\n      break;\n  }\n\n  const container = document.querySelector<HTMLElement>(containerSelector)!;\n  const mediaEls = container && container.querySelectorAll<HTMLImageElement>(`${mediaSelector} img`);\n\n  return {\n    container,\n    mediaEl: mediaEls?.[0],\n  };\n}\n","import type { IDimensions } from '../../../global/types';\n\nimport { roundToNearestEven } from '../../../util/math';\n\nexport const BASE_STORY_WIDTH = 720;\nexport const BASE_STORY_HEIGHT = 1280;\nconst BASE_SCREEN_WIDTH = 1200;\nconst BASE_SCREEN_HEIGHT = 800;\nconst BASE_ACTIVE_SLIDE_WIDTH = 405;\nconst BASE_ACTIVE_SLIDE_HEIGHT = 720;\nconst BASE_SLIDE_WIDTH = 135;\nconst BASE_SLIDE_HEIGHT = 240;\nconst BASE_GAP_WIDTH = 40;\n\nexport function calculateSlideSizes(windowWidth: number, windowHeight: number): {\n  activeSlide: IDimensions;\n  slide: IDimensions;\n  scale: number;\n  toActiveScale: number;\n  fromActiveScale: number;\n} {\n  const scale = calculateScale(BASE_SCREEN_WIDTH, BASE_SCREEN_HEIGHT, windowWidth, windowHeight);\n\n  const activeSlideWidth = roundToNearestEven(BASE_ACTIVE_SLIDE_WIDTH * scale);\n  const slideWidth = roundToNearestEven(BASE_SLIDE_WIDTH * scale);\n  // Avoid fractional values to prevent blurry text\n  return {\n    activeSlide: {\n      width: activeSlideWidth,\n      height: roundToNearestEven(BASE_ACTIVE_SLIDE_HEIGHT * scale),\n    },\n    slide: {\n      width: slideWidth,\n      height: roundToNearestEven(BASE_SLIDE_HEIGHT * scale),\n    },\n    scale,\n    toActiveScale: activeSlideWidth / slideWidth,\n    fromActiveScale: slideWidth / activeSlideWidth,\n  };\n}\n\nexport function calculateOffsetX({\n  scale,\n  slideAmount,\n  isActiveSlideSize,\n  isMoveThroughActiveSlide,\n  isBackward,\n}: {\n  scale: number;\n  slideAmount: number;\n  isActiveSlideSize: boolean;\n  isMoveThroughActiveSlide?: boolean;\n  isBackward: boolean;\n}) {\n  const mainOffset = BASE_GAP_WIDTH + (isActiveSlideSize ? BASE_ACTIVE_SLIDE_WIDTH : BASE_SLIDE_WIDTH);\n  const additionalOffset = (Math.abs(slideAmount) - 1)\n    * ((isMoveThroughActiveSlide ? BASE_ACTIVE_SLIDE_WIDTH : BASE_SLIDE_WIDTH) + BASE_GAP_WIDTH);\n  const totalOffset = roundToNearestEven((mainOffset + additionalOffset) * scale);\n\n  return isBackward ? -totalOffset : totalOffset;\n}\n\nfunction calculateScale(baseWidth: number, baseHeight: number, newWidth: number, newHeight: number) {\n  const widthScale = newWidth / baseWidth;\n  const heightScale = newHeight / baseHeight;\n\n  return Math.min(widthScale, heightScale);\n}\n","import { useMemo } from '../../../lib/teact/teact';\n\nimport { calculateSlideSizes } from '../helpers/dimensions';\n\nimport useWindowSize from '../../../hooks/window/useWindowSize';\n\nexport default function useSlideSizes() {\n  const { width: windowWidth, height: windowHeight } = useWindowSize();\n  return useMemo(() => calculateSlideSizes(windowWidth, windowHeight), [windowWidth, windowHeight]);\n}\n","import type { ApiTypeStory } from '../../../api/types';\nimport { ApiMediaFormat } from '../../../api/types';\n\nimport { getStoryMediaHash, hasMessageText } from '../../../global/helpers';\n\nimport useMedia from '../../../hooks/useMedia';\n\nexport default function useStoryProps(\n  story?: ApiTypeStory, isCurrentUserPremium = false, isDropdownMenuOpen = false,\n) {\n  const isLoadedStory = story && 'content' in story;\n  const isDeletedStory = story && 'isDeleted' in story;\n  const hasText = isLoadedStory ? hasMessageText(story) : false;\n  const hasForwardInfo = isLoadedStory && Boolean(story.forwardInfo);\n\n  let thumbnail: string | undefined;\n  if (isLoadedStory) {\n    if (story.content.photo?.thumbnail) {\n      thumbnail = story.content.photo.thumbnail.dataUri;\n    }\n    if (story.content.video?.thumbnail?.dataUri) {\n      thumbnail = story.content.video.thumbnail.dataUri;\n    }\n  }\n\n  const previewHash = isLoadedStory ? getStoryMediaHash(story) : undefined;\n  const previewBlobUrl = useMedia(previewHash);\n  const isVideo = Boolean(isLoadedStory && story.content.video);\n  const noSound = isLoadedStory && story.content.video?.noSound;\n  const fullMediaHash = isLoadedStory ? getStoryMediaHash(story, 'full') : undefined;\n  const fullMediaData = useMedia(fullMediaHash, !story, isVideo ? ApiMediaFormat.Progressive : ApiMediaFormat.BlobUrl);\n  const altMediaHash = isVideo && isLoadedStory ? getStoryMediaHash(story, 'full', true) : undefined;\n  const altMediaData = useMedia(altMediaHash, !story, ApiMediaFormat.Progressive);\n\n  const hasFullData = Boolean(fullMediaData || altMediaData);\n  const bestImageData = isVideo ? previewBlobUrl : fullMediaData || previewBlobUrl;\n  const hasThumb = !previewBlobUrl && !hasFullData;\n\n  const canDownload = isCurrentUserPremium && isLoadedStory && !story.noForwards;\n  const downloadHash = isLoadedStory ? getStoryMediaHash(story, 'download') : undefined;\n  const downloadMediaData = useMedia(downloadHash, !canDownload && !isDropdownMenuOpen);\n\n  return {\n    isLoadedStory,\n    isDeletedStory,\n    hasText,\n    hasForwardInfo,\n    thumbnail,\n    previewHash,\n    previewBlobUrl,\n    isVideo,\n    noSound,\n    fullMediaHash,\n    fullMediaData,\n    altMediaHash,\n    altMediaData,\n    hasFullData,\n    bestImageData,\n    hasThumb,\n    canDownload,\n    downloadMediaData,\n  };\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"GrE47IXS\",\"closeButton\":\"NlWSF1pA\",\"stealthIcon\":\"qKi5jsGM\",\"title\":\"BFctFGoT\",\"description\":\"fZIJH4IG\",\"listItem\":\"RGD70uBt\",\"icon\":\"HCYfPccW\",\"button\":\"AM_sxoXP\",\"subtitle\":\"L8oRQyKb\"};","import React, { memo, useEffect, useState } from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { ApiStealthMode } from '../../api/types';\n\nimport { selectIsCurrentUserPremium, selectTabState } from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport { getServerTime } from '../../util/serverTime';\n\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Button from '../ui/Button';\nimport ListItem from '../ui/ListItem';\nimport Modal from '../ui/Modal';\nimport TextTimer from '../ui/TextTimer';\n\nimport styles from './StealthModeModal.module.scss';\n\ntype StateProps = {\n  isOpen?: boolean;\n  stealthMode?: ApiStealthMode;\n  isCurrentUserPremium?: boolean;\n};\n\nconst StealthModeModal = ({ isOpen, stealthMode, isCurrentUserPremium } : StateProps) => {\n  const {\n    toggleStealthModal,\n    activateStealthMode,\n    showNotification,\n    openPremiumModal,\n  } = getActions();\n  const [isOnCooldown, setIsOnCooldown] = useState(false);\n\n  useEffect(() => {\n    if (!stealthMode) return;\n    const serverTime = getServerTime();\n    if (stealthMode.cooldownUntil && stealthMode.cooldownUntil > serverTime) {\n      setIsOnCooldown(true);\n    }\n  }, [stealthMode, isOpen]);\n\n  const lang = useOldLang();\n\n  const handleTimerEnds = useLastCallback(() => {\n    setIsOnCooldown(false);\n  });\n\n  const handleClose = useLastCallback(() => {\n    toggleStealthModal({ isOpen: false });\n  });\n\n  const handleActivate = useLastCallback(() => {\n    if (!isCurrentUserPremium) {\n      openPremiumModal({ initialSection: 'stories' });\n      return;\n    }\n\n    activateStealthMode();\n    showNotification({\n      title: lang('StealthModeOn'),\n      message: lang('StealthModeOnHint'),\n    });\n    toggleStealthModal({ isOpen: false });\n  });\n\n  return (\n    <Modal\n      className=\"component-theme-dark\"\n      contentClassName={styles.root}\n      isOpen={isOpen}\n      isSlim\n      onClose={handleClose}\n    >\n      <Button\n        round\n        color=\"translucent\"\n        size=\"smaller\"\n        className={styles.closeButton}\n        ariaLabel={lang('Close')}\n        onClick={handleClose}\n      >\n        <i className=\"icon icon-close\" />\n      </Button>\n      <div className={styles.stealthIcon}>\n        <i className=\"icon icon-eye-closed-outline\" />\n      </div>\n      <div className={styles.title}>{lang('StealthMode')}</div>\n      <div className={styles.description}>\n        {lang(isCurrentUserPremium ? 'StealthModeHint' : 'StealthModePremiumHint')}\n      </div>\n      <ListItem\n        className={buildClassName(styles.listItem, 'smaller-icon')}\n        multiline\n        inactive\n        leftElement={<i className={buildClassName('icon icon-stealth-past', styles.icon)} />}\n      >\n        <span className=\"title\">{lang('HideRecentViews')}</span>\n        <span className={buildClassName('subtitle', styles.subtitle)}>{lang('HideRecentViewsDescription')}</span>\n      </ListItem>\n      <ListItem\n        className={buildClassName(styles.listItem, 'smaller-icon')}\n        multiline\n        inactive\n        leftElement={<i className={buildClassName('icon icon-stealth-future', styles.icon)} aria-hidden />}\n      >\n        <span className=\"title\">{lang('HideNextViews')}</span>\n        <span className={buildClassName('subtitle', styles.subtitle)}>{lang('HideNextViewsDescription')}</span>\n      </ListItem>\n      <Button\n        className={styles.button}\n        size=\"smaller\"\n        disabled={isOnCooldown}\n        isShiny={!isCurrentUserPremium}\n        withPremiumGradient={!isCurrentUserPremium}\n        onClick={handleActivate}\n      >\n        {!isCurrentUserPremium ? lang('UnlockStealthMode')\n          : isOnCooldown\n            ? (<TextTimer langKey=\"AvailableIn\" endsAt={stealthMode!.cooldownUntil!} onEnd={handleTimerEnds} />)\n            : lang('EnableStealthMode')}\n      </Button>\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal((global): StateProps => {\n  const tabState = selectTabState(global);\n\n  return {\n    isOpen: tabState.storyViewer?.isStealthModalOpen,\n    stealthMode: global.stories.stealthMode,\n    isCurrentUserPremium: selectIsCurrentUserPremium(global),\n  };\n})(StealthModeModal));\n","import React, { memo, useCallback } from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport type { ApiTypeStory } from '../../api/types';\n\nimport useOldLang from '../../hooks/useOldLang';\n\nimport ConfirmDialog from '../ui/ConfirmDialog';\n\ninterface OwnProps {\n  isOpen: boolean;\n  story?: ApiTypeStory;\n  onClose: NoneToVoidFunction;\n}\n\nfunction StoryDeleteConfirmModal({\n  isOpen, story, onClose,\n}: OwnProps) {\n  const { deleteStory, openNextStory } = getActions();\n\n  const lang = useOldLang();\n\n  const handleDeleteStoryClick = useCallback(() => {\n    if (!story) {\n      return;\n    }\n\n    openNextStory();\n    deleteStory({ peerId: story.peerId, storyId: story.id });\n    onClose();\n  }, [onClose, story]);\n\n  return (\n    <ConfirmDialog\n      isOpen={isOpen}\n      onClose={onClose}\n      title={lang('DeleteStoryTitle')}\n      text={lang('DeleteStorySubtitle')}\n      confirmLabel={lang('Delete')}\n      confirmHandler={handleDeleteStoryClick}\n      confirmIsDestructive\n      className=\"component-theme-dark\"\n    />\n  );\n}\n\nexport default memo(StoryDeleteConfirmModal);\n","import React, { memo, useMemo, useState } from '../../../lib/teact/teact';\n\nimport type { ApiUser } from '../../../api/types';\n\nimport { filterUsersByName } from '../../../global/helpers';\nimport { unique } from '../../../util/iteratees';\nimport { MEMO_EMPTY_ARRAY } from '../../../util/memo';\n\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport PeerPicker from '../../common/pickers/PeerPicker';\n\ninterface OwnProps {\n  id: string;\n  contactListIds?: string[];\n  currentUserId: string;\n  selectedIds?: string[];\n  lockedIds?: string[];\n  usersById: Record<string, ApiUser>;\n  onSelect: (selectedIds: string[]) => void;\n}\n\nfunction AllowDenyList({\n  id,\n  contactListIds,\n  currentUserId,\n  usersById,\n  selectedIds,\n  lockedIds,\n  onSelect,\n}: OwnProps) {\n  const lang = useOldLang();\n\n  const [searchQuery, setSearchQuery] = useState<string>('');\n  const displayedIds = useMemo(() => {\n    const contactIds = (contactListIds || []).filter((userId) => userId !== currentUserId);\n    return unique(filterUsersByName([...selectedIds || [], ...contactIds], usersById, searchQuery));\n  }, [contactListIds, currentUserId, searchQuery, selectedIds, usersById]);\n\n  return (\n    <PeerPicker\n      key={id}\n      itemIds={displayedIds}\n      selectedIds={selectedIds ?? MEMO_EMPTY_ARRAY}\n      lockedSelectedIds={lockedIds}\n      filterValue={searchQuery}\n      filterPlaceholder={lang('Search')}\n      searchInputId={`${id}-picker-search`}\n      isSearchable\n      withDefaultPadding\n      forceShowSelf\n      onSelectedIdsChange={onSelect}\n      onFilterChange={setSearchQuery}\n      allowMultiple\n      withStatus\n      itemInputType=\"checkbox\"\n    />\n  );\n}\n\nexport default memo(AllowDenyList);\n","// extracted by mini-css-extract-plugin\nexport default {\"buttonHolder\":\"BDK_pgpt\",\"active\":\"N8ujSwlC\"};","import React, {\n  memo, useCallback, useMemo, useState,\n} from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiUser } from '../../../api/types';\n\nimport { filterUsersByName } from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\nimport { unique } from '../../../util/iteratees';\n\nimport useEffectWithPrevDeps from '../../../hooks/useEffectWithPrevDeps';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport PeerPicker from '../../common/pickers/PeerPicker';\nimport FloatingActionButton from '../../ui/FloatingActionButton';\n\nimport styles from './CloseFriends.module.scss';\n\nexport type OwnProps = {\n  isActive?: boolean;\n  currentUserId: string;\n  usersById: Record<string, ApiUser>;\n  contactListIds?: string[];\n  onClose: NoneToVoidFunction;\n};\n\nfunction CloseFriends({\n  isActive, contactListIds, usersById, currentUserId, onClose,\n}: OwnProps) {\n  const { saveCloseFriends } = getActions();\n\n  const lang = useOldLang();\n  const [searchQuery, setSearchQuery] = useState<string>('');\n  const [isSubmitShown, setIsSubmitShown] = useState<boolean>(false);\n  const [newSelectedContactIds, setNewSelectedContactIds] = useState<string[]>([]);\n\n  const closeFriendIds = useMemo(() => {\n    return (contactListIds || []).filter((userId) => usersById[userId]?.isCloseFriend);\n  }, [contactListIds, usersById]);\n\n  const displayedIds = useMemo(() => {\n    const contactIds = (contactListIds || []).filter((id) => id !== currentUserId);\n    return unique(filterUsersByName([...closeFriendIds, ...contactIds], usersById, searchQuery));\n  }, [closeFriendIds, contactListIds, currentUserId, searchQuery, usersById]);\n\n  useEffectWithPrevDeps(([prevIsActive]) => {\n    if (!prevIsActive && isActive) {\n      setIsSubmitShown(false);\n      setNewSelectedContactIds(closeFriendIds);\n    }\n  }, [isActive, closeFriendIds]);\n\n  const handleSelectedContactIdsChange = useCallback((value: string[]) => {\n    setNewSelectedContactIds(value);\n    setIsSubmitShown(true);\n  }, []);\n\n  const handleSubmit = useLastCallback(() => {\n    saveCloseFriends({ userIds: newSelectedContactIds });\n    onClose();\n  });\n\n  return (\n    <>\n      <PeerPicker\n        itemIds={displayedIds || []}\n        selectedIds={newSelectedContactIds}\n        filterValue={searchQuery}\n        filterPlaceholder={lang('Search')}\n        searchInputId=\"close-friends-picker-search\"\n        isSearchable\n        withDefaultPadding\n        onSelectedIdsChange={handleSelectedContactIdsChange}\n        onFilterChange={setSearchQuery}\n        allowMultiple\n        withStatus\n        itemInputType=\"checkbox\"\n      />\n\n      <div className={buildClassName(styles.buttonHolder, isSubmitShown && styles.active)}>\n        <FloatingActionButton\n          isShown={isSubmitShown}\n          onClick={handleSubmit}\n          ariaLabel={lang('Save')}\n        >\n          <i className=\"icon icon-check\" />\n        </FloatingActionButton>\n      </div>\n    </>\n  );\n}\n\nexport default memo(CloseFriends);\n","// extracted by mini-css-extract-plugin\nexport default {\"modal\":\"hz7SomkK\",\"header\":\"NV6Rt2g9\",\"closeButton\":\"SN1GFS6L\",\"headerTitle\":\"gi0Y6Ns6\",\"content\":\"sTaVDkiD\",\"section\":\"eUiuPoEC\",\"title\":\"iPPiw9DI\",\"list\":\"OUP1Ss0W\",\"option\":\"JL33Sa3b\",\"checked\":\"qVPo_cVL\",\"input\":\"zsDaUk0i\",\"icon\":\"AfYCVlys\",\"action\":\"njMeBBwY\",\"optionContent\":\"TUAAnG2w\",\"footer\":\"r24Qz2bf\",\"info\":\"ljeRVBOm\",\"submit\":\"RwNLN_rH\"};","import React, {\n  memo, useEffect, useMemo, useState,\n} from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { ApiStory, ApiUser } from '../../api/types';\nimport type { ApiPrivacySettings, PrivacyVisibility } from '../../types';\nimport type { IconName } from '../../types/icons';\n\nimport { getSenderTitle, getUserFullName } from '../../global/helpers';\nimport { selectPeerStory, selectTabState } from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport stopEvent from '../../util/stopEvent';\n\nimport useFlag from '../../hooks/useFlag';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Button from '../ui/Button';\nimport ListItem from '../ui/ListItem';\nimport Modal from '../ui/Modal';\nimport Switcher from '../ui/Switcher';\nimport Transition from '../ui/Transition';\nimport AllowDenyList from './privacy/AllowDenyList';\nimport CloseFriends from './privacy/CloseFriends';\n\nimport styles from './StorySettings.module.scss';\n\ninterface OwnProps {\n  isOpen?: boolean;\n  onClose?: NoneToVoidFunction;\n}\n\ninterface StateProps {\n  story?: ApiStory;\n  visibility?: ApiPrivacySettings;\n  contactListIds?: string[];\n  usersById: Record<string, ApiUser>;\n  currentUserId: string;\n}\n\ntype PrivacyAction = 'blockUserIds' | 'closeFriends' | 'blockContactUserIds' | 'allowUserIds';\n\ninterface PrivacyOption {\n  name: string;\n  value: PrivacyVisibility;\n  color: [string, string];\n  icon: IconName;\n  actions?: PrivacyAction;\n}\n\nconst OPTIONS: PrivacyOption[] = [{\n  name: 'StoryPrivacyOptionEveryone',\n  value: 'everybody',\n  color: ['#50ABFF', '#007AFF'],\n  icon: 'channel-filled',\n  actions: 'blockUserIds',\n}, {\n  name: 'StoryPrivacyOptionContacts',\n  value: 'contacts',\n  color: ['#C36EFF', '#8B60FA'],\n  icon: 'user-filled',\n  actions: 'blockContactUserIds',\n}, {\n  name: 'StoryPrivacyOptionCloseFriends',\n  value: 'closeFriends',\n  color: ['#88D93A', '#30B73B'],\n  icon: 'favorite-filled',\n  actions: 'closeFriends',\n}, {\n  name: 'StoryPrivacyOptionSelectedContacts',\n  value: 'nobody',\n  color: ['#FFB743', '#F69A36'],\n  icon: 'group-filled',\n  actions: 'allowUserIds',\n}];\n\nenum Screens {\n  privacy,\n  allowList,\n  closeFriends,\n  denyList,\n}\n\nfunction StorySettings({\n  isOpen,\n  story,\n  visibility,\n  contactListIds,\n  usersById,\n  currentUserId,\n  onClose,\n}: OwnProps & StateProps) {\n  const { editStoryPrivacy, toggleStoryInProfile } = getActions();\n\n  const lang = useOldLang();\n  const [isOpenModal, openModal, closeModal] = useFlag(false);\n  const [privacy, setPrivacy] = useState<ApiPrivacySettings | undefined>(visibility);\n  const [isPinned, setIsPinned] = useState(story?.isInProfile);\n  const [activeKey, setActiveKey] = useState<Screens>(Screens.privacy);\n  const [editingBlockingCategory, setEditingBlockingCategory] = useState<PrivacyVisibility>('everybody');\n  const isBackButton = activeKey !== Screens.privacy;\n\n  const closeFriendIds = useMemo(() => {\n    return (contactListIds || []).filter((userId) => usersById[userId]?.isCloseFriend);\n  }, [contactListIds, usersById]);\n\n  const lockedIds = useMemo(() => {\n    if (activeKey === Screens.allowList\n      && (!privacy?.allowUserIds?.length || privacy.allowUserIds[0] === currentUserId)\n    ) {\n      return [currentUserId];\n    }\n\n    return undefined;\n  }, [activeKey, currentUserId, privacy?.allowUserIds]);\n\n  const selectedBlockedIds = useMemo(() => {\n    if (editingBlockingCategory !== privacy?.visibility) return [];\n    return privacy?.blockUserIds || [];\n  }, [editingBlockingCategory, privacy?.blockUserIds, privacy?.visibility]);\n\n  const handleAllowUserIdsChange = useLastCallback((newIds: string[]) => {\n    setPrivacy({\n      ...privacy!,\n      allowUserIds: newIds?.length ? newIds?.filter((id) => id !== currentUserId) : [currentUserId],\n    });\n  });\n\n  const handleDenyUserIdsChange = useLastCallback((newIds: string[]) => {\n    setPrivacy({\n      ...privacy!,\n      blockUserIds: newIds,\n      visibility: editingBlockingCategory,\n    });\n  });\n\n  useEffect(() => {\n    if (isOpen) {\n      setActiveKey(Screens.privacy);\n      openModal();\n    }\n  }, [isOpen]);\n\n  useEffect(() => {\n    setPrivacy(visibility);\n  }, [visibility]);\n\n  const handleCloseButtonClick = useLastCallback(() => {\n    if (activeKey === Screens.privacy) {\n      closeModal();\n      return;\n    }\n\n    setActiveKey(Screens.privacy);\n  });\n\n  function handleVisibilityChange(newVisibility: PrivacyVisibility) {\n    setPrivacy({\n      ...privacy!,\n      visibility: newVisibility,\n    });\n  }\n\n  function handleActionClick(e: React.MouseEvent<HTMLDivElement>, action: PrivacyAction) {\n    stopEvent(e);\n\n    switch (action) {\n      case 'closeFriends':\n        setActiveKey(Screens.closeFriends);\n        break;\n      case 'allowUserIds':\n        setActiveKey(Screens.allowList);\n        break;\n      case 'blockUserIds':\n        setActiveKey(Screens.denyList);\n        setEditingBlockingCategory('everybody');\n        break;\n      case 'blockContactUserIds':\n        setActiveKey(Screens.denyList);\n        setEditingBlockingCategory('contacts');\n        break;\n    }\n  }\n\n  const handleIsPinnedToggle = useLastCallback(() => {\n    setIsPinned(!isPinned);\n  });\n\n  // console.warn(privacy?.visibility, story?.visibility, OPTIONS);\n\n  const handleSubmit = useLastCallback(() => {\n    editStoryPrivacy({\n      peerId: story!.peerId,\n      storyId: story!.id,\n      privacy: privacy!,\n    });\n    if (story!.isInProfile !== isPinned) {\n      toggleStoryInProfile({ peerId: story!.peerId, storyId: story!.id, isInProfile: isPinned });\n    }\n    closeModal();\n  });\n\n  function renderActionName(action: PrivacyAction) {\n    if (action === 'closeFriends') {\n      if (closeFriendIds.length === 0) {\n        return lang('StoryPrivacyOptionCloseFriendsDetail');\n      }\n\n      if (closeFriendIds.length === 1) {\n        return getSenderTitle(lang, usersById[closeFriendIds[0]]);\n      }\n\n      return lang('StoryPrivacyOptionPeople', closeFriendIds.length, 'i');\n    }\n\n    if ((action === 'blockUserIds' && privacy?.visibility === 'everybody')\n      || (action === 'blockContactUserIds' && privacy?.visibility === 'contacts')) {\n      if (!privacy?.blockUserIds?.length) {\n        return lang('StoryPrivacyOptionContactsDetail');\n      }\n\n      if (privacy.blockUserIds.length === 1) {\n        return lang('StoryPrivacyOptionExcludePerson', getUserFullName(usersById[privacy.blockUserIds[0]]));\n      }\n\n      return lang('StoryPrivacyOptionExcludePeople', privacy.blockUserIds.length, 'i');\n    }\n\n    if (!privacy?.allowUserIds || privacy.allowUserIds.length === 0) {\n      return lang('StoryPrivacyOptionSelectedContactsDetail');\n    }\n\n    if (privacy.allowUserIds.length === 1) {\n      return getUserFullName(usersById[privacy.allowUserIds[0]]);\n    }\n\n    return lang('StoryPrivacyOptionPeople', privacy.allowUserIds.length, 'i');\n  }\n\n  // eslint-disable-next-line consistent-return\n  function renderHeaderContent() {\n    switch (activeKey) {\n      case Screens.privacy:\n        return <h3 className={styles.headerTitle}>{lang('StoryPrivacyAlertEditTitle')}</h3>;\n      case Screens.allowList:\n        return <h3 className={styles.headerTitle}>{lang('StoryPrivacyAlertSelectContactsTitle')}</h3>;\n      case Screens.closeFriends:\n        return <h3 className={styles.headerTitle}>{lang('CloseFriends')}</h3>;\n      case Screens.denyList:\n        return <h3 className={styles.headerTitle}>{lang('StoryPrivacyAlertExcludedContactsTitle')}</h3>;\n    }\n  }\n\n  // eslint-disable-next-line consistent-return\n  function renderContent(isActive: boolean) {\n    switch (activeKey) {\n      case Screens.privacy:\n        return renderPrivacyList();\n      case Screens.closeFriends:\n        return (\n          <CloseFriends\n            key=\"close-friends\"\n            isActive={isActive}\n            contactListIds={contactListIds}\n            currentUserId={currentUserId}\n            usersById={usersById}\n            onClose={handleCloseButtonClick}\n          />\n        );\n      case Screens.denyList:\n        return (\n          <AllowDenyList\n            key=\"deny-list\"\n            id=\"deny-list\"\n            contactListIds={contactListIds}\n            currentUserId={currentUserId}\n            usersById={usersById}\n            selectedIds={selectedBlockedIds}\n            onSelect={handleDenyUserIdsChange}\n          />\n        );\n      case Screens.allowList:\n        return (\n          <AllowDenyList\n            key=\"allow-list\"\n            id=\"allow-list\"\n            contactListIds={contactListIds}\n            lockedIds={lockedIds}\n            currentUserId={currentUserId}\n            usersById={usersById}\n            selectedIds={privacy?.allowUserIds}\n            onSelect={handleAllowUserIdsChange}\n          />\n        );\n    }\n  }\n\n  function renderPrivacyList() {\n    const storyLifeTime = story ? convertSecondsToHours(story.expireDate - story.date) : 0;\n\n    return (\n      <>\n        <div className={styles.section}>\n          <h3 className={styles.title}>{lang('StoryPrivacyAlertSubtitleProfile')}</h3>\n          <div className={styles.list}>\n            {OPTIONS.map((option) => (\n              <label\n                key={option.value}\n                className={buildClassName(styles.option, option.value === privacy?.visibility && styles.checked)}\n              >\n                <input\n                  type=\"radio\"\n                  name=\"story_privacy\"\n                  className={styles.input}\n                  value={option.value}\n                  checked={option.value === privacy?.visibility}\n                  onChange={() => handleVisibilityChange(option.value)}\n                  teactExperimentControlled\n                />\n                <span\n                  className={styles.icon}\n                  style={`--color-from: ${option.color[0]}; --color-to: ${option.color[1]}`}\n                >\n                  <i className={`icon icon-${option.icon}`} />\n                </span>\n                <div className={styles.optionContent}>\n                  <span className={buildClassName(styles.option_name)}>{lang(option.name)}</span>\n                  {option.actions && (\n                    <div\n                      tabIndex={0}\n                      role=\"button\"\n                      className={styles.action}\n                      aria-label={lang('Edit')}\n                      onClick={(e) => { handleActionClick(e, option.actions!); }}\n                    >\n                      <span className={styles.actionInner}>{renderActionName(option.actions)}</span>\n                      <i className=\"icon icon-next\" aria-hidden />\n                    </div>\n                  )}\n                </div>\n              </label>\n            ))}\n          </div>\n        </div>\n        <div className={styles.section}>\n          <ListItem ripple onClick={handleIsPinnedToggle}>\n            <span>{lang('StoryKeep')}</span>\n            <Switcher\n              id=\"group-notifications\"\n              label={lang('StoryKeep')}\n              checked={isPinned}\n              inactive\n            />\n          </ListItem>\n        </div>\n        <div className={styles.footer}>\n          <div className={styles.info}>{lang('StoryKeepInfo', storyLifeTime)}</div>\n          <div className={styles.submit}>\n            <Button onClick={handleSubmit}>{lang('StoryPrivacyButtonSave')}</Button>\n          </div>\n        </div>\n      </>\n    );\n  }\n\n  return (\n    <Modal\n      isOpen={isOpenModal}\n      className={buildClassName(styles.modal, 'component-theme-dark')}\n      onClose={closeModal}\n      noBackdrop\n      onCloseAnimationEnd={onClose}\n    >\n      <div className={styles.header}>\n        <Button\n          className={buildClassName(styles.closeButton, 'close-button')}\n          round\n          color=\"translucent\"\n          size=\"smaller\"\n          onClick={handleCloseButtonClick}\n          ariaLabel={isBackButton ? lang('Common.Back') : lang('Common.Close')}\n        >\n          <div className={buildClassName('animated-close-icon', isBackButton && 'state-back')} />\n        </Button>\n        <Transition name=\"slideFade\" activeKey={activeKey}>\n          {renderHeaderContent()}\n        </Transition>\n      </div>\n      <Transition\n        activeKey={activeKey}\n        name=\"slideFade\"\n        slideClassName=\"ChatOrUserPicker_slide\"\n        className={styles.content}\n      >\n        {renderContent}\n      </Transition>\n    </Modal>\n  );\n}\n\nexport default memo(withGlobal<OwnProps>((global): StateProps => {\n  const {\n    storyViewer: {\n      storyId, peerId,\n    },\n  } = selectTabState(global);\n  const story = (peerId && storyId)\n    ? selectPeerStory(global, peerId, storyId)\n    : undefined;\n\n  return {\n    story: story && 'content' in story ? story as ApiStory : undefined,\n    visibility: story && 'visibility' in story ? story.visibility : undefined,\n    contactListIds: global.contactList?.userIds,\n    usersById: global.users.byId,\n    currentUserId: global.currentUserId!,\n  };\n})(StorySettings));\n\nfunction convertSecondsToHours(seconds: number): number {\n  const secondsInHour = 3600;\n  const minutesInHour = 60;\n\n  const hours = Math.floor(seconds / secondsInHour);\n  const remainingSeconds = seconds % secondsInHour;\n  const remainingMinutes = Math.floor(remainingSeconds / minutesInHour);\n\n  // If remaining minutes are greater than or equal to 30, round up the hours\n  return remainingMinutes >= 30 ? hours + 1 : hours;\n}\n","let scrollLockEl: HTMLElement | null | undefined;\nlet excludedClosestSelector: string | undefined;\n\nconst IGNORED_KEYS: Record<string, boolean> = {\n  Down: true,\n  ArrowDown: true,\n  Up: true,\n  ArrowUp: true,\n  Left: true,\n  ArrowLeft: true,\n  Right: true,\n  ArrowRight: true,\n  ' ': true,\n  PageUp: true,\n  PageDown: true,\n  End: true,\n  Home: true,\n  Tab: true,\n};\n\nfunction isTextBox(target: EventTarget | null) {\n  if (!target || !(target instanceof HTMLElement)) return false;\n  const element = target;\n  const tagName = element.tagName.toLowerCase();\n  if (tagName === 'textarea') return true;\n  if (tagName !== 'input') return false;\n  const type = element.getAttribute('type');\n  if (!type) return false;\n  const inputTypes = [\n    'text', 'password', 'number', 'email', 'tel', 'url',\n    'search', 'date', 'datetime', 'datetime-local', 'time', 'month', 'week',\n  ];\n  return inputTypes.indexOf(type.toLowerCase()) > -1;\n}\n\nexport const getTouchY = (e: WheelEvent | TouchEvent | React.WheelEvent | React.TouchEvent) => {\n  return ('changedTouches' in e ? e.changedTouches[0].clientY : 0);\n};\n\nconst preventDefault = (e: WheelEvent | TouchEvent) => {\n  const deltaY = 'deltaY' in e ? e.deltaY : getTouchY(e);\n\n  if (\n    !scrollLockEl\n    // Allow overlay scrolling\n    || !scrollLockEl.contains(e.target as HTMLElement)\n    // Prevent top overscroll\n    || (scrollLockEl.scrollTop <= 0 && deltaY <= 0)\n    // Prevent bottom overscroll\n    || (scrollLockEl.scrollTop >= (scrollLockEl.scrollHeight - scrollLockEl.offsetHeight) && deltaY >= 0)\n  ) {\n    if (excludedClosestSelector && (e.target as HTMLElement).closest(excludedClosestSelector)) return;\n    e.preventDefault();\n  }\n};\n\nfunction preventDefaultForScrollKeys(e: KeyboardEvent) {\n  if (IGNORED_KEYS[e.key] && !isTextBox(e.target)) {\n    e.preventDefault();\n  }\n}\n\nexport function disableScrolling(el?: HTMLElement | null, _excludedClosestSelector?: string) {\n  scrollLockEl = el;\n  excludedClosestSelector = _excludedClosestSelector;\n  // Disable scrolling in Chrome\n  document.addEventListener('wheel', preventDefault, { passive: false });\n  document.addEventListener('touchmove', preventDefault, { passive: false });\n  document.onkeydown = preventDefaultForScrollKeys;\n\n  return enableScrolling;\n}\n\nexport function enableScrolling() {\n  scrollLockEl = undefined;\n  excludedClosestSelector = undefined;\n  document.removeEventListener('wheel', preventDefault); // Enable scrolling in Chrome\n  document.removeEventListener('touchmove', preventDefault);\n  // eslint-disable-next-line no-null/no-null\n  document.onkeydown = null;\n}\n","export const PRIMARY_VIDEO_MIME = 'video/mp4; codecs=hvc1.1.6.L63.00';\nexport const SECONDARY_VIDEO_MIME = 'video/mp4; codecs=avc1.64001E';\n","import { ApiMediaFormat } from '../api/types';\n\nimport { callApi } from '../api/gramjs';\n\nconst MB = 1024 * 1024;\nconst DEFAULT_PART_SIZE = 0.25 * MB;\nconst MAX_END_TO_CACHE = 5 * MB - 1; // We only cache the first 2 MB of each file\n\nconst bufferCache = new Map<string, ArrayBuffer>();\nconst sizeCache = new Map<string, number>();\nconst pendingRequests = new Map<string, Promise<{ arrayBuffer?: ArrayBuffer; fullSize?: number } | undefined>>();\n\nexport async function* makeProgressiveLoader(\n  url: string,\n  start = 0,\n  chunkSize = DEFAULT_PART_SIZE,\n): AsyncGenerator<ArrayBuffer, void, undefined> {\n  const match = url.match(/fileSize=(\\d+)/);\n  let fileSize;\n  if (match) {\n    fileSize = match && Number(match[1]);\n  } else {\n    fileSize = sizeCache.get(url);\n  }\n\n  while (true) {\n    if (fileSize && start >= fileSize) return;\n\n    let end = start + chunkSize - 1;\n    if (fileSize && end > fileSize) {\n      end = fileSize - 1;\n    }\n\n    // Check if we have the chunk in memory\n    const cacheKey = `${url}:${start}-${end}`;\n    let arrayBuffer = bufferCache.get(cacheKey);\n\n    if (!arrayBuffer) {\n      let request = pendingRequests.get(cacheKey);\n      if (!request) {\n        request = callApi('downloadMedia', {\n          mediaFormat: ApiMediaFormat.Progressive,\n          url,\n          start,\n          end,\n        });\n\n        pendingRequests.set(cacheKey, request);\n      }\n\n      const result = await request.finally(() => {\n        pendingRequests.delete(cacheKey);\n      });\n\n      if (!result?.arrayBuffer) return;\n\n      // If fileSize is not yet defined, retrieve it from the first chunk's response\n      if (result.fullSize && !fileSize) {\n        fileSize = result.fullSize;\n        sizeCache.set(url, result.fullSize);\n      }\n\n      // Store the chunk in memory\n      arrayBuffer = result.arrayBuffer;\n\n      // Cache the first 2 MB of each file\n      if (end <= MAX_END_TO_CACHE) {\n        bufferCache.set(cacheKey, result.arrayBuffer);\n      }\n    }\n\n    // Yield the chunk data\n    yield arrayBuffer;\n\n    start = end + 1;\n  }\n}\n","import type { RefObject } from 'react';\nimport { useEffect } from '../lib/teact/teact';\n\nimport { DEBUG } from '../config';\nimport { requestMutation } from '../lib/fasterdom/fasterdom';\nimport { applyStyles } from '../util/animation';\nimport unloadVideo from '../util/browser/unloadVideo';\nimport { makeProgressiveLoader } from '../util/progressieveLoader';\nimport { IS_SAFARI } from '../util/windowEnvironment';\n\nconst VIDEO_REVEAL_DELAY = 100;\n\nexport function useStreaming(videoRef: RefObject<HTMLVideoElement>, url?: string, mimeType?: string) {\n  useEffect(() => {\n    if (!url || !videoRef.current) return undefined;\n    const MediaSourceClass = getMediaSource();\n    const video = videoRef.current;\n\n    if (!IS_SAFARI || !mimeType || !MediaSourceClass?.isTypeSupported(mimeType)) {\n      return undefined;\n    }\n    const mediaSource = new MediaSourceClass();\n\n    function revealVideo() {\n      requestMutation(() => {\n        video.style.display = 'block';\n        setTimeout(() => {\n          requestMutation(() => {\n            applyStyles(video, { opacity: '1' });\n          });\n        }, VIDEO_REVEAL_DELAY);\n      });\n    }\n\n    function onSourceOpen() {\n      if (!url || !mimeType) return;\n\n      const sourceBuffer = mediaSource.addSourceBuffer(mimeType);\n      const loader = makeProgressiveLoader(url);\n\n      function onUpdateEnded() {\n        loader.next()\n          .then(({\n            value,\n            done,\n          }) => {\n            if (mediaSource.readyState !== 'open') return;\n            if (done) {\n              endOfStream(mediaSource);\n              return;\n            }\n            appendBuffer(sourceBuffer, value);\n          });\n      }\n\n      sourceBuffer.addEventListener('updateend', onUpdateEnded);\n\n      loader.next()\n        .then(({\n          value,\n          done,\n        }) => {\n          if (done || mediaSource.readyState !== 'open') return;\n          revealVideo();\n          appendBuffer(sourceBuffer, value);\n        });\n    }\n\n    mediaSource.addEventListener('sourceopen', onSourceOpen, { once: true });\n\n    requestMutation(() => {\n      applyStyles(video, {\n        display: 'none',\n        opacity: '0',\n      });\n      video.src = URL.createObjectURL(mediaSource);\n    });\n\n    return () => {\n      requestMutation(() => {\n        const src = video.src;\n        unloadVideo(video);\n        mediaSource.removeEventListener('sourceopen', onSourceOpen);\n        if (mediaSource.readyState === 'open') {\n          endOfStream(mediaSource);\n        }\n        URL.revokeObjectURL(src);\n      });\n    };\n  }, [mimeType, url, videoRef]);\n\n  return checkIfStreamingSupported(mimeType);\n}\n\nexport function checkIfStreamingSupported(mimeType?: string) {\n  if (!IS_SAFARI || !mimeType) return false;\n  return Boolean(getMediaSource()?.isTypeSupported(mimeType));\n}\n\nfunction appendBuffer(sourceBuffer: SourceBuffer, buffer: ArrayBuffer) {\n  try {\n    sourceBuffer.appendBuffer(buffer);\n  } catch (error) {\n    if (DEBUG) {\n      // eslint-disable-next-line no-console\n      console.warn('[Stream] failed to append buffer', error);\n    }\n  }\n}\n\nfunction endOfStream(mediaSource: MediaSource) {\n  try {\n    mediaSource.endOfStream();\n  } catch (error) {\n    if (DEBUG) {\n      // eslint-disable-next-line no-console\n      console.warn('[Stream] failed to end stream', error);\n    }\n  }\n}\n\nfunction getMediaSource(): typeof MediaSource | undefined {\n  if ('ManagedMediaSource' in window) {\n    // @ts-ignore\n    return ManagedMediaSource;\n  }\n  if ('MediaSource' in window) {\n    return MediaSource;\n  }\n  return undefined;\n}\n","import { useEffect } from '../../../lib/teact/teact';\nimport { getGlobal } from '../../../global';\n\nimport { ApiMediaFormat } from '../../../api/types';\n\nimport { getStoryMediaHash } from '../../../global/helpers';\nimport { selectPeerStories } from '../../../global/selectors';\nimport unloadVideo from '../../../util/browser/unloadVideo';\nimport { preloadImage } from '../../../util/files';\nimport * as mediaLoader from '../../../util/mediaLoader';\nimport { getProgressiveUrl } from '../../../util/mediaLoader';\nimport { makeProgressiveLoader } from '../../../util/progressieveLoader';\nimport { pause } from '../../../util/schedulers';\nimport { PRIMARY_VIDEO_MIME } from '../helpers/videoFormats';\n\nimport { checkIfStreamingSupported } from '../../../hooks/useStreaming';\n\nconst preloadedStories: Record<string, Set<number>> = {};\nconst PEER_STORIES_FOR_PRELOAD = 5;\nconst PROGRESSIVE_PRELOAD_DURATION = 1000;\nconst STREAM_PRELOAD_SIZE = 1024 * 1024 * 2; // 2 MB\n\nconst FIRST_PRELOAD_DELAY = 1000;\nconst canPreload = pause(FIRST_PRELOAD_DELAY);\n\ntype MediaHash = { hash: string; format: ApiMediaFormat; isStream?: boolean };\n\nfunction useStoryPreloader(peerIds: string[]): void;\nfunction useStoryPreloader(peerId?: string, aroundStoryId?: number): void;\nfunction useStoryPreloader(peerId?: string | string[], aroundStoryId?: number) {\n  useEffect(() => {\n    if (peerId === undefined) return;\n\n    const preloadHashes = async (mediaHashes: Array<MediaHash>) => {\n      await canPreload;\n      mediaHashes.forEach(({ hash, format, isStream }) => {\n        if (isStream) {\n          preloadStream(hash);\n          return;\n        }\n        mediaLoader.fetch(\n          hash,\n          format,\n        )\n          .then((result) => {\n            if (!result) return;\n\n            if (format === ApiMediaFormat.Progressive) {\n              preloadProgressive(result);\n            }\n            if (format === ApiMediaFormat.BlobUrl) {\n              preloadImage(result);\n            }\n          });\n      });\n    };\n\n    const peerIds = Array.isArray(peerId) ? peerId : [peerId];\n\n    peerIds.forEach((id) => {\n      const storyId = aroundStoryId || getGlobal().stories.byPeerId[id]?.orderedIds?.[0];\n      if (!storyId) return;\n      preloadHashes(getPreloadMediaHashes(id, storyId));\n    });\n  }, [aroundStoryId, peerId]);\n}\n\nfunction findIdsAroundCurrentId<T>(ids: T[], currentId: T, aroundAmount: number): T[] {\n  const currentIndex = ids.indexOf(currentId);\n  const start = Math.max(currentIndex - aroundAmount, 0);\n  const end = Math.min(currentIndex + aroundAmount, ids.length);\n  return ids.slice(start, end);\n}\n\nfunction getPreloadMediaHashes(peerId: string, storyId: number) {\n  const peerStories = selectPeerStories(getGlobal(), peerId);\n  if (!peerStories || !peerStories.orderedIds?.length) {\n    return [];\n  }\n\n  const preloadIds = findIdsAroundCurrentId(peerStories.orderedIds, storyId, PEER_STORIES_FOR_PRELOAD);\n\n  const mediaHashes: Array<MediaHash> = [];\n  preloadIds.forEach((currentStoryId) => {\n    if (preloadedStories[peerId]?.has(currentStoryId)) {\n      return;\n    }\n\n    const story = peerStories.byId[currentStoryId];\n    if (!story || !('content' in story)) {\n      return;\n    }\n\n    const isVideo = Boolean(story.content.video);\n\n    // Media\n    mediaHashes.push({\n      hash: getStoryMediaHash(story, 'full'),\n      format: isVideo ? ApiMediaFormat.Progressive : ApiMediaFormat.BlobUrl,\n      isStream: isVideo && checkIfStreamingSupported(PRIMARY_VIDEO_MIME),\n    });\n    // Thumbnail\n    mediaHashes.push({ hash: getStoryMediaHash(story), format: ApiMediaFormat.BlobUrl });\n    if (story.content.altVideo) {\n      mediaHashes.push({\n        hash: getStoryMediaHash(story, 'full', true)!,\n        format: ApiMediaFormat.Progressive,\n      });\n    }\n\n    preloadedStories[peerId] = (preloadedStories[peerId] || new Set()).add(currentStoryId);\n  });\n\n  return mediaHashes;\n}\n\nfunction preloadProgressive(url: string) {\n  const head = document.head;\n  const video = document.createElement('video');\n  video.preload = 'auto';\n  video.src = url;\n  video.muted = true;\n  video.autoplay = true;\n  video.disableRemotePlayback = true;\n  video.style.display = 'none';\n  head.appendChild(video);\n  video.load();\n  setTimeout(() => {\n    unloadVideo(video);\n    head.removeChild(video);\n  }, PROGRESSIVE_PRELOAD_DURATION);\n}\n\n// eslint-disable-next-line no-async-without-await/no-async-without-await\nasync function preloadStream(hash: string) {\n  const loader = makeProgressiveLoader(getProgressiveUrl(hash));\n  let cachedSize = 0;\n  for await (const chunk of loader) {\n    cachedSize += chunk.byteLength;\n    if (cachedSize >= STREAM_PRELOAD_SIZE) {\n      break;\n    }\n  }\n}\n\nexport default useStoryPreloader;\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useEffect, useRef } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type {\n  ApiPeer,\n  ApiStoryForwardInfo,\n  ApiTypeStory,\n} from '../../../api/types';\nimport type { IconName } from '../../../types/icons';\n\nimport {\n  getSenderTitle,\n  isUserId,\n} from '../../../global/helpers';\nimport { selectPeer, selectPeerStory } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { getPeerColorClass } from '../helpers/peerColor';\nimport renderText from '../helpers/renderText';\nimport { renderTextWithEntities } from '../helpers/renderTextWithEntities';\n\nimport { useFastClick } from '../../../hooks/useFastClick';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Icon from '../icons/Icon';\nimport EmojiIconBackground from './EmojiIconBackground';\n\nimport './EmbeddedMessage.scss';\n\ntype OwnProps = {\n  forwardInfo: ApiStoryForwardInfo;\n  className?: string;\n};\n\ntype StateProps = {\n  sender?: ApiPeer;\n  story?: ApiTypeStory;\n};\n\nconst EmbeddedStoryForward: FC<OwnProps & StateProps> = ({\n  className,\n  forwardInfo,\n  sender,\n  story,\n}) => {\n  const { openStoryViewer, loadPeerStoriesByIds, openChat } = getActions();\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n\n  const lang = useOldLang();\n\n  useEffect(() => {\n    if (!story && forwardInfo.fromPeerId && forwardInfo.storyId) {\n      loadPeerStoriesByIds({\n        peerId: forwardInfo.fromPeerId,\n        storyIds: [forwardInfo.storyId],\n      });\n    }\n  }, [forwardInfo, story]);\n\n  const senderTitle = sender ? getSenderTitle(lang, sender) : forwardInfo.fromName;\n\n  const openOriginalStory = useLastCallback(() => {\n    const { fromPeerId, storyId } = forwardInfo;\n    if (!fromPeerId) return;\n\n    const isStoryReady = story && !('isDeleted' in story && story.isDeleted);\n\n    if (isStoryReady) {\n      openStoryViewer({\n        peerId: fromPeerId,\n        storyId,\n        isSingleStory: true,\n      });\n    } else {\n      openChat({ id: fromPeerId });\n    }\n  });\n\n  const { handleClick, handleMouseDown } = useFastClick(openOriginalStory);\n\n  function renderTextContent() {\n    if (story && 'content' in story && story.content.text) {\n      return (\n        <p className=\"embedded-text-wrapper\">\n          {renderTextWithEntities(story.content.text)}\n        </p>\n      );\n    }\n\n    return undefined;\n  }\n\n  function renderSender() {\n    if (!sender || !senderTitle) {\n      return undefined;\n    }\n\n    const icon: IconName | undefined = !isUserId(sender.id) ? 'channel-filled' : 'user-filled';\n\n    return (\n      <>\n        {icon && <Icon name={icon} className=\"embedded-chat-icon\" />}\n        {senderTitle && renderText(senderTitle)}\n      </>\n    );\n  }\n\n  return (\n    <div\n      ref={ref}\n      className={buildClassName(\n        'EmbeddedMessage',\n        className,\n        getPeerColorClass(sender, true, true),\n      )}\n      dir={lang.isRtl ? 'rtl' : undefined}\n      onClick={handleClick}\n      onMouseDown={handleMouseDown}\n    >\n      {sender?.color?.backgroundEmojiId && (\n        <EmojiIconBackground\n          emojiDocumentId={sender.color.backgroundEmojiId}\n          className=\"EmbeddedMessage--background-icons\"\n        />\n      )}\n      <div className=\"message-text\">\n        {renderTextContent()}\n        <div className=\"message-title\">\n          {renderSender()}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { forwardInfo }): StateProps => {\n    const sender = forwardInfo.fromPeerId ? selectPeer(global, forwardInfo.fromPeerId) : undefined;\n    const story = forwardInfo.storyId && forwardInfo.fromPeerId\n      ? selectPeerStory(global, forwardInfo.fromPeerId, forwardInfo.storyId) : undefined;\n    return {\n      sender,\n      story,\n    };\n  },\n)(EmbeddedStoryForward));\n","import React, {\n  memo, useEffect, useLayoutEffect, useRef, useState,\n} from '../../lib/teact/teact';\nimport { addExtraClass, removeExtraClass } from '../../lib/teact/teact-dom';\n\nimport type { ApiStory } from '../../api/types';\n\nimport { requestForcedReflow, requestMeasure, requestMutation } from '../../lib/fasterdom/fasterdom';\nimport buildClassName from '../../util/buildClassName';\nimport calcTextLineHeightAndCount from '../../util/element/calcTextLineHeightAndCount';\n\nimport useCurrentOrPrev from '../../hooks/useCurrentOrPrev';\nimport useOldLang from '../../hooks/useOldLang';\nimport usePrevDuringAnimation from '../../hooks/usePrevDuringAnimation';\nimport useShowTransitionDeprecated from '../../hooks/useShowTransitionDeprecated';\n\nimport EmbeddedStoryForward from '../common/embedded/EmbeddedStoryForward';\nimport MessageText from '../common/MessageText';\n\nimport styles from './StoryViewer.module.scss';\n\ninterface OwnProps {\n  story: ApiStory;\n  isExpanded: boolean;\n  className?: string;\n  onExpand: NoneToVoidFunction;\n  onFold?: NoneToVoidFunction;\n}\n\nconst EXPAND_ANIMATION_DURATION_MS = 400;\nconst LINES_TO_SHOW = 3;\n\nfunction StoryCaption({\n  story, isExpanded, className, onExpand, onFold,\n}: OwnProps) {\n  const lang = useOldLang();\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const contentRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const textRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const showMoreButtonRef = useRef<HTMLDivElement>(null);\n  const renderingStory = useCurrentOrPrev(story, true);\n\n  const caption = renderingStory?.content.text;\n\n  const [hasOverflow, setHasOverflow] = useState(false);\n  const prevIsExpanded = usePrevDuringAnimation(isExpanded || undefined, EXPAND_ANIMATION_DURATION_MS);\n  const isInExpandedState = isExpanded || prevIsExpanded;\n\n  useEffect(() => {\n    requestMutation(() => {\n      if (!contentRef.current) {\n        return;\n      }\n\n      if (isExpanded) {\n        addExtraClass(contentRef.current, styles.animate);\n      } else {\n        removeExtraClass(contentRef.current, styles.animate);\n      }\n    });\n  }, [isExpanded]);\n\n  const canExpand = hasOverflow && !isInExpandedState;\n  const { shouldRender: shouldRenderShowMore, transitionClassNames } = useShowTransitionDeprecated(\n    canExpand, undefined, true, 'slow', true,\n  );\n\n  useLayoutEffect(() => {\n    requestMeasure(() => {\n      if (!showMoreButtonRef.current) {\n        return;\n      }\n\n      const button = showMoreButtonRef.current;\n\n      const { offsetWidth } = button;\n\n      requestMutation(() => {\n        button.style.setProperty('--expand-button-width', `${offsetWidth}px`);\n      });\n    });\n  }, []);\n\n  useLayoutEffect(() => {\n    requestForcedReflow(() => {\n      if (!contentRef.current || !textRef.current) {\n        return undefined;\n      }\n\n      const container = contentRef.current;\n      const textContainer = textRef.current;\n\n      const textOffsetTop = textContainer.offsetTop;\n      const { lineHeight, totalLines } = calcTextLineHeightAndCount(textContainer);\n      const isOverflowing = totalLines > LINES_TO_SHOW;\n      const overflowShift = textOffsetTop + lineHeight * LINES_TO_SHOW;\n\n      return () => {\n        if (isOverflowing) {\n          addExtraClass(container, styles.hasOverflow);\n          setHasOverflow(true);\n        }\n\n        container.style.setProperty('--_overflow-shift', `${overflowShift}px`);\n      };\n    });\n  }, [caption]);\n\n  useEffect(() => {\n    if (!isExpanded) {\n      ref.current?.scrollTo({ top: 0 });\n    }\n  }, [isExpanded]);\n\n  const fullClassName = buildClassName(\n    styles.captionContent,\n    isInExpandedState && styles.expanded,\n    shouldRenderShowMore && styles.withShowMore,\n  );\n\n  return (\n    <div className={buildClassName(styles.caption, className)}>\n      <div\n        ref={contentRef}\n        className={fullClassName}\n        role={canExpand ? 'button' : undefined}\n        onClick={canExpand ? onExpand : onFold}\n      >\n        <div\n          ref={ref}\n          className={buildClassName(styles.captionInner, 'allow-selection', 'custom-scroll')}\n        >\n          {renderingStory?.forwardInfo && (\n            <EmbeddedStoryForward\n              forwardInfo={renderingStory.forwardInfo}\n              className={styles.forwardInfo}\n            />\n          )}\n          {renderingStory && (\n            <div ref={textRef} className={styles.captionText}>\n              <MessageText\n                messageOrStory={renderingStory}\n                withTranslucentThumbs\n                forcePlayback\n              />\n            </div>\n          )}\n        </div>\n      </div>\n      {shouldRenderShowMore && (\n        <div\n          ref={showMoreButtonRef}\n          className={buildClassName(styles.captionShowMore, transitionClassNames)}\n          onClick={onExpand}\n        >\n          {lang('Story.CaptionShowMore')}\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default memo(StoryCaption);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"YVD19vOP\",\"viewInfo\":\"cknL5COh\",\"interactive\":\"pJAyeGkG\",\"avatars\":\"Vz_VtJ16\",\"spacer\":\"kKoeDk3Z\",\"reactionCount\":\"sf3u_6Vh\",\"reactionCountHeart\":\"Er2XKRqi\",\"footerItem\":\"vJRk_UUk\",\"views\":\"nIv3YAnZ\",\"viewIcon\":\"WyBiNM6e\",\"reactionButton\":\"lpDXVIuf\",\"reactionHeart\":\"twgMDT1y\"};","import React, { memo, useMemo } from '../../lib/teact/teact';\nimport { getActions, getGlobal } from '../../global';\n\nimport type { ApiStory } from '../../api/types';\n\nimport { HEART_REACTION } from '../../config';\nimport { getStoryKey, isUserId } from '../../global/helpers';\nimport buildClassName from '../../util/buildClassName';\n\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport AvatarList from '../common/AvatarList';\nimport Icon from '../common/icons/Icon';\nimport ReactionAnimatedEmoji from '../common/reactions/ReactionAnimatedEmoji';\nimport Button from '../ui/Button';\n\nimport styles from './StoryFooter.module.scss';\n\ntype OwnProps = {\n  story: ApiStory;\n  className?: string;\n};\n\nconst StoryFooter = ({\n  story,\n  className,\n}: OwnProps) => {\n  const { openStoryViewModal, openForwardMenu, sendStoryReaction } = getActions();\n  const lang = useOldLang();\n\n  const {\n    views, isOut, peerId, id: storyId, sentReaction,\n  } = story;\n  const { viewsCount, forwardsCount, reactionsCount } = views || {};\n  const isChannel = !isUserId(peerId);\n\n  const isSentStoryReactionHeart = sentReaction && 'emoticon' in sentReaction\n    ? sentReaction.emoticon === HEART_REACTION.emoticon : false;\n\n  const canForward = Boolean(\n    (isOut || isChannel)\n    && story.isPublic\n    && !story.noForwards,\n  );\n\n  const containerId = getStoryKey(peerId, storyId);\n\n  const recentViewers = useMemo(() => {\n    const { users: { byId: usersById } } = getGlobal();\n\n    const recentViewerIds = views && 'recentViewerIds' in views ? views.recentViewerIds : undefined;\n    if (!recentViewerIds) return undefined;\n\n    return recentViewerIds.map((id) => usersById[id]).filter(Boolean);\n  }, [views]);\n\n  const handleOpenStoryViewModal = useLastCallback(() => {\n    openStoryViewModal({ storyId });\n  });\n\n  const handleForwardClick = useLastCallback(() => {\n    openForwardMenu({ fromChatId: peerId, storyId });\n  });\n\n  const handleLikeStory = useLastCallback(() => {\n    const reaction = sentReaction ? undefined : HEART_REACTION;\n    sendStoryReaction({\n      peerId,\n      storyId,\n      containerId,\n      reaction,\n    });\n  });\n\n  if (!viewsCount) {\n    return (\n      <div className={buildClassName(styles.root, className)}>\n        {lang('NobodyViewed')}\n      </div>\n    );\n  }\n\n  return (\n    <div\n      className={buildClassName(\n        styles.root,\n        className,\n      )}\n    >\n      <div\n        className={buildClassName(styles.viewInfo, !isChannel && styles.interactive)}\n        onClick={!isChannel ? handleOpenStoryViewModal : undefined}\n      >\n        {Boolean(recentViewers?.length) && (\n          <AvatarList\n            size=\"small\"\n            peers={recentViewers}\n            className={styles.avatars}\n          />\n        )}\n\n        {isChannel ? (\n          <span className={styles.views}><Icon name=\"channelviews\" className={styles.viewIcon} />{viewsCount}</span>\n        ) : (\n          <span className={styles.views}>{lang('Views', viewsCount, 'i')}</span>\n        )}\n        {Boolean(reactionsCount) && !isChannel && (\n          <span className={styles.reactionCount}>\n            <Icon name=\"heart\" className={styles.reactionCountHeart} />\n            {reactionsCount}\n          </span>\n        )}\n      </div>\n      <div className={styles.spacer} />\n      {canForward && (\n        <Button\n          color=\"translucent\"\n          size=\"smaller\"\n          round\n          onClick={handleForwardClick}\n          ariaLabel={lang('Forward')}\n          className={styles.footerItem}\n        >\n          <Icon name=\"forward\" />\n        </Button>\n      )}\n      {isChannel && (\n        <>\n          {Boolean(forwardsCount) && (\n            <div className={styles.footerItem}>\n              <Button\n                round\n                color=\"translucent\"\n                size=\"smaller\"\n                nonInteractive\n                ariaLabel={lang('PublicShares')}\n              >\n                <Icon name=\"loop\" />\n              </Button>\n              <span>{forwardsCount}</span>\n            </div>\n          )}\n          <div className={styles.footerItem}>\n            <Button\n              round\n              className={styles.reactionButton}\n              color=\"translucent\"\n              size=\"smaller\"\n              onClick={handleLikeStory}\n              ariaLabel={lang('AccDescrLike')}\n            >\n              {sentReaction && (\n                <ReactionAnimatedEmoji\n                  key={'documentId' in sentReaction ? sentReaction.documentId : sentReaction.emoticon}\n                  containerId={containerId}\n                  reaction={sentReaction}\n                  withEffectOnly={isSentStoryReactionHeart}\n                />\n              )}\n              {(!sentReaction || isSentStoryReactionHeart) && (\n                <Icon\n                  name={isSentStoryReactionHeart ? 'heart' : 'heart-outline'}\n                  className={buildClassName(isSentStoryReactionHeart && styles.reactionHeart)}\n                />\n              )}\n            </Button>\n            {Boolean(reactionsCount) && (<span>{reactionsCount}</span>)}\n          </div>\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default memo(StoryFooter);\n","import React, {\n  memo,\n} from '../../lib/teact/teact';\n\nimport buildClassName from '../../util/buildClassName';\n\nimport useLastCallback from '../../hooks/useLastCallback';\n\nimport styles from './StoryProgress.module.scss';\n\ninterface OwnProps {\n  isActive: boolean;\n  isViewed: boolean;\n  isVideo?: boolean;\n  duration?: number;\n  isPaused?: boolean;\n  onImageComplete: NoneToVoidFunction;\n}\n\nconst DEFAULT_STORY_DURATION_S = 6;\n\nfunction StoryProgress({\n  isActive, isViewed, isVideo, duration = DEFAULT_STORY_DURATION_S, isPaused, onImageComplete,\n}: OwnProps) {\n  const handleAnimationEnd = useLastCallback((event: React.AnimationEvent<HTMLElement>) => {\n    if (!isVideo && event.animationName === styles.progress) {\n      onImageComplete();\n    }\n  });\n\n  const classNames = buildClassName(\n    styles.root,\n    isViewed && styles.viewed,\n    isActive && styles.active,\n    isPaused && styles.paused,\n  );\n\n  return (\n    <span\n      className={classNames}\n      aria-hidden\n    >\n      {isActive && (\n        <i style={`--progress-duration: ${duration}s`} className={styles.inner} onAnimationEnd={handleAnimationEnd} />\n      )}\n    </span>\n  );\n}\n\nexport default memo(StoryProgress);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"c1fbGgcx\",\"viewed\":\"xwOKghO2\",\"active\":\"ZuByYcIx\",\"inner\":\"qyBCpJct\",\"progress\":\"XY98E7VM\",\"paused\":\"n9V6B7hP\"};","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo, useRef, useState,\n} from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type {\n  ApiChat,\n  ApiMediaAreaChannelPost,\n  ApiPeer, ApiStealthMode, ApiStory, ApiTypeStory,\n} from '../../api/types';\nimport type { IDimensions } from '../../global/types';\nimport type { Signal } from '../../util/signals';\nimport { MAIN_THREAD_ID } from '../../api/types';\n\nimport { EDITABLE_STORY_INPUT_CSS_SELECTOR, EDITABLE_STORY_INPUT_ID } from '../../config';\nimport { getSenderTitle, isChatChannel, isUserId } from '../../global/helpers';\nimport {\n  selectChat,\n  selectIsCurrentUserPremium,\n  selectPeer,\n  selectPeerStory,\n  selectPerformanceSettingsValue,\n  selectTabState,\n  selectUser,\n} from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport captureKeyboardListeners from '../../util/captureKeyboardListeners';\nimport { formatMediaDuration, formatRelativeTime } from '../../util/dates/dateFormat';\nimport download from '../../util/download';\nimport { round } from '../../util/math';\nimport { getServerTime } from '../../util/serverTime';\nimport { IS_SAFARI } from '../../util/windowEnvironment';\nimport renderText from '../common/helpers/renderText';\nimport { BASE_STORY_HEIGHT, BASE_STORY_WIDTH } from './helpers/dimensions';\nimport { PRIMARY_VIDEO_MIME, SECONDARY_VIDEO_MIME } from './helpers/videoFormats';\n\nimport useUnsupportedMedia from '../../hooks/media/useUnsupportedMedia';\nimport useAppLayout, { getIsMobile } from '../../hooks/useAppLayout';\nimport useCanvasBlur from '../../hooks/useCanvasBlur';\nimport useCurrentOrPrev from '../../hooks/useCurrentOrPrev';\nimport useEffectWithPrevDeps from '../../hooks/useEffectWithPrevDeps';\nimport useFlag from '../../hooks/useFlag';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useLongPress from '../../hooks/useLongPress';\nimport useMediaTransitionDeprecated from '../../hooks/useMediaTransitionDeprecated';\nimport useOldLang from '../../hooks/useOldLang';\nimport useShowTransitionDeprecated from '../../hooks/useShowTransitionDeprecated';\nimport { useStreaming } from '../../hooks/useStreaming';\nimport useBackgroundMode from '../../hooks/window/useBackgroundMode';\nimport useStoryPreloader from './hooks/useStoryPreloader';\nimport useStoryProps from './hooks/useStoryProps';\n\nimport Avatar from '../common/Avatar';\nimport Composer from '../common/Composer';\nimport Icon from '../common/icons/Icon';\nimport Button from '../ui/Button';\nimport DropdownMenu from '../ui/DropdownMenu';\nimport MenuItem from '../ui/MenuItem';\nimport OptimizedVideo from '../ui/OptimizedVideo';\nimport Skeleton from '../ui/placeholder/Skeleton';\nimport Transition from '../ui/Transition';\nimport MediaAreaOverlay from './mediaArea/MediaAreaOverlay';\nimport StoryCaption from './StoryCaption';\nimport StoryFooter from './StoryFooter';\nimport StoryProgress from './StoryProgress';\n\nimport styles from './StoryViewer.module.scss';\n\ninterface OwnProps {\n  peerId: string;\n  storyId: number;\n  dimensions: IDimensions;\n  // eslint-disable-next-line react/no-unused-prop-types\n  isReportModalOpen?: boolean;\n  // eslint-disable-next-line react/no-unused-prop-types\n  isDeleteModalOpen?: boolean;\n  isPrivateStories?: boolean;\n  isArchivedStories?: boolean;\n  isSingleStory?: boolean;\n  getIsAnimating: Signal<boolean>;\n  onDelete: (story: ApiTypeStory) => void;\n  onClose: NoneToVoidFunction;\n  onReport: NoneToVoidFunction;\n}\n\ninterface StateProps {\n  peer: ApiPeer;\n  forwardSender?: ApiPeer;\n  fromPeer?: ApiPeer;\n  story?: ApiTypeStory;\n  isMuted: boolean;\n  orderedIds?: number[];\n  shouldForcePause?: boolean;\n  storyChangelogUserId?: string;\n  viewersExpirePeriod: number;\n  isChatExist?: boolean;\n  areChatSettingsLoaded?: boolean;\n  isCurrentUserPremium?: boolean;\n  stealthMode: ApiStealthMode;\n  withHeaderAnimation?: boolean;\n}\n\nconst VIDEO_MIN_READY_STATE = IS_SAFARI ? 4 : 3;\nconst SPACEBAR_CODE = 32;\n\nconst STEALTH_MODE_NOTIFICATION_DURATION = 4000;\n\nfunction Story({\n  peerId,\n  storyId,\n  peer,\n  forwardSender,\n  fromPeer,\n  isMuted,\n  isArchivedStories,\n  isPrivateStories,\n  story,\n  orderedIds,\n  isSingleStory,\n  dimensions,\n  shouldForcePause,\n  storyChangelogUserId,\n  viewersExpirePeriod,\n  isChatExist,\n  areChatSettingsLoaded,\n  getIsAnimating,\n  isCurrentUserPremium,\n  stealthMode,\n  withHeaderAnimation,\n  onDelete,\n  onClose,\n  onReport,\n}: OwnProps & StateProps) {\n  const {\n    viewStory,\n    setStoryViewerMuted,\n    openPreviousStory,\n    openNextStory,\n    loadPeerSkippedStories,\n    openForwardMenu,\n    copyStoryLink,\n    toggleStoryInProfile,\n    openChat,\n    showNotification,\n    openStoryPrivacyEditor,\n    loadChatSettings,\n    fetchChat,\n    loadStoryViews,\n    toggleStealthModal,\n  } = getActions();\n  const serverTime = getServerTime();\n\n  const lang = useOldLang();\n  const { isMobile } = useAppLayout();\n  const [isComposerHasFocus, markComposerHasFocus, unmarkComposerHasFocus] = useFlag(false);\n  const [isStoryPlaybackRequested, playStory, pauseStory] = useFlag(false);\n  const [isStoryPlaying, markStoryPlaying, unmarkStoryPlaying] = useFlag(false);\n  const [isAppFocused, markAppFocused, unmarkAppFocused] = useFlag(true);\n  const [isCaptionExpanded, expandCaption, foldCaption] = useFlag(false);\n  const [isPausedBySpacebar, setIsPausedBySpacebar] = useState(false);\n  const [isPausedByLongPress, markIsPausedByLongPress, unmarkIsPausedByLongPress] = useFlag(false);\n  const [isDropdownMenuOpen, markDropdownMenuOpen, unmarkDropdownMenuOpen] = useFlag(false);\n  // eslint-disable-next-line no-null/no-null\n  const videoRef = useRef<HTMLVideoElement>(null);\n  const {\n    isDeletedStory,\n    hasText,\n    hasForwardInfo,\n    thumbnail,\n    previewBlobUrl,\n    isVideo,\n    noSound,\n    fullMediaData,\n    altMediaHash,\n    altMediaData,\n    hasFullData,\n    hasThumb,\n    canDownload,\n    downloadMediaData,\n  } = useStoryProps(story, isCurrentUserPremium, isDropdownMenuOpen);\n\n  const isLoadedStory = story && 'content' in story;\n  const isChangelog = peerId === storyChangelogUserId;\n  const isUserStory = isUserId(peerId);\n  const isChatStory = !isUserStory;\n  const isChannelStory = isChatStory && isChatChannel(peer as ApiChat);\n  const isOut = isLoadedStory && story.isOut;\n\n  const canPinToProfile = useCurrentOrPrev(\n    isOut ? !story.isInProfile : undefined,\n    true,\n  );\n  const canUnpinFromProfile = useCurrentOrPrev(\n    isOut ? story.isInProfile : undefined,\n    true,\n  );\n  const areViewsExpired = Boolean(\n    isOut && (story!.date + viewersExpirePeriod) < getServerTime(),\n  );\n\n  const forwardSenderTitle = forwardSender ? getSenderTitle(lang, forwardSender)\n    : (isLoadedStory && story.forwardInfo?.fromName);\n\n  const canCopyLink = Boolean(\n    isLoadedStory\n    && story.isPublic\n    && !isChangelog\n    && peer?.usernames?.length,\n  );\n\n  const canShare = Boolean(\n    isLoadedStory\n    && story.isPublic\n    && !story.noForwards\n    && !isChangelog\n    && !isCaptionExpanded,\n  );\n\n  const canPlayStory = Boolean(\n    hasFullData && !shouldForcePause && isAppFocused && !isComposerHasFocus && !isCaptionExpanded\n    && !isPausedBySpacebar && !isPausedByLongPress,\n  );\n\n  const duration = isLoadedStory && story.content.video?.duration\n    ? story.content.video.duration\n    : undefined;\n\n  const shouldShowComposer = !(isOut && isUserStory) && !isChangelog && !isChannelStory;\n  const shouldShowFooter = isLoadedStory && !shouldShowComposer && (isOut || isChannelStory);\n  const headerAnimation = isMobile && withHeaderAnimation ? 'slideFade' : 'none';\n\n  const {\n    shouldRender: shouldRenderSkeleton,\n    transitionClassNames: skeletonTransitionClassNames,\n  } = useShowTransitionDeprecated(!hasFullData);\n\n  const {\n    transitionClassNames: mediaTransitionClassNames,\n  } = useShowTransitionDeprecated(Boolean(fullMediaData));\n\n  const thumbRef = useCanvasBlur(thumbnail, !hasThumb);\n  const previewTransitionClassNames = useMediaTransitionDeprecated(previewBlobUrl);\n\n  const {\n    shouldRender: shouldRenderComposer,\n    transitionClassNames: composerAppearanceAnimationClassNames,\n  } = useShowTransitionDeprecated(shouldShowComposer);\n\n  const {\n    shouldRender: shouldRenderCaptionBackdrop,\n    transitionClassNames: captionBackdropTransitionClassNames,\n  } = useShowTransitionDeprecated(hasText && isCaptionExpanded);\n\n  const { transitionClassNames: appearanceAnimationClassNames } = useShowTransitionDeprecated(true);\n  const {\n    shouldRender: shouldRenderCaption,\n    transitionClassNames: captionAppearanceAnimationClassNames,\n  } = useShowTransitionDeprecated(hasText || hasForwardInfo);\n\n  const isStreamingSupported = useStreaming(videoRef, fullMediaData, PRIMARY_VIDEO_MIME);\n\n  useStoryPreloader(peerId, storyId);\n\n  useEffect(() => {\n    if (storyId) {\n      viewStory({ peerId, storyId });\n    }\n  }, [storyId, peerId]);\n\n  useEffect(() => {\n    loadPeerSkippedStories({ peerId });\n  }, [peerId]);\n\n  // Fetching user privacy settings for use in Composer\n  useEffect(() => {\n    const canWrite = isUserId(peerId);\n    if (!isChatExist && canWrite) {\n      fetchChat({ chatId: peerId });\n    }\n  }, [isChatExist, peerId]);\n  useEffect(() => {\n    if (isChatExist && !areChatSettingsLoaded) {\n      loadChatSettings({ chatId: peerId });\n    }\n  }, [areChatSettingsLoaded, isChatExist, peerId]);\n\n  const handlePauseStory = useLastCallback(() => {\n    if (isVideo) {\n      videoRef.current?.pause();\n    }\n\n    unmarkStoryPlaying();\n    pauseStory();\n  });\n\n  const handlePlayStory = useLastCallback(() => {\n    if (!canPlayStory) return;\n\n    playStory();\n    if (!isVideo) markStoryPlaying();\n  });\n\n  const handleLongPressStart = useLastCallback(() => {\n    markIsPausedByLongPress();\n  });\n  const handleLongPressEnd = useLastCallback(() => {\n    unmarkIsPausedByLongPress();\n  });\n\n  const handleDropdownMenuOpen = useLastCallback(() => {\n    markDropdownMenuOpen();\n    handlePauseStory();\n  });\n\n  const handleDropdownMenuClose = useLastCallback(() => {\n    unmarkDropdownMenuOpen();\n    handlePlayStory();\n  });\n\n  const {\n    onMouseDown: handleLongPressMouseDown,\n    onMouseUp: handleLongPressMouseUp,\n    onMouseLeave: handleLongPressMouseLeave,\n    onTouchStart: handleLongPressTouchStart,\n    onTouchEnd: handleLongPressTouchEnd,\n  } = useLongPress({\n    onStart: handleLongPressStart,\n    onEnd: handleLongPressEnd,\n  });\n\n  const isUnsupported = useUnsupportedMedia(\n    videoRef,\n    undefined,\n    !isVideo || !fullMediaData || isStreamingSupported,\n  );\n\n  const hasAllData = fullMediaData && (!altMediaHash || altMediaData);\n  // Play story after media has been downloaded\n  useEffect(() => {\n    if (hasAllData && !isUnsupported) handlePlayStory();\n  }, [hasAllData, isUnsupported]);\n\n  useBackgroundMode(unmarkAppFocused, markAppFocused);\n\n  useEffect(() => {\n    if (!hasAllData) return;\n    videoRef.current?.load();\n  }, [hasAllData]);\n\n  useEffect(() => {\n    if (!isLoadedStory || isDeletedStory || areViewsExpired) return;\n\n    if (!isOut && !isChannelStory) return;\n\n    // Refresh counters each time\n    loadStoryViews({ peerId, storyId });\n  }, [isDeletedStory, areViewsExpired, isLoadedStory, peerId, storyId, isOut, isChannelStory]);\n\n  useEffect(() => {\n    if (\n      shouldForcePause || !isAppFocused || isComposerHasFocus\n      || isCaptionExpanded || isPausedBySpacebar || isPausedByLongPress\n    ) {\n      handlePauseStory();\n    } else {\n      handlePlayStory();\n    }\n  }, [\n    handlePlayStory, isAppFocused, isCaptionExpanded, isComposerHasFocus,\n    shouldForcePause, isPausedBySpacebar, isPausedByLongPress,\n  ]);\n\n  useEffect(() => {\n    if (isComposerHasFocus || shouldForcePause || isCaptionExpanded) {\n      return undefined;\n    }\n\n    function handleKeyDown(e: KeyboardEvent) {\n      if (e.keyCode === SPACEBAR_CODE) {\n        e.preventDefault();\n        setIsPausedBySpacebar(!isPausedBySpacebar);\n      }\n    }\n\n    document.addEventListener('keydown', handleKeyDown);\n\n    return () => {\n      document.removeEventListener('keydown', handleKeyDown);\n    };\n  }, [isCaptionExpanded, isComposerHasFocus, isPausedBySpacebar, shouldForcePause]);\n\n  // Reset the state of `isPausedBySpacebar` when closing the caption, losing focus by composer or disable forced pause\n  useEffectWithPrevDeps(([\n    prevIsComposerHasFocus,\n    prevIsCaptionExpanded,\n    prevShouldForcePause,\n    prevIsAppFocused,\n    prevIsPausedByLongPress,\n  ]) => {\n    if (\n      !isPausedBySpacebar || isCaptionExpanded || isComposerHasFocus\n      || shouldForcePause || !isAppFocused || isPausedByLongPress\n    ) {\n      return;\n    }\n\n    if (\n      prevIsCaptionExpanded !== isCaptionExpanded\n      || prevIsComposerHasFocus !== isComposerHasFocus\n      || prevShouldForcePause !== shouldForcePause\n      || prevIsAppFocused !== isAppFocused\n      || prevIsPausedByLongPress !== isPausedByLongPress\n    ) {\n      setIsPausedBySpacebar(false);\n    }\n  }, [isComposerHasFocus, isCaptionExpanded, shouldForcePause, isAppFocused, isPausedByLongPress, isPausedBySpacebar]);\n\n  const handleOpenChat = useLastCallback(() => {\n    onClose();\n    openChat({ id: peerId });\n  });\n\n  const handleForwardPeerClick = useLastCallback(() => {\n    onClose();\n    openChat({ id: forwardSender!.id });\n  });\n\n  const handleFromPeerClick = useLastCallback(() => {\n    onClose();\n    openChat({ id: fromPeer!.id });\n  });\n\n  const handleOpenPrevStory = useLastCallback(() => {\n    openPreviousStory();\n  });\n\n  const handleOpenNextStory = useLastCallback(() => {\n    openNextStory();\n  });\n\n  const handleVideoStoryTimeUpdate = useLastCallback((e: React.SyntheticEvent<HTMLVideoElement>) => {\n    const video = e.currentTarget;\n    if (video.readyState >= VIDEO_MIN_READY_STATE) {\n      markStoryPlaying();\n    } else {\n      unmarkStoryPlaying();\n    }\n    if (duration && round(video.currentTime, 2) >= round(duration, 2)) {\n      handleOpenNextStory();\n    }\n  });\n\n  useEffect(() => {\n    return !getIsAnimating() && !isComposerHasFocus ? captureKeyboardListeners({\n      onRight: handleOpenNextStory,\n      onLeft: handleOpenPrevStory,\n    }) : undefined;\n  }, [getIsAnimating, isComposerHasFocus]);\n\n  const handleCopyStoryLink = useLastCallback(() => {\n    copyStoryLink({ peerId, storyId });\n  });\n\n  const handlePinClick = useLastCallback(() => {\n    toggleStoryInProfile({ peerId, storyId, isInProfile: true });\n  });\n\n  const handleUnpinClick = useLastCallback(() => {\n    toggleStoryInProfile({ peerId, storyId, isInProfile: false });\n  });\n\n  const handleDeleteStoryClick = useLastCallback(() => {\n    onDelete(story!);\n  });\n\n  const handleReportStoryClick = useLastCallback(() => {\n    onReport();\n  });\n\n  const handleForwardClick = useLastCallback(() => {\n    openForwardMenu({ fromChatId: peerId, storyId });\n  });\n\n  const handleInfoPrivacyEdit = useLastCallback(() => {\n    openStoryPrivacyEditor();\n  });\n\n  const handleInfoPrivacyClick = useLastCallback(() => {\n    const visibility = !isLoadedStory || story.isPublic\n      ? undefined\n      : story.isForContacts ? 'contacts' : (story.isForCloseFriends ? 'closeFriends' : 'nobody');\n\n    let message;\n    const myName = getSenderTitle(lang, peer);\n    switch (visibility) {\n      case 'nobody':\n        message = lang('StorySelectedContactsHint', myName);\n        break;\n      case 'contacts':\n        message = lang('StoryContactsHint', myName);\n        break;\n      case 'closeFriends':\n        message = lang('StoryCloseFriendsHint', myName);\n        break;\n      default:\n        return;\n    }\n    showNotification({ message });\n  });\n\n  const handleVolumeMuted = useLastCallback(() => {\n    if (noSound) {\n      showNotification({\n        message: lang('Story.TooltipVideoHasNoSound'),\n      });\n      return;\n    }\n    // Browser requires explicit user interaction to keep video playing after unmuting\n    videoRef.current!.muted = !videoRef.current!.muted;\n    setStoryViewerMuted({ isMuted: !isMuted });\n  });\n\n  const handleOpenStealthModal = useLastCallback(() => {\n    if (stealthMode.activeUntil && getServerTime() < stealthMode.activeUntil) {\n      const diff = stealthMode.activeUntil - getServerTime();\n      showNotification({\n        title: lang('StealthModeOn'),\n        message: lang('Story.ToastStealthModeActiveText', formatMediaDuration(diff)),\n        duration: STEALTH_MODE_NOTIFICATION_DURATION,\n      });\n      return;\n    }\n\n    toggleStealthModal({ isOpen: true });\n  });\n\n  const handleDownload = useLastCallback(() => {\n    if (!downloadMediaData) return;\n    download(downloadMediaData, `story-${peerId}-${storyId}.${isVideo ? 'mp4' : 'jpg'}`);\n  });\n\n  useEffect(() => {\n    if (!isDeletedStory) return;\n\n    showNotification({\n      message: lang('StoryNotFound'),\n    });\n  }, [lang, isDeletedStory]);\n\n  const MenuButton: FC<{ onTrigger: () => void; isOpen?: boolean }> = useMemo(() => {\n    return ({ onTrigger, isOpen }) => {\n      return (\n        <Button\n          round\n          ripple={!isMobile}\n          size=\"tiny\"\n          color=\"translucent-white\"\n          onClick={onTrigger}\n          className={buildClassName(styles.button, isOpen && 'active')}\n          ariaLabel={lang('AccDescrOpenMenu2')}\n        >\n          <i className={buildClassName('icon icon-more')} aria-hidden />\n        </Button>\n      );\n    };\n  }, [isMobile, lang]);\n\n  function renderStoriesTabs() {\n    return (\n      <div className={styles.storyIndicators}>\n        {(isSingleStory ? [storyId] : orderedIds ?? []).map((id) => (\n          <StoryProgress\n            key={`progress-${id}`}\n            isActive={id === story?.id}\n            isVideo={isVideo}\n            isViewed={Boolean(story?.id && ((isPrivateStories || isArchivedStories) ? id > story?.id : id < story?.id))}\n            isPaused={!isStoryPlaying}\n            duration={duration}\n            onImageComplete={handleOpenNextStory}\n          />\n        ))}\n      </div>\n    );\n  }\n\n  function renderStoryPrivacyButton() {\n    if (!isUserStory) return undefined;\n\n    let privacyIcon = 'channel-filled';\n    const gradient: Record<string, [string, string]> = {\n      'channel-filled': ['#50ABFF', '#007AFF'],\n      'user-filled': ['#C36EFF', '#8B60FA'],\n      'favorite-filled': ['#88D93A', '#30B73B'],\n      'group-filled': ['#FFB743', '#F69A36'],\n    };\n\n    if (isOut) {\n      const { visibility } = (story && 'visibility' in story && story.visibility) || {};\n\n      switch (visibility) {\n        case 'everybody':\n          privacyIcon = 'channel-filled';\n          break;\n        case 'contacts':\n          privacyIcon = 'user-filled';\n          break;\n        case 'closeFriends':\n          privacyIcon = 'favorite-filled';\n          break;\n        case 'nobody':\n          privacyIcon = 'group-filled';\n      }\n    } else {\n      if (!story || !('content' in story) || story.isPublic) {\n        return undefined;\n      }\n\n      privacyIcon = story.isForCloseFriends\n        ? 'favorite-filled'\n        : (story.isForContacts ? 'user-filled' : 'group-filled');\n    }\n\n    return (\n      <div\n        className={buildClassName(styles.visibilityButton, isOut && styles.visibilityButtonSelf)}\n        onClick={isOut ? handleInfoPrivacyEdit : handleInfoPrivacyClick}\n        style={`--color-from: ${gradient[privacyIcon][0]}; --color-to: ${gradient[privacyIcon][1]}`}\n      >\n        <i className={`icon icon-${privacyIcon}`} aria-hidden />\n        {isOut && <i className=\"icon icon-next\" aria-hidden />}\n      </div>\n    );\n  }\n\n  function renderSenderInfo() {\n    return (\n      <div className={styles.senderInfo}>\n        <Avatar\n          peer={peer}\n          size=\"tiny\"\n          onClick={handleOpenChat}\n        />\n        <div className={styles.senderMeta}>\n          <span onClick={handleOpenChat} className={styles.senderName}>\n            {renderText(getSenderTitle(lang, peer) || '')}\n          </span>\n          <div className={styles.storyMetaRow}>\n            {forwardSenderTitle && (\n              <span\n                className={buildClassName(\n                  styles.storyMeta, styles.forwardHeader, forwardSender && styles.clickable,\n                )}\n                onClick={forwardSender ? handleForwardPeerClick : undefined}\n              >\n                <Icon name=\"loop\" />\n                <span className={styles.headerTitle}>\n                  {renderText(forwardSenderTitle)}\n                </span>\n              </span>\n            )}\n            {fromPeer && (\n              <span\n                className={buildClassName(\n                  styles.storyMeta, styles.fromPeer,\n                )}\n                onClick={handleFromPeerClick}\n              >\n                <Avatar peer={fromPeer} size=\"micro\" />\n                <span className={styles.headerTitle}>\n                  {renderText(getSenderTitle(lang, fromPeer) || '')}\n                </span>\n              </span>\n            )}\n            {story && 'date' in story && (\n              <span className={styles.storyMeta}>{formatRelativeTime(lang, serverTime, story.date)}</span>\n            )}\n            {isLoadedStory && story.isEdited && (\n              <span className={styles.storyMeta}>{lang('Story.HeaderEdited')}</span>\n            )}\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  function renderSender() {\n    return (\n      <div className={styles.sender}>\n        <Transition activeKey={Number(peerId)} name={headerAnimation} className={styles.senderInfoTransition}>\n          {renderSenderInfo()}\n        </Transition>\n\n        <div className={styles.actions}>\n          {renderStoryPrivacyButton()}\n          {isVideo && (\n            <Button\n              className={styles.button}\n              round\n              ripple={!isMobile}\n              size=\"tiny\"\n              color=\"translucent-white\"\n              disabled={!hasFullData}\n              onClick={handleVolumeMuted}\n              ariaLabel={lang('Volume')}\n            >\n              <i\n                className={buildClassName(\n                  'icon',\n                  isMuted || noSound ? 'icon-speaker-muted-story' : 'icon-speaker-story',\n                )}\n                aria-hidden\n              />\n            </Button>\n          )}\n          <DropdownMenu\n            className={styles.buttonMenu}\n            trigger={MenuButton}\n            positionX=\"right\"\n            onOpen={handleDropdownMenuOpen}\n            onClose={handleDropdownMenuClose}\n          >\n            {canCopyLink && <MenuItem icon=\"copy\" onClick={handleCopyStoryLink}>{lang('CopyLink')}</MenuItem>}\n            {canPinToProfile && (\n              <MenuItem icon=\"save-story\" onClick={handlePinClick}>\n                {lang(isUserStory ? 'StorySave' : 'SaveToPosts')}\n              </MenuItem>\n            )}\n            {canUnpinFromProfile && (\n              <MenuItem icon=\"delete\" onClick={handleUnpinClick}>\n                {lang(isUserStory ? 'ArchiveStory' : 'RemoveFromPosts')}\n              </MenuItem>\n            )}\n            {canDownload && (\n              <MenuItem icon=\"download\" disabled={!downloadMediaData} onClick={handleDownload}>\n                {lang('lng_media_download')}\n              </MenuItem>\n            )}\n            {!isOut && isUserStory && (\n              <MenuItem icon=\"eye-closed-outline\" onClick={handleOpenStealthModal}>\n                {lang('StealthMode')}\n              </MenuItem>\n            )}\n            {!isOut && <MenuItem icon=\"flag\" onClick={handleReportStoryClick}>{lang('lng_report_story')}</MenuItem>}\n            {isOut && <MenuItem icon=\"delete\" destructive onClick={handleDeleteStoryClick}>{lang('Delete')}</MenuItem>}\n          </DropdownMenu>\n          <Button\n            className={buildClassName(styles.button, styles.closeButton)}\n            round\n            size=\"tiny\"\n            color=\"translucent-white\"\n            ariaLabel={lang('Close')}\n            onClick={onClose}\n          >\n            <i className={buildClassName('icon icon-close')} aria-hidden />\n          </Button>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div\n      className={buildClassName(styles.slideInner, 'component-theme-dark')}\n      onMouseDown={handleLongPressMouseDown}\n      onMouseUp={handleLongPressMouseUp}\n      onMouseLeave={handleLongPressMouseLeave}\n      onTouchStart={handleLongPressTouchStart}\n      onTouchEnd={handleLongPressTouchEnd}\n    >\n      <div className={buildClassName(styles.storyHeader, appearanceAnimationClassNames)}>\n        {renderStoriesTabs()}\n        {renderSender()}\n      </div>\n\n      <div\n        className={styles.mediaWrapper}\n        style={`width: ${dimensions.width}px; height: ${dimensions.height}px`}\n      >\n        <canvas ref={thumbRef} className={styles.thumbnail} />\n        {previewBlobUrl && (\n          <img\n            key={`preview-${storyId}`}\n            src={previewBlobUrl}\n            draggable={false}\n            alt=\"\"\n            className={buildClassName(styles.media, styles.mediaPreview, previewTransitionClassNames)}\n          />\n        )}\n        {shouldRenderSkeleton && (\n          <Skeleton className={buildClassName(skeletonTransitionClassNames, styles.fullSize)} />\n        )}\n        {!isVideo && fullMediaData && (\n          <img\n            src={fullMediaData}\n            alt=\"\"\n            className={buildClassName(styles.media, mediaTransitionClassNames)}\n            draggable={false}\n          />\n        )}\n        {isVideo && fullMediaData && (\n          <OptimizedVideo\n            ref={videoRef}\n            key={`video-${storyId}`}\n            className={buildClassName(styles.media, mediaTransitionClassNames)}\n            canPlay={isStoryPlaybackRequested}\n            muted={isMuted}\n            width={BASE_STORY_WIDTH}\n            height={BASE_STORY_HEIGHT}\n            draggable={false}\n            playsInline\n            disablePictureInPicture\n            isPriority\n            onPause={unmarkStoryPlaying}\n            onWaiting={unmarkStoryPlaying}\n            disableRemotePlayback\n            onTimeUpdate={handleVideoStoryTimeUpdate}\n          >\n            <source src={fullMediaData} type={PRIMARY_VIDEO_MIME} width=\"720\" />\n            {altMediaData && <source src={altMediaData} type={SECONDARY_VIDEO_MIME} width=\"480\" />}\n          </OptimizedVideo>\n        )}\n\n        {!isPausedByLongPress && !isComposerHasFocus && (\n          <>\n            <button\n              type=\"button\"\n              className={buildClassName(styles.navigate, styles.prev)}\n              onClick={handleOpenPrevStory}\n              aria-label={lang('Previous')}\n            />\n            <button\n              type=\"button\"\n              className={buildClassName(styles.navigate, styles.next)}\n              onClick={handleOpenNextStory}\n              aria-label={lang('Next')}\n            />\n          </>\n        )}\n        {isLoadedStory && fullMediaData && (\n          <MediaAreaOverlay story={story} isActive />\n        )}\n        {!isMobile && (\n          <div className={styles.content}>\n            <div className={styles.contentInner}>\n              <Avatar\n                peer={peer}\n                withStory\n                storyViewerMode=\"disabled\"\n              />\n              <div className={styles.name}>{renderText(getSenderTitle(lang, peer) || '')}</div>\n            </div>\n          </div>\n        )}\n      </div>\n\n      {shouldShowFooter && (\n        <StoryFooter story={story} className={appearanceAnimationClassNames} />\n      )}\n      {shouldRenderCaptionBackdrop && (\n        <div\n          tabIndex={0}\n          role=\"button\"\n          className={buildClassName(styles.captionBackdrop, captionBackdropTransitionClassNames)}\n          onClick={() => foldCaption()}\n          aria-label={lang('Close')}\n        />\n      )}\n      {hasText && <div className={buildClassName(styles.captionGradient, captionAppearanceAnimationClassNames)} />}\n      {shouldRenderCaption && (\n        <StoryCaption\n          key={`caption-${storyId}-${peerId}`}\n          story={story as ApiStory}\n          isExpanded={isCaptionExpanded}\n          onExpand={expandCaption}\n          onFold={foldCaption}\n          className={captionAppearanceAnimationClassNames}\n        />\n      )}\n      {shouldRenderComposer && (\n        <Composer\n          type=\"story\"\n          chatId={peerId}\n          threadId={MAIN_THREAD_ID}\n          storyId={storyId}\n          isReady={!isOut}\n          messageListType=\"thread\"\n          isMobile={getIsMobile()}\n          editableInputCssSelector={EDITABLE_STORY_INPUT_CSS_SELECTOR}\n          editableInputId={EDITABLE_STORY_INPUT_ID}\n          inputId=\"story-input-text\"\n          className={buildClassName(styles.composer, composerAppearanceAnimationClassNames)}\n          inputPlaceholder={lang(isChatStory ? 'ReplyToGroupStory' : 'ReplyPrivately')}\n          onForward={canShare ? handleForwardClick : undefined}\n          onFocus={markComposerHasFocus}\n          onBlur={unmarkComposerHasFocus}\n        />\n      )}\n    </div>\n  );\n}\n\nexport default memo(withGlobal<OwnProps>((global, {\n  peerId,\n  storyId,\n  isReportModalOpen,\n  isDeleteModalOpen,\n}): StateProps => {\n  const { appConfig } = global;\n  const user = selectUser(global, peerId);\n  const chat = selectChat(global, peerId);\n  const tabState = selectTabState(global);\n  const {\n    storyViewer: {\n      isMuted,\n      viewModal,\n      isPrivacyModalOpen,\n      isStealthModalOpen,\n      storyList,\n    },\n    forwardMessages: { storyId: forwardedStoryId },\n    premiumModal,\n    safeLinkModalUrl,\n    mapModal,\n  } = tabState;\n  const { isOpen: isPremiumModalOpen } = premiumModal || {};\n  const story = selectPeerStory(global, peerId, storyId);\n  const isLoadedStory = story && 'content' in story;\n  const shouldForcePause = Boolean(\n    viewModal || forwardedStoryId || tabState.reactionPicker?.storyId || isReportModalOpen || isPrivacyModalOpen\n    || isPremiumModalOpen || isDeleteModalOpen || safeLinkModalUrl || isStealthModalOpen || mapModal,\n  );\n\n  const forwardInfo = isLoadedStory ? story.forwardInfo : undefined;\n  const mediaAreas = isLoadedStory ? story.mediaAreas : undefined;\n  const forwardSenderId = forwardInfo?.fromPeerId\n    || mediaAreas?.find((area): area is ApiMediaAreaChannelPost => area.type === 'channelPost')?.channelId;\n  const forwardSender = forwardSenderId ? selectPeer(global, forwardSenderId) : undefined;\n  const withHeaderAnimation = selectPerformanceSettingsValue(global, 'mediaViewerAnimations');\n\n  const fromPeer = isLoadedStory && story.fromId ? selectPeer(global, story.fromId) : undefined;\n\n  return {\n    peer: (user || chat)!,\n    forwardSender,\n    fromPeer,\n    story,\n    orderedIds: storyList?.storyIdsByPeerId[peerId],\n    isMuted,\n    isCurrentUserPremium: selectIsCurrentUserPremium(global),\n    shouldForcePause,\n    storyChangelogUserId: appConfig!.storyChangelogUserId,\n    viewersExpirePeriod: appConfig!.storyExpirePeriod + appConfig!.storyViewersExpirePeriod,\n    isChatExist: Boolean(chat),\n    areChatSettingsLoaded: Boolean(chat?.settings),\n    stealthMode: global.stories.stealthMode,\n    withHeaderAnimation,\n  };\n})(Story));\n","import React, { memo, useEffect, useMemo } from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type {\n  ApiPeer, ApiPeerStories, ApiTypeStory,\n} from '../../api/types';\nimport type { StoryViewerOrigin } from '../../types';\n\nimport { getSenderTitle, getStoryMediaHash } from '../../global/helpers';\nimport { selectTabState } from '../../global/selectors';\nimport renderText from '../common/helpers/renderText';\n\nimport useMedia from '../../hooks/useMedia';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Avatar from '../common/Avatar';\nimport MediaAreaOverlay from './mediaArea/MediaAreaOverlay';\n\nimport styles from './StoryViewer.module.scss';\n\ninterface OwnProps {\n  peer?: ApiPeer;\n  peerStories?: ApiPeerStories;\n}\n\ninterface StateProps {\n  lastViewedId?: number;\n  origin?: StoryViewerOrigin;\n  storyIdsForViewer?: number[];\n}\n\nfunction StoryPreview({\n  peer, peerStories, lastViewedId, storyIdsForViewer, origin,\n}: OwnProps & StateProps) {\n  const { openStoryViewer, loadPeerSkippedStories } = getActions();\n  const lang = useOldLang();\n\n  const story = useMemo<ApiTypeStory | undefined>(() => {\n    if (!peerStories) {\n      return undefined;\n    }\n\n    const {\n      orderedIds, lastReadId, byId,\n    } = peerStories;\n    const hasUnreadStories = orderedIds[orderedIds.length - 1] !== lastReadId;\n    const previewIndexId = lastViewedId && storyIdsForViewer?.includes(lastViewedId)\n      ? lastViewedId ?? (hasUnreadStories ? (lastReadId ?? -1) : -1)\n      : -1;\n    const resultId = byId[previewIndexId]?.id || storyIdsForViewer?.[0] || orderedIds[0];\n\n    return byId[resultId];\n  }, [lastViewedId, peerStories, storyIdsForViewer]);\n\n  const isLoaded = story && 'content' in story;\n\n  useEffect(() => {\n    if (story && !isLoaded) {\n      loadPeerSkippedStories({ peerId: story.peerId });\n    }\n  }, [story, isLoaded]);\n\n  const video = isLoaded ? story.content.video : undefined;\n  const imageHash = isLoaded ? getStoryMediaHash(story) : undefined;\n  const imgBlobUrl = useMedia(imageHash);\n  const thumbUrl = imgBlobUrl || video?.thumbnail?.dataUri;\n\n  if (!peer || !story || 'isDeleted' in story) {\n    return undefined;\n  }\n\n  return (\n    <div\n      className={styles.slideInner}\n      onClick={() => { openStoryViewer({ peerId: story.peerId, storyId: story.id, origin }); }}\n    >\n      {thumbUrl && (\n        <img src={thumbUrl} alt=\"\" className={styles.media} draggable={false} />\n      )}\n      {isLoaded && <MediaAreaOverlay story={story} />}\n\n      <div className={styles.content}>\n        <div className={styles.contentInner}>\n          <Avatar\n            peer={peer}\n            withStory\n            storyViewerMode=\"disabled\"\n          />\n          <div className={styles.name}>{renderText(getSenderTitle(lang, peer) || '')}</div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default memo(withGlobal<OwnProps>((global, { peer }): StateProps => {\n  const {\n    storyViewer: {\n      lastViewedByPeerIds,\n      origin,\n      storyList,\n    },\n  } = selectTabState(global);\n\n  return {\n    lastViewedId: peer?.id ? lastViewedByPeerIds?.[peer.id] : undefined,\n    origin,\n    storyIdsForViewer: peer?.id ? storyList?.storyIdsByPeerId[peer.id] : undefined,\n  };\n})(StoryPreview));\n","import React, {\n  memo, useEffect, useLayoutEffect, useMemo, useRef, useSignal, useState,\n} from '../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../global';\n\nimport type { ApiPeerStories, ApiTypeStory } from '../../api/types';\nimport type { RealTouchEvent } from '../../util/captureEvents';\n\nimport { EDITABLE_STORY_INPUT_ID } from '../../config';\nimport { requestMutation } from '../../lib/fasterdom/fasterdom';\nimport { getStoryKey } from '../../global/helpers';\nimport {\n  selectIsStoryViewerOpen,\n  selectPeer,\n  selectTabState,\n} from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport buildStyle from '../../util/buildStyle';\nimport {\n  captureEvents,\n  IOS_SCREEN_EDGE_THRESHOLD,\n  SWIPE_DIRECTION_THRESHOLD,\n  SWIPE_DIRECTION_TOLERANCE,\n} from '../../util/captureEvents';\nimport focusEditableElement from '../../util/focusEditableElement';\nimport { clamp } from '../../util/math';\nimport { disableScrolling, enableScrolling } from '../../util/scrollLock';\nimport { IS_IOS } from '../../util/windowEnvironment';\nimport { calculateOffsetX } from './helpers/dimensions';\n\nimport useAppLayout from '../../hooks/useAppLayout';\nimport useCurrentOrPrev from '../../hooks/useCurrentOrPrev';\nimport useHistoryBack from '../../hooks/useHistoryBack';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport usePreviousDeprecated from '../../hooks/usePreviousDeprecated';\nimport useWindowSize from '../../hooks/window/useWindowSize';\nimport useSlideSizes from './hooks/useSlideSizes';\n\nimport Story from './Story';\nimport StoryPreview from './StoryPreview';\n\nimport styles from './StoryViewer.module.scss';\n\ninterface OwnProps {\n  isOpen?: boolean;\n  isReportModalOpen?: boolean;\n  isDeleteModalOpen?: boolean;\n  onDelete: (story: ApiTypeStory) => void;\n  onReport: NoneToVoidFunction;\n  onClose: NoneToVoidFunction;\n}\n\ninterface StateProps {\n  peerIds: string[];\n  currentPeerId?: string;\n  currentStoryId?: number;\n  byPeerId?: Record<string, ApiPeerStories>;\n  isSinglePeer?: boolean;\n  isSingleStory?: boolean;\n  isPrivate?: boolean;\n  isArchive?: boolean;\n}\n\nconst ACTIVE_SLIDE_VERTICAL_CORRECTION_REM = 1.75;\nconst SWIPE_Y_THRESHOLD = 50;\nconst SCROLL_RELEASE_DELAY = 1500;\n\nenum SwipeDirection {\n  Horizontal,\n  Vertical,\n}\n\nfunction StorySlides({\n  peerIds,\n  currentPeerId,\n  currentStoryId,\n  isOpen,\n  isSinglePeer,\n  isSingleStory,\n  isPrivate,\n  isArchive,\n  byPeerId,\n  isReportModalOpen,\n  isDeleteModalOpen,\n  onDelete,\n  onClose,\n  onReport,\n}: OwnProps & StateProps) {\n  const { stopActiveReaction } = getActions();\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  const [renderingPeerId, setRenderingPeerId] = useState(currentPeerId);\n  const [renderingStoryId, setRenderingStoryId] = useState(currentStoryId);\n  const prevPeerId = usePreviousDeprecated(currentPeerId);\n  const renderingIsArchive = useCurrentOrPrev(isArchive, true);\n  const renderingIsPrivate = useCurrentOrPrev(isPrivate, true);\n  const renderingIsSinglePeer = useCurrentOrPrev(isSinglePeer, true);\n  const renderingIsSingleStory = useCurrentOrPrev(isSingleStory, true);\n  const slideSizes = useSlideSizes();\n  const { height: windowHeight, width: windowWidth } = useWindowSize();\n  const swipeDirectionRef = useRef<SwipeDirection | undefined>(undefined);\n  const isReleasedRef = useRef(false);\n  const { isMobile } = useAppLayout();\n\n  const rendersRef = useRef<Record<string, { current: HTMLDivElement | null }>>({});\n  const [getIsAnimating, setIsAnimating] = useSignal(false);\n\n  useHistoryBack({\n    isActive: isOpen,\n    onBack: onClose,\n    shouldBeReplaced: true,\n  });\n\n  function setRef(ref: HTMLDivElement | null, peerId: string) {\n    if (!ref) {\n      return;\n    }\n    if (!rendersRef.current[peerId]) {\n      rendersRef.current[peerId] = { current: ref };\n    } else {\n      rendersRef.current[peerId].current = ref;\n    }\n  }\n\n  const renderingPeerIds = useMemo(() => {\n    if (renderingPeerId && (renderingIsSinglePeer || renderingIsSingleStory)) {\n      return [renderingPeerId];\n    }\n\n    const index = renderingPeerId ? peerIds.indexOf(renderingPeerId) : -1;\n    if (!renderingPeerId || index === -1) {\n      return [];\n    }\n\n    const start = Math.max(index - 4, 0);\n    const end = Math.min(index + 5, peerIds.length);\n\n    return peerIds.slice(start, end);\n  }, [renderingIsSingleStory, renderingIsSinglePeer, renderingPeerId, peerIds]);\n\n  const renderingPeerPosition = useMemo(() => {\n    if (!renderingPeerIds.length || !renderingPeerId) {\n      return -1;\n    }\n\n    return renderingPeerIds.indexOf(renderingPeerId);\n  }, [renderingPeerId, renderingPeerIds]);\n\n  const currentPeerPosition = useMemo(() => {\n    if (!renderingPeerIds.length || !currentPeerId) {\n      return -1;\n    }\n    return renderingPeerIds.indexOf(currentPeerId);\n  }, [currentPeerId, renderingPeerIds]);\n\n  useEffect(() => {\n    if (!isMobile) return;\n\n    // If animation disabled, set rendering peer id to current peer\n    setRenderingPeerId(currentPeerId);\n  }, [currentPeerId, isMobile]);\n\n  // Handling the flipping of stories from a current user\n  useEffect(() => {\n    if (renderingPeerId === currentPeerId && currentStoryId !== renderingStoryId) {\n      setRenderingStoryId(currentStoryId);\n    }\n  }, [currentPeerId, currentStoryId, renderingPeerId, renderingStoryId]);\n\n  useEffect(() => {\n    if (isMobile) return undefined;\n    if (prevPeerId && prevPeerId !== currentPeerId) {\n      setIsAnimating(true);\n    }\n\n    return () => {\n      setIsAnimating(false);\n    };\n  }, [prevPeerId, currentPeerId, setIsAnimating, isMobile]);\n\n  useEffect(() => {\n    return () => {\n      if (!currentStoryId || !currentPeerId) return;\n      stopActiveReaction({\n        containerId: getStoryKey(currentPeerId, currentStoryId),\n      });\n    };\n  }, [currentStoryId, currentPeerId]);\n\n  const slideAmount = currentPeerPosition - renderingPeerPosition;\n  const isBackward = renderingPeerPosition > currentPeerPosition;\n\n  const calculateTransformX = useLastCallback(() => {\n    return peerIds.reduce<Record<string, number>>((transformX, peerId, index) => {\n      if (peerId === renderingPeerId) {\n        transformX[peerId] = calculateOffsetX({\n          scale: slideSizes.scale,\n          slideAmount,\n          isBackward,\n          isActiveSlideSize: isBackward,\n        });\n      } else {\n        let isMoveThroughActiveSlide = false;\n        if (!isBackward && index > 0 && peerIds[index - 1] === renderingPeerId) {\n          isMoveThroughActiveSlide = true;\n        }\n        if (isBackward && index < peerIds.length - 1 && peerIds[index + 1] === renderingPeerId) {\n          isMoveThroughActiveSlide = true;\n        }\n\n        transformX[peerId] = calculateOffsetX({\n          scale: slideSizes.scale,\n          slideAmount,\n          isBackward,\n          isActiveSlideSize: currentPeerId === peerId && !isBackward,\n          isMoveThroughActiveSlide,\n        });\n      }\n\n      return transformX;\n    }, {});\n  });\n\n  useEffect(() => {\n    if (!containerRef.current || !isOpen) {\n      return undefined;\n    }\n\n    let offsetY = 0;\n\n    const getCurrentStoryRef = () => {\n      return renderingPeerId ? rendersRef.current[renderingPeerId]?.current : undefined;\n    };\n\n    const onRelease = (event: MouseEvent | TouchEvent | WheelEvent) => {\n      // This allows to prevent onRelease triggered by debounced wheel event\n      // after onRelease was triggered manually in onDrag\n      if (isReleasedRef.current) {\n        isReleasedRef.current = false;\n        return;\n      }\n      const current = getCurrentStoryRef();\n      if (!current) return;\n\n      if (offsetY < -SWIPE_Y_THRESHOLD) {\n        const composer = document.getElementById(EDITABLE_STORY_INPUT_ID);\n        if (composer) {\n          requestMutation(() => {\n            focusEditableElement(composer);\n          });\n        }\n        return;\n      }\n\n      if (offsetY > SWIPE_Y_THRESHOLD) {\n        onClose();\n        if (event.type === 'wheel') {\n          disableScrolling();\n          setTimeout(enableScrolling, SCROLL_RELEASE_DELAY);\n        }\n      } else {\n        requestMutation(() => {\n          current.style.setProperty('--slide-translate-y', '0px');\n        });\n      }\n    };\n\n    return captureEvents(containerRef.current, {\n      isNotPassive: true,\n      withNativeDrag: true,\n      withWheelDrag: true,\n      excludedClosestSelector: '.Composer',\n      onDrag: (event, captureEvent, {\n        dragOffsetX, dragOffsetY,\n      }) => {\n        if (isReleasedRef.current) return;\n        // Avoid conflicts with swipe-to-back gestures\n        if (IS_IOS && captureEvent.type === 'touchstart') {\n          const { pageX } = (captureEvent as RealTouchEvent).touches[0];\n          if (pageX <= IOS_SCREEN_EDGE_THRESHOLD || pageX >= windowWidth - IOS_SCREEN_EDGE_THRESHOLD) {\n            return;\n          }\n        }\n        if (event.type === 'mousemove') return;\n        const absOffsetX = Math.abs(dragOffsetX);\n        const absOffsetY = Math.abs(dragOffsetY);\n        const current = getCurrentStoryRef();\n        if (!current) return;\n        // If vertical shift is dominant we change only vertical position\n        if (swipeDirectionRef.current === SwipeDirection.Vertical\n          || Math.abs(absOffsetY) > SWIPE_DIRECTION_THRESHOLD || absOffsetY / absOffsetX > SWIPE_DIRECTION_TOLERANCE) {\n          swipeDirectionRef.current = SwipeDirection.Vertical;\n          const limit = windowHeight;\n          offsetY = clamp(dragOffsetY, -limit, limit);\n          if (offsetY > 0) {\n            requestMutation(() => {\n              current.style.setProperty('--slide-translate-y', `${offsetY * (isMobile ? 1 : -1)}px`);\n            });\n          }\n          if (event.type === 'wheel' && Math.abs(offsetY) > SWIPE_Y_THRESHOLD * 2) {\n            onRelease(event);\n            isReleasedRef.current = true;\n          }\n        }\n      },\n      onRelease,\n    });\n  }, [isOpen, onClose, windowWidth, windowHeight, isMobile, renderingPeerId]);\n\n  useLayoutEffect(() => {\n    if (isMobile) return;\n    const transformX = calculateTransformX();\n\n    Object.entries(rendersRef.current).forEach(([peerId, { current }]) => {\n      if (!current) return;\n\n      if (!getIsAnimating()) {\n        current.classList.remove(styles.slideAnimation, styles.slideAnimationToActive, styles.slideAnimationFromActive);\n        current.style.setProperty('--slide-translate-x', '0px');\n        current.style.setProperty('--slide-translate-y', '0px');\n        current.style.setProperty('--slide-translate-scale', '1');\n        current.style.setProperty('--slide-content-scale', String(slideSizes.toActiveScale));\n\n        return;\n      }\n\n      const getScale = () => {\n        if (currentPeerId === peerId) {\n          return String(slideSizes.toActiveScale);\n        }\n        if (peerId === renderingPeerId) {\n          return String(slideSizes.fromActiveScale);\n        }\n        return '1';\n      };\n\n      let offsetY = 0;\n      if (peerId === renderingPeerId) {\n        offsetY = -ACTIVE_SLIDE_VERTICAL_CORRECTION_REM * slideSizes.fromActiveScale;\n        current.classList.add(styles.slideAnimationFromActive);\n      }\n      if (peerId === currentPeerId) {\n        offsetY = ACTIVE_SLIDE_VERTICAL_CORRECTION_REM;\n        current.classList.add(styles.slideAnimationToActive);\n      }\n\n      current.classList.add(styles.slideAnimation);\n      current.style.setProperty('--slide-translate-x', `${transformX[peerId] || 0}px`);\n      current.style.setProperty('--slide-translate-y', `${offsetY}rem`);\n      current.style.setProperty('--slide-translate-scale', getScale());\n    });\n  }, [currentPeerId, getIsAnimating, renderingPeerId, slideSizes, isMobile]);\n\n  const handleTransitionEnd = useLastCallback((event: React.TransitionEvent<HTMLDivElement>) => {\n    // It is `target` that is needed here, not `currentTarget`\n    const target = event.target as HTMLDivElement | null;\n\n    if (!target || !target.classList.contains(styles.activeSlide)) return;\n\n    if (renderingPeerId !== currentPeerId) {\n      setRenderingPeerId(currentPeerId);\n      setRenderingStoryId(currentStoryId);\n    } else if (currentStoryId !== renderingStoryId) {\n      setRenderingStoryId(currentStoryId);\n    }\n    setIsAnimating(false);\n  });\n\n  if (isMobile) {\n    return (\n      <div className={styles.wrapper} ref={containerRef}>\n        <div\n          className={styles.mobileSlide}\n          ref={(ref) => setRef(ref, renderingPeerId!)}\n        >\n          <Story\n            peerId={renderingPeerId!}\n            storyId={renderingStoryId!}\n            onDelete={onDelete}\n            dimensions={slideSizes.activeSlide}\n            isPrivateStories={renderingIsPrivate}\n            isArchivedStories={renderingIsArchive}\n            isReportModalOpen={isReportModalOpen}\n            isDeleteModalOpen={isDeleteModalOpen}\n            isSingleStory={isSingleStory}\n            getIsAnimating={getIsAnimating}\n            onClose={onClose}\n            onReport={onReport}\n          />\n        </div>\n      </div>\n    );\n  }\n\n  function renderStoryPreview(peerId: string, index: number, position: number) {\n    const style = buildStyle(\n      `width: ${slideSizes.slide.width}px`,\n      `height: ${slideSizes.slide.height}px`,\n    );\n    const className = buildClassName(\n      styles.slide,\n      styles.slidePreview,\n      `slide-${position}`,\n    );\n\n    return (\n      <div\n        key={peerId}\n        ref={(ref) => setRef(ref, peerId)}\n        className={className}\n        style={style}\n      >\n        <StoryPreview\n          peer={selectPeer(getGlobal(), peerId)}\n          peerStories={byPeerId?.[peerId]}\n        />\n      </div>\n    );\n  }\n\n  function renderStory(peerId: string) {\n    const style = isMobile ? undefined : buildStyle(\n      `width: ${slideSizes.activeSlide.width}px`,\n      `--slide-media-height: ${slideSizes.activeSlide.height}px`,\n    );\n\n    return (\n      <div\n        key={peerId}\n        ref={(ref) => setRef(ref, peerId)}\n        className={buildClassName(styles.slide, styles.activeSlide)}\n        style={style}\n      >\n        <Story\n          peerId={peerId}\n          storyId={renderingStoryId!}\n          onDelete={onDelete}\n          dimensions={slideSizes.activeSlide}\n          isPrivateStories={renderingIsPrivate}\n          isArchivedStories={renderingIsArchive}\n          isReportModalOpen={isReportModalOpen}\n          isDeleteModalOpen={isDeleteModalOpen}\n          isSingleStory={isSingleStory}\n          getIsAnimating={getIsAnimating}\n          onClose={onClose}\n          onReport={onReport}\n        />\n      </div>\n    );\n  }\n\n  return (\n    <div\n      className={styles.wrapper}\n      ref={containerRef}\n      style={`--story-viewer-scale: ${slideSizes.scale}`}\n      onTransitionEnd={handleTransitionEnd}\n    >\n      <div className={styles.fullSize} onClick={onClose} />\n      {renderingPeerIds.length > 1 && (\n        <div className={styles.backdropNonInteractive} style={`height: ${slideSizes.slide.height}px`} />\n      )}\n      {renderingPeerIds.map((peerId, index) => {\n        if (peerId === renderingPeerId) {\n          return renderStory(renderingPeerId);\n        }\n\n        return renderStoryPreview(peerId, index, index - renderingPeerPosition);\n      })}\n    </div>\n  );\n}\n\nexport default memo(withGlobal<OwnProps>((global): StateProps => {\n  const {\n    storyViewer: {\n      peerId: currentPeerId, storyId: currentStoryId, isSinglePeer, isSingleStory, isPrivate, isArchive, storyList,\n    },\n  } = selectTabState(global);\n  const { byPeerId, orderedPeerIds: { active } } = global.stories;\n\n  return {\n    byPeerId,\n    peerIds: storyList?.peerIds ?? active,\n    currentPeerId,\n    currentStoryId,\n    isSinglePeer,\n    isSingleStory,\n    isPrivate,\n    isArchive,\n  };\n}, (global) => selectIsStoryViewerOpen(global))(StorySlides));\n","import { useState } from '../lib/teact/teact';\n\nimport useLastCallback from './useLastCallback';\n\nconst THRESHOLD = 5;\n\nexport default function useScrolledState(threshold = THRESHOLD) {\n  const [isAtBeginning, setIsAtBeginning] = useState(true);\n  const [isAtEnd, setIsAtEnd] = useState(true);\n\n  const handleScroll = useLastCallback((e: React.UIEvent<HTMLElement>) => {\n    const { scrollHeight, scrollTop, clientHeight } = e.target as HTMLElement;\n\n    setIsAtBeginning(scrollTop < threshold);\n    setIsAtEnd(scrollHeight - scrollTop - clientHeight < threshold);\n  });\n\n  return { isAtBeginning, isAtEnd, handleScroll };\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"views-list\":\"gpDY8bos\",\"viewsList\":\"gpDY8bos\",\"views-list-loading\":\"vuRAfQ5v\",\"viewsListLoading\":\"vuRAfQ5v\",\"info\":\"AOSUIChK\",\"centeredInfo\":\"oGLhkkS7\",\"view-reaction\":\"MLaabS6n\",\"viewReaction\":\"MLaabS6n\",\"header\":\"d3N2bktu\",\"content\":\"QmRA3HZK\",\"top-button\":\"Dkv8GAxf\",\"topButton\":\"Dkv8GAxf\",\"contact-filter\":\"YpB_9VxE\",\"contactFilter\":\"YpB_9VxE\",\"selected\":\"DoUlpdZJ\",\"sort\":\"axDpgq9G\",\"sort-button\":\"Bm5VA66f\",\"sortButton\":\"Bm5VA66f\",\"icon-sort\":\"YVQiH93R\",\"iconSort\":\"YVQiH93R\",\"icon-down\":\"NXP9aMD0\",\"iconDown\":\"NXP9aMD0\",\"search\":\"QQQqBLK6\",\"bottom-info\":\"_CSv6suH\",\"bottomInfo\":\"_CSv6suH\",\"scrolled\":\"RYQ0liYe\",\"footer\":\"dUK7rP37\",\"closeButton\":\"abPzLiCH\",\"opacity-fade-in\":\"cX8oY3zb\",\"opacityFadeIn\":\"cX8oY3zb\",\"fadeIn\":\"Sx_aeh1o\",\"blocked\":\"L82sciL8\",\"check\":\"UqGBKwjg\",\"menuBubble\":\"dRqemuTA\",\"with-colored-status\":\"GQ96fta9\",\"withColoredStatus\":\"GQ96fta9\"};","import React, { memo, useMemo } from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type {\n  ApiAvailableReaction, ApiPeer, ApiTypeStoryView, ApiUser,\n} from '../../api/types';\nimport type { IconName } from '../../types/icons';\n\nimport { getUserFullName, isUserId } from '../../global/helpers';\nimport { selectPeer } from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport { formatDateAtTime } from '../../util/dates/dateFormat';\nimport { REM } from '../common/helpers/mediaDimensions';\n\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport GroupChatInfo from '../common/GroupChatInfo';\nimport PrivateChatInfo from '../common/PrivateChatInfo';\nimport ReactionStaticEmoji from '../common/ReactionStaticEmoji';\nimport ListItem, { type MenuItemContextAction } from '../ui/ListItem';\n\nimport styles from './StoryViewModal.module.scss';\n\ntype OwnProps = {\n  storyView: ApiTypeStoryView;\n};\n\ntype StateProps = {\n  peer?: ApiPeer;\n  availableReactions?: ApiAvailableReaction[];\n};\n\nconst CLOSE_ANIMATION_DURATION = 100;\nconst DEFAULT_REACTION_SIZE = 1.5 * REM;\nconst BULLET = '\\u2022';\n\nconst StoryView = ({\n  storyView,\n  peer,\n  availableReactions,\n}: OwnProps & StateProps) => {\n  const {\n    openChat,\n    closeStoryViewer,\n    unblockUser,\n    blockUser,\n    deleteContact,\n    updateStoryView,\n    focusMessage,\n    openStoryViewer,\n    closeStoryViewModal,\n  } = getActions();\n\n  const lang = useOldLang();\n\n  const handleClick = useLastCallback(() => {\n    const { type } = storyView;\n\n    if (type === 'repost') {\n      closeStoryViewModal();\n      openStoryViewer({\n        peerId: storyView.peerId,\n        storyId: storyView.storyId,\n      });\n      return;\n    }\n\n    closeStoryViewer();\n\n    setTimeout(() => {\n      if (type === 'user') {\n        openChat({ id: storyView.peerId });\n      } else if (type === 'forward') {\n        focusMessage({ chatId: storyView.peerId, messageId: storyView.messageId });\n      }\n    }, CLOSE_ANIMATION_DURATION);\n  });\n\n  const contextActions = useMemo(() => {\n    if (!isUserId(storyView.peerId)) return undefined;\n    const { peerId, areStoriesBlocked, isUserBlocked } = storyView;\n    const user = peer as ApiUser;\n    const { isContact } = user || {};\n    const fullName = getUserFullName(user);\n\n    const actions: MenuItemContextAction[] = [];\n\n    if (!isUserBlocked) {\n      if (!areStoriesBlocked) {\n        actions.push({\n          handler: () => {\n            blockUser({ userId: peerId, isOnlyStories: true });\n            updateStoryView({ userId: peerId, areStoriesBlocked: true });\n          },\n          title: lang('StoryHideFrom', fullName),\n          icon: 'hand-stop',\n        });\n      } else {\n        actions.push({\n          handler: () => {\n            unblockUser({ userId: peerId, isOnlyStories: true });\n            updateStoryView({ userId: peerId, areStoriesBlocked: false });\n          },\n          title: lang('StoryShowBackTo', fullName),\n          icon: 'play-story',\n        });\n      }\n    }\n\n    if (isContact) {\n      actions.push({\n        handler: () => {\n          deleteContact({ userId: peerId });\n        },\n        title: lang('DeleteContact'),\n        icon: 'delete-user',\n        destructive: true,\n      });\n    } else {\n      actions.push({\n        handler: () => {\n          if (isUserBlocked) {\n            unblockUser({ userId: peerId });\n            updateStoryView({ userId: peerId, isUserBlocked: false });\n          } else {\n            blockUser({ userId: peerId });\n            updateStoryView({ userId: peerId, isUserBlocked: true });\n          }\n        },\n        title: lang(isUserBlocked ? 'Unblock' : 'BlockUser'),\n        icon: isUserBlocked ? 'user' : 'delete-user',\n        destructive: !isUserBlocked,\n      });\n    }\n\n    return actions;\n  }, [lang, storyView, peer]);\n\n  const statusIcon: IconName = storyView.type === 'user' ? 'message-read'\n    : storyView.type === 'forward' ? 'forward' : 'loop';\n  const shouldColorStatus = storyView.type === 'forward' || storyView.type === 'repost';\n\n  const status = useMemo(() => {\n    const isModified = storyView.type === 'repost' && storyView.story.forwardInfo?.isModified;\n    const parts = [formatDateAtTime(lang, storyView.date * 1000)];\n    if (isModified) {\n      parts.push(lang('lng_edited'));\n    }\n\n    return parts.join(` ${BULLET} `);\n  }, [lang, storyView]);\n\n  return (\n    <ListItem\n      key={storyView.peerId}\n      className={buildClassName(\n        'chat-item-clickable small-icon',\n        styles.opacityFadeIn,\n        (storyView.isUserBlocked || storyView.areStoriesBlocked) && styles.blocked,\n      )}\n      onClick={handleClick}\n      rightElement={storyView.type === 'user' && storyView.reaction ? (\n        <ReactionStaticEmoji\n          reaction={storyView.reaction}\n          className={styles.viewReaction}\n          size={DEFAULT_REACTION_SIZE}\n          availableReactions={availableReactions}\n          withIconHeart\n        />\n      ) : undefined}\n      contextActions={contextActions}\n      withPortalForMenu\n      menuBubbleClassName={styles.menuBubble}\n    >\n      {isUserId(storyView.peerId) ? (\n        <PrivateChatInfo\n          className={buildClassName(shouldColorStatus && styles.withColoredStatus)}\n          userId={storyView.peerId}\n          noStatusOrTyping\n          status={status}\n          statusIcon={statusIcon}\n          withStory\n          forceShowSelf\n        />\n      ) : (\n        <GroupChatInfo\n          className={buildClassName(shouldColorStatus && styles.withColoredStatus)}\n          chatId={storyView.peerId}\n          status={status}\n          statusIcon={statusIcon}\n          withStory\n        />\n      )}\n    </ListItem>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>((global, { storyView }) => {\n  const peer = selectPeer(global, storyView.peerId);\n\n  return {\n    peer,\n    availableReactions: global.reactions.availableReactions,\n  };\n})(StoryView));\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo, useState,\n} from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { ApiStory, ApiTypeStoryView } from '../../api/types';\n\nimport {\n  STORY_MIN_REACTIONS_SORT,\n  STORY_VIEWS_MIN_CONTACTS_FILTER,\n  STORY_VIEWS_MIN_SEARCH,\n} from '../../config';\nimport {\n  selectIsCurrentUserPremium,\n  selectPeerStory,\n  selectTabState,\n} from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport { getServerTime } from '../../util/serverTime';\nimport renderText from '../common/helpers/renderText';\n\nimport useDebouncedCallback from '../../hooks/useDebouncedCallback';\nimport useFlag from '../../hooks/useFlag';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\nimport useScrolledState from '../../hooks/useScrolledState';\n\nimport Button from '../ui/Button';\nimport DropdownMenu from '../ui/DropdownMenu';\nimport InfiniteScroll from '../ui/InfiniteScroll';\nimport ListItem from '../ui/ListItem';\nimport MenuItem from '../ui/MenuItem';\nimport Modal from '../ui/Modal';\nimport PlaceholderChatInfo from '../ui/placeholder/PlaceholderChatInfo';\nimport SearchInput from '../ui/SearchInput';\nimport StoryView from './StoryView';\n\nimport styles from './StoryViewModal.module.scss';\n\ninterface StateProps {\n  story?: ApiStory;\n  isLoading?: boolean;\n  views?: ApiTypeStoryView[];\n  nextOffset?: string;\n  viewersExpirePeriod: number;\n  isCurrentUserPremium?: boolean;\n}\n\nconst REFETCH_DEBOUNCE = 250;\n\nfunction StoryViewModal({\n  story,\n  viewersExpirePeriod,\n  views,\n  nextOffset,\n  isLoading,\n  isCurrentUserPremium,\n}: StateProps) {\n  const {\n    loadStoryViewList, closeStoryViewModal, clearStoryViews,\n  } = getActions();\n\n  const [areJustContacts, markJustContacts, unmarkJustContacts] = useFlag(false);\n  const [areReactionsFirst, markReactionsFirst, unmarkReactionsFirst] = useFlag(true);\n  const [query, setQuery] = useState('');\n\n  const lang = useOldLang();\n\n  const isOpen = Boolean(story);\n  const isExpired = Boolean(story?.date) && (story!.date + viewersExpirePeriod) < getServerTime();\n  const { viewsCount = 0, reactionsCount = 0 } = story?.views || {};\n\n  const shouldShowJustContacts = story?.isPublic && viewsCount > STORY_VIEWS_MIN_CONTACTS_FILTER;\n  const shouldShowSortByReactions = reactionsCount > STORY_MIN_REACTIONS_SORT;\n  const shouldShowSearch = viewsCount > STORY_VIEWS_MIN_SEARCH;\n  const hasHeader = shouldShowJustContacts || shouldShowSortByReactions || shouldShowSearch;\n\n  useEffect(() => {\n    if (!isOpen) {\n      setQuery('');\n      unmarkJustContacts();\n      markReactionsFirst();\n    }\n  }, [isOpen]);\n\n  const refetchViews = useDebouncedCallback(() => {\n    clearStoryViews({ isLoading: true });\n  }, [], REFETCH_DEBOUNCE, true);\n\n  useEffect(() => {\n    refetchViews();\n  }, [areJustContacts, areReactionsFirst, query, refetchViews]);\n\n  const sortedViews = useMemo(() => {\n    return views?.sort(prepareComparator(areReactionsFirst));\n  }, [areReactionsFirst, views]);\n\n  const placeholderCount = !sortedViews?.length ? Math.min(viewsCount, 8) : 1;\n\n  const notAllAvailable = Boolean(sortedViews?.length) && sortedViews!.length < viewsCount && isExpired;\n\n  const handleLoadMore = useLastCallback(() => {\n    if (!story?.id || nextOffset === undefined) return;\n    loadStoryViewList({\n      peerId: story.peerId,\n      storyId: story.id,\n      offset: nextOffset,\n      areReactionsFirst: areReactionsFirst || undefined,\n      areJustContacts: areJustContacts || undefined,\n      query,\n    });\n  });\n\n  const { handleScroll, isAtBeginning } = useScrolledState();\n\n  const handleClose = useLastCallback(() => {\n    closeStoryViewModal();\n  });\n\n  const MoreMenuButton: FC<{ onTrigger: () => void; isOpen?: boolean }> = useMemo(() => {\n    return ({ onTrigger, isOpen: isMenuOpen }) => (\n      <Button\n        fluid\n        size=\"tiny\"\n        color=\"translucent\"\n        className={buildClassName(!isMenuOpen && 'active', styles.sortButton, styles.topButton)}\n        faded={isMenuOpen}\n        onClick={onTrigger}\n        ariaLabel={lang('SortBy')}\n      >\n        <i className={buildClassName(\n          'icon',\n          areReactionsFirst ? 'icon-heart-outline' : 'icon-recent',\n          styles.iconSort,\n        )}\n        />\n        <i className={buildClassName('icon icon-down', styles.iconDown)} />\n      </Button>\n    );\n  }, [areReactionsFirst, lang]);\n\n  return (\n    <Modal\n      isOpen={isOpen}\n      onClose={handleClose}\n      className=\"component-theme-dark\"\n      contentClassName={styles.viewsList}\n      isSlim\n    >\n      {hasHeader && (\n        <div className={styles.header}>\n          {shouldShowJustContacts && (\n            <div className={styles.contactFilter}>\n              <Button\n                className={buildClassName(!areJustContacts && styles.selected, styles.topButton)}\n                size=\"tiny\"\n                color=\"translucent-white\"\n                fluid\n                onClick={unmarkJustContacts}\n              >\n                {lang('AllViewers')}\n              </Button>\n              <Button\n                className={buildClassName(areJustContacts && styles.selected, styles.topButton)}\n                size=\"tiny\"\n                color=\"translucent-white\"\n                fluid\n                onClick={markJustContacts}\n              >\n                {lang('Contacts')}\n              </Button>\n            </div>\n          )}\n          {shouldShowSortByReactions && (\n            <DropdownMenu\n              className={styles.sort}\n              trigger={MoreMenuButton}\n              positionX=\"right\"\n            >\n              <MenuItem icon=\"heart-outline\" onClick={markReactionsFirst}>\n                {lang('SortByReactions')}\n                {areReactionsFirst && (\n                  <i className={buildClassName('icon icon-check', styles.check)} aria-hidden />\n                )}\n              </MenuItem>\n              <MenuItem icon=\"recent\" onClick={unmarkReactionsFirst}>\n                {lang('SortByTime')}\n                {!areReactionsFirst && (\n                  <i className={buildClassName('icon icon-check', styles.check)} aria-hidden />\n                )}\n              </MenuItem>\n            </DropdownMenu>\n          )}\n          {shouldShowSearch && (\n            <SearchInput className={styles.search} value={query} onChange={setQuery} />\n          )}\n        </div>\n      )}\n      <div\n        className={buildClassName(styles.content, !isAtBeginning && styles.topScrolled, 'custom-scroll')}\n        onScroll={handleScroll}\n      >\n        {isExpired && !isLoading && !query && Boolean(!sortedViews?.length) && (\n          <div className={buildClassName(styles.info, styles.centeredInfo)}>\n            {renderText(\n              lang(isCurrentUserPremium ? 'ServerErrorViewers' : 'ExpiredViewsStub'),\n              ['simple_markdown', 'emoji'],\n            )}\n          </div>\n        )}\n        {!isLoading && Boolean(query.length) && !sortedViews?.length && (\n          <div className={styles.info}>\n            {lang('Story.ViewList.EmptyTextSearch')}\n          </div>\n        )}\n        <InfiniteScroll\n          items={sortedViews}\n          onLoadMore={handleLoadMore}\n        >\n          {sortedViews?.map((view) => {\n            const additionalKeyId = view.type === 'forward' ? view.messageId\n              : view.type === 'repost' ? view.storyId : 'user';\n            return (\n              <StoryView key={`${view.peerId}-${view.date}-${additionalKeyId}`} storyView={view} />\n            );\n          })}\n          {isLoading && Array.from({ length: placeholderCount }).map((_, i) => (\n            <ListItem\n              // eslint-disable-next-line react/no-array-index-key\n              key={`placeholder-${i}`}\n              className=\"chat-item-clickable contact-list-item scroll-item small-icon\"\n              disabled\n            >\n              <PlaceholderChatInfo />\n            </ListItem>\n          ))}\n          {notAllAvailable && (\n            <div key=\"not-all-available\" className={buildClassName(styles.info, styles.bottomInfo)}>\n              {lang('Story.ViewList.NotFullyRecorded')}\n            </div>\n          )}\n        </InfiniteScroll>\n      </div>\n      <div className={buildClassName(styles.footer, 'dialog-buttons')}>\n        <Button\n          className={buildClassName('confirm-dialog-button', styles.close)}\n          isText\n          onClick={handleClose}\n        >\n          {lang('Close')}\n        </Button>\n      </div>\n    </Modal>\n  );\n}\n\nfunction prepareComparator(areReactionsFirst?: boolean) {\n  return (a: ApiTypeStoryView, b: ApiTypeStoryView) => {\n    if (areReactionsFirst) {\n      const reactionA = a.type === 'user' && a.reaction;\n      const reactionB = b.type === 'user' && b.reaction;\n      if (reactionA && !reactionB) {\n        return -1;\n      }\n      if (!reactionA && reactionB) {\n        return 1;\n      }\n    }\n\n    return b.date - a.date;\n  };\n}\n\nexport default memo(withGlobal((global) => {\n  const { appConfig } = global;\n  const { storyViewer: { viewModal } } = selectTabState(global);\n  const {\n    storyId, views, nextOffset, isLoading,\n  } = viewModal || {};\n  const story = storyId ? selectPeerStory(global, global.currentUserId!, storyId) : undefined;\n\n  return {\n    storyId,\n    views,\n    viewersExpirePeriod: appConfig!.storyExpirePeriod + appConfig!.storyViewersExpirePeriod,\n    story: story && 'content' in story ? story : undefined,\n    nextOffset,\n    isLoading,\n    availableReactions: global.reactions.availableReactions,\n    isCurrentUserPremium: selectIsCurrentUserPremium(global),\n  };\n})(StoryViewModal));\n","import React, {\n  beginHeavyAnimation,\n  memo, useCallback, useEffect, useState,\n} from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { ApiTypeStory } from '../../api/types';\nimport type { StoryViewerOrigin } from '../../types';\n\nimport { ANIMATION_END_DELAY } from '../../config';\nimport {\n  selectIsStoryViewerOpen,\n  selectPeerStory,\n  selectPerformanceSettingsValue,\n  selectTabState,\n} from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport captureEscKeyListener from '../../util/captureEscKeyListener';\nimport { disableDirectTextInput, enableDirectTextInput } from '../../util/directInputManager';\nimport { animateClosing, animateOpening } from './helpers/ghostAnimation';\n\nimport useFlag from '../../hooks/useFlag';\nimport useOldLang from '../../hooks/useOldLang';\nimport usePreviousDeprecated from '../../hooks/usePreviousDeprecated';\nimport { dispatchPriorityPlaybackEvent } from '../../hooks/usePriorityPlaybackCheck';\nimport useSlideSizes from './hooks/useSlideSizes';\nimport useStoryProps from './hooks/useStoryProps';\n\nimport ReportModal from '../common/ReportModal';\nimport Button from '../ui/Button';\nimport ShowTransition from '../ui/ShowTransition';\nimport StealthModeModal from './StealthModeModal';\nimport StoryDeleteConfirmModal from './StoryDeleteConfirmModal';\nimport StorySettings from './StorySettings';\nimport StorySlides from './StorySlides';\nimport StoryViewModal from './StoryViewModal';\n\nimport styles from './StoryViewer.module.scss';\n\nconst ANIMATION_DURATION = 250;\n\ninterface StateProps {\n  isOpen: boolean;\n  peerId: string;\n  storyId?: number;\n  story?: ApiTypeStory;\n  origin?: StoryViewerOrigin;\n  shouldSkipHistoryAnimations?: boolean;\n  withAnimation?: boolean;\n  isPrivacyModalOpen?: boolean;\n}\n\nfunction StoryViewer({\n  isOpen,\n  peerId,\n  storyId,\n  story,\n  origin,\n  shouldSkipHistoryAnimations,\n  withAnimation,\n  isPrivacyModalOpen,\n}: StateProps) {\n  const { closeStoryViewer, closeStoryPrivacyEditor } = getActions();\n\n  const lang = useOldLang();\n  const [storyToDelete, setStoryToDelete] = useState<ApiTypeStory | undefined>(undefined);\n  const [isDeleteModalOpen, openDeleteModal, closeDeleteModal] = useFlag(false);\n  const [isReportModalOpen, openReportModal, closeReportModal] = useFlag(false);\n\n  const { bestImageData, thumbnail } = useStoryProps(story);\n  const slideSizes = useSlideSizes();\n  const isPrevOpen = usePreviousDeprecated(isOpen);\n  const prevBestImageData = usePreviousDeprecated(bestImageData);\n  const prevPeerId = usePreviousDeprecated(peerId);\n  const prevOrigin = usePreviousDeprecated(origin);\n  const isGhostAnimation = Boolean(withAnimation && !shouldSkipHistoryAnimations);\n\n  useEffect(() => {\n    if (!isOpen) {\n      setStoryToDelete(undefined);\n      closeReportModal();\n      closeDeleteModal();\n    }\n  }, [isOpen]);\n\n  useEffect(() => {\n    if (!isOpen) {\n      return undefined;\n    }\n\n    disableDirectTextInput();\n    const stopPriorityPlayback = dispatchPriorityPlaybackEvent();\n\n    return () => {\n      enableDirectTextInput();\n      stopPriorityPlayback();\n    };\n  }, [isOpen]);\n\n  const handleClose = useCallback(() => {\n    closeStoryViewer();\n  }, [closeStoryViewer]);\n\n  const handleOpenDeleteModal = useCallback((s: ApiTypeStory) => {\n    setStoryToDelete(s);\n    openDeleteModal();\n  }, []);\n\n  const handleCloseDeleteModal = useCallback(() => {\n    closeDeleteModal();\n    setStoryToDelete(undefined);\n  }, []);\n\n  useEffect(() => (isOpen ? captureEscKeyListener(() => {\n    handleClose();\n  }) : undefined), [handleClose, isOpen]);\n\n  useEffect(() => {\n    if (isGhostAnimation && !isPrevOpen && isOpen && peerId && thumbnail && origin !== undefined) {\n      beginHeavyAnimation(ANIMATION_DURATION + ANIMATION_END_DELAY);\n      animateOpening(peerId, origin, thumbnail, bestImageData, slideSizes.activeSlide);\n    }\n    if (isGhostAnimation && isPrevOpen && !isOpen && prevPeerId && prevBestImageData && prevOrigin !== undefined) {\n      beginHeavyAnimation(ANIMATION_DURATION + ANIMATION_END_DELAY);\n      animateClosing(prevPeerId, prevOrigin, prevBestImageData);\n    }\n  }, [\n    isGhostAnimation,\n    bestImageData,\n    prevBestImageData,\n    isOpen,\n    isPrevOpen,\n    slideSizes.activeSlide,\n    thumbnail,\n    peerId,\n    prevPeerId,\n    origin,\n    prevOrigin,\n  ]);\n\n  return (\n    <ShowTransition\n      id=\"StoryViewer\"\n      className={styles.root}\n      isOpen={isOpen}\n      shouldAnimateFirstRender\n      noCloseTransition={shouldSkipHistoryAnimations}\n    >\n      <div className={styles.backdrop} onClick={handleClose} />\n      <Button\n        className={styles.close}\n        round\n        size=\"smaller\"\n        color=\"translucent-white\"\n        ariaLabel={lang('Close')}\n        onClick={handleClose}\n      >\n        <i className={buildClassName('icon icon-close')} aria-hidden />\n      </Button>\n\n      <StorySlides\n        isOpen={isOpen}\n        isReportModalOpen={isReportModalOpen}\n        isDeleteModalOpen={isDeleteModalOpen}\n        onReport={openReportModal}\n        onClose={handleClose}\n        onDelete={handleOpenDeleteModal}\n      />\n\n      <StoryDeleteConfirmModal\n        isOpen={isDeleteModalOpen}\n        story={storyToDelete}\n        onClose={handleCloseDeleteModal}\n      />\n      <StoryViewModal />\n      <StealthModeModal />\n      <StorySettings isOpen={isPrivacyModalOpen} onClose={closeStoryPrivacyEditor} />\n      <ReportModal\n        isOpen={isReportModalOpen}\n        onClose={closeReportModal}\n        subject=\"story\"\n        peerId={peerId!}\n        storyId={storyId}\n      />\n    </ShowTransition>\n  );\n}\n\nexport default memo(withGlobal((global): StateProps => {\n  const {\n    shouldSkipHistoryAnimations, storyViewer: {\n      storyId, peerId, isPrivacyModalOpen, origin,\n    },\n  } = selectTabState(global);\n  const story = peerId && storyId ? selectPeerStory(global, peerId, storyId) : undefined;\n  const withAnimation = selectPerformanceSettingsValue(global, 'mediaViewerAnimations');\n\n  return {\n    isOpen: selectIsStoryViewerOpen(global),\n    shouldSkipHistoryAnimations,\n    peerId: peerId!,\n    storyId,\n    story,\n    origin,\n    withAnimation,\n    isPrivacyModalOpen,\n  };\n})(StoryViewer));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useMemo, useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, getGlobal } from '../../../global';\n\nimport type { ApiTopic } from '../../../api/types';\nimport type { GlobalState } from '../../../global/types';\nimport type { ThreadId } from '../../../types';\n\nimport { PEER_PICKER_ITEM_HEIGHT_PX } from '../../../config';\nimport {\n  getCanPostInChat, getGroupStatus, getUserStatus, isUserOnline,\n} from '../../../global/helpers';\nimport { isApiPeerChat } from '../../../global/helpers/peers';\nimport { selectPeer, selectTopics, selectUserStatus } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { REM } from '../helpers/mediaDimensions';\nimport renderText from '../helpers/renderText';\n\nimport useSelector from '../../../hooks/data/useSelector';\nimport useInfiniteScroll from '../../../hooks/useInfiniteScroll';\nimport useInputFocusOnOpen from '../../../hooks/useInputFocusOnOpen';\nimport useKeyboardListNavigation from '../../../hooks/useKeyboardListNavigation';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Button from '../../ui/Button';\nimport InfiniteScroll from '../../ui/InfiniteScroll';\nimport InputText from '../../ui/InputText';\nimport Loading from '../../ui/Loading';\nimport Modal from '../../ui/Modal';\nimport Transition from '../../ui/Transition';\nimport Avatar from '../Avatar';\nimport FullNameTitle from '../FullNameTitle';\nimport TopicIcon from '../TopicIcon';\nimport PickerItem from './PickerItem';\n\nimport './ChatOrUserPicker.scss';\n\nexport type OwnProps = {\n  currentUserId?: string;\n  chatOrUserIds: string[];\n  isOpen: boolean;\n  searchPlaceholder: string;\n  search: string;\n  className?: string;\n  loadMore?: NoneToVoidFunction;\n  onSearchChange: (search: string) => void;\n  onSelectChatOrUser: (chatOrUserId: string, threadId?: ThreadId) => void;\n  onClose: NoneToVoidFunction;\n  onCloseAnimationEnd?: NoneToVoidFunction;\n};\n\nconst CHAT_LIST_SLIDE = 0;\nconst TOPIC_LIST_SLIDE = 1;\nconst TOPIC_ICON_SIZE = 2.75 * REM;\nconst ITEM_CLASS_NAME = 'ChatOrUserPicker-item';\nconst TOPIC_ITEM_HEIGHT_PX = 56;\n\nconst ChatOrUserPicker: FC<OwnProps> = ({\n  isOpen,\n  currentUserId,\n  chatOrUserIds,\n  search,\n  searchPlaceholder,\n  className,\n  loadMore,\n  onSearchChange,\n  onSelectChatOrUser,\n  onClose,\n  onCloseAnimationEnd,\n}) => {\n  const { loadTopics } = getActions();\n\n  const lang = useOldLang();\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const topicContainerRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const searchRef = useRef<HTMLInputElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const topicSearchRef = useRef<HTMLInputElement>(null);\n  const [viewportIds, getMore] = useInfiniteScroll(loadMore, chatOrUserIds, Boolean(search));\n  const [forumId, setForumId] = useState<string | undefined>(undefined);\n  const [topicSearch, setTopicSearch] = useState<string>('');\n  const activeKey = forumId ? TOPIC_LIST_SLIDE : CHAT_LIST_SLIDE;\n  const viewportOffset = chatOrUserIds!.indexOf(viewportIds![0]);\n\n  const resetSearch = useLastCallback(() => {\n    onSearchChange('');\n  });\n  useInputFocusOnOpen(searchRef, isOpen && activeKey === CHAT_LIST_SLIDE, resetSearch);\n  useInputFocusOnOpen(topicSearchRef, isOpen && activeKey === TOPIC_LIST_SLIDE);\n\n  const selectTopicsById = useLastCallback((global: GlobalState) => {\n    if (!forumId) {\n      return undefined;\n    }\n\n    return selectTopics(global, forumId);\n  });\n\n  const forumTopicsById = useSelector(selectTopicsById);\n\n  const [topicIds, topics] = useMemo(() => {\n    const global = getGlobal();\n    const chatsById = global.chats.byId;\n    const chatFullInfoById = global.chats.fullInfoById;\n\n    const chat = chatsById[forumId!];\n\n    if (!chat || !forumTopicsById) {\n      return [undefined, undefined];\n    }\n\n    const searchTitle = topicSearch.toLowerCase();\n\n    const result = forumTopicsById\n      ? Object.values(forumTopicsById).reduce((acc, topic) => {\n        if (\n          getCanPostInChat(chat, topic, undefined, chatFullInfoById[forumId!])\n          && (!searchTitle || topic.title.toLowerCase().includes(searchTitle))\n        ) {\n          acc[topic.id] = topic;\n        }\n\n        return acc;\n      }, {} as Record<number, ApiTopic>)\n      : forumTopicsById;\n\n    return [Object.keys(result).map(Number), result];\n  }, [forumId, topicSearch, forumTopicsById]);\n\n  const handleHeaderBackClick = useLastCallback(() => {\n    setForumId(undefined);\n    setTopicSearch('');\n  });\n\n  const handleSearchChange = useLastCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    onSearchChange(e.currentTarget.value);\n  });\n\n  const handleTopicSearchChange = useLastCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    setTopicSearch(e.currentTarget.value);\n  });\n\n  const handleKeyDown = useKeyboardListNavigation(containerRef, isOpen, (index) => {\n    if (viewportIds && viewportIds.length > 0) {\n      const chatsById = getGlobal().chats.byId;\n\n      const chatId = viewportIds[index === -1 ? 0 : index];\n      const chat = chatsById[chatId];\n      if (chat?.isForum) {\n        if (!forumTopicsById) loadTopics({ chatId });\n        setForumId(chatId);\n      } else {\n        onSelectChatOrUser(chatId);\n      }\n    }\n  }, `.${ITEM_CLASS_NAME}`, true);\n\n  const handleTopicKeyDown = useKeyboardListNavigation(topicContainerRef, isOpen, (index) => {\n    if (topicIds?.length) {\n      onSelectChatOrUser(forumId!, topicIds[index === -1 ? 0 : index]);\n    }\n  }, `.${ITEM_CLASS_NAME}`, true);\n\n  const handleClick = useLastCallback((chatId: string) => {\n    const chatsById = getGlobal().chats.byId;\n    const chat = chatsById?.[chatId];\n    if (chat?.isForum) {\n      if (!forumTopicsById) loadTopics({ chatId });\n      setForumId(chatId);\n      resetSearch();\n    } else {\n      onSelectChatOrUser(chatId);\n    }\n  });\n\n  const renderChatItem = useCallback((id: string, index: number) => {\n    const global = getGlobal();\n    const peer = selectPeer(global, id);\n    if (!peer) {\n      return undefined;\n    }\n\n    const isSelf = peer && !isApiPeerChat(peer) ? peer.isSelf : undefined;\n\n    function getSubtitle() {\n      if (!peer) return undefined;\n      if (peer.id === currentUserId) return [lang('SavedMessagesInfo')];\n      if (isApiPeerChat(peer)) {\n        return [getGroupStatus(lang, peer)];\n      }\n\n      const userStatus = selectUserStatus(global, peer.id);\n      return [\n        getUserStatus(lang, peer, userStatus),\n        buildClassName(isUserOnline(peer, userStatus, true) && 'online'),\n      ];\n    }\n\n    const [subtitle, subtitleClassName] = getSubtitle() || [];\n\n    return (\n      <PickerItem\n        key={id}\n        className={ITEM_CLASS_NAME}\n        title={<FullNameTitle peer={peer} isSavedMessages={isSelf} />}\n        avatarElement={(\n          <Avatar\n            peer={peer}\n            isSavedMessages={isSelf}\n            size=\"medium\"\n          />\n        )}\n        subtitle={subtitle}\n        subtitleClassName={subtitleClassName}\n        ripple\n        style={`top: ${(viewportOffset + index) * PEER_PICKER_ITEM_HEIGHT_PX}px;`}\n        // eslint-disable-next-line react/jsx-no-bind\n        onClick={() => handleClick(id)}\n      />\n    );\n  }, [currentUserId, lang, viewportOffset]);\n\n  function renderTopicList() {\n    return (\n      <>\n        <div className=\"modal-header\" dir={lang.isRtl ? 'rtl' : undefined}>\n          <Button round color=\"translucent\" size=\"smaller\" ariaLabel={lang('Back')} onClick={handleHeaderBackClick}>\n            <i className=\"icon icon-arrow-left\" />\n          </Button>\n          <InputText\n            ref={topicSearchRef}\n            value={topicSearch}\n            onChange={handleTopicSearchChange}\n            onKeyDown={handleTopicKeyDown}\n            placeholder={searchPlaceholder}\n          />\n        </div>\n        <InfiniteScroll\n          ref={topicContainerRef}\n          className=\"picker-list custom-scroll\"\n          items={topicIds}\n          withAbsolutePositioning\n          maxHeight={(topicIds?.length || 0) * TOPIC_ITEM_HEIGHT_PX}\n          onKeyDown={handleTopicKeyDown}\n        >\n          {!topicIds && <Loading />}\n          {topicIds?.map((topicId, i) => (\n            <PickerItem\n              key={`${forumId}_${topicId}`}\n              className={ITEM_CLASS_NAME}\n              // eslint-disable-next-line react/jsx-no-bind\n              onClick={() => onSelectChatOrUser(forumId!, topicId)}\n              style={`top: ${(viewportOffset + i) * TOPIC_ITEM_HEIGHT_PX}px;`}\n              avatarElement={(\n                <TopicIcon\n                  size={TOPIC_ICON_SIZE}\n                  topic={topics[topicId]}\n                  className=\"topic-icon\"\n                  letterClassName=\"topic-icon-letter\"\n                />\n              )}\n              title={renderText(topics[topicId].title)}\n            />\n          ))}\n        </InfiniteScroll>\n      </>\n    );\n  }\n\n  function renderChatList() {\n    return (\n      <>\n        <div className=\"modal-header\" dir={lang.isRtl ? 'rtl' : undefined}>\n          <Button\n            round\n            color=\"translucent\"\n            size=\"smaller\"\n            ariaLabel={lang('Close')}\n            onClick={onClose}\n          >\n            <i className=\"icon icon-close\" />\n          </Button>\n          <InputText\n            ref={searchRef}\n            value={search}\n            onChange={handleSearchChange}\n            onKeyDown={handleKeyDown}\n            placeholder={searchPlaceholder}\n          />\n        </div>\n        {viewportIds?.length ? (\n          <InfiniteScroll\n            ref={containerRef}\n            className=\"picker-list custom-scroll\"\n            items={viewportIds}\n            itemSelector={`.${ITEM_CLASS_NAME}`}\n            onLoadMore={getMore}\n            withAbsolutePositioning\n            maxHeight={chatOrUserIds!.length * PEER_PICKER_ITEM_HEIGHT_PX}\n            onKeyDown={handleKeyDown}\n          >\n            {viewportIds.map(renderChatItem)}\n          </InfiniteScroll>\n        ) : viewportIds && !viewportIds.length ? (\n          <p className=\"no-results\">{lang('lng_blocked_list_not_found')}</p>\n        ) : (\n          <Loading />\n        )}\n      </>\n    );\n  }\n\n  return (\n    <Modal\n      isOpen={isOpen}\n      className={buildClassName('ChatOrUserPicker', className)}\n      onClose={onClose}\n      onCloseAnimationEnd={onCloseAnimationEnd}\n    >\n      <Transition activeKey={activeKey} name=\"slideFade\" slideClassName=\"ChatOrUserPicker_slide\">\n        {() => {\n          return activeKey === TOPIC_LIST_SLIDE ? renderTopicList() : renderChatList();\n        }}\n      </Transition>\n    </Modal>\n  );\n};\n\nexport default memo(ChatOrUserPicker);\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useMemo, useState } from '../../lib/teact/teact';\nimport { getGlobal, withGlobal } from '../../global';\n\nimport type { ApiChatType } from '../../api/types';\nimport type { ThreadId } from '../../types';\n\nimport { API_CHAT_TYPES } from '../../config';\nimport {\n  filterChatsByName,\n  filterUsersByName,\n  getCanPostInChat,\n  isDeletedUser,\n} from '../../global/helpers';\nimport { filterChatIdsByType } from '../../global/selectors';\nimport { unique } from '../../util/iteratees';\nimport sortChatIds from './helpers/sortChatIds';\n\nimport useCurrentOrPrev from '../../hooks/useCurrentOrPrev';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport ChatOrUserPicker from './pickers/ChatOrUserPicker';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  searchPlaceholder: string;\n  className?: string;\n  filter?: ApiChatType[];\n  loadMore?: NoneToVoidFunction;\n  onSelectRecipient: (peerId: string, threadId?: ThreadId) => void;\n  onClose: NoneToVoidFunction;\n  onCloseAnimationEnd?: NoneToVoidFunction;\n};\n\ntype StateProps = {\n  currentUserId?: string;\n  activeListIds?: string[];\n  archivedListIds?: string[];\n  pinnedIds?: string[];\n  contactIds?: string[];\n};\n\nconst RecipientPicker: FC<OwnProps & StateProps> = ({\n  isOpen,\n  currentUserId,\n  activeListIds,\n  archivedListIds,\n  pinnedIds,\n  contactIds,\n  filter = API_CHAT_TYPES,\n  className,\n  searchPlaceholder,\n  loadMore,\n  onSelectRecipient,\n  onClose,\n  onCloseAnimationEnd,\n}) => {\n  const lang = useOldLang();\n  const [search, setSearch] = useState('');\n  const ids = useMemo(() => {\n    if (!isOpen) return undefined;\n\n    let priorityIds = pinnedIds || [];\n    if (currentUserId) {\n      priorityIds = unique([currentUserId, ...priorityIds]);\n    }\n\n    // No need for expensive global updates on users, so we avoid them\n    const global = getGlobal();\n    const usersById = global.users.byId;\n    const chatsById = global.chats.byId;\n    const chatFullInfoById = global.chats.fullInfoById;\n\n    const chatIds = [\n      ...(activeListIds || []),\n      ...((search && archivedListIds) || []),\n    ].filter((id) => {\n      const chat = chatsById[id];\n      const user = usersById[id];\n      if (user && isDeletedUser(user)) return false;\n\n      return chat && getCanPostInChat(chat, undefined, undefined, chatFullInfoById[id]);\n    });\n\n    const sorted = sortChatIds(\n      unique([\n        ...(currentUserId ? [currentUserId] : []),\n        ...filterChatsByName(lang, chatIds, chatsById, search, currentUserId),\n        ...(contactIds && filter.includes('users') ? filterUsersByName(contactIds, usersById, search) : []),\n      ]),\n      undefined,\n      priorityIds,\n      currentUserId,\n    );\n\n    return filterChatIdsByType(global, sorted, filter);\n  }, [pinnedIds, currentUserId, activeListIds, search, archivedListIds, lang, contactIds, filter, isOpen]);\n\n  const renderingIds = useCurrentOrPrev(ids, true)!;\n\n  return (\n    <ChatOrUserPicker\n      isOpen={isOpen}\n      className={className}\n      chatOrUserIds={renderingIds}\n      currentUserId={currentUserId}\n      searchPlaceholder={searchPlaceholder}\n      search={search}\n      onSearchChange={setSearch}\n      loadMore={loadMore}\n      onSelectChatOrUser={onSelectRecipient}\n      onClose={onClose}\n      onCloseAnimationEnd={onCloseAnimationEnd}\n    />\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const {\n      chats: {\n        listIds,\n        orderedPinnedIds,\n      },\n      currentUserId,\n    } = global;\n\n    return {\n      activeListIds: listIds.active,\n      archivedListIds: listIds.archived,\n      pinnedIds: orderedPinnedIds.active,\n      contactIds: global.contactList?.userIds,\n      currentUserId,\n    };\n  },\n)(RecipientPicker));\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect,\n} from '../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../global';\n\nimport type { ThreadId } from '../../types';\n\nimport { getChatTitle, getUserFirstOrLastName, isUserId } from '../../global/helpers';\nimport {\n  selectChat,\n  selectTabState,\n  selectUser,\n} from '../../global/selectors';\n\nimport useFlag from '../../hooks/useFlag';\nimport useOldLang from '../../hooks/useOldLang';\nimport usePreviousDeprecated from '../../hooks/usePreviousDeprecated';\n\nimport RecipientPicker from '../common/RecipientPicker';\n\nexport type OwnProps = {\n  isOpen: boolean;\n};\n\ninterface StateProps {\n  currentUserId?: string;\n  isManyMessages?: boolean;\n  isStory?: boolean;\n  isForwarding?: boolean;\n}\n\nconst ForwardRecipientPicker: FC<OwnProps & StateProps> = ({\n  isOpen,\n  currentUserId,\n  isManyMessages,\n  isStory,\n  isForwarding,\n}) => {\n  const {\n    openChatOrTopicWithReplyInDraft,\n    setForwardChatOrTopic,\n    exitForwardMode,\n    forwardToSavedMessages,\n    forwardStory,\n    showNotification,\n  } = getActions();\n\n  const lang = useOldLang();\n\n  const renderingIsStory = usePreviousDeprecated(isStory, true);\n  const [isShown, markIsShown, unmarkIsShown] = useFlag();\n  useEffect(() => {\n    if (isOpen) {\n      markIsShown();\n    }\n  }, [isOpen, markIsShown]);\n\n  const handleSelectRecipient = useCallback((recipientId: string, threadId?: ThreadId) => {\n    const isSelf = recipientId === currentUserId;\n    if (isStory) {\n      forwardStory({ toChatId: recipientId });\n      const global = getGlobal();\n      if (isUserId(recipientId)) {\n        showNotification({\n          message: isSelf\n            ? lang('Conversation.StoryForwardTooltip.SavedMessages.One')\n            : lang(\n              'StorySharedTo',\n              getUserFirstOrLastName(selectUser(global, recipientId)),\n            ),\n        });\n      } else {\n        const chat = selectChat(global, recipientId);\n        if (!chat) return;\n\n        showNotification({\n          message: lang('StorySharedTo', getChatTitle(lang, chat)),\n        });\n      }\n      return;\n    }\n\n    if (isSelf) {\n      const message = lang(\n        isManyMessages\n          ? 'Conversation.ForwardTooltip.SavedMessages.Many'\n          : 'Conversation.ForwardTooltip.SavedMessages.One',\n      );\n\n      forwardToSavedMessages();\n      showNotification({ message });\n    } else {\n      const chatId = recipientId;\n      const topicId = threadId ? Number(threadId) : undefined;\n      if (isForwarding) {\n        setForwardChatOrTopic({ chatId, topicId });\n      } else {\n        openChatOrTopicWithReplyInDraft({ chatId, topicId });\n      }\n    }\n  }, [currentUserId, isManyMessages, isStory, lang, isForwarding]);\n\n  const handleClose = useCallback(() => {\n    exitForwardMode();\n  }, [exitForwardMode]);\n\n  if (!isOpen && !isShown) {\n    return undefined;\n  }\n\n  return (\n    <RecipientPicker\n      isOpen={isOpen}\n      className={renderingIsStory ? 'component-theme-dark' : undefined}\n      searchPlaceholder={lang(isForwarding ? 'ForwardTo' : 'ReplyToDialog')}\n      onSelectRecipient={handleSelectRecipient}\n      onClose={handleClose}\n      onCloseAnimationEnd={unmarkIsShown}\n    />\n  );\n};\n\nexport default memo(withGlobal<OwnProps>((global): StateProps => {\n  const { messageIds, storyId } = selectTabState(global).forwardMessages;\n  const isForwarding = (messageIds && messageIds.length > 0);\n  return {\n    currentUserId: global.currentUserId,\n    isManyMessages: (messageIds?.length || 0) > 1,\n    isStory: Boolean(storyId),\n    isForwarding,\n  };\n})(ForwardRecipientPicker));\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect,\n} from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport type { TabState } from '../../global/types';\nimport type { ThreadId } from '../../types';\n\nimport useFlag from '../../hooks/useFlag';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport RecipientPicker from '../common/RecipientPicker';\n\nexport type OwnProps = {\n  requestedDraft?: TabState['requestedDraft'];\n};\n\nconst DraftRecipientPicker: FC<OwnProps> = ({\n  requestedDraft,\n}) => {\n  const isOpen = Boolean(requestedDraft && !requestedDraft.chatId);\n  const {\n    openChatWithDraft,\n    resetOpenChatWithDraft,\n  } = getActions();\n\n  const lang = useOldLang();\n\n  const [isShown, markIsShown, unmarkIsShown] = useFlag();\n  useEffect(() => {\n    if (isOpen) {\n      markIsShown();\n    }\n  }, [isOpen, markIsShown]);\n\n  const handleSelectRecipient = useCallback((recipientId: string, threadId?: ThreadId) => {\n    openChatWithDraft({\n      chatId: recipientId,\n      threadId,\n      text: requestedDraft!.text,\n      files: requestedDraft!.files,\n    });\n  }, [openChatWithDraft, requestedDraft]);\n\n  const handleClose = useCallback(() => {\n    resetOpenChatWithDraft();\n  }, [resetOpenChatWithDraft]);\n\n  if (!isOpen && !isShown) {\n    return undefined;\n  }\n\n  return (\n    <RecipientPicker\n      isOpen={isOpen}\n      searchPlaceholder={lang('ForwardTo')}\n      filter={requestedDraft?.filter}\n      onSelectRecipient={handleSelectRecipient}\n      onClose={handleClose}\n      onCloseAnimationEnd={unmarkIsShown}\n    />\n  );\n};\n\nexport default memo(DraftRecipientPicker);\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useCallback, useEffect } from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport type { TabState } from '../../global/types';\n\nimport useFlag from '../../hooks/useFlag';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport RecipientPicker from '../common/RecipientPicker';\n\nexport type OwnProps = {\n  requestedAttachBotInChat?: TabState['requestedAttachBotInChat'];\n};\n\nconst AttachBotRecipientPicker: FC<OwnProps> = ({\n  requestedAttachBotInChat,\n}) => {\n  const { cancelAttachBotInChat, callAttachBot } = getActions();\n  const lang = useOldLang();\n\n  const isOpen = Boolean(requestedAttachBotInChat);\n  const [isShown, markIsShown, unmarkIsShown] = useFlag();\n  useEffect(() => {\n    if (isOpen) {\n      markIsShown();\n    }\n  }, [isOpen, markIsShown]);\n\n  const { bot, filter, startParam } = requestedAttachBotInChat || {};\n\n  const handlePeerRecipient = useCallback((recipientId: string) => {\n    callAttachBot({ bot: bot!, chatId: recipientId, startParam });\n    cancelAttachBotInChat();\n  }, [bot, callAttachBot, cancelAttachBotInChat, startParam]);\n\n  if (!isOpen && !isShown) {\n    return undefined;\n  }\n\n  return (\n    <RecipientPicker\n      isOpen={isOpen}\n      searchPlaceholder={lang('Search')}\n      filter={filter}\n      onSelectRecipient={handlePeerRecipient}\n      onClose={cancelAttachBotInChat}\n      onCloseAnimationEnd={unmarkIsShown}\n    />\n  );\n};\n\nexport default memo(AttachBotRecipientPicker);\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useEffect } from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type {\n  ApiContact, ApiError, ApiInviteInfo, ApiPhoto,\n} from '../../api/types';\nimport type { MessageList } from '../../global/types';\n\nimport { selectCurrentMessageList, selectTabState } from '../../global/selectors';\nimport getReadableErrorText from '../../util/getReadableErrorText';\nimport { pick } from '../../util/iteratees';\nimport renderText from '../common/helpers/renderText';\n\nimport useFlag from '../../hooks/useFlag';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Avatar from '../common/Avatar';\nimport Button from '../ui/Button';\nimport Modal from '../ui/Modal';\n\ntype StateProps = {\n  currentMessageList?: MessageList;\n  dialogs: (ApiError | ApiInviteInfo | ApiContact)[];\n};\n\nconst Dialogs: FC<StateProps> = ({ dialogs, currentMessageList }) => {\n  const {\n    dismissDialog,\n    acceptInviteConfirmation,\n    sendMessage,\n    showNotification,\n  } = getActions();\n  const [isModalOpen, openModal, closeModal] = useFlag();\n\n  const lang = useOldLang();\n\n  useEffect(() => {\n    if (dialogs.length > 0) {\n      openModal();\n    }\n  }, [dialogs, openModal]);\n\n  if (!dialogs.length) {\n    return undefined;\n  }\n\n  function renderInviteHeader(title: string, photo?: ApiPhoto) {\n    return (\n      <div className=\"modal-header\">\n        {photo && <Avatar size=\"small\" photo={photo} withVideo />}\n        <div className=\"modal-title\">\n          {renderText(title)}\n        </div>\n        <Button round color=\"translucent\" size=\"smaller\" ariaLabel={lang('Close')} onClick={closeModal}>\n          <i className=\"icon icon-close\" />\n        </Button>\n      </div>\n    );\n  }\n\n  const renderInvite = (invite: ApiInviteInfo) => {\n    const {\n      hash, title, about, participantsCount, isChannel, photo, isRequestNeeded,\n    } = invite;\n\n    const handleJoinClick = () => {\n      acceptInviteConfirmation({\n        hash,\n      });\n      if (isRequestNeeded) {\n        showNotification({\n          message: isChannel ? lang('RequestToJoinChannelSentDescription') : lang('RequestToJoinGroupSentDescription'),\n        });\n      }\n      closeModal();\n    };\n\n    const participantsText = isChannel\n      ? lang('Subscribers', participantsCount, 'i')\n      : lang('Members', participantsCount, 'i');\n\n    const joinText = isChannel ? lang('ChannelJoin') : lang('JoinGroup');\n    const requestToJoinText = isChannel\n      ? lang('MemberRequests.RequestToJoinChannel') : lang('MemberRequests.RequestToJoinGroup');\n\n    return (\n      <Modal\n        isOpen={isModalOpen}\n        onClose={closeModal}\n        className=\"error\"\n        header={renderInviteHeader(title, photo)}\n        onCloseAnimationEnd={dismissDialog}\n      >\n        {participantsCount !== undefined && <p className=\"modal-help\">{participantsText}</p>}\n        {about && <p className=\"modal-about\">{renderText(about, ['br'])}</p>}\n        {isRequestNeeded && (\n          <p className=\"modal-help\">\n            {isChannel\n              ? lang('MemberRequests.RequestToJoinDescriptionChannel')\n              : lang('MemberRequests.RequestToJoinDescriptionGroup')}\n          </p>\n        )}\n        <div className=\"dialog-buttons mt-2\">\n          <Button\n            isText\n            className=\"confirm-dialog-button\"\n            // eslint-disable-next-line react/jsx-no-bind\n            onClick={handleJoinClick}\n          >\n            {isRequestNeeded ? requestToJoinText : joinText}\n          </Button>\n          <Button isText className=\"confirm-dialog-button\" onClick={closeModal}>{lang('Cancel')}</Button>\n        </div>\n      </Modal>\n    );\n  };\n\n  const renderContactRequest = (contactRequest: ApiContact) => {\n    const handleConfirm = () => {\n      if (!currentMessageList) {\n        return;\n      }\n\n      sendMessage({\n        contact: pick(contactRequest, ['firstName', 'lastName', 'phoneNumber']),\n        messageList: currentMessageList,\n      });\n      closeModal();\n    };\n\n    return (\n      <Modal\n        isOpen={isModalOpen}\n        onClose={closeModal}\n        className=\"confirm\"\n        title={lang('ShareYouPhoneNumberTitle')}\n        onCloseAnimationEnd={dismissDialog}\n      >\n        {lang('AreYouSureShareMyContactInfoBot')}\n        <div className=\"dialog-buttons mt-2\">\n          <Button\n            className=\"confirm-dialog-button\"\n            isText\n            // eslint-disable-next-line react/jsx-no-bind\n            onClick={handleConfirm}\n          >\n            {lang('OK')}\n          </Button>\n          <Button className=\"confirm-dialog-button\" isText onClick={closeModal}>{lang('Cancel')}</Button>\n        </div>\n      </Modal>\n    );\n  };\n\n  const renderError = (error: ApiError) => {\n    return (\n      <Modal\n        isOpen={isModalOpen}\n        onClose={closeModal}\n        onCloseAnimationEnd={dismissDialog}\n        className=\"error\"\n        title={getErrorHeader(error)}\n      >\n        {error.hasErrorKey ? getReadableErrorText(error)\n          : renderText(error.message!, ['simple_markdown', 'emoji', 'br'])}\n        <div className=\"dialog-buttons mt-2\">\n          <Button isText onClick={closeModal}>{lang('OK')}</Button>\n        </div>\n      </Modal>\n    );\n  };\n\n  const renderDialog = (dialog: ApiError | ApiInviteInfo | ApiContact) => {\n    if ('hash' in dialog) {\n      return renderInvite(dialog);\n    }\n\n    if ('phoneNumber' in dialog) {\n      return renderContactRequest(dialog);\n    }\n\n    return renderError(dialog);\n  };\n\n  return Boolean(dialogs.length) && renderDialog(dialogs[dialogs.length - 1]);\n};\n\nfunction getErrorHeader(error: ApiError) {\n  if (error.isSlowMode) {\n    return 'Slowmode enabled';\n  }\n\n  if (!error.hasErrorKey) {\n    return 'Telegram';\n  }\n\n  return 'Something went wrong';\n}\n\nexport default memo(withGlobal(\n  (global): StateProps => {\n    return {\n      dialogs: selectTabState(global).dialogs,\n      currentMessageList: selectCurrentMessageList(global),\n    };\n  },\n)(Dialogs));\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo } from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { ApiNotification } from '../../api/types';\n\nimport { selectTabState } from '../../global/selectors';\nimport { pick } from '../../util/iteratees';\nimport renderText from '../common/helpers/renderText';\n\nimport Notification from '../ui/Notification';\n\ntype StateProps = {\n  notifications: ApiNotification[];\n};\n\nconst Notifications: FC<StateProps> = ({ notifications }) => {\n  const { dismissNotification } = getActions();\n\n  if (!notifications.length) {\n    return undefined;\n  }\n\n  return (\n    <div id=\"Notifications\">\n      {notifications.map(({\n        message, className, localId, action, actionText, title, duration,\n      }) => (\n        <Notification\n          title={title ? renderText(title, ['simple_markdown', 'emoji', 'br', 'links']) : undefined}\n          action={action}\n          actionText={actionText}\n          className={className}\n          duration={duration}\n          message={renderText(message, ['simple_markdown', 'emoji', 'br', 'links'])}\n          // eslint-disable-next-line react/jsx-no-bind\n          onDismiss={() => dismissNotification({ localId })}\n        />\n      ))}\n    </div>\n  );\n};\n\nexport default memo(withGlobal(\n  (global): StateProps => pick(selectTabState(global), ['notifications']),\n)(Notifications));\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport { ensureProtocol } from '../../util/ensureProtocol';\nimport renderText from '../common/helpers/renderText';\n\nimport useCurrentOrPrev from '../../hooks/useCurrentOrPrev';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport ConfirmDialog from '../ui/ConfirmDialog';\n\nexport type OwnProps = {\n  url?: string;\n};\n\nconst SafeLinkModal: FC<OwnProps> = ({ url }) => {\n  const { toggleSafeLinkModal } = getActions();\n\n  const lang = useOldLang();\n\n  const handleOpen = useCallback(() => {\n    window.open(ensureProtocol(url), '_blank', 'noopener');\n    toggleSafeLinkModal({ url: undefined });\n  }, [toggleSafeLinkModal, url]);\n\n  const handleDismiss = useCallback(() => {\n    toggleSafeLinkModal({ url: undefined });\n  }, [toggleSafeLinkModal]);\n\n  const renderingUrl = useCurrentOrPrev(url);\n\n  return (\n    <ConfirmDialog\n      isOpen={Boolean(url)}\n      onClose={handleDismiss}\n      title={lang('OpenUrlTitle')}\n      textParts={renderText(lang('OpenUrlAlert2', renderingUrl), ['links'])}\n      confirmLabel={lang('OpenUrlTitle')}\n      confirmHandler={handleOpen}\n    />\n  );\n};\n\nexport default memo(SafeLinkModal);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"VJDwJpsF\",\"buttons\":\"aYO2C2Hx\"};","import React, { memo, useMemo } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { TabState } from '../../../global/types';\n\nimport { prepareMapUrl } from '../../../util/map';\nimport { IS_IOS, IS_MAC_OS } from '../../../util/windowEnvironment';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Button from '../../ui/Button';\nimport Modal from '../../ui/Modal';\n\nimport styles from './MapModal.module.scss';\n\nexport type OwnProps = {\n  modal: TabState['mapModal'];\n};\n\nconst OpenMapModal = ({ modal }: OwnProps) => {\n  const { closeMapModal } = getActions();\n\n  const { point: geoPoint, zoom } = modal || {};\n\n  const lang = useOldLang();\n\n  const isOpen = Boolean(geoPoint);\n\n  const handleClose = useLastCallback(() => {\n    closeMapModal();\n  });\n\n  const [googleUrl, bingUrl, appleUrl, osmUrl] = useMemo(() => {\n    if (!geoPoint) {\n      return [];\n    }\n\n    const google = prepareMapUrl('google', geoPoint, zoom);\n    const bing = prepareMapUrl('bing', geoPoint, zoom);\n    const osm = prepareMapUrl('osm', geoPoint, zoom);\n    const apple = prepareMapUrl('apple', geoPoint, zoom);\n\n    return [google, bing, apple, osm];\n  }, [geoPoint, zoom]);\n\n  const openUrl = useLastCallback((url: string) => {\n    closeMapModal();\n    window.open(url, '_blank', 'noopener');\n  });\n\n  const handleGoogleClick = useLastCallback(() => {\n    openUrl(googleUrl!);\n  });\n\n  const handleBingClick = useLastCallback(() => {\n    openUrl(bingUrl!);\n  });\n\n  const handleAppleClick = useLastCallback(() => {\n    openUrl(appleUrl!);\n  });\n\n  const handleOsmClick = useLastCallback(() => {\n    openUrl(osmUrl!);\n  });\n\n  return (\n    <Modal\n      contentClassName={styles.root}\n      title={lang('OpenMapWith')}\n      isOpen={isOpen}\n      onClose={handleClose}\n      isSlim\n    >\n      <div className={styles.buttons}>\n        {(IS_IOS || IS_MAC_OS) && (\n          <Button fluid size=\"smaller\" onClick={handleAppleClick}>\n            Apple Maps\n          </Button>\n        )}\n        <Button fluid size=\"smaller\" onClick={handleGoogleClick}>\n          Google Maps\n        </Button>\n        <Button fluid size=\"smaller\" onClick={handleBingClick}>\n          Bing Maps\n        </Button>\n        <Button fluid size=\"smaller\" onClick={handleOsmClick}>\n          OpenStreetMap\n        </Button>\n      </div>\n      <div className=\"dialog-buttons mt-2\">\n        <Button className=\"confirm-dialog-button\" isText onClick={handleClose}>\n          {lang('Cancel')}\n        </Button>\n      </div>\n    </Modal>\n  );\n};\n\nexport default memo(OpenMapModal);\n","// extracted by mini-css-extract-plugin\nexport default {\"checkbox\":\"eha3Z6eU\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../../global';\n\nimport type { ApiUser } from '../../../api/types';\nimport type { TabState } from '../../../global/types';\n\nimport { getUserFullName } from '../../../global/helpers';\nimport { selectUser } from '../../../global/selectors';\nimport { ensureProtocol } from '../../../util/ensureProtocol';\nimport renderText from '../../common/helpers/renderText';\n\nimport useCurrentOrPrev from '../../../hooks/useCurrentOrPrev';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Checkbox from '../../ui/Checkbox';\nimport ConfirmDialog from '../../ui/ConfirmDialog';\n\nimport styles from './UrlAuthModal.module.scss';\n\nexport type OwnProps = {\n  modal?: TabState['urlAuth'];\n};\n\ntype StateProps = {\n  currentUser?: ApiUser;\n};\n\nconst UrlAuthModal: FC<OwnProps & StateProps> = ({\n  modal, currentUser,\n}) => {\n  const { closeUrlAuthModal, acceptBotUrlAuth, acceptLinkUrlAuth } = getActions();\n  const [isLoginChecked, setLoginChecked] = useState(true);\n  const [isWriteAccessChecked, setWriteAccessChecked] = useState(true);\n  const currentAuth = useCurrentOrPrev(modal, false);\n  const { domain, botId, shouldRequestWriteAccess } = currentAuth?.request || {};\n  const bot = botId ? getGlobal().users.byId[botId] : undefined;\n\n  const lang = useOldLang();\n\n  const handleOpen = useCallback(() => {\n    if (modal?.url && isLoginChecked) {\n      const acceptAction = modal.button ? acceptBotUrlAuth : acceptLinkUrlAuth;\n      acceptAction({\n        isWriteAllowed: isWriteAccessChecked,\n      });\n    } else {\n      window.open(ensureProtocol(currentAuth?.url), '_blank', 'noopener');\n    }\n    closeUrlAuthModal();\n  }, [\n    modal, isLoginChecked, closeUrlAuthModal, acceptBotUrlAuth, acceptLinkUrlAuth, isWriteAccessChecked, currentAuth,\n  ]);\n\n  const handleDismiss = useCallback(() => {\n    closeUrlAuthModal();\n  }, [closeUrlAuthModal]);\n\n  const handleLoginChecked = useCallback((value: boolean) => {\n    setLoginChecked(value);\n    setWriteAccessChecked(value);\n  }, [setLoginChecked]);\n\n  // Reset on re-open\n  useEffect(() => {\n    if (domain) {\n      setLoginChecked(true);\n      setWriteAccessChecked(Boolean(shouldRequestWriteAccess));\n    }\n  }, [shouldRequestWriteAccess, domain]);\n\n  return (\n    <ConfirmDialog\n      isOpen={Boolean(modal?.url)}\n      onClose={handleDismiss}\n      title={lang('OpenUrlTitle')}\n      confirmLabel={lang('OpenUrlTitle')}\n      confirmHandler={handleOpen}\n    >\n      {renderText(lang('OpenUrlAlert2', currentAuth?.url), ['links'])}\n      {domain && (\n        <Checkbox\n          checked={isLoginChecked}\n          label={(\n            <>\n              {renderText(\n                lang('Conversation.OpenBotLinkLogin', [domain, getUserFullName(currentUser)]),\n                ['simple_markdown'],\n              )}\n            </>\n          )}\n          onCheck={handleLoginChecked}\n          className={styles.checkbox}\n        />\n      )}\n      {shouldRequestWriteAccess && (\n        <Checkbox\n          checked={isWriteAccessChecked}\n          label={(\n            <>\n              {renderText(\n                lang('Conversation.OpenBotLinkAllowMessages', getUserFullName(bot)),\n                ['simple_markdown'],\n              )}\n            </>\n          )}\n          onCheck={setWriteAccessChecked}\n          disabled={!isLoginChecked}\n          className={styles.checkbox}\n        />\n      )}\n    </ConfirmDialog>\n  );\n};\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const currentUser = selectUser(global, global.currentUserId!);\n    return {\n      currentUser,\n    };\n  },\n)(UrlAuthModal));\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useMemo, useState,\n} from '../../lib/teact/teact';\n\nimport type { LangFn } from '../../hooks/useOldLang';\n\nimport { MAX_INT_32 } from '../../config';\nimport buildClassName from '../../util/buildClassName';\nimport { formatDateToString, formatTime, getDayStart } from '../../util/dates/dateFormat';\n\nimport useFlag from '../../hooks/useFlag';\nimport useOldLang from '../../hooks/useOldLang';\nimport usePreviousDeprecated from '../../hooks/usePreviousDeprecated';\n\nimport Button from '../ui/Button';\nimport Modal from '../ui/Modal';\n\nimport './CalendarModal.scss';\n\nconst MAX_SAFE_DATE = MAX_INT_32 * 1000;\nconst MIN_SAFE_DATE = 0;\n\nexport type OwnProps = {\n  selectedAt?: number;\n  minAt?: number;\n  maxAt?: number;\n  isFutureMode?: boolean;\n  isPastMode?: boolean;\n  isOpen: boolean;\n  withTimePicker?: boolean;\n  submitButtonLabel?: string;\n  secondButtonLabel?: string;\n  onClose: () => void;\n  onSubmit: (date: Date) => void;\n  onSecondButtonClick?: NoneToVoidFunction;\n};\n\nconst WEEKDAY_LETTERS = [\n  'lng_weekday1',\n  'lng_weekday2',\n  'lng_weekday3',\n  'lng_weekday4',\n  'lng_weekday5',\n  'lng_weekday6',\n  'lng_weekday7',\n];\n\nconst CalendarModal: FC<OwnProps> = ({\n  selectedAt,\n  minAt,\n  maxAt,\n  isFutureMode,\n  isPastMode,\n  isOpen,\n  withTimePicker,\n  submitButtonLabel,\n  secondButtonLabel,\n  onClose,\n  onSubmit,\n  onSecondButtonClick,\n}) => {\n  const lang = useOldLang();\n  const now = new Date();\n\n  const minDate = useMemo(() => {\n    if (isFutureMode && !minAt) return new Date();\n    return new Date(Math.max(minAt || MIN_SAFE_DATE, MIN_SAFE_DATE));\n  }, [isFutureMode, minAt]);\n  const maxDate = useMemo(() => {\n    if (isPastMode && !maxAt) return new Date();\n    return new Date(Math.min(maxAt || MAX_SAFE_DATE, MAX_SAFE_DATE));\n  }, [isPastMode, maxAt]);\n\n  const passedSelectedDate = useMemo(() => (selectedAt ? new Date(selectedAt) : new Date()), [selectedAt]);\n  const prevIsOpen = usePreviousDeprecated(isOpen);\n  const [isTimeInputFocused, markTimeInputAsFocused] = useFlag(false);\n\n  const [selectedDate, setSelectedDate] = useState<Date>(passedSelectedDate);\n  const [currentMonthAndYear, setCurrentMonthAndYear] = useState<Date>(\n    new Date(selectedDate.getFullYear(), selectedDate.getMonth(), 1),\n  );\n  const [selectedHours, setSelectedHours] = useState<string>(\n    formatInputTime(passedSelectedDate.getHours()),\n  );\n  const [selectedMinutes, setSelectedMinutes] = useState<string>(\n    formatInputTime(passedSelectedDate.getMinutes()),\n  );\n\n  const selectedDay = formatDay(selectedDate.getFullYear(), selectedDate.getMonth(), selectedDate.getDate());\n  const currentYear = currentMonthAndYear.getFullYear();\n  const currentMonth = currentMonthAndYear.getMonth();\n\n  const isDisabled = (isFutureMode && selectedDate.getTime() < minDate.getTime())\n    || (isPastMode && selectedDate.getTime() > maxDate.getTime());\n\n  useEffect(() => {\n    if (!prevIsOpen && isOpen) {\n      setSelectedDate(passedSelectedDate);\n      setCurrentMonthAndYear(new Date(passedSelectedDate.getFullYear(), passedSelectedDate.getMonth(), 1));\n      if (withTimePicker) {\n        setSelectedHours(formatInputTime(passedSelectedDate.getHours()));\n        setSelectedMinutes(formatInputTime(passedSelectedDate.getMinutes()));\n      }\n    }\n  }, [passedSelectedDate, isOpen, prevIsOpen, withTimePicker]);\n\n  useEffect(() => {\n    if (isFutureMode && !isTimeInputFocused && selectedDate.getTime() < minDate.getTime()) {\n      setSelectedDate(minDate);\n      setSelectedHours(formatInputTime(minDate.getHours()));\n      setSelectedMinutes(formatInputTime(minDate.getMinutes()));\n    }\n  }, [isFutureMode, isTimeInputFocused, minDate, selectedDate]);\n\n  useEffect(() => {\n    if (isPastMode && !isTimeInputFocused && selectedDate.getTime() > maxDate.getTime()) {\n      setSelectedDate(maxDate);\n      setSelectedHours(formatInputTime(maxDate.getHours()));\n      setSelectedMinutes(formatInputTime(maxDate.getMinutes()));\n    }\n  }, [isFutureMode, isPastMode, isTimeInputFocused, maxDate, minDate, selectedDate]);\n\n  useEffect(() => {\n    if (selectedAt) {\n      const newSelectedDate = new Date(selectedAt);\n      setSelectedDate(newSelectedDate);\n      setSelectedHours(formatInputTime(newSelectedDate.getHours()));\n      setSelectedMinutes(formatInputTime(newSelectedDate.getMinutes()));\n    }\n  }, [selectedAt]);\n\n  const shouldDisableNextMonth = (isPastMode && currentYear >= now.getFullYear() && currentMonth >= now.getMonth())\n    || (maxDate && currentYear >= maxDate.getFullYear() && currentMonth >= maxDate.getMonth());\n  const shouldDisablePrevMonth = isFutureMode && currentYear <= now.getFullYear() && currentMonth <= now.getMonth();\n\n  const { prevMonthGrid, currentMonthGrid, nextMonthGrid } = useMemo(() => (\n    buildCalendarGrid(currentYear, currentMonth)\n  ), [currentMonth, currentYear]);\n\n  const submitLabel = useMemo(() => {\n    return submitButtonLabel || formatSubmitLabel(lang, selectedDate);\n  }, [lang, selectedDate, submitButtonLabel]);\n\n  function handlePrevMonth() {\n    setCurrentMonthAndYear((d) => {\n      const dateCopy = new Date(d);\n      dateCopy.setMonth(dateCopy.getMonth() - 1);\n\n      return dateCopy;\n    });\n  }\n\n  function handleNextMonth() {\n    setCurrentMonthAndYear((d) => {\n      const dateCopy = new Date(d);\n      dateCopy.setMonth(dateCopy.getMonth() + 1);\n\n      return dateCopy;\n    });\n  }\n\n  function handleDateSelect(date: number) {\n    setSelectedDate((d) => {\n      const dateCopy = new Date(d);\n      dateCopy.setDate(date);\n      dateCopy.setMonth(currentMonth);\n      dateCopy.setFullYear(currentYear);\n\n      return dateCopy;\n    });\n  }\n\n  const handleSubmit = useCallback(() => {\n    if (isFutureMode && selectedDate < minDate) {\n      onSubmit(minDate);\n    } else if (isPastMode && selectedDate > maxDate) {\n      onSubmit(maxDate);\n    } else {\n      onSubmit(selectedDate);\n    }\n  }, [isFutureMode, isPastMode, minDate, maxDate, onSubmit, selectedDate]);\n\n  const handleChangeHours = useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    const value = e.target.value.replace(/[^\\d]+/g, '');\n    if (!value.length) {\n      setSelectedHours('');\n      e.target.value = '';\n      return;\n    }\n\n    const hours = Math.max(0, Math.min(Number(value), 23));\n\n    const date = new Date(selectedDate.getTime());\n    date.setHours(hours);\n    setSelectedDate(date);\n\n    const hoursStr = formatInputTime(hours);\n    setSelectedHours(hoursStr);\n    e.target.value = hoursStr;\n  }, [selectedDate]);\n\n  const handleChangeMinutes = useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    const value = e.target.value.replace(/[^\\d]+/g, '');\n    if (!value.length) {\n      setSelectedMinutes('');\n      e.target.value = '';\n      return;\n    }\n\n    const minutes = Math.max(0, Math.min(Number(value), 59));\n\n    const date = new Date(selectedDate.getTime());\n    date.setMinutes(minutes);\n    setSelectedDate(date);\n\n    const minutesStr = formatInputTime(minutes);\n    setSelectedMinutes(minutesStr);\n    e.target.value = minutesStr;\n  }, [selectedDate]);\n\n  function renderTimePicker() {\n    return (\n      <div className=\"timepicker\">\n        <input\n          type=\"text\"\n          className=\"form-control\"\n          inputMode=\"decimal\"\n          value={selectedHours}\n          onChange={handleChangeHours}\n          onFocus={markTimeInputAsFocused}\n        />\n        :\n        <input\n          type=\"text\"\n          className=\"form-control\"\n          inputMode=\"decimal\"\n          value={selectedMinutes}\n          onChange={handleChangeMinutes}\n          onFocus={markTimeInputAsFocused}\n        />\n      </div>\n    );\n  }\n\n  return (\n    <Modal\n      isOpen={isOpen}\n      onClose={onClose}\n      className=\"CalendarModal\"\n      onEnter={handleSubmit}\n    >\n      <div className=\"container\">\n        <div className=\"month-selector\">\n          <Button\n            round\n            size=\"smaller\"\n            color=\"translucent\"\n            onClick={onClose}\n          >\n            <i className=\"icon icon-close\" />\n          </Button>\n\n          <h4>\n            {lang(`lng_month${currentMonth + 1}`)}\n            {' '}\n            {currentYear}\n          </h4>\n\n          <Button\n            round\n            size=\"smaller\"\n            color=\"translucent\"\n            disabled={shouldDisablePrevMonth}\n            onClick={!shouldDisablePrevMonth ? handlePrevMonth : undefined}\n          >\n            <i className=\"icon icon-previous\" />\n          </Button>\n\n          <Button\n            round\n            size=\"smaller\"\n            color=\"translucent\"\n            disabled={shouldDisableNextMonth}\n            onClick={!shouldDisableNextMonth ? handleNextMonth : undefined}\n          >\n            <i className=\"icon icon-next\" />\n          </Button>\n        </div>\n      </div>\n\n      <div className=\"calendar-wrapper\">\n        <div className=\"calendar-grid\">\n          {WEEKDAY_LETTERS.map((day) => (\n            <div className=\"day-button faded weekday\">\n              <span>{lang(day)}</span>\n            </div>\n          ))}\n          {prevMonthGrid.map((gridDate) => (\n            <div className=\"day-button disabled\"><span>{gridDate}</span></div>\n          ))}\n          {currentMonthGrid.map((gridDate) => (\n            <div\n              role=\"button\"\n              tabIndex={0}\n              onClick={() => handleDateSelect(gridDate)}\n              className={buildClassName(\n                'day-button',\n                'div-button',\n                isDisabledDay(\n                  currentYear, currentMonth, gridDate, minDate, maxDate,\n                )\n                  ? 'disabled'\n                  : `${gridDate ? 'clickable' : ''}`,\n                selectedDay === formatDay(currentYear, currentMonth, gridDate) && 'selected',\n              )}\n            >\n              {Boolean(gridDate) && (\n                <span>{gridDate}</span>\n              )}\n            </div>\n          ))}\n          {nextMonthGrid.map((gridDate) => (\n            <div className=\"day-button disabled\"><span>{gridDate}</span></div>\n          ))}\n        </div>\n      </div>\n\n      {withTimePicker && renderTimePicker()}\n\n      <div className=\"footer\">\n        <div className=\"footer\">\n          <Button\n            onClick={handleSubmit}\n            disabled={isDisabled}\n          >\n            {submitLabel}\n          </Button>\n          {secondButtonLabel && (\n            <Button onClick={onSecondButtonClick} isText>\n              {secondButtonLabel}\n            </Button>\n          )}\n        </div>\n      </div>\n    </Modal>\n  );\n};\n\nfunction buildCalendarGrid(year: number, month: number) {\n  const prevMonthGrid: number[] = [];\n  const currentMonthGrid: number[] = [];\n  const nextMonthGrid: number[] = [];\n\n  const date = new Date();\n  date.setDate(1);\n  date.setMonth(month);\n  date.setFullYear(year);\n  const firstDay = date.getDay() || 7;\n  const totalDaysInPrevMonth = new Date(year, month, 0).getDate();\n\n  for (let i = 1; i < firstDay; i++) {\n    prevMonthGrid.push(totalDaysInPrevMonth - firstDay + i + 1);\n  }\n\n  while (date.getMonth() === month) {\n    const gridDate = date.getDate();\n    currentMonthGrid.push(gridDate);\n    date.setDate(gridDate + 1);\n  }\n\n  const lastRowDaysCount = (currentMonthGrid.length + prevMonthGrid.length) % 7;\n  if (lastRowDaysCount > 0) {\n    for (let i = 1; i <= 7 - lastRowDaysCount; i++) {\n      nextMonthGrid.push(i);\n    }\n  }\n\n  return { prevMonthGrid, currentMonthGrid, nextMonthGrid };\n}\n\nfunction isDisabledDay(year: number, month: number, day: number, minDate?: Date, maxDate?: Date) {\n  const selectedDay = new Date(year, month, day);\n  const fixedMinDate = minDate && getDayStart(minDate);\n  const fixedMaxDate = maxDate && getDayStart(maxDate);\n\n  if (fixedMaxDate && selectedDay > fixedMaxDate) {\n    return true;\n  } else if (fixedMinDate && selectedDay < fixedMinDate) {\n    return true;\n  }\n\n  return false;\n}\n\nfunction formatInputTime(value: string | number) {\n  return String(value).padStart(2, '0');\n}\n\nfunction formatDay(year: number, month: number, day: number) {\n  return `${year}-${month + 1}-${day}`;\n}\n\nfunction formatSubmitLabel(lang: LangFn, date: Date) {\n  const day = formatDateToString(date, lang.code);\n  const today = formatDateToString(new Date(), lang.code);\n\n  if (day === today) {\n    return lang('Conversation.ScheduleMessage.SendToday', formatTime(lang, date));\n  }\n\n  return lang('Conversation.ScheduleMessage.SendOn', [day, formatTime(lang, date)]);\n}\n\nexport default memo(CalendarModal);\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport { selectTabState } from '../../global/selectors';\n\nimport useOldLang from '../../hooks/useOldLang';\n\nimport CalendarModal from '../common/CalendarModal';\n\nexport type OwnProps = {\n  isOpen: boolean;\n};\n\ntype StateProps = {\n  selectedAt?: number;\n};\n\nconst HistoryCalendar: FC<OwnProps & StateProps> = ({\n  isOpen, selectedAt,\n}) => {\n  const { searchMessagesByDate, closeHistoryCalendar } = getActions();\n\n  const handleJumpToDate = useCallback((date: Date) => {\n    searchMessagesByDate({ timestamp: date.getTime() / 1000 });\n    closeHistoryCalendar();\n  }, [closeHistoryCalendar, searchMessagesByDate]);\n\n  const lang = useOldLang();\n\n  return (\n    <CalendarModal\n      isOpen={isOpen}\n      selectedAt={selectedAt}\n      isPastMode\n      submitButtonLabel={lang('JumpToDate')}\n      onClose={closeHistoryCalendar}\n      onSubmit={handleJumpToDate}\n    />\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    return { selectedAt: selectTabState(global).historyCalendarSelectedAt };\n  },\n)(HistoryCalendar));\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useRef, useState,\n} from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { ApiCountryCode, ApiUser, ApiUserStatus } from '../../api/types';\n\nimport { getUserStatus } from '../../global/helpers';\nimport { selectUser, selectUserStatus } from '../../global/selectors';\nimport { formatPhoneNumberWithCode } from '../../util/phoneNumber';\nimport { IS_TOUCH_ENV } from '../../util/windowEnvironment';\nimport renderText from '../common/helpers/renderText';\n\nimport useCurrentOrPrev from '../../hooks/useCurrentOrPrev';\nimport useFlag from '../../hooks/useFlag';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Avatar from '../common/Avatar';\nimport Button from '../ui/Button';\nimport Checkbox from '../ui/Checkbox';\nimport InputText from '../ui/InputText';\nimport Modal from '../ui/Modal';\n\nimport './NewContactModal.scss';\n\nconst ANIMATION_DURATION = 200;\n\nexport type OwnProps = {\n  isOpen: boolean;\n  userId?: string;\n  isByPhoneNumber?: boolean;\n};\n\ntype StateProps = {\n  user?: ApiUser;\n  userStatus?: ApiUserStatus;\n  phoneCodeList: ApiCountryCode[];\n};\n\nconst NewContactModal: FC<OwnProps & StateProps> = ({\n  isOpen,\n  userId,\n  isByPhoneNumber,\n  user,\n  userStatus,\n  phoneCodeList,\n}) => {\n  const { updateContact, importContact, closeNewContactDialog } = getActions();\n\n  const lang = useOldLang();\n  const renderingUser = useCurrentOrPrev(user);\n  const renderingIsByPhoneNumber = useCurrentOrPrev(isByPhoneNumber);\n  // eslint-disable-next-line no-null/no-null\n  const inputRef = useRef<HTMLInputElement>(null);\n\n  const [isShown, markIsShown, unmarkIsShown] = useFlag();\n  const [firstName, setFirstName] = useState<string>(renderingUser?.firstName ?? '');\n  const [lastName, setLastName] = useState<string>(renderingUser?.lastName ?? '');\n  const [phone, setPhone] = useState<string>(renderingUser?.phoneNumber ?? '');\n  const [shouldSharePhoneNumber, setShouldSharePhoneNumber] = useState<boolean>(true);\n  const canBeSubmitted = Boolean(firstName && (!isByPhoneNumber || phone));\n\n  useEffect(() => {\n    if (isOpen) {\n      markIsShown();\n      setFirstName(renderingUser?.firstName ?? '');\n      setLastName(renderingUser?.lastName ?? '');\n      setPhone(renderingUser?.phoneNumber ?? '');\n      setShouldSharePhoneNumber(true);\n    }\n  }, [isOpen, markIsShown, renderingUser?.firstName, renderingUser?.lastName, renderingUser?.phoneNumber]);\n\n  useEffect(() => {\n    if (!IS_TOUCH_ENV && isShown) {\n      setTimeout(() => { inputRef.current?.focus(); }, ANIMATION_DURATION);\n    }\n  }, [isShown]);\n\n  const handleFirstNameChange = useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    setFirstName(e.target.value);\n  }, []);\n\n  const handlePhoneChange = useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    setPhone(formatPhoneNumberWithCode(phoneCodeList, e.target.value));\n  }, [phoneCodeList]);\n\n  const handleLastNameChange = useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    setLastName(e.target.value);\n  }, []);\n\n  const handleClose = useCallback(() => {\n    closeNewContactDialog();\n    setFirstName('');\n    setLastName('');\n    setPhone('');\n  }, [closeNewContactDialog]);\n\n  const handleSubmit = useCallback(() => {\n    if (isByPhoneNumber || !userId) {\n      importContact({\n        firstName,\n        lastName,\n        phoneNumber: phone,\n      });\n    } else {\n      updateContact({\n        userId,\n        firstName,\n        lastName,\n        shouldSharePhoneNumber,\n      });\n    }\n  }, [firstName, importContact, isByPhoneNumber, lastName, phone, shouldSharePhoneNumber, updateContact, userId]);\n\n  if (!isOpen && !isShown) {\n    return undefined;\n  }\n\n  function renderAddContact() {\n    return (\n      <>\n        <div className=\"NewContactModal__profile\" dir={lang.isRtl ? 'rtl' : undefined}>\n          <Avatar\n            size=\"jumbo\"\n            peer={renderingUser}\n            text={`${firstName} ${lastName}`}\n          />\n          <div className=\"NewContactModal__profile-info\">\n            <p className=\"NewContactModal__phone-number\">\n              {renderingUser?.phoneNumber\n                ? formatPhoneNumberWithCode(phoneCodeList, renderingUser.phoneNumber)\n                : lang('MobileHidden')}\n            </p>\n            <span className=\"NewContactModal__user-status\" dir=\"auto\">\n              {getUserStatus(lang, renderingUser!, userStatus)}\n            </span>\n          </div>\n        </div>\n        <InputText\n          ref={inputRef}\n          value={firstName}\n          label={lang('FirstName')}\n          tabIndex={0}\n          onChange={handleFirstNameChange}\n        />\n        <InputText\n          value={lastName}\n          label={lang('LastName')}\n          tabIndex={0}\n          onChange={handleLastNameChange}\n        />\n        <p className=\"NewContactModal__help-text\">\n          {renderText(\n            lang('NewContact.Phone.Hidden.Text', renderingUser?.firstName || ''),\n            ['emoji', 'simple_markdown'],\n          )}\n        </p>\n        <Checkbox\n          checked={shouldSharePhoneNumber}\n          tabIndex={0}\n          onCheck={setShouldSharePhoneNumber}\n          label={lang('lng_new_contact_share')}\n        />\n        <p className=\"NewContactModal__help-text\">\n          {renderText(lang('AddContact.SharedContactExceptionInfo', renderingUser?.firstName))}\n        </p>\n      </>\n    );\n  }\n\n  function renderCreateContact() {\n    return (\n      <div className=\"NewContactModal__new-contact\" dir={lang.isRtl ? 'rtl' : undefined}>\n        <Avatar size=\"jumbo\" text={`${firstName} ${lastName}`} />\n        <div className=\"NewContactModal__new-contact-fieldset\">\n          <InputText\n            ref={inputRef}\n            value={phone}\n            inputMode=\"tel\"\n            label={lang('lng_contact_phone')}\n            tabIndex={0}\n            onChange={handlePhoneChange}\n          />\n          <InputText\n            value={firstName}\n            label={lang('FirstName')}\n            tabIndex={0}\n            onChange={handleFirstNameChange}\n          />\n          <InputText\n            value={lastName}\n            label={lang('LastName')}\n            tabIndex={0}\n            onChange={handleLastNameChange}\n          />\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <Modal\n      className=\"NewContactModal\"\n      title={lang('NewContact')}\n      isOpen={isOpen}\n      onClose={handleClose}\n      onCloseAnimationEnd={unmarkIsShown}\n    >\n      {renderingUser && renderAddContact()}\n      {renderingIsByPhoneNumber && renderCreateContact()}\n      <div className=\"dialog-buttons\">\n        <Button\n          isText\n          className=\"confirm-dialog-button\"\n          onClick={handleClose}\n        >\n          {lang('Cancel')}\n        </Button>\n        <Button\n          isText\n          className=\"confirm-dialog-button\"\n          disabled={!canBeSubmitted}\n          onClick={handleSubmit}\n        >\n          {lang('Done')}\n        </Button>\n      </div>\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { userId }): StateProps => {\n    const user = userId ? selectUser(global, userId) : undefined;\n    return {\n      user,\n      userStatus: userId ? selectUserStatus(global, userId) : undefined,\n      phoneCodeList: global.countryList.phoneCodes,\n    };\n  },\n)(NewContactModal));\n","import type { RefObject } from 'react';\nimport { useEffect, useSignal, useState } from '../lib/teact/teact';\n\nimport buildStyle from '../util/buildStyle';\nimport { captureEvents } from '../util/captureEvents';\nimport useFlag from './useFlag';\nimport useLastCallback from './useLastCallback';\n\nexport interface Size {\n  width: number;\n  height: number;\n}\n\nexport interface Point {\n  x: number;\n  y: number;\n}\n\nlet resizeTimeout: number | undefined;\n\nexport default function useDraggable(\n  ref: RefObject<HTMLElement>,\n  dragHandleElementRef: RefObject<HTMLElement>,\n  isEnabled: boolean = true,\n  originalSize: Size,\n) {\n  const [elementCurrentPosition, setElementCurrentPosition] = useState<Point | undefined>(undefined);\n  const [elementCurrentSize, setElementCurrentSize] = useState<Size | undefined>(undefined);\n\n  const [getElementPositionOnStartDrag, setElementPositionOnStartDrag] = useSignal({ x: 0, y: 0 });\n  const [getDragStartPoint, setDragStartPoint] = useSignal({ x: 0, y: 0 });\n\n  const elementPositionOnStartDrag = getElementPositionOnStartDrag();\n  const dragStartPoint = getDragStartPoint();\n\n  const element = ref.current;\n  const dragHandleElement = dragHandleElementRef.current;\n\n  const [isInitiated, setIsInitiated] = useFlag(false);\n  const [wasElementShown, setWasElementShown] = useFlag(false);\n  const [isDragging, startDragging, stopDragging] = useFlag(false);\n  const [isWindowsResizing, startWindowResizing, stopWindowResizing] = useFlag(false);\n\n  function getVisibleArea() {\n    return {\n      width: window.innerWidth,\n      height: window.innerHeight,\n    };\n  }\n\n  const getCenteredPosition = useLastCallback(() => {\n    if (!elementCurrentSize) return undefined;\n    const { width, height } = elementCurrentSize;\n\n    const visibleArea = getVisibleArea();\n    const viewportWidth = visibleArea.width;\n    const viewportHeight = visibleArea.height;\n\n    const centeredX = (viewportWidth - width) / 2;\n    const centeredY = (viewportHeight - height) / 2;\n\n    return { x: centeredX, y: centeredY };\n  });\n\n  useEffect(() => {\n    if (element) setWasElementShown();\n  }, [element]);\n\n  useEffect(() => {\n    if (!isInitiated && elementCurrentSize) {\n      const centeredPosition = getCenteredPosition();\n      if (!centeredPosition) return;\n\n      setElementCurrentPosition({ x: centeredPosition.x, y: centeredPosition.y });\n      setIsInitiated();\n    }\n  }, [elementCurrentSize, isInitiated, element]);\n\n  const handleStartDrag = useLastCallback((event: MouseEvent | TouchEvent) => {\n    const targetElement = event.target as HTMLElement;\n    if (targetElement.closest('.no-drag') || !element) {\n      return;\n    }\n    const { pageX, pageY } = ('touches' in event) ? event.touches[0] : event;\n\n    const { left, top } = element.getBoundingClientRect();\n    setElementPositionOnStartDrag({ x: left, y: top });\n    setDragStartPoint({ x: pageX, y: pageY });\n\n    startDragging();\n  });\n\n  const handleRelease = useLastCallback(() => {\n    stopDragging();\n  });\n\n  useEffect(() => {\n    if (!isEnabled) {\n      stopDragging();\n    }\n  }, [isEnabled]);\n\n  const ensurePositionInVisibleArea = (x: number, y: number) => {\n    const visibleArea = getVisibleArea();\n\n    const visibleAreaWidth = visibleArea.width;\n    const visibleAreaHeight = visibleArea.height;\n\n    const componentWidth = elementCurrentSize!.width;\n    const componentHeight = elementCurrentSize!.height;\n\n    let newX = x;\n    let newY = y;\n\n    if (newX < 0) newX = 0;\n    if (newY < 0) newY = 0;\n    if (newX + componentWidth > visibleAreaWidth) newX = visibleAreaWidth - componentWidth;\n    if (newY + componentHeight > visibleAreaHeight) newY = visibleAreaHeight - componentHeight;\n\n    return { x: newX, y: newY };\n  };\n\n  const adjustPositionWithinBounds = useLastCallback(() => {\n    const position = !wasElementShown ? getCenteredPosition() : elementCurrentPosition;\n    if (!elementCurrentSize || !position) return;\n    const newPosition = ensurePositionInVisibleArea(position.x, position.y);\n    setElementCurrentPosition(newPosition);\n  });\n\n  const ensureSizeInVisibleArea = useLastCallback((sizeForCheck: Size) => {\n    const newSize = sizeForCheck;\n\n    const visibleArea = getVisibleArea();\n\n    newSize.width = Math.min(visibleArea.width, Math.max(originalSize.width, newSize.width));\n    newSize.height = Math.min(visibleArea.height, Math.max(originalSize.height, newSize.height));\n\n    return newSize;\n  });\n\n  useEffect(() => {\n    const newSize = ensureSizeInVisibleArea({ width: originalSize.width, height: originalSize.height });\n    if (newSize) setElementCurrentSize(newSize);\n  }, [originalSize]);\n\n  const adjustSizeWithinBounds = useLastCallback(() => {\n    if (!elementCurrentSize) return;\n    const newSize = ensureSizeInVisibleArea(elementCurrentSize);\n    if (newSize) setElementCurrentSize(newSize);\n  });\n\n  useEffect(() => {\n    adjustPositionWithinBounds();\n  }, [elementCurrentSize]);\n\n  useEffect(() => {\n    const handleResize = () => {\n      startWindowResizing();\n      adjustSizeWithinBounds();\n      adjustPositionWithinBounds();\n      if (resizeTimeout) {\n        clearTimeout(resizeTimeout);\n        resizeTimeout = undefined;\n      }\n      resizeTimeout = window.setTimeout(() => {\n        resizeTimeout = undefined;\n        stopWindowResizing();\n      }, 250);\n    };\n\n    window.addEventListener('resize', handleResize);\n\n    return () => {\n      clearTimeout(resizeTimeout);\n      resizeTimeout = undefined;\n      window.removeEventListener('resize', handleResize);\n    };\n  }, [adjustPositionWithinBounds]);\n\n  const handleDrag = useLastCallback((event: MouseEvent | TouchEvent) => {\n    if (!isDragging || !element) return;\n    const { pageX, pageY } = ('touches' in event) ? event.touches[0] : event;\n\n    const offsetX = pageX - dragStartPoint.x;\n    const offsetY = pageY - dragStartPoint.y;\n\n    const newX = elementPositionOnStartDrag.x + offsetX;\n    const newY = elementPositionOnStartDrag.y + offsetY;\n\n    if (elementCurrentSize) setElementCurrentPosition(ensurePositionInVisibleArea(newX, newY));\n  });\n\n  useEffect(() => {\n    let cleanup: NoneToVoidFunction | undefined;\n    if (dragHandleElement && isEnabled) {\n      cleanup = captureEvents(dragHandleElement, {\n        onCapture: handleStartDrag,\n        onDrag: handleDrag,\n        onRelease: handleRelease,\n        onClick: handleRelease,\n        onDoubleClick: handleRelease,\n      });\n    }\n    return cleanup;\n  }, [handleDrag, handleStartDrag, isEnabled, dragHandleElement]);\n\n  const cursorStyle = isDragging ? 'cursor: grabbing !important; ' : '';\n\n  if (!isInitiated || !elementCurrentSize || !elementCurrentPosition) {\n    return {\n      isDragging: false,\n      style: cursorStyle,\n    };\n  }\n\n  const style = buildStyle(\n    `left: ${elementCurrentPosition.x}px;`,\n    `top: ${elementCurrentPosition.y}px;`,\n    `width: ${elementCurrentSize.width}px;`,\n    `height: ${elementCurrentSize.height}px;`,\n    'position: fixed;',\n    (isDragging || isWindowsResizing) && 'transition: none !important;',\n    cursorStyle,\n  );\n\n  return {\n    position: elementCurrentPosition,\n    size: elementCurrentSize,\n    isDragging,\n    style,\n  };\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"kUZmBlnN\",\"window-state-button\":\"Rax9j_TK\",\"windowStateButton\":\"Rax9j_TK\",\"button\":\"SMRJmUuE\",\"avatars\":\"GP17QhNN\",\"state-icon\":\"sdbTXCxq\",\"stateIcon\":\"sdbTXCxq\",\"icon\":\"P0P4gW6a\",\"title\":\"TZFjRaG4\"};","import React, {\n  memo, useMemo,\n  useRef,\n} from '../../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../../global';\n\nimport type { ApiUser } from '../../../api/types';\nimport type { WebApp } from '../../../global/types';\n\nimport { selectTabState, selectUser } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { unique } from '../../../util/iteratees';\n\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport AvatarList from '../../common/AvatarList';\nimport Icon from '../../common/icons/Icon';\nimport Button from '../../ui/Button';\n\nimport styles from './MinimizedWebAppModal.module.scss';\n\ntype StateProps = {\n  activeTabBot?: ApiUser;\n  isMinimizedState?: boolean;\n  openedWebApps?: Record<string, WebApp>;\n};\n\nconst MinimizedWebAppModal = ({\n  activeTabBot, isMinimizedState, openedWebApps,\n}: StateProps) => {\n  const {\n    changeWebAppModalState,\n    closeWebAppModal,\n  } = getActions();\n\n  const oldLang = useOldLang();\n  const lang = useLang();\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n\n  const openedWebAppsValues = useMemo(() => {\n    return openedWebApps && Object.values(openedWebApps);\n  }, [openedWebApps]);\n\n  const openedTabsCount = openedWebAppsValues?.length;\n\n  const peers = useMemo(() => {\n    if (!openedTabsCount) return [];\n\n    const global = getGlobal();\n    const activeTabBotId = activeTabBot?.id;\n    const openedApps = unique([activeTabBotId, ...openedWebAppsValues.map((app) => app.botId)]);\n    const bots = openedApps.map((id) => id && selectUser(global, id)).filter(Boolean).slice(0, 3);\n    return bots;\n  }, [openedTabsCount, activeTabBot, openedWebAppsValues]);\n\n  const handleCloseClick = useLastCallback(() => {\n    closeWebAppModal();\n  });\n\n  const handleExpandClick = useLastCallback(() => {\n    changeWebAppModalState();\n  });\n\n  if (!isMinimizedState) return undefined;\n\n  function renderTitle() {\n    const activeTabName = activeTabBot?.firstName;\n    const title = openedTabsCount && activeTabName && openedTabsCount > 1\n      ? `${lang('MiniAppsMoreTabs',\n        {\n          botName: activeTabName,\n          count: openedTabsCount - 1,\n        })}`\n      : activeTabName;\n\n    return (\n      <div className={styles.title}>\n        {title}\n      </div>\n    );\n  }\n\n  return (\n    <div\n      ref={ref}\n      className={buildClassName(\n        styles.root,\n      )}\n    >\n      <Button\n        className={styles.button}\n        round\n        color=\"translucent\"\n        size=\"tiny\"\n        ariaLabel={oldLang('Close')}\n        onClick={handleCloseClick}\n      >\n        <Icon className={styles.icon} name=\"close\" />\n      </Button>\n      <AvatarList className={styles.avatars} size=\"mini\" peers={peers} />\n      {renderTitle()}\n      <Button\n        className={buildClassName(\n          styles.windowStateButton,\n          'no-drag',\n        )}\n        round\n        color=\"translucent\"\n        size=\"tiny\"\n        onClick={handleExpandClick}\n      >\n        <Icon className={styles.stateIcon} name=\"expand-modal\" />\n      </Button>\n    </div>\n  );\n};\n\nexport default memo(withGlobal(\n  (global): StateProps => {\n    const tabState = selectTabState(global);\n    const webApps = tabState.webApps;\n\n    const { botId } = webApps?.activeWebApp || {};\n    const { modalState, openedWebApps } = webApps || {};\n    const isMinimizedState = modalState === 'minimized';\n    const activeTabBot = botId ? selectUser(global, botId) : undefined;\n\n    return {\n      activeTabBot,\n      isMinimizedState,\n      openedWebApps,\n    };\n  },\n)(MinimizedWebAppModal));\n","import { useCallback, useEffect, useRef } from '../../../../lib/teact/teact';\nimport { getActions } from '../../../../global';\n\nimport type { WebApp } from '../../../../global/types';\nimport type { WebAppInboundEvent, WebAppOutboundEvent } from '../../../../types/webapp';\n\nimport { extractCurrentThemeParams } from '../../../../util/themeStyle';\n\nimport useLastCallback from '../../../../hooks/useLastCallback';\nimport useWindowSize from '../../../../hooks/window/useWindowSize';\n\nconst SCROLLBAR_STYLE = `* {\n  scrollbar-width: thin;\n  scrollbar-color: %SCROLLBAR_COLOR% transparent;\n}\n\n*::-webkit-scrollbar {\n  width: 6px;\n  height: 6px;\n  background-color: transparent;\n}\n\n*::-webkit-scrollbar-thumb {\n  border-radius: 6px;\n  background-color: %SCROLLBAR_COLOR%;\n}\n\n*::-webkit-scrollbar-corner {\n  background-color: transparent;\n}`;\n\nconst RELOAD_TIMEOUT = 500;\n\nconst useWebAppFrame = (\n  ref: React.RefObject<HTMLIFrameElement>,\n  isOpen: boolean,\n  isSimpleView: boolean,\n  onEvent: (event: WebAppInboundEvent) => void,\n  webApp?: WebApp,\n  onLoad?: () => void,\n) => {\n  const {\n    showNotification,\n    setWebAppPaymentSlug,\n    openInvoice,\n    closeWebApp,\n  } = getActions();\n\n  const isReloadSupported = useRef<boolean>(false);\n  const reloadTimeout = useRef<ReturnType<typeof setTimeout>>();\n  const ignoreEventsRef = useRef<boolean>(false);\n  const lastFrameSizeRef = useRef<{ width: number; height: number; isResizing?: boolean }>();\n  const windowSize = useWindowSize();\n\n  useEffect(() => {\n    if (!ref.current || !isOpen) return undefined;\n\n    const handleLoad = () => {\n      onLoad?.();\n    };\n\n    const frame = ref.current;\n    frame.addEventListener('load', handleLoad);\n    return () => {\n      frame.removeEventListener('load', handleLoad);\n    };\n  }, [onLoad, ref, isOpen]);\n\n  const sendEvent = useCallback((event: WebAppOutboundEvent) => {\n    if (!ref.current?.contentWindow) return;\n    ref.current.contentWindow.postMessage(JSON.stringify(event), '*');\n  }, [ref]);\n\n  const forceReloadFrame = useLastCallback((url: string) => {\n    if (!ref.current) return;\n    const frame = ref.current;\n    frame.src = 'about:blank';\n    frame.addEventListener('load', () => {\n      frame.src = url;\n    }, { once: true });\n  });\n\n  const reloadFrame = useCallback((url: string) => {\n    if (isReloadSupported.current) {\n      sendEvent({\n        eventType: 'reload_iframe',\n      });\n      reloadTimeout.current = setTimeout(() => {\n        forceReloadFrame(url);\n      }, RELOAD_TIMEOUT);\n      return;\n    }\n\n    forceReloadFrame(url);\n  }, [sendEvent]);\n\n  const sendViewport = useCallback((isNonStable?: boolean) => {\n    if (!ref.current) {\n      return;\n    }\n    const { width, height } = ref.current.getBoundingClientRect();\n    sendEvent({\n      eventType: 'viewport_changed',\n      eventData: {\n        width,\n        height,\n        is_expanded: true,\n        is_state_stable: !isNonStable,\n      },\n    });\n  }, [sendEvent, ref]);\n\n  const sendTheme = useCallback(() => {\n    sendEvent({\n      eventType: 'theme_changed',\n      eventData: {\n        theme_params: extractCurrentThemeParams(),\n      },\n    });\n  }, [sendEvent]);\n\n  const sendCustomStyle = useCallback((style: string) => {\n    sendEvent({\n      eventType: 'set_custom_style',\n      eventData: style,\n    });\n  }, [sendEvent]);\n\n  const handleMessage = useCallback((event: MessageEvent<string>) => {\n    if (ignoreEventsRef.current) {\n      return;\n    }\n    const contentWindow = ref.current?.contentWindow;\n    const sourceWindow = event.source as Window;\n\n    if (contentWindow !== sourceWindow) {\n      return;\n    }\n\n    try {\n      const data = JSON.parse(event.data) as WebAppInboundEvent;\n      const { eventType, eventData } = data;\n      // Handle some app requests here to simplify hook usage\n      if (eventType === 'web_app_ready') {\n        onLoad?.();\n      }\n\n      if (eventType === 'web_app_close') {\n        if (webApp) closeWebApp({ webApp, skipClosingConfirmation: true });\n      }\n\n      if (eventType === 'web_app_request_viewport') {\n        sendViewport(windowSize.isResizing);\n      }\n\n      if (eventType === 'web_app_request_theme') {\n        sendTheme();\n      }\n\n      if (eventType === 'iframe_ready') {\n        const scrollbarColor = getComputedStyle(document.body).getPropertyValue('--color-scrollbar');\n        sendCustomStyle(SCROLLBAR_STYLE.replace(/%SCROLLBAR_COLOR%/g, scrollbarColor));\n        isReloadSupported.current = Boolean(eventData.reload_supported);\n      }\n\n      if (eventType === 'iframe_will_reload') {\n        clearTimeout(reloadTimeout.current);\n      }\n\n      if (eventType === 'web_app_data_send') {\n        if (!isSimpleView) return; // Allowed only in simple view\n        ignoreEventsRef.current = true;\n      }\n\n      // Clipboard access temporarily disabled to address security concerns\n      if (eventType === 'web_app_read_text_from_clipboard') {\n        sendEvent({\n          eventType: 'clipboard_text_received',\n          eventData: {\n            req_id: eventData.req_id,\n            // eslint-disable-next-line no-null/no-null\n            data: null,\n          },\n        });\n\n        // showNotification({\n        //   message: 'Clipboard access is not supported in this client yet',\n        // });\n      }\n\n      if (eventType === 'web_app_open_scan_qr_popup') {\n        showNotification({\n          message: 'Scanning QR code is not supported in this client yet',\n        });\n      }\n\n      if (eventType === 'web_app_open_invoice') {\n        setWebAppPaymentSlug({\n          slug: eventData.slug,\n        });\n        openInvoice({\n          type: 'slug',\n          slug: eventData.slug,\n        });\n      }\n\n      if (eventType === 'web_app_open_link') {\n        const linkUrl = eventData.url;\n        window.open(linkUrl, '_blank', 'noreferrer');\n      }\n\n      if (eventType === 'web_app_biometry_get_info') {\n        sendEvent({\n          eventType: 'biometry_info_received',\n          eventData: {\n            available: false,\n          },\n        });\n      }\n\n      onEvent(data);\n    } catch (err) {\n      // Ignore other messages\n    }\n  }, [\n    isSimpleView, sendEvent, onEvent, sendCustomStyle, webApp,\n    sendTheme, sendViewport, onLoad, windowSize.isResizing, ref,\n  ]);\n\n  useEffect(() => {\n    const { width, height, isResizing } = windowSize;\n    if (lastFrameSizeRef.current && lastFrameSizeRef.current.width === width\n      && lastFrameSizeRef.current.height === height && !lastFrameSizeRef.current.isResizing) return;\n    lastFrameSizeRef.current = { width, height, isResizing };\n    sendViewport(isResizing);\n  }, [sendViewport, windowSize]);\n\n  useEffect(() => {\n    window.addEventListener('message', handleMessage);\n    return () => window.removeEventListener('message', handleMessage);\n  }, [handleMessage, ref]);\n\n  useEffect(() => {\n    if (isOpen && ref.current?.contentWindow) {\n      sendViewport();\n      ignoreEventsRef.current = false;\n    } else {\n      lastFrameSizeRef.current = undefined;\n    }\n  }, [isOpen, sendViewport, ref]);\n\n  return {\n    sendEvent, reloadFrame, sendViewport, sendTheme,\n  };\n};\n\nexport default useWebAppFrame;\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"LeeJZdwH\",\"multi-tab\":\"ESsGT5OD\",\"multiTab\":\"ESsGT5OD\",\"loading-spinner\":\"ix5_w9MK\",\"loadingSpinner\":\"ix5_w9MK\",\"hide\":\"Wrl63uWL\",\"frame\":\"OmY14FFl\",\"with-button\":\"liDRl1xT\",\"withButton\":\"liDRl1xT\",\"hidden\":\"vOFiAq3l\",\"main-button\":\"U_ggDKn1\",\"mainButton\":\"U_ggDKn1\",\"visible\":\"KwI4XdkC\",\"main-button-spinner\":\"oq6HKJur\",\"mainButtonSpinner\":\"oq6HKJur\",\"web-app-popup\":\"YEOURXza\",\"webAppPopup\":\"YEOURXza\",\"without-title\":\"gvljUzY9\",\"withoutTitle\":\"gvljUzY9\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect,\n  useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiAttachBot, ApiChat, ApiUser } from '../../../api/types';\nimport type { TabState, WebApp } from '../../../global/types';\nimport type { ThemeKey } from '../../../types';\nimport type { PopupOptions, WebAppInboundEvent, WebAppOutboundEvent } from '../../../types/webapp';\n\nimport { TME_LINK_PREFIX } from '../../../config';\nimport { convertToApiChatType } from '../../../global/helpers';\nimport { getWebAppKey } from '../../../global/helpers/bots';\nimport {\n  selectCurrentChat, selectTabState, selectTheme, selectUser,\n} from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport buildStyle from '../../../util/buildStyle';\nimport { extractCurrentThemeParams, validateHexColor } from '../../../util/themeStyle';\nimport { callApi } from '../../../api/gramjs';\nimport { REM } from '../../common/helpers/mediaDimensions';\nimport renderText from '../../common/helpers/renderText';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\nimport usePreviousDeprecated from '../../../hooks/usePreviousDeprecated';\nimport useSyncEffect from '../../../hooks/useSyncEffect';\nimport usePopupLimit from './hooks/usePopupLimit';\nimport useWebAppFrame from './hooks/useWebAppFrame';\n\nimport Button from '../../ui/Button';\nimport ConfirmDialog from '../../ui/ConfirmDialog';\nimport Modal from '../../ui/Modal';\nimport Spinner from '../../ui/Spinner';\n\nimport styles from './WebAppModalTabContent.module.scss';\n\ntype WebAppButton = {\n  isVisible: boolean;\n  isActive: boolean;\n  text: string;\n  color: string;\n  textColor: string;\n  isProgressVisible: boolean;\n};\n\nexport type OwnProps = {\n  modal?: TabState['webApps'];\n  webApp?: WebApp;\n  registerSendEventCallback: (callback: (event: WebAppOutboundEvent) => void) => void;\n  registerReloadFrameCallback: (callback: (url: string) => void) => void;\n  isDragging?: boolean;\n  frameSize?: { width: number; height: number };\n  isMultiTabSupported? : boolean;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  bot?: ApiUser;\n  attachBot?: ApiAttachBot;\n  theme?: ThemeKey;\n  isPaymentModalOpen?: boolean;\n  paymentStatus?: TabState['payment']['status'];\n  isMaximizedState: boolean;\n};\n\nconst NBSP = '\\u00A0';\n\nconst MAIN_BUTTON_ANIMATION_TIME = 250;\nconst ANIMATION_WAIT = 400;\nconst POPUP_SEQUENTIAL_LIMIT = 3;\nconst POPUP_RESET_DELAY = 2000; // 2s\nconst SANDBOX_ATTRIBUTES = [\n  'allow-scripts',\n  'allow-same-origin',\n  'allow-popups',\n  'allow-forms',\n  'allow-modals',\n  'allow-storage-access-by-user-activation',\n].join(' ');\n\nconst DEFAULT_BUTTON_TEXT: Record<string, string> = {\n  ok: 'OK',\n  cancel: 'Cancel',\n  close: 'Close',\n};\n\nconst WebAppModalTabContent: FC<OwnProps & StateProps> = ({\n  modal,\n  webApp,\n  bot,\n  theme,\n  isPaymentModalOpen,\n  paymentStatus,\n  registerSendEventCallback,\n  registerReloadFrameCallback,\n  isDragging,\n  isMaximizedState,\n  frameSize,\n  isMultiTabSupported,\n}) => {\n  const {\n    closeActiveWebApp,\n    sendWebViewData,\n    toggleAttachBot,\n    openTelegramLink,\n    setWebAppPaymentSlug,\n    switchBotInline,\n    sharePhoneWithBot,\n    updateWebApp,\n  } = getActions();\n  const [mainButton, setMainButton] = useState<WebAppButton | undefined>();\n\n  const [isLoaded, markLoaded, markUnloaded] = useFlag(false);\n\n  const [popupParameters, setPopupParameters] = useState<PopupOptions | undefined>();\n  const [isRequestingPhone, setIsRequestingPhone] = useState(false);\n  const [isRequestingWriteAccess, setIsRequestingWriteAccess] = useState(false);\n  const {\n    unlockPopupsAt, handlePopupOpened, handlePopupClosed,\n  } = usePopupLimit(POPUP_SEQUENTIAL_LIMIT, POPUP_RESET_DELAY);\n\n  const activeWebApp = modal?.activeWebApp;\n  const {\n    url, buttonText, headerColor, serverHeaderColorKey, serverHeaderColor,\n  } = webApp || {};\n  const isCloseModalOpen = Boolean(webApp?.isCloseModalOpen);\n  const isRemoveModalOpen = Boolean(webApp?.isRemoveModalOpen);\n\n  const webAppKey = webApp && getWebAppKey(webApp);\n  const activeWebAppKey = activeWebApp && getWebAppKey(activeWebApp);\n\n  const isActive = (activeWebApp && webApp) && activeWebAppKey === webAppKey;\n\n  const updateCurrentWebApp = useLastCallback((updatedPartialWebApp: Partial<WebApp>) => {\n    if (!webApp) return;\n    const updatedWebApp = {\n      ...webApp,\n      ...updatedPartialWebApp,\n    };\n    webApp = updatedWebApp;\n    updateWebApp({ webApp: updatedWebApp });\n  });\n\n  useEffect(() => {\n    const themeParams = extractCurrentThemeParams();\n    updateCurrentWebApp({ headerColor: themeParams.bg_color, backgroundColor: themeParams.bg_color });\n  }, []);\n\n  // eslint-disable-next-line no-null/no-null\n  const frameRef = useRef<HTMLIFrameElement>(null);\n\n  const lang = useOldLang();\n  const isOpen = modal?.isModalOpen || false;\n  const isSimple = Boolean(buttonText);\n\n  const {\n    reloadFrame, sendEvent, sendViewport, sendTheme,\n  } = useWebAppFrame(frameRef, isOpen, isSimple, handleEvent, webApp, markLoaded);\n\n  useEffect(() => {\n    if (isActive) registerSendEventCallback(sendEvent);\n  }, [sendEvent, registerSendEventCallback, isActive]);\n\n  useEffect(() => {\n    if (isActive) registerReloadFrameCallback(reloadFrame);\n  }, [reloadFrame, registerReloadFrameCallback, isActive]);\n\n  const shouldShowMainButton = mainButton?.isVisible && mainButton.text.trim().length > 0;\n\n  const handleHideCloseModal = useLastCallback(() => {\n    updateCurrentWebApp({ isCloseModalOpen: false });\n  });\n  const handleConfirmCloseModal = useLastCallback(() => {\n    updateCurrentWebApp({ shouldConfirmClosing: false, isCloseModalOpen: false });\n    setTimeout(() => {\n      closeActiveWebApp();\n    }, ANIMATION_WAIT);\n  });\n\n  const handleHideRemoveModal = useLastCallback(() => {\n    updateCurrentWebApp({ isRemoveModalOpen: false });\n  });\n\n  const handleMainButtonClick = useLastCallback(() => {\n    sendEvent({\n      eventType: 'main_button_pressed',\n    });\n  });\n\n  const handleAppPopupClose = useLastCallback((buttonId?: string) => {\n    setPopupParameters(undefined);\n    handlePopupClosed();\n    sendEvent({\n      eventType: 'popup_closed',\n      eventData: {\n        button_id: buttonId,\n      },\n    });\n  });\n\n  const handleAppPopupModalClose = useLastCallback(() => {\n    handleAppPopupClose();\n  });\n\n  const calculateHeaderColor = useLastCallback(\n    (serverColorKey? : 'bg_color' | 'secondary_bg_color', serverColor? : string) => {\n      if (serverColorKey) {\n        const themeParams = extractCurrentThemeParams();\n        const key = serverColorKey;\n        const newColor = themeParams[key];\n        const color = validateHexColor(newColor) ? newColor : headerColor;\n        updateCurrentWebApp({ headerColor: color, serverHeaderColorKey: key });\n      }\n\n      if (serverColor) {\n        const color = validateHexColor(serverColor) ? serverColor : headerColor;\n        updateCurrentWebApp({ headerColor: color, serverHeaderColor: serverColor });\n      }\n    },\n  );\n\n  const updateHeaderColor = useLastCallback(\n    () => {\n      calculateHeaderColor(serverHeaderColorKey, serverHeaderColor);\n    },\n  );\n\n  const sendThemeCallback = useLastCallback(() => {\n    sendTheme();\n    updateHeaderColor();\n  });\n\n  // Notify view that theme changed\n  useSyncEffect(() => {\n    setTimeout(() => {\n      sendThemeCallback();\n    }, ANIMATION_WAIT);\n  }, [theme]);\n\n  // Notify view that height changed\n  useSyncEffect(() => {\n    setTimeout(() => {\n      sendViewport();\n    }, ANIMATION_WAIT);\n  }, [mainButton?.isVisible, sendViewport]);\n\n  useSyncEffect(([prevIsPaymentModalOpen]) => {\n    if (isPaymentModalOpen === prevIsPaymentModalOpen) return;\n    if (webApp?.slug && !isPaymentModalOpen && paymentStatus) {\n      sendEvent({\n        eventType: 'invoice_closed',\n        eventData: {\n          slug: webApp.slug,\n          status: paymentStatus,\n        },\n      });\n      setWebAppPaymentSlug({\n        slug: undefined,\n      });\n    }\n  }, [isPaymentModalOpen, paymentStatus, sendEvent, webApp?.slug]);\n\n  const handleRemoveAttachBot = useLastCallback(() => {\n    toggleAttachBot({\n      botId: bot!.id,\n      isEnabled: false,\n    });\n    closeActiveWebApp();\n  });\n\n  const handleRejectPhone = useLastCallback(() => {\n    setIsRequestingPhone(false);\n    handlePopupClosed();\n    sendEvent({\n      eventType: 'phone_requested',\n      eventData: {\n        status: 'cancelled',\n      },\n    });\n  });\n\n  const handleAcceptPhone = useLastCallback(() => {\n    sharePhoneWithBot({ botId: bot!.id });\n    setIsRequestingPhone(false);\n    handlePopupClosed();\n    sendEvent({\n      eventType: 'phone_requested',\n      eventData: {\n        status: 'sent',\n      },\n    });\n  });\n\n  const handleRejectWriteAccess = useLastCallback(() => {\n    sendEvent({\n      eventType: 'write_access_requested',\n      eventData: {\n        status: 'cancelled',\n      },\n    });\n    setIsRequestingWriteAccess(false);\n    handlePopupClosed();\n  });\n\n  const handleAcceptWriteAccess = useLastCallback(async () => {\n    const result = await callApi('allowBotSendMessages', { bot: bot! });\n    if (!result) {\n      handleRejectWriteAccess();\n      return;\n    }\n\n    sendEvent({\n      eventType: 'write_access_requested',\n      eventData: {\n        status: 'allowed',\n      },\n    });\n    setIsRequestingWriteAccess(false);\n    handlePopupClosed();\n  });\n\n  async function handleRequestWriteAccess() {\n    const canWrite = await callApi('fetchBotCanSendMessage', {\n      bot: bot!,\n    });\n\n    if (canWrite) {\n      sendEvent({\n        eventType: 'write_access_requested',\n        eventData: {\n          status: 'allowed',\n        },\n      });\n    }\n\n    setIsRequestingWriteAccess(!canWrite);\n  }\n\n  async function handleInvokeCustomMethod(requestId: string, method: string, parameters: string) {\n    const result = await callApi('invokeWebViewCustomMethod', {\n      bot: bot!,\n      customMethod: method,\n      parameters,\n    });\n\n    sendEvent({\n      eventType: 'custom_method_invoked',\n      eventData: {\n        req_id: requestId,\n        ...result,\n      },\n    });\n  }\n\n  useEffect(() => {\n    if (!isOpen) {\n      setPopupParameters(undefined);\n      setIsRequestingPhone(false);\n      setIsRequestingWriteAccess(false);\n      setMainButton(undefined);\n      updateCurrentWebApp({\n        isSettingsButtonVisible: false,\n        shouldConfirmClosing: false,\n        isBackButtonVisible: false,\n        isCloseModalOpen: false,\n        isRemoveModalOpen: false,\n      });\n      markUnloaded();\n    }\n  }, [isOpen]);\n\n  function handleEvent(event: WebAppInboundEvent) {\n    const { eventType, eventData } = event;\n    if (eventType === 'web_app_open_tg_link' && !isPaymentModalOpen) {\n      const linkUrl = TME_LINK_PREFIX + eventData.path_full;\n      openTelegramLink({ url: linkUrl });\n      closeActiveWebApp();\n    }\n\n    if (eventType === 'web_app_setup_back_button') {\n      updateCurrentWebApp({ isBackButtonVisible: eventData.is_visible });\n    }\n\n    if (eventType === 'web_app_setup_settings_button') {\n      updateCurrentWebApp({ isSettingsButtonVisible: eventData.is_visible });\n    }\n\n    if (eventType === 'web_app_set_background_color') {\n      const themeParams = extractCurrentThemeParams();\n      const color = validateHexColor(eventData.color) ? eventData.color : themeParams.bg_color;\n      updateCurrentWebApp({ backgroundColor: color });\n    }\n\n    if (eventType === 'web_app_set_header_color') {\n      calculateHeaderColor(eventData.color_key, eventData.color);\n    }\n\n    if (eventType === 'web_app_data_send') {\n      closeActiveWebApp();\n      sendWebViewData({\n        bot: bot!,\n        buttonText: buttonText!,\n        data: eventData.data,\n      });\n    }\n\n    if (eventType === 'web_app_setup_main_button') {\n      const themeParams = extractCurrentThemeParams();\n      const color = validateHexColor(eventData.color) ? eventData.color : themeParams.button_color;\n      const textColor = validateHexColor(eventData.text_color) ? eventData.text_color : themeParams.text_color;\n      setMainButton({\n        isVisible: eventData.is_visible && Boolean(eventData.text?.trim().length),\n        isActive: eventData.is_active,\n        text: eventData.text || '',\n        color,\n        textColor,\n        isProgressVisible: eventData.is_progress_visible,\n      });\n    }\n\n    if (eventType === 'web_app_setup_closing_behavior') {\n      updateCurrentWebApp({ shouldConfirmClosing: true });\n    }\n\n    if (eventType === 'web_app_open_popup') {\n      if (popupParameters || !eventData.message.trim().length || !eventData.buttons?.length\n      || eventData.buttons.length > 3 || isRequestingPhone || isRequestingWriteAccess\n      || unlockPopupsAt > Date.now()) {\n        handleAppPopupClose(undefined);\n        return;\n      }\n\n      setPopupParameters(eventData);\n      handlePopupOpened();\n    }\n\n    if (eventType === 'web_app_switch_inline_query') {\n      const filter = eventData.chat_types?.map(convertToApiChatType).filter(Boolean);\n      const isSamePeer = !filter?.length;\n\n      switchBotInline({\n        botId: bot!.id,\n        query: eventData.query,\n        filter,\n        isSamePeer,\n      });\n\n      closeActiveWebApp();\n    }\n\n    if (eventType === 'web_app_request_phone') {\n      if (popupParameters || isRequestingWriteAccess || unlockPopupsAt > Date.now()) {\n        handleRejectPhone();\n        return;\n      }\n\n      setIsRequestingPhone(true);\n      handlePopupOpened();\n    }\n\n    if (eventType === 'web_app_request_write_access') {\n      if (popupParameters || isRequestingPhone || unlockPopupsAt > Date.now()) {\n        handleRejectWriteAccess();\n        return;\n      }\n\n      handleRequestWriteAccess();\n      handlePopupOpened();\n    }\n\n    if (eventType === 'web_app_invoke_custom_method') {\n      const { method, params, req_id: requestId } = eventData;\n      handleInvokeCustomMethod(requestId, method, JSON.stringify(params));\n    }\n  }\n\n  const prevMainButtonColor = usePreviousDeprecated(mainButton?.color, true);\n  const prevMainButtonTextColor = usePreviousDeprecated(mainButton?.textColor, true);\n  const prevMainButtonIsActive = usePreviousDeprecated(mainButton && Boolean(mainButton.isActive), true);\n  const prevMainButtonText = usePreviousDeprecated(mainButton?.text, true);\n\n  const mainButtonCurrentColor = mainButton?.color || prevMainButtonColor;\n  const mainButtonCurrentTextColor = mainButton?.textColor || prevMainButtonTextColor;\n  const mainButtonCurrentIsActive = mainButton?.isActive !== undefined ? mainButton.isActive : prevMainButtonIsActive;\n  const mainButtonCurrentText = mainButton?.text || prevMainButtonText;\n\n  const [shouldDecreaseWebFrameSize, setShouldDecreaseWebFrameSize] = useState(false);\n  const [shouldHideButton, setShouldHideButton] = useState(true);\n\n  const buttonChangeTimeout = useRef<ReturnType<typeof setTimeout>>();\n\n  useEffect(() => {\n    if (buttonChangeTimeout.current) clearTimeout(buttonChangeTimeout.current);\n    if (!shouldShowMainButton) {\n      setShouldDecreaseWebFrameSize(false);\n      buttonChangeTimeout.current = setTimeout(() => {\n        setShouldHideButton(true);\n      }, MAIN_BUTTON_ANIMATION_TIME);\n    } else {\n      setShouldHideButton(false);\n      buttonChangeTimeout.current = setTimeout(() => {\n        setShouldDecreaseWebFrameSize(true);\n      }, MAIN_BUTTON_ANIMATION_TIME);\n    }\n  }, [setShouldDecreaseWebFrameSize, shouldShowMainButton]);\n\n  const frameWidth = frameSize?.width || 0;\n  let frameHeight = frameSize?.height || 0;\n  if (shouldDecreaseWebFrameSize) { frameHeight -= 3.5 * REM; }\n  const frameStyle = buildStyle(\n    `left: ${0}px;`,\n    `top: ${0}px;`,\n    `width: ${frameWidth}px;`,\n    `height: ${frameHeight}px;`,\n    isDragging ? 'pointer-events: none;' : '',\n  );\n\n  return (\n    <div\n      className={buildClassName(\n        styles.root,\n        !isActive && styles.hidden,\n        isMultiTabSupported && styles.multiTab,\n      )}\n    >\n      {isMaximizedState && <Spinner className={buildClassName(styles.loadingSpinner, isLoaded && styles.hide)} />}\n      <iframe\n        className={buildClassName(\n          styles.frame,\n          shouldDecreaseWebFrameSize && styles.withButton,\n          !isLoaded && styles.hide,\n        )}\n        style={frameSize ? frameStyle : undefined}\n        src={url}\n        title={`${bot?.firstName} Web App`}\n        sandbox={SANDBOX_ATTRIBUTES}\n        allow=\"camera; microphone; geolocation;\"\n        allowFullScreen\n        ref={frameRef}\n      />\n      {isMaximizedState && (\n        <Button\n          className={buildClassName(\n            styles.mainButton,\n            shouldShowMainButton && styles.visible,\n            shouldHideButton && styles.hidden,\n          )}\n          style={`background-color: ${mainButtonCurrentColor}; color: ${mainButtonCurrentTextColor}`}\n          disabled={!mainButtonCurrentIsActive}\n          onClick={handleMainButtonClick}\n        >\n          {mainButtonCurrentText}\n          {mainButton?.isProgressVisible && <Spinner className={styles.mainButtonSpinner} color=\"white\" />}\n        </Button>\n      ) }\n      <ConfirmDialog\n        isOpen={isRequestingPhone}\n        onClose={handleRejectPhone}\n        title={lang('ShareYouPhoneNumberTitle')}\n        text={lang('AreYouSureShareMyContactInfoBot')}\n        confirmHandler={handleAcceptPhone}\n        confirmLabel={lang('ContactShare')}\n      />\n      <ConfirmDialog\n        isOpen={isRequestingWriteAccess}\n        onClose={handleRejectWriteAccess}\n        title={lang('lng_bot_allow_write_title')}\n        text={lang('lng_bot_allow_write')}\n        confirmHandler={handleAcceptWriteAccess}\n        confirmLabel={lang('lng_bot_allow_write_confirm')}\n      />\n      {popupParameters && (\n        <Modal\n          isOpen={Boolean(popupParameters)}\n          title={popupParameters.title || NBSP}\n          onClose={handleAppPopupModalClose}\n          hasCloseButton\n          className={\n            buildClassName(styles.webAppPopup, !popupParameters.title?.trim().length && styles.withoutTitle)\n          }\n        >\n          {popupParameters.message}\n          <div className=\"dialog-buttons mt-2\">\n            {popupParameters.buttons.map((button) => (\n              <Button\n                key={button.id || button.type}\n                className=\"confirm-dialog-button\"\n                color={button.type === 'destructive' ? 'danger' : 'primary'}\n                isText\n                size=\"smaller\"\n                // eslint-disable-next-line react/jsx-no-bind\n                onClick={() => handleAppPopupClose(button.id)}\n              >\n                {button.text || lang(DEFAULT_BUTTON_TEXT[button.type])}\n              </Button>\n            ))}\n          </div>\n        </Modal>\n      )}\n\n      <ConfirmDialog\n        isOpen={isCloseModalOpen}\n        onClose={handleHideCloseModal}\n        title={lang('lng_bot_close_warning_title')}\n        text={lang('lng_bot_close_warning')}\n        confirmHandler={handleConfirmCloseModal}\n        confirmIsDestructive\n        confirmLabel={lang('lng_bot_close_warning_sure')}\n      />\n      <ConfirmDialog\n        isOpen={isRemoveModalOpen}\n        onClose={handleHideRemoveModal}\n        title={lang('BotRemoveFromMenuTitle')}\n        textParts={renderText(lang('BotRemoveFromMenu', bot?.firstName), ['simple_markdown'])}\n        confirmHandler={handleRemoveAttachBot}\n        confirmIsDestructive\n      />\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { modal }): StateProps => {\n    const { botId: activeBotId } = modal?.activeWebApp || {};\n    const isMaximizedState = modal?.modalState === 'maximized';\n\n    const attachBot = activeBotId ? global.attachMenu.bots[activeBotId] : undefined;\n    const bot = activeBotId ? selectUser(global, activeBotId) : undefined;\n    const chat = selectCurrentChat(global);\n    const theme = selectTheme(global);\n    const { isPaymentModalOpen, status } = selectTabState(global).payment;\n    const { isStarPaymentModalOpen } = selectTabState(global);\n\n    return {\n      attachBot,\n      bot,\n      chat,\n      theme,\n      isPaymentModalOpen: isPaymentModalOpen || isStarPaymentModalOpen,\n      paymentStatus: status,\n      isMaximizedState,\n    };\n  },\n)(WebAppModalTabContent));\n","import { useRef, useState } from '../../../../lib/teact/teact';\n\nimport useLastCallback from '../../../../hooks/useLastCallback';\n\nexport default function usePopupLimit(sequentialLimit: number, resetAfter: number) {\n  const [unlockPopupsAt, setUnlockPopupsAt] = useState(0);\n  const sequentialCalls = useRef(0);\n  const lastClosedDate = useRef(0);\n\n  const handlePopupOpened = useLastCallback(() => {\n    const now = Date.now();\n\n    if (now - lastClosedDate.current > resetAfter) {\n      sequentialCalls.current = 0;\n    }\n\n    sequentialCalls.current += 1;\n\n    if (sequentialCalls.current >= sequentialLimit) {\n      setUnlockPopupsAt(now + resetAfter);\n    }\n  });\n\n  const handlePopupClosed = useLastCallback(() => {\n    if (unlockPopupsAt < Date.now()) { // Prevent confused user from extending lock time\n      lastClosedDate.current = Date.now();\n    }\n  });\n\n  return {\n    unlockPopupsAt,\n    handlePopupOpened,\n    handlePopupClosed,\n  };\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"XWfkIDLY\",\"multi-tab\":\"gBVR7Hec\",\"multiTab\":\"gBVR7Hec\",\"close-icon\":\"RuJ3d9N6\",\"closeIcon\":\"RuJ3d9N6\",\"minimized\":\"dJ1Ld_PX\",\"tabs\":\"X18WbDa5\",\"tab-button-wrapper\":\"oHX2d8Or\",\"tabButtonWrapper\":\"oHX2d8Or\",\"tab-button\":\"O4NxErFX\",\"tabButton\":\"O4NxErFX\",\"tab-right-mask\":\"dgdyQDsZ\",\"tabRightMask\":\"dgdyQDsZ\",\"tab-close-button\":\"xGefqS93\",\"tabCloseButton\":\"xGefqS93\",\"tab-button-curve-path\":\"bOuMHiVw\",\"tabButtonCurvePath\":\"bOuMHiVw\",\"tab-button-left-curve\":\"f7EicoVH\",\"tabButtonLeftCurve\":\"f7EicoVH\",\"tab-button-right-curve\":\"s6pBIYMI\",\"tabButtonRightCurve\":\"s6pBIYMI\",\"avatar-container\":\"z39ojrWc\",\"avatarContainer\":\"z39ojrWc\",\"web-app-tab-more-menu\":\"txS0KiU0\",\"webAppTabMoreMenu\":\"txS0KiU0\",\"more-button\":\"kKPD09tc\",\"moreButton\":\"kKPD09tc\",\"tab-more-button\":\"gkji2_RB\",\"tabMoreButton\":\"gkji2_RB\",\"window-state-button\":\"XpHR_yo0\",\"windowStateButton\":\"XpHR_yo0\",\"header-button\":\"GE5AkJOU\",\"headerButton\":\"GE5AkJOU\",\"tab-close-icon\":\"DoeOewUR\",\"tabCloseIcon\":\"DoeOewUR\",\"state-icon\":\"YRMGpqUS\",\"stateIcon\":\"YRMGpqUS\",\"icon\":\"b13oE9uA\",\"tab-avatar\":\"tI6TE6HP\",\"tabAvatar\":\"tI6TE6HP\",\"state-back\":\"IWA50OWU\",\"stateBack\":\"IWA50OWU\",\"loading-spinner\":\"ZvO65ZK4\",\"loadingSpinner\":\"ZvO65ZK4\",\"hide\":\"_90e04Jo\",\"frame\":\"zA1w1IOq\",\"with-button\":\"XsPaFD9G\",\"withButton\":\"XsPaFD9G\",\"main-button\":\"Os96PEjQ\",\"mainButton\":\"Os96PEjQ\",\"visible\":\"C8aMayAw\",\"hidden\":\"GllU9an9\",\"main-button-spinner\":\"nYSFrf_X\",\"mainButtonSpinner\":\"nYSFrf_X\",\"web-app-popup\":\"cTVKrIjM\",\"webAppPopup\":\"cTVKrIjM\",\"without-title\":\"d0DG1SkF\",\"withoutTitle\":\"d0DG1SkF\"};","import { type MouseEvent as ReactMouseEvent } from 'react';\nimport type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect,\n  useMemo, useRef,\n  useSignal, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../../global';\n\nimport type { ApiAttachBot, ApiChat, ApiUser } from '../../../api/types';\nimport type { TabState, WebApp } from '../../../global/types';\nimport type { ThemeKey } from '../../../types';\nimport type { WebAppOutboundEvent } from '../../../types/webapp';\n\nimport { getWebAppKey } from '../../../global/helpers/bots';\nimport {\n  selectCurrentChat, selectTabState, selectTheme, selectUser,\n} from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport buildStyle from '../../../util/buildStyle';\nimport { getColorLuma } from '../../../util/colors';\nimport { hexToRgb } from '../../../util/switchTheme';\n\nimport useInterval from '../../../hooks/schedulers/useInterval';\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useContextMenuHandlers from '../../../hooks/useContextMenuHandlers';\nimport useDraggable from '../../../hooks/useDraggable';\nimport useHorizontalScroll from '../../../hooks/useHorizontalScroll';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Avatar from '../../common/Avatar';\nimport Icon from '../../common/icons/Icon';\nimport Button from '../../ui/Button';\nimport DropdownMenu from '../../ui/DropdownMenu';\nimport Menu from '../../ui/Menu';\nimport MenuItem from '../../ui/MenuItem';\nimport Modal from '../../ui/Modal';\nimport MinimizedWebAppModal from './MinimizedWebAppModal';\nimport WebAppModalTabContent from './WebAppModalTabContent';\n\nimport styles from './WebAppModal.module.scss';\n\ntype WebAppModalTab = {\n  bot?: ApiUser;\n  webApp: WebApp;\n  isOpen: boolean;\n};\n\nexport type OwnProps = {\n  modal?: TabState['webApps'];\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  bot?: ApiUser;\n  attachBot?: ApiAttachBot;\n  theme?: ThemeKey;\n  isPaymentModalOpen?: boolean;\n  paymentStatus?: TabState['payment']['status'];\n};\n\nconst PROLONG_INTERVAL = 45000; // 45s\nconst LUMA_THRESHOLD = 128;\n\nconst WebAppModal: FC<OwnProps & StateProps> = ({\n  modal,\n  chat,\n  bot,\n  attachBot,\n  theme,\n}) => {\n  const {\n    closeActiveWebApp,\n    closeWebAppModal,\n    prolongWebView,\n    toggleAttachBot,\n    openChat,\n    changeWebAppModalState,\n    openWebAppTab,\n    updateWebApp,\n  } = getActions();\n\n  const maximizedStateSize = useMemo(() => {\n    return { width: 420, height: 730 };\n  }, []);\n  const minimizedStateSize = useMemo(() => {\n    return { width: 300, height: 40 };\n  }, []);\n  const [getFrameSize, setFrameSize] = useSignal(\n    { width: maximizedStateSize.width, height: maximizedStateSize.height - minimizedStateSize.height },\n  );\n\n  function getSize() {\n    return modal?.modalState === 'maximized' ? maximizedStateSize : minimizedStateSize;\n  }\n\n  const {\n    openedWebApps, activeWebApp, openedOrderedKeys, sessionKeys,\n  } = modal || {};\n  const {\n    isBackButtonVisible, headerColor, backgroundColor, isSettingsButtonVisible,\n  } = activeWebApp || {};\n\n  const tabs = useMemo(() => {\n    return openedOrderedKeys?.map((key) => {\n      const webApp = openedWebApps![key];\n      return {\n        bot: getGlobal().users.byId[webApp.botId],\n        webApp,\n        isOpen: Boolean(activeWebApp && (key === getWebAppKey(activeWebApp))),\n      };\n    });\n  }, [openedOrderedKeys, openedWebApps, activeWebApp]);\n\n  const { isMobile } = useAppLayout();\n  const isOpen = modal?.isModalOpen || false;\n  const isMaximizedState = modal?.modalState === 'maximized';\n\n  const supportMultiTabMode = !isMobile;\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const headerRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const menuRef = useRef<HTMLDivElement>(null);\n\n  const getTriggerElement = useLastCallback(() => ref.current!);\n\n  const getRootElement = useLastCallback(\n    () => ref.current!,\n  );\n\n  const getMenuElement = useLastCallback(\n    () => menuRef.current!,\n  );\n\n  const {\n    isContextMenuOpen,\n    contextMenuAnchor,\n    handleContextMenu,\n    handleContextMenuClose,\n    handleContextMenuHide,\n  } = useContextMenuHandlers(ref);\n\n  const [isDraggingEnabled, setIsDraggingEnabled] = useState(false);\n\n  const headerElement = headerRef.current;\n  const containerElement = ref.current;\n\n  useEffect(() => {\n    setIsDraggingEnabled(Boolean(supportMultiTabMode && headerElement && containerElement));\n  }, [supportMultiTabMode, headerElement, containerElement]);\n\n  const {\n    isDragging,\n    style: draggableStyle,\n    size,\n  } = useDraggable(ref, headerRef, isDraggingEnabled, getSize());\n\n  const currentSize = size || getSize();\n\n  const currentWidth = currentSize.width;\n  const currentHeight = currentSize.height;\n  useEffect(() => {\n    if (currentHeight === minimizedStateSize.height && currentWidth === minimizedStateSize.width) return;\n    if (isMaximizedState) {\n      const height = currentHeight - minimizedStateSize.height;\n      setFrameSize({ width: currentWidth, height });\n    }\n  }, [currentWidth, currentHeight, isMaximizedState, minimizedStateSize, setFrameSize]);\n\n  const lang = useOldLang();\n  const {\n    queryId,\n  } = activeWebApp || {};\n\n  const openTabsCount = openedWebApps ? Object.values(openedWebApps).length : 0;\n\n  useInterval(() => {\n    if (!openedWebApps) return;\n    Object.keys(openedWebApps).forEach((key) => {\n      const webApp = openedWebApps[key];\n      if (webApp.queryId) {\n        prolongWebView({\n          botId: webApp.botId,\n          queryId: webApp.queryId,\n          peerId: webApp.peerId || chat!.id,\n          replyInfo: webApp.replyInfo,\n        });\n      }\n    });\n  }, queryId ? PROLONG_INTERVAL : undefined, true);\n\n  // eslint-disable-next-line no-null/no-null\n  const sendEventCallback = useRef<((event: WebAppOutboundEvent) => void) | null>(null);\n  // eslint-disable-next-line no-null/no-null\n  const reloadFrameCallback = useRef<((url: string) => void) | null>(null);\n\n  const registerSendEventCallback = useLastCallback((callback: (event: WebAppOutboundEvent) => void) => {\n    sendEventCallback.current = callback;\n  });\n\n  const sendEvent = useLastCallback((event: WebAppOutboundEvent) => {\n    if (sendEventCallback.current) {\n      sendEventCallback.current(event);\n    }\n  });\n\n  const registerReloadFrameCallback = useLastCallback((callback: (url: string) => void) => {\n    reloadFrameCallback.current = callback;\n  });\n\n  const reloadFrame = useLastCallback((url: string) => {\n    if (reloadFrameCallback.current) {\n      reloadFrameCallback.current(url);\n    }\n  });\n\n  const handleSettingsButtonClick = useLastCallback(() => {\n    sendEvent({\n      eventType: 'settings_button_pressed',\n    });\n  });\n\n  const handleRefreshClick = useLastCallback(() => {\n    reloadFrame(activeWebApp!.url);\n  });\n\n  const handleModalClose = useLastCallback(() => {\n    closeWebAppModal();\n  });\n\n  const handleTabClose = useLastCallback(() => {\n    if (openTabsCount > 1) {\n      closeActiveWebApp();\n    } else {\n      closeWebAppModal();\n    }\n  });\n\n  const handleToggleClick = useLastCallback(() => {\n    if (attachBot) {\n      updateWebApp({\n        webApp: {\n          ...activeWebApp!,\n          isRemoveModalOpen: true,\n        },\n      });\n      return;\n    }\n\n    toggleAttachBot({\n      botId: bot!.id,\n      isEnabled: true,\n    });\n  });\n\n  const handleBackClick = useLastCallback(() => {\n    if (isBackButtonVisible) {\n      sendEvent({\n        eventType: 'back_button_pressed',\n      });\n    } else {\n      handleModalClose();\n    }\n  });\n\n  const handleCollapseClick = useLastCallback(() => {\n    changeWebAppModalState();\n  });\n\n  const handleTabClick = useLastCallback((tab: WebAppModalTab) => {\n    openWebAppTab({ webApp: tab.webApp });\n  });\n\n  const openBotChat = useLastCallback(() => {\n    openChat({\n      id: bot!.id,\n    });\n  });\n\n  const MoreMenuButton:\n  FC<{ onTrigger: (e: ReactMouseEvent<HTMLButtonElement, MouseEvent>) => void; isOpen?: boolean }> = useMemo(() => {\n    return ({ onTrigger, isOpen: isMenuOpen }) => (\n      <Button\n        className={\n          buildClassName(\n            supportMultiTabMode ? styles.tabMoreButton : styles.moreButton,\n            isMenuOpen && 'active',\n          )\n        }\n        round\n        ripple={!isMobile}\n        size={supportMultiTabMode ? 'tiny' : 'smaller'}\n        color=\"translucent\"\n        onClick={onTrigger}\n        ariaLabel=\"More actions\"\n      >\n        <Icon name=\"more\" />\n      </Button>\n    );\n  }, [isMobile, supportMultiTabMode]);\n\n  function renderMenuItems() {\n    return (\n      <>\n        {chat && bot && chat.id !== bot.id && (\n          <MenuItem icon=\"bots\" onClick={openBotChat}>{lang('BotWebViewOpenBot')}</MenuItem>\n        )}\n        <MenuItem icon=\"reload\" onClick={handleRefreshClick}>{lang('WebApp.ReloadPage')}</MenuItem>\n        {isSettingsButtonVisible && (\n          <MenuItem icon=\"settings\" onClick={handleSettingsButtonClick}>\n            {lang('Settings')}\n          </MenuItem>\n        )}\n        {bot?.isAttachBot && (\n          <MenuItem\n            icon={attachBot ? 'stop' : 'install'}\n            onClick={handleToggleClick}\n            destructive={Boolean(attachBot)}\n          >\n            {lang(attachBot ? 'WebApp.RemoveBot' : 'WebApp.AddToAttachmentAdd')}\n          </MenuItem>\n        )}\n      </>\n    );\n  }\n\n  function renderMoreMenu() {\n    return (\n      <Menu\n        isOpen={isContextMenuOpen}\n        anchor={contextMenuAnchor}\n        ref={menuRef}\n        className={buildClassName(\n          supportMultiTabMode ? styles.webAppTabMoreMenu : 'web-app-more-menu',\n          'with-menu-transitions',\n        )}\n        getTriggerElement={getTriggerElement}\n        getMenuElement={getMenuElement}\n        getRootElement={getRootElement}\n        autoClose\n        onClose={handleContextMenuClose}\n        onCloseAnimationEnd={handleContextMenuHide}\n      >\n        {renderMenuItems()}\n      </Menu>\n    );\n  }\n\n  function renderDropdownMoreMenu() {\n    return (\n      <DropdownMenu\n        className={buildClassName(\n          supportMultiTabMode ? styles.webAppTabMoreMenu : 'web-app-more-menu',\n          'with-menu-transitions',\n        )}\n        trigger={MoreMenuButton}\n        positionX={supportMultiTabMode ? 'left' : 'right'}\n      >\n        {renderMenuItems()}\n      </DropdownMenu>\n    );\n  }\n\n  const backButtonClassName = buildClassName(\n    styles.closeIcon,\n    isBackButtonVisible && styles.stateBack,\n  );\n\n  const headerTextVar = useMemo(() => {\n    if (!headerColor) return undefined;\n    const { r, g, b } = hexToRgb(headerColor);\n    const luma = getColorLuma([r, g, b]);\n    const adaptedLuma = theme === 'dark' ? 255 - luma : luma;\n    return adaptedLuma > LUMA_THRESHOLD ? 'color-text' : 'color-background';\n  }, [headerColor, theme]);\n\n  function renderTabCurveBorder(className: string) {\n    return (\n      <svg\n        className={className}\n        width=\"16\"\n        height=\"16\"\n        viewBox=\"0 0 16 16\"\n        fill=\"none\"\n      >\n        <path\n          className={styles.tabButtonCurvePath}\n          fill-rule=\"evenodd\"\n          clip-rule=\"evenodd\"\n          d=\"M16 16V0C16 12 12 16 0 16H16Z\"\n        />\n      </svg>\n    );\n  }\n\n  function renderActiveTab() {\n    const style = buildStyle(\n      headerTextVar && `--color-header-text: var(--${headerTextVar})`,\n      headerColor && `--active-tab-background: ${headerColor}`,\n    );\n    return (\n      <div\n        className={styles.tabButtonWrapper}\n        style={style}\n      >\n        {renderTabCurveBorder(styles.tabButtonLeftCurve)}\n        <div\n          className={styles.tabButton}\n        >\n          <div className={styles.avatarContainer}>\n            <Avatar\n              size=\"mini\"\n              peer={bot}\n            />\n            <MoreMenuButton onTrigger={handleContextMenu} isOpen={isContextMenuOpen} />\n          </div>\n          {attachBot?.shortName ?? bot?.firstName}\n          <div className={styles.tabRightMask} />\n          <Button\n            className={styles.tabCloseButton}\n            round\n            color=\"translucent\"\n            size=\"tiny\"\n            ariaLabel={lang('Close')}\n            onClick={handleTabClose}\n          >\n            <Icon className={styles.tabCloseIcon} name=\"close\" />\n          </Button>\n        </div>\n        {renderTabCurveBorder(styles.tabButtonRightCurve)}\n      </div>\n    );\n  }\n\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  useHorizontalScroll(containerRef, !isOpen || !isMaximizedState || !(containerRef.current));\n\n  function renderTabs() {\n    return (\n      <div\n        className={styles.tabs}\n        ref={containerRef}\n      >\n        {tabs?.map((tab) => (\n          tab.isOpen ? (\n            renderActiveTab()\n          ) : (\n            <Avatar\n              className={styles.tabAvatar}\n              size=\"mini\"\n              peer={tab.bot}\n              // eslint-disable-next-line react/jsx-no-bind\n              onClick={() => handleTabClick(tab)}\n            />\n          )\n        ))}\n      </div>\n    );\n  }\n\n  function renderHeader() {\n    return (\n      <div\n        ref={headerRef}\n      >\n        {!supportMultiTabMode\n          ? renderSinglePageModeHeader()\n          : (isMaximizedState ? renderMultiTabHeader() : <MinimizedWebAppModal />)}\n      </div>\n    );\n  }\n\n  function renderMultiTabHeader() {\n    return (\n      <div\n        className={buildClassName(\n          'modal-header',\n          'multiTab',\n        )}\n        style={buildStyle(\n          headerTextVar && `--color-header-text: var(--${headerTextVar})`,\n        )}\n      >\n        <Button\n          className={styles.headerButton}\n          round\n          color=\"translucent\"\n          size=\"tiny\"\n          ariaLabel={lang(isBackButtonVisible ? 'Back' : 'Close')}\n          onClick={handleBackClick}\n        >\n          <div className={backButtonClassName} />\n        </Button>\n        {renderTabs()}\n        {renderMoreMenu()}\n\n        {/* <Button\n          round\n          color=\"translucent\"\n          size=\"tiny\"\n        >\n          <Icon className={styles.icon} name=\"add\" />\n        </Button>\n        */}\n\n        <Button\n          className={buildClassName(\n            styles.windowStateButton,\n            'no-drag',\n          )}\n          round\n          color=\"translucent\"\n          size=\"tiny\"\n          onClick={handleCollapseClick}\n        >\n          <Icon className={styles.stateIcon} name=\"collapse-modal\" />\n        </Button>\n      </div>\n    );\n  }\n\n  function renderSinglePageModeHeader() {\n    return (\n      <div\n        className=\"modal-header\"\n        style={buildStyle(\n          headerColor && `background-color: ${headerColor}`,\n          headerTextVar && `--color-header-text: var(--${headerTextVar})`,\n        )}\n      >\n        <Button\n          round\n          color=\"translucent\"\n          size=\"smaller\"\n          ariaLabel={lang(isBackButtonVisible ? 'Back' : 'Close')}\n          onClick={handleBackClick}\n        >\n          <div className={backButtonClassName} />\n        </Button>\n        <div className=\"modal-title\">{attachBot?.shortName ?? bot?.firstName}</div>\n        {renderDropdownMoreMenu()}\n      </div>\n    );\n  }\n\n  return (\n    <Modal\n      dialogRef={ref}\n      className={buildClassName(\n        styles.root,\n        supportMultiTabMode && styles.multiTab,\n        !isMaximizedState && styles.minimized,\n      )}\n      dialogStyle={supportMultiTabMode ? draggableStyle : undefined}\n      isOpen={isOpen}\n      isLowStackPriority\n      onClose={handleModalClose}\n      header={renderHeader()}\n      style={`background-color: ${backgroundColor || 'var(--color-background)'}`}\n      noBackdrop\n      noBackdropClose\n    >\n      {openedWebApps && sessionKeys?.map((key) => (\n        <WebAppModalTabContent\n          key={key}\n          modal={modal}\n          registerSendEventCallback={registerSendEventCallback}\n          registerReloadFrameCallback={registerReloadFrameCallback}\n          webApp={openedWebApps[key]}\n          isDragging={isDragging}\n          frameSize={supportMultiTabMode ? getFrameSize() : undefined}\n          isMultiTabSupported={supportMultiTabMode}\n        />\n      ))}\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { modal }): StateProps => {\n    const { botId: activeBotId } = modal?.activeWebApp || {};\n\n    const attachBot = activeBotId ? global.attachMenu.bots[activeBotId] : undefined;\n    const bot = activeBotId ? selectUser(global, activeBotId) : undefined;\n    const chat = selectCurrentChat(global);\n    const theme = selectTheme(global);\n    const { isPaymentModalOpen, status } = selectTabState(global).payment;\n    const { isStarPaymentModalOpen } = selectTabState(global);\n\n    return {\n      attachBot,\n      bot,\n      chat,\n      theme,\n      isPaymentModalOpen: isPaymentModalOpen || isStarPaymentModalOpen,\n      paymentStatus: status,\n    };\n  },\n)(WebAppModal));\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useMemo, useState,\n} from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport type { ApiUser } from '../../api/types';\n\nimport { getUserFullName } from '../../global/helpers';\nimport renderText from '../common/helpers/renderText';\n\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Checkbox from '../ui/Checkbox';\nimport ConfirmDialog from '../ui/ConfirmDialog';\n\nexport type OwnProps = {\n  bot?: ApiUser;\n  type?: 'game' | 'webApp' | 'botApp';\n  shouldRequestWriteAccess?: boolean;\n};\n\nconst BotTrustModal: FC<OwnProps> = ({ bot, type, shouldRequestWriteAccess }) => {\n  const { cancelBotTrustRequest, markBotTrusted } = getActions();\n\n  const [isWriteAllowed, setIsWriteAllowed] = useState(shouldRequestWriteAccess || false);\n\n  const lang = useOldLang();\n\n  const handleBotTrustAccept = useCallback(() => {\n    markBotTrusted({ botId: bot!.id, isWriteAllowed });\n  }, [markBotTrusted, isWriteAllowed, bot]);\n\n  const handleBotTrustDecline = useCallback(() => {\n    cancelBotTrustRequest();\n  }, []);\n\n  const title = type === 'game' ? lang('AppName') : lang('BotOpenPageTitle');\n  const text = useMemo(() => {\n    switch (type) {\n      case 'game':\n        return lang('BotPermissionGameAlert', getUserFullName(bot));\n      case 'webApp':\n        return lang('BotOpenPageMessage', getUserFullName(bot));\n      case 'botApp':\n      default:\n        return lang('BotWebViewStartPermission');\n    }\n  }, [bot, type, lang]);\n\n  return (\n    <ConfirmDialog\n      isOpen={Boolean(bot)}\n      onClose={handleBotTrustDecline}\n      title={title}\n      confirmHandler={handleBotTrustAccept}\n    >\n      {renderText(text, ['simple_markdown'])}\n      {shouldRequestWriteAccess && (\n        <Checkbox\n          className=\"dialog-checkbox\"\n          checked={isWriteAllowed}\n          label={renderText(\n            lang('WebApp.AddToAttachmentAllowMessages', bot?.firstName),\n            ['simple_markdown'],\n          )}\n          onCheck={setIsWriteAllowed}\n        />\n      )}\n    </ConfirmDialog>\n  );\n};\n\nexport default memo(BotTrustModal);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useMemo, useState,\n} from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { TabState } from '../../../global/types';\n\nimport { MINI_APP_TOS_URL } from '../../../config';\nimport renderText from '../../common/helpers/renderText';\n\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Checkbox from '../../ui/Checkbox';\nimport ConfirmDialog from '../../ui/ConfirmDialog';\n\nexport type OwnProps = {\n  modal: TabState['requestedAttachBotInstall'];\n};\n\nconst AttachBotInstallModal: FC<OwnProps> = ({\n  modal,\n}) => {\n  const { confirmAttachBotInstall, cancelAttachBotInstall } = getActions();\n  const bot = modal?.bot;\n\n  const [isTosAccepted, setIsTosAccepted] = useState(false);\n\n  const lang = useOldLang();\n\n  const handleConfirm = useCallback(() => {\n    confirmAttachBotInstall({\n      isWriteAllowed: Boolean(bot?.shouldRequestWriteAccess),\n    });\n  }, [confirmAttachBotInstall, bot]);\n\n  // Reset on re-open\n  useEffect(() => {\n    if (bot) {\n      setIsTosAccepted(false);\n    }\n  }, [bot]);\n\n  const tosLabel = useMemo(() => {\n    const base = lang('lng_mini_apps_disclaimer_button');\n    const split = base.split('{link}');\n    const linkText = lang('lng_mini_apps_disclaimer_link');\n    return [\n      split[0],\n      <a href={MINI_APP_TOS_URL} target=\"_blank\" rel=\"noopener noreferrer\">{linkText}</a>,\n      split[1],\n    ];\n  }, [lang]);\n\n  return (\n    <ConfirmDialog\n      isOpen={Boolean(bot)}\n      onClose={cancelAttachBotInstall}\n      title={lang('lng_mini_apps_disclaimer_title')}\n      confirmHandler={handleConfirm}\n      isConfirmDisabled={!isTosAccepted}\n    >\n      {renderText(lang('lng_mini_apps_disclaimer_text', bot?.shortName), ['simple_markdown'])}\n      <Checkbox\n        className=\"dialog-checkbox\"\n        checked={isTosAccepted}\n        label={tosLabel}\n        onCheck={setIsTosAccepted}\n      />\n      {renderText(lang('WebBot.Account.Desclaimer.Desc', bot?.shortName), ['simple_markdown'])}\n    </ConfirmDialog>\n  );\n};\n\nexport default memo(AttachBotInstallModal);\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport type { ApiChatFolder } from '../../api/types';\n\nimport useOldLang from '../../hooks/useOldLang';\nimport usePreviousDeprecated from '../../hooks/usePreviousDeprecated';\n\nimport ConfirmDialog from '../ui/ConfirmDialog';\n\nexport type OwnProps = {\n  folder?: ApiChatFolder;\n};\n\nconst DeleteFolderDialog: FC<OwnProps> = ({\n  folder,\n}) => {\n  const { closeDeleteChatFolderModal, deleteChatFolder, openDeleteChatFolderModal } = getActions();\n  const lang = useOldLang();\n\n  const isOpen = Boolean(folder);\n\n  const renderingFolder = usePreviousDeprecated(folder) || folder;\n  const isMyChatlist = renderingFolder?.hasMyInvites;\n\n  const handleDeleteFolderMessage = useCallback(() => {\n    closeDeleteChatFolderModal();\n    if (isMyChatlist) {\n      openDeleteChatFolderModal({ folderId: renderingFolder!.id, isConfirmedForChatlist: true });\n    } else {\n      deleteChatFolder({ id: renderingFolder!.id });\n    }\n  }, [isMyChatlist, renderingFolder]);\n\n  return (\n    <ConfirmDialog\n      isOpen={isOpen}\n      onClose={closeDeleteChatFolderModal}\n      text={isMyChatlist ? lang('FilterDeleteAlertLinks') : lang('FilterDeleteAlert')}\n      confirmLabel={lang('Delete')}\n      confirmHandler={handleDeleteFolderMessage}\n      confirmIsDestructive\n    />\n  );\n};\n\nexport default memo(DeleteFolderDialog);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"Wn7D2H1e\",\"text\":\"IQ1U2TrZ\",\"header\":\"F6qqXRvD\",\"description\":\"ILLaH6qQ\",\"icon\":\"DzGwbpu5\",\"font-icon\":\"Pa9h5mh3\",\"fontIcon\":\"Pa9h5mh3\"};","import React, { memo } from '../../../lib/teact/teact';\n\nimport buildClassName from '../../../util/buildClassName';\nimport { hexToRgb, lerpRgb } from '../../../util/switchTheme';\nimport renderText from '../../common/helpers/renderText';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\n\nimport ListItem from '../../ui/ListItem';\n\nimport styles from './PremiumFeatureItem.module.scss';\n\ntype OwnProps<T> = {\n  icon: string;\n  isFontIcon?: boolean;\n  title: string;\n  text: string;\n  index: number;\n  count: number;\n  section: T;\n  onClick?: (section: T) => void;\n};\n\nconst COLORS = [\n  '#F2862D', '#EB7B4D', '#E46D72', '#DD6091', '#CC5FBA', '#B464E7',\n  '#9873FF', '#768DFF', '#55A5FC', '#52B0C9', '#4FBC93', '#4CC663',\n].map(hexToRgb);\n\n// eslint-disable-next-line @typescript-eslint/comma-dangle\nconst PremiumFeatureItem = <T,>({\n  icon,\n  isFontIcon,\n  title,\n  text,\n  index,\n  count,\n  section,\n  onClick,\n}: OwnProps<T>) => {\n  const newIndex = (index / count) * COLORS.length;\n  const colorA = COLORS[Math.floor(newIndex)];\n  const colorB = COLORS[Math.ceil(newIndex)] ?? colorA;\n  const { r, g, b } = lerpRgb(colorA, colorB, 0.5);\n\n  const handleClick = useLastCallback(() => {\n    onClick?.(section);\n  });\n\n  return (\n    <ListItem buttonClassName={styles.root} onClick={handleClick} inactive={!onClick}>\n      {isFontIcon ? (\n        <i\n          className={buildClassName(styles.fontIcon, `icon icon-${icon}`)}\n          aria-hidden\n          style={`--item-color: rgb(${r},${g},${b})`}\n        />\n      ) : (\n        <img src={icon} className={styles.icon} alt=\"\" style={`--item-color: rgb(${r},${g},${b})`} draggable={false} />\n      )}\n      <div className={styles.text}>\n        <div className={styles.title}>{renderText(title, ['br'])}</div>\n        <div className={styles.description}>{text}</div>\n      </div>\n    </ListItem>\n  );\n};\n\nexport default memo(PremiumFeatureItem);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"HmY1pYD9\",\"arrow\":\"cqNhvdib\",\"right\":\"hIgQCprt\",\"arrow-hidden\":\"wDzTWXzO\",\"arrowHidden\":\"wDzTWXzO\",\"dot\":\"Ac0pMX9w\",\"medium\":\"yDo_8Y7X\",\"small\":\"bhODNwmU\",\"invisible\":\"O9pyrgj0\",\"active\":\"NYDxCNdz\"};","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../lib/teact/teact';\n\nimport buildClassName from '../../util/buildClassName';\nimport { IS_TOUCH_ENV } from '../../util/windowEnvironment';\n\nimport Button from '../ui/Button';\n\nimport styles from './SliderDots.module.scss';\n\ntype OwnProps = {\n  length: number;\n  active: number;\n  onSelectSlide: (index: number) => void;\n};\n\nconst SliderDots: FC<OwnProps> = ({\n  length,\n  active,\n  onSelectSlide,\n}) => {\n  const startFrom = Math.max(0, Math.min(length - 8, active - 4));\n  const isPreLastBatch = startFrom === length - 8 - 1;\n  const isLastBatch = startFrom === length - 8;\n  const isFirstBatch = startFrom === 0;\n  const isPreFirstBatch = startFrom === 1;\n  const shownDotsCount = Math.min(length, 8);\n\n  const handleGoForward = useCallback(() => {\n    onSelectSlide(active + 1);\n  }, [active, onSelectSlide]);\n\n  const handleGoBack = useCallback(() => {\n    onSelectSlide(active - 1);\n  }, [active, onSelectSlide]);\n\n  const count = Math.min(8, length);\n\n  return (\n    <div>\n      {!IS_TOUCH_ENV && (\n        <Button\n          className={buildClassName(styles.arrow, active === 0 && styles.arrowHidden)}\n          color=\"translucent\"\n          disabled={active === 0}\n          round\n          onClick={handleGoBack}\n        >\n          <i className=\"icon icon-previous\" />\n        </Button>\n      )}\n      <div className={styles.root} style={`--start-from: ${startFrom}; --length: ${length}; --count: ${count};`}>\n        {Array(length).fill(undefined).map((_, i) => {\n          const index = i;\n          const isLast = (i === startFrom + shownDotsCount - 1 && !isLastBatch && !isPreLastBatch);\n          const isPreLast = (i === startFrom + shownDotsCount - 2 && !isPreLastBatch && !isLastBatch)\n            || (i === startFrom + shownDotsCount - 1 && isPreLastBatch);\n          const isFirst = (i === startFrom) && !isFirstBatch && !isPreFirstBatch;\n          const isPreFirst = ((i === startFrom + 1) && !isFirstBatch && !isPreFirstBatch)\n            || (i === startFrom && isPreFirstBatch);\n          const isInvisible = i < startFrom || i >= startFrom + shownDotsCount;\n          return (\n            <div\n              onClick={() => onSelectSlide(i)}\n              className={buildClassName(\n                styles.dot,\n                index === active && styles.active,\n                (isPreLast || isPreFirst) && styles.medium,\n                (isLast || isFirst || isInvisible) && styles.small,\n                isInvisible && styles.invisible,\n              )}\n            />\n          );\n        })}\n      </div>\n      {!IS_TOUCH_ENV && (\n        <Button\n          className={buildClassName(styles.arrow, active === length - 1 && styles.arrowHidden, styles.right)}\n          color=\"translucent\"\n          round\n          disabled={active === length - 1}\n          onClick={handleGoForward}\n        >\n          <i className=\"icon icon-next\" />\n        </Button>\n      )}\n    </div>\n  );\n};\n\nexport default memo(SliderDots);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"u84X0r2z\",\"floating-badge\":\"hPi4fICJ\",\"floatingBadge\":\"hPi4fICJ\",\"floating-badge-triangle\":\"jufjjcX9\",\"floatingBadgeTriangle\":\"jufjjcX9\",\"floating-badge-icon\":\"XkiOXdMP\",\"floatingBadgeIcon\":\"XkiOXdMP\",\"text\":\"YaiSoFKE\",\"floating-badge-value\":\"iC3LJrvy\",\"floatingBadgeValue\":\"iC3LJrvy\",\"left-text\":\"OejVAPj6 YaiSoFKE YaiSoFKE\",\"leftText\":\"OejVAPj6 YaiSoFKE YaiSoFKE\",\"right-text\":\"COQdFBQk YaiSoFKE YaiSoFKE\",\"rightText\":\"COQdFBQk YaiSoFKE YaiSoFKE\",\"right-value\":\"BEq3jFlz YaiSoFKE YaiSoFKE\",\"rightValue\":\"BEq3jFlz YaiSoFKE YaiSoFKE\",\"left-value\":\"RJosx238 YaiSoFKE\",\"leftValue\":\"RJosx238 YaiSoFKE\",\"line\":\"Hy5kWx0p\",\"left\":\"scGr4JS9\",\"right\":\"nPaUalQf\"};","import type { FC } from '../../../../lib/teact/teact';\nimport React, { memo } from '../../../../lib/teact/teact';\n\nimport type { IconName } from '../../../../types/icons';\n\nimport buildClassName from '../../../../util/buildClassName';\n\nimport useOldLang from '../../../../hooks/useOldLang';\n\nimport styles from './PremiumLimitsCompare.module.scss';\n\ntype OwnProps = {\n  floatingBadgeIcon?: IconName;\n  leftValue?: string;\n  rightValue?: string;\n  className?: string;\n  rightStyle?: string;\n};\n\nconst PremiumLimitsCompare: FC<OwnProps> = ({\n  leftValue,\n  rightValue,\n  className,\n  floatingBadgeIcon,\n  rightStyle,\n}) => {\n  const lang = useOldLang();\n\n  return (\n    <div className={buildClassName(styles.root, className)}>\n      {floatingBadgeIcon && (\n        <div className={styles.floatingBadge}>\n          <i className={buildClassName(styles.floatingBadgeIcon, `icon-${floatingBadgeIcon}`, 'icon')} />\n          <div className={styles.floatingBadgeValue} dir={lang.isRtl ? 'rtl' : undefined}>{leftValue}</div>\n          <div className={styles.floatingBadgeTriangle}>\n            <svg width=\"26\" height=\"9\" viewBox=\"0 0 26 9\" fill=\"none\">\n              <path d=\"M0 0H26H24.4853C22.894 0 21.3679 0.632141 20.2426 1.75736L14.4142 7.58579C13.6332 8.36684 12.3668 8.36683 11.5858 7.58579L5.75736 1.75736C4.63214 0.632139 3.10602 0 1.51472 0H0Z\" fill=\"#7E85FF\" />\n            </svg>\n          </div>\n        </div>\n      )}\n      <div className={buildClassName(styles.line, styles.left)}>\n        <div className={styles.leftText} dir={lang.isRtl ? 'rtl' : undefined}>{lang('LimitFree')}</div>\n        {!floatingBadgeIcon && <div className={styles.leftValue}>{leftValue}</div>}\n      </div>\n      <div className={buildClassName(styles.line, styles.right)} style={rightStyle}>\n        <div className={styles.rightText} dir={lang.isRtl ? 'rtl' : undefined}>{lang('LimitPremium')}</div>\n        <div className={styles.rightValue}>{rightValue}</div>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(PremiumLimitsCompare);\n","import type { FC } from '../../../../lib/teact/teact';\nimport React, { memo, useMemo } from '../../../../lib/teact/teact';\n\nimport { lerp } from '../../../../util/math';\n\nimport PremiumLimitsCompare from './PremiumLimitsCompare';\n\nimport styles from './PremiumLimitPreview.module.scss';\n\ntype OwnProps = {\n  title: string;\n  description: string;\n  leftValue?: string;\n  rightValue?: string;\n  colorStepProgress: number;\n};\n\nconst COLOR_START = [91, 160, 255];\nconst COLOR_END = [197, 100, 243];\n\nconst PremiumLimitPreview: FC<OwnProps> = ({\n  title,\n  description,\n  leftValue,\n  rightValue,\n  colorStepProgress,\n}) => {\n  const color = useMemo(() => {\n    return COLOR_START.map((start, i) => lerp(start, COLOR_END[i], colorStepProgress));\n  }, [colorStepProgress]);\n\n  return (\n    <div className={styles.root}>\n      <div className={styles.title}>{title}</div>\n      <div className={styles.description}>{description}</div>\n      <PremiumLimitsCompare\n        leftValue={leftValue}\n        rightValue={rightValue}\n        rightStyle={`background: rgb(${color.join(',')})`}\n      />\n    </div>\n  );\n};\n\nexport default memo(PremiumLimitPreview);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"ZXp65Wgy\",\"title\":\"W1xG3pjS\",\"description\":\"b_CBXIkT\"};","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"O1fqNCy0\",\"sticker\":\"ogaoEAcn\",\"effect-sticker\":\"Stdz4UIW ogaoEAcn\",\"effectSticker\":\"Stdz4UIW ogaoEAcn\"};","import type { FC } from '../../../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useRef, useState,\n} from '../../../../lib/teact/teact';\nimport { withGlobal } from '../../../../global';\n\nimport type { ApiSticker } from '../../../../api/types';\nimport type { GlobalState } from '../../../../global/types';\n\nimport cycleRestrict from '../../../../util/cycleRestrict';\n\nimport useFlag from '../../../../hooks/useFlag';\nimport useLastCallback from '../../../../hooks/useLastCallback';\nimport useMedia from '../../../../hooks/useMedia';\n\nimport AnimatedSticker from '../../../common/AnimatedSticker';\n\nimport styles from './PremiumFeaturePreviewStickers.module.scss';\n\ntype OwnProps = {\n  isActive: boolean;\n};\n\ntype StateProps = {\n  stickers: GlobalState['stickers']['premium']['stickers'];\n};\n\nconst EMOJI_SIZE_MULTIPLIER = 0.6;\nconst EFFECT_SIZE_MULTIPLIER = 0.8;\nconst MAX_EMOJIS = 15;\nconst ENDED_DELAY = 150;\n\nconst AnimatedCircleSticker: FC<{\n  size: number;\n  realIndex: number;\n  sticker: ApiSticker;\n  index: number;\n  maxLength: number;\n  onClick: (index: number) => void;\n  onEnded: (index: number) => void;\n  canPlay: boolean;\n}> = ({\n  size, realIndex, canPlay,\n  sticker, index, maxLength, onClick, onEnded,\n}) => {\n  const mediaData = useMedia(`sticker${sticker.id}`);\n  const mediaDataAround = useMedia(`sticker${sticker.id}?size=f`);\n\n  const isActivated = index === 0;\n  const [isAnimated, animate, inanimate] = useFlag(isActivated);\n\n  const circleSize = size - size * EMOJI_SIZE_MULTIPLIER;\n  const width = circleSize * 3;\n  const height = circleSize * 3.2;\n\n  const a = index / maxLength;\n\n  const angle = a * (Math.PI * 2);\n  const scale = isActivated ? 1 : 0.66;\n\n  const x = Math.cos(angle) * width - circleSize * 2.8;\n  const y = Math.sin(angle) * height;\n\n  const handleClick = useLastCallback(() => {\n    onClick(realIndex);\n  });\n\n  const handleEnded = useLastCallback(() => {\n    inanimate();\n    onEnded(realIndex);\n  });\n\n  useEffect(() => {\n    if (isActivated) {\n      animate();\n    }\n  }, [isActivated, animate]);\n\n  return (\n    <>\n      {isActivated && (\n        <AnimatedSticker\n          className={styles.effectSticker}\n          tgsUrl={mediaDataAround}\n          play={canPlay}\n          isLowPriority\n          noLoop\n          size={EFFECT_SIZE_MULTIPLIER * size}\n          style={`--x: calc(${x}px - 10%); --y: ${y}px;`}\n        />\n      )}\n      <AnimatedSticker\n        className={styles.sticker}\n        tgsUrl={mediaData}\n        play={canPlay && isAnimated}\n        noLoop\n        size={EMOJI_SIZE_MULTIPLIER * size}\n        style={`--x: ${x}px; --y: ${y}px; --opacity: ${scale}`}\n        onClick={handleClick}\n        onEnded={handleEnded}\n      />\n    </>\n  );\n};\n\nconst PremiumFeaturePreviewStickers: FC<OwnProps & StateProps> = ({\n  stickers, isActive,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  const [offset, setOffset] = useState(0);\n  const [size, setSize] = useState(0);\n\n  const renderedStickers = stickers?.slice(0, MAX_EMOJIS);\n\n  const handleClick = useLastCallback((i: number) => {\n    setOffset(-i);\n  });\n\n  const handleEnded = useLastCallback((i: number) => {\n    const displayIndex = cycleRestrict(renderedStickers.length, i + offset);\n    if (displayIndex !== 0) return;\n\n    setTimeout(() => {\n      setOffset((current) => {\n        return cycleRestrict(renderedStickers.length, current + 1);\n      });\n    }, ENDED_DELAY);\n  });\n\n  useEffect(() => {\n    const container = containerRef.current;\n    if (!container) return;\n\n    setSize(container.closest('.modal-dialog')!.clientWidth);\n  }, []);\n\n  return (\n    <div\n      className={styles.root}\n      ref={containerRef}\n    >\n      {Boolean(size) && renderedStickers?.map((sticker, i) => {\n        return (\n          <AnimatedCircleSticker\n            size={size}\n            sticker={sticker}\n            realIndex={i}\n            index={(i + offset + renderedStickers.length) % renderedStickers.length}\n            maxLength={renderedStickers.length}\n            onClick={handleClick}\n            onEnded={handleEnded}\n            canPlay={isActive}\n          />\n        );\n      })}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    return {\n      stickers: global.stickers.premium.stickers,\n    };\n  },\n)(PremiumFeaturePreviewStickers));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"mFElmm7a\",\"header\":\"Jjbochk6\",\"circle\":\"ChteQ9C3\",\"title\":\"d2ayix6L\",\"features\":\"ensyCeMe\",\"mobile\":\"DFbZJafh\",\"scrolled\":\"iN1T0a2Y\"};","import React, { memo, useLayoutEffect, useRef } from '../../../../lib/teact/teact';\nimport { withGlobal } from '../../../../global';\n\nimport type { ApiUser } from '../../../../api/types';\n\nimport { selectUser } from '../../../../global/selectors';\nimport buildClassName from '../../../../util/buildClassName';\nimport { REM } from '../../../common/helpers/mediaDimensions';\n\nimport useOldLang from '../../../../hooks/useOldLang';\nimport useScrolledState from '../../../../hooks/useScrolledState';\nimport useDevicePixelRatio from '../../../../hooks/window/useDevicePixelRatio';\n\nimport Avatar from '../../../common/Avatar';\nimport { drawGradientCircle } from '../../../common/AvatarStoryCircle';\nimport PremiumFeatureItem from '../PremiumFeatureItem';\n\nimport styles from './PremiumFeaturePreviewStories.module.scss';\n\ntype StateProps = {\n  currentUser: ApiUser;\n};\n\nconst STORY_FEATURE_TITLES = {\n  stories_order: 'PremiumStoriesPriority',\n  stories_stealth: 'PremiumStoriesStealth',\n  stories_views: 'PremiumStoriesViews',\n  stories_timer: 'lng_premium_stories_subtitle_expiration',\n  stories_save: 'PremiumStoriesSaveToGallery',\n  stories_caption: 'lng_premium_stories_subtitle_caption',\n  stories_link: 'lng_premium_stories_subtitle_links',\n};\n\nconst STORY_FEATURE_DESCRIPTIONS = {\n  stories_order: 'PremiumStoriesPriorityDescription',\n  stories_stealth: 'PremiumStoriesStealthDescription',\n  stories_views: 'PremiumStoriesViewsDescription',\n  stories_timer: 'PremiumStoriesExpirationDescription',\n  stories_save: 'PremiumStoriesSaveToGalleryDescription',\n  stories_caption: 'PremiumStoriesCaptionDescription',\n  stories_link: 'PremiumStoriesFormattingDescription',\n};\n\nconst STORY_FEATURE_ICONS = {\n  stories_order: 'story-priority',\n  stories_stealth: 'eye-closed-outline',\n  stories_views: 'eye-outline',\n  stories_timer: 'timer',\n  stories_save: 'arrow-down-circle',\n  stories_caption: 'story-caption',\n  stories_link: 'link-badge',\n};\n\nconst STORY_FEATURE_ORDER = Object.keys(STORY_FEATURE_TITLES) as (keyof typeof STORY_FEATURE_TITLES)[];\n\nconst CIRCLE_SIZE = 5.25 * REM;\nconst CIRCLE_SEGMENTS = 8;\nconst CIRCLE_READ_SEGMENTS = 0;\n\nconst PremiumFeaturePreviewVideo = ({\n  currentUser,\n}: StateProps) => {\n  // eslint-disable-next-line no-null/no-null\n  const circleRef = useRef<HTMLCanvasElement>(null);\n\n  const lang = useOldLang();\n\n  const dpr = useDevicePixelRatio();\n\n  useLayoutEffect(() => {\n    if (!circleRef.current) {\n      return;\n    }\n\n    drawGradientCircle({\n      canvas: circleRef.current,\n      size: CIRCLE_SIZE * dpr,\n      segmentsCount: CIRCLE_SEGMENTS,\n      color: 'purple',\n      readSegmentsCount: CIRCLE_READ_SEGMENTS,\n      readSegmentColor: 'transparent',\n      dpr,\n    });\n  }, [dpr]);\n\n  const { handleScroll, isAtBeginning } = useScrolledState();\n\n  const maxSize = CIRCLE_SIZE;\n\n  return (\n    <div className={styles.root}>\n      <div className={styles.header}>\n        <Avatar forPremiumPromo peer={currentUser} size=\"giant\" />\n        <canvas className={styles.circle} ref={circleRef} style={`max-width: ${maxSize}px; max-height: ${maxSize}px`} />\n      </div>\n      <div className={styles.title}>{lang('UpgradedStories')}</div>\n      <div\n        className={buildClassName(styles.features, !isAtBeginning && styles.scrolled, 'custom-scroll')}\n        onScroll={handleScroll}\n      >\n        {STORY_FEATURE_ORDER.map((section, index) => {\n          return (\n            <PremiumFeatureItem\n              key={section}\n              title={lang(STORY_FEATURE_TITLES[section])}\n              text={lang(STORY_FEATURE_DESCRIPTIONS[section])}\n              icon={STORY_FEATURE_ICONS[section]}\n              isFontIcon\n              index={index}\n              count={STORY_FEATURE_ORDER.length}\n              section={section}\n            />\n          );\n        })}\n        <div className={styles.mobile}>{lang('lng_premium_stories_about_mobile')}</div>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal(\n  (global): StateProps => {\n    return {\n      currentUser: selectUser(global, global.currentUserId!)!,\n    };\n  },\n)(PremiumFeaturePreviewVideo));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"Ot0dA1yZ\",\"wrapper\":\"yxSAGAc1\",\"down\":\"Jcy6cDoc\",\"frame\":\"Vn81yTTJ\",\"video\":\"rrVJClLL\"};","import type { FC } from '../../../../lib/teact/teact';\nimport React, { memo } from '../../../../lib/teact/teact';\n\nimport type { ApiThumbnail } from '../../../../api/types';\n\nimport buildClassName from '../../../../util/buildClassName';\n\nimport useCanvasBlur from '../../../../hooks/useCanvasBlur';\nimport useMedia from '../../../../hooks/useMedia';\nimport useMediaTransitionDeprecated from '../../../../hooks/useMediaTransitionDeprecated';\n\nimport OptimizedVideo from '../../../ui/OptimizedVideo';\n\nimport styles from './PremiumFeaturePreviewVideo.module.scss';\n\nimport DeviceFrame from '../../../../assets/premium/DeviceFrame.svg';\n\ntype OwnProps = {\n  videoId: string;\n  isReverseAnimation: boolean;\n  isDown: boolean;\n  videoThumbnail: ApiThumbnail;\n  index: number;\n  isActive: boolean;\n};\n\nconst PremiumFeaturePreviewVideo: FC<OwnProps> = ({\n  videoId,\n  isReverseAnimation,\n  isDown,\n  videoThumbnail,\n  index,\n  isActive,\n}) => {\n  const mediaData = useMedia(`document${videoId}`);\n  const thumbnailRef = useCanvasBlur(videoThumbnail.dataUri);\n  const transitionClassNames = useMediaTransitionDeprecated(mediaData);\n\n  return (\n    <div className={styles.root}>\n      <div\n        className={buildClassName(\n          styles.wrapper,\n          isReverseAnimation && styles.reverse,\n          isDown && styles.down,\n        )}\n        id={`premium_feature_preview_video_${index}`}\n      >\n        <img src={DeviceFrame} alt=\"\" className={styles.frame} draggable={false} />\n        <canvas ref={thumbnailRef} className={styles.video} />\n        <OptimizedVideo\n          canPlay={isActive}\n          className={buildClassName(styles.video, transitionClassNames)}\n          src={mediaData}\n          disablePictureInPicture\n          playsInline\n          muted\n          loop\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default memo(PremiumFeaturePreviewVideo);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"oyUTEj8I\",\"button\":\"EPfM7AgT\",\"button-content\":\"GysZk2mF\",\"buttonContent\":\"GysZk2mF\",\"back-button\":\"njYoMrKM\",\"backButton\":\"njYoMrKM\",\"white-back-button\":\"SB4pczOo\",\"whiteBackButton\":\"SB4pczOo\",\"content\":\"sJubG84j\",\"frame\":\"a7IoUtQG\",\"slide\":\"gubS9KP1\",\"limits\":\"U7ePgVBR\",\"stories\":\"J1M6fEdo\",\"limits-content\":\"n_rowVPI\",\"limitsContent\":\"n_rowVPI\",\"header\":\"mz2Hmd83\",\"no-header-border\":\"AgmNOqi7\",\"noHeaderBorder\":\"AgmNOqi7\",\"preview\":\"dIVBSdWi\",\"title\":\"iZLwcL8v\",\"description\":\"A7YHY8qF\",\"footer\":\"yN2611rA\",\"no-footer-border\":\"rCHMABcD\",\"noFooterBorder\":\"rCHMABcD\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo, useRef, useState,\n} from '../../../lib/teact/teact';\nimport { toggleExtraClass } from '../../../lib/teact/teact-dom';\n\nimport type { ApiPremiumPromo, ApiPremiumSubscriptionOption } from '../../../api/types';\nimport type { ApiLimitTypeForPromo, ApiPremiumSection, GlobalState } from '../../../global/types';\n\nimport { PREMIUM_BOTTOM_VIDEOS, PREMIUM_FEATURE_SECTIONS, PREMIUM_LIMITS_ORDER } from '../../../config';\nimport { requestMutation } from '../../../lib/fasterdom/fasterdom';\nimport animateHorizontalScroll from '../../../util/animateHorizontalScroll';\nimport buildClassName from '../../../util/buildClassName';\nimport { formatCurrency } from '../../../util/formatCurrency';\nimport renderText from '../../common/helpers/renderText';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\nimport usePreviousDeprecated from '../../../hooks/usePreviousDeprecated';\n\nimport SliderDots from '../../common/SliderDots';\nimport Button from '../../ui/Button';\nimport PremiumLimitPreview from './common/PremiumLimitPreview';\nimport PremiumFeaturePreviewStickers from './previews/PremiumFeaturePreviewStickers';\nimport PremiumFeaturePreviewStories from './previews/PremiumFeaturePreviewStories';\nimport PremiumFeaturePreviewVideo from './previews/PremiumFeaturePreviewVideo';\n\nimport styles from './PremiumFeatureModal.module.scss';\n\nexport const PREMIUM_FEATURE_TITLES: Record<ApiPremiumSection, string> = {\n  double_limits: 'PremiumPreviewLimits',\n  infinite_reactions: 'PremiumPreviewReactions2',\n  premium_stickers: 'PremiumPreviewStickers',\n  animated_emoji: 'PremiumPreviewEmoji',\n  no_ads: 'PremiumPreviewNoAds',\n  voice_to_text: 'PremiumPreviewVoiceToText',\n  profile_badge: 'PremiumPreviewProfileBadge',\n  faster_download: 'PremiumPreviewDownloadSpeed',\n  more_upload: 'PremiumPreviewUploads',\n  advanced_chat_management: 'PremiumPreviewAdvancedChatManagement',\n  animated_userpics: 'PremiumPreviewAnimatedProfiles',\n  emoji_status: 'PremiumPreviewEmojiStatus',\n  translations: 'PremiumPreviewTranslations',\n  stories: 'PremiumPreviewStories',\n  saved_tags: 'PremiumPreviewTags2',\n  last_seen: 'PremiumPreviewLastSeen',\n  message_privacy: 'PremiumPreviewMessagePrivacy',\n  effects: 'Premium.MessageEffects',\n};\n\nexport const PREMIUM_FEATURE_DESCRIPTIONS: Record<ApiPremiumSection, string> = {\n  double_limits: 'PremiumPreviewLimitsDescription',\n  infinite_reactions: 'PremiumPreviewReactions2Description',\n  premium_stickers: 'PremiumPreviewStickersDescription',\n  no_ads: 'PremiumPreviewNoAdsDescription',\n  animated_emoji: 'PremiumPreviewEmojiDescription',\n  voice_to_text: 'PremiumPreviewVoiceToTextDescription',\n  profile_badge: 'PremiumPreviewProfileBadgeDescription',\n  faster_download: 'PremiumPreviewDownloadSpeedDescription',\n  more_upload: 'PremiumPreviewUploadsDescription',\n  advanced_chat_management: 'PremiumPreviewAdvancedChatManagementDescription',\n  animated_userpics: 'PremiumPreviewAnimatedProfilesDescription',\n  emoji_status: 'PremiumPreviewEmojiStatusDescription',\n  translations: 'PremiumPreviewTranslationsDescription',\n  stories: 'PremiumPreviewStoriesDescription',\n  saved_tags: 'PremiumPreviewTagsDescription2',\n  last_seen: 'PremiumPreviewLastSeenDescription',\n  message_privacy: 'PremiumPreviewMessagePrivacyDescription',\n  effects: 'Premium.MessageEffectsInfo',\n};\n\nconst LIMITS_TITLES: Record<ApiLimitTypeForPromo, string> = {\n  channels: 'GroupsAndChannelsLimitTitle',\n  dialogFolderPinned: 'PinChatsLimitTitle',\n  channelsPublic: 'PublicLinksLimitTitle',\n  savedGifs: 'SavedGifsLimitTitle',\n  stickersFaved: 'FavoriteStickersLimitTitle',\n  aboutLength: 'BioLimitTitle',\n  captionLength: 'CaptionsLimitTitle',\n  dialogFilters: 'FoldersLimitTitle',\n  dialogFiltersChats: 'ChatPerFolderLimitTitle',\n  recommendedChannels: 'SimilarChannelsLimitTitle',\n};\n\nconst LIMITS_DESCRIPTIONS: Record<ApiLimitTypeForPromo, string> = {\n  channels: 'GroupsAndChannelsLimitSubtitle',\n  dialogFolderPinned: 'PinChatsLimitSubtitle',\n  channelsPublic: 'PublicLinksLimitSubtitle',\n  savedGifs: 'SavedGifsLimitSubtitle',\n  stickersFaved: 'FavoriteStickersLimitSubtitle',\n  aboutLength: 'BioLimitSubtitle',\n  captionLength: 'CaptionsLimitSubtitle',\n  dialogFilters: 'FoldersLimitSubtitle',\n  dialogFiltersChats: 'ChatPerFolderLimitSubtitle',\n  recommendedChannels: 'SimilarChannelsLimitSubtitle',\n};\n\nconst BORDER_THRESHOLD = 20;\n\ntype OwnProps = {\n  initialSection: ApiPremiumSection;\n  promo: ApiPremiumPromo;\n  isPremium?: boolean;\n  limits?: NonNullable<GlobalState['appConfig']>['limits'];\n  premiumPromoOrder?: ApiPremiumSection[];\n  subscriptionOption?: ApiPremiumSubscriptionOption;\n  onBack: VoidFunction;\n  onClickSubscribe: (startParam?: string) => void;\n};\n\nconst PremiumFeatureModal: FC<OwnProps> = ({\n  promo,\n  initialSection,\n  isPremium,\n  limits,\n  premiumPromoOrder,\n  subscriptionOption,\n  onBack,\n  onClickSubscribe,\n}) => {\n  const lang = useOldLang();\n  // eslint-disable-next-line no-null/no-null\n  const scrollContainerRef = useRef<HTMLDivElement>(null);\n  const [currentSlideIndex, setCurrentSlideIndex] = useState(PREMIUM_FEATURE_SECTIONS.indexOf(initialSection));\n  const [reverseAnimationSlideIndex, setReverseAnimationSlideIndex] = useState(0);\n  const [isScrolling, startScrolling, stopScrolling] = useFlag();\n\n  const [isScrolledToTop, setIsScrolledToTop] = useState(true);\n  const [isScrolledToBottom, setIsScrolledToBottom] = useState(false);\n\n  const prevInitialSection = usePreviousDeprecated(initialSection);\n\n  const filteredSections = useMemo(() => {\n    if (!premiumPromoOrder) return PREMIUM_FEATURE_SECTIONS;\n    return premiumPromoOrder.filter((section) => PREMIUM_FEATURE_SECTIONS.includes(section));\n  }, [premiumPromoOrder]);\n\n  const subscriptionButtonText = useMemo(() => {\n    if (!subscriptionOption) return undefined;\n\n    const { amount, months, currency } = subscriptionOption;\n    const perMonthPrice = Math.floor(amount / months);\n\n    return isPremium ? lang('OK') : lang('SubscribeToPremium', formatCurrency(perMonthPrice, currency, lang.code));\n  }, [isPremium, lang, subscriptionOption]);\n\n  const handleClick = useLastCallback(() => {\n    onClickSubscribe(initialSection);\n  });\n\n  function handleScroll(e: React.UIEvent<HTMLDivElement>) {\n    const target = e.currentTarget;\n    const { clientWidth, scrollLeft: scrollLeftOriginal } = target;\n\n    const scrollLeft = Math.round(scrollLeftOriginal);\n\n    const left = scrollLeft % (clientWidth);\n    const progress = left / (clientWidth);\n\n    const reverseIndex = Math.ceil((scrollLeft + 1) / clientWidth);\n\n    setReverseAnimationSlideIndex(reverseIndex);\n\n    const prevElement = target.querySelector<HTMLDivElement>(`#premium_feature_preview_video_${reverseIndex - 1}`);\n    const reverseElement = target.querySelector<HTMLDivElement>(`#premium_feature_preview_video_${reverseIndex}`);\n\n    requestMutation(() => {\n      target.style.setProperty('--scroll-progress', progress.toString());\n      target.style.setProperty('--abs-scroll-progress', Math.abs(progress).toString());\n\n      if (prevElement) toggleExtraClass(prevElement, 'reverse', false);\n      if (reverseElement) toggleExtraClass(reverseElement, 'reverse', true);\n    });\n\n    if (isScrolling) return;\n    const slide = Math.round(scrollLeft / clientWidth);\n    setCurrentSlideIndex(slide);\n  }\n\n  function handleLimitsScroll(e: React.UIEvent<HTMLDivElement>) {\n    const { scrollTop, clientHeight, scrollHeight } = e.currentTarget;\n    setIsScrolledToTop(scrollTop <= BORDER_THRESHOLD);\n    setIsScrolledToBottom(scrollTop >= scrollHeight - clientHeight - BORDER_THRESHOLD);\n  }\n\n  useEffect(() => {\n    const scrollContainer = scrollContainerRef.current;\n    if (!scrollContainer || (prevInitialSection === initialSection)) return;\n\n    const index = filteredSections.indexOf(initialSection);\n    setCurrentSlideIndex(index);\n    startScrolling();\n    animateHorizontalScroll(scrollContainer, scrollContainer.clientWidth * index, 0)\n      .then(stopScrolling);\n  }, [currentSlideIndex, filteredSections, initialSection, prevInitialSection]);\n\n  const handleSelectSlide = useLastCallback(async (index: number) => {\n    const scrollContainer = scrollContainerRef.current;\n    if (!scrollContainer) return;\n\n    setCurrentSlideIndex(index);\n\n    startScrolling();\n    await animateHorizontalScroll(scrollContainer, scrollContainer.clientWidth * index, 800);\n    stopScrolling();\n  });\n\n  return (\n    <div className={styles.root}>\n      <Button\n        round\n        size=\"smaller\"\n        className={buildClassName(styles.backButton, currentSlideIndex !== 0 && styles.whiteBackButton)}\n        color={currentSlideIndex === 0 ? 'translucent' : 'translucent-white'}\n        onClick={onBack}\n        ariaLabel={lang('Back')}\n      >\n        <i className=\"icon icon-arrow-left\" />\n      </Button>\n\n      <div className={styles.preview} />\n\n      <div className={buildClassName(styles.content, 'no-scrollbar')} onScroll={handleScroll} ref={scrollContainerRef}>\n\n        {filteredSections.map((section, index) => {\n          if (section === 'double_limits') {\n            return (\n              <div className={buildClassName(styles.slide, styles.limits)}>\n                <h2 className={buildClassName(styles.header, isScrolledToTop && styles.noHeaderBorder)}>\n                  {lang(PREMIUM_FEATURE_TITLES.double_limits)}\n                </h2>\n                <div className={buildClassName(styles.limitsContent, 'custom-scroll')} onScroll={handleLimitsScroll}>\n                  {PREMIUM_LIMITS_ORDER.map((limit, i) => {\n                    const defaultLimit = limits?.[limit][0].toString();\n                    const premiumLimit = limits?.[limit][1].toString();\n                    return (\n                      <PremiumLimitPreview\n                        title={lang(LIMITS_TITLES[limit])}\n                        description={lang(LIMITS_DESCRIPTIONS[limit], premiumLimit)}\n                        leftValue={defaultLimit}\n                        rightValue={premiumLimit}\n                        colorStepProgress={i / (PREMIUM_LIMITS_ORDER.length - 1)}\n                      />\n                    );\n                  })}\n                </div>\n              </div>\n            );\n          }\n\n          if (section === 'premium_stickers') {\n            return (\n              <div className={styles.slide}>\n                <div className={styles.frame}>\n                  <PremiumFeaturePreviewStickers isActive={currentSlideIndex === index} />\n                </div>\n                <h1 className={styles.title}>\n                  {lang(PREMIUM_FEATURE_TITLES.premium_stickers)}\n                </h1>\n                <div className={styles.description}>\n                  {renderText(lang(PREMIUM_FEATURE_DESCRIPTIONS.premium_stickers), ['br'])}\n                </div>\n              </div>\n            );\n          }\n\n          if (section === 'stories') {\n            return (\n              <div className={buildClassName(styles.slide, styles.stories)}>\n                <PremiumFeaturePreviewStories />\n              </div>\n            );\n          }\n\n          const i = promo.videoSections.indexOf(section);\n          if (i === -1) return undefined;\n          return (\n            <div className={styles.slide}>\n              <div className={styles.frame}>\n                <PremiumFeaturePreviewVideo\n                  isActive={currentSlideIndex === index}\n                  videoId={promo.videos[i].id!}\n                  videoThumbnail={promo.videos[i].thumbnail!}\n                  isDown={PREMIUM_BOTTOM_VIDEOS.includes(section)}\n                  index={index}\n                  isReverseAnimation={index === reverseAnimationSlideIndex}\n                />\n              </div>\n              <h1 className={styles.title}>\n                {lang(PREMIUM_FEATURE_TITLES[promo.videoSections[i]!])}\n              </h1>\n              <div className={styles.description}>\n                {renderText(lang(PREMIUM_FEATURE_DESCRIPTIONS[promo.videoSections[i]!]), ['br'])}\n              </div>\n            </div>\n          );\n        })}\n\n      </div>\n\n      <div\n        className={buildClassName(\n          styles.footer,\n          (isScrolledToBottom || currentSlideIndex !== 0) && styles.noFooterBorder,\n        )}\n      >\n        <SliderDots\n          length={PREMIUM_FEATURE_SECTIONS.length}\n          active={currentSlideIndex}\n          onSelectSlide={handleSelectSlide}\n        />\n        {subscriptionButtonText && (\n          <Button\n            className={buildClassName(styles.button)}\n            isShiny={!isPremium}\n            withPremiumGradient={!isPremium}\n            onClick={isPremium ? onBack : handleClick}\n          >\n            {subscriptionButtonText}\n          </Button>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(PremiumFeatureModal);\n","import type { ChangeEvent } from 'react';\nimport type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback, useMemo } from '../../../lib/teact/teact';\n\nimport type { ApiPremiumGiftCodeOption, ApiPremiumGiftOption } from '../../../api/types';\n\nimport buildClassName from '../../../util/buildClassName';\nimport { formatCurrency } from '../../../util/formatCurrency';\n\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport styles from './PremiumSubscriptionOption.module.scss';\n\ntype OwnProps = {\n  option: ApiPremiumGiftOption | ApiPremiumGiftCodeOption;\n  isGiveaway?: boolean;\n  checked?: boolean;\n  fullMonthlyAmount?: number;\n  className?: string;\n  onChange: (month: number) => void;\n};\n\nconst PremiumSubscriptionOption: FC<OwnProps> = ({\n  option, checked, fullMonthlyAmount,\n  onChange, className, isGiveaway,\n}) => {\n  const lang = useOldLang();\n\n  const {\n    months, amount, currency,\n  } = option;\n  const users = 'users' in option ? option.users : undefined;\n  const perMonth = Math.floor(amount / months);\n  const isUserCountPlural = users ? users > 1 : undefined;\n\n  const discount = useMemo(() => {\n    return fullMonthlyAmount && fullMonthlyAmount > perMonth\n      ? Math.ceil(100 - perMonth / (fullMonthlyAmount / 100))\n      : undefined;\n  }, [fullMonthlyAmount, perMonth]);\n\n  const handleChange = useCallback((e: ChangeEvent<HTMLInputElement>) => {\n    if (e.target.checked) {\n      onChange(months);\n    }\n  }, [months, onChange]);\n\n  return (\n    <label\n      className={buildClassName(\n        isGiveaway ? styles.giveawayWrapper : styles.wrapper,\n        (checked && !isGiveaway) && styles.active,\n        className,\n      )}\n      dir={lang.isRtl ? 'rtl' : undefined}\n    >\n      <input\n        className={styles.input}\n        type=\"radio\"\n        name=\"subscription_option\"\n        value={months}\n        checked={checked}\n        onChange={handleChange}\n      />\n      <div className={styles.content}>\n        <div className={styles.month}>\n          {Boolean(discount) && (\n            <span\n              className={buildClassName(styles.giveawayDiscount, styles.discount)}\n              title={lang('GiftDiscount')}\n            > &minus;{discount}%\n            </span>\n          )}\n          {lang('Months', months)}\n        </div>\n        <div className={styles.perMonth}>\n          {(isGiveaway || isUserCountPlural) ? `${formatCurrency(amount, currency, lang.code)} x ${users!}`\n            : lang('PricePerMonth', formatCurrency(perMonth, currency, lang.code))}\n        </div>\n        <div className={styles.amount}>\n          {formatCurrency(amount, currency, lang.code)}\n        </div>\n      </div>\n    </label>\n  );\n};\n\nexport default memo(PremiumSubscriptionOption);\n","// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"qZA6S2kc\",\"giveawayWrapper\":\"PkseWxFK\",\"active\":\"EJOQwnRj\",\"input\":\"WOEkhx6R\",\"content\":\"BHUCScsU\",\"month\":\"DfYCMUkL\",\"perMonth\":\"poxOXJ2o\",\"amount\":\"IGMrERf_\",\"discount\":\"uqDlP3Zt\",\"giveawayDiscount\":\"ublijP0j\"};","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"sfbpMFHM\",\"transition\":\"ELNkgPve\",\"button\":\"c1tMxuFH\",\"main\":\"ZpOIPrhp\",\"logo\":\"mlMezt6b\",\"status-emoji\":\"mQwvY9LA\",\"statusEmoji\":\"mQwvY9LA\",\"header-text\":\"y71v6ECL\",\"headerText\":\"y71v6ECL\",\"description\":\"cUcKXV3j\",\"list\":\"c3Ee2oSo\",\"no-button\":\"yWEHoJOL\",\"noButton\":\"yWEHoJOL\",\"header\":\"Bc_F0RKb\",\"hidden-header\":\"ltXo0Xi7\",\"hiddenHeader\":\"ltXo0Xi7\",\"close-button\":\"XyN3eWog\",\"closeButton\":\"XyN3eWog\",\"premium-header-text\":\"xysPdANX\",\"premiumHeaderText\":\"xysPdANX\",\"footer-text\":\"yKm9hKQP\",\"footerText\":\"yKm9hKQP\",\"primary-footer-text\":\"l1WlNpmu\",\"primaryFooterText\":\"l1WlNpmu\",\"footer\":\"nCnlO9UZ\",\"stickerSetText\":\"xw_GbDj7\",\"stickerSetLink\":\"FLzl2ng5\",\"stickerSetLinkIcon\":\"Y0jTcadE\",\"subscriptionOptions\":\"xZC_Oajr\",\"subscriptionOption\":\"gygsbDbE\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo, useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type {\n  ApiPremiumPromo, ApiPremiumSubscriptionOption, ApiSticker, ApiStickerSet, ApiUser,\n} from '../../../api/types';\nimport type { ApiPremiumSection, GlobalState } from '../../../global/types';\n\nimport { PREMIUM_FEATURE_SECTIONS, TME_LINK_PREFIX } from '../../../config';\nimport { getUserFullName } from '../../../global/helpers';\nimport {\n  selectIsCurrentUserPremium, selectStickerSet,\n  selectTabState, selectUser,\n} from '../../../global/selectors';\nimport { selectPremiumLimit } from '../../../global/selectors/limits';\nimport buildClassName from '../../../util/buildClassName';\nimport { formatCurrency } from '../../../util/formatCurrency';\nimport { REM } from '../../common/helpers/mediaDimensions';\nimport renderText from '../../common/helpers/renderText';\nimport { renderTextWithEntities } from '../../common/helpers/renderTextWithEntities';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useSyncEffect from '../../../hooks/useSyncEffect';\n\nimport CustomEmoji from '../../common/CustomEmoji';\nimport Button from '../../ui/Button';\nimport Modal from '../../ui/Modal';\nimport Transition from '../../ui/Transition';\nimport PremiumFeatureItem from './PremiumFeatureItem';\nimport PremiumFeatureModal, {\n  PREMIUM_FEATURE_DESCRIPTIONS,\n  PREMIUM_FEATURE_TITLES,\n} from './PremiumFeatureModal';\nimport PremiumSubscriptionOption from './PremiumSubscriptionOption';\n\nimport styles from './PremiumMainModal.module.scss';\n\nimport PremiumAds from '../../../assets/premium/PremiumAds.svg';\nimport PremiumBadge from '../../../assets/premium/PremiumBadge.svg';\nimport PremiumChats from '../../../assets/premium/PremiumChats.svg';\nimport PremiumEffects from '../../../assets/premium/PremiumEffects.svg';\nimport PremiumEmoji from '../../../assets/premium/PremiumEmoji.svg';\nimport PremiumFile from '../../../assets/premium/PremiumFile.svg';\nimport PremiumLastSeen from '../../../assets/premium/PremiumLastSeen.svg';\nimport PremiumLimits from '../../../assets/premium/PremiumLimits.svg';\nimport PremiumLogo from '../../../assets/premium/PremiumLogo.svg';\nimport PremiumMessagePrivacy from '../../../assets/premium/PremiumMessagePrivacy.svg';\nimport PremiumReactions from '../../../assets/premium/PremiumReactions.svg';\nimport PremiumSpeed from '../../../assets/premium/PremiumSpeed.svg';\nimport PremiumStatus from '../../../assets/premium/PremiumStatus.svg';\nimport PremiumStickers from '../../../assets/premium/PremiumStickers.svg';\nimport PremiumTags from '../../../assets/premium/PremiumTags.svg';\nimport PremiumTranslate from '../../../assets/premium/PremiumTranslate.svg';\nimport PremiumVideo from '../../../assets/premium/PremiumVideo.svg';\nimport PremiumVoice from '../../../assets/premium/PremiumVoice.svg';\n\nconst LIMIT_ACCOUNTS = 4;\nconst STATUS_EMOJI_SIZE = 8 * REM;\n\nconst PREMIUM_FEATURE_COLOR_ICONS: Record<ApiPremiumSection, string> = {\n  stories: PremiumStatus,\n  double_limits: PremiumLimits,\n  infinite_reactions: PremiumReactions,\n  premium_stickers: PremiumStickers,\n  animated_emoji: PremiumEmoji,\n  no_ads: PremiumAds,\n  voice_to_text: PremiumVoice,\n  profile_badge: PremiumBadge,\n  faster_download: PremiumSpeed,\n  more_upload: PremiumFile,\n  advanced_chat_management: PremiumChats,\n  animated_userpics: PremiumVideo,\n  emoji_status: PremiumStatus,\n  translations: PremiumTranslate,\n  saved_tags: PremiumTags,\n  last_seen: PremiumLastSeen,\n  message_privacy: PremiumMessagePrivacy,\n  effects: PremiumEffects,\n};\n\nexport type OwnProps = {\n  isOpen?: boolean;\n};\n\ntype StateProps = {\n  currentUserId?: string;\n  promo?: ApiPremiumPromo;\n  fromUser?: ApiUser;\n  fromUserStatusEmoji?: ApiSticker;\n  fromUserStatusSet?: ApiStickerSet;\n  toUser?: ApiUser;\n  initialSection?: ApiPremiumSection;\n  isPremium?: boolean;\n  isSuccess?: boolean;\n  isGift?: boolean;\n  monthsAmount?: number;\n  limitChannels: number;\n  limitPins: number;\n  limitLinks: number;\n  limitFolders: number;\n  limits?: NonNullable<GlobalState['appConfig']>['limits'];\n  premiumSlug?: string;\n  premiumBotUsername?: string;\n  premiumPromoOrder?: ApiPremiumSection[];\n};\n\nconst PremiumMainModal: FC<OwnProps & StateProps> = ({\n  isOpen,\n  currentUserId,\n  fromUser,\n  fromUserStatusEmoji,\n  fromUserStatusSet,\n  promo,\n  initialSection,\n  isPremium,\n  limitChannels,\n  limitLinks,\n  limitFolders,\n  limitPins,\n  limits,\n  premiumSlug,\n  premiumBotUsername,\n  isSuccess,\n  isGift,\n  toUser,\n  monthsAmount,\n  premiumPromoOrder,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const dialogRef = useRef<HTMLDivElement>(null);\n  const {\n    closePremiumModal, openInvoice, requestConfetti, openTelegramLink, loadStickers, openStickerSet,\n  } = getActions();\n\n  const lang = useOldLang();\n  const [isHeaderHidden, setHeaderHidden] = useState(true);\n  const [currentSection, setCurrentSection] = useState<ApiPremiumSection | undefined>(initialSection);\n  const [selectedSubscriptionOption, setSubscriptionOption] = useState<ApiPremiumSubscriptionOption>();\n\n  useEffect(() => {\n    if (!isOpen) {\n      setHeaderHidden(true);\n      setCurrentSection(undefined);\n    }\n  }, [isOpen]);\n\n  const handleOpenSection = useLastCallback((section: ApiPremiumSection) => {\n    setCurrentSection(section);\n  });\n\n  const handleResetSection = useLastCallback(() => {\n    setCurrentSection(undefined);\n  });\n\n  function handleScroll(e: React.UIEvent<HTMLDivElement>) {\n    const { scrollTop } = e.currentTarget;\n\n    setHeaderHidden(scrollTop <= 150);\n  }\n\n  const handleClickWithStartParam = useLastCallback((startParam?: string) => {\n    const dialog = dialogRef.current;\n    if (!dialog) return;\n\n    if (premiumSlug) {\n      openInvoice({\n        type: 'slug',\n        slug: premiumSlug,\n      });\n    } else if (premiumBotUsername) {\n      openTelegramLink({\n        url: `${TME_LINK_PREFIX}${premiumBotUsername}?start=${startParam || 'promo'}`,\n      });\n      closePremiumModal();\n    }\n  });\n\n  const handleClick = useLastCallback(() => {\n    if (selectedSubscriptionOption) {\n      handleClickWithStartParam(String(selectedSubscriptionOption.months));\n    } else {\n      handleClickWithStartParam();\n    }\n  });\n\n  const handleChangeSubscriptionOption = useLastCallback((months: number) => {\n    const foundOption = promo?.options.find((option) => option.months === months);\n    setSubscriptionOption(foundOption);\n  });\n\n  const showConfetti = useLastCallback(() => {\n    const dialog = dialogRef.current;\n    if (!dialog) return;\n    if (isOpen) {\n      const {\n        top, left, width, height,\n      } = dialog.querySelector('.modal-content')!.getBoundingClientRect();\n      requestConfetti({\n        top,\n        left,\n        width,\n        height,\n        withStars: true,\n      });\n    }\n  });\n\n  useEffect(() => {\n    if (isSuccess) {\n      showConfetti();\n    }\n  }, [isSuccess, showConfetti]);\n\n  useSyncEffect(([prevIsPremium]) => {\n    if (prevIsPremium === isPremium) return;\n\n    showConfetti();\n  }, [isPremium, showConfetti]);\n\n  const filteredSections = useMemo(() => {\n    if (!premiumPromoOrder) return PREMIUM_FEATURE_SECTIONS;\n    return premiumPromoOrder.filter((section) => PREMIUM_FEATURE_SECTIONS.includes(section));\n  }, [premiumPromoOrder]);\n\n  useEffect(() => {\n    if (!fromUserStatusEmoji || fromUserStatusSet) return;\n    loadStickers({\n      stickerSetInfo: fromUserStatusEmoji.stickerSetInfo,\n    });\n  }, [loadStickers, fromUserStatusEmoji, fromUserStatusSet]);\n\n  useEffect(() => {\n    const [defaultOption] = promo?.options ?? [];\n    setSubscriptionOption(defaultOption);\n  }, [promo]);\n\n  const handleOpenStatusSet = useLastCallback(() => {\n    if (!fromUserStatusSet) return;\n\n    openStickerSet({\n      stickerSetInfo: fromUserStatusSet,\n    });\n  });\n\n  const stickerSetTitle = useMemo(() => {\n    if (!fromUserStatusSet || !fromUser) return undefined;\n\n    const template = lang('lng_premium_emoji_status_title').replace('{user}', getUserFullName(fromUser)!);\n    const [first, second] = template.split('{link}');\n\n    const emoji = fromUserStatusSet.thumbCustomEmojiId ? (\n      <CustomEmoji className={styles.stickerSetLinkIcon} documentId={fromUserStatusSet.thumbCustomEmojiId} />\n    ) : undefined;\n    const link = (\n      <span className={styles.stickerSetLink} onClick={handleOpenStatusSet}>\n        {emoji}{renderText(fromUserStatusSet.title)}\n      </span>\n    );\n    return [renderText(first), link, renderText(second)];\n  }, [fromUser, fromUserStatusSet, lang]);\n\n  const fullMonthlyAmount = useMemo(() => {\n    const monthOption = promo?.options.find((option) => option.months === 1);\n    if (!monthOption) {\n      return undefined;\n    }\n    return Number(monthOption.amount);\n  }, [promo]);\n\n  const subscribeButtonText = useMemo(() => {\n    if (!selectedSubscriptionOption) {\n      return undefined;\n    }\n    const { amount, months, currency } = selectedSubscriptionOption;\n    const perMonthPrice = Math.floor(amount / months);\n    return formatCurrency(\n      perMonthPrice,\n      currency,\n      lang.code,\n    );\n  }, [selectedSubscriptionOption, lang.code]);\n\n  if (!promo || (fromUserStatusEmoji && !fromUserStatusSet)) return undefined;\n\n  function getHeaderText() {\n    if (isGift) {\n      return fromUser?.id === currentUserId\n        ? lang('TelegramPremiumUserGiftedPremiumOutboundDialogTitle', [getUserFullName(toUser), monthsAmount])\n        : lang('TelegramPremiumUserGiftedPremiumDialogTitle', [getUserFullName(fromUser), monthsAmount]);\n    }\n\n    return fromUser\n      ? lang('TelegramPremiumUserDialogTitle', getUserFullName(fromUser))\n      : lang(isPremium ? 'TelegramPremiumSubscribedTitle' : 'TelegramPremium');\n  }\n\n  function getHeaderDescription() {\n    if (isGift) {\n      return fromUser?.id === currentUserId\n        ? lang('TelegramPremiumUserGiftedPremiumOutboundDialogSubtitle', getUserFullName(toUser))\n        : lang('TelegramPremiumUserGiftedPremiumDialogSubtitle');\n    }\n\n    if (fromUserStatusSet) {\n      return lang('TelegramPremiumUserStatusDialogSubtitle');\n    }\n\n    return fromUser\n      ? lang('TelegramPremiumUserDialogSubtitle')\n      : lang(isPremium ? 'TelegramPremiumSubscribedSubtitle' : 'TelegramPremiumSubtitle');\n  }\n\n  function renderFooterText() {\n    if (!promo || (isGift && fromUser?.id === currentUserId)) {\n      return undefined;\n    }\n\n    return (\n      <div className={styles.footerText} dir={lang.isRtl ? 'rtl' : undefined}>\n        {renderTextWithEntities({\n          text: promo.statusText,\n          entities: promo.statusEntities,\n        })}\n      </div>\n    );\n  }\n\n  function renderSubscriptionOptions() {\n    return (\n      <div className={styles.subscriptionOptions}>\n        {promo?.options\n          .map((option) => (\n            <PremiumSubscriptionOption\n              className={styles.subscriptionOption}\n              key={option.amount}\n              option={option}\n              onChange={handleChangeSubscriptionOption}\n              fullMonthlyAmount={fullMonthlyAmount}\n              checked={selectedSubscriptionOption?.months === option.months}\n            />\n          ))}\n      </div>\n    );\n  }\n\n  return (\n    <Modal\n      className={styles.root}\n      onClose={closePremiumModal}\n      isOpen={isOpen}\n      dialogRef={dialogRef}\n    >\n      <Transition name=\"slide\" activeKey={currentSection ? 1 : 0} className={styles.transition}>\n        {!currentSection ? (\n          <div className={buildClassName(styles.main, 'custom-scroll')} onScroll={handleScroll}>\n            <Button\n              round\n              size=\"smaller\"\n              className={styles.closeButton}\n              color=\"translucent\"\n              // eslint-disable-next-line react/jsx-no-bind\n              onClick={() => closePremiumModal()}\n              ariaLabel={lang('Close')}\n            >\n              <i className=\"icon icon-close\" />\n            </Button>\n            {fromUserStatusEmoji ? (\n              <CustomEmoji\n                className={styles.statusEmoji}\n                onClick={handleOpenStatusSet}\n                documentId={fromUserStatusEmoji.id}\n                isBig\n                size={STATUS_EMOJI_SIZE}\n              />\n            ) : (\n              <img className={styles.logo} src={PremiumLogo} alt=\"\" draggable={false} />\n            )}\n            <h2 className={buildClassName(styles.headerText, fromUserStatusSet && styles.stickerSetText)}>\n              {fromUserStatusSet ? stickerSetTitle : renderText(getHeaderText(), ['simple_markdown', 'emoji'])}\n            </h2>\n            <div className={styles.description}>\n              {renderText(getHeaderDescription(), ['simple_markdown', 'emoji'])}\n            </div>\n            {!isPremium && !isGift && renderSubscriptionOptions()}\n            <div className={buildClassName(styles.header, isHeaderHidden && styles.hiddenHeader)}>\n              <h2 className={styles.premiumHeaderText}>\n                {lang('TelegramPremium')}\n              </h2>\n            </div>\n            <div className={buildClassName(styles.list, isPremium && styles.noButton)}>\n              {filteredSections.map((section, index) => {\n                return (\n                  <PremiumFeatureItem\n                    key={section}\n                    title={lang(PREMIUM_FEATURE_TITLES[section])}\n                    text={section === 'double_limits'\n                      ? lang(PREMIUM_FEATURE_DESCRIPTIONS[section],\n                        [limitChannels, limitFolders, limitPins, limitLinks, LIMIT_ACCOUNTS])\n                      : lang(PREMIUM_FEATURE_DESCRIPTIONS[section])}\n                    icon={PREMIUM_FEATURE_COLOR_ICONS[section]}\n                    index={index}\n                    count={filteredSections.length}\n                    section={section}\n                    onClick={handleOpenSection}\n                  />\n                );\n              })}\n              <div\n                className={buildClassName(styles.footerText, styles.primaryFooterText)}\n                dir={lang.isRtl ? 'rtl' : undefined}\n              >\n                <p>\n                  {renderText(lang('AboutPremiumDescription'), ['simple_markdown'])}\n                </p>\n                <p>\n                  {renderText(lang('AboutPremiumDescription2'), ['simple_markdown'])}\n                </p>\n              </div>\n              {renderFooterText()}\n            </div>\n            {!isPremium && selectedSubscriptionOption && (\n              <div className={styles.footer}>\n                <Button className={styles.button} isShiny withPremiumGradient onClick={handleClick}>\n                  {lang('SubscribeToPremium', subscribeButtonText)}\n                </Button>\n              </div>\n            )}\n          </div>\n        ) : (\n          <PremiumFeatureModal\n            initialSection={currentSection}\n            onBack={handleResetSection}\n            promo={promo}\n            onClickSubscribe={handleClickWithStartParam}\n            isPremium={isPremium}\n            limits={limits}\n            premiumPromoOrder={premiumPromoOrder}\n            subscriptionOption={selectedSubscriptionOption}\n          />\n        )}\n      </Transition>\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>((global): StateProps => {\n  const {\n    premiumModal,\n  } = selectTabState(global);\n\n  const fromUser = premiumModal?.fromUserId ? selectUser(global, premiumModal.fromUserId) : undefined;\n  const fromUserStatusEmoji = fromUser?.emojiStatus ? global.customEmojis.byId[fromUser.emojiStatus.documentId]\n    : undefined;\n  const fromUserStatusSet = fromUserStatusEmoji ? selectStickerSet(global, fromUserStatusEmoji.stickerSetInfo)\n    : undefined;\n\n  return {\n    currentUserId: global.currentUserId,\n    promo: premiumModal?.promo,\n    isSuccess: premiumModal?.isSuccess,\n    isGift: premiumModal?.isGift,\n    monthsAmount: premiumModal?.monthsAmount,\n    fromUser,\n    fromUserStatusEmoji,\n    fromUserStatusSet,\n    toUser: premiumModal?.toUserId ? selectUser(global, premiumModal.toUserId) : undefined,\n    initialSection: premiumModal?.initialSection,\n    isPremium: selectIsCurrentUserPremium(global),\n    limitChannels: selectPremiumLimit(global, 'channels'),\n    limitFolders: selectPremiumLimit(global, 'dialogFilters'),\n    limitPins: selectPremiumLimit(global, 'dialogFolderPinned'),\n    limitLinks: selectPremiumLimit(global, 'channelsPublic'),\n    limits: global.appConfig?.limits,\n    premiumSlug: global.appConfig?.premiumInvoiceSlug,\n    premiumBotUsername: global.appConfig?.premiumBotUsername,\n    premiumPromoOrder: global.appConfig?.premiumPromoOrder,\n  };\n})(PremiumMainModal));\n","// extracted by mini-css-extract-plugin\nexport default {\"modalDialog\":\"GB3KpHga\",\"root\":\"bv742cLK\",\"transition\":\"M6awemqC\",\"content\":\"ahnxTv9t\",\"main\":\"DC9KsF8l\",\"giftSection\":\"OK5knwl3\",\"section\":\"U4wtCtMj\",\"header\":\"BFRxuPRK\",\"starHeaderText\":\"pOrYpnEf\",\"hiddenHeader\":\"x0wO46Uz\",\"closeButton\":\"lF9a9DcG\",\"avatars\":\"yUYDzqjs\",\"center\":\"ikfz9iTG\",\"description\":\"zoIZUqey\",\"premiumFeatures\":\"LzTgfZVa\",\"boostIcon\":\"jrg2ik9Z\",\"optionBottom\":\"s0ze_M5B\",\"secondaryInfo\":\"ML7Glpia\",\"footer\":\"MQ2XTHHM\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo, useRef,\n  useState,\n} from '../../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../../global';\n\nimport type {\n  ApiPremiumGiftCodeOption,\n} from '../../../api/types';\n\nimport { BOOST_PER_SENT_GIFT } from '../../../config';\nimport { getUserFullName } from '../../../global/helpers';\nimport {\n  selectTabState,\n} from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { formatCurrency } from '../../../util/formatCurrency';\nimport renderText from '../../common/helpers/renderText';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport AvatarList from '../../common/AvatarList';\nimport Icon from '../../common/icons/Icon';\nimport Button from '../../ui/Button';\nimport Link from '../../ui/Link';\nimport Modal from '../../ui/Modal';\nimport PremiumSubscriptionOption from './PremiumSubscriptionOption';\n\nimport styles from './PremiumGiftModal.module.scss';\n\nexport type OwnProps = {\n  isOpen?: boolean;\n};\n\ntype StateProps = {\n  isCompleted?: boolean;\n  gifts?: ApiPremiumGiftCodeOption[] | undefined;\n  forUserIds?: string[];\n  boostPerSentGift?: number;\n};\n\nconst PremiumGiftModal: FC<OwnProps & StateProps> = ({\n  isOpen,\n  isCompleted,\n  gifts,\n  boostPerSentGift = BOOST_PER_SENT_GIFT,\n  forUserIds,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const dialogRef = useRef<HTMLDivElement>(null);\n\n  const {\n    openPremiumModal, closePremiumGiftModal, openInvoice, requestConfetti,\n  } = getActions();\n\n  const oldLang = useOldLang();\n\n  const [selectedMonthOption, setSelectedMonthOption] = useState<number | undefined>();\n\n  const selectedUserQuantity = forUserIds && forUserIds.length * boostPerSentGift;\n\n  useEffect(() => {\n    if (forUserIds?.length) {\n      setSelectedMonthOption(gifts?.[0].months);\n    }\n  }, [gifts, forUserIds]);\n\n  const giftingUserList = useMemo(() => {\n    const usersById = getGlobal().users.byId;\n    return forUserIds?.map((userId) => usersById[userId]).filter(Boolean);\n  }, [forUserIds]);\n\n  const selectedGift = useMemo(() => {\n    return gifts?.find((gift) => gift.months === selectedMonthOption && gift.users === forUserIds?.length);\n  }, [gifts, selectedMonthOption, forUserIds?.length]);\n\n  const filteredGifts = useMemo(() => {\n    return gifts?.filter((gift) => gift.users\n      === forUserIds?.length);\n  }, [gifts, forUserIds?.length]);\n\n  const fullMonthlyGiftAmount = useMemo(() => {\n    if (!filteredGifts?.length) {\n      return undefined;\n    }\n\n    const basicGift = filteredGifts.reduce((acc, gift) => {\n      return gift.amount < acc.amount ? gift : acc;\n    });\n\n    return Math.floor(basicGift.amount / basicGift.months);\n  }, [filteredGifts]);\n\n  const handleSubmit = useLastCallback(() => {\n    if (!selectedGift) {\n      return;\n    }\n\n    openInvoice({\n      type: 'giftcode',\n      userIds: forUserIds!,\n      currency: selectedGift!.currency,\n      amount: selectedGift!.amount,\n      option: selectedGift!,\n    });\n  });\n\n  const handlePremiumClick = useLastCallback(() => {\n    openPremiumModal();\n  });\n\n  const showConfetti = useLastCallback(() => {\n    const dialog = dialogRef.current;\n    if (!dialog) return;\n    if (isOpen) {\n      const {\n        top, left, width, height,\n      } = dialog.querySelector('.modal-content')!.getBoundingClientRect();\n      requestConfetti({\n        top,\n        left,\n        width,\n        height,\n        withStars: true,\n      });\n    }\n  });\n\n  useEffect(() => {\n    if (isCompleted) {\n      showConfetti();\n    }\n  }, [isCompleted, showConfetti]);\n\n  const userNameList = useMemo(() => {\n    const usersById = getGlobal().users.byId;\n    return forUserIds?.map((userId) => getUserFullName(usersById[userId])).join(', ');\n  }, [forUserIds]);\n\n  function renderGiftTitle() {\n    if (isCompleted) {\n      return renderText(oldLang('TelegramPremiumUserGiftedPremiumOutboundDialogTitle',\n        [userNameList, selectedGift?.months]), ['simple_markdown']);\n    }\n\n    return oldLang('GiftTelegramPremiumTitle');\n  }\n\n  function renderGiftText() {\n    if (isCompleted) {\n      return renderText(oldLang('TelegramPremiumUserGiftedPremiumOutboundDialogSubtitle', userNameList),\n        ['simple_markdown']);\n    }\n    return renderText(oldLang('GiftPremiumUsersGiveAccessManyZero', userNameList), ['simple_markdown']);\n  }\n\n  function renderPremiumFeaturesLink() {\n    const info = oldLang('GiftPremiumListFeaturesAndTerms');\n    // Translation hack for rendering component inside string\n    const parts = info.match(/([^*]*)\\*([^*]+)\\*(.*)/);\n\n    if (!parts || parts.length < 4) {\n      return undefined;\n    }\n\n    return (\n      <p className={buildClassName(styles.premiumFeatures, styles.center)}>\n        {parts[1]}\n        <Link isPrimary onClick={handlePremiumClick}>{parts[2]}</Link>\n        {parts[3]}\n      </p>\n    );\n  }\n\n  function renderBoostsPluralText() {\n    const giftParts = renderText(oldLang('GiftPremiumWillReceiveBoostsPlural',\n      selectedUserQuantity), ['simple_markdown']);\n    return giftParts.map((part) => {\n      if (typeof part === 'string') {\n        return part.split(/(⚡)/g).map((subpart) => {\n          if (subpart === '⚡') {\n            return <Icon name=\"boost\" className={styles.boostIcon} />;\n          }\n          return subpart;\n        });\n      }\n      return part;\n    });\n  }\n\n  function renderSubscriptionGiftOptions() {\n    return (\n      <div className={styles.subscriptionOptions}>\n        {filteredGifts?.map((gift) => {\n          return (\n            <PremiumSubscriptionOption\n              className={styles.subscriptionOption}\n              key={gift.months}\n              option={gift}\n              fullMonthlyAmount={fullMonthlyGiftAmount}\n              checked={gift.months === selectedMonthOption}\n              onChange={setSelectedMonthOption}\n            />\n          );\n        })}\n      </div>\n    );\n  }\n\n  return (\n    <Modal\n      dialogRef={dialogRef}\n      onClose={closePremiumGiftModal}\n      isOpen={isOpen}\n      contentClassName={styles.content}\n      className={buildClassName(styles.modalDialog, styles.root)}\n    >\n      <div className={buildClassName(styles.main, 'custom-scroll')}>\n        <Button\n          round\n          size=\"smaller\"\n          className={styles.closeButton}\n          color=\"translucent\"\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => closePremiumGiftModal()}\n          ariaLabel={oldLang('Close')}\n        >\n          <i className=\"icon icon-close\" />\n        </Button>\n        <div className={styles.avatars}>\n          <AvatarList\n            size=\"large\"\n            peers={giftingUserList}\n          />\n        </div>\n        <h2 className={buildClassName(styles.headerText, styles.center)}>\n          {renderGiftTitle()}\n        </h2>\n        <p className={buildClassName(styles.description, styles.center)}>\n          {renderGiftText()}\n        </p>\n        {!isCompleted && (\n          <>\n            <p className={styles.description}>\n              {renderText(renderBoostsPluralText(), ['simple_markdown', 'emoji'])}\n            </p>\n\n            <div className={styles.giftSection}>\n              {renderSubscriptionGiftOptions()}\n            </div>\n          </>\n        )}\n        {renderPremiumFeaturesLink()}\n      </div>\n\n      {!isCompleted && (\n        <div className={styles.footer}>\n          <Button withPremiumGradient isShiny disabled={!selectedGift} onClick={handleSubmit}>\n            {oldLang(\n              'GiftSubscriptionFor', selectedGift\n              && formatCurrency(selectedGift!.amount, selectedGift.currency, oldLang.code),\n            )}\n          </Button>\n        </div>\n      )}\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>((global): StateProps => {\n  const {\n    gifts, forUserIds, isCompleted,\n  } = selectTabState(global).giftModal || {};\n\n  return {\n    isCompleted,\n    gifts,\n    boostPerSentGift: global.appConfig?.boostsPerSentGift,\n    forUserIds,\n  };\n})(PremiumGiftModal));\n","// extracted by mini-css-extract-plugin\nexport default {\"options\":\"OnCj9kef\",\"option\":\"tpTHQAUF\",\"active\":\"U_9MXPG5\",\"wideOption\":\"dJcJl33b\",\"optionTop\":\"x9G4lqMf\",\"stackedStars\":\"etXLebjM\",\"stackedStar\":\"swttXv9P\",\"optionBottom\":\"tK7La7L2\",\"moreOptions\":\"AWXBaWLW\",\"iconDown\":\"zWYHZJmd\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo,\n} from '../../../lib/teact/teact';\n\nimport type { ApiStarGiveawayOption, ApiStarTopupOption } from '../../../api/types';\n\nimport buildClassName from '../../../util/buildClassName';\nimport { formatCurrency } from '../../../util/formatCurrency';\nimport { formatInteger } from '../../../util/textFormat';\nimport renderText from '../../common/helpers/renderText';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useLang from '../../../hooks/useLang';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Icon from '../../common/icons/Icon';\nimport StarIcon from '../../common/icons/StarIcon';\nimport Button from '../../ui/Button';\n\nimport styles from './StarTopupOptionList.module.scss';\n\nconst MAX_STARS_COUNT = 6;\n\ntype OwnProps = {\n  isActive?: boolean;\n  options?: ApiStarTopupOption[] | ApiStarGiveawayOption[];\n  selectedStarOption?: ApiStarTopupOption | ApiStarGiveawayOption;\n  selectedStarCount?: number;\n  starsNeeded?: number;\n  className?: string;\n  onClick: (option: ApiStarTopupOption | ApiStarGiveawayOption) => void;\n};\n\nconst StarTopupOptionList: FC<OwnProps> = ({\n  isActive,\n  className,\n  options,\n  selectedStarOption,\n  selectedStarCount,\n  starsNeeded,\n  onClick,\n}) => {\n  const oldLang = useOldLang();\n  const lang = useLang();\n\n  const [areOptionsExtended, markOptionsExtended, unmarkOptionsExtended] = useFlag();\n\n  useEffect(() => {\n    if (!isActive) {\n      unmarkOptionsExtended();\n    }\n  }, [isActive]);\n\n  const [renderingOptions, canExtend] = useMemo(() => {\n    if (!options) {\n      return [undefined, false];\n    }\n\n    const maxOption = options.reduce((max, option) => (\n      max.stars > option.stars ? max : option\n    ));\n    const forceShowAll = starsNeeded && maxOption.stars < starsNeeded;\n\n    const result: { option: ApiStarTopupOption | ApiStarGiveawayOption; starsCount: number; isWide: boolean }[] = [];\n    let currentStackedStarsCount = 0;\n    let canExtendOptions = false;\n    options.forEach((option, index) => {\n      if (!option.isExtended) currentStackedStarsCount++;\n\n      if (starsNeeded && !forceShowAll && option.stars < starsNeeded) return;\n      if (!areOptionsExtended && option.isExtended) {\n        canExtendOptions = true;\n        return;\n      }\n      result.push({\n        option,\n        starsCount: Math.min(currentStackedStarsCount, MAX_STARS_COUNT),\n        isWide: index === options.length - 1,\n      });\n    });\n\n    return [result, canExtendOptions];\n  }, [areOptionsExtended, options, starsNeeded]);\n\n  return (\n    <div className={buildClassName(styles.options, className)}>\n      {renderingOptions?.map(({ option, starsCount, isWide }) => {\n        const length = renderingOptions?.length;\n        const isOdd = length % 2 === 0;\n        const isActiveOption = option === selectedStarOption;\n\n        let perUserStarCount;\n        if (option && 'winners' in option) {\n          const winner = option.winners.find((opt) => opt.users === selectedStarCount)\n            || option.winners.reduce((max, opt) => (opt.users > max.users ? opt : max), option.winners[0]);\n          perUserStarCount = winner?.perUserStars;\n        }\n\n        return (\n          <div\n            className={buildClassName(\n              styles.option, (!isOdd && isWide) && styles.wideOption, isActiveOption && styles.active,\n            )}\n            key={option.stars}\n            onClick={() => onClick?.(option)}\n          >\n            <div className={styles.optionTop}>\n              +{formatInteger(option.stars)}\n              <div className={styles.stackedStars} dir={lang.isRtl ? 'ltr' : 'rtl'}>\n                {Array.from({ length: starsCount }).map(() => (\n                  <StarIcon className={styles.stackedStar} type=\"gold\" size=\"big\" />\n                ))}\n              </div>\n            </div>\n            <div className={styles.optionBottom}>\n              {formatCurrency(option.amount, option.currency, oldLang.code)}\n            </div>\n            {(isActiveOption || (selectedStarOption && 'winners' in selectedStarOption)) && perUserStarCount && (\n              <div className={styles.optionBottom}>\n                <div className={styles.perUserStars}>\n                  {renderText(oldLang('BoostGift.Stars.PerUser', formatInteger(perUserStarCount)))}\n                </div>\n              </div>\n            )}\n          </div>\n        );\n      })}\n      {!areOptionsExtended && canExtend && (\n        <Button className={styles.moreOptions} isText noForcedUpperCase onClick={markOptionsExtended}>\n          {oldLang('Stars.Purchase.ShowMore')}\n          <Icon className={styles.iconDown} name=\"down\" />\n        </Button>\n      )}\n    </div>\n  );\n};\n\nexport default memo(StarTopupOptionList);\n","// extracted by mini-css-extract-plugin\nexport default {\"modalDialog\":\"uH8fqafl\",\"root\":\"aj6xpTC3\",\"main\":\"Iqf5K4mR\",\"headerInfo\":\"IOY_ESbV\",\"logo\":\"Pl_aaBw0\",\"logoBackground\":\"D5l7UeFq\",\"description\":\"ecZztcn2\",\"section\":\"t18TOwVL\",\"header\":\"eRV8zao3\",\"starHeaderText\":\"TTmBv6nH\",\"hiddenHeader\":\"keGf2mX9\",\"closeButton\":\"tlkzyZXX\",\"avatar\":\"P0oMhbon\",\"center\":\"Ri1FZd1z\",\"secondaryInfo\":\"TWNeq00k\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo, useRef,\n  useState,\n} from '../../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../../global';\n\nimport type {\n  ApiStarTopupOption, ApiUser,\n} from '../../../api/types';\n\nimport { getSenderTitle } from '../../../global/helpers';\nimport {\n  selectTabState, selectUser,\n} from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { formatCurrencyAsString } from '../../../util/formatCurrency';\nimport renderText from '../../common/helpers/renderText';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Avatar from '../../common/Avatar';\nimport SafeLink from '../../common/SafeLink';\nimport StarTopupOptionList from '../../modals/stars/StarTopupOptionList';\nimport Button from '../../ui/Button';\nimport Modal from '../../ui/Modal';\n\nimport styles from './StarsGiftModal.module.scss';\n\nimport StarLogo from '../../../assets/icons/StarLogo.svg';\nimport StarsBackground from '../../../assets/stars-bg.png';\n\nexport type OwnProps = {\n  isOpen?: boolean;\n};\n\ntype StateProps = {\n  isCompleted?: boolean;\n  starsGiftOptions?: ApiStarTopupOption[] | undefined;\n  forUserId?: string;\n  user?: ApiUser;\n};\n\nconst StarsGiftModal: FC<OwnProps & StateProps> = ({\n  isOpen,\n  isCompleted,\n  starsGiftOptions,\n  forUserId,\n  user,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const dialogRef = useRef<HTMLDivElement>(null);\n\n  const {\n    closeStarsGiftModal, openInvoice, requestConfetti,\n  } = getActions();\n\n  const oldLang = useOldLang();\n\n  const [selectedOption, setSelectedOption] = useState<ApiStarTopupOption | undefined>();\n  const [isHeaderHidden, setHeaderHidden] = useState(true);\n\n  useEffect(() => {\n    if (!isOpen) {\n      setHeaderHidden(true);\n    }\n  }, [isOpen]);\n\n  const showConfetti = useLastCallback(() => {\n    const dialog = dialogRef.current;\n    if (!dialog) return;\n    if (isOpen) {\n      const {\n        top, left, width, height,\n      } = dialog.querySelector('.modal-content')!.getBoundingClientRect();\n      requestConfetti({\n        top,\n        left,\n        width,\n        height,\n        withStars: true,\n      });\n    }\n  });\n\n  useEffect(() => {\n    if (isCompleted) {\n      showConfetti();\n    }\n  }, [isCompleted, showConfetti]);\n\n  const handleClick = useLastCallback((option: ApiStarTopupOption) => {\n    setSelectedOption(option);\n    if (user) {\n      openInvoice({\n        type: 'starsgift',\n        userId: forUserId!,\n        stars: option.stars,\n        currency: option.currency,\n        amount: option.amount,\n      });\n    } else {\n      openInvoice({\n        type: 'stars',\n        stars: option.stars,\n        currency: option.currency,\n        amount: option.amount,\n      });\n    }\n  });\n\n  function handleScroll(e: React.UIEvent<HTMLDivElement>) {\n    const { scrollTop } = e.currentTarget;\n\n    setHeaderHidden(scrollTop <= 150);\n  }\n\n  const handleClose = useLastCallback(() => {\n    closeStarsGiftModal();\n  });\n\n  function renderGiftTitle() {\n    if (isCompleted) {\n      return user ? renderText(oldLang('Notification.StarsGift.SentYou',\n        formatCurrencyAsString(selectedOption!.amount, selectedOption!.currency, oldLang.code)), ['simple_markdown'])\n        : renderText(oldLang('StarsAcquiredInfo', selectedOption?.stars), ['simple_markdown']);\n    }\n\n    return user ? oldLang('GiftStarsTitle') : oldLang('Star.List.GetStars');\n  }\n\n  function renderStarOptionList() {\n    return (\n      <StarTopupOptionList\n        options={starsGiftOptions}\n        onClick={handleClick}\n      />\n    );\n  }\n\n  const bottomText = useMemo(() => {\n    if (!isOpen) return undefined;\n\n    const text = oldLang('lng_credits_summary_options_about');\n    const parts = text.split('{link}');\n    return [\n      parts[0],\n      <SafeLink url={oldLang('StarsTOSLink')} text={oldLang('lng_credits_summary_options_about_link')} />,\n      parts[1],\n    ];\n  }, [isOpen, oldLang]);\n\n  return (\n    <Modal\n      className={buildClassName(styles.modalDialog, styles.root)}\n      dialogRef={dialogRef}\n      onClose={handleClose}\n      isOpen={isOpen}\n    >\n      <div className={styles.main} onScroll={handleScroll}>\n        <Button\n          round\n          size=\"smaller\"\n          className={styles.closeButton}\n          color=\"translucent\"\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => closeStarsGiftModal()}\n          ariaLabel={oldLang('Close')}\n        >\n          <i className=\"icon icon-close\" />\n        </Button>\n        <div className={buildClassName(styles.header, isHeaderHidden && styles.hiddenHeader)}>\n          <h2 className={styles.starHeaderText}>\n            {user ? oldLang('GiftStarsTitle') : oldLang('Star.List.GetStars')}\n          </h2>\n        </div>\n        <div className={styles.headerInfo}>\n          {user ? (\n            <>\n              <Avatar\n                size=\"huge\"\n                peer={user}\n                className={styles.avatar}\n              />\n              <img className={styles.logoBackground} src={StarsBackground} alt=\"\" draggable={false} />\n            </>\n          ) : (\n            <>\n              <img className={styles.logo} src={StarLogo} alt=\"\" draggable={false} />\n              <img className={styles.logoBackground} src={StarsBackground} alt=\"\" draggable={false} />\n            </>\n          )}\n        </div>\n        <h2 className={buildClassName(styles.headerText, styles.center)}>\n          {renderGiftTitle()}\n        </h2>\n        <p className={styles.description}>\n          {user ? renderText(\n            oldLang('ActionGiftStarsSubtitle', getSenderTitle(oldLang, user)), ['simple_markdown'],\n          ) : oldLang('Stars.Purchase.GetStarsInfo')}\n        </p>\n        <div className={styles.section}>\n          {renderStarOptionList()}\n          <div className={styles.secondaryInfo}>\n            {bottomText}\n          </div>\n        </div>\n      </div>\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>((global): StateProps => {\n  const {\n    starsGiftOptions, forUserId, isCompleted,\n  } = selectTabState(global).starsGiftModal || {};\n\n  const user = forUserId ? selectUser(getGlobal(), forUserId) : undefined;\n\n  return {\n    isCompleted,\n    starsGiftOptions,\n    forUserId,\n    user,\n  };\n})(StarsGiftModal));\n","import type { TeactNode } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect,\n  useMemo,\n  useRef,\n} from '../../../lib/teact/teact';\n\nimport { requestMeasure } from '../../../lib/fasterdom/fasterdom';\nimport buildClassName from '../../../util/buildClassName';\nimport { MEMO_EMPTY_ARRAY } from '../../../util/memo';\n\nimport useInfiniteScroll from '../../../hooks/useInfiniteScroll';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Checkbox from '../../ui/Checkbox';\nimport InfiniteScroll from '../../ui/InfiniteScroll';\nimport InputText from '../../ui/InputText';\nimport Loading from '../../ui/Loading';\nimport Radio from '../../ui/Radio';\nimport Icon from '../icons/Icon';\nimport PickerItem from './PickerItem';\n\nimport styles from './PickerStyles.module.scss';\n\nexport type ItemPickerOption = {\n  label: TeactNode;\n  subLabel?: string;\n  disabled?: boolean;\n  isLoading?: boolean;\n  value: string;\n};\n\ntype SingleModeProps = {\n  allowMultiple?: false;\n  itemInputType?: 'radio';\n  selectedValue?: string;\n  selectedValues?: never; // Help TS to throw an error if this is passed\n  onSelectedValueChange?: (value: string) => void;\n};\n\ntype MultipleModeProps = {\n  allowMultiple: true;\n  itemInputType: 'checkbox';\n  selectedValue?: never;\n  selectedValues: string[];\n  lockedSelectedValues?: string[];\n  lockedUnselectedValues?: string[];\n  onSelectedValuesChange?: (values: string[]) => void;\n};\n\ntype OwnProps = {\n  className?: string;\n  isSearchable?: boolean;\n  searchInputId?: string;\n  items: ItemPickerOption[];\n  itemClassName?: string;\n  filterValue?: string;\n  filterPlaceholder?: string;\n  notFoundText?: string;\n  isLoading?: boolean;\n  noScrollRestore?: boolean;\n  isViewOnly?: boolean;\n  withDefaultPadding?: boolean;\n  onFilterChange?: (value: string) => void;\n  onDisabledClick?: (value: string, isSelected: boolean) => void;\n  onLoadMore?: () => void;\n} & (SingleModeProps | MultipleModeProps);\n\n// Focus slows down animation, also it breaks transition layout in Chrome\nconst FOCUS_DELAY_MS = 500;\n\nconst ITEM_CLASS_NAME = 'ItemPickerItem';\n\nconst ItemPicker = ({\n  className,\n  isSearchable,\n  searchInputId,\n  items,\n  filterValue,\n  notFoundText,\n  isLoading,\n  noScrollRestore,\n  filterPlaceholder,\n  isViewOnly,\n  itemInputType,\n  itemClassName,\n  withDefaultPadding,\n  onFilterChange,\n  onDisabledClick,\n  onLoadMore,\n  ...optionalProps\n}: OwnProps) => {\n  const lang = useOldLang();\n  // eslint-disable-next-line no-null/no-null\n  const inputRef = useRef<HTMLInputElement>(null);\n\n  const allowMultiple = optionalProps.allowMultiple;\n  const lockedSelectedValues = allowMultiple ? optionalProps.lockedSelectedValues : undefined;\n  const lockedUnselectedValues = allowMultiple ? optionalProps.lockedUnselectedValues : undefined;\n\n  useEffect(() => {\n    if (!isSearchable) return undefined;\n    const timeoutId = window.setTimeout(() => {\n      requestMeasure(() => {\n        inputRef.current?.focus();\n      });\n    }, FOCUS_DELAY_MS);\n\n    return () => {\n      window.clearTimeout(timeoutId);\n    };\n  }, [isSearchable]);\n\n  const selectedValues = useMemo(() => {\n    if (allowMultiple) {\n      return optionalProps.selectedValues;\n    }\n\n    return optionalProps.selectedValue ? [optionalProps.selectedValue] : MEMO_EMPTY_ARRAY;\n  }, [allowMultiple, optionalProps.selectedValue, optionalProps.selectedValues]);\n\n  const lockedSelectedValuesSet = useMemo(() => new Set(lockedSelectedValues), [lockedSelectedValues]);\n  const lockedUnselectedValuesSet = useMemo(() => new Set(lockedUnselectedValues), [lockedUnselectedValues]);\n\n  const sortedItemValuesList = useMemo(() => {\n    if (filterValue) {\n      return items.map((item) => item.value);\n    }\n\n    const lockedSelectedBucket: ItemPickerOption[] = [];\n    const unlockedBucket: ItemPickerOption[] = [];\n    const lockedUnselectableBucket: ItemPickerOption[] = [];\n\n    items.forEach((item) => {\n      if (lockedSelectedValuesSet.has(item.value)) {\n        lockedSelectedBucket.push(item);\n      } else if (lockedUnselectedValuesSet.has(item.value)) {\n        lockedUnselectableBucket.push(item);\n      } else {\n        unlockedBucket.push(item);\n      }\n    });\n\n    return lockedSelectedBucket.concat(unlockedBucket, lockedUnselectableBucket).map((item) => item.value);\n  }, [filterValue, items, lockedSelectedValuesSet, lockedUnselectedValuesSet]);\n\n  const handleItemClick = useLastCallback((value: string) => {\n    if (allowMultiple) {\n      const newSelectedValues = selectedValues.slice();\n      const index = newSelectedValues.indexOf(value);\n      if (index >= 0) {\n        newSelectedValues.splice(index, 1);\n      } else {\n        newSelectedValues.push(value);\n      }\n\n      optionalProps.onSelectedValuesChange?.(newSelectedValues);\n      return;\n    }\n\n    optionalProps.onSelectedValueChange?.(value);\n  });\n\n  const [viewportValuesList, getMore] = useInfiniteScroll(\n    onLoadMore, sortedItemValuesList, Boolean(filterValue),\n  );\n\n  const handleFilterChange = useLastCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    const { value } = e.currentTarget;\n    onFilterChange?.(value);\n  });\n\n  const renderItem = useCallback((value: string) => {\n    const item = items.find((itemOption) => itemOption.value === value);\n    if (!item) return undefined;\n\n    const { label, subLabel, isLoading: isItemLoading } = item;\n    const isAlwaysUnselected = lockedUnselectedValuesSet.has(value);\n    const isAlwaysSelected = lockedSelectedValuesSet.has(value);\n    const isLocked = isAlwaysUnselected || isAlwaysSelected;\n    const isChecked = selectedValues.includes(value);\n\n    function getInputElement() {\n      if (isLocked) return <Icon name=\"lock-badge\" />;\n      if (itemInputType === 'radio') {\n        return <Radio checked={isChecked} disabled={isLocked} isLoading={isItemLoading} onlyInput />;\n      }\n      if (itemInputType === 'checkbox') {\n        return <Checkbox checked={isChecked} disabled={isLocked} isLoading={isItemLoading} onlyInput />;\n      }\n      return undefined;\n    }\n\n    return (\n      <PickerItem\n        key={value}\n        className={buildClassName(ITEM_CLASS_NAME, itemClassName)}\n        title={label}\n        subtitle={subLabel}\n        disabled={isLocked}\n        inactive={isViewOnly}\n        ripple\n        inputElement={getInputElement()}\n        // eslint-disable-next-line react/jsx-no-bind\n        onClick={() => handleItemClick(value)}\n        // eslint-disable-next-line react/jsx-no-bind\n        onDisabledClick={onDisabledClick && (() => onDisabledClick(value, isAlwaysSelected))}\n      />\n    );\n  }, [\n    items, lockedUnselectedValuesSet, lockedSelectedValuesSet, selectedValues, isViewOnly, onDisabledClick,\n    itemInputType, itemClassName,\n  ]);\n\n  return (\n    <div className={buildClassName(styles.container, className)}>\n      {isSearchable && (\n        <div className={buildClassName(styles.header, 'custom-scroll')} dir={lang.isRtl ? 'rtl' : undefined}>\n          <InputText\n            id={searchInputId}\n            ref={inputRef}\n            value={filterValue}\n            onChange={handleFilterChange}\n            placeholder={filterPlaceholder || lang('Search')}\n          />\n        </div>\n      )}\n\n      {viewportValuesList?.length ? (\n        <InfiniteScroll\n          className={buildClassName(styles.pickerList, withDefaultPadding && styles.padded, 'custom-scroll')}\n          items={viewportValuesList}\n          itemSelector={`.${ITEM_CLASS_NAME}`}\n          onLoadMore={getMore}\n          noScrollRestore={noScrollRestore}\n        >\n          {viewportValuesList.map((value) => renderItem(value))}\n        </InfiniteScroll>\n      ) : !isLoading && viewportValuesList && !viewportValuesList.length ? (\n        <p className={styles.noResults}>{notFoundText || lang('SearchEmptyViewTitle')}</p>\n      ) : (\n        <Loading />\n      )}\n    </div>\n  );\n};\n\nexport default memo(ItemPicker);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"wzzA3MFh\",\"pickerSelector\":\"xhujrq9i\",\"pickerTitle\":\"YuRK4e7S\",\"picker\":\"YF9nLkCK\",\"footer\":\"ATCZ2Q5G\"};","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useMemo, useState,\n} from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport type { ApiCountry } from '../../api/types';\n\nimport buildClassName from '../../util/buildClassName';\n\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\nimport usePreviousDeprecated from '../../hooks/usePreviousDeprecated';\n\nimport Button from '../ui/Button';\nimport Modal from '../ui/Modal';\nimport Icon from './icons/Icon';\nimport ItemPicker from './pickers/ItemPicker';\n\nimport styles from './CountryPickerModal.module.scss';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  onClose: () => void;\n  onSubmit: (value: string[]) => void;\n  countryList: ApiCountry[];\n  selectionLimit?: number | undefined;\n};\n\nconst CountryPickerModal: FC<OwnProps> = ({\n  isOpen,\n  onClose,\n  onSubmit,\n  countryList,\n  selectionLimit,\n}) => {\n  const { showNotification } = getActions();\n\n  const lang = useOldLang();\n\n  const [selectedCountryIds, setSelectedCountryIds] = useState<string[]>([]);\n  const prevSelectedCountryIds = usePreviousDeprecated(selectedCountryIds);\n  const noPickerScrollRestore = prevSelectedCountryIds === selectedCountryIds;\n\n  const displayedIds = useMemo(() => {\n    if (!countryList) {\n      return [];\n    }\n\n    return countryList.filter((country) => !country.isHidden && country.iso2 !== 'FT')\n      .map(({\n        iso2, defaultName,\n      }) => ({\n        value: iso2,\n        label: defaultName,\n      }));\n  }, [countryList]);\n\n  const handleSelectedIdsChange = useLastCallback((newSelectedIds: string[]) => {\n    if (selectionLimit && newSelectedIds.length > selectionLimit) {\n      showNotification({\n        message: lang('BoostingSelectUpToWarningCountries', selectionLimit),\n      });\n      return;\n    }\n    setSelectedCountryIds(newSelectedIds);\n  });\n\n  const handleSubmit = useLastCallback(() => {\n    onSubmit(selectedCountryIds);\n    onClose();\n  });\n\n  return (\n    <Modal\n      className={styles.root}\n      isOpen={isOpen}\n      onClose={onClose}\n      onEnter={handleSubmit}\n    >\n      <div className={styles.container}>\n        <div className={styles.pickerSelector}>\n          <Button\n            round\n            size=\"smaller\"\n            color=\"translucent\"\n            onClick={onClose}\n          >\n            <Icon name=\"close\" />\n          </Button>\n\n          <h4 className={styles.pickerTitle}>\n            {lang('BoostingSelectCountry')}\n          </h4>\n        </div>\n      </div>\n\n      <div className={buildClassName(styles.main, 'custom-scroll')}>\n        <ItemPicker\n          className={styles.picker}\n          items={displayedIds}\n          selectedValues={selectedCountryIds}\n          onSelectedValuesChange={handleSelectedIdsChange}\n          noScrollRestore={noPickerScrollRestore}\n          allowMultiple\n          itemInputType=\"checkbox\"\n        />\n      </div>\n\n      <div className={styles.footer}>\n        <Button\n          size=\"smaller\"\n          onClick={handleSubmit}\n        >\n          {lang('SelectCountries.OK')}\n        </Button>\n      </div>\n    </Modal>\n  );\n};\n\nexport default memo(CountryPickerModal);\n","import React, { memo } from '../../../lib/teact/teact';\n\nimport buildClassName from '../../../util/buildClassName';\n\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Button from '../../ui/Button';\nimport Modal, { type OwnProps as ModalProps } from '../../ui/Modal';\n\nimport styles from './PickerModal.module.scss';\n\ntype OwnProps = {\n  confirmButtonText?: string;\n  isConfirmDisabled?: boolean;\n  shouldAdaptToSearch?: boolean;\n  withFixedHeight?: boolean;\n  withPremiumGradient?: boolean;\n  onConfirm?: NoneToVoidFunction;\n} & ModalProps;\n\nconst PickerModal = ({\n  confirmButtonText,\n  isConfirmDisabled,\n  shouldAdaptToSearch,\n  withFixedHeight,\n  onConfirm,\n  withPremiumGradient,\n  ...modalProps\n}: OwnProps) => {\n  const lang = useOldLang();\n  const hasOnClickHandler = Boolean(onConfirm || modalProps.onClose);\n\n  return (\n    <Modal\n      // eslint-disable-next-line react/jsx-props-no-spreading\n      {...modalProps}\n      isSlim\n      className={buildClassName(\n        shouldAdaptToSearch && styles.withSearch,\n        withFixedHeight && styles.fixedHeight,\n        modalProps.className,\n      )}\n      contentClassName={buildClassName(styles.content, modalProps.contentClassName)}\n      headerClassName={buildClassName(styles.header, modalProps.headerClassName)}\n    >\n      {modalProps.children}\n      {hasOnClickHandler && (\n        <div className={styles.buttonWrapper}>\n          <Button\n            withPremiumGradient={withPremiumGradient}\n            onClick={onConfirm || modalProps.onClose}\n            color=\"primary\"\n            size=\"smaller\"\n            disabled={isConfirmDisabled}\n          >\n            {confirmButtonText || lang('Confirm')}\n          </Button>\n        </div>\n      )}\n    </Modal>\n  );\n};\n\nexport default memo(PickerModal);\n","// extracted by mini-css-extract-plugin\nexport default {\"content\":\"FuFYE0AA\",\"fixedHeight\":\"CrEsDylb\",\"withSearch\":\"WGSZ8u75\",\"header\":\"iEptOmIp\",\"buttonWrapper\":\"HqeDTaSr\"};","import React, {\n  memo, useEffect, useMemo, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, getGlobal } from '../../../global';\n\nimport {\n  filterChatsByName, isChatChannel, isChatPublic, isChatSuperGroup,\n} from '../../../global/helpers';\nimport { unique } from '../../../util/iteratees';\nimport sortChatIds from '../../common/helpers/sortChatIds';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport PeerPicker from '../../common/pickers/PeerPicker';\nimport PickerModal from '../../common/pickers/PickerModal';\nimport ConfirmDialog from '../../ui/ConfirmDialog';\n\ntype OwnProps = {\n  isOpen?: boolean;\n  giveawayChatId?: string;\n  selectionLimit: number;\n  initialSelectedIds: string[];\n  onSelectedIdsConfirmed: (newSelectedIds: string[]) => void;\n  onClose: NoneToVoidFunction;\n};\n\nconst GiveawayChannelPickerModal = ({\n  isOpen,\n  giveawayChatId,\n  selectionLimit,\n  initialSelectedIds,\n  onSelectedIdsConfirmed,\n  onClose,\n}: OwnProps) => {\n  const { showNotification } = getActions();\n  const lang = useOldLang();\n\n  const [pendingChannelId, setPendingChannelId] = useState<string | undefined>(undefined);\n  const [searchQuery, setSearchQuery] = useState<string>('');\n  const [isConfirmModalOpen, openConfirmModal, closeConfirmModal] = useFlag();\n  const [selectedIds, setSelectedIds] = useState<string[]>(initialSelectedIds);\n\n  useEffect(() => {\n    setSelectedIds(initialSelectedIds);\n  }, [initialSelectedIds]);\n\n  const channelIds = useMemo(() => {\n    const global = getGlobal();\n    const chatsById = global.chats.byId;\n    const { active, archived } = global.chats.listIds;\n    const ids = (active || []).concat(archived || []);\n\n    return unique(ids).map((id) => chatsById[id])\n      .filter((chat) => (\n        chat && (\n          isChatChannel(chat) || isChatSuperGroup(chat)\n        ) && chat.id !== giveawayChatId\n      )).map((chat) => chat.id);\n  }, [giveawayChatId]);\n\n  const displayedChannelIds = useMemo(() => {\n    const chatsById = getGlobal().chats.byId;\n    const foundChannelIds = channelIds ? filterChatsByName(lang, channelIds, chatsById, searchQuery) : [];\n\n    return sortChatIds(foundChannelIds,\n      false,\n      selectedIds);\n  }, [channelIds, lang, searchQuery, selectedIds]);\n\n  const handleSelectedChannelIdsChange = useLastCallback((newSelectedIds: string[]) => {\n    const chatsById = getGlobal().chats.byId;\n    const newlyAddedIds = newSelectedIds.filter((id) => !selectedIds.includes(id));\n    const privateLinkChannelId = newlyAddedIds.find((id) => {\n      const chat = chatsById[id];\n      return chat && !isChatPublic(chat);\n    });\n\n    if (selectedIds?.length >= selectionLimit) {\n      showNotification({\n        message: lang('BoostingSelectUpToWarningChannelsPlural', selectionLimit),\n      });\n      return;\n    }\n\n    if (privateLinkChannelId) {\n      setPendingChannelId(privateLinkChannelId);\n      openConfirmModal();\n    } else {\n      setSelectedIds(newSelectedIds);\n    }\n  });\n\n  const confirmPrivateLinkChannelSelection = useLastCallback(() => {\n    if (pendingChannelId) {\n      setSelectedIds(unique([...selectedIds, pendingChannelId]));\n    }\n    closeConfirmModal();\n  });\n\n  const handleModalConfirm = useLastCallback(() => {\n    onSelectedIdsConfirmed(selectedIds);\n    onClose();\n  });\n\n  return (\n    <PickerModal\n      isOpen={isOpen}\n      onClose={onClose}\n      title={lang('RequestPeer.ChooseChannelTitle')}\n      hasCloseButton\n      shouldAdaptToSearch\n      withFixedHeight\n      confirmButtonText={lang('Save')}\n      onConfirm={handleModalConfirm}\n      onEnter={handleModalConfirm}\n    >\n      <PeerPicker\n        itemIds={displayedChannelIds}\n        selectedIds={selectedIds}\n        filterValue={searchQuery}\n        filterPlaceholder={lang('Search')}\n        onSelectedIdsChange={handleSelectedChannelIdsChange}\n        onFilterChange={setSearchQuery}\n        isSearchable\n        withDefaultPadding\n        withStatus\n        allowMultiple\n        itemInputType=\"checkbox\"\n      />\n      <ConfirmDialog\n        title={lang('BoostingGiveawayPrivateChannel')}\n        text={lang('BoostingGiveawayPrivateChannelWarning')}\n        confirmLabel={lang('Add')}\n        isOpen={isConfirmModalOpen}\n        onClose={closeConfirmModal}\n        confirmHandler={confirmPrivateLinkChannelSelection}\n      />\n    </PickerModal>\n  );\n};\n\nexport default memo(GiveawayChannelPickerModal);\n","import type { ChangeEvent } from 'react';\nimport type { FC } from '../../../lib/teact/teact';\nimport React, { memo } from '../../../lib/teact/teact';\n\nimport buildClassName from '../../../util/buildClassName';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Icon from '../../common/icons/Icon';\n\nimport styles from './GiveawayTypeOption.module.scss';\n\ntype ApiGiveawayType = 'premium_giveaway' | 'stars_giveaway';\n\ntype OwnProps = {\n  option: ApiGiveawayType;\n  name: string;\n  text: string;\n  img: string;\n  checked?: boolean;\n  isLink: boolean;\n  className?: string;\n  onChange: (value: ApiGiveawayType) => void;\n  onClickAction?: () => void;\n  userNames?: string;\n  selectedMemberIds?: string[];\n};\n\nconst GiveawayTypeOption: FC<OwnProps> = ({\n  option, checked,\n  name, text, img,\n  isLink, onChange, onClickAction, className,\n  userNames, selectedMemberIds,\n}) => {\n  const lang = useOldLang();\n\n  let displayText: string | undefined = lang(text);\n  if (isLink && selectedMemberIds?.length) {\n    displayText = selectedMemberIds.length > 2 ? `${selectedMemberIds.length}` : userNames;\n  }\n\n  const handleChange = useLastCallback((e: ChangeEvent<HTMLInputElement>) => {\n    if (e.target.checked) {\n      onChange(option);\n    }\n  });\n\n  const handleClick = useLastCallback(() => {\n    onClickAction?.();\n  });\n\n  return (\n    <label\n      className={buildClassName(styles.wrapper, className)}\n      dir={lang.isRtl ? 'rtl' : undefined}\n      role=\"button\"\n      tabIndex={0}\n    >\n      <input\n        className={styles.input}\n        type=\"radio\"\n        name=\"giveaway_option\"\n        value={option}\n        checked={checked}\n        onChange={handleChange}\n        onClick={(e) => e.stopPropagation()}\n      />\n      <div className={styles.content}>\n        <img className={styles.optionImg} src={img} alt=\"\" draggable={false} />\n        <div className={styles.giveaway}>\n          <h3 className={styles.title}>\n            {lang(`${name}`)}\n          </h3>\n          {isLink ? (\n            <div className={styles.link} onClick={handleClick}>\n              <span>{displayText}</span>\n              <Icon name=\"next\" />\n            </div>\n          ) : (\n            <span className={styles.contentText}>{displayText}</span>\n          )}\n        </div>\n      </div>\n    </label>\n  );\n};\n\nexport default memo(GiveawayTypeOption);\n","// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"w3OGYFKn\",\"input\":\"xy4AclZa\",\"content\":\"TTgSI7Xh\",\"notChecked\":\"JDcXsByU\",\"giveaway\":\"sEt7TF59\",\"title\":\"u4NzVBBi\",\"link\":\"y7XfPOoG\",\"optionImg\":\"lGhZJbMF\",\"contentText\":\"kt2ZKZ6j\"};","import React, {\n  memo, useEffect, useMemo, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../../global';\n\nimport type { ApiChatMember } from '../../../api/types';\n\nimport {\n  filterUsersByName,\n  isUserBot,\n  sortUserIds,\n} from '../../../global/helpers';\nimport { selectChatFullInfo } from '../../../global/selectors';\nimport { unique } from '../../../util/iteratees';\nimport sortChatIds from '../../common/helpers/sortChatIds';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport PeerPicker from '../../common/pickers/PeerPicker';\nimport PickerModal from '../../common/pickers/PickerModal';\n\ntype OwnProps = {\n  isOpen?: boolean;\n  // eslint-disable-next-line react/no-unused-prop-types\n  giveawayChatId?: string;\n  selectionLimit: number;\n  initialSelectedIds: string[];\n  onSelectedIdsConfirmed: (newSelectedIds: string[]) => void;\n  onClose: NoneToVoidFunction;\n};\n\ntype StateProps = {\n  members?: ApiChatMember[];\n  adminMembersById?: Record<string, ApiChatMember>;\n};\n\nconst GiveawayUserPickerModal = ({\n  isOpen,\n  selectionLimit,\n  members,\n  adminMembersById,\n  initialSelectedIds,\n  onSelectedIdsConfirmed,\n  onClose,\n}: OwnProps & StateProps) => {\n  const { showNotification } = getActions();\n  const lang = useOldLang();\n\n  const [searchQuery, setSearchQuery] = useState<string>('');\n  const [selectedIds, setSelectedIds] = useState<string[]>(initialSelectedIds);\n\n  useEffect(() => {\n    setSelectedIds(initialSelectedIds);\n  }, [initialSelectedIds]);\n\n  const memberIds = useMemo(() => {\n    const global = getGlobal();\n    const { byId, statusesById } = global.users;\n    if (!members?.length) {\n      return [];\n    }\n\n    const adminIdsSet = adminMembersById && new Set(Object.keys(adminMembersById));\n\n    const userIds = sortUserIds(\n      members.map(({ userId }) => userId),\n      byId,\n      statusesById,\n    );\n\n    return adminIdsSet ? userIds.filter((userId) => !adminIdsSet.has(userId)) : userIds;\n  }, [adminMembersById, members]);\n\n  const displayedMemberIds = useMemo(() => {\n    const usersById = getGlobal().users.byId;\n    const filteredContactIds = memberIds ? filterUsersByName(memberIds, usersById, searchQuery) : [];\n\n    return sortChatIds(unique(filteredContactIds).filter((userId) => {\n      const user = usersById[userId];\n      if (!user) {\n        return true;\n      }\n\n      return !isUserBot(user);\n    }));\n  }, [memberIds, searchQuery]);\n\n  const handleSelectedMemberIdsChange = useLastCallback((newSelectedIds: string[]) => {\n    if (newSelectedIds.length > selectionLimit) {\n      showNotification({\n        message: lang('BoostingSelectUpToWarningUsers', selectionLimit),\n      });\n      return;\n    }\n    setSelectedIds(newSelectedIds);\n  });\n\n  const handleModalConfirm = useLastCallback(() => {\n    onSelectedIdsConfirmed(selectedIds);\n    onClose();\n  });\n\n  return (\n    <PickerModal\n      isOpen={isOpen}\n      onClose={onClose}\n      title={lang('BoostingAwardSpecificUsers')}\n      hasCloseButton\n      shouldAdaptToSearch\n      withFixedHeight\n      confirmButtonText={lang('Save')}\n      onConfirm={handleModalConfirm}\n      onEnter={handleModalConfirm}\n    >\n      <PeerPicker\n        itemIds={displayedMemberIds}\n        selectedIds={selectedIds}\n        filterValue={searchQuery}\n        filterPlaceholder={lang('Search')}\n        onSelectedIdsChange={handleSelectedMemberIdsChange}\n        onFilterChange={setSearchQuery}\n        isSearchable\n        withDefaultPadding\n        withStatus\n        allowMultiple\n        itemInputType=\"checkbox\"\n      />\n    </PickerModal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>((global, { giveawayChatId }): StateProps => {\n  const chatFullInfo = giveawayChatId ? selectChatFullInfo(global, giveawayChatId) : undefined;\n  if (!chatFullInfo) {\n    return {};\n  }\n\n  return {\n    members: chatFullInfo.members,\n    adminMembersById: chatFullInfo.adminMembersById,\n  };\n})(GiveawayUserPickerModal));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"P0kLOw15\",\"button\":\"ILuhBsJG\",\"main\":\"SqiN63Ef\",\"logo\":\"Me2hCsMs\",\"header-text\":\"UVDnB0Wq\",\"headerText\":\"UVDnB0Wq\",\"description\":\"v5yGzV6v\",\"header\":\"U6XNIToQ\",\"hidden-header\":\"tDZc21ZC\",\"hiddenHeader\":\"tDZc21ZC\",\"close-button\":\"OX6_HqAd\",\"closeButton\":\"OX6_HqAd\",\"premium-header-text\":\"v6hiGpEn\",\"premiumHeaderText\":\"v6hiGpEn\",\"primary-footer-text\":\"YGbiSd3e\",\"primaryFooterText\":\"YGbiSd3e\",\"section\":\"rZRDMqUL\",\"types\":\"sQ5PkKEs\",\"footer\":\"hD_AEzjd\",\"options\":\"JjDLNrKG\",\"giveawayTitle\":\"p5Hn4Q6E\",\"subscription\":\"rniPcuiP\",\"starSubscription\":\"bzRAETfR\",\"subscriptionOption\":\"ggZrgZnv\",\"status\":\"q1y2qUTn\",\"info\":\"IsT38nlq\",\"titleInfo\":\"nmsfBLut\",\"month\":\"TsGuei3B\",\"quantity\":\"G9H3tm6D\",\"floatingBadge\":\"xKl2UeV8\",\"floatingBadgeColor\":\"HLx3wTBD\",\"floatingBadgeButtonColor\":\"JLH0MExt\",\"floatingBadgeIcon\":\"Ftr7zf2v\",\"floatingBadgeValue\":\"Ce0Ob2tg\",\"subscriptionFooter\":\"rDFQAfTt\",\"premiumFeatures\":\"eNQ_nrKr\",\"dateButton\":\"GeKqKRgP\",\"title\":\"LZ3vPzak\",\"checkboxSection\":\"Z9QJQ6IS\",\"prizesSection\":\"eQVP0Nx8\",\"prizesInput\":\"qMYNwiUZ\",\"subLabelClassName\":\"txXJxVFu\",\"prepaidImg\":\"ldn4mh2T\",\"addButton\":\"sOXvh85b\",\"addChannel\":\"aGbyR60s\",\"removeChannel\":\"UZdErfVI\",\"starOptions\":\"cLhNkYPB\",\"transition\":\"vEI2Wewt\"};","import type { ChangeEvent } from 'react';\nimport type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo, useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../../global';\n\nimport type {\n  ApiCountry,\n  ApiPremiumGiftCodeOption,\n  ApiPrepaidGiveaway,\n  ApiPrepaidStarsGiveaway,\n  ApiStarGiveawayOption,\n  ApiTypePrepaidGiveaway,\n  ApiUser,\n} from '../../../api/types';\n\nimport {\n  GIVEAWAY_BOOST_PER_PREMIUM,\n  GIVEAWAY_MAX_ADDITIONAL_CHANNELS,\n  GIVEAWAY_MAX_ADDITIONAL_COUNTRIES,\n  GIVEAWAY_MAX_ADDITIONAL_USERS,\n} from '../../../config';\nimport { getUserFullName, isChatChannel } from '../../../global/helpers';\nimport {\n  selectChat,\n  selectTabState,\n} from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { formatDateTimeToString } from '../../../util/dates/dateFormat';\nimport { unique } from '../../../util/iteratees';\nimport renderText from '../../common/helpers/renderText';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport CalendarModal from '../../common/CalendarModal';\nimport CountryPickerModal from '../../common/CountryPickerModal';\nimport GroupChatInfo from '../../common/GroupChatInfo';\nimport Icon from '../../common/icons/Icon';\nimport StarTopupOptionList from '../../modals/stars/StarTopupOptionList';\nimport Button from '../../ui/Button';\nimport ConfirmDialog from '../../ui/ConfirmDialog';\nimport InputText from '../../ui/InputText';\nimport Link from '../../ui/Link';\nimport ListItem from '../../ui/ListItem';\nimport Modal from '../../ui/Modal';\nimport RadioGroup from '../../ui/RadioGroup';\nimport RangeSliderWithMarks from '../../ui/RangeSliderWithMarks';\nimport Switcher from '../../ui/Switcher';\nimport GiveawayChannelPickerModal from './GiveawayChannelPickerModal';\nimport GiveawayTypeOption from './GiveawayTypeOption';\nimport GiveawayUserPickerModal from './GiveawayUserPickerModal';\nimport PremiumSubscriptionOption from './PremiumSubscriptionOption';\n\nimport styles from './GiveawayModal.module.scss';\n\nimport GiftBlueRound from '../../../assets/premium/GiftBlueRound.svg';\nimport GiftGreenRound from '../../../assets/premium/GiftGreenRound.svg';\nimport GiftRedRound from '../../../assets/premium/GiftRedRound.svg';\nimport GiftStar from '../../../assets/premium/GiftStar.svg';\nimport PremiumLogo from '../../../assets/premium/PremiumLogo.svg';\n\nexport type OwnProps = {\n  isOpen?: boolean;\n  userIds?: string[];\n};\n\ntype StateProps = {\n  chatId?: string;\n  gifts?: ApiPremiumGiftCodeOption[];\n  isOpen?: boolean;\n  fromUser?: ApiUser;\n  selectedMemberList?: string[] | undefined;\n  selectedChannelList?: string[] | undefined;\n  giveawayBoostPerPremiumLimit?: number;\n  userSelectionLimit?: number;\n  countryList: ApiCountry[];\n  prepaidGiveaway?: ApiTypePrepaidGiveaway;\n  countrySelectionLimit: number | undefined;\n  isChannel?: boolean;\n  isStarsGiftsEnabled?: boolean;\n  starsGiftOptions?: ApiStarGiveawayOption[] | undefined;\n};\n\ntype GiveawayAction = 'createPremiumGiveaway' | 'createStarsGiveaway';\ntype ApiGiveawayType = 'premium_giveaway' | 'stars_giveaway';\ntype SubscribersType = 'all' | 'new';\n\ninterface TypeOption {\n  name: string;\n  text: string;\n  value: ApiGiveawayType;\n  img: string;\n  actions?: GiveawayAction;\n  isLink: boolean;\n  onClickAction?: () => void;\n}\n\nconst DEFAULT_CUSTOM_EXPIRE_DATE = 86400 * 3 * 1000; // 3 days\nconst MAX_ADDITIONAL_CHANNELS = 9;\nconst DEFAULT_BOOST_COUNT = 5;\n\nconst GIVEAWAY_IMG_LIST: { [key: number]: string } = {\n  3: GiftGreenRound,\n  6: GiftBlueRound,\n  12: GiftRedRound,\n};\n\nconst GiveawayModal: FC<OwnProps & StateProps> = ({\n  chatId,\n  gifts,\n  isOpen,\n  isChannel,\n  selectedMemberList,\n  selectedChannelList,\n  giveawayBoostPerPremiumLimit = GIVEAWAY_BOOST_PER_PREMIUM,\n  countryList,\n  prepaidGiveaway,\n  countrySelectionLimit = GIVEAWAY_MAX_ADDITIONAL_COUNTRIES,\n  userSelectionLimit = GIVEAWAY_MAX_ADDITIONAL_USERS,\n  isStarsGiftsEnabled,\n  starsGiftOptions,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const dialogRef = useRef<HTMLDivElement>(null);\n  const {\n    closeGiveawayModal, openInvoice, openPremiumModal,\n    launchPrepaidGiveaway, launchPrepaidStarsGiveaway,\n  } = getActions();\n\n  const lang = useOldLang();\n  const [isCalendarOpened, openCalendar, closeCalendar] = useFlag();\n  const [isCountryPickerModalOpen, openCountryPickerModal, closeCountryPickerModal] = useFlag();\n  const [isConfirmModalOpen, openConfirmModal, closeConfirmModal] = useFlag();\n  const [isUserPickerModalOpen, openUserPickerModal, closeUserPickerModal] = useFlag();\n  const [isChannelPickerModalOpen, openChannelPickerModal, closeChannelPickerModal] = useFlag();\n\n  const TYPE_OPTIONS: TypeOption[] = [{\n    name: 'Premium.Title',\n    text: 'BoostingWinnersRandomly',\n    value: 'premium_giveaway',\n    img: GiftBlueRound,\n    actions: 'createPremiumGiveaway',\n    isLink: true,\n    onClickAction: () => {\n      openUserPickerModal();\n    },\n  }];\n\n  if (isStarsGiftsEnabled) {\n    TYPE_OPTIONS.push({\n      name: 'TelegramStars',\n      text: 'BoostingWinnersRandomly',\n      value: 'stars_giveaway',\n      img: GiftStar,\n      actions: 'createStarsGiveaway',\n      isLink: false,\n    });\n  }\n\n  const [customExpireDate, setCustomExpireDate] = useState<number>(Date.now() + DEFAULT_CUSTOM_EXPIRE_DATE);\n  const [isHeaderHidden, setHeaderHidden] = useState(true);\n  const [selectedRandomUserCount, setSelectedRandomUserCount] = useState<number>(DEFAULT_BOOST_COUNT);\n  const [selectedGiveawayOption, setGiveawayOption] = useState<ApiGiveawayType>(TYPE_OPTIONS[0].value);\n  const [selectedStarOption, setSelectedStarOption] = useState<ApiStarGiveawayOption | undefined>();\n  const [selectedSubscriberOption, setSelectedSubscriberOption] = useState<SubscribersType>('all');\n  const [selectedMonthOption, setSelectedMonthOption] = useState<number | undefined>();\n  const [selectedUserIds, setSelectedUserIds] = useState<string[]>([]);\n  const [selectedChannelIds, setSelectedChannelIds] = useState<string[]>([]);\n  const [selectedCountryIds, setSelectedCountryIds] = useState<string[] | undefined>([]);\n  const [shouldShowWinners, setShouldShowWinners] = useState<boolean>(false);\n  const [shouldShowPrizes, setShouldShowPrizes] = useState<boolean>(false);\n  const [prizeDescription, setPrizeDescription] = useState<string | undefined>(undefined);\n  const [dataPrepaidGiveaway, setDataPrepaidGiveaway] = useState<ApiPrepaidGiveaway | undefined>(undefined);\n  const [\n    dataStarsPrepaidGiveaway, setDataStarsPrepaidGiveaway,\n  ] = useState<ApiPrepaidStarsGiveaway | undefined>(undefined);\n\n  const isPremiumGiveaway = selectedGiveawayOption === 'premium_giveaway';\n  const isStarsGiveaway = selectedGiveawayOption === 'stars_giveaway';\n  const selectedUserCount = isPremiumGiveaway\n  && !selectedUserIds.length ? selectedRandomUserCount : selectedUserIds.length;\n  const boostQuantity = selectedUserCount * giveawayBoostPerPremiumLimit;\n  const boostStarsQuantity = selectedStarOption?.yearlyBoosts;\n\n  const SUBSCRIBER_OPTIONS = useMemo(() => [\n    {\n      value: 'all',\n      label: lang(isChannel ? 'BoostingAllSubscribers' : 'BoostingAllMembers'),\n      subLabel: selectedCountryIds && selectedCountryIds.length > 0\n        ? lang('Giveaway.ReceiverType.Countries', selectedCountryIds.length)\n        : lang('BoostingFromAllCountries'),\n    },\n    {\n      value: 'new',\n      label: lang(isChannel ? 'BoostingNewSubscribers' : 'BoostingNewMembers'),\n      subLabel: selectedCountryIds && selectedCountryIds.length > 0\n        ? lang('Giveaway.ReceiverType.Countries', selectedCountryIds.length)\n        : lang('BoostingFromAllCountries'),\n    },\n  ], [isChannel, lang, selectedCountryIds]);\n\n  const monthQuantity = lang('Months', selectedMonthOption);\n  const isStarsPrepaidGiveaway = prepaidGiveaway?.type === 'starsGiveaway';\n  const isPremiumPrepaidGiveaway = prepaidGiveaway?.type === 'giveaway';\n\n  const selectedGift = useMemo(() => {\n    return gifts?.find((gift) => gift.months === selectedMonthOption && gift.users === selectedUserCount);\n  }, [gifts, selectedMonthOption, selectedUserCount]);\n\n  const selectedStarsGift = useMemo(() => {\n    return starsGiftOptions?.find((gift) => {\n      return isStarsPrepaidGiveaway && gift.stars === (dataStarsPrepaidGiveaway?.stars);\n    });\n  }, [dataStarsPrepaidGiveaway, starsGiftOptions, isStarsPrepaidGiveaway]);\n\n  const filteredGifts = useMemo(() => {\n    return gifts?.filter((gift) => gift.users === selectedUserCount);\n  }, [gifts, selectedUserCount]);\n\n  const fullMonthlyAmount = useMemo(() => {\n    const basicGift = filteredGifts?.reduce((acc, gift) => {\n      return gift.amount < acc.amount ? gift : acc;\n    }, filteredGifts[0]);\n\n    return basicGift && Math.floor(basicGift.amount / basicGift.months);\n  }, [filteredGifts]);\n\n  const userCountOptions = useMemo(() => {\n    return unique((gifts?.map((winner) => winner.users) || [])).sort((a, b) => a - b);\n  }, [gifts]);\n\n  const winnerCountOptions = useMemo(() => {\n    return unique((selectedStarOption?.winners?.map((winner) => winner.users) || [])).sort((a, b) => a - b);\n  }, [selectedStarOption]);\n\n  useEffect(() => {\n    if (isOpen && gifts?.length && !isStarsPrepaidGiveaway) {\n      setSelectedMonthOption(gifts?.[0].months);\n    }\n  }, [isOpen, gifts, isStarsPrepaidGiveaway]);\n\n  useEffect(() => {\n    if (isOpen && starsGiftOptions?.length && !isPremiumPrepaidGiveaway) {\n      setSelectedStarOption(starsGiftOptions?.[0]);\n    }\n  }, [isOpen, starsGiftOptions, isPremiumPrepaidGiveaway]);\n\n  useEffect(() => {\n    if (isOpen && isStarsPrepaidGiveaway) {\n      setSelectedRandomUserCount(prepaidGiveaway.quantity);\n      setDataStarsPrepaidGiveaway(prepaidGiveaway);\n    }\n  }, [isOpen, isStarsPrepaidGiveaway, prepaidGiveaway]);\n\n  useEffect(() => {\n    if (isOpen && isPremiumPrepaidGiveaway) {\n      setSelectedRandomUserCount(prepaidGiveaway.quantity);\n      setDataPrepaidGiveaway(prepaidGiveaway);\n      setSelectedMonthOption(prepaidGiveaway.months);\n    }\n  }, [isOpen, isPremiumPrepaidGiveaway, prepaidGiveaway]);\n\n  useEffect(() => {\n    if (selectedMemberList) {\n      setSelectedUserIds(selectedMemberList);\n    }\n  }, [selectedMemberList]);\n\n  useEffect(() => {\n    if (selectedChannelList) {\n      setSelectedChannelIds(selectedChannelList);\n    }\n  }, [selectedChannelList]);\n\n  const handlePremiumClick = useLastCallback(() => {\n    openPremiumModal();\n  });\n\n  const handleClose = useLastCallback(() => {\n    setDataStarsPrepaidGiveaway(undefined);\n    setDataPrepaidGiveaway(undefined);\n    setSelectedStarOption(undefined);\n    setSelectedMonthOption(undefined);\n    setSelectedRandomUserCount(DEFAULT_BOOST_COUNT);\n    closeGiveawayModal();\n  });\n\n  const handleClick = useLastCallback(() => {\n    if (isPremiumGiveaway) {\n      if (selectedUserIds?.length) {\n        openInvoice({\n          type: 'giftcode',\n          boostChannelId: chatId!,\n          userIds: selectedUserIds,\n          currency: selectedGift!.currency,\n          amount: selectedGift!.amount,\n          option: selectedGift!,\n        });\n      } else {\n        openInvoice({\n          type: 'giveaway',\n          chatId: chatId!,\n          additionalChannelIds: selectedChannelIds,\n          isOnlyForNewSubscribers: selectedSubscriberOption === 'new',\n          countries: selectedCountryIds,\n          areWinnersVisible: shouldShowWinners,\n          prizeDescription,\n          untilDate: customExpireDate / 1000,\n          currency: selectedGift!.currency,\n          amount: selectedGift!.amount,\n          option: selectedGift!,\n        });\n      }\n    } else {\n      openInvoice({\n        type: 'starsgiveaway',\n        chatId: chatId!,\n        additionalChannelIds: selectedChannelIds,\n        isOnlyForNewSubscribers: selectedSubscriberOption === 'new',\n        countries: selectedCountryIds,\n        areWinnersVisible: shouldShowWinners,\n        prizeDescription,\n        untilDate: customExpireDate / 1000,\n        currency: selectedStarOption!.currency,\n        amount: selectedStarOption!.amount,\n        stars: selectedStarOption!.stars,\n        users: selectedRandomUserCount,\n      });\n    }\n\n    handleClose();\n  });\n\n  const confirmLaunchPrepaidGiveaway = useLastCallback(() => {\n    if (isStarsPrepaidGiveaway) {\n      launchPrepaidStarsGiveaway({\n        chatId: chatId!,\n        giveawayId: dataStarsPrepaidGiveaway!.id,\n        paymentPurpose: {\n          additionalChannelIds: selectedChannelIds,\n          countries: selectedCountryIds,\n          prizeDescription,\n          areWinnersVisible: shouldShowWinners,\n          untilDate: customExpireDate / 1000,\n          stars: dataStarsPrepaidGiveaway!.stars,\n          currency: selectedStarsGift!.currency,\n          amount: selectedStarsGift!.amount,\n          users: dataStarsPrepaidGiveaway!.quantity,\n        },\n      });\n    } else {\n      launchPrepaidGiveaway({\n        chatId: chatId!,\n        giveawayId: dataPrepaidGiveaway!.id,\n        paymentPurpose: {\n          additionalChannelIds: selectedChannelIds,\n          countries: selectedCountryIds,\n          prizeDescription,\n          areWinnersVisible: shouldShowWinners,\n          untilDate: customExpireDate / 1000,\n          currency: selectedGift!.currency,\n          amount: selectedGift!.amount,\n        },\n      });\n    }\n\n    closeConfirmModal();\n    handleClose();\n  });\n\n  const handleRandomUserCountChange = useLastCallback((newValue) => {\n    setSelectedRandomUserCount(newValue);\n  });\n\n  const handleWinnerCountChange = useLastCallback((newValue) => {\n    setSelectedRandomUserCount(newValue);\n  });\n\n  const handlePrizeDescriptionChange = useLastCallback((e: ChangeEvent<HTMLInputElement>) => {\n    setPrizeDescription(e.target.value);\n  });\n\n  const userNames = useMemo(() => {\n    const usersById = getGlobal().users.byId;\n    return selectedUserIds?.map((userId) => getUserFullName(usersById[userId])).join(', ');\n  }, [selectedUserIds]);\n\n  function handleScroll(e: React.UIEvent<HTMLDivElement>) {\n    const { scrollTop } = e.currentTarget;\n\n    setHeaderHidden(scrollTop <= 150);\n  }\n\n  const handleChangeSubscriberOption = useLastCallback((value) => {\n    setSelectedSubscriberOption(value);\n  });\n\n  const handleChangeTypeOption = useLastCallback((value: ApiGiveawayType) => {\n    setGiveawayOption(value);\n    setSelectedUserIds([]);\n    setSelectedRandomUserCount(DEFAULT_BOOST_COUNT);\n  });\n\n  const handleExpireDateChange = useLastCallback((date: Date) => {\n    setCustomExpireDate(date.getTime());\n    closeCalendar();\n  });\n\n  const handleSetCountriesListChange = useLastCallback((value: string[]) => {\n    setSelectedCountryIds(value);\n  });\n\n  const handleSelectedUserIdsChange = useLastCallback((newSelectedIds: string[]) => {\n    setSelectedUserIds(newSelectedIds);\n    if (!newSelectedIds.length) {\n      setGiveawayOption('premium_giveaway');\n    }\n  });\n\n  const handleSelectedChannelIdsChange = useLastCallback((newSelectedIds: string[]) => {\n    setSelectedChannelIds(newSelectedIds);\n  });\n\n  const handleShouldShowWinnersChange = useLastCallback((e: ChangeEvent<HTMLInputElement>) => {\n    setShouldShowWinners(e.target.checked);\n  });\n\n  const handleShouldShowPrizesChange = useLastCallback((e: ChangeEvent<HTMLInputElement>) => {\n    setShouldShowPrizes(e.target.checked);\n  });\n\n  const onClickActionHandler = useLastCallback(() => {\n    openCountryPickerModal();\n  });\n\n  const handleStarClick = useLastCallback((option) => {\n    setSelectedStarOption(option);\n  });\n\n  function renderTypeOptions() {\n    return (\n      <div className={styles.options}>\n        {TYPE_OPTIONS.map((option) => {\n          return (\n            <GiveawayTypeOption\n              key={option.name}\n              name={option.name}\n              text={option.text}\n              option={option.value}\n              img={option.img}\n              onChange={handleChangeTypeOption}\n              checked={selectedGiveawayOption === option.value}\n              isLink={option.isLink}\n              userNames={userNames}\n              selectedMemberIds={selectedUserIds}\n              onClickAction={option.onClickAction}\n            />\n          );\n        })}\n      </div>\n    );\n  }\n\n  function renderSubscribersOptions() {\n    return (\n      <div className={styles.options}>\n        <RadioGroup\n          name=\"subscribers\"\n          options={SUBSCRIBER_OPTIONS}\n          selected={selectedSubscriberOption}\n          onChange={handleChangeSubscriberOption}\n          onClickAction={onClickActionHandler}\n          subLabelClassName={styles.subLabelClassName}\n          isLink\n        />\n      </div>\n    );\n  }\n\n  function renderSubscriptionOptions() {\n    return (\n      <div className={styles.options}>\n        {filteredGifts?.map((gift) => (\n          <PremiumSubscriptionOption\n            isGiveaway\n            key={gift.months}\n            option={gift}\n            fullMonthlyAmount={fullMonthlyAmount!}\n            checked={gift.months === selectedMonthOption}\n            onChange={setSelectedMonthOption}\n          />\n        ))}\n      </div>\n    );\n  }\n\n  function renderPremiumFeaturesLink() {\n    const info = lang('GiftPremiumListFeaturesAndTerms');\n    const parts = info.match(/([^*]*)\\*([^*]+)\\*(.*)/);\n\n    if (!parts || parts.length < 4) {\n      return undefined;\n    }\n\n    return (\n      <p className={styles.premiumFeatures}>\n        {parts[1]}\n        <Link isPrimary onClick={handlePremiumClick}>{parts[2]}</Link>\n        {parts[3]}\n      </p>\n    );\n  }\n\n  function deleteParticipantsHandler(id: string) {\n    const filteredChannelIds = selectedChannelIds.filter((channelId) => channelId !== id);\n    setSelectedChannelIds(filteredChannelIds);\n  }\n\n  function renderStarOptionList() {\n    return (\n      <StarTopupOptionList\n        className={styles.starOptions}\n        options={starsGiftOptions}\n        selectedStarCount={selectedRandomUserCount}\n        selectedStarOption={selectedStarOption}\n        onClick={handleStarClick}\n      />\n    );\n  }\n\n  function renderGiveawayOptionList() {\n    return (\n      <>\n        <div className={styles.section}>\n          <h2 className={styles.giveawayTitle}>\n            {lang('BoostingChannelsGroupsIncludedGiveaway')}\n          </h2>\n\n          <ListItem\n            inactive\n            className=\"chat-item-clickable contact-list-item\"\n          >\n            <GroupChatInfo\n              chatId={chatId!}\n              status={lang(isChannel ? 'BoostingChannelWillReceiveBoost'\n                : 'BoostingGroupWillReceiveBoost', boostQuantity || boostStarsQuantity, 'i')}\n            />\n          </ListItem>\n\n          {selectedChannelIds?.map((channelId) => {\n            return (\n              <ListItem\n                ripple\n                key={channelId}\n                className=\"chat-item-clickable contact-list-item\"\n                /* eslint-disable-next-line react/jsx-no-bind */\n                onClick={() => deleteParticipantsHandler(channelId)}\n                rightElement={(<Icon name=\"close\" className={styles.removeChannel} />)}\n              >\n                <GroupChatInfo\n                  chatId={channelId.toString()}\n                />\n              </ListItem>\n            );\n          })}\n\n          {selectedChannelIds.length < MAX_ADDITIONAL_CHANNELS && (\n            <ListItem\n              icon=\"add\"\n              ripple\n              onClick={openChannelPickerModal}\n              className={styles.addButton}\n              iconClassName={styles.addChannel}\n            >\n              {lang('BoostingAddChannelOrGroup')}\n            </ListItem>\n          )}\n        </div>\n\n        <div className={styles.section}>\n          <h2 className={styles.giveawayTitle}>\n            {lang('BoostingEligibleUsers')}\n          </h2>\n\n          {renderSubscribersOptions()}\n        </div>\n\n        <div className={styles.subscription}>\n          {renderText(lang(isChannel ? 'BoostGift.LimitSubscribersInfo' : 'lng_giveaway_users_about_group'))}\n        </div>\n\n        <div className={styles.section}>\n          <div className={styles.checkboxSection}>\n            <h2 className={styles.title}>\n              {lang('BoostingGiveawayAdditionalPrizes')}\n            </h2>\n\n            <Switcher\n              label={lang('BoostingGiveawayAdditionalPrizes')}\n              checked={shouldShowPrizes}\n              onChange={handleShouldShowPrizesChange}\n            />\n          </div>\n\n          {shouldShowPrizes && (\n            <div className={styles.prizesSection}>\n              <h2 className={styles.title}>\n                {selectedRandomUserCount}\n              </h2>\n              <InputText\n                className={styles.prizesInput}\n                value={prizeDescription}\n                onChange={handlePrizeDescriptionChange}\n                label={lang('BoostingGiveawayEnterYourPrize')}\n              />\n            </div>\n          )}\n        </div>\n\n        {shouldShowPrizes ? (\n          !isStarsGiveaway && !isStarsPrepaidGiveaway ? (\n            <div className={styles.subscription}>\n              {prizeDescription?.length ? renderText(lang('BoostingGiveawayAdditionPrizeCountNameHint',\n                dataPrepaidGiveaway\n                  ? [dataPrepaidGiveaway.quantity, prizeDescription, monthQuantity]\n                  : [selectedUserCount, prizeDescription, monthQuantity],\n                undefined,\n                selectedMonthOption), ['simple_markdown']) : renderText(lang('BoostingGiveawayAdditionPrizeCountHint',\n                dataPrepaidGiveaway\n                  ? [dataPrepaidGiveaway.quantity, monthQuantity]\n                  : [selectedUserCount, monthQuantity],\n                undefined,\n                selectedMonthOption), ['simple_markdown'])}\n            </div>\n          ) : undefined\n        ) : (\n          <div className={styles.subscription}>\n            {renderText(lang('BoostingGiveawayAdditionPrizeHint'))}\n          </div>\n        )}\n\n        <div className={styles.section}>\n          <div className={styles.checkboxSection}>\n            <h2 className={styles.title}>\n              {lang('BoostingGiveawayShowWinners')}\n            </h2>\n\n            <Switcher\n              label={lang('BoostingGiveawayAdditionalPrizes')}\n              checked={shouldShowWinners}\n              onChange={handleShouldShowWinnersChange}\n            />\n          </div>\n        </div>\n\n        <div className={styles.subscription}>\n          {renderText(lang('BoostingGiveawayShowWinnersHint'))}\n        </div>\n\n        <div className={buildClassName(styles.section,\n          (dataPrepaidGiveaway || dataStarsPrepaidGiveaway || isStarsGiveaway) && styles.subscriptionFooter)}\n        >\n          <h2 className={styles.giveawayTitle}>\n            {lang('BoostingDateWhenGiveawayEnds')}\n          </h2>\n\n          <Button\n            ariaLabel={lang('BoostGift.DateEnds')}\n            className={buildClassName(styles.dateButton, 'expire-limit')}\n            isText\n            onClick={openCalendar}\n          >\n            <h3 className={styles.title}>\n              {lang('BoostGift.DateEnds')}\n            </h3>\n            {formatDateTimeToString(customExpireDate, lang.code)}\n          </Button>\n        </div>\n      </>\n    );\n  }\n\n  return (\n    <Modal\n      className={styles.root}\n      onClose={handleClose}\n      isOpen={isOpen}\n      dialogRef={dialogRef}\n      onEnter={(dataPrepaidGiveaway || dataStarsPrepaidGiveaway) ? openConfirmModal : handleClick}\n    >\n      <div className={styles.main} onScroll={handleScroll}>\n        <Button\n          round\n          size=\"smaller\"\n          className={styles.closeButton}\n          color=\"translucent\"\n          onClick={handleClose}\n          ariaLabel={lang('Close')}\n        >\n          <Icon name=\"close\" />\n        </Button>\n        <img className={styles.logo} src={PremiumLogo} alt=\"\" draggable={false} />\n        <h2 className={styles.headerText}>\n          {renderText(lang('BoostingBoostsViaGifts'))}\n        </h2>\n        <div className={styles.description}>\n          {renderText(lang(isChannel ? 'BoostingGetMoreBoost' : 'BoostingGetMoreBoostsGroup'))}\n        </div>\n        <div className={buildClassName(styles.header, isHeaderHidden && styles.hiddenHeader)}>\n          <h2 className={styles.premiumHeaderText}>\n            {lang('BoostingBoostsViaGifts')}\n          </h2>\n        </div>\n        {(dataPrepaidGiveaway || dataStarsPrepaidGiveaway) ? (\n          <div className={styles.status}>\n            <div>\n              {dataStarsPrepaidGiveaway ? (\n                <img className={styles.prepaidImg} src={GiftStar} alt=\"\" />\n              ) : (\n                <img className={styles.prepaidImg} src={GIVEAWAY_IMG_LIST[dataPrepaidGiveaway!.months]} alt=\"\" />\n              )}\n            </div>\n            <div className={styles.info}>\n              <h3 className={styles.title}>\n                {dataStarsPrepaidGiveaway ? lang('Giveaway.Stars.Prepaid.Title', dataStarsPrepaidGiveaway?.stars)\n                  : lang('BoostingTelegramPremiumCountPlural', dataPrepaidGiveaway!.quantity)}\n              </h3>\n              <p className={styles.month}>\n                {dataStarsPrepaidGiveaway ? lang('Giveaway.Stars.Prepaid.Desc', dataStarsPrepaidGiveaway?.quantity)\n                  : lang('PrepaidGiveawayMonths', dataPrepaidGiveaway?.months)}\n              </p>\n            </div>\n            <div className={styles.quantity}>\n              <div className={buildClassName(styles.floatingBadge, styles.floatingBadgeColor)}>\n                <Icon name=\"boost\" className={styles.floatingBadgeIcon} />\n                <div className={styles.floatingBadgeValue} dir={lang.isRtl ? 'rtl' : undefined}>\n                  {dataStarsPrepaidGiveaway ? dataStarsPrepaidGiveaway?.boosts\n                    : dataPrepaidGiveaway!.quantity * (giveawayBoostPerPremiumLimit ?? GIVEAWAY_BOOST_PER_PREMIUM)}\n                </div>\n              </div>\n            </div>\n          </div>\n        ) : (\n          <div className={buildClassName(styles.section, styles.types)}>\n            {renderTypeOptions()}\n          </div>\n        )}\n\n        {isPremiumGiveaway && !selectedUserIds?.length && (\n          <>\n            {!dataPrepaidGiveaway && !dataStarsPrepaidGiveaway && (\n              <>\n                <div className={styles.section}>\n                  <div className={styles.quantity}>\n                    <h2 className={styles.giveawayTitle}>\n                      {lang('BoostingQuantityPrizes')}\n                    </h2>\n                    <div className={buildClassName(styles.floatingBadge, styles.floatingBadgeColor)}>\n                      <Icon name=\"boost\" className={styles.floatingBadgeIcon} />\n                      <div className={styles.floatingBadgeValue} dir={lang.isRtl ? 'rtl' : undefined}>\n                        {boostQuantity}\n                      </div>\n                    </div>\n                  </div>\n\n                  <RangeSliderWithMarks\n                    rangeCount={selectedUserCount}\n                    marks={userCountOptions}\n                    onChange={handleRandomUserCountChange}\n                  />\n                </div>\n\n                <div className={styles.subscription}>\n                  {renderText(lang('BoostingChooseHowMany'))}\n                </div>\n              </>\n            )}\n\n            {renderGiveawayOptionList()}\n          </>\n        )}\n\n        {isStarsGiveaway && (\n          <>\n            {!dataStarsPrepaidGiveaway && !dataPrepaidGiveaway && (\n              <>\n                <div className={styles.section}>\n                  <div className={styles.quantity}>\n                    <h2 className={styles.giveawayTitle}>\n                      {lang('BoostingStarsOptions')}\n                    </h2>\n                    <div className={buildClassName(styles.floatingBadge, styles.floatingBadgeColor)}>\n                      <Icon name=\"boost\" className={styles.floatingBadgeIcon} />\n                      <div className={styles.floatingBadgeValue} dir={lang.isRtl ? 'rtl' : undefined}>\n                        {boostStarsQuantity}\n                      </div>\n                    </div>\n                  </div>\n\n                  {renderStarOptionList()}\n                </div>\n\n                <div className={buildClassName(styles.subscription, styles.starSubscription)}>\n                  {renderText(lang('BoostGift.Stars.Info'))}\n                </div>\n\n                <div className={styles.section}>\n                  <h2 className={styles.giveawayTitle}>\n                    {lang('BoostingStarsQuantityPrizes')}\n                  </h2>\n\n                  <RangeSliderWithMarks\n                    rangeCount={selectedRandomUserCount}\n                    marks={winnerCountOptions}\n                    onChange={handleWinnerCountChange}\n                  />\n\n                  <div className={styles.subscription}>\n                    {renderText(lang('BoostingStarsQuantityPrizesInfo'))}\n                  </div>\n                </div>\n              </>\n            )}\n\n            {renderGiveawayOptionList()}\n          </>\n        )}\n\n        {!dataPrepaidGiveaway && !dataStarsPrepaidGiveaway && isPremiumGiveaway && (\n          <>\n            <div className={styles.section}>\n              <h2 className={styles.giveawayTitle}>\n                {lang('BoostingDurationOfPremium')}\n              </h2>\n\n              {renderSubscriptionOptions()}\n            </div>\n\n            <div className={buildClassName(styles.subscription, styles.subscriptionFooter)}>\n              {renderPremiumFeaturesLink()}\n            </div>\n          </>\n        )}\n\n        {selectedGiveawayOption && (\n          <div className={styles.footer}>\n            <Button\n              className={styles.button}\n              onClick={(dataPrepaidGiveaway || dataStarsPrepaidGiveaway) ? openConfirmModal : handleClick}\n            >\n              {lang('BoostingStartGiveaway')}\n            </Button>\n          </div>\n        )}\n      </div>\n      <CalendarModal\n        isOpen={isCalendarOpened}\n        isFutureMode\n        withTimePicker\n        onClose={closeCalendar}\n        onSubmit={handleExpireDateChange}\n        selectedAt={customExpireDate}\n        submitButtonLabel={lang('Save')}\n      />\n      <CountryPickerModal\n        isOpen={isCountryPickerModalOpen}\n        onClose={closeCountryPickerModal}\n        countryList={countryList}\n        onSubmit={handleSetCountriesListChange}\n        selectionLimit={countrySelectionLimit}\n      />\n      <GiveawayUserPickerModal\n        isOpen={isUserPickerModalOpen}\n        onClose={closeUserPickerModal}\n        onSelectedIdsConfirmed={handleSelectedUserIdsChange}\n        initialSelectedIds={selectedUserIds}\n        selectionLimit={userSelectionLimit}\n        giveawayChatId={chatId}\n      />\n      <GiveawayChannelPickerModal\n        isOpen={isChannelPickerModalOpen}\n        onClose={closeChannelPickerModal}\n        initialSelectedIds={selectedChannelIds}\n        onSelectedIdsConfirmed={handleSelectedChannelIdsChange}\n        selectionLimit={GIVEAWAY_MAX_ADDITIONAL_CHANNELS}\n        giveawayChatId={chatId}\n      />\n      <ConfirmDialog\n        title={lang('BoostingStartGiveawayConfirmTitle')}\n        text={lang('BoostingStartGiveawayConfirmText')}\n        confirmLabel={lang('Start')}\n        isOpen={isConfirmModalOpen}\n        onClose={closeConfirmModal}\n        confirmHandler={confirmLaunchPrepaidGiveaway}\n      />\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>((global): StateProps => {\n  const {\n    giveawayModal,\n  } = selectTabState(global);\n  const chatId = giveawayModal?.chatId;\n  const chat = chatId ? selectChat(global, chatId) : undefined;\n  const isChannel = chat && isChatChannel(chat);\n\n  return {\n    chatId,\n    gifts: giveawayModal?.gifts,\n    selectedMemberList: giveawayModal?.selectedMemberIds,\n    selectedChannelList: giveawayModal?.selectedChannelIds,\n    giveawayBoostPerPremiumLimit: global.appConfig?.giveawayBoostsPerPremium,\n    isStarsGiftsEnabled: global.appConfig?.isStarsGiftsEnabled,\n    userSelectionLimit: global.appConfig?.giveawayAddPeersMax,\n    countrySelectionLimit: global.appConfig?.giveawayCountriesMax,\n    countryList: global.countryList.general,\n    prepaidGiveaway: giveawayModal?.prepaidGiveaway,\n    isChannel,\n    starsGiftOptions: giveawayModal?.starOptions,\n  };\n})(GiveawayModal));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useMemo, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../../global';\n\nimport { GIVEAWAY_MAX_ADDITIONAL_CHANNELS } from '../../../config';\nimport {\n  filterUsersByName, isUserBot,\n} from '../../../global/helpers';\nimport { unique } from '../../../util/iteratees';\nimport sortChatIds from '../../common/helpers/sortChatIds';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport PeerPicker from '../../common/pickers/PeerPicker';\nimport PickerModal from '../../common/pickers/PickerModal';\n\nimport styles from './PremiumGiftingPickerModal.module.scss';\n\nexport type OwnProps = {\n  isOpen?: boolean;\n};\n\ninterface StateProps {\n  currentUserId?: string;\n  userSelectionLimit?: number;\n  userIds?: string[];\n}\n\nconst PremiumGiftingPickerModal: FC<OwnProps & StateProps> = ({\n  isOpen,\n  currentUserId,\n  userSelectionLimit = GIVEAWAY_MAX_ADDITIONAL_CHANNELS,\n  userIds,\n}) => {\n  const { closePremiumGiftingModal, openPremiumGiftModal, showNotification } = getActions();\n\n  const oldLang = useOldLang();\n\n  const [selectedUserIds, setSelectedUserIds] = useState<string[]>([]);\n  const [searchQuery, setSearchQuery] = useState<string>('');\n\n  const displayedUserIds = useMemo(() => {\n    const usersById = getGlobal().users.byId;\n    const filteredContactIds = userIds ? filterUsersByName(userIds, usersById, searchQuery) : [];\n\n    return sortChatIds(unique(filteredContactIds).filter((userId) => {\n      const user = usersById[userId];\n      if (!user) {\n        return true;\n      }\n\n      return !isUserBot(user) && userId !== currentUserId;\n    }));\n  }, [currentUserId, searchQuery, userIds]);\n\n  const handleSendIdList = useLastCallback(() => {\n    if (selectedUserIds?.length) {\n      openPremiumGiftModal({ forUserIds: selectedUserIds });\n      closePremiumGiftingModal();\n    }\n  });\n\n  const handleSelectedUserIdsChange = useLastCallback((newSelectedIds: string[]) => {\n    if (newSelectedIds.length > userSelectionLimit) {\n      showNotification({\n        message: oldLang('BoostingSelectUpToWarningUsers', userSelectionLimit),\n      });\n      return;\n    }\n    setSelectedUserIds(newSelectedIds);\n  });\n\n  return (\n    <PickerModal\n      className={styles.root}\n      isOpen={isOpen}\n      onClose={closePremiumGiftingModal}\n      title={oldLang('GiftTelegramPremiumTitle')}\n      hasCloseButton\n      shouldAdaptToSearch\n      withFixedHeight\n      confirmButtonText={oldLang('Continue')}\n      onConfirm={handleSendIdList}\n      onEnter={handleSendIdList}\n      withPremiumGradient\n      isConfirmDisabled={!selectedUserIds?.length}\n    >\n      <PeerPicker\n        className={styles.picker}\n        itemIds={displayedUserIds}\n        selectedIds={selectedUserIds}\n        filterValue={searchQuery}\n        filterPlaceholder={oldLang('Search')}\n        onSelectedIdsChange={handleSelectedUserIdsChange}\n        onFilterChange={setSearchQuery}\n        isSearchable\n        withDefaultPadding\n        withStatus\n        allowMultiple\n        itemInputType=\"checkbox\"\n      />\n    </PickerModal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>((global): StateProps => {\n  const { currentUserId } = global;\n\n  return {\n    currentUserId,\n    userIds: global.contactList?.userIds,\n    userSelectionLimit: global.appConfig?.giveawayAddPeersMax,\n  };\n})(PremiumGiftingPickerModal));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"yZCdNeOD\",\"main\":\"Nw_QD6HK\",\"filter\":\"Rn1VBujL\",\"title\":\"bawi8zUd\",\"buttons\":\"LWBSQW38\",\"picker\":\"xwRoLV_t\",\"avatars\":\"sRzPGePZ\",\"center\":\"hM3XfhyZ\",\"description\":\"utdqQEVD\",\"premiumFeatures\":\"ecueYpiv\",\"options\":\"krNSp7Q1\",\"button\":\"Phaog4hK\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useMemo,\n  useState,\n} from '../../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../../global';\n\nimport { SERVICE_NOTIFICATIONS_USER_ID } from '../../../config';\nimport {\n  filterUsersByName, isDeletedUser, isUserBot,\n} from '../../../global/helpers';\nimport { unique } from '../../../util/iteratees';\nimport sortChatIds from '../../common/helpers/sortChatIds';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport PeerPicker from '../../common/pickers/PeerPicker';\nimport PickerModal from '../../common/pickers/PickerModal';\n\nimport styles from './StarsGiftingPickerModal.module.scss';\n\nexport type OwnProps = {\n  isOpen?: boolean;\n};\n\ninterface StateProps {\n  currentUserId?: string;\n  userIds?: string[];\n  activeListIds?: string[];\n  archivedListIds?: string[];\n}\n\nconst StarsGiftingPickerModal: FC<OwnProps & StateProps> = ({\n  isOpen,\n  currentUserId,\n  activeListIds,\n  archivedListIds,\n  userIds,\n}) => {\n  const { closeStarsGiftingModal, openStarsGiftModal } = getActions();\n\n  const oldLang = useOldLang();\n\n  const [searchQuery, setSearchQuery] = useState<string>('');\n\n  const displayedUserIds = useMemo(() => {\n    const usersById = getGlobal().users.byId;\n    const combinedIds = [\n      ...(userIds || []),\n      ...(activeListIds || []),\n      ...(archivedListIds || []),\n    ];\n\n    const filteredContactIds = filterUsersByName(combinedIds, usersById, searchQuery);\n\n    return sortChatIds(unique(filteredContactIds).filter((id) => {\n      const user = usersById[id];\n\n      if (!user) {\n        return false;\n      }\n\n      return !user.isSupport\n        && !isUserBot(user) && !isDeletedUser(user)\n        && id !== currentUserId && id !== SERVICE_NOTIFICATIONS_USER_ID;\n    }));\n  }, [currentUserId, searchQuery, userIds, activeListIds, archivedListIds]);\n\n  const handleSelectedUserIdsChange = useLastCallback((newSelectedId?: string) => {\n    if (newSelectedId?.length) {\n      openStarsGiftModal({ forUserId: newSelectedId });\n    }\n  });\n\n  return (\n    <PickerModal\n      className={styles.root}\n      isOpen={isOpen}\n      onClose={closeStarsGiftingModal}\n      title={oldLang('GiftStarsTitle')}\n      hasCloseButton\n      shouldAdaptToSearch\n      withFixedHeight\n      confirmButtonText={oldLang('Continue')}\n      onEnter={closeStarsGiftingModal}\n    >\n      <PeerPicker\n        className={styles.picker}\n        itemIds={displayedUserIds}\n        filterValue={searchQuery}\n        filterPlaceholder={oldLang('Search')}\n        onFilterChange={setSearchQuery}\n        isSearchable\n        withDefaultPadding\n        withStatus\n        onSelectedIdChange={handleSelectedUserIdsChange}\n      />\n    </PickerModal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>((global): StateProps => {\n  const {\n    chats: {\n      listIds,\n    },\n    currentUserId,\n  } = global;\n\n  return {\n    userIds: global.contactList?.userIds,\n    activeListIds: listIds.active,\n    archivedListIds: listIds.archived,\n    currentUserId,\n  };\n})(StarsGiftingPickerModal));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"s3k01dTm\",\"transition\":\"BNA0_b5j\",\"main\":\"Oadi16vt\",\"filter\":\"z84KbvhX\",\"title\":\"Jnsrau29\",\"buttons\":\"NnVyYB32\",\"picker\":\"cuI2eDIY\",\"avatars\":\"ILtw_aNL\",\"center\":\"eIfMzHv5\",\"description\":\"FlNJWZ5P\",\"premiumFeatures\":\"xIv0Yaur\",\"options\":\"eNJRXn6P\",\"button\":\"KDNKXBp5\"};","import type { FC } from '../../../../lib/teact/teact';\nimport React, { memo, useCallback, useEffect } from '../../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../../global';\n\nimport type { ApiLimitTypeWithModal } from '../../../../global/types';\nimport type { LangFn } from '../../../../hooks/useOldLang';\nimport type { IconName } from '../../../../types/icons';\n\nimport { MAX_UPLOAD_FILEPART_SIZE } from '../../../../config';\nimport { selectIsCurrentUserPremium, selectIsPremiumPurchaseBlocked } from '../../../../global/selectors';\nimport buildClassName from '../../../../util/buildClassName';\nimport { formatFileSize } from '../../../../util/textFormat';\nimport renderText from '../../../common/helpers/renderText';\n\nimport useFlag from '../../../../hooks/useFlag';\nimport useOldLang from '../../../../hooks/useOldLang';\n\nimport Icon from '../../../common/icons/Icon';\nimport Button from '../../../ui/Button';\nimport Modal from '../../../ui/Modal';\nimport PremiumLimitsCompare from './PremiumLimitsCompare';\n\nimport styles from './PremiumLimitReachedModal.module.scss';\n\nconst LIMIT_DESCRIPTION: Record<ApiLimitTypeWithModal, string> = {\n  dialogFiltersChats: 'LimitReachedChatInFolders',\n  uploadMaxFileparts: 'LimitReachedFileSize',\n  dialogFilters: 'LimitReachedFolders',\n  dialogFolderPinned: 'LimitReachedPinDialogs',\n  channelsPublic: 'LimitReachedPublicLinks',\n  channels: 'LimitReachedCommunities',\n  chatlistInvites: 'LimitReachedFolderLinks',\n  chatlistJoined: 'LimitReachedSharedFolders',\n  savedDialogsPinned: 'LimitReachedPinSavedDialogs',\n};\n\nconst LIMIT_DESCRIPTION_BLOCKED: Record<ApiLimitTypeWithModal, string> = {\n  dialogFiltersChats: 'LimitReachedChatInFoldersLocked',\n  uploadMaxFileparts: 'LimitReachedFileSizeLocked',\n  dialogFilters: 'LimitReachedFoldersLocked',\n  dialogFolderPinned: 'LimitReachedPinDialogsLocked',\n  channelsPublic: 'LimitReachedPublicLinksLocked',\n  channels: 'LimitReachedCommunitiesLocked',\n  chatlistInvites: 'LimitReachedFolderLinksLocked',\n  chatlistJoined: 'LimitReachedSharedFoldersLocked',\n  savedDialogsPinned: 'LimitReachedPinSavedDialogsLocked',\n};\n\nconst LIMIT_DESCRIPTION_PREMIUM: Record<ApiLimitTypeWithModal, string> = {\n  dialogFiltersChats: 'LimitReachedChatInFoldersPremium',\n  uploadMaxFileparts: 'LimitReachedFileSizePremium',\n  dialogFilters: 'LimitReachedFoldersPremium',\n  dialogFolderPinned: 'LimitReachedPinDialogsPremium',\n  channelsPublic: 'LimitReachedPublicLinksPremium',\n  channels: 'LimitReachedCommunitiesPremium',\n  chatlistInvites: 'LimitReachedFolderLinksPremium',\n  chatlistJoined: 'LimitReachedSharedFoldersPremium',\n  savedDialogsPinned: 'LimitReachedPinSavedDialogsPremium',\n};\n\nconst LIMIT_ICON: Record<ApiLimitTypeWithModal, IconName> = {\n  dialogFiltersChats: 'chat-badge',\n  uploadMaxFileparts: 'file-badge',\n  dialogFilters: 'folder-badge',\n  dialogFolderPinned: 'pin-badge',\n  channelsPublic: 'link-badge',\n  channels: 'chats-badge',\n  chatlistInvites: 'link-badge',\n  chatlistJoined: 'folder-badge',\n  savedDialogsPinned: 'pin-badge',\n};\n\nconst LIMIT_VALUE_FORMATTER: Partial<Record<ApiLimitTypeWithModal, (...args: any[]) => string>> = {\n  uploadMaxFileparts: (lang: LangFn, value: number) => {\n    // The real size is not exactly 4gb, so we need to round it\n    if (value === 8000) return lang('FileSize.GB', '4');\n    if (value === 4000) return lang('FileSize.GB', '2');\n    return formatFileSize(lang, value * MAX_UPLOAD_FILEPART_SIZE);\n  },\n};\n\nfunction getLimiterDescription({\n  lang,\n  limitType,\n  isPremium,\n  canBuyPremium,\n  defaultValue,\n  premiumValue,\n  valueFormatter,\n}: {\n  lang: LangFn;\n  limitType?: ApiLimitTypeWithModal;\n  isPremium?: boolean;\n  canBuyPremium?: boolean;\n  defaultValue?: number;\n  premiumValue?: number;\n  valueFormatter?: (...args: any[]) => string;\n}) {\n  if (!limitType) {\n    return undefined;\n  }\n\n  const defaultValueFormatted = valueFormatter ? valueFormatter(lang, defaultValue) : defaultValue;\n  const premiumValueFormatted = valueFormatter ? valueFormatter(lang, premiumValue) : premiumValue;\n\n  if (isPremium) {\n    return lang(LIMIT_DESCRIPTION_PREMIUM[limitType], premiumValueFormatted);\n  }\n\n  return canBuyPremium\n    ? lang(LIMIT_DESCRIPTION[limitType],\n      limitType === 'channelsPublic' ? premiumValueFormatted : [defaultValueFormatted, premiumValueFormatted])\n    : lang(LIMIT_DESCRIPTION_BLOCKED[limitType], defaultValueFormatted);\n}\n\nexport type OwnProps = {\n  limit?: ApiLimitTypeWithModal;\n};\n\ntype StateProps = {\n  defaultValue?: number;\n  premiumValue?: number;\n  isPremium?: boolean;\n  canBuyPremium?: boolean;\n};\n\nconst PremiumLimitReachedModal: FC<OwnProps & StateProps> = ({\n  defaultValue,\n  premiumValue,\n  limit,\n  isPremium,\n  canBuyPremium,\n}) => {\n  const { closeLimitReachedModal, openPremiumModal } = getActions();\n  const lang = useOldLang();\n\n  const [isClosing, startClosing, stopClosing] = useFlag();\n\n  const handleClick = useCallback(() => {\n    openPremiumModal();\n    startClosing();\n  }, [openPremiumModal, startClosing]);\n\n  useEffect(() => {\n    if (!limit && isClosing) stopClosing();\n  }, [isClosing, limit, stopClosing]);\n\n  const title = lang('LimitReached');\n  const valueFormatter = limit && LIMIT_VALUE_FORMATTER[limit];\n  const description = getLimiterDescription({\n    lang,\n    limitType: limit,\n    isPremium,\n    canBuyPremium,\n    defaultValue,\n    premiumValue,\n    valueFormatter,\n  });\n  const icon = limit && LIMIT_ICON[limit];\n  const canUpgrade = canBuyPremium && !isPremium;\n\n  return (\n    <Modal\n      onClose={startClosing}\n      onCloseAnimationEnd={closeLimitReachedModal}\n      isOpen={Boolean(limit) && !isClosing}\n      title={title}\n      className={styles.root}\n    >\n      {!canUpgrade && (\n        <div className={styles.limitBadge}>\n          <i className={buildClassName(styles.limitIcon, icon, 'icon')} />\n          <div className={styles.limitValue}>{valueFormatter?.(\n            lang, isPremium ? premiumValue : defaultValue,\n          ) || (isPremium ? premiumValue : defaultValue)}\n          </div>\n        </div>\n      )}\n\n      {canUpgrade && (\n        <PremiumLimitsCompare\n          className={styles.limitCompare}\n          leftValue={valueFormatter?.(lang, defaultValue) || defaultValue?.toString()}\n          rightValue={valueFormatter?.(lang, premiumValue) || premiumValue?.toString()}\n          floatingBadgeIcon={icon}\n        />\n      )}\n\n      <div>\n        {renderText(description || '', ['simple_markdown', 'br'])}\n      </div>\n\n      <div className={styles.dialogButtons}>\n        <Button\n          className=\"confirm-dialog-button\"\n          isText\n          onClick={startClosing}\n          color=\"primary\"\n        >\n          {lang(canUpgrade ? 'Cancel' : 'OK')}\n        </Button>\n        {canUpgrade\n      && (\n        <Button\n          className=\"confirm-dialog-button\"\n          isText\n          onClick={handleClick}\n          color=\"primary\"\n        >\n          {lang('IncreaseLimit')}\n          <Icon name=\"double-badge\" className={styles.x2} />\n        </Button>\n      )}\n      </div>\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { limit }): StateProps => {\n    const { limits } = global.appConfig || {};\n    const isPremium = selectIsCurrentUserPremium(global);\n\n    return {\n      defaultValue: limit ? limits?.[limit][0] : undefined,\n      premiumValue: limit ? limits?.[limit][1] : undefined,\n      canBuyPremium: !selectIsPremiumPurchaseBlocked(global),\n      isPremium,\n    };\n  },\n)(PremiumLimitReachedModal));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"QAs_iFxO\",\"limit-compare\":\"k0O6Rnjh\",\"limitCompare\":\"k0O6Rnjh\",\"limit-badge\":\"Q5d_7bB4\",\"limitBadge\":\"Q5d_7bB4\",\"limit-value\":\"ArEy3hhB\",\"limitValue\":\"ArEy3hhB\",\"limit-icon\":\"rbnU7JVX\",\"limitIcon\":\"rbnU7JVX\",\"dialog-buttons\":\"RVM_RSap\",\"dialogButtons\":\"RVM_RSap\",\"x2\":\"esB1OhAF\",\"button-icon\":\"ydpxmYS3\",\"buttonIcon\":\"ydpxmYS3\"};","import type { RefObject } from 'react';\nimport { useRef, useState } from '../../../lib/teact/teact';\n\nimport { ANIMATION_END_DELAY } from '../../../config';\nimport animateScroll from '../../../util/animateScroll';\nimport { REM } from '../helpers/mediaDimensions';\n\nimport { useIntersectionObserver } from '../../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useSyncEffect from '../../../hooks/useSyncEffect';\n\nconst STICKER_INTERSECTION_THROTTLE = 200;\nconst STICKER_INTERSECTION_MARGIN = 100;\nconst SLIDE_TRANSITION_DURATION = 350 + ANIMATION_END_DELAY;\nconst SCROLL_MAX_DISTANCE_WHEN_CLOSE = 200;\nconst SCROLL_MAX_DISTANCE_WHEN_FAR = 80;\nconst FOCUS_MARGIN = 0.5 * REM;\n\nexport function useStickerPickerObservers(\n  containerRef: RefObject<HTMLDivElement>,\n  headerRef: RefObject<HTMLDivElement>,\n  idPrefix: string,\n  isHidden?: boolean,\n) {\n  const stickerSetIntersectionsRef = useRef<boolean[]>([]);\n\n  const [activeSetIndex, setActiveSetIndex] = useState<number>(0);\n\n  const {\n    observe: observeIntersectionForSet,\n    freeze: freezeForSet,\n    unfreeze: unfreezeForSet,\n  } = useIntersectionObserver({\n    rootRef: containerRef,\n  }, (entries) => {\n    const stickerSetIntersections = stickerSetIntersectionsRef.current;\n\n    entries.forEach((entry) => {\n      const index = Number(entry.target.id.replace(`${idPrefix}-`, ''));\n      stickerSetIntersections[index] = entry.isIntersecting;\n    });\n\n    const minIntersectingIndex = stickerSetIntersections.reduce((lowestIndex, isIntersecting, index) => {\n      return isIntersecting && index < lowestIndex ? index : lowestIndex;\n    }, Infinity);\n\n    if (minIntersectingIndex === Infinity) {\n      return;\n    }\n\n    setActiveSetIndex(minIntersectingIndex);\n  });\n\n  const {\n    observe: observeIntersectionForShowingItems,\n    freeze: freezeForShowingItems,\n    unfreeze: unfreezeForShowingItems,\n  } = useIntersectionObserver({\n    rootRef: containerRef,\n    throttleMs: STICKER_INTERSECTION_THROTTLE,\n    margin: STICKER_INTERSECTION_MARGIN,\n  });\n\n  const {\n    observe: observeIntersectionForPlayingItems,\n  } = useIntersectionObserver({\n    rootRef: containerRef,\n    throttleMs: STICKER_INTERSECTION_THROTTLE,\n    margin: STICKER_INTERSECTION_MARGIN,\n  });\n\n  const {\n    observe: observeIntersectionForCovers,\n  } = useIntersectionObserver({\n    rootRef: headerRef,\n  });\n\n  useSyncEffect(() => {\n    if (isHidden) {\n      freezeForSet();\n      freezeForShowingItems();\n    } else {\n      setTimeout(() => {\n        unfreezeForShowingItems();\n        unfreezeForSet();\n      }, SLIDE_TRANSITION_DURATION);\n    }\n  }, [freezeForSet, freezeForShowingItems, isHidden, unfreezeForSet, unfreezeForShowingItems]);\n\n  const selectStickerSet = useLastCallback((index: number) => {\n    setActiveSetIndex((currentIndex) => {\n      const stickerSetEl = document.getElementById(`${idPrefix}-${index}`)!;\n      const isClose = Math.abs(currentIndex - index) === 1;\n\n      animateScroll(\n        containerRef.current!,\n        stickerSetEl,\n        'start',\n        FOCUS_MARGIN,\n        isClose ? SCROLL_MAX_DISTANCE_WHEN_CLOSE : SCROLL_MAX_DISTANCE_WHEN_FAR,\n      );\n\n      return index;\n    });\n  });\n\n  return {\n    activeSetIndex,\n    observeIntersectionForSet,\n    observeIntersectionForShowingItems,\n    observeIntersectionForPlayingItems,\n    observeIntersectionForCovers,\n    selectStickerSet,\n  };\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"m6XpTzQX\",\"video\":\"OZHqKbDL\",\"image\":\"enA6c8gc\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useEffect, useRef } from '../../../lib/teact/teact';\nimport { getActions, getGlobal } from '../../../global';\n\nimport type { ApiStickerSet } from '../../../api/types';\nimport type { ObserveFn } from '../../../hooks/useIntersectionObserver';\n\nimport { STICKER_SIZE_PICKER_HEADER } from '../../../config';\nimport { getStickerMediaHash } from '../../../global/helpers';\nimport { selectIsAlwaysHighPriorityEmoji } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { getFirstLetters } from '../../../util/textFormat';\nimport { IS_WEBM_SUPPORTED } from '../../../util/windowEnvironment';\n\nimport useColorFilter from '../../../hooks/stickers/useColorFilter';\nimport useDynamicColorListener from '../../../hooks/stickers/useDynamicColorListener';\nimport useCoordsInSharedCanvas from '../../../hooks/useCoordsInSharedCanvas';\nimport { useIsIntersecting } from '../../../hooks/useIntersectionObserver';\nimport useMedia from '../../../hooks/useMedia';\nimport useMediaTransitionDeprecated from '../../../hooks/useMediaTransitionDeprecated';\nimport useCustomEmoji from '../../common/hooks/useCustomEmoji';\n\nimport AnimatedSticker from '../../common/AnimatedSticker';\nimport CustomEmoji from '../../common/CustomEmoji';\nimport OptimizedVideo from '../../ui/OptimizedVideo';\n\nimport styles from './StickerSetCover.module.scss';\n\ntype OwnProps = {\n  stickerSet: ApiStickerSet;\n  size?: number;\n  noPlay?: boolean;\n  forcePlayback?: boolean;\n  observeIntersection: ObserveFn;\n  sharedCanvasRef?: React.RefObject<HTMLCanvasElement>;\n};\n\nconst StickerSetCover: FC<OwnProps> = ({\n  stickerSet,\n  size = STICKER_SIZE_PICKER_HEADER,\n  noPlay,\n  forcePlayback,\n  observeIntersection,\n  sharedCanvasRef,\n}) => {\n  const { loadStickers } = getActions();\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n\n  const {\n    hasThumbnail, hasVideoThumb, hasAnimatedThumb, hasStaticThumb, thumbCustomEmojiId,\n  } = stickerSet;\n\n  const { customEmoji } = useCustomEmoji(thumbCustomEmojiId);\n  const hasCustomColor = customEmoji?.shouldUseTextColor;\n  const customColor = useDynamicColorListener(containerRef, !hasCustomColor);\n  const colorFilter = useColorFilter(customColor);\n\n  const isIntersecting = useIsIntersecting(containerRef, observeIntersection);\n  const shouldPlay = isIntersecting && !noPlay;\n\n  const hasOnlyStaticThumb = hasStaticThumb && !hasVideoThumb && !hasAnimatedThumb && !thumbCustomEmojiId;\n\n  const shouldFallbackToStatic = hasOnlyStaticThumb || (hasVideoThumb && !IS_WEBM_SUPPORTED && !hasAnimatedThumb);\n  const staticHash = shouldFallbackToStatic && getStickerMediaHash(stickerSet.stickers![0], 'preview');\n  const staticMediaData = useMedia(staticHash, !isIntersecting);\n\n  const mediaHash = ((hasThumbnail && !shouldFallbackToStatic) || hasAnimatedThumb) && `stickerSet${stickerSet.id}`;\n  const mediaData = useMedia(mediaHash, !isIntersecting);\n  const isReady = thumbCustomEmojiId || mediaData || staticMediaData;\n  const transitionClassNames = useMediaTransitionDeprecated(isReady);\n\n  const coords = useCoordsInSharedCanvas(containerRef, sharedCanvasRef);\n\n  useEffect(() => {\n    if (isIntersecting && !stickerSet.stickers?.length) {\n      loadStickers({\n        stickerSetInfo: stickerSet,\n      });\n    }\n  }, [isIntersecting, loadStickers, stickerSet]);\n\n  return (\n    <div ref={containerRef} className={buildClassName(styles.root, 'sticker-set-cover')}>\n      {isReady ? (\n        thumbCustomEmojiId ? (\n          <CustomEmoji\n            documentId={thumbCustomEmojiId}\n            size={size}\n            observeIntersectionForPlaying={observeIntersection}\n            noPlay={noPlay}\n          />\n        ) : hasAnimatedThumb ? (\n          <AnimatedSticker\n            className={transitionClassNames}\n            tgsUrl={mediaData}\n            size={size}\n            play={shouldPlay}\n            isLowPriority={!selectIsAlwaysHighPriorityEmoji(getGlobal(), stickerSet)}\n            sharedCanvas={sharedCanvasRef?.current || undefined}\n            sharedCanvasCoords={coords}\n            forceAlways={forcePlayback}\n          />\n        ) : (hasVideoThumb && !shouldFallbackToStatic) ? (\n          <OptimizedVideo\n            className={buildClassName(styles.video, transitionClassNames)}\n            src={mediaData}\n            canPlay={shouldPlay}\n            style={colorFilter}\n            isPriority={forcePlayback}\n            loop\n            disablePictureInPicture\n          />\n        ) : (\n          <img\n            src={mediaData || staticMediaData}\n            style={colorFilter}\n            className={buildClassName(styles.image, transitionClassNames)}\n            alt=\"\"\n            draggable={false}\n          />\n        )\n      ) : (\n        getFirstLetters(stickerSet.title, 2)\n      )}\n    </div>\n  );\n};\n\nexport default memo(StickerSetCover);\n","import type { MouseEvent as ReactMouseEvent, ReactNode } from 'react';\nimport React, {\n  memo, useEffect, useMemo, useRef,\n} from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport type { ApiBotInlineMediaResult, ApiSticker } from '../../api/types';\nimport type { ObserveFn } from '../../hooks/useIntersectionObserver';\n\nimport buildClassName from '../../util/buildClassName';\nimport { getServerTimeOffset } from '../../util/serverTime';\nimport { IS_TOUCH_ENV } from '../../util/windowEnvironment';\nimport { preventMessageInputBlurWithBubbling } from '../middle/helpers/preventMessageInputBlur';\n\nimport useDynamicColorListener from '../../hooks/stickers/useDynamicColorListener';\nimport useContextMenuHandlers from '../../hooks/useContextMenuHandlers';\nimport { useIsIntersecting } from '../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Button from '../ui/Button';\nimport Menu from '../ui/Menu';\nimport MenuItem from '../ui/MenuItem';\nimport Icon from './icons/Icon';\nimport StickerView from './StickerView';\n\nimport './StickerButton.scss';\n\ntype OwnProps<T> = {\n  sticker: ApiSticker;\n  size: number;\n  noPlay?: boolean;\n  title?: string;\n  className?: string;\n  noContextMenu?: boolean;\n  isSavedMessages?: boolean;\n  isStatusPicker?: boolean;\n  canViewSet?: boolean;\n  isSelected?: boolean;\n  isCurrentUserPremium?: boolean;\n  shouldIgnorePremium?: boolean;\n  sharedCanvasRef?: React.RefObject<HTMLCanvasElement>;\n  withTranslucentThumb?: boolean;\n  forcePlayback?: boolean;\n  observeIntersection: ObserveFn;\n  observeIntersectionForShowing?: ObserveFn;\n  noShowPremium?: boolean;\n  onClick?: (arg: OwnProps<T>['clickArg'], isSilent?: boolean, shouldSchedule?: boolean) => void;\n  clickArg: T;\n  onFaveClick?: (sticker: ApiSticker) => void;\n  onUnfaveClick?: (sticker: ApiSticker) => void;\n  onRemoveRecentClick?: (sticker: ApiSticker) => void;\n  onContextMenuOpen?: NoneToVoidFunction;\n  onContextMenuClose?: NoneToVoidFunction;\n  onContextMenuClick?: NoneToVoidFunction;\n  isEffectEmoji?: boolean;\n};\n\nconst contentForStatusMenuContext = [\n  { title: 'SetTimeoutFor.Hours', value: 1, arg: 3600 },\n  { title: 'SetTimeoutFor.Hours', value: 2, arg: 7200 },\n  { title: 'SetTimeoutFor.Hours', value: 8, arg: 28800 },\n  { title: 'SetTimeoutFor.Days', value: 1, arg: 86400 },\n  { title: 'SetTimeoutFor.Days', value: 2, arg: 172800 },\n];\n\nconst StickerButton = <T extends number | ApiSticker | ApiBotInlineMediaResult | undefined = undefined>({\n  sticker,\n  size,\n  noPlay,\n  title,\n  className,\n  noContextMenu,\n  isSavedMessages,\n  isStatusPicker,\n  canViewSet,\n  observeIntersection,\n  observeIntersectionForShowing,\n  isSelected,\n  isCurrentUserPremium,\n  shouldIgnorePremium,\n  noShowPremium,\n  sharedCanvasRef,\n  withTranslucentThumb,\n  forcePlayback,\n  onClick,\n  clickArg,\n  onFaveClick,\n  onUnfaveClick,\n  onRemoveRecentClick,\n  onContextMenuOpen,\n  onContextMenuClose,\n  onContextMenuClick,\n  isEffectEmoji,\n}: OwnProps<T>) => {\n  const { openStickerSet, openPremiumModal, setEmojiStatus } = getActions();\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const menuRef = useRef<HTMLDivElement>(null);\n  const lang = useOldLang();\n  const hasCustomColor = sticker.shouldUseTextColor;\n  const customColor = useDynamicColorListener(ref, !hasCustomColor);\n\n  const {\n    id, stickerSetInfo,\n  } = sticker;\n\n  const isPremium = (!sticker.isFree && isEffectEmoji) || sticker.hasEffect;\n  const isCustomEmoji = sticker.isCustomEmoji || isEffectEmoji;\n  const isLocked = !isCurrentUserPremium && isPremium && !shouldIgnorePremium;\n\n  const isIntersecting = useIsIntersecting(ref, observeIntersection);\n  const shouldLoad = isIntersecting;\n  const shouldPlay = isIntersecting && !noPlay;\n\n  const isIntesectingForShowing = useIsIntersecting(ref, observeIntersectionForShowing);\n\n  const {\n    isContextMenuOpen, contextMenuAnchor,\n    handleBeforeContextMenu, handleContextMenu,\n    handleContextMenuClose, handleContextMenuHide,\n  } = useContextMenuHandlers(ref);\n  const shouldRenderContextMenu = Boolean(!noContextMenu && contextMenuAnchor);\n\n  const getTriggerElement = useLastCallback(() => ref.current);\n  const getRootElement = useLastCallback(() => ref.current!.closest('.custom-scroll, .no-scrollbar'));\n  const getMenuElement = useLastCallback(() => {\n    return isStatusPicker ? menuRef.current : ref.current!.querySelector('.sticker-context-menu .bubble');\n  });\n  const getLayout = useLastCallback(() => ({ withPortal: isStatusPicker, shouldAvoidNegativePosition: true }));\n\n  useEffect(() => {\n    if (isContextMenuOpen) {\n      onContextMenuOpen?.();\n    } else {\n      onContextMenuClose?.();\n    }\n  }, [isContextMenuOpen, onContextMenuClose, onContextMenuOpen]);\n\n  useEffect(() => {\n    if (!isIntersecting) handleContextMenuClose();\n  }, [handleContextMenuClose, isIntersecting]);\n\n  const handleClick = () => {\n    if (isContextMenuOpen) return;\n    if (isLocked) {\n      if (isEffectEmoji) {\n        openPremiumModal({ initialSection: 'effects' });\n      } else {\n        openPremiumModal({ initialSection: 'premium_stickers' });\n      }\n      return;\n    }\n    onClick?.(clickArg);\n  };\n\n  const handleMouseDown = (e: React.MouseEvent<HTMLElement>) => {\n    preventMessageInputBlurWithBubbling(e);\n    handleBeforeContextMenu(e);\n  };\n\n  const handleRemoveClick = useLastCallback((e: ReactMouseEvent<HTMLButtonElement, MouseEvent>) => {\n    e.stopPropagation();\n    e.preventDefault();\n\n    onRemoveRecentClick!(sticker);\n  });\n\n  const handleContextRemoveRecent = useLastCallback(() => {\n    onRemoveRecentClick!(sticker);\n  });\n\n  const handleContextUnfave = useLastCallback(() => {\n    onUnfaveClick!(sticker);\n  });\n\n  const handleContextFave = useLastCallback(() => {\n    onFaveClick!(sticker);\n  });\n\n  const handleSendQuiet = useLastCallback(() => {\n    onClick?.(clickArg, true);\n  });\n\n  const handleSendScheduled = useLastCallback(() => {\n    onClick?.(clickArg, undefined, true);\n  });\n\n  const handleOpenSet = useLastCallback(() => {\n    openStickerSet({ stickerSetInfo });\n  });\n\n  const handleEmojiStatusExpiresClick = useLastCallback((e: React.SyntheticEvent, duration = 0) => {\n    e.preventDefault();\n    e.stopPropagation();\n\n    handleContextMenuClose();\n    onContextMenuClick?.();\n    setEmojiStatus({\n      emojiStatus: sticker,\n      expires: Date.now() / 1000 + duration + getServerTimeOffset(),\n    });\n  });\n\n  const shouldShowCloseButton = !IS_TOUCH_ENV && onRemoveRecentClick;\n\n  const fullClassName = buildClassName(\n    'StickerButton',\n    onClick && 'interactive',\n    isSelected && 'selected',\n    isCustomEmoji && 'custom-emoji',\n    isEffectEmoji && 'effect-emoji',\n    className,\n  );\n\n  const contextMenuItems = useMemo(() => {\n    if (!shouldRenderContextMenu || noContextMenu || (isCustomEmoji && !isStatusPicker)) return [];\n\n    const items: ReactNode[] = [];\n\n    if (isCustomEmoji) {\n      contentForStatusMenuContext.forEach((item) => {\n        items.push(\n          <MenuItem onClick={handleEmojiStatusExpiresClick} clickArg={item.arg}>\n            {lang(item.title, item.value, 'i')}\n          </MenuItem>,\n        );\n      });\n\n      return items;\n    }\n\n    if (onUnfaveClick) {\n      items.push(\n        <MenuItem icon=\"favorite\" onClick={handleContextUnfave}>\n          {lang('Stickers.RemoveFromFavorites')}\n        </MenuItem>,\n      );\n    }\n\n    if (onFaveClick) {\n      items.push(\n        <MenuItem icon=\"favorite\" onClick={handleContextFave}>\n          {lang('Stickers.AddToFavorites')}\n        </MenuItem>,\n      );\n    }\n\n    if (!isLocked && onClick) {\n      if (!isSavedMessages) {\n        items.push(<MenuItem onClick={handleSendQuiet} icon=\"muted\">{lang('SendWithoutSound')}</MenuItem>);\n      }\n      items.push(\n        <MenuItem onClick={handleSendScheduled} icon=\"calendar\">\n          {lang(isSavedMessages ? 'SetReminder' : 'ScheduleMessage')}\n        </MenuItem>,\n      );\n    }\n\n    if (canViewSet) {\n      items.push(\n        <MenuItem onClick={handleOpenSet} icon=\"stickers\">\n          {lang('ViewPackPreview')}\n        </MenuItem>,\n      );\n    }\n    if (onRemoveRecentClick) {\n      items.push(\n        <MenuItem icon=\"delete\" onClick={handleContextRemoveRecent}>\n          {lang('DeleteFromRecent')}\n        </MenuItem>,\n      );\n    }\n    return items;\n  }, [\n    shouldRenderContextMenu, noContextMenu, isCustomEmoji, isStatusPicker, onUnfaveClick, onFaveClick, isLocked,\n    onClick, canViewSet, onRemoveRecentClick, handleEmojiStatusExpiresClick, lang, handleContextUnfave,\n    handleContextFave, isSavedMessages, handleSendScheduled, handleSendQuiet, handleOpenSet, handleContextRemoveRecent,\n  ]);\n\n  return (\n    <div\n      ref={ref}\n      className={fullClassName}\n      title={title || (sticker?.emoji)}\n      data-sticker-id={id}\n      onMouseDown={handleMouseDown}\n      onClick={handleClick}\n      onContextMenu={handleContextMenu}\n    >\n      {isIntesectingForShowing && (\n        <StickerView\n          containerRef={ref}\n          sticker={sticker}\n          isSmall\n          size={size}\n          shouldLoop\n          shouldPreloadPreview\n          noLoad={!shouldLoad}\n          noPlay={!shouldPlay}\n          noVideoOnMobile\n          withSharedAnimation\n          sharedCanvasRef={sharedCanvasRef}\n          withTranslucentThumb={withTranslucentThumb}\n          customColor={customColor}\n          forceAlways={forcePlayback}\n        />\n      )}\n      {!noShowPremium && isLocked && (\n        <div\n          className=\"sticker-locked\"\n        >\n          <Icon name=\"lock-badge\" />\n        </div>\n      )}\n      {!noShowPremium && isPremium && !isLocked && (\n        <div className=\"sticker-premium\">\n          <Icon name=\"star\" />\n        </div>\n      )}\n      {shouldShowCloseButton && (\n        <Button\n          className=\"sticker-remove-button\"\n          color=\"dark\"\n          round\n          noFastClick\n          onClick={handleRemoveClick}\n        >\n          <Icon name=\"close\" />\n        </Button>\n      )}\n      {Boolean(contextMenuItems.length) && (\n        <Menu\n          ref={menuRef}\n          isOpen={isContextMenuOpen}\n          anchor={contextMenuAnchor}\n          getTriggerElement={getTriggerElement}\n          getRootElement={getRootElement}\n          getMenuElement={getMenuElement}\n          getLayout={getLayout}\n          className=\"sticker-context-menu\"\n          autoClose\n          withPortal={isStatusPicker}\n          onClose={handleContextMenuClose}\n          onCloseAnimationEnd={handleContextMenuHide}\n        >\n          {contextMenuItems}\n        </Menu>\n      )}\n    </div>\n  );\n};\n\nexport default memo(StickerButton);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"Lu0K9UZP\",\"selected\":\"UF8XKO4C\"};","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useMemo, useRef,\n} from '../../lib/teact/teact';\n\nimport type { ApiAvailableReaction, ApiReaction } from '../../api/types';\nimport type { ObserveFn } from '../../hooks/useIntersectionObserver';\n\nimport { EMOJI_SIZE_PICKER } from '../../config';\nimport { getDocumentMediaHash, isSameReaction } from '../../global/helpers';\nimport buildClassName from '../../util/buildClassName';\n\nimport useCoordsInSharedCanvas from '../../hooks/useCoordsInSharedCanvas';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useMedia from '../../hooks/useMedia';\nimport useMediaTransitionDeprecated from '../../hooks/useMediaTransitionDeprecated';\n\nimport AnimatedIconWithPreview from './AnimatedIconWithPreview';\nimport CustomEmoji from './CustomEmoji';\n\nimport styles from './ReactionEmoji.module.scss';\n\ntype OwnProps = {\n  reaction: ApiReaction;\n  availableReactions?: ApiAvailableReaction[];\n  className?: string;\n  isSelected?: boolean;\n  loadAndPlay?: boolean;\n  observeIntersection?: ObserveFn;\n  sharedCanvasRef?: React.RefObject<HTMLCanvasElement>;\n  sharedCanvasHqRef?: React.RefObject<HTMLCanvasElement>;\n  forcePlayback?: boolean;\n  onClick: (reaction: ApiReaction) => void;\n};\n\nconst ReactionEmoji: FC<OwnProps> = ({\n  reaction,\n  availableReactions,\n  isSelected,\n  loadAndPlay,\n  observeIntersection,\n  sharedCanvasRef,\n  sharedCanvasHqRef,\n  forcePlayback,\n  onClick,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n  const isCustom = 'documentId' in reaction;\n  const availableReaction = useMemo(() => (\n    availableReactions?.find((available) => isSameReaction(available.reaction, reaction))\n  ), [availableReactions, reaction]);\n  const thumbDataUri = availableReaction?.staticIcon?.thumbnail?.dataUri;\n  const animationId = availableReaction?.selectAnimation?.id;\n  const coords = useCoordsInSharedCanvas(ref, sharedCanvasRef);\n  const mediaData = useMedia(\n    availableReaction?.selectAnimation ? getDocumentMediaHash(availableReaction.selectAnimation, 'full') : undefined,\n    !animationId,\n  );\n  const handleClick = useLastCallback(() => {\n    onClick(reaction);\n  });\n\n  const transitionClassNames = useMediaTransitionDeprecated(mediaData);\n  const fullClassName = buildClassName(\n    styles.root,\n    isSelected && styles.selected,\n    !isCustom && 'sticker-reaction',\n  );\n\n  return (\n    <div\n      ref={ref}\n      className={fullClassName}\n      onClick={handleClick}\n      title={availableReaction?.title}\n      data-sticker-id={isCustom ? reaction.documentId : undefined}\n    >\n      {isCustom ? (\n        <CustomEmoji\n          ref={ref}\n          documentId={reaction.documentId}\n          size={EMOJI_SIZE_PICKER}\n          noPlay={!loadAndPlay}\n          observeIntersectionForPlaying={observeIntersection}\n          sharedCanvasRef={sharedCanvasRef}\n          sharedCanvasHqRef={sharedCanvasHqRef}\n          withTranslucentThumb\n          forceAlways={forcePlayback}\n        />\n      ) : (\n        <AnimatedIconWithPreview\n          tgsUrl={mediaData}\n          thumbDataUri={thumbDataUri}\n          play={loadAndPlay}\n          noLoop={false}\n          size={EMOJI_SIZE_PICKER}\n          isLowPriority\n          className={transitionClassNames}\n          sharedCanvas={sharedCanvasRef!.current || undefined}\n          sharedCanvasCoords={coords}\n          forceAlways={forcePlayback}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default memo(ReactionEmoji);\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo, useRef, useState,\n} from '../../lib/teact/teact';\nimport { getActions, getGlobal } from '../../global';\n\nimport type { ApiAvailableReaction, ApiReaction, ApiSticker } from '../../api/types';\nimport type { ObserveFn } from '../../hooks/useIntersectionObserver';\nimport type { StickerSetOrReactionsSetOrRecent } from '../../types';\n\nimport {\n  DEFAULT_STATUS_ICON_ID,\n  DEFAULT_TOPIC_ICON_STICKER_ID,\n  EFFECT_EMOJIS_SET_ID,\n  EFFECT_STICKERS_SET_ID,\n  EMOJI_SIZE_PICKER,\n  FAVORITE_SYMBOL_SET_ID,\n  POPULAR_SYMBOL_SET_ID,\n  RECENT_SYMBOL_SET_ID,\n  STICKER_SIZE_PICKER,\n} from '../../config';\nimport { getReactionKey } from '../../global/helpers';\nimport { selectIsAlwaysHighPriorityEmoji, selectIsSetPremium } from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\n\nimport useAppLayout from '../../hooks/useAppLayout';\nimport useFlag from '../../hooks/useFlag';\nimport { useIsIntersecting } from '../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useMediaTransitionDeprecated from '../../hooks/useMediaTransitionDeprecated';\nimport useOldLang from '../../hooks/useOldLang';\nimport useResizeObserver from '../../hooks/useResizeObserver';\nimport useWindowSize from '../../hooks/window/useWindowSize';\n\nimport Button from '../ui/Button';\nimport ConfirmDialog from '../ui/ConfirmDialog';\nimport Icon from './icons/Icon';\nimport ReactionEmoji from './ReactionEmoji';\nimport StickerButton from './StickerButton';\n\nimport grey from '../../assets/icons/forumTopic/grey.svg';\n\ntype OwnProps = {\n  stickerSet: StickerSetOrReactionsSetOrRecent;\n  loadAndPlay: boolean;\n  index: number;\n  idPrefix: string;\n  isNearActive: boolean;\n  favoriteStickers?: ApiSticker[];\n  isSavedMessages?: boolean;\n  isStatusPicker?: boolean;\n  isReactionPicker?: boolean;\n  isCurrentUserPremium?: boolean;\n  shouldHideHeader?: boolean;\n  selectedReactionIds?: string[];\n  withDefaultTopicIcon?: boolean;\n  withDefaultStatusIcon?: boolean;\n  isChatEmojiSet?: boolean;\n  isChatStickerSet?: boolean;\n  isTranslucent?: boolean;\n  noContextMenus?: boolean;\n  forcePlayback?: boolean;\n  observeIntersection?: ObserveFn;\n  observeIntersectionForPlayingItems: ObserveFn;\n  observeIntersectionForShowingItems: ObserveFn;\n  availableReactions?: ApiAvailableReaction[];\n  onStickerSelect?: (sticker: ApiSticker, isSilent?: boolean, shouldSchedule?: boolean) => void;\n  onReactionSelect?: (reaction: ApiReaction) => void;\n  onStickerUnfave?: (sticker: ApiSticker) => void;\n  onStickerFave?: (sticker: ApiSticker) => void;\n  onStickerRemoveRecent?: (sticker: ApiSticker) => void;\n  onContextMenuOpen?: NoneToVoidFunction;\n  onContextMenuClose?: NoneToVoidFunction;\n  onContextMenuClick?: NoneToVoidFunction;\n};\n\nconst ITEMS_PER_ROW_FALLBACK = 8;\nconst ITEMS_MOBILE_PER_ROW_FALLBACK = 7;\nconst ITEMS_MINI_MOBILE_PER_ROW_FALLBACK = 6;\nconst MOBILE_WIDTH_THRESHOLD_PX = 440;\nconst MINI_MOBILE_WIDTH_THRESHOLD_PX = 362;\n\nconst StickerSet: FC<OwnProps> = ({\n  stickerSet,\n  loadAndPlay,\n  index,\n  idPrefix,\n  isNearActive,\n  favoriteStickers,\n  availableReactions,\n  isSavedMessages,\n  isStatusPicker,\n  isReactionPicker,\n  isCurrentUserPremium,\n  shouldHideHeader,\n  withDefaultTopicIcon,\n  selectedReactionIds,\n  withDefaultStatusIcon,\n  isChatEmojiSet,\n  isChatStickerSet,\n  isTranslucent,\n  noContextMenus,\n  forcePlayback,\n  observeIntersection,\n  observeIntersectionForPlayingItems,\n  observeIntersectionForShowingItems,\n  onReactionSelect,\n  onStickerSelect,\n  onStickerUnfave,\n  onStickerFave,\n  onStickerRemoveRecent,\n  onContextMenuOpen,\n  onContextMenuClose,\n  onContextMenuClick,\n}) => {\n  const {\n    clearRecentStickers,\n    clearRecentCustomEmoji,\n    clearRecentReactions,\n    openPremiumModal,\n    toggleStickerSet,\n    loadStickers,\n  } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n\n  // eslint-disable-next-line no-null/no-null\n  const sharedCanvasRef = useRef<HTMLCanvasElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const sharedCanvasHqRef = useRef<HTMLCanvasElement>(null);\n\n  const lang = useOldLang();\n  const { width: windowWidth } = useWindowSize();\n  const [isConfirmModalOpen, openConfirmModal, closeConfirmModal] = useFlag();\n  const { isMobile } = useAppLayout();\n\n  const [itemsPerRow, setItemsPerRow] = useState(getItemsPerRowFallback(windowWidth));\n\n  const isIntersecting = useIsIntersecting(ref, observeIntersection ?? observeIntersectionForShowingItems);\n  const transitionClassNames = useMediaTransitionDeprecated(isIntersecting);\n\n  // `isNearActive` is set in advance during animation, but it is not reliable for short sets\n  const shouldRender = isNearActive || isIntersecting;\n\n  const stickerMarginPx = isMobile ? 8 : 4;\n  const emojiMarginPx = isMobile ? 8 : 10;\n  const emojiVerticalMarginPx = isMobile ? 8 : 4;\n  const isRecent = stickerSet.id === RECENT_SYMBOL_SET_ID;\n  const isFavorite = stickerSet.id === FAVORITE_SYMBOL_SET_ID;\n  const isPopular = stickerSet.id === POPULAR_SYMBOL_SET_ID;\n  const isEmoji = stickerSet.isEmoji;\n  const isPremiumSet = !isRecent && selectIsSetPremium(stickerSet);\n\n  const handleClearRecent = useLastCallback(() => {\n    if (isReactionPicker) {\n      clearRecentReactions();\n    } else if (isEmoji) {\n      clearRecentCustomEmoji();\n    } else {\n      clearRecentStickers();\n    }\n    closeConfirmModal();\n  });\n\n  const handleAddClick = useLastCallback(() => {\n    if (isPremiumSet && !isCurrentUserPremium) {\n      openPremiumModal({\n        initialSection: 'animated_emoji',\n      });\n    } else {\n      toggleStickerSet({\n        stickerSetId: stickerSet.id,\n      });\n    }\n  });\n\n  const handleDefaultTopicIconClick = useLastCallback(() => {\n    onStickerSelect?.({\n      mediaType: 'sticker',\n      id: DEFAULT_TOPIC_ICON_STICKER_ID,\n      isLottie: false,\n      isVideo: false,\n      stickerSetInfo: {\n        shortName: 'dummy',\n      },\n    } satisfies ApiSticker);\n  });\n\n  const handleDefaultStatusIconClick = useLastCallback(() => {\n    onStickerSelect?.({\n      mediaType: 'sticker',\n      id: DEFAULT_STATUS_ICON_ID,\n      isLottie: false,\n      isVideo: false,\n      stickerSetInfo: {\n        shortName: 'dummy',\n      },\n    } satisfies ApiSticker);\n  });\n\n  const itemSize = isEmoji ? EMOJI_SIZE_PICKER : STICKER_SIZE_PICKER;\n  const margin = isEmoji ? emojiMarginPx : stickerMarginPx;\n  const verticalMargin = isEmoji ? emojiVerticalMarginPx : stickerMarginPx;\n\n  const calculateItemsPerRow = useLastCallback((width: number) => {\n    if (!width) {\n      return getItemsPerRowFallback(windowWidth);\n    }\n\n    return Math.floor((width + margin) / (itemSize + margin));\n  });\n\n  const handleResize = useLastCallback((entry: ResizeObserverEntry) => {\n    setItemsPerRow(calculateItemsPerRow(entry.contentRect.width));\n  });\n\n  useResizeObserver(ref, handleResize);\n\n  useEffect(() => {\n    if (!ref.current) return;\n    setItemsPerRow(calculateItemsPerRow(ref.current.clientWidth));\n  }, [calculateItemsPerRow]);\n\n  useEffect(() => {\n    if (shouldRender && !stickerSet.stickers?.length && !stickerSet.reactions?.length && stickerSet.accessHash) {\n      loadStickers({\n        stickerSetInfo: {\n          id: stickerSet.id,\n          accessHash: stickerSet.accessHash,\n        },\n      });\n    }\n  }, [shouldRender, loadStickers, stickerSet]);\n\n  const isLocked = !isSavedMessages && !isCurrentUserPremium && isPremiumSet && !isChatEmojiSet;\n\n  const isInstalled = stickerSet.installedDate && !stickerSet.isArchived;\n\n  const canCut = !isInstalled && stickerSet.id !== RECENT_SYMBOL_SET_ID\n    && stickerSet.id !== POPULAR_SYMBOL_SET_ID && stickerSet.id !== EFFECT_EMOJIS_SET_ID\n    && stickerSet.id !== EFFECT_STICKERS_SET_ID && !isChatEmojiSet && !isChatStickerSet;\n\n  const [isCut, , expand] = useFlag(canCut);\n  const itemsBeforeCutout = itemsPerRow * 3 - 1;\n  const totalItemsCount = (withDefaultTopicIcon || withDefaultStatusIcon) ? stickerSet.count + 1 : stickerSet.count;\n\n  const itemHeight = itemSize + verticalMargin;\n  const heightWhenCut = Math.ceil(Math.min(itemsBeforeCutout, totalItemsCount) / itemsPerRow)\n    * itemHeight - verticalMargin;\n  const height = isCut ? heightWhenCut : Math.ceil(totalItemsCount / itemsPerRow) * itemHeight - verticalMargin;\n\n  const favoriteStickerIdsSet = useMemo(() => (\n    favoriteStickers ? new Set(favoriteStickers.map(({ id }) => id)) : undefined\n  ), [favoriteStickers]);\n  const withAddSetButton = !shouldHideHeader && !isRecent && isEmoji && !isPopular && !isChatEmojiSet\n    && (!isInstalled || (!isCurrentUserPremium && !isSavedMessages));\n  const addSetButtonText = useMemo(() => {\n    if (isLocked) {\n      if (isInstalled) return lang('lng_emoji_premium_restore');\n      return lang('Unlock');\n    }\n\n    return lang('Add');\n  }, [isLocked, lang, isInstalled]);\n\n  return (\n    <div\n      ref={ref}\n      key={stickerSet.id}\n      id={`${idPrefix}-${index}`}\n      className={\n        buildClassName('symbol-set', isLocked && 'symbol-set-locked')\n      }\n    >\n      {!shouldHideHeader && (\n        <div className=\"symbol-set-header\">\n          <p className={buildClassName('symbol-set-title', withAddSetButton && 'symbol-set-title-external')}>\n            {isLocked && <Icon name=\"lock-badge\" className=\"symbol-set-locked-icon\" />}\n            <span className=\"symbol-set-name\">{stickerSet.title}</span>\n            {(isChatEmojiSet || isChatStickerSet) && (\n              <span className=\"symbol-set-chat\">{lang(isChatEmojiSet ? 'GroupEmoji' : 'GroupStickers')}</span>\n            )}\n            {withAddSetButton && Boolean(stickerSet.stickers) && (\n              <span className=\"symbol-set-amount\">\n                {lang(isEmoji ? 'EmojiCount' : 'Stickers', stickerSet.stickers.length, 'i')}\n              </span>\n            )}\n          </p>\n          {isRecent && (\n            <Icon className=\"symbol-set-remove\" name=\"close\" onClick={openConfirmModal} />\n          )}\n          {withAddSetButton && (\n            <Button\n              className=\"symbol-set-add-button\"\n              withPremiumGradient={isPremiumSet && !isCurrentUserPremium}\n              onClick={handleAddClick}\n              pill\n              size=\"tiny\"\n              fluid\n            >\n              {addSetButtonText}\n            </Button>\n          )}\n        </div>\n      )}\n      <div\n        className={buildClassName(\n          'symbol-set-container shared-canvas-container',\n          transitionClassNames,\n          stickerSet.id === EFFECT_EMOJIS_SET_ID && 'effect-emojis',\n        )}\n        style={`height: ${height}px;`}\n      >\n        <canvas\n          ref={sharedCanvasRef}\n          className=\"shared-canvas\"\n          style={canCut ? `height: ${heightWhenCut}px;` : undefined}\n        />\n        {(isRecent || isFavorite || canCut) && <canvas ref={sharedCanvasHqRef} className=\"shared-canvas\" />}\n        {withDefaultTopicIcon && (\n          <Button\n            className=\"StickerButton custom-emoji\"\n            color=\"translucent\"\n            onClick={handleDefaultTopicIconClick}\n            key=\"default-topic-icon\"\n          >\n            <img src={grey} alt=\"Reset\" className=\"sticker-media\" draggable={false} />\n          </Button>\n        )}\n        {withDefaultStatusIcon && (\n          <Button\n            className=\"StickerButton custom-emoji status-default\"\n            color=\"translucent\"\n            onClick={handleDefaultStatusIconClick}\n            key=\"default-status-icon\"\n          >\n            <Icon name=\"star\" />\n          </Button>\n        )}\n        {shouldRender && stickerSet.reactions?.map((reaction) => {\n          const reactionId = getReactionKey(reaction);\n          const isSelected = reactionId ? selectedReactionIds?.includes(reactionId) : undefined;\n\n          return (\n            <ReactionEmoji\n              key={`${stickerSet.id}_${reactionId}`}\n              reaction={reaction}\n              isSelected={isSelected}\n              loadAndPlay={loadAndPlay}\n              availableReactions={availableReactions}\n              observeIntersection={observeIntersectionForPlayingItems}\n              onClick={onReactionSelect!}\n              sharedCanvasRef={sharedCanvasRef}\n              sharedCanvasHqRef={sharedCanvasHqRef}\n              forcePlayback={forcePlayback}\n            />\n          );\n        })}\n        {shouldRender && stickerSet.stickers?.slice(0, isCut ? itemsBeforeCutout : stickerSet.stickers.length)\n          .map((sticker, i) => {\n            const isHqEmoji = (isRecent || isFavorite)\n              && selectIsAlwaysHighPriorityEmoji(getGlobal(), sticker.stickerSetInfo);\n            const canvasRef = (canCut && i >= itemsBeforeCutout) || isHqEmoji\n              ? sharedCanvasHqRef\n              : sharedCanvasRef;\n            const reactionId = sticker.isCustomEmoji ? sticker.id : sticker.emoji;\n            const isSelected = reactionId ? selectedReactionIds?.includes(reactionId) : undefined;\n\n            return (\n              <StickerButton\n                key={sticker.id}\n                sticker={sticker}\n                size={itemSize}\n                observeIntersection={observeIntersectionForPlayingItems}\n                observeIntersectionForShowing={observeIntersectionForShowingItems}\n                noPlay={!loadAndPlay}\n                isSavedMessages={isSavedMessages}\n                isStatusPicker={isStatusPicker}\n                canViewSet\n                noContextMenu={noContextMenus}\n                isCurrentUserPremium={isCurrentUserPremium}\n                shouldIgnorePremium={isChatEmojiSet}\n                sharedCanvasRef={canvasRef}\n                withTranslucentThumb={isTranslucent}\n                onClick={onStickerSelect}\n                clickArg={sticker}\n                isSelected={isSelected}\n                onUnfaveClick={isFavorite && favoriteStickerIdsSet?.has(sticker.id) ? onStickerUnfave : undefined}\n                onFaveClick={!favoriteStickerIdsSet?.has(sticker.id) ? onStickerFave : undefined}\n                onRemoveRecentClick={isRecent ? onStickerRemoveRecent : undefined}\n                onContextMenuOpen={onContextMenuOpen}\n                onContextMenuClose={onContextMenuClose}\n                onContextMenuClick={onContextMenuClick}\n                forcePlayback={forcePlayback}\n                isEffectEmoji={stickerSet.id === EFFECT_EMOJIS_SET_ID}\n                noShowPremium={isCurrentUserPremium\n                  && (stickerSet.id === EFFECT_STICKERS_SET_ID || stickerSet.id === EFFECT_EMOJIS_SET_ID)}\n              />\n            );\n          })}\n        {isCut && totalItemsCount > itemsBeforeCutout && (\n          <Button\n            className=\"StickerButton custom-emoji set-expand\"\n            round\n            color=\"translucent\"\n            onClick={expand}\n            key=\"more\"\n          >\n            +{totalItemsCount - itemsBeforeCutout}\n          </Button>\n        )}\n      </div>\n\n      {isRecent && (\n        <ConfirmDialog\n          text={lang(isReactionPicker ? 'ClearRecentReactionsAlertMessage' : 'ClearRecentStickersAlertMessage')}\n          isOpen={isConfirmModalOpen}\n          onClose={closeConfirmModal}\n          confirmHandler={handleClearRecent}\n          confirmIsDestructive\n        />\n      )}\n    </div>\n  );\n};\n\nexport default memo(StickerSet);\n\nfunction getItemsPerRowFallback(windowWidth: number): number {\n  return windowWidth > MOBILE_WIDTH_THRESHOLD_PX\n    ? ITEMS_PER_ROW_FALLBACK\n    : (windowWidth < MINI_MOBILE_WIDTH_THRESHOLD_PX\n      ? ITEMS_MINI_MOBILE_PER_ROW_FALLBACK\n      : ITEMS_MOBILE_PER_ROW_FALLBACK);\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"lq8BD6Hc\",\"main\":\"p7c8y0LH\",\"hasHeader\":\"zTGriBHY\",\"main_customEmoji\":\"U0BL1VvK\",\"mainCustomEmoji\":\"U0BL1VvK\",\"header\":\"Qn3lBUNs\",\"headerWithBorder\":\"HMspKpNp\",\"stickerCover\":\"YKO0Obwy\",\"activated\":\"y02WwQk6\",\"pickerDisabled\":\"BZfaP1GD\"};","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo, useRef,\n} from '../../lib/teact/teact';\nimport { getGlobal, withGlobal } from '../../global';\n\nimport type {\n  ApiAvailableReaction, ApiReaction, ApiSticker, ApiStickerSet,\n} from '../../api/types';\nimport type { StickerSetOrReactionsSetOrRecent } from '../../types';\n\nimport {\n  FAVORITE_SYMBOL_SET_ID,\n  POPULAR_SYMBOL_SET_ID,\n  RECENT_SYMBOL_SET_ID,\n  SLIDE_TRANSITION_DURATION,\n  STICKER_PICKER_MAX_SHARED_COVERS,\n  STICKER_SIZE_PICKER_HEADER,\n  TOP_SYMBOL_SET_ID,\n} from '../../config';\nimport { isSameReaction } from '../../global/helpers';\nimport {\n  selectCanPlayAnimatedEmojis,\n  selectChatFullInfo,\n  selectIsAlwaysHighPriorityEmoji,\n  selectIsChatWithSelf,\n  selectIsCurrentUserPremium,\n} from '../../global/selectors';\nimport animateHorizontalScroll from '../../util/animateHorizontalScroll';\nimport buildClassName from '../../util/buildClassName';\nimport { pickTruthy, unique } from '../../util/iteratees';\nimport { IS_TOUCH_ENV } from '../../util/windowEnvironment';\nimport { REM } from './helpers/mediaDimensions';\n\nimport useAppLayout from '../../hooks/useAppLayout';\nimport useHorizontalScroll from '../../hooks/useHorizontalScroll';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\nimport useScrolledState from '../../hooks/useScrolledState';\nimport useAsyncRendering from '../right/hooks/useAsyncRendering';\nimport { useStickerPickerObservers } from './hooks/useStickerPickerObservers';\n\nimport StickerSetCover from '../middle/composer/StickerSetCover';\nimport Button from '../ui/Button';\nimport Loading from '../ui/Loading';\nimport Icon from './icons/Icon';\nimport StickerButton from './StickerButton';\nimport StickerSet from './StickerSet';\n\nimport pickerStyles from '../middle/composer/StickerPicker.module.scss';\nimport styles from './CustomEmojiPicker.module.scss';\n\ntype OwnProps = {\n  chatId?: string;\n  className?: string;\n  pickerListClassName?: string;\n  isHidden?: boolean;\n  loadAndPlay: boolean;\n  idPrefix?: string;\n  withDefaultTopicIcons?: boolean;\n  onCustomEmojiSelect: (sticker: ApiSticker) => void;\n  onReactionSelect?: (reaction: ApiReaction) => void;\n  selectedReactionIds?: string[];\n  isStatusPicker?: boolean;\n  isReactionPicker?: boolean;\n  isTranslucent?: boolean;\n  onContextMenuOpen?: NoneToVoidFunction;\n  onContextMenuClose?: NoneToVoidFunction;\n  onContextMenuClick?: NoneToVoidFunction;\n};\n\ntype StateProps = {\n  customEmojisById?: Record<string, ApiSticker>;\n  recentCustomEmojiIds?: string[];\n  recentStatusEmojis?: ApiSticker[];\n  chatEmojiSetId?: string;\n  topReactions?: ApiReaction[];\n  recentReactions?: ApiReaction[];\n  defaultTagReactions?: ApiReaction[];\n  stickerSetsById: Record<string, ApiStickerSet>;\n  availableReactions?: ApiAvailableReaction[];\n  addedCustomEmojiIds?: string[];\n  defaultTopicIconsId?: string;\n  defaultStatusIconsId?: string;\n  customEmojiFeaturedIds?: string[];\n  canAnimate?: boolean;\n  isSavedMessages?: boolean;\n  isCurrentUserPremium?: boolean;\n};\n\nconst HEADER_BUTTON_WIDTH = 2.5 * REM; // px (including margin)\n\nconst DEFAULT_ID_PREFIX = 'custom-emoji-set';\nconst TOP_REACTIONS_COUNT = 16;\nconst RECENT_REACTIONS_COUNT = 32;\nconst RECENT_DEFAULT_STATUS_COUNT = 7;\nconst FADED_BUTTON_SET_IDS = new Set([RECENT_SYMBOL_SET_ID, FAVORITE_SYMBOL_SET_ID, POPULAR_SYMBOL_SET_ID]);\nconst STICKER_SET_IDS_WITH_COVER = new Set([\n  RECENT_SYMBOL_SET_ID,\n  FAVORITE_SYMBOL_SET_ID,\n  POPULAR_SYMBOL_SET_ID,\n]);\n\nconst CustomEmojiPicker: FC<OwnProps & StateProps> = ({\n  className,\n  pickerListClassName,\n  isHidden,\n  loadAndPlay,\n  addedCustomEmojiIds,\n  customEmojisById,\n  recentCustomEmojiIds,\n  selectedReactionIds,\n  recentStatusEmojis,\n  stickerSetsById,\n  chatEmojiSetId,\n  topReactions,\n  recentReactions,\n  availableReactions,\n  idPrefix = DEFAULT_ID_PREFIX,\n  customEmojiFeaturedIds,\n  canAnimate,\n  isReactionPicker,\n  isStatusPicker,\n  isTranslucent,\n  isSavedMessages,\n  isCurrentUserPremium,\n  withDefaultTopicIcons,\n  defaultTopicIconsId,\n  defaultStatusIconsId,\n  defaultTagReactions,\n  onCustomEmojiSelect,\n  onReactionSelect,\n  onContextMenuOpen,\n  onContextMenuClose,\n  onContextMenuClick,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const headerRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const sharedCanvasRef = useRef<HTMLCanvasElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const sharedCanvasHqRef = useRef<HTMLCanvasElement>(null);\n\n  const { isMobile } = useAppLayout();\n  const {\n    handleScroll: handleContentScroll,\n    isAtBeginning: shouldHideTopBorder,\n  } = useScrolledState();\n\n  const recentCustomEmojis = useMemo(() => {\n    return isStatusPicker\n      ? recentStatusEmojis\n      : Object.values(pickTruthy(customEmojisById!, recentCustomEmojiIds!));\n  }, [customEmojisById, isStatusPicker, recentCustomEmojiIds, recentStatusEmojis]);\n\n  const prefix = `${idPrefix}-custom-emoji`;\n  const {\n    activeSetIndex,\n    observeIntersectionForSet,\n    observeIntersectionForPlayingItems,\n    observeIntersectionForShowingItems,\n    observeIntersectionForCovers,\n    selectStickerSet,\n  } = useStickerPickerObservers(containerRef, headerRef, prefix, isHidden);\n\n  const lang = useOldLang();\n\n  const areAddedLoaded = Boolean(addedCustomEmojiIds);\n\n  const allSets = useMemo(() => {\n    const defaultSets: StickerSetOrReactionsSetOrRecent[] = [];\n\n    if (isReactionPicker && isSavedMessages) {\n      if (defaultTagReactions?.length) {\n        defaultSets.push({\n          id: TOP_SYMBOL_SET_ID,\n          accessHash: '',\n          title: lang('PremiumPreviewTags'),\n          reactions: defaultTagReactions,\n          count: defaultTagReactions.length,\n          isEmoji: true,\n        });\n      }\n    }\n\n    if (isReactionPicker && !isSavedMessages) {\n      const topReactionsSlice = topReactions?.slice(0, TOP_REACTIONS_COUNT) || [];\n      if (topReactionsSlice?.length) {\n        defaultSets.push({\n          id: TOP_SYMBOL_SET_ID,\n          accessHash: '',\n          title: lang('Reactions'),\n          reactions: topReactionsSlice,\n          count: topReactionsSlice.length,\n          isEmoji: true,\n        });\n      }\n\n      const cleanRecentReactions = (recentReactions || [])\n        .filter((reaction) => !topReactionsSlice.some((topReaction) => isSameReaction(topReaction, reaction)))\n        .slice(0, RECENT_REACTIONS_COUNT);\n      const cleanAvailableReactions = (availableReactions || [])\n        .filter(({ isInactive }) => !isInactive)\n        .map(({ reaction }) => reaction)\n        .filter((reaction) => {\n          return !topReactionsSlice.some((topReaction) => isSameReaction(topReaction, reaction))\n            && !cleanRecentReactions.some((topReaction) => isSameReaction(topReaction, reaction));\n        });\n      if (cleanAvailableReactions?.length || cleanRecentReactions?.length) {\n        const isPopular = !cleanRecentReactions?.length;\n        const allRecentReactions = cleanRecentReactions.concat(cleanAvailableReactions);\n        defaultSets.push({\n          id: isPopular ? POPULAR_SYMBOL_SET_ID : RECENT_SYMBOL_SET_ID,\n          accessHash: '',\n          title: lang(isPopular ? 'PopularReactions' : 'RecentStickers'),\n          reactions: allRecentReactions,\n          count: allRecentReactions.length,\n          isEmoji: true,\n        });\n      }\n    } else if (isStatusPicker) {\n      const defaultStatusIconsPack = stickerSetsById[defaultStatusIconsId!];\n      if (defaultStatusIconsPack?.stickers?.length) {\n        const stickers = defaultStatusIconsPack.stickers\n          .slice(0, RECENT_DEFAULT_STATUS_COUNT)\n          .concat(recentCustomEmojis || []);\n        defaultSets.push({\n          ...defaultStatusIconsPack,\n          stickers,\n          count: stickers.length,\n          id: RECENT_SYMBOL_SET_ID,\n          title: lang('RecentStickers'),\n        });\n      }\n    } else if (withDefaultTopicIcons) {\n      const defaultTopicIconsPack = stickerSetsById[defaultTopicIconsId!];\n      if (defaultTopicIconsPack.stickers?.length) {\n        defaultSets.push({\n          ...defaultTopicIconsPack,\n          id: RECENT_SYMBOL_SET_ID,\n          title: lang('RecentStickers'),\n        });\n      }\n    } else if (recentCustomEmojis?.length) {\n      defaultSets.push({\n        id: RECENT_SYMBOL_SET_ID,\n        accessHash: '0',\n        title: lang('RecentStickers'),\n        stickers: recentCustomEmojis,\n        count: recentCustomEmojis.length,\n        isEmoji: true,\n      });\n    }\n\n    const userSetIds = [...(addedCustomEmojiIds || [])];\n    if (chatEmojiSetId) {\n      userSetIds.unshift(chatEmojiSetId);\n    }\n\n    const setIdsToDisplay = unique(userSetIds.concat(customEmojiFeaturedIds || []));\n\n    const setsToDisplay = Object.values(pickTruthy(stickerSetsById, setIdsToDisplay));\n\n    return [\n      ...defaultSets,\n      ...setsToDisplay,\n    ];\n  }, [\n    addedCustomEmojiIds, isReactionPicker, isStatusPicker, withDefaultTopicIcons, recentCustomEmojis,\n    customEmojiFeaturedIds, stickerSetsById, topReactions, availableReactions, lang, recentReactions,\n    defaultStatusIconsId, defaultTopicIconsId, isSavedMessages, defaultTagReactions, chatEmojiSetId,\n  ]);\n\n  const noPopulatedSets = useMemo(() => (\n    areAddedLoaded\n    && allSets.filter((set) => set.stickers?.length).length === 0\n  ), [allSets, areAddedLoaded]);\n\n  const canRenderContent = useAsyncRendering([], SLIDE_TRANSITION_DURATION);\n  const shouldRenderContent = areAddedLoaded && canRenderContent && !noPopulatedSets;\n\n  useHorizontalScroll(headerRef, isMobile || !shouldRenderContent);\n\n  // Scroll container and header when active set changes\n  useEffect(() => {\n    if (!areAddedLoaded) {\n      return;\n    }\n\n    const header = headerRef.current;\n    if (!header) {\n      return;\n    }\n\n    const newLeft = activeSetIndex * HEADER_BUTTON_WIDTH - (header.offsetWidth / 2 - HEADER_BUTTON_WIDTH / 2);\n\n    animateHorizontalScroll(header, newLeft);\n  }, [areAddedLoaded, activeSetIndex]);\n\n  const handleEmojiSelect = useLastCallback((emoji: ApiSticker) => {\n    onCustomEmojiSelect(emoji);\n  });\n\n  const handleReactionSelect = useLastCallback((reaction: ApiReaction) => {\n    onReactionSelect?.(reaction);\n  });\n\n  function renderCover(stickerSet: StickerSetOrReactionsSetOrRecent, index: number) {\n    const firstSticker = stickerSet.stickers?.[0];\n    const buttonClassName = buildClassName(\n      pickerStyles.stickerCover,\n      index === activeSetIndex && styles.activated,\n    );\n\n    const withSharedCanvas = index < STICKER_PICKER_MAX_SHARED_COVERS;\n    const isHq = selectIsAlwaysHighPriorityEmoji(getGlobal(), stickerSet as ApiStickerSet);\n\n    if (stickerSet.id === TOP_SYMBOL_SET_ID) {\n      return undefined;\n    }\n\n    if (STICKER_SET_IDS_WITH_COVER.has(stickerSet.id) || stickerSet.hasThumbnail || !firstSticker) {\n      const isRecent = stickerSet.id === RECENT_SYMBOL_SET_ID || stickerSet.id === POPULAR_SYMBOL_SET_ID;\n      const isFaded = FADED_BUTTON_SET_IDS.has(stickerSet.id);\n      return (\n        <Button\n          key={stickerSet.id}\n          className={buttonClassName}\n          ariaLabel={stickerSet.title}\n          round\n          faded={isFaded}\n          color=\"translucent\"\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => selectStickerSet(isRecent ? 0 : index)}\n        >\n          {isRecent ? (\n            <Icon name=\"recent\" />\n          ) : (\n            <StickerSetCover\n              stickerSet={stickerSet as ApiStickerSet}\n              noPlay={!canAnimate || !loadAndPlay}\n              forcePlayback\n              observeIntersection={observeIntersectionForCovers}\n              sharedCanvasRef={withSharedCanvas ? (isHq ? sharedCanvasHqRef : sharedCanvasRef) : undefined}\n            />\n          )}\n        </Button>\n      );\n    }\n\n    return (\n      <StickerButton\n        key={stickerSet.id}\n        sticker={firstSticker}\n        size={STICKER_SIZE_PICKER_HEADER}\n        title={stickerSet.title}\n        className={buttonClassName}\n        noPlay={!canAnimate || !loadAndPlay}\n        observeIntersection={observeIntersectionForCovers}\n        noContextMenu\n        isCurrentUserPremium\n        sharedCanvasRef={withSharedCanvas ? (isHq ? sharedCanvasHqRef : sharedCanvasRef) : undefined}\n        withTranslucentThumb={isTranslucent}\n        onClick={selectStickerSet}\n        clickArg={index}\n        forcePlayback\n      />\n    );\n  }\n\n  const fullClassName = buildClassName('StickerPicker', styles.root, className);\n\n  if (!shouldRenderContent) {\n    return (\n      <div className={fullClassName}>\n        {noPopulatedSets ? (\n          <div className={pickerStyles.pickerDisabled}>{lang('NoStickers')}</div>\n        ) : (\n          <Loading />\n        )}\n      </div>\n    );\n  }\n\n  const headerClassName = buildClassName(\n    pickerStyles.header,\n    'no-scrollbar',\n    !shouldHideTopBorder && pickerStyles.headerWithBorder,\n  );\n  const listClassName = buildClassName(\n    pickerStyles.main,\n    pickerStyles.main_customEmoji,\n    IS_TOUCH_ENV ? 'no-scrollbar' : 'custom-scroll',\n    pickerListClassName,\n    pickerStyles.hasHeader,\n  );\n\n  return (\n    <div className={fullClassName}>\n      <div\n        ref={headerRef}\n        className={headerClassName}\n      >\n        <div className=\"shared-canvas-container\">\n          <canvas ref={sharedCanvasRef} className=\"shared-canvas\" />\n          <canvas ref={sharedCanvasHqRef} className=\"shared-canvas\" />\n          {allSets.map(renderCover)}\n        </div>\n      </div>\n      <div\n        ref={containerRef}\n        onScroll={handleContentScroll}\n        className={listClassName}\n      >\n        {allSets.map((stickerSet, i) => {\n          const shouldHideHeader = stickerSet.id === TOP_SYMBOL_SET_ID\n            || (stickerSet.id === RECENT_SYMBOL_SET_ID && (withDefaultTopicIcons || isStatusPicker));\n          const isChatEmojiSet = stickerSet.id === chatEmojiSetId;\n\n          return (\n            <StickerSet\n              key={stickerSet.id}\n              stickerSet={stickerSet}\n              loadAndPlay={Boolean(canAnimate && loadAndPlay)}\n              index={i}\n              idPrefix={prefix}\n              observeIntersection={observeIntersectionForSet}\n              observeIntersectionForPlayingItems={observeIntersectionForPlayingItems}\n              observeIntersectionForShowingItems={observeIntersectionForShowingItems}\n              isNearActive={activeSetIndex >= i - 1 && activeSetIndex <= i + 1}\n              isSavedMessages={isSavedMessages}\n              isStatusPicker={isStatusPicker}\n              isReactionPicker={isReactionPicker}\n              shouldHideHeader={shouldHideHeader}\n              withDefaultTopicIcon={withDefaultTopicIcons && stickerSet.id === RECENT_SYMBOL_SET_ID}\n              withDefaultStatusIcon={isStatusPicker && stickerSet.id === RECENT_SYMBOL_SET_ID}\n              isChatEmojiSet={isChatEmojiSet}\n              isCurrentUserPremium={isCurrentUserPremium}\n              selectedReactionIds={selectedReactionIds}\n              availableReactions={availableReactions}\n              isTranslucent={isTranslucent}\n              onReactionSelect={handleReactionSelect}\n              onStickerSelect={handleEmojiSelect}\n              onContextMenuOpen={onContextMenuOpen}\n              onContextMenuClose={onContextMenuClose}\n              onContextMenuClick={onContextMenuClick}\n              forcePlayback\n            />\n          );\n        })}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId, isStatusPicker, isReactionPicker }): StateProps => {\n    const {\n      stickers: {\n        setsById: stickerSetsById,\n      },\n      customEmojis: {\n        byId: customEmojisById,\n        featuredIds: customEmojiFeaturedIds,\n        statusRecent: {\n          emojis: recentStatusEmojis,\n        },\n      },\n      recentCustomEmojis: recentCustomEmojiIds,\n      reactions: {\n        availableReactions,\n        recentReactions,\n        topReactions,\n        defaultTags,\n      },\n    } = global;\n\n    const isSavedMessages = Boolean(chatId && selectIsChatWithSelf(global, chatId));\n    const chatFullInfo = chatId ? selectChatFullInfo(global, chatId) : undefined;\n\n    return {\n      customEmojisById: !isStatusPicker ? customEmojisById : undefined,\n      recentCustomEmojiIds: !isStatusPicker ? recentCustomEmojiIds : undefined,\n      recentStatusEmojis: isStatusPicker ? recentStatusEmojis : undefined,\n      stickerSetsById,\n      addedCustomEmojiIds: global.customEmojis.added.setIds,\n      canAnimate: selectCanPlayAnimatedEmojis(global),\n      isSavedMessages,\n      isCurrentUserPremium: selectIsCurrentUserPremium(global),\n      customEmojiFeaturedIds,\n      defaultTopicIconsId: global.defaultTopicIconsId,\n      defaultStatusIconsId: global.defaultStatusIconsId,\n      topReactions: isReactionPicker ? topReactions : undefined,\n      recentReactions: isReactionPicker ? recentReactions : undefined,\n      chatEmojiSetId: chatFullInfo?.emojiSet?.id,\n      availableReactions: isReactionPicker ? availableReactions : undefined,\n      defaultTagReactions: isReactionPicker ? defaultTags : undefined,\n    };\n  },\n)(CustomEmojiPicker));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"Qk9PEGRE\",\"activated\":\"WYeuJNQx\"};","// extracted by mini-css-extract-plugin\nexport default {\"menuContent\":\"hRzvfaRb\"};","import type { RefObject } from 'react';\nimport type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useRef,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiSticker } from '../../../api/types';\n\nimport { selectIsContextMenuTranslucent } from '../../../global/selectors';\n\nimport useFlag from '../../../hooks/useFlag';\n\nimport CustomEmojiPicker from '../../common/CustomEmojiPicker';\nimport Menu from '../../ui/Menu';\nimport Portal from '../../ui/Portal';\n\nimport styles from './StatusPickerMenu.module.scss';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  statusButtonRef: RefObject<HTMLButtonElement>;\n  onEmojiStatusSelect: (emojiStatus: ApiSticker) => void;\n  onClose: () => void;\n};\n\ninterface StateProps {\n  areFeaturedStickersLoaded?: boolean;\n  isTranslucent?: boolean;\n}\n\nconst StatusPickerMenu: FC<OwnProps & StateProps> = ({\n  isOpen,\n  statusButtonRef,\n  areFeaturedStickersLoaded,\n  isTranslucent,\n  onEmojiStatusSelect,\n  onClose,\n}) => {\n  const { loadFeaturedEmojiStickers } = getActions();\n\n  const transformOriginX = useRef<number>();\n  const [isContextMenuShown, markContextMenuShown, unmarkContextMenuShown] = useFlag();\n  useEffect(() => {\n    transformOriginX.current = statusButtonRef.current!.getBoundingClientRect().right;\n  }, [isOpen, statusButtonRef]);\n\n  useEffect(() => {\n    if (isOpen && !areFeaturedStickersLoaded) {\n      loadFeaturedEmojiStickers();\n    }\n  }, [areFeaturedStickersLoaded, isOpen, loadFeaturedEmojiStickers]);\n\n  const handleEmojiSelect = useCallback((sticker: ApiSticker) => {\n    onEmojiStatusSelect(sticker);\n    onClose();\n  }, [onClose, onEmojiStatusSelect]);\n\n  return (\n    <Portal>\n      <Menu\n        isOpen={isOpen}\n        noCompact\n        positionX=\"right\"\n        bubbleClassName={styles.menuContent}\n        onClose={onClose}\n        transformOriginX={transformOriginX.current}\n        noCloseOnBackdrop={isContextMenuShown}\n      >\n        <CustomEmojiPicker\n          idPrefix=\"status-emoji-set-\"\n          loadAndPlay={isOpen}\n          isHidden={!isOpen}\n          isStatusPicker\n          isTranslucent={isTranslucent}\n          onContextMenuOpen={markContextMenuShown}\n          onContextMenuClose={unmarkContextMenuShown}\n          onCustomEmojiSelect={handleEmojiSelect}\n          onContextMenuClick={onClose}\n        />\n      </Menu>\n    </Portal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>((global): StateProps => {\n  return {\n    areFeaturedStickersLoaded: Boolean(global.customEmojis.featuredIds?.length),\n    isTranslucent: selectIsContextMenuTranslucent(global),\n  };\n})(StatusPickerMenu));\n","// extracted by mini-css-extract-plugin\nexport default {\"content\":\"pUyNTysT\",\"modal\":\"IK2mBqbm\",\"loading\":\"zjXCH3pT\",\"description\":\"j6xEoljc\",\"bold\":\"hAA6B1lc\",\"chip\":\"smWR78pO\",\"replaceModal\":\"GIFAjZPY\",\"replaceModalContent\":\"Jxyz9TaL\",\"avatarContainer\":\"OKp6HS1U\",\"arrow\":\"WSJdWV7L\",\"boostedWrapper\":\"NU9itcIm\",\"boostedMark\":\"upXvhNRY\"};","import React, { memo, useEffect, useMemo } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiChat, ApiChatFullInfo, ApiMyBoost } from '../../../api/types';\nimport type { TabState } from '../../../global/types';\n\nimport { getChatTitle, isChatAdmin, isChatChannel } from '../../../global/helpers';\nimport { selectChat, selectChatFullInfo, selectIsCurrentUserPremium } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { formatDateInFuture } from '../../../util/dates/dateFormat';\nimport { getServerTime } from '../../../util/serverTime';\nimport { getBoostProgressInfo } from '../../common/helpers/boostInfo';\nimport renderText from '../../common/helpers/renderText';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Avatar from '../../common/Avatar';\nimport Icon from '../../common/icons/Icon';\nimport PremiumProgress from '../../common/PremiumProgress';\nimport Button from '../../ui/Button';\nimport ConfirmDialog from '../../ui/ConfirmDialog';\nimport Loading from '../../ui/Loading';\nimport Modal from '../../ui/Modal';\n\nimport styles from './BoostModal.module.scss';\n\ntype LoadedParams = {\n  boost?: ApiMyBoost;\n  leftText: string;\n  rightText?: string;\n  value: string;\n  progress: number;\n  descriptionText: string;\n  isBoosted?: boolean;\n  canBoostMore?: boolean;\n};\n\ntype BoostInfo = ({\n  isStatusLoaded: false;\n  title: string;\n} & Undefined<LoadedParams>) | ({\n  isStatusLoaded: true;\n  title: string;\n} & LoadedParams);\n\nexport type OwnProps = {\n  modal: TabState['boostModal'];\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  chatFullInfo?: ApiChatFullInfo;\n  prevBoostedChat?: ApiChat;\n  isCurrentUserPremium?: boolean;\n};\n\nconst BoostModal = ({\n  modal,\n  chat,\n  chatFullInfo,\n  prevBoostedChat,\n  isCurrentUserPremium,\n}: OwnProps & StateProps) => {\n  const {\n    applyBoost,\n    closeBoostModal,\n    requestConfetti,\n    openPremiumModal,\n    loadFullChat,\n  } = getActions();\n\n  const [isReplaceModalOpen, openReplaceModal, closeReplaceModal] = useFlag();\n  const [isWaitDialogOpen, openWaitDialog, closeWaitDialog] = useFlag();\n  const [isPremiumDialogOpen, openPremiumDialog, closePremiumDialog] = useFlag();\n\n  const isChannel = chat && isChatChannel(chat);\n\n  const isOpen = Boolean(modal);\n\n  const lang = useOldLang();\n\n  useEffect(() => {\n    if (chat && !chatFullInfo) {\n      loadFullChat({ chatId: chat.id });\n    }\n  }, [chat, chatFullInfo]);\n\n  const chatTitle = useMemo(() => {\n    if (!chat) {\n      return undefined;\n    }\n\n    return getChatTitle(lang, chat);\n  }, [chat, lang]);\n\n  const boostedChatTitle = useMemo(() => {\n    if (!prevBoostedChat) {\n      return undefined;\n    }\n\n    return getChatTitle(lang, prevBoostedChat);\n  }, [prevBoostedChat, lang]);\n\n  const {\n    isStatusLoaded,\n    isBoosted,\n    boost,\n    title,\n    leftText,\n    rightText,\n    value,\n    progress,\n    descriptionText,\n    canBoostMore,\n  }: BoostInfo = useMemo(() => {\n    if (!modal?.boostStatus || !chat) {\n      return {\n        isStatusLoaded: false,\n        title: lang('Loading'),\n      };\n    }\n\n    const {\n      hasMyBoost,\n    } = modal.boostStatus;\n\n    const firstBoost = modal?.myBoosts && getFirstAvailableBoost(modal.myBoosts, chat.id);\n    const areBoostsInDifferentChannels = modal?.myBoosts && !areAllBoostsInChannel(modal.myBoosts, chat.id);\n\n    const {\n      boosts,\n      currentLevel,\n      hasNextLevel,\n      levelProgress,\n      remainingBoosts,\n      isMaxLevel,\n    } = getBoostProgressInfo(modal.boostStatus, true);\n\n    const hasBoost = hasMyBoost;\n\n    const left = lang('BoostsLevel', currentLevel);\n    const right = hasNextLevel ? lang('BoostsLevel', currentLevel + 1) : undefined;\n\n    const moreBoosts = lang('ChannelBoost.MoreBoosts', remainingBoosts);\n\n    const modalTitle = isChannel ? lang('BoostChannel') : lang('BoostGroup');\n\n    const boostsLeftToUnrestrict = (chatFullInfo?.boostsToUnrestrict || 0) - (chatFullInfo?.boostsApplied || 0);\n\n    let description: string | undefined;\n    if (isMaxLevel) {\n      description = lang('BoostsMaxLevelReached');\n    } else if (boostsLeftToUnrestrict > 0 && !isChatAdmin(chat)) {\n      const boostTimes = lang('GroupBoost.BoostToUnrestrict.Times', boostsLeftToUnrestrict);\n      description = lang('GroupBoost.BoostToUnrestrict', [boostTimes, chatTitle]);\n    } else {\n      description = lang('ChannelBoost.MoreBoostsNeeded.Text', [chatTitle, moreBoosts]);\n    }\n\n    return {\n      isStatusLoaded: true,\n      title: modalTitle,\n      leftText: left,\n      rightText: right,\n      value: boosts.toString(),\n      progress: levelProgress,\n      remainingBoosts,\n      descriptionText: description,\n      boost: firstBoost,\n      isBoosted: hasBoost,\n      canBoostMore: areBoostsInDifferentChannels && !isMaxLevel,\n    };\n  }, [chat, chatTitle, modal, lang, chatFullInfo, isChannel]);\n\n  const isBoostDisabled = !modal?.myBoosts?.length && isCurrentUserPremium;\n  const isReplacingBoost = boost?.chatId && boost.chatId !== modal?.chatId;\n\n  const handleApplyBoost = useLastCallback(() => {\n    closeReplaceModal();\n    applyBoost({ chatId: chat!.id, slots: [boost!.slot] });\n    requestConfetti({});\n  });\n\n  const handleProceedPremium = useLastCallback(() => {\n    openPremiumModal();\n    closePremiumDialog();\n    closeBoostModal();\n  });\n\n  const handleButtonClick = useLastCallback(() => {\n    if (!boost) {\n      if (!isCurrentUserPremium) {\n        openPremiumDialog();\n        return;\n      }\n\n      closeBoostModal();\n      return;\n    }\n\n    if (!canBoostMore) {\n      closeBoostModal();\n      return;\n    }\n\n    if (boost.cooldownUntil) {\n      openWaitDialog();\n      return;\n    }\n\n    if (isReplacingBoost) {\n      openReplaceModal();\n      return;\n    }\n\n    handleApplyBoost();\n  });\n\n  const handleCloseClick = useLastCallback(() => {\n    closeBoostModal();\n  });\n\n  function renderContent() {\n    if (!isStatusLoaded) {\n      return <Loading className={styles.loading} />;\n    }\n\n    return (\n      <>\n        <PremiumProgress\n          leftText={leftText}\n          rightText={rightText}\n          progress={progress}\n          floatingBadgeText={value}\n          floatingBadgeIcon=\"boost\"\n        />\n        {isBoosted && (\n          <div className={buildClassName(styles.description, styles.bold)}>\n            {lang('ChannelBoost.YouBoostedChannelText', chatTitle)}\n          </div>\n        )}\n        <div className={styles.description}>\n          {renderText(descriptionText, ['simple_markdown', 'emoji'])}\n        </div>\n        <div className=\"dialog-buttons\">\n          <Button isText className=\"confirm-dialog-button\" disabled={isBoostDisabled} onClick={handleButtonClick}>\n            {canBoostMore ? (\n              <>\n                <Icon name=\"boost\" />\n                {lang(isChannel ? 'ChannelBoost.BoostChannel' : 'GroupBoost.BoostGroup')}\n              </>\n            ) : lang('OK')}\n          </Button>\n          <Button isText className=\"confirm-dialog-button\" onClick={handleCloseClick}>\n            {lang('Cancel')}\n          </Button>\n        </div>\n      </>\n    );\n  }\n\n  return (\n    <Modal\n      isOpen={isOpen}\n      title={title}\n      className={styles.modal}\n      contentClassName={styles.content}\n      onClose={closeBoostModal}\n    >\n      {renderContent()}\n      {isReplacingBoost && boostedChatTitle && (\n        <Modal\n          isOpen={isReplaceModalOpen}\n          className={styles.replaceModal}\n          contentClassName={styles.replaceModalContent}\n          onClose={closeReplaceModal}\n        >\n          <div className={styles.avatarContainer}>\n            <div className={styles.boostedWrapper}>\n              <Avatar peer={prevBoostedChat} size=\"large\" />\n              <Icon name=\"boostcircle\" className={styles.boostedMark} />\n            </div>\n            <Icon name=\"next\" className={styles.arrow} />\n            <Avatar peer={chat} size=\"large\" />\n          </div>\n          <div>\n            {renderText(lang('ChannelBoost.ReplaceBoost', [boostedChatTitle, chatTitle]), ['simple_markdown', 'emoji'])}\n          </div>\n          <div className=\"dialog-buttons\">\n            <Button isText className=\"confirm-dialog-button\" onClick={handleApplyBoost}>\n              {lang('Replace')}\n            </Button>\n            <Button isText className=\"confirm-dialog-button\" onClick={closeReplaceModal}>\n              {lang('Cancel')}\n            </Button>\n          </div>\n        </Modal>\n      )}\n      {Boolean(boost?.cooldownUntil) && (\n        <ConfirmDialog\n          isOpen={isWaitDialogOpen}\n          isOnlyConfirm\n          confirmLabel={lang('OK')}\n          title={lang('ChannelBoost.Error.BoostTooOftenTitle')}\n          onClose={closeWaitDialog}\n          confirmHandler={closeWaitDialog}\n        >\n          {renderText(\n            lang(\n              'ChannelBoost.Error.BoostTooOftenText',\n              formatDateInFuture(lang, getServerTime(), boost!.cooldownUntil),\n            ),\n            ['simple_markdown', 'emoji'],\n          )}\n        </ConfirmDialog>\n      )}\n      {!isCurrentUserPremium && (\n        <ConfirmDialog\n          isOpen={isPremiumDialogOpen}\n          confirmLabel={lang('Common.Yes')}\n          title={lang('PremiumNeeded')}\n          onClose={closePremiumDialog}\n          confirmHandler={handleProceedPremium}\n        >\n          {renderText(lang('PremiumNeededForBoosting'), ['simple_markdown', 'emoji'])}\n        </ConfirmDialog>\n      )}\n    </Modal>\n  );\n};\n\nfunction getFirstAvailableBoost(myBoosts: ApiMyBoost[], chatId?: string) {\n  return myBoosts.find((boost) => !boost.chatId)\n    || myBoosts.filter((b) => chatId && b.chatId !== chatId)\n      .sort((a, b) => a.date - b.date)[0];\n}\n\nfunction areAllBoostsInChannel(myBoosts: ApiMyBoost[], chatId: string) {\n  return myBoosts.every((boost) => boost.chatId === chatId);\n}\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { modal }): StateProps => {\n    const chat = modal && selectChat(global, modal?.chatId);\n    const chatFullInfo = chat && selectChatFullInfo(global, chat.id);\n    const firstBoost = modal?.myBoosts && getFirstAvailableBoost(modal.myBoosts, modal.chatId);\n    const boostedChat = firstBoost?.chatId ? selectChat(global, firstBoost?.chatId) : undefined;\n\n    return {\n      chat,\n      chatFullInfo,\n      prevBoostedChat: boostedChat,\n      isCurrentUserPremium: selectIsCurrentUserPremium(global),\n    };\n  },\n)(BoostModal));\n","// extracted by mini-css-extract-plugin\nexport default {\"content\":\"KYHkJ9Qf\",\"title\":\"AwnUe4Qk\",\"value\":\"JGH6P9Az\",\"table\":\"DFRB0Ad4\",\"cell\":\"Cnh5ENvm\",\"row\":\"_lSByw2M\",\"section\":\"I0BEPBF0\",\"logo\":\"jbiW0GE8\",\"logoBackground\":\"upEQnNLY\",\"avatar\":\"SHQbPR5Y\",\"chatItem\":\"aS9U4hiQ\"};","import React, { memo, type TeactNode } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiPeer, ApiWebDocument } from '../../../api/types';\nimport type { CustomPeer } from '../../../types';\n\nimport buildClassName from '../../../util/buildClassName';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\n\nimport Avatar from '../../common/Avatar';\nimport PickerSelectedItem from '../../common/pickers/PickerSelectedItem';\nimport Button from '../../ui/Button';\nimport Modal from '../../ui/Modal';\n\nimport styles from './TableInfoModal.module.scss';\n\nimport StarsBackground from '../../../assets/stars-bg.png';\n\ntype ChatItem = { chatId: string };\n\nexport type TableData = [TeactNode, TeactNode | ChatItem][];\n\ntype OwnProps = {\n  isOpen?: boolean;\n  title?: string;\n  tableData?: TableData;\n  headerImageUrl?: string;\n  logoBackground?: string;\n  headerAvatarPeer?: ApiPeer | CustomPeer;\n  headerAvatarWebPhoto?: ApiWebDocument;\n  noHeaderImage?: boolean;\n  isGift?: boolean;\n  isPrizeStars?: boolean;\n  header?: TeactNode;\n  footer?: TeactNode;\n  buttonText?: string;\n  className?: string;\n  onClose: NoneToVoidFunction;\n  onButtonClick?: NoneToVoidFunction;\n};\n\nconst TableInfoModal = ({\n  isOpen,\n  title,\n  tableData,\n  headerImageUrl,\n  logoBackground,\n  headerAvatarPeer,\n  headerAvatarWebPhoto,\n  noHeaderImage,\n  isGift,\n  isPrizeStars,\n  header,\n  footer,\n  buttonText,\n  className,\n  onClose,\n  onButtonClick,\n}: OwnProps) => {\n  const { openChat } = getActions();\n  const handleOpenChat = useLastCallback((peerId: string) => {\n    openChat({ id: peerId });\n    onClose();\n  });\n\n  const withAvatar = Boolean(headerAvatarPeer || headerAvatarWebPhoto);\n\n  return (\n    <Modal\n      isOpen={isOpen}\n      hasCloseButton={Boolean(title)}\n      hasAbsoluteCloseButton={!title}\n      isSlim\n      title={title}\n      className={className}\n      contentClassName={styles.content}\n      onClose={onClose}\n    >\n      {!isGift && !isPrizeStars && !noHeaderImage && (\n        withAvatar ? (\n          <Avatar peer={headerAvatarPeer} webPhoto={headerAvatarWebPhoto} size=\"jumbo\" className={styles.avatar} />\n        ) : (\n          <div className={styles.section}>\n            <img className={styles.logo} src={headerImageUrl} alt=\"\" draggable={false} />\n            {Boolean(logoBackground)\n              && <img className={styles.logoBackground} src={StarsBackground} alt=\"\" draggable={false} />}\n          </div>\n        )\n      )}\n      {header}\n      <table className={styles.table}>\n        {tableData?.map(([label, value]) => (\n          <tr className={styles.row}>\n            <td className={buildClassName(styles.cell, styles.title)}>{label}</td>\n            <td className={buildClassName(styles.cell, styles.value)}>\n              {typeof value === 'object' && 'chatId' in value ? (\n                <PickerSelectedItem\n                  peerId={value.chatId}\n                  className={styles.chatItem}\n                  forceShowSelf\n                  fluid\n                  clickArg={value.chatId}\n                  onClick={handleOpenChat}\n                />\n              ) : value}\n            </td>\n          </tr>\n        ))}\n      </table>\n      {footer}\n      {buttonText && (\n        <Button size=\"smaller\" onClick={onButtonClick || onClose}>{buttonText}</Button>\n      )}\n    </Modal>\n  );\n};\n\nexport default memo(TableInfoModal);\n","// extracted by mini-css-extract-plugin\nexport default {\"clickable\":\"IzcASdzD\",\"centered\":\"xVLGjLub\"};","import React, { memo, useMemo } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiPeer } from '../../../api/types';\nimport type { TabState } from '../../../global/types';\n\nimport { TME_LINK_PREFIX } from '../../../config';\nimport { selectChatMessage, selectSender } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { formatDateTimeToString } from '../../../util/dates/dateFormat';\nimport renderText from '../../common/helpers/renderText';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport LinkField from '../../common/LinkField';\nimport TableInfoModal, { type TableData } from '../common/TableInfoModal';\n\nimport styles from './GiftCodeModal.module.scss';\n\nimport PremiumLogo from '../../../assets/premium/PremiumLogo.svg';\n\nexport type OwnProps = {\n  modal: TabState['giftCodeModal'];\n};\n\nexport type StateProps = {\n  currentUserId?: string;\n  messageSender?: ApiPeer;\n};\n\nconst GIFTCODE_PATH = 'giftcode';\n\nconst GiftCodeModal = ({\n  currentUserId,\n  modal,\n  messageSender,\n}: OwnProps & StateProps) => {\n  const {\n    closeGiftCodeModal, applyGiftCode, focusMessage,\n  } = getActions();\n  const lang = useOldLang();\n  const isOpen = Boolean(modal);\n\n  const canUse = (!modal?.info.toId || modal?.info.toId === currentUserId) && !modal?.info.usedAt;\n\n  const handleOpenGiveaway = useLastCallback(() => {\n    if (!modal || !modal.info.giveawayMessageId) return;\n    focusMessage({\n      chatId: modal.info.fromId!,\n      messageId: modal.info.giveawayMessageId,\n    });\n    closeGiftCodeModal();\n  });\n\n  const handleButtonClick = useLastCallback(() => {\n    if (canUse) {\n      applyGiftCode({ slug: modal!.slug });\n      return;\n    }\n    closeGiftCodeModal();\n  });\n\n  const modalData = useMemo(() => {\n    if (!modal) return undefined;\n    const { slug, info } = modal;\n\n    const fromId = info.fromId || messageSender?.id;\n\n    const header = (\n      <>\n        <p className={styles.centered}>{renderText(lang('lng_gift_link_about'), ['simple_markdown'])}</p>\n        <LinkField title=\"BoostingGiftLink\" link={`${TME_LINK_PREFIX}/${GIFTCODE_PATH}/${slug}`} />\n      </>\n    );\n\n    const tableData = [\n      [lang('BoostingFrom'), fromId ? { chatId: fromId } : lang('BoostingNoRecipient')],\n      [lang('BoostingTo'), info.toId ? { chatId: info.toId } : lang('BoostingNoRecipient')],\n      [lang('BoostingGift'), lang('BoostingTelegramPremiumFor', lang('Months', info.months, 'i'))],\n      [lang('BoostingReason'), (\n        <span className={buildClassName(info.giveawayMessageId && styles.clickable)} onClick={handleOpenGiveaway}>\n          {info.isFromGiveaway && !info.toId ? lang('BoostingIncompleteGiveaway')\n            : lang(info.isFromGiveaway ? 'BoostingGiveaway' : 'BoostingYouWereSelected')}\n        </span>\n      )],\n      [lang('BoostingDate'), formatDateTimeToString(info.date * 1000, lang.code, true)],\n    ] satisfies TableData;\n\n    const footer = (\n      <span className={styles.centered}>\n        {renderText(\n          info.usedAt ? lang('BoostingUsedLinkDate', formatDateTimeToString(info.usedAt * 1000, lang.code, true))\n            : lang('BoostingSendLinkToAnyone'),\n          ['simple_markdown'],\n        )}\n      </span>\n    );\n\n    return {\n      header,\n      tableData,\n      footer,\n    };\n  }, [lang, messageSender?.id, modal]);\n\n  if (!modalData) return undefined;\n\n  return (\n    <TableInfoModal\n      isOpen={isOpen}\n      title={lang('lng_gift_link_title')}\n      headerImageUrl={PremiumLogo}\n      tableData={modalData.tableData}\n      header={modalData.header}\n      footer={modalData.footer}\n      buttonText={canUse ? lang('BoostingUseLink') : lang('Close')}\n      onButtonClick={handleButtonClick}\n      onClose={closeGiftCodeModal}\n    />\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { modal }): StateProps => {\n    const { message } = modal || {};\n    const chatMessage = message && selectChatMessage(global, message.chatId, message.messageId);\n    const sender = chatMessage && selectSender(global, chatMessage);\n\n    return {\n      currentUserId: global.currentUserId,\n      messageSender: sender,\n    };\n  },\n)(GiftCodeModal));\n","// extracted by mini-css-extract-plugin\nexport default {\"description\":\"dl10exNi\",\"picker-wrapper\":\"gxWY5c6x\",\"pickerWrapper\":\"gxWY5c6x\",\"picker-header\":\"h8N7eyob\",\"pickerHeader\":\"h8N7eyob\",\"picker-header-info\":\"Rth2Qu07\",\"pickerHeaderInfo\":\"Rth2Qu07\",\"selection-toggle\":\"B6eAugx8\",\"selectionToggle\":\"B6eAugx8\",\"foldersWrapper\":\"mwcvgD2S\",\"folders\":\"LKavx8ww\",\"folder\":\"qglLx5Dn\",\"button-text\":\"bgaRuEMs\",\"buttonText\":\"bgaRuEMs\",\"button-badge\":\"rTe14Z22\",\"buttonBadge\":\"rTe14Z22\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback, useState } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiChatFolder, ApiChatlistInviteAlready } from '../../../api/types';\n\nimport buildClassName from '../../../util/buildClassName';\nimport renderText from '../../common/helpers/renderText';\n\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport PeerPicker from '../../common/pickers/PeerPicker';\nimport Badge from '../../ui/Badge';\nimport Button from '../../ui/Button';\n\nimport styles from './ChatlistModal.module.scss';\n\ntype OwnProps = {\n  invite: ApiChatlistInviteAlready;\n  folder: ApiChatFolder;\n};\n\nconst ChatlistAlready: FC<OwnProps> = ({ invite, folder }) => {\n  const { closeChatlistModal, joinChatlistInvite } = getActions();\n\n  const lang = useOldLang();\n\n  const [selectedPeerIds, setSelectedPeerIds] = useState<string[]>(invite.missingPeerIds);\n\n  const hasChatsToAdd = Boolean(invite.missingPeerIds.length);\n  const newChatsCount = hasChatsToAdd ? invite.missingPeerIds.length : 0;\n  const badgeText = selectedPeerIds.length ? selectedPeerIds.length.toString() : undefined;\n\n  const descriptionText = hasChatsToAdd\n    ? lang('FolderLinkSubtitleChats', [newChatsCount, folder.title], undefined, newChatsCount)\n    : lang('FolderLinkSubtitleAlready', folder.title);\n\n  const handleButtonClick = useCallback(() => {\n    closeChatlistModal();\n\n    if (!selectedPeerIds.length) return;\n\n    joinChatlistInvite({\n      invite,\n      peerIds: selectedPeerIds,\n    });\n  }, [invite, selectedPeerIds]);\n\n  const handleSelectionToggle = useCallback(() => {\n    const areAllSelected = selectedPeerIds.length === invite.missingPeerIds.length;\n    setSelectedPeerIds(areAllSelected ? [] : invite.missingPeerIds);\n  }, [invite.missingPeerIds, selectedPeerIds.length]);\n\n  return (\n    <div className={styles.content}>\n      <div className={styles.description}>\n        {renderText(descriptionText, ['simple_markdown', 'emoji'])}\n      </div>\n      <div className={buildClassName(styles.pickerWrapper, 'custom-scroll')}>\n        {Boolean(invite.missingPeerIds.length) && (\n          <>\n            <div className={styles.pickerHeader}>\n              <div className={styles.pickerHeaderInfo}>\n                {lang('FolderLinkHeaderChatsJoin', selectedPeerIds.length, 'i')}\n              </div>\n              <div\n                className={styles.selectionToggle}\n                role=\"button\"\n                tabIndex={0}\n                onClick={handleSelectionToggle}\n              >\n                {selectedPeerIds.length === invite.missingPeerIds.length ? lang('DeselectAll') : lang('SelectAll')}\n              </div>\n            </div>\n            <PeerPicker\n              itemIds={invite.missingPeerIds}\n              onSelectedIdsChange={setSelectedPeerIds}\n              selectedIds={selectedPeerIds}\n              allowMultiple\n              withStatus\n              itemInputType=\"checkbox\"\n            />\n          </>\n        )}\n        <div className={styles.pickerHeader}>\n          <div className={styles.pickerHeaderInfo}>\n            {lang('FolderLinkHeaderAlready')}\n          </div>\n        </div>\n        <PeerPicker\n          itemIds={invite.alreadyPeerIds}\n          lockedSelectedIds={invite.alreadyPeerIds}\n          selectedIds={invite.alreadyPeerIds}\n          allowMultiple\n          withStatus\n          itemInputType=\"checkbox\"\n        />\n      </div>\n      <Button\n        size=\"smaller\"\n        onClick={handleButtonClick}\n      >\n        <div className={styles.buttonText}>\n          {!selectedPeerIds.length && lang('OK')}\n          {Boolean(selectedPeerIds.length) && (\n            <>\n              {lang('FolderLinkButtonJoinPlural', selectedPeerIds.length, 'i')}\n              <Badge className={styles.buttonBadge} text={badgeText} isAlternateColor />\n            </>\n          )}\n        </div>\n      </Button>\n    </div>\n  );\n};\n\nexport default memo(ChatlistAlready);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback, useState } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiChatFolder } from '../../../api/types';\n\nimport buildClassName from '../../../util/buildClassName';\nimport { MEMO_EMPTY_ARRAY } from '../../../util/memo';\nimport renderText from '../../common/helpers/renderText';\n\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport PeerPicker from '../../common/pickers/PeerPicker';\nimport Badge from '../../ui/Badge';\nimport Button from '../../ui/Button';\n\nimport styles from './ChatlistModal.module.scss';\n\ntype OwnProps = {\n  folder: ApiChatFolder;\n  suggestedPeerIds?: string[];\n};\n\nconst ChatlistDelete: FC<OwnProps> = ({\n  folder,\n  suggestedPeerIds = MEMO_EMPTY_ARRAY,\n}) => {\n  const { closeChatlistModal, leaveChatlist } = getActions();\n\n  const lang = useOldLang();\n\n  const [selectedPeerIds, setSelectedPeerIds] = useState<string[]>(suggestedPeerIds);\n\n  const badgeText = selectedPeerIds.length ? selectedPeerIds.length.toString() : undefined;\n\n  const handleSelectionToggle = useCallback(() => {\n    const areAllSelected = selectedPeerIds.length === suggestedPeerIds.length;\n    setSelectedPeerIds(areAllSelected ? [] : suggestedPeerIds);\n  }, [suggestedPeerIds, selectedPeerIds.length]);\n\n  const handleButtonClick = useCallback(() => {\n    closeChatlistModal();\n    leaveChatlist({ folderId: folder.id, peerIds: selectedPeerIds });\n  }, [folder.id, selectedPeerIds]);\n\n  return (\n    <div className={styles.content}>\n      {Boolean(suggestedPeerIds?.length) && (\n        <>\n          <div className={styles.description}>\n            {renderText(lang('FolderLinkSubtitleRemove'), ['simple_markdown', 'emoji'])}\n          </div>\n          <div className={buildClassName(styles.pickerWrapper, 'custom-scroll')}>\n            <div className={styles.pickerHeader}>\n              <div className={styles.pickerHeaderInfo}>\n                {lang('FolderLinkHeaderChatsQuit', selectedPeerIds.length, 'i')}\n              </div>\n              <div\n                className={styles.selectionToggle}\n                role=\"button\"\n                tabIndex={0}\n                onClick={handleSelectionToggle}\n              >\n                {selectedPeerIds.length === suggestedPeerIds.length ? lang('DeselectAll') : lang('SelectAll')}\n              </div>\n            </div>\n            <PeerPicker\n              itemIds={suggestedPeerIds}\n              onSelectedIdsChange={setSelectedPeerIds}\n              selectedIds={selectedPeerIds}\n              allowMultiple\n              withStatus\n              itemInputType=\"checkbox\"\n            />\n          </div>\n        </>\n      )}\n      <Button\n        size=\"smaller\"\n        onClick={handleButtonClick}\n      >\n        <div className={styles.buttonText}>\n          {!selectedPeerIds.length && lang('FolderLinkButtonRemove')}\n          {Boolean(selectedPeerIds.length) && (\n            <>\n              {lang('FolderLinkButtonRemoveChats')}\n              <Badge className={styles.buttonBadge} text={badgeText} isAlternateColor />\n            </>\n          )}\n        </div>\n      </Button>\n    </div>\n  );\n};\n\nexport default memo(ChatlistDelete);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useMemo, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, getGlobal } from '../../../global';\n\nimport type { ApiChatlistInviteNew } from '../../../api/types';\n\nimport buildClassName from '../../../util/buildClassName';\nimport renderText from '../../common/helpers/renderText';\n\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport PeerPicker from '../../common/pickers/PeerPicker';\nimport Badge from '../../ui/Badge';\nimport Button from '../../ui/Button';\n\nimport styles from './ChatlistModal.module.scss';\n\ntype OwnProps = {\n  invite: ApiChatlistInviteNew;\n};\n\nconst ChatlistNew: FC<OwnProps> = ({ invite }) => {\n  const { closeChatlistModal, joinChatlistInvite } = getActions();\n\n  const lang = useOldLang();\n  const [selectedPeerIds, setSelectedPeerIds] = useState<string[]>(invite.peerIds);\n\n  const joinedIds = useMemo(() => {\n    const chatsById = getGlobal().chats.byId;\n    return invite.peerIds.filter((id) => !chatsById[id].isNotJoined);\n  }, [invite.peerIds]);\n\n  const selectedCount = selectedPeerIds.length - joinedIds.length;\n\n  const badgeText = selectedCount ? selectedCount.toString() : undefined;\n\n  const handleButtonClick = useCallback(() => {\n    closeChatlistModal();\n\n    joinChatlistInvite({\n      invite,\n      peerIds: selectedPeerIds,\n    });\n  }, [invite, selectedPeerIds]);\n\n  const handleSelectionToggle = useCallback(() => {\n    const areAllSelected = selectedPeerIds.length === invite.peerIds.length;\n    setSelectedPeerIds(areAllSelected ? joinedIds : invite.peerIds);\n  }, [invite.peerIds, joinedIds, selectedPeerIds.length]);\n\n  return (\n    <div className={styles.content}>\n      <div className={styles.description}>\n        {renderText(lang('FolderLinkSubtitle', invite.title), ['simple_markdown', 'emoji'])}\n      </div>\n      <div className={buildClassName(styles.pickerWrapper, 'custom-scroll')}>\n        <div className={styles.pickerHeader}>\n          <div className={styles.pickerHeaderInfo}>\n            {lang('FolderLinkHeaderChatsJoin', selectedCount, 'i')}\n          </div>\n          <div\n            className={styles.selectionToggle}\n            role=\"button\"\n            tabIndex={0}\n            onClick={handleSelectionToggle}\n          >\n            {selectedPeerIds.length === invite.peerIds.length ? lang('DeselectAll') : lang('SelectAll')}\n          </div>\n        </div>\n        <PeerPicker\n          itemIds={invite.peerIds}\n          lockedSelectedIds={joinedIds}\n          onSelectedIdsChange={setSelectedPeerIds}\n          selectedIds={selectedPeerIds}\n          allowMultiple\n          withStatus\n          itemInputType=\"checkbox\"\n        />\n      </div>\n      <Button\n        onClick={handleButtonClick}\n        size=\"smaller\"\n        disabled={!selectedPeerIds.length}\n      >\n        <div className={styles.buttonText}>\n          {lang('FolderLinkButtonAdd', invite.title)}\n          <Badge className={styles.buttonBadge} text={badgeText} isAlternateColor />\n        </div>\n      </Button>\n    </div>\n  );\n};\n\nexport default memo(ChatlistNew);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback, useMemo } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiChatFolder } from '../../../api/types';\nimport type { TabState } from '../../../global/types';\n\nimport { selectChatFolder } from '../../../global/selectors';\n\nimport useOldLang from '../../../hooks/useOldLang';\nimport usePreviousDeprecated from '../../../hooks/usePreviousDeprecated';\n\nimport Modal from '../../ui/Modal';\nimport Tab from '../../ui/Tab';\nimport ChatlistAlready from './ChatlistAlready';\nimport ChatlistDelete from './ChatlistDelete';\nimport ChatlistNew from './ChatlistNew';\n\nimport styles from './ChatlistModal.module.scss';\n\nexport type OwnProps = {\n  modal?: TabState['chatlistModal'];\n};\n\ntype StateProps = {\n  folder?: ApiChatFolder;\n};\n\nconst ChatlistInviteModal: FC<OwnProps & StateProps> = ({\n  modal,\n  folder,\n}) => {\n  const { closeChatlistModal } = getActions();\n\n  const lang = useOldLang();\n\n  const isOpen = Boolean(modal);\n  const renderingInfo = usePreviousDeprecated(modal) || modal;\n  const renderingFolder = usePreviousDeprecated(folder) || folder;\n\n  const title = useMemo(() => {\n    if (!renderingInfo) return undefined;\n    if (renderingInfo.invite) {\n      const invite = renderingInfo.invite;\n      if ('alreadyPeerIds' in invite) {\n        return invite.missingPeerIds.length ? lang('FolderLinkTitleAddChats') : lang('FolderLinkTitleAlready');\n      }\n      return lang('FolderLinkTitleAdd');\n    }\n    if (renderingInfo.removal) {\n      return lang('FolderLinkTitleRemove');\n    }\n\n    return undefined;\n  }, [lang, renderingInfo]);\n\n  const renderingFolderTitle = useMemo(() => {\n    if (renderingFolder) return renderingFolder.title;\n    if (renderingInfo?.invite && 'title' in renderingInfo.invite) return renderingInfo.invite.title;\n    return undefined;\n  }, [renderingFolder, renderingInfo]);\n\n  const folderTabNumber = useMemo(() => {\n    if (!renderingInfo?.invite) return undefined;\n    if ('missingPeerIds' in renderingInfo.invite) return renderingInfo.invite.missingPeerIds.length;\n    return undefined;\n  }, [renderingInfo]);\n\n  function renderFolders(folderTitle: string) {\n    return (\n      <div className={styles.foldersWrapper}>\n        <div className={styles.folders}>\n          <Tab className={styles.folder} title={lang('FolderLinkPreviewLeft')} />\n          <Tab className={styles.folder} isActive badgeCount={folderTabNumber} isBadgeActive title={folderTitle} />\n          <Tab className={styles.folder} title={lang('FolderLinkPreviewRight')} />\n        </div>\n      </div>\n    );\n  }\n\n  const renderContent = useCallback(() => {\n    if (!renderingInfo) return undefined;\n    if (renderingInfo.invite) {\n      const invite = renderingInfo.invite;\n      if ('alreadyPeerIds' in invite) {\n        return <ChatlistAlready invite={invite} folder={renderingFolder!} />;\n      }\n\n      return <ChatlistNew invite={invite} />;\n    }\n\n    if (renderingInfo.removal) {\n      return <ChatlistDelete folder={renderingFolder!} suggestedPeerIds={renderingInfo.removal.suggestedPeerIds} />;\n    }\n\n    return undefined;\n  }, [renderingFolder, renderingInfo]);\n\n  return (\n    <Modal\n      isOpen={isOpen}\n      title={title}\n      onClose={closeChatlistModal}\n      isSlim\n      hasCloseButton\n    >\n      {renderingFolderTitle && renderFolders(renderingFolderTitle)}\n      {renderContent()}\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { modal }): StateProps => {\n    const { invite, removal } = modal || {};\n    const folderId = removal?.folderId || (invite && 'folderId' in invite ? invite.folderId : undefined);\n    const folder = folderId ? selectChatFolder(global, folderId) : undefined;\n\n    return {\n      folder,\n    };\n  },\n)(ChatlistInviteModal));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"TtE8LQNJ\",\"transition\":\"nXQS4E59\",\"main\":\"JuWZY1ds\",\"container\":\"mnhBs1uK\",\"section\":\"lYkNd_gb\",\"secondaryInfo\":\"fBublGG8\",\"logo\":\"sjhpNB8l\",\"logoBackground\":\"jjESKN3H\",\"headerHext\":\"xbpAOr37\",\"description\":\"teXilLxe\",\"header\":\"fnhXotO2\",\"starHeaderText\":\"iUwego5s\",\"hiddenHeader\":\"DZk6d6hF\",\"closeButton\":\"piD1PXHW\",\"balance\":\"LitvQduT\",\"smallerText\":\"rUnPcfmE\",\"balanceBottom\":\"F5BTkZ9G\",\"modalBalance\":\"t8tMrx3y\",\"starButton\":\"oOt4VBD2\",\"paymentContent\":\"OReEUNTV\",\"paymentImages\":\"oKorQYTC\",\"paymentPhoto\":\"HGTrEtUF\",\"paymentImageBackground\":\"os8jb_qv\",\"paymentAmount\":\"sd2jk3Hn\",\"paymentButton\":\"VzR5cibf\",\"paymentButtonStar\":\"Uhg7yWxK\",\"transactions\":\"Qvc0fTTH\"};","import React, { memo } from '../../../lib/teact/teact';\n\nimport buildClassName from '../../../util/buildClassName';\nimport { formatInteger } from '../../../util/textFormat';\n\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport StarIcon from '../../common/icons/StarIcon';\n\nimport styles from './StarsBalanceModal.module.scss';\n\ntype OwnProps = {\n  balance: number;\n  className?: string;\n};\n\nconst BalanceBlock = ({ balance, className }: OwnProps) => {\n  const lang = useOldLang();\n\n  return (\n    <div className={buildClassName(styles.balance, className)}>\n      <span className={styles.smallerText}>{lang('StarsBalance')}</span>\n      <div className={styles.balanceBottom}>\n        <StarIcon type=\"gold\" size=\"middle\" />\n        {formatInteger(balance)}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(BalanceBlock);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"jQkp75Gb\",\"preview\":\"OYGSN3PF\",\"count\":\"KX1yz2Jy\",\"thumb\":\"EvinKr5k\",\"noOutline\":\"KSAAsUDv\",\"itemCount1\":\"GxDajfX_\",\"itemCount2\":\"jXuZoxq8\",\"itemCount3\":\"TPn3XGHJ\",\"blurry\":\"hWZuxLS8\",\"full\":\"w56QPFhl\",\"fadeIn\":\"ds43W8Wq\"};","import React, { memo } from '../../../../lib/teact/teact';\n\nimport type { ApiMediaExtendedPreview, BoughtPaidMedia } from '../../../../api/types';\n\nimport { getMediaHash, getMediaThumbUri } from '../../../../global/helpers';\nimport buildClassName from '../../../../util/buildClassName';\n\nimport useMedia from '../../../../hooks/useMedia';\n\nimport Icon from '../../../common/icons/Icon';\nimport MediaSpoiler from '../../../common/MediaSpoiler';\n\nimport styles from './PaidMediaThumb.module.scss';\n\ntype OwnProps = {\n  className?: string;\n  media: ApiMediaExtendedPreview[] | BoughtPaidMedia[];\n  isTransactionPreview?: boolean;\n  onClick?: NoneToVoidFunction;\n};\n\nconst THUMB_LIMIT = 3;\nconst PREVIEW_THUMB_LIMIT = 2;\n\nconst PaidMediaThumb = ({\n  media, className, isTransactionPreview, onClick,\n}: OwnProps) => {\n  const count = Math.min(media.length, isTransactionPreview ? PREVIEW_THUMB_LIMIT : THUMB_LIMIT);\n  const isLocked = 'mediaType' in media[0];\n  return (\n    <div\n      className={buildClassName(\n        styles.root,\n        styles[`itemCount${count}`],\n        isTransactionPreview && styles.preview,\n        className,\n      )}\n      dir=\"rtl\"\n      onClick={onClick}\n    >\n      {media.slice(0, count).reverse().map((item, i, arr) => {\n        const realIndex = arr.length - i - 1;\n        return 'mediaType' in item ? (\n          <MediaSpoiler\n            className={styles.thumb}\n            isVisible\n            width={item.width}\n            height={item.height}\n            thumbDataUri={item.thumbnail?.dataUri}\n          />\n        ) : (\n          <SingleMediaThumb\n            className={buildClassName(isTransactionPreview && realIndex > 0 && styles.noOutline)}\n            boughtMedia={item}\n            index={realIndex}\n          />\n        );\n      })}\n      {isLocked && (\n        <div className={styles.count}>\n          <Icon name=\"stars-lock\" />\n          {media.length > 1 ? media.length : ''}\n        </div>\n      )}\n    </div>\n  );\n};\n\nfunction SingleMediaThumb({\n  boughtMedia,\n  index,\n  className,\n}: {\n  boughtMedia: BoughtPaidMedia;\n  index?: number;\n  className?: string;\n}) {\n  const media = (boughtMedia.video || boughtMedia.photo)!;\n  const mediaHash = getMediaHash(media, 'pictogram');\n  const thumb = getMediaThumbUri(media);\n\n  const mediaBlob = useMedia(mediaHash);\n\n  return (\n    <div className={buildClassName(styles.thumb, index !== undefined && `stars-transaction-media-${index}`, className)}>\n      {thumb && <img className={styles.blurry} src={thumb} alt=\"\" />}\n      {mediaBlob && <img className={styles.full} src={mediaBlob} alt=\"\" />}\n    </div>\n  );\n}\n\nexport default memo(PaidMediaThumb);\n","import React, { memo, useMemo } from '../../../../lib/teact/teact';\nimport { getActions } from '../../../../global';\n\nimport type {\n  ApiPeer,\n  ApiStarsTransaction,\n} from '../../../../api/types';\nimport type { GlobalState } from '../../../../global/types';\nimport type { CustomPeer } from '../../../../types';\n\nimport { getSenderTitle } from '../../../../global/helpers';\nimport { buildStarsTransactionCustomPeer, formatStarsTransactionAmount } from '../../../../global/helpers/payments';\nimport { selectPeer } from '../../../../global/selectors';\nimport buildClassName from '../../../../util/buildClassName';\nimport { formatDateTimeToString } from '../../../../util/dates/dateFormat';\nimport { CUSTOM_PEER_PREMIUM } from '../../../../util/objects/customPeer';\n\nimport useSelector from '../../../../hooks/data/useSelector';\nimport useLastCallback from '../../../../hooks/useLastCallback';\nimport useOldLang from '../../../../hooks/useOldLang';\n\nimport Avatar from '../../../common/Avatar';\nimport StarIcon from '../../../common/icons/StarIcon';\nimport PaidMediaThumb from './PaidMediaThumb';\n\nimport styles from './StarsTransactionItem.module.scss';\n\ntype OwnProps = {\n  transaction: ApiStarsTransaction;\n};\n\nfunction selectOptionalPeer(peerId?: string) {\n  return (global: GlobalState) => (\n    peerId ? selectPeer(global, peerId) : undefined\n  );\n}\n\nconst StarsTransactionItem = ({ transaction }: OwnProps) => {\n  const { openStarsTransactionModal } = getActions();\n  const {\n    date,\n    stars,\n    photo,\n    peer: transactionPeer,\n    extendedMedia,\n  } = transaction;\n  const lang = useOldLang();\n\n  const peerId = transactionPeer.type === 'peer' ? transactionPeer.id : undefined;\n  const peer = useSelector(selectOptionalPeer(peerId));\n\n  const data = useMemo(() => {\n    let title = transaction.title || (transaction.extendedMedia ? lang('StarMediaPurchase') : undefined);\n    let description;\n    let status: string | undefined;\n    let avatarPeer: ApiPeer | CustomPeer | undefined;\n\n    if (transaction.peer.type === 'peer') {\n      description = peer && getSenderTitle(lang, peer);\n      avatarPeer = peer || CUSTOM_PEER_PREMIUM;\n    } else {\n      const customPeer = buildStarsTransactionCustomPeer(transaction.peer);\n      title = lang(customPeer.titleKey);\n      description = lang(customPeer.subtitleKey!);\n      avatarPeer = customPeer;\n    }\n\n    if (transaction.photo) {\n      avatarPeer = undefined;\n    }\n\n    if (transaction.isRefund) {\n      status = lang('StarsRefunded');\n    }\n\n    if (transaction.hasFailed) {\n      status = lang('StarsFailed');\n    }\n\n    if (transaction.isPending) {\n      status = lang('StarsPending');\n    }\n\n    return {\n      title,\n      description,\n      avatarPeer,\n      status,\n    };\n  }, [lang, peer, transaction]);\n\n  const handleClick = useLastCallback(() => {\n    openStarsTransactionModal({ transaction });\n  });\n\n  return (\n    <div className={styles.root} onClick={handleClick}>\n      {extendedMedia ? <PaidMediaThumb media={extendedMedia} isTransactionPreview />\n        : <Avatar size=\"medium\" webPhoto={photo} peer={data.avatarPeer} />}\n      <div className={styles.info}>\n        <h3 className={styles.title}>{data.title}</h3>\n        <p className={styles.description}>{data.description}</p>\n        <p className={styles.date}>\n          {formatDateTimeToString(date * 1000, lang.code, true)}\n          {data.status && ` — (${data.status})`}\n        </p>\n      </div>\n      <div className={styles.stars}>\n        <span className={buildClassName(styles.amount, stars < 0 ? styles.negative : styles.positive)}>\n          {formatStarsTransactionAmount(stars)}\n        </span>\n        <StarIcon className={styles.star} type=\"gold\" size=\"big\" />\n      </div>\n    </div>\n  );\n};\n\nexport default memo(StarsTransactionItem);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"aHAxv_Jg\",\"info\":\"oyYrn3II\",\"stars\":\"K5lc75ku\",\"amount\":\"QLQPuLAr\",\"star\":\"EFL6qa9z\",\"title\":\"e0pK8CJ_\",\"description\":\"xbERdDMQ\",\"date\":\"l6CwQ0Ev\",\"positive\":\"P_42_ZWR\",\"negative\":\"TGjnLJfH\"};","import React, {\n  memo, useEffect, useMemo, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiUser } from '../../../api/types';\nimport type { GlobalState, TabState } from '../../../global/types';\n\nimport { getUserFullName } from '../../../global/helpers';\nimport { selectIsPremiumPurchaseBlocked, selectUser } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport renderText from '../../common/helpers/renderText';\n\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Icon from '../../common/icons/Icon';\nimport StarIcon from '../../common/icons/StarIcon';\nimport SafeLink from '../../common/SafeLink';\nimport Button from '../../ui/Button';\nimport InfiniteScroll from '../../ui/InfiniteScroll';\nimport Modal from '../../ui/Modal';\nimport TabList, { type TabWithProperties } from '../../ui/TabList';\nimport Transition from '../../ui/Transition';\nimport BalanceBlock from './BalanceBlock';\nimport TransactionItem from './transaction/StarsTransactionItem';\n\nimport styles from './StarsBalanceModal.module.scss';\n\nimport StarLogo from '../../../assets/icons/StarLogo.svg';\nimport StarsBackground from '../../../assets/stars-bg.png';\n\nconst TRANSACTION_TYPES = ['all', 'inbound', 'outbound'] as const;\nconst TRANSACTION_TABS: TabWithProperties[] = [\n  { title: 'StarsTransactionsAll' },\n  { title: 'StarsTransactionsIncoming' },\n  { title: 'StarsTransactionsOutgoing' },\n];\n\nexport type OwnProps = {\n  modal: TabState['starsBalanceModal'];\n};\n\ntype StateProps = {\n  starsBalanceState?: GlobalState['stars'];\n  originPaymentBot?: ApiUser;\n  canBuyPremium?: boolean;\n};\n\nconst StarsBalanceModal = ({\n  modal, starsBalanceState, originPaymentBot, canBuyPremium,\n}: OwnProps & StateProps) => {\n  const {\n    closeStarsBalanceModal, loadStarsTransactions, openStarsGiftingModal, openStarsGiftModal,\n  } = getActions();\n\n  const { balance, history } = starsBalanceState || {};\n\n  const oldLang = useOldLang();\n  const lang = useLang();\n\n  const [isHeaderHidden, setHeaderHidden] = useState(true);\n  const [selectedTabIndex, setSelectedTabIndex] = useState(0);\n\n  const isOpen = Boolean(modal && starsBalanceState);\n\n  const productStarsPrice = modal?.originPayment?.invoice?.amount;\n  const starsNeeded = productStarsPrice ? productStarsPrice - (balance || 0) : undefined;\n  const originBotName = originPaymentBot && getUserFullName(originPaymentBot);\n  const shouldShowTransactions = Boolean(history?.all?.transactions.length && !modal?.originPayment);\n\n  useEffect(() => {\n    if (!isOpen) {\n      setHeaderHidden(true);\n      setSelectedTabIndex(0);\n    }\n  }, [isOpen]);\n\n  const tosText = useMemo(() => {\n    if (!isOpen) return undefined;\n\n    const text = oldLang('lng_credits_summary_options_about');\n    const parts = text.split('{link}');\n    return [\n      parts[0],\n      <SafeLink url={oldLang('StarsTOSLink')} text={oldLang('lng_credits_summary_options_about_link')} />,\n      parts[1],\n    ];\n  }, [isOpen, oldLang]);\n\n  function handleScroll(e: React.UIEvent<HTMLDivElement>) {\n    const { scrollTop } = e.currentTarget;\n\n    setHeaderHidden(scrollTop <= 150);\n  }\n\n  const handleLoadMore = useLastCallback(() => {\n    loadStarsTransactions({\n      type: TRANSACTION_TYPES[selectedTabIndex],\n    });\n  });\n\n  const openStarsGiftingModalHandler = useLastCallback(() => {\n    openStarsGiftingModal({});\n  });\n\n  const openStarsInfoModalHandler = useLastCallback(() => {\n    openStarsGiftModal({});\n  });\n\n  return (\n    <Modal className={styles.root} isOpen={isOpen} onClose={closeStarsBalanceModal}>\n      <div className={buildClassName(styles.main, 'custom-scroll')} onScroll={handleScroll}>\n        <Button\n          round\n          size=\"smaller\"\n          className={styles.closeButton}\n          color=\"translucent\"\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => closeStarsBalanceModal()}\n          ariaLabel={lang('Close')}\n        >\n          <Icon name=\"close\" />\n        </Button>\n        <BalanceBlock balance={balance || 0} className={styles.modalBalance} />\n        <div className={buildClassName(styles.header, isHeaderHidden && styles.hiddenHeader)}>\n          <h2 className={styles.starHeaderText}>\n            {oldLang('TelegramStars')}\n          </h2>\n        </div>\n        <div className={styles.section}>\n          <img className={styles.logo} src={StarLogo} alt=\"\" draggable={false} />\n          <img className={styles.logoBackground} src={StarsBackground} alt=\"\" draggable={false} />\n          <h2 className={styles.headerText}>\n            {starsNeeded ? oldLang('StarsNeededTitle', starsNeeded) : oldLang('TelegramStars')}\n          </h2>\n          <div className={styles.description}>\n            {renderText(\n              starsNeeded ? oldLang('StarsNeededText', originBotName) : oldLang('TelegramStarsInfo'),\n              ['simple_markdown', 'emoji'],\n            )}\n          </div>\n          {canBuyPremium && (\n            <Button\n              className={styles.starButton}\n              onClick={openStarsInfoModalHandler}\n            >\n              {oldLang('Star.List.BuyMoreStars')}\n            </Button>\n          )}\n          {canBuyPremium && (\n            <Button\n              className={buildClassName(styles.starButton, 'settings-main-menu-star')}\n              color=\"translucent\"\n              onClick={openStarsGiftingModalHandler}\n            >\n              <StarIcon className=\"icon\" type=\"gold\" size=\"big\" />\n              {oldLang('TelegramStarsGift')}\n            </Button>\n          )}\n        </div>\n        <div className={styles.secondaryInfo}>\n          {tosText}\n        </div>\n        {shouldShowTransactions && (\n          <div className={styles.container}>\n            <div className={styles.section}>\n              <Transition\n                name={lang.isRtl ? 'slideOptimizedRtl' : 'slideOptimized'}\n                activeKey={selectedTabIndex}\n                renderCount={TRANSACTION_TABS.length}\n                shouldRestoreHeight\n                className={styles.transition}\n              >\n                <InfiniteScroll\n                  onLoadMore={handleLoadMore}\n                  items={history?.[TRANSACTION_TYPES[selectedTabIndex]]?.transactions}\n                  className={styles.transactions}\n                  noFastList\n                >\n                  {history?.[TRANSACTION_TYPES[selectedTabIndex]]?.transactions.map((transaction) => (\n                    <TransactionItem\n                      key={`${transaction.id}-${transaction.isRefund}`}\n                      transaction={transaction}\n                    />\n                  ))}\n                </InfiniteScroll>\n              </Transition>\n            </div>\n            <TabList\n              activeTab={selectedTabIndex}\n              tabs={TRANSACTION_TABS}\n              onSwitchTab={setSelectedTabIndex}\n            />\n          </div>\n        )}\n      </div>\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { modal }): StateProps => {\n    const botId = modal?.originPayment?.botId;\n    const bot = botId ? selectUser(global, botId) : undefined;\n\n    return {\n      starsBalanceState: global.stars,\n      originPaymentBot: bot,\n      canBuyPremium: !selectIsPremiumPurchaseBlocked(global),\n    };\n  },\n)(StarsBalanceModal));\n","import React, { memo, useEffect, useMemo } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type {\n  ApiChat, ApiMediaExtendedPreview, ApiMessage, ApiUser,\n} from '../../../api/types';\nimport type { GlobalState, TabState } from '../../../global/types';\n\nimport { getChatTitle, getUserFullName } from '../../../global/helpers';\nimport {\n  selectChat, selectChatMessage, selectTabState, selectUser,\n} from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport renderText from '../../common/helpers/renderText';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Avatar from '../../common/Avatar';\nimport StarIcon from '../../common/icons/StarIcon';\nimport Button from '../../ui/Button';\nimport Modal from '../../ui/Modal';\nimport BalanceBlock from './BalanceBlock';\nimport PaidMediaThumb from './transaction/PaidMediaThumb';\n\nimport styles from './StarsBalanceModal.module.scss';\n\nimport StarsBackground from '../../../assets/stars-bg.png';\n\nexport type OwnProps = {\n  modal: TabState['isStarPaymentModalOpen'];\n};\n\ntype StateProps = {\n  payment?: TabState['payment'];\n  starsBalanceState?: GlobalState['stars'];\n  bot?: ApiUser;\n  paidMediaMessage?: ApiMessage;\n  paidMediaChat?: ApiChat;\n};\n\nconst StarPaymentModal = ({\n  modal,\n  bot,\n  starsBalanceState,\n  payment,\n  paidMediaMessage,\n  paidMediaChat,\n}: OwnProps & StateProps) => {\n  const { closePaymentModal, openStarsBalanceModal, sendStarPaymentForm } = getActions();\n  const [isLoading, markLoading, unmarkLoading] = useFlag();\n  const isOpen = Boolean(modal && starsBalanceState);\n\n  const photo = payment?.invoice?.photo;\n\n  const lang = useOldLang();\n\n  useEffect(() => {\n    if (!isOpen) {\n      unmarkLoading();\n    }\n  }, [isOpen]);\n\n  const descriptionText = useMemo(() => {\n    if (!payment?.invoice) {\n      return '';\n    }\n\n    const botName = getUserFullName(bot);\n    const starsText = lang('Stars.Intro.PurchasedText.Stars', payment.invoice.amount);\n\n    if (paidMediaMessage) {\n      const extendedMedia = paidMediaMessage.content.paidMedia!.extendedMedia as ApiMediaExtendedPreview[];\n      const areAllPhotos = extendedMedia.every((media) => !media.duration);\n      const areAllVideos = extendedMedia.every((media) => !!media.duration);\n\n      const mediaText = areAllPhotos ? lang('Stars.Transfer.Photos', extendedMedia.length)\n        : areAllVideos ? lang('Stars.Transfer.Videos', extendedMedia.length)\n          : lang('Media', extendedMedia.length);\n\n      const channelTitle = getChatTitle(lang, paidMediaChat!);\n      return lang('Stars.Transfer.UnlockInfo', [mediaText, channelTitle, starsText]);\n    }\n\n    return lang('Stars.Transfer.Info', [payment.invoice.title, botName, starsText]);\n  }, [payment?.invoice, bot, lang, paidMediaMessage, paidMediaChat]);\n\n  const handlePayment = useLastCallback(() => {\n    const price = payment?.invoice?.amount;\n    const balance = starsBalanceState?.balance;\n    if (price === undefined || balance === undefined) {\n      return;\n    }\n\n    if (price > balance) {\n      openStarsBalanceModal({\n        originPayment: payment,\n      });\n      return;\n    }\n\n    sendStarPaymentForm();\n    markLoading();\n  });\n\n  return (\n    <Modal\n      contentClassName={styles.paymentContent}\n      isOpen={isOpen}\n      hasAbsoluteCloseButton\n      isSlim\n      onClose={closePaymentModal}\n    >\n      <BalanceBlock balance={starsBalanceState?.balance || 0} className={styles.modalBalance} />\n      <div className={styles.paymentImages} dir={lang.isRtl ? 'ltr' : 'rtl'}>\n        {paidMediaMessage ? (\n          <PaidMediaThumb media={paidMediaMessage.content.paidMedia!.extendedMedia} />\n        ) : (\n          <>\n            <Avatar peer={bot} size=\"giant\" />\n            {photo && <Avatar className={styles.paymentPhoto} webPhoto={photo} size=\"giant\" />}\n          </>\n        )}\n        <img className={styles.paymentImageBackground} src={StarsBackground} alt=\"\" draggable={false} />\n      </div>\n      <h2 className={styles.headerText}>\n        {lang('StarsConfirmPurchaseTitle')}\n      </h2>\n      <div className={buildClassName(styles.description, styles.smallerText)}>\n        {renderText(descriptionText, ['simple_markdown', 'emoji'])}\n      </div>\n      <Button className={styles.paymentButton} size=\"smaller\" onClick={handlePayment} isLoading={isLoading}>\n        {lang('Stars.Transfer.Pay')}\n        <div className={styles.paymentAmount}>\n          {payment?.invoice?.amount}\n          <StarIcon className={styles.paymentButtonStar} size=\"small\" />\n        </div>\n      </Button>\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const payment = selectTabState(global).payment;\n    const bot = payment?.botId ? selectUser(global, payment.botId) : undefined;\n\n    const messageInputInvoice = payment.inputInvoice?.type === 'message' ? payment.inputInvoice : undefined;\n    const message = messageInputInvoice\n      ? selectChatMessage(global, messageInputInvoice.chatId, messageInputInvoice.messageId) : undefined;\n    const chat = messageInputInvoice ? selectChat(global, messageInputInvoice.chatId) : undefined;\n    const isPaidMedia = message?.content.paidMedia;\n\n    return {\n      bot,\n      starsBalanceState: global.stars,\n      payment,\n      paidMediaMessage: isPaidMedia ? message : undefined,\n      paidMediaChat: isPaidMedia ? chat : undefined,\n    };\n  },\n)(StarPaymentModal));\n","// extracted by mini-css-extract-plugin\nexport default {\"modal\":\"IzhfRIWu\",\"positive\":\"jvBZSrpd\",\"negative\":\"xDyq9cc0\",\"header\":\"qBOIq6Jn\",\"starsHeader\":\"VqKkGnpy\",\"amount\":\"sso9uZM6\",\"title\":\"ZZAj3hj7\",\"description\":\"NuWOY7ED\",\"tid\":\"tMF8VIOM\",\"footer\":\"KgzPpgS6\",\"starsBackground\":\"nML8IQqX\",\"mediaShift\":\"owKhvwqB\",\"copyIcon\":\"voCttFzS\",\"mediaPreview\":\"C5r59yiV\",\"starTitle\":\"KIlRQemn\",\"subtitle\":\"mFYcIYMJ\"};","import type { FC } from '../../../../lib/teact/teact';\nimport React, { memo, useMemo } from '../../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../../global';\n\nimport type {\n  ApiPeer,\n  ApiStarsTransactionPeer, ApiSticker, ApiUser,\n} from '../../../../api/types';\nimport type { TabState } from '../../../../global/types';\nimport { MediaViewerOrigin } from '../../../../types';\n\nimport { getMessageLink, getUserFullName } from '../../../../global/helpers';\nimport { buildStarsTransactionCustomPeer, formatStarsTransactionAmount } from '../../../../global/helpers/payments';\nimport {\n  selectCanPlayAnimatedEmojis,\n  selectGiftStickerForStars,\n  selectPeer, selectUser,\n} from '../../../../global/selectors';\nimport buildClassName from '../../../../util/buildClassName';\nimport { copyTextToClipboard } from '../../../../util/clipboard';\nimport { formatDateTimeToString } from '../../../../util/dates/dateFormat';\nimport renderText from '../../../common/helpers/renderText';\n\nimport useLang from '../../../../hooks/useLang';\nimport useLastCallback from '../../../../hooks/useLastCallback';\nimport useOldLang from '../../../../hooks/useOldLang';\nimport usePreviousDeprecated from '../../../../hooks/usePreviousDeprecated';\n\nimport AnimatedIconFromSticker from '../../../common/AnimatedIconFromSticker';\nimport Icon from '../../../common/icons/Icon';\nimport StarIcon from '../../../common/icons/StarIcon';\nimport SafeLink from '../../../common/SafeLink';\nimport TableInfoModal, { type TableData } from '../../common/TableInfoModal';\nimport PaidMediaThumb from './PaidMediaThumb';\n\nimport styles from './StarsTransactionModal.module.scss';\n\nimport StarsBackground from '../../../../assets/stars-bg.png';\n\nexport type OwnProps = {\n  modal: TabState['starsTransactionModal'];\n};\n\ntype StateProps = {\n  peer?: ApiPeer;\n  user?: ApiUser;\n  canPlayAnimatedEmojis?: boolean;\n  starGiftSticker?: ApiSticker;\n};\n\nconst StarsTransactionModal: FC<OwnProps & StateProps> = ({\n  modal, peer, user, canPlayAnimatedEmojis, starGiftSticker,\n}) => {\n  const { showNotification, openMediaViewer, closeStarsTransactionModal } = getActions();\n  const oldLang = useOldLang();\n  const lang = useLang();\n  const { transaction } = modal || {};\n  const isGift = transaction?.isGift;\n  const isPrizeStars = transaction?.isPrizeStars;\n\n  const handleOpenMedia = useLastCallback(() => {\n    const media = transaction?.extendedMedia;\n    if (!media) return;\n\n    openMediaViewer({\n      origin: MediaViewerOrigin.StarsTransaction,\n      standaloneMedia: media.flatMap((item) => Object.values(item)),\n    });\n  });\n\n  const animatedStickerData = useMemo(() => {\n    if (!transaction) {\n      return undefined;\n    }\n\n    return (\n      <AnimatedIconFromSticker\n        key={transaction.id}\n        sticker={starGiftSticker}\n        play={canPlayAnimatedEmojis}\n        noLoop\n        nonInteractive\n      />\n    );\n  }, [canPlayAnimatedEmojis, starGiftSticker, transaction]);\n\n  const giftEntryAboutText = useMemo(() => {\n    const subtitleText = oldLang('lng_credits_box_history_entry_gift_in_about');\n    const subtitleTextParts = subtitleText.split('{link}');\n\n    return (\n      <>\n        {subtitleTextParts[0]}\n        <SafeLink\n          url={oldLang('lng_credits_box_history_entry_gift_about_url')}\n          text={oldLang('GiftStarsSubtitleLinkName')}\n        >\n          {renderText(oldLang('GiftStarsSubtitleLinkName'), ['simple_markdown'])}\n        </SafeLink>\n        {subtitleTextParts[1]}\n      </>\n    );\n  }, [oldLang]);\n\n  const giftOutAboutText = useMemo(() => {\n    return lang(\n      'CreditsBoxHistoryEntryGiftOutAbout',\n      {\n        user: <strong>{user ? getUserFullName(user) : ''}</strong>,\n        link: (\n          <SafeLink\n            url={oldLang('lng_credits_box_history_entry_gift_about_url')}\n            text={oldLang('GiftStarsSubtitleLinkName')}\n          >\n            {renderText(oldLang('GiftStarsSubtitleLinkName'), ['simple_markdown'])}\n          </SafeLink>\n        ),\n      },\n      {\n        withNodes: true,\n      },\n    );\n  }, [lang, user, oldLang]);\n\n  const starModalData = useMemo(() => {\n    if (!transaction) {\n      return undefined;\n    }\n\n    const customPeer = (transaction.peer && transaction.peer.type !== 'peer'\n        && buildStarsTransactionCustomPeer(transaction.peer)) || undefined;\n\n    const peerId = transaction.peer?.type === 'peer' ? transaction.peer.id : undefined;\n    const toName = transaction.peer && oldLang(getStarsPeerTitleKey(transaction.peer));\n\n    const title = transaction.title || (customPeer ? oldLang(customPeer.titleKey) : undefined);\n\n    const messageLink = peer && transaction.messageId\n      ? getMessageLink(peer, undefined, transaction.messageId) : undefined;\n\n    const media = transaction.extendedMedia;\n\n    const mediaAmount = media?.length || 0;\n    const areAllPhotos = media?.every((m) => !m.video);\n    const areAllVideos = media?.every((m) => !m.photo);\n\n    const mediaText = areAllPhotos ? oldLang('Stars.Transfer.Photos', mediaAmount)\n      : areAllVideos ? oldLang('Stars.Transfer.Videos', mediaAmount)\n        : oldLang('Media', mediaAmount);\n\n    const description = transaction.description || (media ? mediaText : undefined);\n\n    const header = (\n      <div className={buildClassName(styles.header, styles.starsHeader)}>\n        {media && (\n          <PaidMediaThumb\n            className={buildClassName(styles.mediaPreview, 'transaction-media-preview')}\n            media={media}\n            onClick={handleOpenMedia}\n          />\n        )}\n        {(isGift || isPrizeStars) ? animatedStickerData : (\n          <img\n            className={buildClassName(styles.starsBackground, media && styles.mediaShift)}\n            src={StarsBackground}\n            alt=\"\"\n            draggable={false}\n          />\n        )}\n        {title && <h1 className={styles.title}>{title}</h1>}\n        {(isGift || isPrizeStars) && (\n          <h1 className={buildClassName(styles.title, styles.starTitle)}>\n            {isPrizeStars ? oldLang('StarsGiveawayPrizeReceived')\n              : transaction?.isMyGift ? oldLang('StarsGiftSent') : oldLang('StarsGiftReceived')}\n          </h1>\n        )}\n        <p className={styles.description}>{description}</p>\n        <p className={styles.amount}>\n          <span className={buildClassName(styles.amount, transaction.stars < 0 ? styles.negative : styles.positive)}>\n            {formatStarsTransactionAmount(transaction.stars)}\n          </span>\n          <StarIcon type=\"gold\" size=\"middle\" />\n        </p>\n        {isGift && (\n          <span className={styles.subtitle}>\n            {transaction?.isMyGift ? giftOutAboutText : giftEntryAboutText}\n          </span>\n        )}\n      </div>\n    );\n\n    const tableData: TableData = [];\n\n    tableData.push([\n      oldLang(transaction.stars < 0 || transaction.isMyGift ? 'Stars.Transaction.To'\n        : peerId ? 'Star.Transaction.From' : 'Stars.Transaction.Via'),\n      peerId ? { chatId: peerId } : toName || '',\n    ]);\n\n    if (messageLink) {\n      tableData.push([oldLang('Stars.Transaction.Media'), <SafeLink url={messageLink} text={messageLink} />]);\n    }\n\n    if (isPrizeStars) {\n      tableData.push(\n        [oldLang('BoostReason'), oldLang('Giveaway')],\n        [oldLang('Gift'), oldLang('Stars', transaction.stars, 'i')],\n      );\n    }\n\n    if (transaction.id && !isPrizeStars) {\n      tableData.push([\n        oldLang('Stars.Transaction.Id'),\n        (\n          <span\n            className={styles.tid}\n            onClick={() => {\n              copyTextToClipboard(transaction.id!);\n              showNotification({\n                message: oldLang('StarsTransactionIDCopied'),\n              });\n            }}\n          >\n            {transaction.id}\n            <Icon className={styles.copyIcon} name=\"copy\" />\n          </span>\n        ),\n      ]);\n    }\n\n    tableData.push([\n      oldLang('Stars.Transaction.Date'),\n      formatDateTimeToString(transaction.date * 1000, oldLang.code, true),\n    ]);\n\n    const footerText = oldLang('lng_credits_box_out_about');\n    const footerTextParts = footerText.split('{link}');\n\n    const footer = (\n      <span className={styles.footer}>\n        {footerTextParts[0]}\n        <SafeLink url={oldLang('StarsTOSLink')} text={oldLang('lng_credits_summary_options_about_link')} />\n        {footerTextParts[1]}\n      </span>\n    );\n\n    return {\n      header,\n      tableData,\n      footer,\n      avatarPeer: !transaction.photo ? (peer || customPeer) : undefined,\n    };\n  }, [\n    transaction, oldLang, peer, isGift, isPrizeStars, animatedStickerData, giftOutAboutText, giftEntryAboutText,\n  ]);\n\n  const prevModalData = usePreviousDeprecated(starModalData);\n  const renderingModalData = prevModalData || starModalData;\n\n  return (\n    <TableInfoModal\n      isOpen={Boolean(transaction)}\n      className={styles.modal}\n      header={renderingModalData?.header}\n      isGift={isGift}\n      isPrizeStars={isPrizeStars}\n      tableData={renderingModalData?.tableData}\n      footer={renderingModalData?.footer}\n      noHeaderImage={Boolean(transaction?.extendedMedia)}\n      headerAvatarWebPhoto={transaction?.photo}\n      headerAvatarPeer={renderingModalData?.avatarPeer}\n      buttonText={oldLang('OK')}\n      onClose={closeStarsTransactionModal}\n    />\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { modal }): StateProps => {\n    const peerId = modal?.transaction?.peer?.type === 'peer' && modal.transaction.peer.id;\n    const peer = peerId ? selectPeer(global, peerId) : undefined;\n    const user = peerId ? selectUser(global, peerId) : undefined;\n\n    const starCount = modal?.transaction.stars;\n    const starGiftSticker = selectGiftStickerForStars(global, starCount);\n\n    return {\n      peer,\n      user,\n      canPlayAnimatedEmojis: selectCanPlayAnimatedEmojis(global),\n      starGiftSticker,\n    };\n  },\n)(StarsTransactionModal));\n\nfunction getStarsPeerTitleKey(peer: ApiStarsTransactionPeer) {\n  switch (peer.type) {\n    case 'appStore':\n      return 'AppStore';\n    case 'playMarket':\n      return 'PlayMarket';\n    case 'fragment':\n      return 'Fragment';\n    case 'premiumBot':\n      return 'StarsTransactionBot';\n    case 'ads':\n      return 'StarsTransactionAds';\n    default:\n      return 'Stars.Transaction.Unsupported.Title';\n  }\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"LAh8evux\",\"title\":\"yfODVQ1M\",\"description\":\"QaQn08BX\",\"secondary\":\"sQZslvAr\",\"topIcon\":\"jySLtQNG\",\"content\":\"hrizpMDe\",\"separator\":\"En1zD2cT\"};","import React, { memo, type TeactNode } from '../../../lib/teact/teact';\n\nimport type { IconName } from '../../../types/icons';\n\nimport Icon from '../../common/icons/Icon';\nimport Button from '../../ui/Button';\nimport ListItem from '../../ui/ListItem';\nimport Modal from '../../ui/Modal';\nimport Separator from '../../ui/Separator';\n\nimport styles from './TableAboutModal.module.scss';\n\nexport type TableAboutData = [IconName | undefined, TeactNode, TeactNode][];\n\ntype OwnProps = {\n  isOpen?: boolean;\n  listItemData?: TableAboutData;\n  headerIconName: IconName;\n  header?: TeactNode;\n  footer?: TeactNode;\n  buttonText?: string;\n  onClose: NoneToVoidFunction;\n  onButtonClick?: NoneToVoidFunction;\n};\n\nconst TableAboutModal = ({\n  isOpen,\n  listItemData,\n  headerIconName,\n  header,\n  footer,\n  buttonText,\n  onClose,\n  onButtonClick,\n}: OwnProps) => {\n  return (\n    <Modal\n      isOpen={isOpen}\n      className={styles.root}\n      contentClassName={styles.content}\n      onClose={onClose}\n    >\n      <div className={styles.topIcon}><Icon name={headerIconName} /></div>\n      {header}\n      <div>\n        {listItemData?.map(([icon, title, subtitle]) => {\n          return (\n            <ListItem\n              isStatic\n              multiline\n              icon={icon}\n            >\n              <span className=\"title\">{title}</span>\n              <span className=\"subtitle\">{subtitle}</span>\n            </ListItem>\n          );\n        })}\n      </div>\n      <Separator className={styles.separator} />\n      {footer}\n      {buttonText && (\n        <Button onClick={onButtonClick || onClose}>{buttonText}</Button>\n      )}\n    </Modal>\n  );\n};\n\nexport default memo(TableAboutModal);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"GsS8Jrki\",\"title\":\"FqyZSYhX\",\"description\":\"DkalJSBt\",\"secondary\":\"xNUKKd8T\",\"content\":\"qxOr0JyQ\"};","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useMemo } from '../../lib/teact/teact';\n\nimport type { TableAboutData } from '../modals/common/TableAboutModal';\n\nimport buildClassName from '../../util/buildClassName';\nimport renderText from './helpers/renderText';\n\nimport useSelectorSignal from '../../hooks/data/useSelectorSignal';\nimport useDerivedState from '../../hooks/useDerivedState';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport TableAboutModal from '../modals/common/TableAboutModal';\nimport Button from '../ui/Button';\nimport Modal from '../ui/Modal';\nimport SafeLink from './SafeLink';\n\nimport styles from './AboutAdsModal.module.scss';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  isMonetizationSharing?: boolean;\n  onClose: NoneToVoidFunction;\n};\n\nconst AboutAdsModal: FC<OwnProps> = ({\n  isOpen,\n  isMonetizationSharing,\n  onClose,\n}) => {\n  const oldLang = useOldLang();\n\n  const minLevelSignal = useSelectorSignal((global) => global.appConfig?.channelRestrictAdsLevelMin);\n  const minLevelToRestrictAds = useDerivedState(minLevelSignal);\n\n  const regularAdContent = useMemo(() => {\n    return (\n      <>\n        <h3>{oldLang('SponsoredMessageInfoScreen.Title')}</h3>\n        <p>{renderText(oldLang('SponsoredMessageInfoDescription1'), ['br'])}</p>\n        <p>{renderText(oldLang('SponsoredMessageInfoDescription2'), ['br'])}</p>\n        <p>{renderText(oldLang('SponsoredMessageInfoDescription3'), ['br'])}</p>\n        <p>\n          <SafeLink\n            url={oldLang('SponsoredMessageAlertLearnMoreUrl')}\n            text={oldLang('SponsoredMessageAlertLearnMoreUrl')}\n          />\n        </p>\n        <p>{renderText(oldLang('SponsoredMessageInfoDescription4'), ['br'])}</p>\n      </>\n    );\n  }, [oldLang]);\n\n  const modalData = useMemo(() => {\n    if (!isOpen) return undefined;\n\n    const header = (\n      <>\n        <h3 className={styles.title}>{oldLang('AboutRevenueSharingAds')}</h3>\n        <p className={buildClassName(styles.description, styles.secondary)}>\n          {oldLang('RevenueSharingAdsAlertSubtitle')}\n        </p>\n      </>\n    );\n\n    const listItemData = [\n      ['lock', oldLang('RevenueSharingAdsInfo1Title'),\n        renderText(oldLang('RevenueSharingAdsInfo1Subtitle'), ['simple_markdown'])],\n      ['revenue-split', oldLang('RevenueSharingAdsInfo2Title'),\n        renderText(oldLang('RevenueSharingAdsInfo2Subtitle'), ['simple_markdown'])],\n      ['nochannel', oldLang('RevenueSharingAdsInfo3Title'),\n        renderText(oldLang('RevenueSharingAdsInfo3Subtitle', minLevelToRestrictAds), ['simple_markdown'])],\n    ] satisfies TableAboutData;\n\n    const footer = (\n      <>\n        <h3 className={styles.title}>{renderText(oldLang('RevenueSharingAdsInfo4Title'), ['simple_markdown'])}</h3>\n        <p className={styles.description}>\n          {renderText(oldLang('RevenueSharingAdsInfo4Subtitle2', ''), ['simple_markdown'])}\n          <SafeLink\n            url={oldLang('PromoteUrl')}\n            text={oldLang('LearnMoreArrow')}\n          />\n        </p>\n      </>\n    );\n\n    return {\n      header,\n      listItemData,\n      footer,\n    };\n  }, [isOpen, oldLang, minLevelToRestrictAds]);\n\n  if (isMonetizationSharing && modalData) {\n    return (\n      <TableAboutModal\n        isOpen={isOpen}\n        listItemData={modalData.listItemData}\n        headerIconName=\"channel\"\n        header={modalData.header}\n        footer={modalData.footer}\n        buttonText={oldLang('RevenueSharingAdsUnderstood')}\n        onClose={onClose}\n      />\n    );\n  }\n\n  return (\n    <Modal\n      isOpen={isOpen}\n      className={styles.root}\n      contentClassName={styles.content}\n      onClose={onClose}\n    >\n      {regularAdContent}\n      <Button\n        size=\"smaller\"\n        onClick={onClose}\n      >\n        {oldLang('RevenueSharingAdsUnderstood')}\n      </Button>\n    </Modal>\n  );\n};\n\nexport default memo(AboutAdsModal);\n","// extracted by mini-css-extract-plugin\nexport default {\"title\":\"t9iZUzOj\",\"description\":\"mjveZmdr\",\"toncoin\":\"ATkOSqJ7\"};","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useMemo } from '../../lib/teact/teact';\n\nimport type { TableAboutData } from '../modals/common/TableAboutModal';\n\nimport renderText from './helpers/renderText';\n\nimport useLang from '../../hooks/useLang';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport TableAboutModal from '../modals/common/TableAboutModal';\nimport Icon from './icons/Icon';\nimport SafeLink from './SafeLink';\n\nimport styles from './AboutMonetizationModal.module.scss';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  onClose: NoneToVoidFunction;\n};\n\nconst AboutMonetizationModal: FC<OwnProps> = ({\n  isOpen,\n  onClose,\n}) => {\n  const oldLang = useOldLang();\n  const lang = useLang();\n\n  const blockchainText = useMemo(() => {\n    const linkText = oldLang('LearnMore');\n    return lang(\n      'ChannelEarnLearnCoinAbout',\n      {\n        link: (\n          <SafeLink url={oldLang('MonetizationInfoTONLink')} text={linkText}>\n            {linkText}\n            <Icon name=\"next\" />\n          </SafeLink>\n        ),\n      },\n      {\n        withNodes: true,\n      },\n    );\n  }, [lang, oldLang]);\n\n  const monetizationTitle = useMemo(() => {\n    return lang(\n      'MonetizationInfoTONTitle',\n      undefined,\n      {\n        withNodes: true,\n        specialReplacement: { '💎': <Icon className={styles.toncoin} name=\"toncoin\" /> },\n      },\n    );\n  }, [lang]);\n\n  const modalData = useMemo(() => {\n    if (!isOpen) return undefined;\n\n    const header = (\n      <h3 className={styles.title}>{oldLang('lng_channel_earn_learn_title')}</h3>\n    );\n\n    const listItemData = [\n      ['channel', oldLang('lng_channel_earn_learn_in_subtitle'),\n        renderText(oldLang('lng_channel_earn_learn_in_about'), ['simple_markdown'])],\n      ['revenue-split', oldLang('lng_channel_earn_learn_split_subtitle'),\n        renderText(oldLang('Monetization.Intro.Split.Text'), ['simple_markdown'])],\n      ['cash-circle', oldLang('lng_channel_earn_learn_out_subtitle'),\n        renderText(oldLang('lng_channel_earn_learn_out_about'), ['simple_markdown'])],\n    ] satisfies TableAboutData;\n\n    const footer = (\n      <>\n        <h3 className={styles.title}>{monetizationTitle}</h3>\n        <p className={styles.description}>{blockchainText}</p>\n      </>\n    );\n\n    return {\n      header,\n      listItemData,\n      footer,\n    };\n  }, [isOpen, oldLang, monetizationTitle, blockchainText]);\n\n  if (!modalData) {\n    return undefined;\n  }\n\n  return (\n    <TableAboutModal\n      isOpen={isOpen}\n      listItemData={modalData.listItemData}\n      headerIconName=\"cash-circle\"\n      header={modalData.header}\n      footer={modalData.footer}\n      buttonText={oldLang('RevenueSharingAdsUnderstood')}\n      onClose={onClose}\n    />\n  );\n};\n\nexport default memo(AboutMonetizationModal);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"WqeWhMAS\",\"content\":\"oofoCYlu\"};","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo,\n  useState,\n} from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport buildClassName from '../../util/buildClassName';\n\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Modal from '../ui/Modal';\nimport PasswordForm from './PasswordForm';\n\nimport styles from './VerificationMonetizationModal.module.scss';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  onClose: NoneToVoidFunction;\n  chatId: string;\n  passwordHint?: string;\n  error?: string;\n  isLoading?: boolean;\n};\n\nconst VerificationMonetizationModal: FC<OwnProps> = ({\n  isOpen,\n  chatId,\n  onClose,\n  passwordHint,\n  error,\n  isLoading,\n}) => {\n  const {\n    clearMonetizationInfo, loadMonetizationRevenueWithdrawalUrl,\n  } = getActions();\n\n  const lang = useOldLang();\n\n  const [shouldShowPassword, setShouldShowPassword] = useState(false);\n\n  const handleSubmit = useLastCallback((password: string) => {\n    loadMonetizationRevenueWithdrawalUrl({\n      chatId,\n      currentPassword: password,\n      onSuccess: () => {\n        onClose();\n      },\n    });\n  });\n\n  const handleClearError = useLastCallback(() => {\n    clearMonetizationInfo();\n  });\n\n  return (\n    <Modal\n      isOpen={isOpen}\n      hasCloseButton\n      title={lang('EnterPassword')}\n      className={styles.root}\n      contentClassName={styles.content}\n      onClose={onClose}\n    >\n      <div className={buildClassName(styles.content, 'settings-content password-form custom-scroll')}>\n        <div className=\"settings-item pt-0\">\n          <PasswordForm\n            shouldShowSubmit\n            placeholder={lang('Password')}\n            error={error && lang(error)}\n            description={lang('Channel.OwnershipTransfer.EnterPasswordText')}\n            clearError={handleClearError}\n            isLoading={isLoading}\n            hint={passwordHint}\n            isPasswordVisible={shouldShowPassword}\n            shouldResetValue={isOpen}\n            onChangePasswordVisibility={setShouldShowPassword}\n            onSubmit={handleSubmit}\n          />\n        </div>\n      </div>\n    </Modal>\n  );\n};\n\nexport default memo(VerificationMonetizationModal);\n","// extracted by mini-css-extract-plugin\nexport default {\"slide\":\"qJDgUtjV\",\"modalTitle\":\"ZAdG13Ah\",\"optionText\":\"oWujoaSC\",\"option\":\"aFbjDzNo\",\"optionButton\":\"VbE0HzDs\",\"sectionTitle\":\"jrA2dOiw\",\"description\":\"k71Zrc_P\",\"title\":\"mMmY6YR4\",\"titleMultiline\":\"lVVyV0py\",\"subtitle\":\"gSkAFc4u\",\"transition\":\"HjsGIG6e\"};","import React, {\n  memo, useEffect, useMemo, useRef,\n} from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { TabState } from '../../../global/types';\n\nimport { requestMeasure, requestMutation } from '../../../lib/fasterdom/fasterdom';\nimport buildClassName from '../../../util/buildClassName';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Icon from '../../common/icons/Icon';\nimport SafeLink from '../../common/SafeLink';\nimport Button from '../../ui/Button';\nimport ListItem from '../../ui/ListItem';\nimport Modal from '../../ui/Modal';\nimport Transition, { ACTIVE_SLIDE_CLASS_NAME, TO_SLIDE_CLASS_NAME } from '../../ui/Transition';\n\nimport styles from './ReportAdModal.module.scss';\n\nconst ADDED_PADDING = 40;\n\nexport type OwnProps = {\n  modal: TabState['reportAdModal'];\n};\n\nconst ReportAdModal = ({\n  modal,\n}: OwnProps) => {\n  const {\n    reportSponsoredMessage, closeReportAdModal, openPreviousReportAdModal,\n  } = getActions();\n  const lang = useOldLang();\n  const isOpen = Boolean(modal);\n\n  // eslint-disable-next-line no-null/no-null\n  const transitionRef = useRef<HTMLDivElement>(null);\n\n  const handleOptionClick = useLastCallback((e, option: string) => {\n    const { chatId, randomId } = modal!;\n    reportSponsoredMessage({ chatId, randomId, option });\n  });\n\n  const [renderingSection, renderingDepth] = useMemo(() => {\n    if (!modal) return [undefined, 0];\n    const sectionDepth = modal.sections.length - 1;\n    return [modal.sections[sectionDepth], sectionDepth];\n  }, [modal]);\n\n  const handleBackClick = useLastCallback(() => {\n    if (!renderingDepth) {\n      closeReportAdModal();\n      return;\n    }\n\n    openPreviousReportAdModal();\n  });\n\n  const bottomText = useMemo(() => {\n    if (!modal) return undefined;\n    const template = lang('lng_report_sponsored_reported_learn');\n    const parts = template.split('{link}');\n    return [\n      parts[0],\n      <SafeLink text={lang('lng_report_sponsored_reported_link')} url={lang('ReportAd.Help_URL')} />,\n      parts[1],\n    ];\n  }, [lang, modal]);\n\n  const header = useMemo(() => {\n    if (!modal) {\n      return undefined;\n    }\n\n    const hasSubtitle = Boolean(renderingSection?.subtitle);\n\n    return (\n      <div className=\"modal-header-condensed\">\n        <Button\n          round\n          color=\"translucent\"\n          size=\"smaller\"\n          ariaLabel={lang(renderingDepth ? 'Back' : 'Close')}\n          onClick={handleBackClick}\n        >\n          <Icon name={renderingDepth ? 'arrow-left' : 'close'} />\n        </Button>\n        <div className={buildClassName('modal-title', styles.modalTitle, hasSubtitle && styles.titleMultiline)}>\n          <h3 className={styles.title}>{lang('ReportAd')}</h3>\n          {hasSubtitle && (\n            <span className={styles.subtitle}>{renderingSection.subtitle}</span>\n          )}\n        </div>\n      </div>\n    );\n  }, [lang, modal, renderingDepth, renderingSection?.subtitle]);\n\n  useEffect(() => {\n    if (!modal) return;\n    const slide = document.querySelector<HTMLElement>(`.${ACTIVE_SLIDE_CLASS_NAME} > .${styles.slide}`);\n    if (!slide) return;\n\n    const height = slide.scrollHeight;\n    requestMutation(() => {\n      transitionRef.current!.style.height = `${height + ADDED_PADDING}px`;\n    });\n  }, [modal]);\n\n  const handleAnimationStart = useLastCallback(() => {\n    const slide = document.querySelector<HTMLElement>(`.${TO_SLIDE_CLASS_NAME} > .${styles.slide}`)!;\n\n    requestMeasure(() => {\n      const height = slide.scrollHeight;\n      requestMutation(() => {\n        transitionRef.current!.style.height = `${height + ADDED_PADDING}px`;\n      });\n    });\n  });\n\n  return (\n    <Modal\n      isOpen={isOpen}\n      hasCloseButton\n      header={header}\n      onClose={closeReportAdModal}\n    >\n      <Transition\n        name=\"slide\"\n        className={styles.transition}\n        ref={transitionRef}\n        activeKey={renderingDepth}\n        onStart={handleAnimationStart}\n      >\n        <div className={styles.slide}>\n          <h3 className={styles.sectionTitle}>{renderingSection?.title}</h3>\n          {renderingSection?.options.map((option) => (\n            <ListItem\n              narrow\n              secondaryIcon=\"next\"\n              className={styles.option}\n              buttonClassName={styles.optionButton}\n              clickArg={option.option}\n              onClick={handleOptionClick}\n            >\n              <div className={styles.optionText}>{option.text}</div>\n            </ListItem>\n          ))}\n        </div>\n        <p className={styles.description}>{bottomText}</p>\n      </Transition>\n    </Modal>\n  );\n};\n\nexport default memo(ReportAdModal);\n","import type React from '../../../lib/teact/teact';\nimport { useCallback, useEffect, useState } from '../../../lib/teact/teact';\n\nimport type { ApiChatBannedRights } from '../../../api/types';\n\nconst FLOATING_BUTTON_ANIMATION_TIMEOUT_MS = 250;\nconst MEDIA_PERMISSIONS: Array<keyof ApiChatBannedRights> = [\n  'embedLinks',\n  'sendPolls',\n  'sendPhotos',\n  'sendVideos',\n  'sendRoundvideos',\n  'sendVoices',\n  'sendAudios',\n  'sendDocs',\n  'sendStickers',\n  'sendGifs',\n];\nconst MESSAGE_PERMISSIONS: typeof MEDIA_PERMISSIONS = [...MEDIA_PERMISSIONS, 'sendPlain'];\n\nexport default function useManagePermissions(defaultPermissions: ApiChatBannedRights | undefined) {\n  const [permissions, setPermissions] = useState<ApiChatBannedRights>({});\n  const [havePermissionChanged, setHavePermissionChanged] = useState(false);\n  const [isLoading, setIsLoading] = useState(false);\n\n  useEffect(() => {\n    setPermissions(defaultPermissions || {});\n    setHavePermissionChanged(false);\n    setTimeout(() => {\n      setIsLoading(false);\n    }, FLOATING_BUTTON_ANIMATION_TIMEOUT_MS);\n  }, [defaultPermissions]);\n\n  const handlePermissionChange = useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    const { name: targetName } = e.target;\n\n    const name = targetName as Exclude<keyof ApiChatBannedRights, 'untilDate'>;\n\n    function getUpdatedPermissionValue(value: true | undefined) {\n      return value ? undefined : true;\n    }\n\n    const oldPermissions = permissions;\n\n    let newPermissions: ApiChatBannedRights = {\n      ...oldPermissions,\n      [name]: getUpdatedPermissionValue(oldPermissions[name]),\n      ...(name === 'sendStickers' && {\n        sendGifs: getUpdatedPermissionValue(oldPermissions[name]),\n      }),\n    };\n\n    const checkMedia = () => {\n      const mediaPermissions = MEDIA_PERMISSIONS.map((key) => newPermissions[key]);\n      if (mediaPermissions.some((v) => !v)) {\n        newPermissions = {\n          ...newPermissions,\n          sendMedia: undefined,\n        };\n      } else if (mediaPermissions.every(Boolean)) {\n        newPermissions = {\n          ...newPermissions,\n          sendMedia: true,\n        };\n      }\n    };\n\n    if (name !== 'sendMedia') {\n      checkMedia();\n    } else {\n      newPermissions = {\n        ...newPermissions,\n        ...(MEDIA_PERMISSIONS.reduce((acc, key) => (\n          Object.assign(acc, { [key]: newPermissions.sendMedia })\n        ), {})),\n      };\n    }\n\n    // Embed links can't be enabled if plain text is banned\n    if (name !== 'embedLinks' && !newPermissions.embedLinks && newPermissions.sendPlain) {\n      newPermissions = {\n        ...newPermissions,\n        embedLinks: true,\n      };\n    }\n\n    if (name !== 'sendPlain' && !newPermissions.embedLinks && newPermissions.sendPlain) {\n      newPermissions = {\n        ...newPermissions,\n        sendPlain: undefined,\n      };\n    }\n\n    if (name !== 'sendMedia') {\n      checkMedia();\n    }\n\n    const sendMessages = MESSAGE_PERMISSIONS.every((key) => newPermissions[key]);\n    newPermissions = {\n      ...newPermissions,\n      sendMessages: sendMessages ? true : undefined,\n    };\n\n    setPermissions(newPermissions);\n\n    setHavePermissionChanged(!defaultPermissions || Object.keys(newPermissions).some((k) => {\n      const key = k as Exclude<keyof ApiChatBannedRights, 'untilDate'>;\n      return Boolean(defaultPermissions[key]) !== Boolean(newPermissions[key]);\n    }));\n  }, [defaultPermissions, permissions]);\n\n  const resetPermissions = useCallback(() => {\n    setPermissions(defaultPermissions || {});\n    setHavePermissionChanged(false);\n  }, [defaultPermissions]);\n\n  return {\n    permissions,\n    isLoading,\n    havePermissionChanged,\n    handlePermissionChange,\n    setIsLoading,\n    resetPermissions,\n  };\n}\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useMemo,\n} from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { ApiChat, ApiChatBannedRights } from '../../api/types';\n\nimport { isChatPublic } from '../../global/helpers';\nimport { selectChat, selectChatFullInfo } from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport stopEvent from '../../util/stopEvent';\n\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Checkbox from '../ui/Checkbox';\n\nexport type OwnProps = {\n  chatId?: string;\n  handlePermissionChange: (e: React.ChangeEvent<HTMLInputElement>) => void;\n  permissions: ApiChatBannedRights;\n  isMediaDropdownOpen: boolean;\n  setIsMediaDropdownOpen: (open: boolean) => void;\n  className?: string;\n  shiftedClassName?: string;\n  dropdownClassName?: string;\n  withCheckbox?: boolean;\n  permissionGroup?: boolean;\n  getControlIsDisabled?: (key: Exclude<keyof ApiChatBannedRights, 'untilDate'>) => boolean | undefined;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  hasLinkedChat?: boolean;\n};\n\nconst permissionKeyList: (keyof ApiChatBannedRights)[] = [\n  'sendPhotos', 'sendVideos', 'sendStickers',\n  'sendAudios', 'sendDocs', 'sendVoices', 'sendRoundvideos', 'embedLinks', 'sendPolls',\n];\n\nconst PermissionCheckboxList: FC<OwnProps & StateProps> = ({\n  chat,\n  isMediaDropdownOpen,\n  setIsMediaDropdownOpen,\n  hasLinkedChat,\n  permissions,\n  handlePermissionChange,\n  className,\n  shiftedClassName,\n  dropdownClassName,\n  withCheckbox,\n  getControlIsDisabled,\n  permissionGroup,\n}) => {\n  const {\n    showNotification,\n  } = getActions();\n\n  const { isForum } = chat || {};\n\n  const lang = useOldLang();\n\n  const isPublic = useMemo(() => chat && isChatPublic(chat), [chat]);\n  const shouldDisablePermissionForPublicGroup = hasLinkedChat || isPublic;\n\n  const countCheckedPermissions = useMemo(() => {\n    return permissionKeyList.reduce((count, key) => {\n      if (!permissions[key]) {\n        count += 1;\n      }\n      return count;\n    }, 0);\n  }, [permissions]);\n\n  const handleOpenMediaDropdown = useLastCallback((e: React.MouseEvent) => {\n    stopEvent(e);\n    setIsMediaDropdownOpen(!isMediaDropdownOpen);\n  });\n\n  const handleDisabledClick = useLastCallback(() => {\n    showNotification({ message: lang('lng_rights_permission_unavailable') });\n  });\n\n  return (\n    <>\n      <div className={buildClassName('ListItem', withCheckbox && 'with-checkbox')}>\n        <Checkbox\n          name=\"sendPlain\"\n          checked={!permissions.sendPlain}\n          label={lang('UserRestrictionsSend')}\n          blocking\n          permissionGroup={permissionGroup}\n          onChange={handlePermissionChange}\n          disabled={getControlIsDisabled && getControlIsDisabled('sendPlain')}\n        />\n      </div>\n      <div className={buildClassName('ListItem', withCheckbox && 'with-checkbox')}>\n        <Checkbox\n          name=\"sendMedia\"\n          checked={!permissions.sendMedia}\n          label={lang('UserRestrictionsSendMedia')}\n          labelText={`${countCheckedPermissions}/${permissionKeyList.length}`}\n          blocking\n          permissionGroup={permissionGroup}\n          rightIcon={isMediaDropdownOpen ? 'up' : 'down'}\n          onChange={handlePermissionChange}\n          onClickLabel={handleOpenMediaDropdown}\n          disabled={getControlIsDisabled && getControlIsDisabled('sendMedia')}\n        />\n      </div>\n      <div className={dropdownClassName}>\n        <div\n          className={className}\n        >\n          <div className={buildClassName('ListItem', withCheckbox && 'with-checkbox')}>\n            <Checkbox\n              name=\"sendPhotos\"\n              checked={!permissions.sendPhotos}\n              label={lang('UserRestrictionsSendPhotos')}\n              blocking\n              permissionGroup={permissionGroup}\n              onChange={handlePermissionChange}\n              disabled={getControlIsDisabled && getControlIsDisabled('sendPhotos')}\n            />\n          </div>\n\n          <div className={buildClassName('ListItem', withCheckbox && 'with-checkbox')}>\n            <Checkbox\n              name=\"sendVideos\"\n              checked={!permissions.sendVideos}\n              label={lang('UserRestrictionsSendVideos')}\n              blocking\n              permissionGroup={permissionGroup}\n              onChange={handlePermissionChange}\n              disabled={getControlIsDisabled && getControlIsDisabled('sendVideos')}\n            />\n          </div>\n\n          <div className={buildClassName('ListItem', withCheckbox && 'with-checkbox')}>\n            <Checkbox\n              name=\"sendStickers\"\n              checked={!permissions.sendStickers && !permissions.sendGifs}\n              label={lang('UserRestrictionsSendStickers')}\n              blocking\n              permissionGroup={permissionGroup}\n              onChange={handlePermissionChange}\n              disabled={getControlIsDisabled && getControlIsDisabled('sendStickers')}\n            />\n          </div>\n\n          <div className={buildClassName('ListItem', withCheckbox && 'with-checkbox')}>\n            <Checkbox\n              name=\"sendAudios\"\n              checked={!permissions.sendAudios}\n              label={lang('UserRestrictionsSendMusic')}\n              blocking\n              permissionGroup={permissionGroup}\n              onChange={handlePermissionChange}\n              disabled={getControlIsDisabled && getControlIsDisabled('sendAudios')}\n            />\n          </div>\n\n          <div className={buildClassName('ListItem', withCheckbox && 'with-checkbox')}>\n            <Checkbox\n              name=\"sendDocs\"\n              checked={!permissions.sendDocs}\n              label={lang('UserRestrictionsSendFiles')}\n              blocking\n              permissionGroup={permissionGroup}\n              onChange={handlePermissionChange}\n              disabled={getControlIsDisabled && getControlIsDisabled('sendDocs')}\n            />\n          </div>\n\n          <div className={buildClassName('ListItem', withCheckbox && 'with-checkbox')}>\n            <Checkbox\n              name=\"sendVoices\"\n              checked={!permissions.sendVoices}\n              label={lang('UserRestrictionsSendVoices')}\n              blocking\n              permissionGroup={permissionGroup}\n              onChange={handlePermissionChange}\n              disabled={getControlIsDisabled && getControlIsDisabled('sendVoices')}\n            />\n          </div>\n\n          <div className={buildClassName('ListItem', withCheckbox && 'with-checkbox')}>\n            <Checkbox\n              name=\"sendRoundvideos\"\n              checked={!permissions.sendRoundvideos}\n              label={lang('UserRestrictionsSendRound')}\n              blocking\n              permissionGroup={permissionGroup}\n              onChange={handlePermissionChange}\n              disabled={getControlIsDisabled && getControlIsDisabled('sendRoundvideos')}\n            />\n          </div>\n\n          <div className={buildClassName('ListItem', withCheckbox && 'with-checkbox')}>\n            <Checkbox\n              name=\"embedLinks\"\n              checked={!permissions.embedLinks}\n              label={lang('UserRestrictionsEmbedLinks')}\n              blocking\n              permissionGroup={permissionGroup}\n              onChange={handlePermissionChange}\n              disabled={getControlIsDisabled && getControlIsDisabled('embedLinks')}\n            />\n          </div>\n\n          <div className={buildClassName('ListItem', withCheckbox && 'with-checkbox')}>\n            <Checkbox\n              name=\"sendPolls\"\n              checked={!permissions.sendPolls}\n              label={lang('UserRestrictionsSendPolls')}\n              blocking\n              permissionGroup={permissionGroup}\n              onChange={handlePermissionChange}\n              disabled={getControlIsDisabled && getControlIsDisabled('sendPolls')}\n            />\n          </div>\n        </div>\n      </div>\n      <div className={shiftedClassName}>\n        <div className={buildClassName('ListItem', withCheckbox && 'with-checkbox')}>\n          <Checkbox\n            name=\"inviteUsers\"\n            checked={!permissions.inviteUsers}\n            label={lang('UserRestrictionsInviteUsers')}\n            blocking\n            permissionGroup={permissionGroup}\n            onChange={handlePermissionChange}\n            disabled={getControlIsDisabled && getControlIsDisabled('inviteUsers')}\n          />\n        </div>\n        <div\n          className={buildClassName('ListItem', withCheckbox && 'with-checkbox')}\n          onClick={shouldDisablePermissionForPublicGroup ? handleDisabledClick : undefined}\n        >\n          <Checkbox\n            name=\"pinMessages\"\n            checked={!permissions.pinMessages}\n            label={lang('UserRestrictionsPinMessages')}\n            disabled={getControlIsDisabled ? getControlIsDisabled('pinMessages')\n              : shouldDisablePermissionForPublicGroup}\n            blocking\n            permissionGroup={permissionGroup}\n            onChange={handlePermissionChange}\n          />\n        </div>\n        <div\n          className={buildClassName('ListItem', withCheckbox && 'with-checkbox')}\n          onClick={shouldDisablePermissionForPublicGroup ? handleDisabledClick : undefined}\n        >\n          <Checkbox\n            name=\"changeInfo\"\n            checked={!permissions.changeInfo}\n            label={lang('UserRestrictionsChangeInfo')}\n            blocking\n            permissionGroup={permissionGroup}\n            disabled={getControlIsDisabled ? getControlIsDisabled('changeInfo')\n              : shouldDisablePermissionForPublicGroup}\n            onChange={handlePermissionChange}\n          />\n        </div>\n        {isForum && (\n          <div className={buildClassName('ListItem', withCheckbox && 'with-checkbox')}>\n            <Checkbox\n              name=\"manageTopics\"\n              checked={!permissions.manageTopics}\n              label={lang('CreateTopicsPermission')}\n              blocking\n              permissionGroup={permissionGroup}\n              onChange={handlePermissionChange}\n              disabled={getControlIsDisabled && getControlIsDisabled('manageTopics')}\n            />\n          </div>\n        )}\n      </div>\n    </>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const chat = chatId ? selectChat(global, chatId) : undefined;\n    const fullInfo = chat && selectChatFullInfo(global, chat.id);\n    const hasLinkedChat = Boolean(fullInfo?.linkedChatId);\n\n    return {\n      chat,\n      hasLinkedChat,\n    };\n  },\n)(PermissionCheckboxList));\n","// extracted by mini-css-extract-plugin\nexport default {\"mainContainer\":\"PPDx7_5v\",\"container\":\"axa67kqo\",\"title\":\"U4IFhV0a\",\"singleTitle\":\"qd6OFHiG\",\"actionTitle\":\"yGhFKTl5\",\"restrictionTitle\":\"t3KOsBfm\",\"listItemButton\":\"MsCAZhTn\",\"button\":\"goI3MITH\",\"dropdownList\":\"czTjjKim\",\"dialogButtons\":\"JTT_DIRv\",\"restrictionContainer\":\"iv0u9Zw6\",\"restrictionContainerOpen\":\"qCQftA04\",\"dropdownListOpen\":\"Ifpyv7Jp\"};","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useEffect,\n  useMemo,\n  useState,\n} from '../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../global';\n\nimport type {\n  ApiChat, ApiChatMember, ApiMessage, ApiPeer,\n} from '../../api/types';\nimport type { IAlbum } from '../../types';\nimport type { IRadioOption } from '../ui/CheckboxGroup';\n\nimport { REPLIES_USER_ID } from '../../config';\nimport {\n  getHasAdminRight,\n  getPrivateChatUserId,\n  getUserFirstOrLastName, getUserFullName,\n  isChatBasicGroup,\n  isChatSuperGroup, isOwnMessage,\n  isUserId,\n} from '../../global/helpers';\nimport {\n  selectAllowedMessageActionsSlow,\n  selectBot,\n  selectChat, selectChatFullInfo, selectCurrentMessageIds,\n  selectCurrentMessageList, selectSender, selectSenderFromMessage, selectTabState,\n  selectUser,\n} from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport { MEMO_EMPTY_ARRAY } from '../../util/memo';\nimport renderText from './helpers/renderText';\n\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\nimport usePreviousDeprecated from '../../hooks/usePreviousDeprecated';\nimport useManagePermissions from '../right/hooks/useManagePermissions';\n\nimport PermissionCheckboxList from '../main/PermissionCheckboxList';\nimport Button from '../ui/Button';\nimport CheckboxGroup from '../ui/CheckboxGroup';\nimport ListItem from '../ui/ListItem';\nimport Modal from '../ui/Modal';\nimport Avatar from './Avatar';\nimport Icon from './icons/Icon';\n\nimport styles from './DeleteMessageModal.module.scss';\n\nexport type OwnProps = {\n  isOpen?: boolean;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  isGroup?: boolean;\n  isSuperGroup?: boolean;\n  sender: ApiPeer | undefined;\n  currentUserId?: string;\n  canDeleteForAll?: boolean;\n  contactName?: string;\n  willDeleteForCurrentUserOnly?: boolean;\n  willDeleteForAll?: boolean;\n  messageIdList: number[] | undefined;\n  adminMembersById?: Record<string, ApiChatMember>;\n  chatBot?: boolean;\n  isSchedule?: boolean;\n  message?: ApiMessage;\n  album?: IAlbum;\n  onConfirm?: NoneToVoidFunction;\n  isOwn?: boolean;\n  canBanUsers?: boolean;\n};\n\nconst DeleteMessageModal: FC<OwnProps & StateProps> = ({\n  isOpen,\n  chat,\n  isGroup,\n  isSuperGroup,\n  sender,\n  currentUserId,\n  messageIdList,\n  isSchedule,\n  message,\n  album,\n  canDeleteForAll,\n  contactName,\n  willDeleteForCurrentUserOnly,\n  willDeleteForAll,\n  onConfirm,\n  adminMembersById,\n  chatBot,\n  isOwn,\n  canBanUsers,\n}) => {\n  const {\n    deleteMessages,\n    deleteScheduledMessages,\n    reportMessages,\n    deleteChatMember,\n    updateChatMemberBannedRights,\n    closeDeleteMessageModal,\n  } = getActions();\n\n  const prevIsOpen = usePreviousDeprecated(isOpen);\n\n  const lang = useOldLang();\n\n  const {\n    permissions, havePermissionChanged, handlePermissionChange, resetPermissions,\n  } = useManagePermissions(chat?.defaultBannedRights);\n\n  const [chosenDeleteOption, setChosenDeleteOption] = useState<string[] | undefined>(undefined);\n  const [chosenBanOption, setChosenBanOptions] = useState<string[] | undefined>(undefined);\n  const [chosenSpanOption, setChosenSpanOptions] = useState<string[] | undefined>(undefined);\n  const [isMediaDropdownOpen, setIsMediaDropdownOpen] = useState(false);\n  const [isAdditionalOptionsVisible, setIsAdditionalOptionsVisible] = useState(false);\n  const isSenderOwner = useMemo(() => {\n    return sender && adminMembersById && adminMembersById[sender.id] && adminMembersById[sender.id].isOwner;\n  }, [sender, adminMembersById]);\n\n  const user = useMemo(() => {\n    const usersById = getGlobal().users.byId;\n    if (!sender || isSchedule) return undefined;\n\n    return usersById[sender.id];\n  }, [isSchedule, sender]);\n\n  const shouldShowAdditionalOptions = useMemo(() => {\n    return user && user.id !== currentUserId;\n  }, [user, currentUserId]);\n\n  const shouldShowOptions = shouldShowAdditionalOptions && !canDeleteForAll && !isSchedule && (isGroup || isSuperGroup);\n\n  const userName = useMemo(() => {\n    const usersById = getGlobal().users.byId;\n    if (!sender || isSchedule) return '';\n\n    return getUserFullName(usersById[sender.id]);\n  }, [isSchedule, sender]);\n\n  const ACTION_SPAM_OPTION: IRadioOption[] = useMemo(() => {\n    if (!user) {\n      return [];\n    }\n\n    return [\n      {\n        value: user.id,\n        label: lang('ReportSpamTitle'),\n      },\n    ];\n  }, [lang, user]);\n\n  const ACTION_DELETE_OPTION: IRadioOption[] = useMemo(() => {\n    if (!user) {\n      return [];\n    }\n\n    return [\n      {\n        value: user.id,\n        label: lang('DeleteAllFrom', userName),\n      },\n    ];\n  }, [lang, user, userName]);\n\n  const ACTION_BAN_OPTION: IRadioOption[] = useMemo(() => {\n    if (!user) {\n      return [];\n    }\n\n    return [\n      {\n        value: user.id,\n        label: (message && isAdditionalOptionsVisible ? lang('KickFromSupergroup') : lang('DeleteBan', userName)),\n      },\n    ];\n  }, [isAdditionalOptionsVisible, lang, message, user, userName]);\n\n  const toggleAdditionalOptions = useLastCallback(() => {\n    setIsAdditionalOptionsVisible(!isAdditionalOptionsVisible);\n  });\n\n  const filterMessageIdByUserId = useLastCallback((userIds: string[], selectedMessageIdList: number[]) => {\n    if (!chat) return MEMO_EMPTY_ARRAY;\n    return selectedMessageIdList.filter((msgId) => {\n      const senderPeer = selectSenderFromMessage(getGlobal(), chat.id, msgId);\n      return senderPeer && userIds.includes(senderPeer.id);\n    });\n  });\n\n  const handleDeleteMessages = useLastCallback((filteredMessageIdList: number[]) => {\n    if (filteredMessageIdList?.length) {\n      deleteMessages({ messageIds: filteredMessageIdList, shouldDeleteForAll: true });\n    }\n  });\n\n  const handleDeleteMember = useLastCallback((filteredUserIdList: string[]) => {\n    filteredUserIdList.forEach((userId) => {\n      deleteChatMember({ chatId: chat!.id, userId });\n    });\n  });\n\n  const handleUpdateChatMemberBannedRights = useLastCallback((filteredUserIdList: string[]) => {\n    filteredUserIdList.forEach((userId) => {\n      updateChatMemberBannedRights({\n        chatId: chat!.id,\n        userId,\n        bannedRights: permissions,\n      });\n    });\n  });\n\n  const handleDeleteMessageForAll = useLastCallback(() => {\n    onConfirm?.();\n    const messageIds = album?.messages\n      ? album.messages.map(({ id }) => id)\n      : [message!.id];\n    deleteMessages({ messageIds, shouldDeleteForAll: true });\n    closeDeleteMessageModal();\n  });\n\n  const handleDeleteMessageForSelf = useLastCallback(() => {\n    if (!chat) return;\n\n    onConfirm?.();\n    const messageIds = album?.messages\n      ? album.messages.map(({ id }) => id)\n      : [message!.id];\n    if (isSchedule) {\n      deleteScheduledMessages({ messageIds });\n    } else if (!isOwn && (chosenSpanOption || chosenDeleteOption || chosenBanOption) && (isGroup || isSuperGroup)) {\n      if (chosenSpanOption) {\n        const filteredMessageIdList = filterMessageIdByUserId(chosenSpanOption, messageIdList!);\n        if (filteredMessageIdList && filteredMessageIdList.length) {\n          reportMessages({ messageIds: filteredMessageIdList, reason: 'spam', description: '' });\n        }\n      }\n\n      if (chosenDeleteOption) {\n        const filteredMessageIdList = filterMessageIdByUserId(chosenDeleteOption, messageIdList!);\n        handleDeleteMessages(filteredMessageIdList);\n      }\n\n      if (chosenBanOption && !havePermissionChanged && message) {\n        const filteredUserIdList = chosenBanOption.filter((userId) => messageIds?.some((msgId) => {\n          const senderPeer = selectSenderFromMessage(getGlobal(), chat.id, msgId);\n          return senderPeer && senderPeer.id === userId;\n        }));\n        handleDeleteMember(filteredUserIdList);\n        deleteMessages({\n          messageIds: [message.id],\n          shouldDeleteForAll: false,\n        });\n      }\n\n      if (chosenBanOption && havePermissionChanged) {\n        const filteredUserIdList = chosenBanOption.filter((userId) => messageIds?.some((msgId) => {\n          const senderPeer = selectSenderFromMessage(getGlobal(), chat.id, msgId);\n          return senderPeer && senderPeer.id === userId;\n        }));\n        handleUpdateChatMemberBannedRights(filteredUserIdList);\n      }\n    } else {\n      deleteMessages({\n        messageIds,\n        shouldDeleteForAll: false,\n      });\n    }\n    closeDeleteMessageModal();\n  });\n\n  const handleDeleteOptionChange = useLastCallback((options: string[]) => {\n    setChosenDeleteOption(options);\n  });\n\n  const handleBanOptionChange = useLastCallback((options: string[]) => {\n    setChosenBanOptions(options);\n  });\n\n  const handleSpanOptionChange = useLastCallback((options: string[]) => {\n    setChosenSpanOptions(options);\n  });\n\n  const handleClose = useLastCallback(() => {\n    closeDeleteMessageModal();\n  });\n\n  useEffect(() => {\n    if (!isOpen && prevIsOpen) {\n      setChosenSpanOptions(undefined);\n      setChosenDeleteOption(undefined);\n      setChosenBanOptions(undefined);\n      setIsMediaDropdownOpen(false);\n      setIsAdditionalOptionsVisible(false);\n      resetPermissions();\n    }\n  }, [isOpen, prevIsOpen, resetPermissions]);\n\n  function renderHeader() {\n    return (\n      <div className={shouldShowOptions && styles.container} dir={lang.isRtl ? 'rtl' : undefined}>\n        {shouldShowOptions && (\n          <Avatar\n            size=\"small\"\n            peer={user!}\n          />\n        )}\n        <h3 className={shouldShowOptions ? styles.title : styles.singleTitle}>{lang('DeleteSingleMessagesTitle')}</h3>\n      </div>\n    );\n  }\n\n  function renderAdditionalActionOptions() {\n    return (\n      <div className={styles.options}>\n        <CheckboxGroup\n          options={ACTION_SPAM_OPTION}\n          onChange={handleSpanOptionChange}\n          selected={chosenSpanOption}\n        />\n        <CheckboxGroup\n          options={ACTION_DELETE_OPTION}\n          onChange={handleDeleteOptionChange}\n          selected={chosenDeleteOption}\n        />\n        {!isSenderOwner && canBanUsers && (\n          <CheckboxGroup\n            options={ACTION_BAN_OPTION}\n            onChange={handleBanOptionChange}\n            selected={chosenBanOption}\n          />\n        )}\n      </div>\n    );\n  }\n\n  function renderPartiallyRestrictedUser() {\n    return (\n      <div className={buildClassName(styles.restrictionContainer,\n        isAdditionalOptionsVisible && styles.restrictionContainerOpen)}\n      >\n        <h3 className={buildClassName(styles.actionTitle, styles.restrictionTitle)}>\n          {lang('UserRestrictionsCanDoUsers', 1)}\n        </h3>\n        <PermissionCheckboxList\n          withCheckbox\n          permissionGroup\n          chatId={chat?.id}\n          isMediaDropdownOpen={isMediaDropdownOpen}\n          setIsMediaDropdownOpen={setIsMediaDropdownOpen}\n          handlePermissionChange={handlePermissionChange}\n          permissions={permissions}\n          className={buildClassName(\n            styles.dropdownList,\n            isMediaDropdownOpen && styles.dropdownListOpen,\n          )}\n        />\n      </div>\n    );\n  }\n\n  return (\n    <Modal\n      isOpen={isOpen}\n      onClose={handleClose}\n      onEnter={canDeleteForAll ? undefined : handleDeleteMessageForSelf}\n      className=\"delete\"\n    >\n      <div className={buildClassName(styles.mainContainer, 'custom-scroll')}>\n        {renderHeader()}\n        {shouldShowOptions && (\n          <>\n            <p className={styles.actionTitle}>{lang('DeleteAdditionalActions')}</p>\n            {renderAdditionalActionOptions()}\n            {renderPartiallyRestrictedUser()}\n            {\n              chosenBanOption && canBanUsers && chosenBanOption?.length ? (\n                <ListItem\n                  narrow\n                  className={styles.listItemButton}\n                  buttonClassName={styles.button}\n                  onClick={toggleAdditionalOptions}\n                >\n                  {lang(isAdditionalOptionsVisible ? 'DeleteToggleBanUsers' : 'DeleteToggleRestrictUsers')}\n                  <Icon\n                    name={isAdditionalOptionsVisible ? 'up' : 'down'}\n                    className={buildClassName(styles.button, 'ml-2')}\n                  />\n                </ListItem>\n              ) : setIsAdditionalOptionsVisible(false)\n            }\n          </>\n        )}\n        {(chatBot || !shouldShowAdditionalOptions) && (\n          <>\n            <p>{lang('AreYouSureDeleteSingleMessage')}</p>\n            {willDeleteForCurrentUserOnly && (\n              <p>{lang('lng_delete_for_me_chat_hint', 1, 'i')}</p>\n            )}\n            {willDeleteForAll && (\n              <p>{lang('lng_delete_for_everyone_hint', 1, 'i')}</p>\n            )}\n          </>\n        )}\n        <div className={canDeleteForAll ? 'dialog-buttons-column'\n          : buildClassName('dialog-buttons', isAdditionalOptionsVisible && styles.dialogButtons)}\n        >\n          {canDeleteForAll && (\n            <Button color=\"danger\" className=\"confirm-dialog-button\" isText onClick={handleDeleteMessageForAll}>\n              {contactName && renderText(lang('Conversation.DeleteMessagesFor', contactName))}\n              {!contactName && lang('Conversation.DeleteMessagesForEveryone')}\n            </Button>\n          )}\n          <Button color=\"danger\" className=\"confirm-dialog-button\" isText onClick={handleDeleteMessageForSelf}>\n            {lang(canDeleteForAll ? 'ChatList.DeleteForCurrentUser' : 'Delete')}\n          </Button>\n          <Button\n            className=\"confirm-dialog-button\"\n            isText\n            onClick={handleClose}\n          >{lang('Cancel')}\n          </Button>\n        </div>\n      </div>\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const {\n      deleteMessageModal,\n    } = selectTabState(global);\n    const chatId = deleteMessageModal && deleteMessageModal.message?.chatId;\n    const chat = chatId ? selectChat(global, chatId) : undefined;\n    const chatFullInfo = chat && selectChatFullInfo(global, chat.id);\n    const { threadId, type } = selectCurrentMessageList(global) || {};\n    const { canDeleteForAll } = (deleteMessageModal && deleteMessageModal.message && threadId\n      && selectAllowedMessageActionsSlow(global, deleteMessageModal.message, threadId)) || {};\n    const adminMembersById = chatFullInfo && chatFullInfo?.adminMembersById;\n    const messageIdList = chat && selectCurrentMessageIds(global, chat.id, threadId!, type!);\n    const isGroup = Boolean(chat) && isChatBasicGroup(chat);\n    const isSuperGroup = Boolean(chat) && isChatSuperGroup(chat);\n    const sender = deleteMessageModal?.message && selectSender(global, deleteMessageModal.message);\n    const contactName = chat && isUserId(chat.id)\n      ? getUserFirstOrLastName(selectUser(global, getPrivateChatUserId(chat)!))\n      : undefined;\n    const isChatWithBot = Boolean(deleteMessageModal && deleteMessageModal.message\n      && selectBot(global, deleteMessageModal.message.chatId));\n    const chatBot = Boolean(chat && chat.id !== REPLIES_USER_ID && selectBot(global, chat.id));\n    const canBanUsers = chat && (chat.isCreator || getHasAdminRight(chat, 'banUsers'));\n    const isOwn = deleteMessageModal && deleteMessageModal.message && isOwnMessage(deleteMessageModal.message);\n\n    const willDeleteForCurrentUserOnly = (chat && isChatBasicGroup(chat) && !canDeleteForAll) || isChatWithBot;\n    const willDeleteForAll = chat && isChatSuperGroup(chat);\n\n    return {\n      chat,\n      isGroup,\n      isSuperGroup,\n      currentUserId: global.currentUserId,\n      sender,\n      messageIdList,\n      canDeleteForAll: deleteMessageModal && !deleteMessageModal.isSchedule && canDeleteForAll,\n      contactName,\n      willDeleteForCurrentUserOnly,\n      willDeleteForAll,\n      adminMembersById,\n      chatBot,\n      isSchedule: deleteMessageModal && deleteMessageModal.isSchedule,\n      message: deleteMessageModal && deleteMessageModal.message,\n      album: deleteMessageModal && deleteMessageModal.album,\n      onConfirm: deleteMessageModal && deleteMessageModal.onConfirm,\n      isOwn,\n      canBanUsers,\n    };\n  },\n)(DeleteMessageModal));\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport {\n  getPrivateChatUserId,\n  getUserFirstOrLastName,\n  isChatBasicGroup,\n  isChatChannel,\n  isChatSuperGroup,\n  isUserId,\n} from '../../global/helpers';\nimport { selectChat, selectIsChatWithSelf, selectUser } from '../../global/selectors';\nimport renderText from './helpers/renderText';\n\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Button from '../ui/Button';\nimport Modal from '../ui/Modal';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  chatId: string;\n  messageId: number;\n  onClose: () => void;\n};\n\ntype StateProps = {\n  isChannel: boolean;\n  isPrivateChat: boolean;\n  isChatWithSelf: boolean;\n  isGroup: boolean;\n  isSuperGroup: boolean;\n  canPinForAll: boolean;\n  contactName?: string;\n};\n\nconst PinMessageModal: FC<OwnProps & StateProps> = ({\n  isOpen,\n  messageId,\n  isChannel,\n  isGroup,\n  isSuperGroup,\n  canPinForAll,\n  contactName,\n  onClose,\n}) => {\n  const { pinMessage } = getActions();\n\n  const handlePinMessageForAll = useCallback(() => {\n    pinMessage({\n      messageId, isUnpin: false,\n    });\n    onClose();\n  }, [pinMessage, messageId, onClose]);\n\n  const handlePinMessage = useCallback(() => {\n    pinMessage({\n      messageId, isUnpin: false, isOneSide: true, isSilent: true,\n    });\n    onClose();\n  }, [messageId, onClose, pinMessage]);\n\n  const lang = useOldLang();\n\n  function renderMessage() {\n    if (isChannel) {\n      return lang('PinMessageAlertChannel');\n    }\n\n    if (isGroup || isSuperGroup) {\n      return lang('PinMessageAlert');\n    }\n\n    return lang('PinMessageAlertChat');\n  }\n\n  return (\n    <Modal\n      isOpen={isOpen}\n      onClose={onClose}\n      className=\"pin\"\n      title={lang('PinMessageAlertTitle')}\n    >\n      <p>{renderMessage()}</p>\n      <div className=\"dialog-buttons-column\">\n        <Button className=\"confirm-dialog-button\" isText onClick={handlePinMessage}>\n          {lang('DialogPin')}\n        </Button>\n        {canPinForAll && (\n          <Button className=\"confirm-dialog-button\" isText onClick={handlePinMessageForAll}>\n            {contactName\n              ? renderText(lang('Conversation.PinMessagesFor', contactName))\n              : lang('Conversation.PinMessageAlert.PinAndNotifyMembers')}\n          </Button>\n        )}\n        <Button className=\"confirm-dialog-button\" isText onClick={onClose}>{lang('Cancel')}</Button>\n      </div>\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const isPrivateChat = isUserId(chatId);\n    const isChatWithSelf = selectIsChatWithSelf(global, chatId);\n    const chat = selectChat(global, chatId);\n    const isChannel = Boolean(chat) && isChatChannel(chat);\n    const isGroup = Boolean(chat) && isChatBasicGroup(chat);\n    const isSuperGroup = Boolean(chat) && isChatSuperGroup(chat);\n    const canPinForAll = (isPrivateChat && !isChatWithSelf) || isSuperGroup || isGroup;\n    const contactName = chat && isUserId(chat.id)\n      ? getUserFirstOrLastName(selectUser(global, getPrivateChatUserId(chat)!))\n      : undefined;\n\n    return {\n      isPrivateChat,\n      isChatWithSelf,\n      isChannel,\n      isGroup,\n      isSuperGroup,\n      canPinForAll,\n      contactName,\n    };\n  },\n)(PinMessageModal));\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo } from '../../lib/teact/teact';\n\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Button from '../ui/Button';\nimport Modal from '../ui/Modal';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  chatId?: string;\n  pinnedMessagesCount?: number;\n  onClose: () => void;\n  onUnpin: () => void;\n};\n\nconst UnpinAllMessagesModal: FC<OwnProps> = ({\n  isOpen,\n  pinnedMessagesCount = 0,\n  onClose,\n  onUnpin,\n}) => {\n  const lang = useOldLang();\n\n  return (\n    <Modal\n      isOpen={isOpen}\n      onClose={onClose}\n      className=\"unpin-all\"\n      title={lang('Chat.PanelUnpinAllMessages')}\n    >\n      <p>{lang('Chat.UnpinAllMessagesConfirmation', pinnedMessagesCount, 'i')}</p>\n      <div className=\"dialog-buttons mt-2\">\n        <Button className=\"confirm-dialog-button\" isText onClick={onUnpin}>\n          {lang('DialogUnpin')}\n        </Button>\n        <Button className=\"confirm-dialog-button\" isText onClick={onClose}>{lang('Cancel')}</Button>\n      </div>\n    </Modal>\n  );\n};\n\nexport default memo(UnpinAllMessagesModal);\n","import { useMemo } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport { useHotkeys } from '../../../hooks/useHotkeys';\n\nconst useCopySelectedMessages = (isActive?: boolean) => {\n  function handleCopy(e: KeyboardEvent) {\n    e.preventDefault();\n    getActions().copySelectedMessages();\n  }\n\n  useHotkeys(useMemo(() => (isActive ? {\n    'Mod+C': handleCopy,\n  } : undefined), [isActive]));\n};\n\nexport default useCopySelectedMessages;\n","// extracted by mini-css-extract-plugin\nexport default {\"main\":\"yBqscugH\",\"container\":\"kXZCbJ2r\",\"title\":\"SM4Gh7ar\",\"singleTitle\":\"jsg3ZpHm\",\"actionTitle\":\"fpMDH6cA\",\"restrictionTitle\":\"ujUxllEg\",\"listItemButton\":\"NE9anBBa\",\"button\":\"XbhgbPbE\",\"dropdownList\":\"JqX2Gfp8\",\"dialogButtons\":\"_E_ldIaq\",\"restrictionContainer\":\"SxYVATEo\",\"restrictionContainerOpen\":\"pb31MZG8\",\"dropdownListOpen\":\"xF6oHne7\"};","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo,\n  useEffect,\n  useMemo,\n  useState,\n} from '../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../global';\n\nimport type { ApiChat, ApiChatMember } from '../../api/types';\nimport type { IRadioOption } from '../ui/CheckboxGroup';\n\nimport {\n  getHasAdminRight,\n  getPrivateChatUserId,\n  getUserFirstOrLastName,\n  getUserFullName,\n  isChatBasicGroup, isChatChannel,\n  isChatSuperGroup,\n  isUserId,\n} from '../../global/helpers';\nimport {\n  getSendersFromSelectedMessages,\n  selectCanDeleteSelectedMessages,\n  selectChatFullInfo,\n  selectCurrentChat,\n  selectCurrentMessageIds,\n  selectCurrentMessageList,\n  selectSenderFromMessage,\n  selectTabState,\n  selectUser,\n} from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport { buildCollectionByCallback } from '../../util/iteratees';\nimport { MEMO_EMPTY_ARRAY } from '../../util/memo';\nimport renderText from '../common/helpers/renderText';\n\nimport useLang from '../../hooks/useLang';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\nimport usePreviousDeprecated from '../../hooks/usePreviousDeprecated';\nimport useManagePermissions from '../right/hooks/useManagePermissions';\n\nimport Avatar from '../common/Avatar';\nimport AvatarList from '../common/AvatarList';\nimport Icon from '../common/icons/Icon';\nimport PermissionCheckboxList from '../main/PermissionCheckboxList';\nimport Button from '../ui/Button';\nimport CheckboxGroup from '../ui/CheckboxGroup';\nimport ListItem from '../ui/ListItem';\nimport Modal from '../ui/Modal';\n\nimport styles from './DeleteSelectedMessageModal.module.scss';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  isSchedule: boolean;\n  onClose: () => void;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  isGroup?: boolean;\n  isChannel?: boolean;\n  isSuperGroup?: boolean;\n  selectedMessageIds?: number[];\n  canDeleteForAll?: boolean;\n  contactName?: string;\n  currentUserId?: string;\n  willDeleteForCurrentUserOnly?: boolean;\n  willDeleteForAll?: boolean;\n  messageIds: number[] | undefined;\n  adminMembersById?: Record<string, ApiChatMember>;\n  canBanUsers?: boolean;\n};\n\nconst DeleteSelectedMessageModal: FC<OwnProps & StateProps> = ({\n  chat,\n  isChannel,\n  isGroup,\n  isSuperGroup,\n  isOpen,\n  isSchedule,\n  currentUserId,\n  selectedMessageIds,\n  canDeleteForAll,\n  contactName,\n  willDeleteForCurrentUserOnly,\n  willDeleteForAll,\n  messageIds,\n  onClose,\n  adminMembersById,\n  canBanUsers,\n}) => {\n  const {\n    deleteMessages,\n    reportMessages,\n    deleteChatMember,\n    deleteScheduledMessages,\n    exitMessageSelectMode,\n    updateChatMemberBannedRights,\n  } = getActions();\n\n  const prevIsOpen = usePreviousDeprecated(isOpen);\n\n  const oldLang = useOldLang();\n  const lang = useLang();\n\n  const {\n    permissions, havePermissionChanged, handlePermissionChange, resetPermissions,\n  } = useManagePermissions(chat?.defaultBannedRights);\n\n  const [chosenDeleteOption, setChosenDeleteOption] = useState<string[] | undefined>(undefined);\n  const [chosenBanOption, setChosenBanOptions] = useState<string[] | undefined>(undefined);\n  const [chosenSpanOption, setChosenSpanOptions] = useState<string[] | undefined>(undefined);\n  const [isMediaDropdownOpen, setIsMediaDropdownOpen] = useState(false);\n  const [isAdditionalOptionsVisible, setIsAdditionalOptionsVisible] = useState(false);\n\n  const senderList = useMemo(() => {\n    if (isChannel) {\n      return undefined;\n    }\n    const senderArray = getSendersFromSelectedMessages(getGlobal(), chat);\n    return senderArray?.filter(Boolean);\n    // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n  }, [chat, isChannel, isOpen]);\n\n  const isSenderOwner = useMemo(() => {\n    if (!senderList) {\n      return undefined;\n    }\n\n    return senderList.some((sender) => sender\n      && adminMembersById\n      && adminMembersById[sender.id] && adminMembersById[sender.id].isOwner);\n  }, [senderList, adminMembersById]);\n\n  const userList = useMemo(() => {\n    const usersById = getGlobal().users.byId;\n    if (!senderList || isSchedule) return [];\n    const uniqueUserIds = new Set(senderList.map((user) => user!.id));\n\n    return Array.from(uniqueUserIds)\n      .map((id) => usersById[id])\n      .filter(Boolean);\n  }, [isSchedule, senderList]);\n\n  const nestedOptionsWithAvatarList = useLastCallback(() => {\n    return userList.map((user) => ({\n      value: `${user.id}`,\n      label: getUserFullName(user) || '',\n      leftElement: <Avatar size=\"small\" peer={user} />,\n    }));\n  });\n\n  const showAdditionalOptions = useMemo(() => {\n    return !userList.some((user) => user.id === currentUserId);\n  }, [userList, currentUserId]);\n\n  const shouldShowOptions = showAdditionalOptions && !canDeleteForAll && !isSchedule && (isGroup || isSuperGroup);\n\n  const userNames = useMemo(() => {\n    const usersById = getGlobal().users.byId;\n    if (!senderList || isSchedule) return {};\n\n    const uniqueUserIds = new Set(senderList.map((user) => user!.id));\n    const userIds = Array.from(uniqueUserIds).map((userId) => usersById[userId]);\n\n    return buildCollectionByCallback(userIds, (user) => [user?.id, getUserFullName(user)]);\n  }, [isSchedule, senderList]);\n\n  const ACTION_SPAM_OPTION: IRadioOption[] = useMemo(() => {\n    return [\n      {\n        value: selectedMessageIds && userList.length >= 2 ? 'spam' : userList?.[0]?.id,\n        label: oldLang('ReportSpamTitle'),\n        nestedOptions: selectedMessageIds && userList.length >= 2 ? [\n          ...nestedOptionsWithAvatarList(),\n        ] : undefined,\n      },\n    ];\n  }, [oldLang, selectedMessageIds, userList]);\n\n  const ACTION_DELETE_OPTION: IRadioOption[] = useMemo(() => {\n    return [\n      {\n        value: selectedMessageIds && userList.length >= 2 ? 'delete_all' : userList?.[0]?.id,\n        label: selectedMessageIds && userList.length >= 2\n          ? oldLang('DeleteAllFromUsers')\n          : oldLang('DeleteAllFrom', Object.values(userNames)[0]),\n        nestedOptions: selectedMessageIds && userList.length >= 2 ? [\n          ...nestedOptionsWithAvatarList(),\n        ] : undefined,\n      },\n    ];\n  }, [oldLang, selectedMessageIds, userList, userNames]);\n\n  const ACTION_BAN_OPTION: IRadioOption[] = useMemo(() => {\n    return [\n      {\n        value: selectedMessageIds && userList.length >= 2 ? 'ban' : userList?.[0]?.id,\n        label: selectedMessageIds && userList.length >= 2\n          ? (isAdditionalOptionsVisible ? oldLang('DeleteRestrictUsers') : oldLang('DeleteBanUsers'))\n          : (isAdditionalOptionsVisible ? oldLang('KickFromSupergroup')\n            : oldLang('DeleteBan', Object.values(userNames)[0])),\n        nestedOptions: selectedMessageIds && userList.length >= 2 ? [\n          ...nestedOptionsWithAvatarList(),\n        ] : undefined,\n      },\n    ];\n  }, [isAdditionalOptionsVisible, oldLang, selectedMessageIds, userList, userNames]);\n\n  const toggleAdditionalOptions = useLastCallback(() => {\n    setIsAdditionalOptionsVisible((prev) => !prev);\n  });\n\n  const handleDeleteMessageForAll = useLastCallback(() => {\n    onClose();\n    deleteMessages({ messageIds: selectedMessageIds!, shouldDeleteForAll: true });\n  });\n\n  const filterMessageIdByUserId = useLastCallback((userIds: string[], selectedMessageIdList: number[]) => {\n    if (!chat) return MEMO_EMPTY_ARRAY;\n    return selectedMessageIdList.filter((msgId) => {\n      const sender = selectSenderFromMessage(getGlobal(), chat.id, msgId);\n      return sender && userIds.includes(sender.id);\n    });\n  });\n\n  const handleDeleteMessages = useLastCallback((filteredMessageIdList: number[]) => {\n    if (filteredMessageIdList && filteredMessageIdList.length) {\n      deleteMessages({ messageIds: filteredMessageIdList, shouldDeleteForAll: true });\n    }\n  });\n\n  const handleDeleteMember = useLastCallback((filteredUserIdList: string[]) => {\n    filteredUserIdList.forEach((userId) => {\n      deleteChatMember({ chatId: chat!.id, userId });\n    });\n  });\n\n  const handleUpdateChatMemberBannedRights = useLastCallback((filteredUserIdList: string[]) => {\n    filteredUserIdList.forEach((userId) => {\n      updateChatMemberBannedRights({\n        chatId: chat!.id,\n        userId,\n        bannedRights: permissions,\n      });\n    });\n  });\n\n  const handleDeleteMessageForSelf = useLastCallback(() => {\n    if (!chat) return;\n\n    if (isSchedule) {\n      deleteScheduledMessages({ messageIds: selectedMessageIds! });\n    } else if (!isSenderOwner && shouldShowOptions) {\n      if (chosenSpanOption) {\n        const userIdList = chosenSpanOption.filter((option) => !Number.isNaN(Number(option)));\n        const filteredMessageIdList = filterMessageIdByUserId(userIdList, selectedMessageIds!);\n        if (filteredMessageIdList?.length) {\n          reportMessages({ messageIds: filteredMessageIdList, reason: 'spam', description: '' });\n        }\n      }\n\n      if (chosenDeleteOption) {\n        const userIdList = chosenDeleteOption.filter((option) => !Number.isNaN(Number(option)));\n        const filteredMessageIdList = filterMessageIdByUserId(userIdList, messageIds!);\n        handleDeleteMessages(filteredMessageIdList);\n      }\n\n      if (chosenBanOption && !havePermissionChanged) {\n        const userIdList = chosenBanOption.filter((option) => !Number.isNaN(Number(option)));\n        const filteredUserIdList = userIdList.filter((userId) => selectedMessageIds?.some((msgId) => {\n          const sender = selectSenderFromMessage(getGlobal(), chat.id, msgId);\n          return sender && sender.id === userId;\n        }));\n        handleDeleteMember(filteredUserIdList);\n        const filteredMessageIdList = filterMessageIdByUserId(userIdList, selectedMessageIds!);\n        handleDeleteMessages(filteredMessageIdList);\n      }\n\n      if (chosenBanOption && havePermissionChanged) {\n        const userIdList = chosenBanOption.filter((option) => !Number.isNaN(Number(option)));\n        const filteredUserIdList = userIdList.filter((userId) => selectedMessageIds?.some((msgId) => {\n          const sender = selectSenderFromMessage(getGlobal(), chat.id, msgId);\n          return sender && sender.id === userId;\n        }));\n        handleUpdateChatMemberBannedRights(filteredUserIdList);\n      }\n    } else {\n      deleteMessages({ messageIds: selectedMessageIds!, shouldDeleteForAll: false });\n    }\n\n    onClose();\n  });\n\n  const onCloseHandler = useLastCallback(() => {\n    onClose();\n  });\n\n  const handleDeleteOptionChange = useLastCallback((options: string[]) => {\n    setChosenDeleteOption(options);\n  });\n\n  const handleBanOptionChange = useLastCallback((options: string[]) => {\n    setChosenBanOptions(options);\n  });\n\n  const handleSpanOptionChange = useLastCallback((options: string[]) => {\n    setChosenSpanOptions(options);\n  });\n\n  useEffect(() => {\n    if (!isOpen && prevIsOpen) {\n      exitMessageSelectMode();\n      setChosenSpanOptions(undefined);\n      setChosenDeleteOption(undefined);\n      setChosenBanOptions(undefined);\n      setIsMediaDropdownOpen(false);\n      setIsAdditionalOptionsVisible(false);\n      resetPermissions();\n    }\n  }, [exitMessageSelectMode, isOpen, prevIsOpen, resetPermissions]);\n\n  function renderHeader() {\n    return (\n      <div\n        className={shouldShowOptions && styles.container}\n        dir={oldLang.isRtl ? 'rtl' : undefined}\n      >\n        {shouldShowOptions && (\n          <AvatarList\n            size=\"small\"\n            peers={userList}\n          />\n        )}\n        <h3 className={buildClassName(shouldShowOptions ? styles.title : styles.singleTitle)}>\n          {oldLang('Chat.DeleteMessagesConfirmation', selectedMessageIds?.length)}\n        </h3>\n      </div>\n    );\n  }\n\n  function renderAdditionalActionOptions() {\n    return (\n      <div className={styles.options}>\n        <CheckboxGroup\n          options={ACTION_SPAM_OPTION}\n          onChange={handleSpanOptionChange}\n          selected={chosenSpanOption}\n          nestedCheckbox={selectedMessageIds && userList.length >= 2}\n        />\n        <CheckboxGroup\n          options={ACTION_DELETE_OPTION}\n          onChange={handleDeleteOptionChange}\n          selected={chosenDeleteOption}\n          nestedCheckbox={selectedMessageIds && userList.length >= 2}\n        />\n        {!isSenderOwner && canBanUsers && (\n          <CheckboxGroup\n            options={ACTION_BAN_OPTION}\n            onChange={handleBanOptionChange}\n            selected={chosenBanOption}\n            nestedCheckbox={selectedMessageIds && userList.length >= 2}\n          />\n        )}\n      </div>\n    );\n  }\n\n  function renderPartiallyRestrictedUser() {\n    return (\n      <div className={buildClassName(styles.restrictionContainer,\n        isAdditionalOptionsVisible && styles.restrictionContainerOpen)}\n      >\n        <h3 className={buildClassName(styles.actionTitle, styles.restrictionTitle)}>\n          {oldLang('UserRestrictionsCanDoUsers', userList.length)}\n        </h3>\n        <PermissionCheckboxList\n          withCheckbox\n          permissionGroup\n          chatId={chat?.id}\n          isMediaDropdownOpen={isMediaDropdownOpen}\n          setIsMediaDropdownOpen={setIsMediaDropdownOpen}\n          handlePermissionChange={handlePermissionChange}\n          permissions={permissions}\n          className={buildClassName(styles.dropdownList, isMediaDropdownOpen && styles.dropdownListOpen)}\n        />\n      </div>\n    );\n  }\n\n  if (!selectedMessageIds) {\n    return undefined;\n  }\n\n  return (\n    <Modal\n      isOpen={isOpen}\n      onClose={onClose}\n      onEnter={canDeleteForAll ? undefined : handleDeleteMessageForSelf}\n      className=\"delete\"\n    >\n      <div className={styles.main}>\n        {renderHeader()}\n        {!showAdditionalOptions && <p>{lang('AreYouSureDeleteFewMessages')}</p>}\n        {shouldShowOptions && (\n          <>\n            <p className={styles.actionTitle}>{oldLang('DeleteAdditionalActions')}</p>\n            {renderAdditionalActionOptions()}\n            {renderPartiallyRestrictedUser()}\n            {\n              chosenBanOption && canBanUsers && chosenBanOption?.length ? (\n                <ListItem\n                  narrow\n                  className={styles.listItemButton}\n                  buttonClassName={styles.button}\n                  onClick={toggleAdditionalOptions}\n                >\n                  {oldLang(isAdditionalOptionsVisible ? 'DeleteToggleBanUsers' : 'DeleteToggleRestrictUsers')}\n                  <Icon\n                    name={isAdditionalOptionsVisible ? 'up' : 'down'}\n                    className={buildClassName(styles.button, 'ml-2')}\n                  />\n                </ListItem>\n              ) : setIsAdditionalOptionsVisible(false)\n            }\n          </>\n        )}\n        {willDeleteForCurrentUserOnly && lang('DeleteForMeDescription')}\n        {(willDeleteForAll && !showAdditionalOptions) && lang('DeleteForEveryoneDescription')}\n        <div className={canDeleteForAll ? 'dialog-buttons-column'\n          : buildClassName('dialog-buttons', isAdditionalOptionsVisible && styles.dialogButtons)}\n        >\n          {canDeleteForAll && (\n            <Button color=\"danger\" className=\"confirm-dialog-button\" isText onClick={handleDeleteMessageForAll}>\n              {contactName\n                ? renderText(oldLang('ChatList.DeleteForEveryone', contactName))\n                : oldLang('Conversation.DeleteMessagesForEveryone')}\n            </Button>\n          )}\n          <Button color=\"danger\" className=\"confirm-dialog-button\" isText onClick={handleDeleteMessageForSelf}>\n            {oldLang(canDeleteForAll ? 'ChatList.DeleteForCurrentUser' : 'Delete')}\n          </Button>\n          <Button className=\"confirm-dialog-button\" isText onClick={onCloseHandler}>{oldLang('Cancel')}</Button>\n        </div>\n      </div>\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { isSchedule }): StateProps => {\n    const { messageIds: selectedMessageIds } = selectTabState(global).selectedMessages || {};\n    const { canDeleteForAll } = selectCanDeleteSelectedMessages(global);\n    const chat = selectCurrentChat(global);\n    const chatFullInfo = chat && selectChatFullInfo(global, chat.id);\n    const { threadId, type } = selectCurrentMessageList(global) || {};\n    const messageIds = chat && selectCurrentMessageIds(global, chat.id, threadId!, type!);\n    const isChannel = Boolean(chat) && isChatChannel(chat);\n    const isGroup = Boolean(chat) && isChatBasicGroup(chat);\n    const isSuperGroup = Boolean(chat) && isChatSuperGroup(chat);\n    const contactName = chat && isUserId(chat.id)\n      ? getUserFirstOrLastName(selectUser(global, getPrivateChatUserId(chat)!))\n      : undefined;\n    const adminMembersById = chatFullInfo?.adminMembersById;\n    const canBanUsers = chat && (chat.isCreator || getHasAdminRight(chat, 'banUsers'));\n    const willDeleteForCurrentUserOnly = chat && isChatBasicGroup(chat) && !canDeleteForAll;\n    const willDeleteForAll = chat && isChatSuperGroup(chat);\n\n    return {\n      chat,\n      isGroup,\n      isChannel,\n      isSuperGroup,\n      selectedMessageIds,\n      currentUserId: global.currentUserId,\n      canDeleteForAll: !isSchedule && canDeleteForAll,\n      contactName,\n      willDeleteForCurrentUserOnly,\n      willDeleteForAll,\n      messageIds,\n      adminMembersById,\n      canBanUsers,\n    };\n  },\n)(DeleteSelectedMessageModal));\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useEffect } from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { MessageListType } from '../../global/types';\nimport type { IconName } from '../../types/icons';\n\nimport {\n  selectCanDeleteSelectedMessages,\n  selectCanDownloadSelectedMessages,\n  selectCanForwardMessages,\n  selectCanReportSelectedMessages,\n  selectCurrentMessageList, selectHasProtectedMessage,\n  selectSelectedMessagesCount,\n  selectTabState,\n} from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport captureKeyboardListeners from '../../util/captureKeyboardListeners';\n\nimport useFlag from '../../hooks/useFlag';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\nimport usePreviousDeprecated from '../../hooks/usePreviousDeprecated';\nimport useCopySelectedMessages from './hooks/useCopySelectedMessages';\n\nimport ReportModal from '../common/ReportModal';\nimport Button from '../ui/Button';\nimport DeleteSelectedMessageModal from './DeleteSelectedMessageModal';\n\nimport './MessageSelectToolbar.scss';\n\nexport type OwnProps = {\n  isActive?: boolean;\n  canPost?: boolean;\n  messageListType?: MessageListType;\n};\n\ntype StateProps = {\n  isSchedule: boolean;\n  selectedMessagesCount?: number;\n  canDeleteMessages?: boolean;\n  canReportMessages?: boolean;\n  canDownloadMessages?: boolean;\n  canForwardMessages?: boolean;\n  hasProtectedMessage?: boolean;\n  isAnyModalOpen?: boolean;\n  selectedMessageIds?: number[];\n};\n\nconst MessageSelectToolbar: FC<OwnProps & StateProps> = ({\n  canPost,\n  isActive,\n  messageListType,\n  isSchedule,\n  selectedMessagesCount,\n  canDeleteMessages,\n  canReportMessages,\n  canDownloadMessages,\n  canForwardMessages,\n  hasProtectedMessage,\n  isAnyModalOpen,\n  selectedMessageIds,\n}) => {\n  const {\n    exitMessageSelectMode,\n    openForwardMenuForSelectedMessages,\n    downloadSelectedMessages,\n    copySelectedMessages,\n    showNotification,\n  } = getActions();\n  const lang = useOldLang();\n\n  const [isDeleteModalOpen, openDeleteModal, closeDeleteModal] = useFlag();\n  const [isReportModalOpen, openReportModal, closeReportModal] = useFlag();\n\n  useCopySelectedMessages(isActive);\n\n  const handleExitMessageSelectMode = useLastCallback(() => {\n    exitMessageSelectMode();\n  });\n\n  useEffect(() => {\n    return isActive && !isDeleteModalOpen && !isReportModalOpen && !isAnyModalOpen\n      ? captureKeyboardListeners({\n        onBackspace: canDeleteMessages ? openDeleteModal : undefined,\n        onDelete: canDeleteMessages ? openDeleteModal : undefined,\n        onEsc: handleExitMessageSelectMode,\n      })\n      : undefined;\n  }, [\n    isActive, isDeleteModalOpen, isReportModalOpen, openDeleteModal, handleExitMessageSelectMode, isAnyModalOpen,\n    canDeleteMessages,\n  ]);\n\n  const handleCopy = useLastCallback(() => {\n    copySelectedMessages();\n    showNotification({\n      message: lang('Share.Link.Copied'),\n    });\n    exitMessageSelectMode();\n  });\n\n  const handleDownload = useLastCallback(() => {\n    downloadSelectedMessages();\n    exitMessageSelectMode();\n  });\n\n  const prevSelectedMessagesCount = usePreviousDeprecated(selectedMessagesCount || undefined, true);\n  const renderingSelectedMessagesCount = isActive ? selectedMessagesCount : prevSelectedMessagesCount;\n\n  const formattedMessagesCount = lang('VoiceOver.Chat.MessagesSelected', renderingSelectedMessagesCount, 'i');\n\n  const className = buildClassName(\n    'MessageSelectToolbar',\n    canPost && 'with-composer',\n    isActive && 'shown',\n  );\n\n  const renderButton = (\n    icon: IconName, label: string, onClick: AnyToVoidFunction, destructive?: boolean,\n  ) => {\n    return (\n      <div\n        role=\"button\"\n        tabIndex={0}\n        className={buildClassName(\n          'div-button',\n          'item',\n          destructive && 'destructive',\n        )}\n        onClick={onClick}\n        title={label}\n        aria-label={label}\n      >\n        <i className={buildClassName('icon', `icon-${icon}`)} />\n      </div>\n    );\n  };\n\n  return (\n    <div className={className}>\n      <div className=\"MessageSelectToolbar-inner\">\n        <Button\n          color=\"translucent\"\n          round\n          onClick={handleExitMessageSelectMode}\n          ariaLabel=\"Exit select mode\"\n        >\n          <i className=\"icon icon-close\" />\n        </Button>\n        <span className=\"MessageSelectToolbar-count\" title={formattedMessagesCount}>\n          {formattedMessagesCount}\n        </span>\n\n        {Boolean(selectedMessagesCount) && (\n          <div className=\"MessageSelectToolbar-actions\">\n            {messageListType !== 'scheduled' && canForwardMessages && (\n              renderButton(\n                'forward', lang('Chat.ForwardActionHeader'), openForwardMenuForSelectedMessages,\n              )\n            )}\n            {canReportMessages && (\n              renderButton('flag', lang('Conversation.ReportMessages'), openReportModal)\n            )}\n            {canDownloadMessages && !hasProtectedMessage && (\n              renderButton('download', lang('lng_media_download'), handleDownload)\n            )}\n            {!hasProtectedMessage && (\n              renderButton('copy', lang('lng_context_copy_selected_items'), handleCopy)\n            )}\n            {canDeleteMessages && (\n              renderButton('delete', lang('EditAdminGroupDeleteMessages'), openDeleteModal, true)\n            )}\n          </div>\n        )}\n      </div>\n      {canDeleteMessages && (\n        <DeleteSelectedMessageModal\n          isOpen={isDeleteModalOpen}\n          isSchedule={isSchedule}\n          onClose={closeDeleteModal}\n        />\n      )}\n      <ReportModal\n        isOpen={isReportModalOpen}\n        onClose={closeReportModal}\n        messageIds={selectedMessageIds}\n      />\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const tabState = selectTabState(global);\n    const { type: messageListType, chatId } = selectCurrentMessageList(global) || {};\n    const isSchedule = messageListType === 'scheduled';\n    const { canDelete } = selectCanDeleteSelectedMessages(global);\n    const canReport = Boolean(!isSchedule && selectCanReportSelectedMessages(global));\n    const canDownload = selectCanDownloadSelectedMessages(global);\n    const { messageIds: selectedMessageIds } = tabState.selectedMessages || {};\n    const hasProtectedMessage = chatId ? selectHasProtectedMessage(global, chatId, selectedMessageIds) : false;\n    const canForward = !isSchedule && chatId ? selectCanForwardMessages(global, chatId, selectedMessageIds) : false;\n    const isShareMessageModalOpen = tabState.isShareMessageModalShown;\n    const isAnyModalOpen = Boolean(isShareMessageModalOpen || tabState.requestedDraft\n      || tabState.requestedAttachBotInChat || tabState.requestedAttachBotInstall);\n\n    return {\n      isSchedule,\n      selectedMessagesCount: selectSelectedMessagesCount(global),\n      canDeleteMessages: canDelete,\n      canReportMessages: canReport,\n      canDownloadMessages: canDownload,\n      canForwardMessages: canForward,\n      selectedMessageIds,\n      hasProtectedMessage,\n      isAnyModalOpen,\n    };\n  },\n)(MessageSelectToolbar));\n","import React, { memo, useMemo } from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport { selectChatMessage, selectTabState } from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport { formatDateAtTime } from '../../util/dates/dateFormat';\n\nimport useCurrentOrPrev from '../../hooks/useCurrentOrPrev';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Button from '../ui/Button';\nimport ListItem from '../ui/ListItem';\nimport Modal from '../ui/Modal';\nimport PrivateChatInfo from './PrivateChatInfo';\n\nimport styles from './SeenByModal.module.scss';\n\nexport type OwnProps = {\n  isOpen: boolean;\n};\n\nexport type StateProps = {\n  seenByDates?: Record<string, number>;\n};\n\nconst CLOSE_ANIMATION_DURATION = 100;\n\nfunction SeenByModal({\n  isOpen,\n  seenByDates,\n}: OwnProps & StateProps) {\n  const {\n    openChat,\n    closeSeenByModal,\n  } = getActions();\n\n  const lang = useOldLang();\n\n  const renderingSeenByDates = useCurrentOrPrev(seenByDates, true);\n  const memberIds = useMemo(() => {\n    if (!renderingSeenByDates) {\n      return undefined;\n    }\n\n    const result = Object.keys(renderingSeenByDates);\n    result.sort((leftId, rightId) => renderingSeenByDates[rightId] - renderingSeenByDates[leftId]);\n\n    return result;\n  }, [renderingSeenByDates]);\n\n  const handleClick = useLastCallback((userId: string) => {\n    closeSeenByModal();\n\n    setTimeout(() => {\n      openChat({ id: userId });\n    }, CLOSE_ANIMATION_DURATION);\n  });\n\n  const handleCloseSeenByModal = useLastCallback(() => {\n    closeSeenByModal();\n  });\n\n  return (\n    <Modal\n      isOpen={isOpen}\n      onClose={closeSeenByModal}\n      className={buildClassName(styles.modal, 'narrow')}\n      title={`Seen by ${memberIds?.length} users`}\n    >\n      <div dir={lang.isRtl ? 'rtl' : undefined}>\n        {memberIds && memberIds.map((userId) => (\n          <ListItem\n            key={userId}\n            className=\"chat-item-clickable scroll-item small-icon\"\n            // eslint-disable-next-line react/jsx-no-bind\n            onClick={() => handleClick(userId)}\n          >\n            <PrivateChatInfo\n              userId={userId}\n              noStatusOrTyping\n              status={formatDateAtTime(lang, renderingSeenByDates![userId] * 1000)}\n              statusIcon=\"message-read\"\n            />\n          </ListItem>\n        ))}\n      </div>\n      <div className=\"dialog-buttons mt-2\">\n        <Button\n          className=\"confirm-dialog-button\"\n          isText\n          onClick={handleCloseSeenByModal}\n        >\n          {lang('Close')}\n        </Button>\n      </div>\n    </Modal>\n  );\n}\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const { chatId, messageId } = selectTabState(global).seenByModal || {};\n    if (!chatId || !messageId) {\n      return {};\n    }\n\n    return {\n      seenByDates: selectChatMessage(global, chatId, messageId)?.seenByDates,\n    };\n  },\n)(SeenByModal));\n","// extracted by mini-css-extract-plugin\nexport default {\"modal\":\"slqA9gR2\"};","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"tauadiDm\",\"icon\":\"i4wZg_0J\",\"header\":\"MQxuEIRA\",\"desc\":\"AEAN1Au4\",\"separator\":\"sXXb5yOS\",\"button\":\"F7owtTHj\",\"closeButton\":\"i6iFv9YE\"};","import React, { memo } from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { ApiUser } from '../../api/types';\n\nimport { ANIMATION_END_DELAY } from '../../config';\nimport { getUserFirstOrLastName } from '../../global/helpers';\nimport { selectTabState, selectUser } from '../../global/selectors';\nimport { LOCAL_TGS_URLS } from './helpers/animatedAssets';\nimport renderText from './helpers/renderText';\n\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Button from '../ui/Button';\nimport Modal, { ANIMATION_DURATION } from '../ui/Modal';\nimport Separator from '../ui/Separator';\nimport AnimatedIconWithPreview from './AnimatedIconWithPreview';\nimport Icon from './icons/Icon';\n\nimport styles from './PrivacySettingsNoticeModal.module.scss';\n\nexport type OwnProps = {\n  isOpen: boolean;\n};\n\ntype StateProps = {\n  user?: ApiUser;\n  isReadDate?: boolean;\n};\n\nconst CLOSE_ANIMATION_DURATION = ANIMATION_DURATION + ANIMATION_END_DELAY;\n\nconst PrivacySettingsNoticeModal = ({ isOpen, isReadDate, user }: OwnProps & StateProps) => {\n  const lang = useOldLang();\n  const {\n    updateGlobalPrivacySettings,\n    openPremiumModal,\n    closePrivacySettingsNoticeModal,\n    showNotification,\n    setPrivacyVisibility,\n    loadUser,\n  } = getActions();\n  const userName = getUserFirstOrLastName(user);\n\n  const handleShowReadTime = useLastCallback(() => {\n    updateGlobalPrivacySettings({ shouldHideReadMarks: false });\n    closePrivacySettingsNoticeModal();\n\n    setTimeout(() => {\n      showNotification({ message: lang('PremiumReadSet') });\n    }, CLOSE_ANIMATION_DURATION);\n  });\n\n  const handleShowLastSeen = useLastCallback(() => {\n    setPrivacyVisibility({\n      privacyKey: 'lastSeen',\n      visibility: 'everybody',\n      onSuccess: () => loadUser({ userId: user!.id }),\n    });\n    closePrivacySettingsNoticeModal();\n\n    setTimeout(() => {\n      showNotification({ message: lang('PremiumLastSeenSet') });\n    }, CLOSE_ANIMATION_DURATION);\n  });\n\n  const handleOpenPremium = useLastCallback(() => {\n    closePrivacySettingsNoticeModal();\n\n    setTimeout(() => {\n      openPremiumModal({ initialSection: 'last_seen' });\n    }, CLOSE_ANIMATION_DURATION);\n  });\n\n  const handleClose = useLastCallback(() => {\n    closePrivacySettingsNoticeModal();\n  });\n\n  return (\n    <Modal isSlim isOpen={isOpen} onClose={handleClose}>\n      <div className={styles.container} dir={lang.isRtl ? 'rtl' : undefined}>\n        <Button\n          className={styles.closeButton}\n          color=\"translucent\"\n          round\n          size=\"smaller\"\n          onClick={handleClose}\n          ariaLabel=\"Close\"\n        >\n          <Icon name=\"close\" />\n        </Button>\n        <AnimatedIconWithPreview\n          tgsUrl={isReadDate ? LOCAL_TGS_URLS.ReadTime : LOCAL_TGS_URLS.LastSeen}\n          size={84}\n          className={styles.icon}\n          nonInteractive\n          noLoop\n        />\n        <h2 className={styles.header}>\n          {lang(isReadDate ? 'PremiumReadHeader1' : 'PremiumLastSeenHeader1')}\n        </h2>\n        <p className={styles.desc}>\n          {renderText(\n            lang(\n              isReadDate ? 'PremiumReadText1' : 'PremiumLastSeenText1Locked',\n              userName,\n            ),\n            ['simple_markdown'],\n          )}\n        </p>\n        <Button\n          size=\"smaller\"\n          onClick={isReadDate ? handleShowReadTime : handleShowLastSeen}\n          className={styles.button}\n        >\n          {lang(isReadDate ? 'PremiumReadButton1' : 'PremiumLastSeenButton1')}\n        </Button>\n        <Separator className={styles.separator}>{lang('PremiumOr')}</Separator>\n        <h2 className={styles.header}>{lang('PremiumReadHeader2')}</h2>\n        <p className={styles.desc}>\n          {renderText(\n            lang(isReadDate ? 'PremiumReadText2' : 'PremiumLastSeenText2', userName),\n            ['simple_markdown'],\n          )}\n        </p>\n        <Button\n          withPremiumGradient\n          size=\"smaller\"\n          onClick={handleOpenPremium}\n          className={styles.button}\n        >\n          {lang('PremiumLastSeenButton2')}\n        </Button>\n      </div>\n    </Modal>\n  );\n};\n\nexport default memo(\n  withGlobal<OwnProps>((global): StateProps => {\n    const { chatId, isReadDate } = selectTabState(global).privacySettingsNoticeModal || {};\n    const user = chatId ? selectUser(global, chatId) : undefined;\n\n    return { user, isReadDate };\n  })(PrivacySettingsNoticeModal),\n);\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo, useRef,\n  useState,\n} from '../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../global';\n\nimport type { ApiAvailableReaction, ApiMessage, ApiReaction } from '../../api/types';\nimport { LoadMoreDirection } from '../../types';\n\nimport { getReactionKey, isSameReaction } from '../../global/helpers';\nimport {\n  selectChatMessage,\n  selectTabState,\n} from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport { formatDateAtTime } from '../../util/dates/dateFormat';\nimport { unique } from '../../util/iteratees';\nimport { formatIntegerCompact } from '../../util/textFormat';\n\nimport useFlag from '../../hooks/useFlag';\nimport useInfiniteScroll from '../../hooks/useInfiniteScroll';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Avatar from '../common/Avatar';\nimport FullNameTitle from '../common/FullNameTitle';\nimport PrivateChatInfo from '../common/PrivateChatInfo';\nimport ReactionStaticEmoji from '../common/ReactionStaticEmoji';\nimport Button from '../ui/Button';\nimport InfiniteScroll from '../ui/InfiniteScroll';\nimport ListItem from '../ui/ListItem';\nimport Loading from '../ui/Loading';\nimport Modal from '../ui/Modal';\n\nimport './ReactorListModal.scss';\n\nconst MIN_REACTIONS_COUNT_FOR_FILTERS = 10;\n\nexport type OwnProps = {\n  isOpen: boolean;\n};\n\nexport type StateProps = Pick<ApiMessage, 'reactors' | 'reactions' | 'seenByDates'> & {\n  chatId?: string;\n  messageId?: number;\n  availableReactions?: ApiAvailableReaction[];\n};\n\nconst ReactorListModal: FC<OwnProps & StateProps> = ({\n  isOpen,\n  reactors,\n  reactions,\n  chatId,\n  messageId,\n  seenByDates,\n  availableReactions,\n}) => {\n  const {\n    loadReactors,\n    closeReactorListModal,\n    openChat,\n  } = getActions();\n\n  // No need for expensive global updates on chats or users, so we avoid them\n  const chatsById = getGlobal().chats.byId;\n  const usersById = getGlobal().users.byId;\n\n  const lang = useOldLang();\n  const [isClosing, startClosing, stopClosing] = useFlag(false);\n  const [chosenTab, setChosenTab] = useState<ApiReaction | undefined>(undefined);\n  const canShowFilters = reactors && reactions && reactors.count >= MIN_REACTIONS_COUNT_FOR_FILTERS\n    && reactions.results.length > 1;\n  const chatIdRef = useRef<string>();\n\n  useEffect(() => {\n    if (isOpen && !isClosing) {\n      chatIdRef.current = undefined;\n    }\n\n    if (isClosing && !isOpen) {\n      stopClosing();\n      setChosenTab(undefined);\n    }\n  }, [isClosing, isOpen, stopClosing]);\n\n  const handleCloseAnimationEnd = useLastCallback(() => {\n    if (chatIdRef.current) {\n      openChat({ id: chatIdRef.current });\n    }\n    closeReactorListModal();\n  });\n\n  const handleClose = useLastCallback(() => {\n    startClosing();\n  });\n\n  const handleClick = useLastCallback((userId: string) => {\n    chatIdRef.current = userId;\n    handleClose();\n  });\n\n  const handleLoadMore = useLastCallback(() => {\n    loadReactors({\n      chatId: chatId!,\n      messageId: messageId!,\n    });\n  });\n\n  const allReactions = useMemo(() => {\n    const uniqueReactions: ApiReaction[] = [];\n    reactors?.reactions?.forEach(({ reaction }) => {\n      if (!uniqueReactions.some((r) => isSameReaction(r, reaction))) {\n        uniqueReactions.push(reaction);\n      }\n    });\n    return uniqueReactions;\n  }, [reactors]);\n\n  const peerIds = useMemo(() => {\n    if (chosenTab) {\n      return reactors?.reactions\n        .filter(({ reaction }) => isSameReaction(reaction, chosenTab))\n        .map(({ peerId }) => peerId);\n    }\n\n    const seenByUserIds = Object.keys(seenByDates || {});\n\n    return unique(reactors?.reactions.map(({ peerId }) => peerId).concat(seenByUserIds || []) || []);\n  }, [chosenTab, reactors, seenByDates]);\n\n  const [viewportIds, getMore] = useInfiniteScroll(\n    handleLoadMore, peerIds, reactors && reactors.nextOffset === undefined,\n  );\n\n  useEffect(() => {\n    getMore?.({ direction: LoadMoreDirection.Backwards });\n  }, [getMore]);\n\n  return (\n    <Modal\n      isOpen={isOpen && !isClosing}\n      onClose={handleClose}\n      className=\"ReactorListModal narrow\"\n      title={lang('Reactions')}\n      onCloseAnimationEnd={handleCloseAnimationEnd}\n    >\n      {canShowFilters && (\n        <div className=\"Reactions\" dir={lang.isRtl ? 'rtl' : undefined}>\n          <Button\n            className={buildClassName(!chosenTab && 'chosen')}\n            size=\"tiny\"\n            ripple\n            // eslint-disable-next-line react/jsx-no-bind\n            onClick={() => setChosenTab(undefined)}\n          >\n            <i className=\"icon icon-heart\" />\n            {Boolean(reactors?.count) && formatIntegerCompact(reactors.count)}\n          </Button>\n          {allReactions.map((reaction) => {\n            const count = reactions?.results\n              .find((reactionsCount) => isSameReaction(reactionsCount.reaction, reaction))?.count;\n            return (\n              <Button\n                key={getReactionKey(reaction)}\n                className={buildClassName(isSameReaction(chosenTab, reaction) && 'chosen')}\n                size=\"tiny\"\n                ripple\n                // eslint-disable-next-line react/jsx-no-bind\n                onClick={() => setChosenTab(reaction)}\n              >\n                <ReactionStaticEmoji\n                  reaction={reaction}\n                  className=\"reaction-filter-emoji\"\n                  availableReactions={availableReactions}\n                />\n                {Boolean(count) && formatIntegerCompact(count)}\n              </Button>\n            );\n          })}\n        </div>\n      )}\n\n      <div dir={lang.isRtl ? 'rtl' : undefined} className=\"reactor-list-wrapper\">\n        {viewportIds?.length ? (\n          <InfiniteScroll\n            className=\"reactor-list custom-scroll\"\n            items={viewportIds}\n            onLoadMore={getMore}\n          >\n            {viewportIds?.flatMap(\n              (peerId) => {\n                const peer = usersById[peerId] || chatsById[peerId];\n\n                const peerReactions = reactors?.reactions.filter((reactor) => reactor.peerId === peerId);\n                const items: React.ReactNode[] = [];\n                const seenByUser = seenByDates?.[peerId];\n\n                peerReactions?.forEach((r) => {\n                  if (chosenTab && !isSameReaction(r.reaction, chosenTab)) return;\n\n                  items.push(\n                    <ListItem\n                      key={`${peerId}-${getReactionKey(r.reaction)}`}\n                      className=\"chat-item-clickable reactors-list-item\"\n                      // eslint-disable-next-line react/jsx-no-bind\n                      onClick={() => handleClick(peerId)}\n                    >\n                      <Avatar peer={peer} size=\"medium\" />\n                      <div className=\"info\">\n                        <FullNameTitle peer={peer} withEmojiStatus />\n                        <span className=\"status\" dir=\"auto\">\n                          <i className=\"icon icon-heart-outline status-icon\" />\n                          {formatDateAtTime(lang, r.addedDate * 1000)}\n                        </span>\n                      </div>\n                      {r.reaction && (\n                        <ReactionStaticEmoji\n                          className=\"reactors-list-emoji\"\n                          reaction={r.reaction}\n                          availableReactions={availableReactions}\n                        />\n                      )}\n                    </ListItem>,\n                  );\n                });\n\n                if (!chosenTab && !peerReactions?.length) {\n                  items.push(\n                    <ListItem\n                      key={`${peerId}-seen-by`}\n                      className=\"chat-item-clickable scroll-item small-icon\"\n                      // eslint-disable-next-line react/jsx-no-bind\n                      onClick={() => handleClick(peerId)}\n                    >\n                      <PrivateChatInfo\n                        userId={peerId}\n                        noStatusOrTyping\n                        avatarSize=\"medium\"\n                        status={seenByUser ? formatDateAtTime(lang, seenByUser * 1000) : undefined}\n                        statusIcon=\"message-read\"\n                      />\n                    </ListItem>,\n                  );\n                }\n                return items;\n              },\n            )}\n          </InfiniteScroll>\n        ) : <Loading />}\n      </div>\n      <Button\n        className=\"confirm-dialog-button\"\n        isText\n        onClick={handleClose}\n      >\n        {lang('Close')}\n      </Button>\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const { chatId, messageId } = selectTabState(global).reactorModal || {};\n    const message = chatId && messageId ? selectChatMessage(global, chatId, messageId) : undefined;\n\n    return {\n      chatId,\n      messageId,\n      reactions: message?.reactions,\n      reactors: message?.reactors,\n      seenByDates: message?.seenByDates,\n      availableReactions: global.reactions.availableReactions,\n    };\n  },\n)(ReactorListModal));\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  beginHeavyAnimation,\n  memo, useEffect, useLayoutEffect, useRef,\n} from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { ActiveEmojiInteraction } from '../../global/types';\n\nimport {\n  selectAnimatedEmojiEffect,\n} from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport { IS_ANDROID } from '../../util/windowEnvironment';\n\nimport useFlag from '../../hooks/useFlag';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useMedia from '../../hooks/useMedia';\n\nimport AnimatedSticker from '../common/AnimatedSticker';\n\nimport './EmojiInteractionAnimation.scss';\n\nexport type OwnProps = {\n  activeEmojiInteraction: ActiveEmojiInteraction;\n};\n\ntype StateProps = {\n  effectAnimationId?: string;\n};\n\nconst HIDE_ANIMATION_DURATION = 250;\nconst PLAYING_DURATION = 3000;\nconst EFFECT_SIZE = 309;\n\nconst EmojiInteractionAnimation: FC<OwnProps & StateProps> = ({\n  effectAnimationId,\n  activeEmojiInteraction,\n}) => {\n  const { stopActiveEmojiInteraction } = getActions();\n\n  const [isHiding, startHiding] = useFlag(false);\n  const [isPlaying, startPlaying] = useFlag(false);\n  const timeoutRef = useRef<NodeJS.Timeout>();\n\n  const stop = useLastCallback(() => {\n    startHiding();\n    if (timeoutRef.current) {\n      clearTimeout(timeoutRef.current);\n    }\n    setTimeout(() => {\n      stopActiveEmojiInteraction({ id: activeEmojiInteraction.id });\n    }, HIDE_ANIMATION_DURATION);\n  });\n\n  const handleCancelAnimation = useLastCallback((e: UIEvent) => {\n    if (!(e.target as HTMLElement)?.closest('.AnimatedEmoji')) {\n      stop();\n    }\n  });\n\n  useEffect(() => {\n    document.addEventListener('touchstart', handleCancelAnimation);\n    document.addEventListener('touchmove', handleCancelAnimation);\n    document.addEventListener('mousedown', handleCancelAnimation);\n    document.addEventListener('wheel', handleCancelAnimation);\n\n    return () => {\n      document.removeEventListener('touchstart', handleCancelAnimation);\n      document.removeEventListener('touchmove', handleCancelAnimation);\n      document.removeEventListener('mousedown', handleCancelAnimation);\n      document.removeEventListener('wheel', handleCancelAnimation);\n    };\n  }, [handleCancelAnimation]);\n\n  useLayoutEffect(() => {\n    const endHeavyAnimation = beginHeavyAnimation();\n\n    timeoutRef.current = setTimeout(() => {\n      stop();\n      endHeavyAnimation();\n    }, PLAYING_DURATION);\n  }, [stop]);\n\n  const effectHash = effectAnimationId && `sticker${effectAnimationId}`;\n  const effectTgsUrl = useMedia(effectHash, !effectAnimationId);\n\n  if (!activeEmojiInteraction.startSize) {\n    return undefined;\n  }\n\n  const scale = (activeEmojiInteraction.startSize || 0) / EFFECT_SIZE;\n\n  return (\n    <div\n      className={buildClassName(\n        'EmojiInteractionAnimation',\n        isHiding && 'hiding',\n        isPlaying && 'playing',\n        activeEmojiInteraction.isReversed && 'reversed',\n      )}\n      style={`--scale: ${scale}; --start-x: ${activeEmojiInteraction.x}px; --start-y: ${activeEmojiInteraction.y}px;`}\n    >\n      <AnimatedSticker\n        key={`effect_${effectAnimationId}`}\n        size={EFFECT_SIZE}\n        tgsUrl={effectTgsUrl}\n        play\n        quality={IS_ANDROID ? 0.5 : undefined}\n        forceAlways\n        noLoop\n        onLoad={startPlaying}\n      />\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { activeEmojiInteraction }): StateProps => {\n    const animatedEffect = activeEmojiInteraction.animatedEffect !== undefined\n      && selectAnimatedEmojiEffect(global, activeEmojiInteraction.animatedEffect);\n    return {\n      effectAnimationId: animatedEffect ? animatedEffect.id : undefined,\n    };\n  },\n)(EmojiInteractionAnimation));\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo, useState,\n} from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport { SUPPORTED_TRANSLATION_LANGUAGES } from '../../config';\nimport {\n  selectLanguageCode,\n  selectRequestedChatTranslationLanguage,\n  selectRequestedMessageTranslationLanguage,\n  selectTabState,\n} from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport renderText from '../common/helpers/renderText';\n\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport InputText from '../ui/InputText';\nimport ListItem from '../ui/ListItem';\nimport Modal from '../ui/Modal';\n\nimport styles from './ChatLanguageModal.module.scss';\n\ntype LanguageItem = {\n  langCode: string;\n  translatedName: string;\n  originalName: string;\n};\n\nexport type OwnProps = {\n  isOpen?: boolean;\n};\n\ntype StateProps = {\n  chatId?: string;\n  messageId?: number;\n  activeTranslationLanguage?: string;\n  currentLanguageCode: string;\n};\n\nconst ChatLanguageModal: FC<OwnProps & StateProps> = ({\n  isOpen,\n  chatId,\n  messageId,\n  activeTranslationLanguage,\n  currentLanguageCode,\n}) => {\n  const {\n    requestMessageTranslation,\n    closeChatLanguageModal,\n    setSettingOption,\n    requestChatTranslation,\n  } = getActions();\n\n  const [search, setSearch] = useState('');\n  const lang = useOldLang();\n\n  const handleSelect = useLastCallback((langCode: string) => {\n    if (!chatId) return;\n\n    if (messageId) {\n      requestMessageTranslation({ chatId, id: messageId, toLanguageCode: langCode });\n    } else {\n      setSettingOption({ translationLanguage: langCode });\n      requestChatTranslation({ chatId, toLanguageCode: langCode });\n    }\n\n    closeChatLanguageModal();\n  });\n\n  const handleSearch = useLastCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    setSearch(e.target.value);\n  });\n\n  const translateLanguages = useMemo(() => SUPPORTED_TRANSLATION_LANGUAGES.map((langCode: string) => {\n    const translatedNames = new Intl.DisplayNames([currentLanguageCode], { type: 'language' });\n    const translatedName = translatedNames.of(langCode)!;\n\n    const originalNames = new Intl.DisplayNames([langCode], { type: 'language' });\n    const originalName = originalNames.of(langCode)!;\n\n    return {\n      langCode,\n      translatedName,\n      originalName,\n    } satisfies LanguageItem;\n  }), [currentLanguageCode]);\n\n  useEffect(() => {\n    if (!isOpen) setSearch('');\n  }, [isOpen]);\n\n  const filteredDisplayedLanguages = useMemo(() => {\n    if (!search.trim()) {\n      return translateLanguages;\n    }\n\n    return translateLanguages.filter(({ langCode, translatedName, originalName }) => (\n      translatedName.toLowerCase().includes(search.toLowerCase())\n      || originalName.toLowerCase().includes(search.toLowerCase())\n      || langCode.toLowerCase().includes(search.toLowerCase())\n    ));\n  }, [translateLanguages, search]);\n\n  return (\n    <Modal\n      className={styles.root}\n      isSlim\n      isOpen={isOpen}\n      hasCloseButton\n      title={lang('Language')}\n      onClose={closeChatLanguageModal}\n    >\n      <InputText\n        key=\"search\"\n        value={search}\n        onChange={handleSearch}\n        placeholder={lang('Search')}\n        teactExperimentControlled\n      />\n      <div className={buildClassName(styles.languages, 'custom-scroll')}>\n        {filteredDisplayedLanguages.map(({ langCode, originalName, translatedName }) => (\n          <ListItem\n            key={langCode}\n            className={buildClassName(styles.listItem, 'no-icon')}\n            secondaryIcon={activeTranslationLanguage === langCode ? 'check' : undefined}\n            disabled={activeTranslationLanguage === langCode}\n            multiline\n            narrow\n            // eslint-disable-next-line react/jsx-no-bind\n            onClick={() => handleSelect(langCode)}\n          >\n            <span className={buildClassName('title', styles.title)}>\n              {renderText(originalName, ['highlight'], { highlight: search })}\n            </span>\n            <span className={buildClassName('subtitle', styles.subtitle)}>\n              {renderText(translatedName, ['highlight'], { highlight: search })}\n            </span>\n          </ListItem>\n        ))}\n      </div>\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const { chatId, messageId } = selectTabState(global).chatLanguageModal || {};\n\n    const currentLanguageCode = selectLanguageCode(global);\n    const activeTranslationLanguage = chatId\n      ? messageId\n        ? selectRequestedMessageTranslationLanguage(global, chatId, messageId)\n        : selectRequestedChatTranslationLanguage(global, chatId)\n      : undefined;\n\n    return {\n      chatId,\n      messageId,\n      activeTranslationLanguage,\n      currentLanguageCode,\n    };\n  },\n)(ChatLanguageModal));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"aMjNU9gm\",\"list-item\":\"T3An6Hoz\",\"listItem\":\"T3An6Hoz\",\"title\":\"dQ9wwFu1\",\"subtitle\":\"m_J41YYl\",\"languages\":\"r3YNWDQr\"};","// extracted by mini-css-extract-plugin\nexport default {\"content\":\"WEJIbFQj\",\"closeButton\":\"_vwPuDEM\",\"icon\":\"BUiGM8qZ\",\"title\":\"Q3NhXpNI\",\"description\":\"frZbGQ0G\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo,\n  useMemo,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiCountryCode } from '../../../api/types';\nimport type { TabState } from '../../../global/types';\n\nimport { copyTextToClipboard } from '../../../util/clipboard';\nimport { formatDateAtTime } from '../../../util/dates/dateFormat';\nimport { formatCurrencyAsString } from '../../../util/formatCurrency';\nimport { formatPhoneNumberWithCode } from '../../../util/phoneNumber';\nimport { LOCAL_TGS_URLS } from '../../common/helpers/animatedAssets';\nimport formatUsername from '../../common/helpers/formatUsername';\nimport renderText from '../../common/helpers/renderText';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport AnimatedIconWithPreview from '../../common/AnimatedIconWithPreview';\nimport Icon from '../../common/icons/Icon';\nimport PickerSelectedItem from '../../common/pickers/PickerSelectedItem';\nimport Button from '../../ui/Button';\nimport Modal from '../../ui/Modal';\n\nimport styles from './CollectibleInfoModal.module.scss';\n\nexport type OwnProps = {\n  modal: TabState['collectibleInfoModal'];\n};\n\ntype StateProps = {\n  phoneCodeList: ApiCountryCode[];\n};\n\nconst TOP_ICON_SIZE = 60;\n\nconst CollectibleInfoModal: FC<OwnProps & StateProps> = ({\n  modal,\n  phoneCodeList,\n}) => {\n  const {\n    closeCollectibleInfoModal,\n    openChat,\n    openUrl,\n    showNotification,\n  } = getActions();\n  const lang = useOldLang();\n\n  const isUsername = modal?.type === 'username';\n\n  const handleClose = useLastCallback(() => {\n    closeCollectibleInfoModal();\n  });\n\n  const handleOpenChat = useLastCallback(() => {\n    openChat({ id: modal!.peerId });\n    handleClose();\n  });\n\n  const handleOpenUrl = useLastCallback(() => {\n    openUrl({\n      url: modal!.url,\n      shouldSkipModal: true,\n    });\n    handleClose();\n  });\n\n  const handleCopy = useLastCallback(() => {\n    const text = isUsername ? formatUsername(modal!.collectible)\n      : formatPhoneNumberWithCode(phoneCodeList, modal!.collectible);\n    copyTextToClipboard(text);\n    showNotification({\n      message: lang(isUsername ? 'UsernameCopied' : 'PhoneCopied'),\n    });\n    handleClose();\n  });\n\n  const title = useMemo(() => {\n    if (!modal) return undefined;\n    const key = isUsername ? 'FragmentUsernameTitle' : 'FragmentPhoneTitle';\n    const formattedCollectible = isUsername\n      ? formatUsername(modal.collectible)\n      : formatPhoneNumberWithCode(phoneCodeList, modal.collectible);\n    return lang(key, formattedCollectible);\n  }, [modal, isUsername, phoneCodeList, lang]);\n\n  const description = useMemo(() => {\n    if (!modal) return undefined;\n    const key = isUsername ? 'FragmentUsernameMessage' : 'FragmentPhoneMessage';\n    const date = formatDateAtTime(lang, modal.purchaseDate * 1000);\n    const currency = formatCurrencyAsString(modal.amount, modal.currency, lang.code);\n    const cryptoCurrency = formatCurrencyAsString(modal.cryptoAmount, modal.cryptoCurrency, lang.code);\n    const paid = `${cryptoCurrency} (${currency})`;\n    return lang(key, [date, paid]);\n  }, [modal, isUsername, lang]);\n\n  return (\n    <Modal\n      isOpen={Boolean(modal)}\n      isSlim\n      contentClassName={styles.content}\n      onClose={closeCollectibleInfoModal}\n    >\n      <Button\n        round\n        color=\"translucent\"\n        size=\"smaller\"\n        className={styles.closeButton}\n        ariaLabel={lang('Close')}\n        onClick={handleClose}\n      >\n        <Icon name=\"close\" />\n      </Button>\n      <div className={styles.icon}>\n        <AnimatedIconWithPreview\n          tgsUrl={isUsername ? LOCAL_TGS_URLS.Mention : LOCAL_TGS_URLS.Fragment}\n          size={TOP_ICON_SIZE}\n        />\n      </div>\n      <h3 className={styles.title}>\n        {title && renderText(title, ['simple_markdown'])}\n      </h3>\n      <PickerSelectedItem\n        fluid\n        className={styles.chip}\n        peerId={modal?.peerId}\n        forceShowSelf\n        clickArg={modal?.peerId}\n        onClick={handleOpenChat}\n      />\n      <p className={styles.description}>\n        {description && renderText(description, ['simple_markdown'])}\n      </p>\n      <div className=\"dialog-buttons dialog-buttons-centered\">\n        <Button className=\"confirm-dialog-button\" onClick={handleOpenUrl}>\n          {lang('FragmentUsernameOpen')}\n        </Button>\n        <Button isText className=\"confirm-dialog-button\" onClick={handleCopy}>\n          {lang(isUsername ? 'FragmentUsernameCopy' : 'FragmentPhoneCopy')}\n        </Button>\n      </div>\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const { countryList } = global;\n\n    return {\n      phoneCodeList: countryList.phoneCodes,\n    };\n  },\n)(CollectibleInfoModal));\n","import type {\n  ApiChat, ApiGlobalMessageSearchType, ApiMessage, ApiUser,\n} from '../../../../api/types';\nimport type { GlobalState, TabState } from '../../../../global/types';\nimport type { ISettings } from '../../../../types';\nimport type { SearchResultKey } from '../../../../util/keys/searchResultKey';\n\nimport { selectChat, selectTabState, selectTheme } from '../../../../global/selectors';\n\nexport type StateProps = {\n  theme: ISettings['theme'];\n  isLoading?: boolean;\n  chatsById: Record<string, ApiChat>;\n  usersById: Record<string, ApiUser>;\n  globalMessagesByChatId?: Record<string, { byId: Record<number, ApiMessage> }>;\n  foundIds?: SearchResultKey[];\n  searchChatId?: string;\n  activeDownloads: TabState['activeDownloads'];\n  isChatProtected?: boolean;\n  shouldWarnAboutSvg?: boolean;\n};\n\nexport function createMapStateToProps(type: ApiGlobalMessageSearchType) {\n  return (global: GlobalState, props: any) => {\n    const tabState = selectTabState(global);\n    const { byId: chatsById } = global.chats;\n    const { byId: usersById } = global.users;\n    const {\n      fetchingStatus, resultsByType, chatId,\n    } = tabState.globalSearch;\n\n    // One component is used for two different types of results.\n    // The differences between them are only in the isVoice property.\n    // The rest of the search results use their own personal components.\n    const currentType = type !== 'audio' ? type : (props?.isVoice ? 'voice' : 'audio');\n\n    const { byChatId: globalMessagesByChatId } = global.messages;\n    const foundIds = resultsByType?.[currentType]?.foundIds;\n\n    const activeDownloads = tabState.activeDownloads;\n\n    return {\n      theme: selectTheme(global),\n      isLoading: foundIds === undefined\n        || (fetchingStatus ? Boolean(fetchingStatus.chats || fetchingStatus.messages) : false),\n      chatsById,\n      usersById,\n      globalMessagesByChatId,\n      foundIds,\n      searchChatId: chatId,\n      activeDownloads,\n      isChatProtected: chatId ? selectChat(global, chatId)?.isProtected : undefined,\n      shouldWarnAboutSvg: global.settings.byKey.shouldWarnAboutSvg,\n    };\n  };\n}\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback, useMemo } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiMessage } from '../../../api/types';\nimport type { StateProps } from './helpers/createMapStateToProps';\nimport { AudioOrigin, LoadMoreDirection } from '../../../types';\n\nimport { SLIDE_TRANSITION_DURATION } from '../../../config';\nimport { getIsDownloading, getMessageDownloadableMedia } from '../../../global/helpers';\nimport { formatMonthAndYear, toYearMonth } from '../../../util/dates/dateFormat';\nimport { parseSearchResultKey } from '../../../util/keys/searchResultKey';\nimport { MEMO_EMPTY_ARRAY } from '../../../util/memo';\nimport { throttle } from '../../../util/schedulers';\nimport { createMapStateToProps } from './helpers/createMapStateToProps';\nimport { getSenderName } from './helpers/getSenderName';\n\nimport useOldLang from '../../../hooks/useOldLang';\nimport useAsyncRendering from '../../right/hooks/useAsyncRendering';\n\nimport Audio from '../../common/Audio';\nimport NothingFound from '../../common/NothingFound';\nimport InfiniteScroll from '../../ui/InfiniteScroll';\nimport Loading from '../../ui/Loading';\n\nexport type OwnProps = {\n  isVoice?: boolean;\n  searchQuery?: string;\n};\n\nconst runThrottled = throttle((cb) => cb(), 500, true);\n\nconst AudioResults: FC<OwnProps & StateProps> = ({\n  theme,\n  isVoice,\n  searchQuery,\n  isLoading,\n  chatsById,\n  usersById,\n  globalMessagesByChatId,\n  foundIds,\n  activeDownloads,\n}) => {\n  const {\n    searchMessagesGlobal,\n    focusMessage,\n    openAudioPlayer,\n  } = getActions();\n\n  const lang = useOldLang();\n  const currentType = isVoice ? 'voice' : 'audio';\n  const handleLoadMore = useCallback(({ direction }: { direction: LoadMoreDirection }) => {\n    if (direction === LoadMoreDirection.Backwards) {\n      runThrottled(() => {\n        searchMessagesGlobal({\n          type: currentType,\n        });\n      });\n    }\n    // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps -- `searchQuery` is required to prevent infinite message loading\n  }, [currentType, searchMessagesGlobal, searchQuery]);\n\n  const foundMessages = useMemo(() => {\n    if (!foundIds || !globalMessagesByChatId) {\n      return MEMO_EMPTY_ARRAY;\n    }\n\n    return foundIds.map((id) => {\n      const [chatId, messageId] = parseSearchResultKey(id);\n\n      return globalMessagesByChatId[chatId]?.byId[messageId];\n    }).filter(Boolean);\n  }, [globalMessagesByChatId, foundIds]);\n\n  const handleMessageFocus = useCallback((message: ApiMessage) => {\n    focusMessage({ chatId: message.chatId, messageId: message.id });\n  }, [focusMessage]);\n\n  const handlePlayAudio = useCallback((messageId: number, chatId: string) => {\n    openAudioPlayer({ chatId, messageId });\n  }, [openAudioPlayer]);\n\n  function renderList() {\n    return foundMessages.map((message, index) => {\n      const isFirst = index === 0;\n      const shouldDrawDateDivider = isFirst\n        || toYearMonth(message.date) !== toYearMonth(foundMessages[index - 1].date);\n\n      const media = getMessageDownloadableMedia(message)!;\n      return (\n        <>\n          {shouldDrawDateDivider && (\n            <p\n              className=\"section-heading\"\n              key={message.date}\n              dir={lang.isRtl ? 'rtl' : undefined}\n            >\n              {formatMonthAndYear(lang, new Date(message.date * 1000))}\n            </p>\n          )}\n          <div\n            className=\"ListItem small-icon\"\n            key={message.id}\n          >\n            <Audio\n              key={message.id}\n              theme={theme}\n              message={message}\n              origin={AudioOrigin.Search}\n              senderTitle={getSenderName(lang, message, chatsById, usersById)}\n              date={message.date}\n              className=\"scroll-item\"\n              onPlay={handlePlayAudio}\n              onDateClick={handleMessageFocus}\n              canDownload={!chatsById[message.chatId]?.isProtected && !message.isProtected}\n              isDownloading={getIsDownloading(activeDownloads, media)}\n            />\n          </div>\n        </>\n      );\n    });\n  }\n\n  const canRenderContents = useAsyncRendering([searchQuery], SLIDE_TRANSITION_DURATION) && !isLoading;\n\n  return (\n    <div className=\"LeftSearch--content\">\n      <InfiniteScroll\n        className=\"search-content documents-list custom-scroll\"\n        items={canRenderContents ? foundMessages : undefined}\n        onLoadMore={handleLoadMore}\n        noFastList\n      >\n        {!canRenderContents && <Loading />}\n        {canRenderContents && (!foundIds || foundIds.length === 0) && (\n          <NothingFound\n            text={lang('ChatList.Search.NoResults')}\n            description={lang('ChatList.Search.NoResultsDescription')}\n          />\n        )}\n        {canRenderContents && foundIds && foundIds.length > 0 && renderList()}\n      </InfiniteScroll>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  createMapStateToProps('audio'),\n)(AudioResults));\n","import { useCallback, useEffect, useRef } from '../lib/teact/teact';\n\nconst useSendWithEnter = (\n  onSelect: NoneToVoidFunction,\n) => {\n  // eslint-disable-next-line no-null/no-null\n  const buttonRef = useRef<HTMLDivElement>(null);\n\n  const handleKeyDown = useCallback((e: KeyboardEvent) => {\n    if (e.key !== 'Enter') return;\n    const isFocused = buttonRef.current === document.activeElement;\n\n    if (isFocused) {\n      onSelect();\n    }\n  }, [onSelect]);\n\n  useEffect(() => {\n    window.addEventListener('keydown', handleKeyDown, false);\n\n    return () => window.removeEventListener('keydown', handleKeyDown, false);\n  }, [handleKeyDown]);\n\n  return buttonRef;\n};\n\nexport default useSendWithEnter;\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../../lib/teact/teact';\nimport { withGlobal } from '../../../global';\n\nimport type { ApiChat, ApiUser } from '../../../api/types';\nimport { StoryViewerOrigin } from '../../../types';\n\nimport { isUserId, selectIsChatMuted } from '../../../global/helpers';\nimport {\n  selectChat, selectIsChatPinned, selectNotifyExceptions,\n  selectNotifySettings, selectUser,\n} from '../../../global/selectors';\n\nimport useChatContextActions from '../../../hooks/useChatContextActions';\nimport useFlag from '../../../hooks/useFlag';\nimport useSelectWithEnter from '../../../hooks/useSelectWithEnter';\n\nimport GroupChatInfo from '../../common/GroupChatInfo';\nimport PrivateChatInfo from '../../common/PrivateChatInfo';\nimport ListItem from '../../ui/ListItem';\nimport ChatFolderModal from '../ChatFolderModal.async';\nimport MuteChatModal from '../MuteChatModal.async';\n\ntype OwnProps = {\n  chatId: string;\n  withUsername?: boolean;\n  onClick: (id: string) => void;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  user?: ApiUser;\n  isPinned?: boolean;\n  isMuted?: boolean;\n  canChangeFolder?: boolean;\n};\n\nconst LeftSearchResultChat: FC<OwnProps & StateProps> = ({\n  chatId,\n  withUsername,\n  onClick,\n  chat,\n  user,\n  isPinned,\n  isMuted,\n  canChangeFolder,\n}) => {\n  const [isMuteModalOpen, openMuteModal, closeMuteModal] = useFlag();\n  const [isChatFolderModalOpen, openChatFolderModal, closeChatFolderModal] = useFlag();\n  const [shouldRenderChatFolderModal, markRenderChatFolderModal, unmarkRenderChatFolderModal] = useFlag();\n  const [shouldRenderMuteModal, markRenderMuteModal, unmarkRenderMuteModal] = useFlag();\n\n  const handleChatFolderChange = useCallback(() => {\n    markRenderChatFolderModal();\n    openChatFolderModal();\n  }, [markRenderChatFolderModal, openChatFolderModal]);\n\n  const handleMute = useCallback(() => {\n    markRenderMuteModal();\n    openMuteModal();\n  }, [markRenderMuteModal, openMuteModal]);\n\n  const contextActions = useChatContextActions({\n    chat,\n    user,\n    isPinned,\n    isMuted,\n    canChangeFolder,\n    handleMute,\n    handleChatFolderChange,\n  }, true);\n\n  const handleClick = useCallback(() => {\n    onClick(chatId);\n  }, [chatId, onClick]);\n\n  const buttonRef = useSelectWithEnter(handleClick);\n\n  return (\n    <ListItem\n      className=\"chat-item-clickable search-result\"\n      onClick={handleClick}\n      contextActions={contextActions}\n      buttonRef={buttonRef}\n    >\n      {isUserId(chatId) ? (\n        <PrivateChatInfo\n          userId={chatId}\n          withUsername={withUsername}\n          withStory\n          avatarSize=\"medium\"\n          storyViewerOrigin={StoryViewerOrigin.SearchResult}\n        />\n      ) : (\n        <GroupChatInfo\n          chatId={chatId}\n          withUsername={withUsername}\n          avatarSize=\"medium\"\n          withStory\n          storyViewerOrigin={StoryViewerOrigin.SearchResult}\n        />\n      )}\n      {shouldRenderMuteModal && (\n        <MuteChatModal\n          isOpen={isMuteModalOpen}\n          onClose={closeMuteModal}\n          onCloseAnimationEnd={unmarkRenderMuteModal}\n          chatId={chatId}\n        />\n      )}\n      {shouldRenderChatFolderModal && (\n        <ChatFolderModal\n          isOpen={isChatFolderModalOpen}\n          onClose={closeChatFolderModal}\n          onCloseAnimationEnd={unmarkRenderChatFolderModal}\n          chatId={chatId}\n        />\n      )}\n    </ListItem>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const chat = selectChat(global, chatId);\n    const user = selectUser(global, chatId);\n    const isPinned = selectIsChatPinned(global, chatId);\n    const isMuted = chat\n      ? selectIsChatMuted(chat, selectNotifySettings(global), selectNotifyExceptions(global))\n      : undefined;\n\n    return {\n      chat,\n      user,\n      isPinned,\n      isMuted,\n      canChangeFolder: Boolean(global.chatFolders.orderedIds?.length),\n    };\n  },\n)(LeftSearchResultChat));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useMemo, useRef,\n  useState,\n} from '../../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../../global';\n\nimport { LoadMoreDirection } from '../../../types';\n\nimport { SLIDE_TRANSITION_DURATION } from '../../../config';\nimport { filterUsersByName } from '../../../global/helpers';\nimport { selectTabState } from '../../../global/selectors';\nimport { throttle } from '../../../util/schedulers';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useAsyncRendering from '../../right/hooks/useAsyncRendering';\n\nimport NothingFound from '../../common/NothingFound';\nimport InfiniteScroll from '../../ui/InfiniteScroll';\nimport Link from '../../ui/Link';\nimport Loading from '../../ui/Loading';\nimport LeftSearchResultChat from './LeftSearchResultChat';\n\nexport type OwnProps = {\n  searchQuery?: string;\n};\n\ntype StateProps = {\n  isLoading?: boolean;\n  foundIds?: string[];\n  recentBotIds?: string[];\n};\n\nconst LESS_LIST_ITEMS_AMOUNT = 5;\nconst runThrottled = throttle((cb) => cb(), 500, true);\n\nconst BotAppResults: FC<OwnProps & StateProps> = ({\n  searchQuery,\n  isLoading,\n  foundIds,\n  recentBotIds,\n}) => {\n  const {\n    searchPopularBotApps,\n    openChatWithInfo,\n  } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n\n  const lang = useOldLang();\n\n  const [shouldShowMoreMine, setShouldShowMoreMine] = useState<boolean>(false);\n\n  const filteredFoundIds = useMemo(() => {\n    if (!foundIds) return [];\n    const recentSet = new Set(recentBotIds);\n    const withoutRecent = foundIds.filter((id) => !recentSet.has(id));\n\n    const usersById = getGlobal().users.byId;\n    return filterUsersByName(withoutRecent, usersById, searchQuery);\n  }, [foundIds, recentBotIds, searchQuery]);\n\n  const handleChatClick = useLastCallback((id: string) => {\n    openChatWithInfo({ id, shouldReplaceHistory: true });\n  });\n\n  const handleLoadMore = useCallback(({ direction }: { direction: LoadMoreDirection }) => {\n    if (direction === LoadMoreDirection.Backwards) {\n      runThrottled(() => {\n        searchPopularBotApps();\n      });\n    }\n  }, []);\n\n  const handleToggleShowMoreMine = useLastCallback(() => {\n    setShouldShowMoreMine((prev) => !prev);\n  });\n\n  const canRenderContents = useAsyncRendering([searchQuery], SLIDE_TRANSITION_DURATION) && !isLoading;\n\n  return (\n    <div ref={containerRef} className=\"LeftSearch--content\">\n      <InfiniteScroll\n        className=\"search-content custom-scroll\"\n        items={canRenderContents ? filteredFoundIds : undefined}\n        onLoadMore={handleLoadMore}\n        noFastList\n      >\n        {!canRenderContents && <Loading />}\n        {canRenderContents && !filteredFoundIds?.length && (\n          <NothingFound\n            text={lang('ChatList.Search.NoResults')}\n            description={lang('ChatList.Search.NoResultsDescription')}\n          />\n        )}\n        {canRenderContents && !searchQuery && Boolean(recentBotIds?.length) && (\n          <div className=\"search-section\">\n            <h3 className=\"section-heading\">\n              {recentBotIds.length > LESS_LIST_ITEMS_AMOUNT && (\n                <Link className=\"Link\" onClick={handleToggleShowMoreMine}>\n                  {lang(shouldShowMoreMine ? 'ChatList.Search.ShowLess' : 'ChatList.Search.ShowMore')}\n                </Link>\n              )}\n              {lang('SearchAppsMine')}\n            </h3>\n            {recentBotIds.map((id, index) => {\n              if (!shouldShowMoreMine && index >= LESS_LIST_ITEMS_AMOUNT) {\n                return undefined;\n              }\n\n              return (\n                <LeftSearchResultChat\n                  chatId={id}\n                  onClick={handleChatClick}\n                />\n              );\n            })}\n          </div>\n        )}\n        {canRenderContents && filteredFoundIds?.length && (\n          <div className=\"search-section\">\n            <h3 className=\"section-heading\">{lang('SearchAppsPopular')}</h3>\n            {filteredFoundIds.map((id) => {\n              return (\n                <LeftSearchResultChat\n                  chatId={id}\n                  onClick={handleChatClick}\n                />\n              );\n            })}\n          </div>\n        )}\n      </InfiniteScroll>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>((global) => {\n  const globalSearch = selectTabState(global).globalSearch;\n  const foundIds = globalSearch.popularBotApps?.peerIds;\n\n  return {\n    isLoading: !foundIds && globalSearch.fetchingStatus?.botApps,\n    foundIds,\n    recentBotIds: global.topBotApps.userIds,\n  };\n})(BotAppResults));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type {\n  ApiChat, ApiMessage, ApiMessageOutgoingStatus,\n  ApiUser,\n} from '../../../api/types';\nimport type { LangFn } from '../../../hooks/useOldLang';\n\nimport {\n  getMessageIsSpoiler,\n  getMessageMediaHash,\n  getMessageMediaThumbDataUri,\n  getMessageRoundVideo,\n  getMessageSticker,\n  getMessageVideo,\n  getPrivateChatUserId,\n} from '../../../global/helpers';\nimport { selectChat, selectUser } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { formatPastTimeShort } from '../../../util/dates/dateFormat';\nimport { renderMessageSummary } from '../../common/helpers/renderMessageText';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMedia from '../../../hooks/useMedia';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useSelectWithEnter from '../../../hooks/useSelectWithEnter';\n\nimport Avatar from '../../common/Avatar';\nimport FullNameTitle from '../../common/FullNameTitle';\nimport Link from '../../ui/Link';\nimport ListItem from '../../ui/ListItem';\n\nimport './ChatMessage.scss';\n\ntype OwnProps = {\n  searchQuery?: string;\n  message: ApiMessage;\n  chatId: string;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  privateChatUser?: ApiUser;\n  lastMessageOutgoingStatus?: ApiMessageOutgoingStatus;\n};\n\nconst ChatMessage: FC<OwnProps & StateProps> = ({\n  message,\n  searchQuery,\n  chatId,\n  chat,\n  privateChatUser,\n}) => {\n  const { focusMessage } = getActions();\n\n  const { isMobile } = useAppLayout();\n  const mediaThumbnail = !getMessageSticker(message) ? getMessageMediaThumbDataUri(message) : undefined;\n  const mediaBlobUrl = useMedia(getMessageMediaHash(message, 'micro'));\n  const isRoundVideo = Boolean(getMessageRoundVideo(message));\n\n  const handleClick = useLastCallback(() => {\n    focusMessage({ chatId, messageId: message.id, shouldReplaceHistory: true });\n  });\n\n  const lang = useOldLang();\n\n  const buttonRef = useSelectWithEnter(handleClick);\n\n  if (!chat) {\n    return undefined;\n  }\n\n  const peer = privateChatUser || chat;\n\n  return (\n    <ListItem\n      className=\"ChatMessage chat-item-clickable\"\n      ripple={!isMobile}\n      onClick={handleClick}\n      buttonRef={buttonRef}\n    >\n      <Avatar\n        peer={peer}\n        isSavedMessages={privateChatUser?.isSelf}\n      />\n      <div className=\"info\">\n        <div className=\"info-row\">\n          <FullNameTitle\n            peer={peer}\n            withEmojiStatus\n            isSavedMessages={chatId === privateChatUser?.id && privateChatUser?.isSelf}\n          />\n          <div className=\"message-date\">\n            <Link className=\"date\">\n              {formatPastTimeShort(lang, message.date * 1000)}\n            </Link>\n          </div>\n\n        </div>\n        <div className=\"subtitle\">\n          <div className=\"message\" dir=\"auto\">\n            {renderSummary(lang, message, mediaBlobUrl || mediaThumbnail, searchQuery, isRoundVideo)}\n          </div>\n        </div>\n      </div>\n    </ListItem>\n  );\n};\n\nfunction renderSummary(\n  lang: LangFn, message: ApiMessage, blobUrl?: string, searchQuery?: string, isRoundVideo?: boolean,\n) {\n  if (!blobUrl) {\n    return renderMessageSummary(lang, message, undefined, searchQuery);\n  }\n\n  const isSpoiler = getMessageIsSpoiler(message);\n\n  return (\n    <span className=\"media-preview\">\n      <img\n        src={blobUrl}\n        alt=\"\"\n        className={\n          buildClassName('media-preview--image', isRoundVideo && 'round', isSpoiler && 'media-preview-spoiler')\n        }\n        draggable={false}\n      />\n      {getMessageVideo(message) && <i className=\"icon icon-play\" />}\n      {renderMessageSummary(lang, message, true, searchQuery)}\n    </span>\n  );\n}\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const chat = selectChat(global, chatId);\n    if (!chat) {\n      return {};\n    }\n\n    const privateChatUserId = getPrivateChatUserId(chat);\n    const privateChatUser = privateChatUserId ? selectUser(global, privateChatUserId) : undefined;\n\n    return {\n      chat,\n      ...(privateChatUserId && { privateChatUser }),\n    };\n  },\n)(ChatMessage));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useMemo } from '../../../lib/teact/teact';\n\nimport { formatDateToString } from '../../../util/dates/dateFormat';\n\nimport './DateSuggest.scss';\n\nconst SUGGESTION_COUNT = 8;\n\nexport type OwnProps = {\n  searchDate: string;\n  onSelect: (value: Date) => void;\n};\n\nconst DateSuggest: FC<OwnProps> = ({\n  searchDate, onSelect,\n}) => {\n  const suggestions = useMemo(() => getSuggestionsFromDate(searchDate), [searchDate]);\n  return (\n    <section className=\"DateSuggest custom-scroll custom-scroll-x\">\n      {suggestions.map(({ date, text }) => {\n        return (\n          <div\n            onClick={() => onSelect(date)}\n            className=\"date-item\"\n            key={text}\n          >\n            <i className=\"icon icon-calendar\" />\n            <span>{text}</span>\n          </div>\n        );\n      })}\n    </section>\n  );\n};\n\nfunction getSuggestionsFromDate(searchDate: string) {\n  const hasYear = searchDate.match(/^\\d{2,4}-\\d{2}-\\d{2}$/g);\n  if (hasYear) {\n    const date = new Date(searchDate);\n    return [{ date, text: formatDateToString(date) }];\n  }\n\n  const suggestion = [];\n  const currentDate = new Date();\n  const currentYear = currentDate.getFullYear();\n  const latestYear = currentDate.getTime() > (new Date(`${currentYear}-${searchDate}`)).getTime()\n    ? currentYear\n    : currentYear - 1;\n\n  for (let i = 0; i < SUGGESTION_COUNT; i++) {\n    const date = new Date(`${latestYear - i}-${searchDate}`);\n    suggestion.push({ date, text: formatDateToString(date) });\n  }\n\n  return suggestion;\n}\n\nexport default memo(DateSuggest);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../../lib/teact/teact';\nimport { withGlobal } from '../../../global';\n\nimport type { ApiTopic } from '../../../api/types';\n\nimport { selectTopic } from '../../../global/selectors';\nimport { REM } from '../../common/helpers/mediaDimensions';\nimport renderText from '../../common/helpers/renderText';\n\nimport useSelectWithEnter from '../../../hooks/useSelectWithEnter';\n\nimport TopicIcon from '../../common/TopicIcon';\nimport ListItem from '../../ui/ListItem';\n\ntype OwnProps = {\n  chatId: string;\n  topicId: number;\n  onClick: (id: number) => void;\n};\n\ntype StateProps = {\n  topic?: ApiTopic;\n};\n\nconst TOPIC_ICON_SIZE = 2 * REM;\n\nconst LeftSearchResultTopic: FC<OwnProps & StateProps> = ({\n  topicId,\n  topic,\n  onClick,\n}) => {\n  const handleClick = useCallback(() => {\n    onClick(topicId);\n  }, [topicId, onClick]);\n\n  const buttonRef = useSelectWithEnter(handleClick);\n\n  if (!topic) {\n    return undefined;\n  }\n\n  return (\n    <ListItem\n      className=\"chat-item-clickable search-result\"\n      onClick={handleClick}\n      buttonClassName=\"topic-item\"\n      buttonRef={buttonRef}\n    >\n      <TopicIcon\n        size={TOPIC_ICON_SIZE}\n        topic={topic}\n        className=\"topic-icon\"\n        letterClassName=\"topic-icon-letter\"\n      />\n      <div dir=\"auto\" className=\"fullName\">{renderText(topic.title)}</div>\n    </ListItem>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId, topicId }): StateProps => {\n    const topic = selectTopic(global, chatId, topicId);\n\n    return {\n      topic,\n    };\n  },\n)(LeftSearchResultTopic));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback, useMemo } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiChat, ApiMessage } from '../../../api/types';\nimport { LoadMoreDirection } from '../../../types';\n\nimport { selectTabState } from '../../../global/selectors';\nimport { parseSearchResultKey, type SearchResultKey } from '../../../util/keys/searchResultKey';\nimport { MEMO_EMPTY_ARRAY } from '../../../util/memo';\nimport { throttle } from '../../../util/schedulers';\nimport { renderMessageSummary } from '../../common/helpers/renderMessageText';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport NothingFound from '../../common/NothingFound';\nimport InfiniteScroll from '../../ui/InfiniteScroll';\nimport ChatMessage from './ChatMessage';\nimport DateSuggest from './DateSuggest';\nimport LeftSearchResultTopic from './LeftSearchResultTopic';\n\nexport type OwnProps = {\n  searchQuery?: string;\n  dateSearchQuery?: string;\n  onReset: () => void;\n  onSearchDateSelect: (value: Date) => void;\n};\n\ntype StateProps = {\n  currentUserId?: string;\n  foundIds?: SearchResultKey[];\n  globalMessagesByChatId?: Record<string, { byId: Record<number, ApiMessage> }>;\n  chatsById: Record<string, ApiChat>;\n  fetchingStatus?: { chats?: boolean; messages?: boolean };\n  foundTopicIds?: number[];\n  searchChatId?: string;\n};\n\nconst runThrottled = throttle((cb) => cb(), 500, true);\n\nconst ChatMessageResults: FC<OwnProps & StateProps> = ({\n  searchQuery,\n  dateSearchQuery,\n  foundIds,\n  globalMessagesByChatId,\n  chatsById,\n  fetchingStatus,\n  foundTopicIds,\n  searchChatId,\n  onSearchDateSelect,\n  onReset,\n}) => {\n  const { searchMessagesGlobal, openThread } = getActions();\n\n  const lang = useOldLang();\n  const { isMobile } = useAppLayout();\n\n  const handleLoadMore = useCallback(({ direction }: { direction: LoadMoreDirection }) => {\n    if (direction === LoadMoreDirection.Backwards) {\n      runThrottled(() => {\n        searchMessagesGlobal({\n          type: 'text',\n        });\n      });\n    }\n  // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps -- `searchQuery` is required to prevent infinite message loading\n  }, [searchQuery]);\n\n  const handleTopicClick = useCallback(\n    (id: number) => {\n      if (!searchChatId) return;\n      openThread({ chatId: searchChatId, threadId: id, shouldReplaceHistory: true });\n\n      if (!isMobile) {\n        onReset();\n      }\n    },\n    [searchChatId, isMobile, onReset],\n  );\n\n  const foundMessages = useMemo(() => {\n    if (!foundIds || foundIds.length === 0) {\n      return MEMO_EMPTY_ARRAY;\n    }\n\n    return foundIds\n      .map((id) => {\n        const [chatId, messageId] = parseSearchResultKey(id);\n\n        return globalMessagesByChatId?.[chatId]?.byId[messageId];\n      })\n      .filter(Boolean)\n      .sort((a, b) => b.date - a.date);\n  }, [foundIds, globalMessagesByChatId]);\n\n  function renderFoundMessage(message: ApiMessage) {\n    const text = renderMessageSummary(lang, message);\n    const chat = chatsById[message.chatId];\n\n    if (!text || !chat) {\n      return undefined;\n    }\n\n    return (\n      <ChatMessage\n        chatId={message.chatId}\n        message={message}\n        searchQuery={searchQuery}\n      />\n    );\n  }\n\n  const nothingFound = fetchingStatus && !fetchingStatus.chats && !fetchingStatus.messages && !foundMessages.length\n    && !foundTopicIds?.length;\n\n  return (\n    <div className=\"LeftSearch--content\">\n      <InfiniteScroll\n        className=\"search-content custom-scroll chat-list\"\n        items={foundMessages}\n        onLoadMore={handleLoadMore}\n        noFastList\n      >\n        {dateSearchQuery && (\n          <div className=\"chat-selection no-scrollbar\">\n            <DateSuggest\n              searchDate={dateSearchQuery}\n              onSelect={onSearchDateSelect}\n            />\n          </div>\n        )}\n        {nothingFound && (\n          <NothingFound\n            text={lang('ChatList.Search.NoResults')}\n            description={lang('ChatList.Search.NoResultsDescription')}\n          />\n        )}\n        {Boolean(foundTopicIds?.length) && (\n          <div className=\"pb-2\">\n            <h3 className=\"section-heading topic-search-heading\" dir={lang.isRtl ? 'auto' : undefined}>\n              {lang('Topics')}\n            </h3>\n            {foundTopicIds!.map((id) => {\n              return (\n                <LeftSearchResultTopic\n                  chatId={searchChatId!}\n                  topicId={id}\n                  onClick={handleTopicClick}\n                />\n              );\n            })}\n          </div>\n        )}\n        {Boolean(foundMessages.length) && (\n          <div className=\"pb-2\">\n            <h3 className=\"section-heading topic-search-heading\" dir={lang.isRtl ? 'auto' : undefined}>\n              {lang('SearchMessages')}\n            </h3>\n            {foundMessages.map(renderFoundMessage)}\n          </div>\n        )}\n      </InfiniteScroll>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const { byId: chatsById } = global.chats;\n    const { currentUserId, messages: { byChatId: globalMessagesByChatId } } = global;\n    const {\n      fetchingStatus, resultsByType, foundTopicIds, chatId: searchChatId,\n    } = selectTabState(global).globalSearch;\n\n    const { foundIds } = (resultsByType?.text) || {};\n\n    return {\n      currentUserId,\n      foundIds,\n      globalMessagesByChatId,\n      chatsById,\n      fetchingStatus,\n      foundTopicIds,\n      searchChatId,\n    };\n  },\n)(ChatMessageResults));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo,\n  useCallback, useEffect, useRef,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiUser } from '../../../api/types';\n\nimport { getUserFirstOrLastName } from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\nimport { throttle } from '../../../util/schedulers';\nimport renderText from '../../common/helpers/renderText';\n\nimport useHorizontalScroll from '../../../hooks/useHorizontalScroll';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Avatar from '../../common/Avatar';\nimport Button from '../../ui/Button';\nimport LeftSearchResultChat from './LeftSearchResultChat';\n\nimport './RecentContacts.scss';\n\ntype OwnProps = {\n  onReset: () => void;\n};\n\ntype StateProps = {\n  topUserIds?: string[];\n  usersById: Record<string, ApiUser>;\n  recentlyFoundChatIds?: string[];\n};\n\nconst SEARCH_CLOSE_TIMEOUT_MS = 250;\nconst NBSP = '\\u00A0';\n\nconst runThrottled = throttle((cb) => cb(), 60000, true);\n\nconst RecentContacts: FC<OwnProps & StateProps> = ({\n  topUserIds,\n  usersById,\n  recentlyFoundChatIds,\n  onReset,\n}) => {\n  const {\n    loadTopUsers, openChat,\n    addRecentlyFoundChatId, clearRecentlyFoundChats,\n  } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const topUsersRef = useRef<HTMLDivElement>(null);\n\n  // Due to the parent Transition, this component never gets unmounted,\n  // that's why we use throttled API call on every update.\n  useEffect(() => {\n    runThrottled(() => {\n      loadTopUsers();\n    });\n  }, [loadTopUsers]);\n\n  useHorizontalScroll(topUsersRef, !topUserIds);\n\n  const handleClick = useCallback((id: string) => {\n    openChat({ id, shouldReplaceHistory: true });\n    onReset();\n    setTimeout(() => {\n      addRecentlyFoundChatId({ id });\n    }, SEARCH_CLOSE_TIMEOUT_MS);\n  }, [openChat, addRecentlyFoundChatId, onReset]);\n\n  const handleClearRecentlyFoundChats = useCallback(() => {\n    clearRecentlyFoundChats();\n  }, [clearRecentlyFoundChats]);\n\n  const lang = useOldLang();\n\n  return (\n    <div className=\"RecentContacts custom-scroll\">\n      {topUserIds && (\n        <div className=\"top-peers-section\" dir={lang.isRtl ? 'rtl' : undefined}>\n          <div ref={topUsersRef} className=\"top-peers\">\n            {topUserIds.map((userId) => (\n              <div\n                key={userId}\n                className=\"top-peer-item\"\n                onClick={() => handleClick(userId)}\n                dir={lang.isRtl ? 'rtl' : undefined}\n              >\n                <Avatar peer={usersById[userId]} />\n                <div className=\"top-peer-name\">{renderText(getUserFirstOrLastName(usersById[userId]) || NBSP)}</div>\n              </div>\n            ))}\n          </div>\n        </div>\n      )}\n      {recentlyFoundChatIds && (\n        <div className=\"search-section pt-1\">\n          <h3\n            className={buildClassName(\n              'section-heading mt-0 recent-chats-header',\n              !topUserIds && 'without-border',\n            )}\n            dir={lang.isRtl ? 'rtl' : undefined}\n          >\n            {lang('Recent')}\n\n            <Button\n              className=\"clear-recent-chats\"\n              round\n              size=\"smaller\"\n              color=\"translucent\"\n              ariaLabel={lang('Clear')}\n              onClick={handleClearRecentlyFoundChats}\n              isRtl={lang.isRtl}\n            >\n              <i className=\"icon icon-close\" />\n            </Button>\n          </h3>\n          {recentlyFoundChatIds.map((id) => (\n            <LeftSearchResultChat\n              chatId={id}\n              onClick={handleClick}\n            />\n          ))}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const { userIds: topUserIds } = global.topPeers;\n    const usersById = global.users.byId;\n    const { recentlyFoundChatIds } = global;\n\n    return {\n      topUserIds,\n      usersById,\n      recentlyFoundChatIds,\n    };\n  },\n)(RecentContacts));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useMemo, useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../../global';\n\nimport type { ApiMessage } from '../../../api/types';\nimport { LoadMoreDirection } from '../../../types';\n\nimport { ALL_FOLDER_ID, GLOBAL_SUGGESTED_CHANNELS_ID } from '../../../config';\nimport {\n  filterChatsByName,\n  filterUsersByName,\n  isChatChannel,\n} from '../../../global/helpers';\nimport { selectSimilarChannelIds, selectTabState } from '../../../global/selectors';\nimport { getOrderedIds } from '../../../util/folderManager';\nimport { unique } from '../../../util/iteratees';\nimport { parseSearchResultKey, type SearchResultKey } from '../../../util/keys/searchResultKey';\nimport { MEMO_EMPTY_ARRAY } from '../../../util/memo';\nimport { throttle } from '../../../util/schedulers';\nimport { renderMessageSummary } from '../../common/helpers/renderMessageText';\nimport sortChatIds from '../../common/helpers/sortChatIds';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useEffectOnce from '../../../hooks/useEffectOnce';\nimport useHorizontalScroll from '../../../hooks/useHorizontalScroll';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport NothingFound from '../../common/NothingFound';\nimport PickerSelectedItem from '../../common/pickers/PickerSelectedItem';\nimport InfiniteScroll from '../../ui/InfiniteScroll';\nimport Link from '../../ui/Link';\nimport ChatMessage from './ChatMessage';\nimport DateSuggest from './DateSuggest';\nimport LeftSearchResultChat from './LeftSearchResultChat';\nimport RecentContacts from './RecentContacts';\n\nexport type OwnProps = {\n  searchQuery?: string;\n  dateSearchQuery?: string;\n  searchDate?: number;\n  isChannelList?: boolean;\n  onReset: () => void;\n  onSearchDateSelect: (value: Date) => void;\n};\n\ntype StateProps = {\n  currentUserId?: string;\n  contactIds?: string[];\n  accountPeerIds?: string[];\n  globalPeerIds?: string[];\n  foundIds?: SearchResultKey[];\n  globalMessagesByChatId?: Record<string, { byId: Record<number, ApiMessage> }>;\n  fetchingStatus?: { chats?: boolean; messages?: boolean };\n  suggestedChannelIds?: string[];\n};\n\nconst MIN_QUERY_LENGTH_FOR_GLOBAL_SEARCH = 4;\nconst LESS_LIST_ITEMS_AMOUNT = 5;\n\nconst runThrottled = throttle((cb) => cb(), 500, false);\n\nconst ChatResults: FC<OwnProps & StateProps> = ({\n  isChannelList,\n  searchQuery,\n  searchDate,\n  dateSearchQuery,\n  currentUserId,\n  contactIds,\n  accountPeerIds,\n  globalPeerIds,\n  foundIds,\n  globalMessagesByChatId,\n  fetchingStatus,\n  suggestedChannelIds,\n  onReset,\n  onSearchDateSelect,\n}) => {\n  const {\n    openChat, addRecentlyFoundChatId, searchMessagesGlobal, setGlobalSearchChatId, loadChannelRecommendations,\n  } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const chatSelectionRef = useRef<HTMLDivElement>(null);\n\n  const lang = useOldLang();\n\n  const { isMobile } = useAppLayout();\n  const [shouldShowMoreLocal, setShouldShowMoreLocal] = useState<boolean>(false);\n  const [shouldShowMoreGlobal, setShouldShowMoreGlobal] = useState<boolean>(false);\n\n  useEffectOnce(() => {\n    if (isChannelList) loadChannelRecommendations({});\n  });\n\n  const handleLoadMore = useCallback(({ direction }: { direction: LoadMoreDirection }) => {\n    if (direction === LoadMoreDirection.Backwards) {\n      runThrottled(() => {\n        searchMessagesGlobal({\n          type: isChannelList ? 'channels' : 'text',\n        });\n      });\n    }\n  // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps -- `searchQuery` is required to prevent infinite message loading\n  }, [searchQuery]);\n\n  const handleChatClick = useCallback(\n    (id: string) => {\n      openChat({ id, shouldReplaceHistory: true });\n\n      if (id !== currentUserId) {\n        addRecentlyFoundChatId({ id });\n      }\n\n      if (!isMobile) {\n        onReset();\n      }\n    },\n    [openChat, currentUserId, isMobile, addRecentlyFoundChatId, onReset],\n  );\n\n  const handlePickerItemClick = useCallback((id: string) => {\n    setGlobalSearchChatId({ id });\n  }, [setGlobalSearchChatId]);\n\n  const localResults = useMemo(() => {\n    if (!isChannelList && (!searchQuery || (searchQuery.startsWith('@') && searchQuery.length < 2))) {\n      return MEMO_EMPTY_ARRAY;\n    }\n\n    // No need for expensive global updates, so we avoid them\n    const usersById = getGlobal().users.byId;\n    const chatsById = getGlobal().chats.byId;\n\n    const orderedChatIds = getOrderedIds(ALL_FOLDER_ID) ?? [];\n    const filteredChatIds = orderedChatIds.filter((id) => {\n      if (!isChannelList) return true;\n      const chat = chatsById[id];\n      return chat && isChatChannel(chat);\n    });\n    const localChatIds = filterChatsByName(lang, filteredChatIds, chatsById, searchQuery, currentUserId);\n\n    if (isChannelList) return localChatIds;\n\n    const contactIdsWithMe = [\n      ...(currentUserId ? [currentUserId] : []),\n      ...(contactIds || []),\n    ];\n\n    const localContactIds = filterUsersByName(\n      contactIdsWithMe, usersById, searchQuery, currentUserId, lang('SavedMessages'),\n    );\n\n    const localPeerIds = [\n      ...localContactIds,\n      ...localChatIds,\n    ];\n\n    return unique([\n      ...sortChatIds(localPeerIds, undefined, currentUserId ? [currentUserId] : undefined),\n      ...sortChatIds(accountPeerIds || []),\n    ]);\n  }, [searchQuery, lang, currentUserId, contactIds, accountPeerIds, isChannelList]);\n\n  useHorizontalScroll(chatSelectionRef, !localResults.length || isChannelList, true);\n\n  const globalResults = useMemo(() => {\n    if (!searchQuery || searchQuery.length < MIN_QUERY_LENGTH_FOR_GLOBAL_SEARCH || !globalPeerIds) {\n      return MEMO_EMPTY_ARRAY;\n    }\n\n    // No need for expensive global updates, so we avoid them\n    const chatsById = getGlobal().chats.byId;\n\n    const filteredIds = globalPeerIds.filter((id) => {\n      if (!isChannelList) return true;\n      const chat = chatsById[id];\n      return chat && isChatChannel(chat);\n    });\n\n    return sortChatIds(filteredIds, true);\n  }, [globalPeerIds, isChannelList, searchQuery]);\n\n  const foundMessages = useMemo(() => {\n    if ((!searchQuery && !searchDate) || !foundIds || foundIds.length === 0) {\n      return MEMO_EMPTY_ARRAY;\n    }\n\n    // No need for expensive global updates, so we avoid them\n    const chatsById = getGlobal().chats.byId;\n\n    return foundIds\n      .map((id) => {\n        const [chatId, messageId] = parseSearchResultKey(id);\n        const chat = chatsById[chatId];\n        if (!chat) return undefined;\n        if (isChannelList && !isChatChannel(chat)) return undefined;\n\n        return globalMessagesByChatId?.[chatId]?.byId[messageId];\n      })\n      .filter(Boolean);\n  }, [searchQuery, searchDate, foundIds, isChannelList, globalMessagesByChatId]);\n\n  const handleClickShowMoreLocal = useCallback(() => {\n    setShouldShowMoreLocal(!shouldShowMoreLocal);\n  }, [shouldShowMoreLocal]);\n\n  const handleClickShowMoreGlobal = useCallback(() => {\n    setShouldShowMoreGlobal(!shouldShowMoreGlobal);\n  }, [shouldShowMoreGlobal]);\n\n  function renderFoundMessage(message: ApiMessage) {\n    const chatsById = getGlobal().chats.byId;\n\n    const text = renderMessageSummary(lang, message);\n    const chat = chatsById[message.chatId];\n\n    if (!text || !chat) {\n      return undefined;\n    }\n\n    return (\n      <ChatMessage\n        chatId={message.chatId}\n        message={message}\n        searchQuery={searchQuery}\n      />\n    );\n  }\n\n  const nothingFound = fetchingStatus && !fetchingStatus.chats && !fetchingStatus.messages\n    && !localResults.length && !globalResults.length && !foundMessages.length;\n\n  if (!searchQuery && !searchDate && !isChannelList) {\n    return <RecentContacts onReset={onReset} />;\n  }\n\n  return (\n    <InfiniteScroll\n      className=\"LeftSearch--content custom-scroll\"\n      items={foundMessages}\n      onLoadMore={handleLoadMore}\n      // To prevent scroll jumps caused by delayed local results rendering\n      noScrollRestoreOnTop\n      noFastList\n    >\n      {dateSearchQuery && (\n        <div className=\"chat-selection no-scrollbar\">\n          <DateSuggest\n            searchDate={dateSearchQuery}\n            onSelect={onSearchDateSelect}\n          />\n        </div>\n      )}\n      {nothingFound && (\n        <NothingFound\n          text={lang('ChatList.Search.NoResults')}\n          description={lang('ChatList.Search.NoResultsDescription')}\n        />\n      )}\n      {Boolean(localResults.length) && !isChannelList && (\n        <div\n          className=\"chat-selection no-scrollbar\"\n          dir={lang.isRtl ? 'rtl' : undefined}\n          ref={chatSelectionRef}\n        >\n          {localResults.map((id) => (\n            <PickerSelectedItem\n              peerId={id}\n              onClick={handlePickerItemClick}\n              clickArg={id}\n            />\n          ))}\n        </div>\n      )}\n      {Boolean(localResults.length) && (\n        <div className=\"search-section\">\n          <h3 className=\"section-heading\" dir={lang.isRtl ? 'auto' : undefined}>\n            {localResults.length > LESS_LIST_ITEMS_AMOUNT && (\n              <Link className=\"Link\" onClick={handleClickShowMoreLocal}>\n                {lang(shouldShowMoreLocal ? 'ChatList.Search.ShowLess' : 'ChatList.Search.ShowMore')}\n              </Link>\n            )}\n            {lang(isChannelList ? 'SearchMyChannels' : 'DialogList.SearchSectionDialogs')}\n          </h3>\n          {localResults.map((id, index) => {\n            if (!shouldShowMoreLocal && index >= LESS_LIST_ITEMS_AMOUNT) {\n              return undefined;\n            }\n\n            return (\n              <LeftSearchResultChat\n                chatId={id}\n                onClick={handleChatClick}\n              />\n            );\n          })}\n        </div>\n      )}\n      {Boolean(globalResults.length) && (\n        <div className=\"search-section\">\n          <h3 className=\"section-heading\" dir={lang.isRtl ? 'auto' : undefined}>\n            {globalResults.length > LESS_LIST_ITEMS_AMOUNT && (\n              <Link className=\"Link\" onClick={handleClickShowMoreGlobal}>\n                {lang(shouldShowMoreGlobal ? 'ChatList.Search.ShowLess' : 'ChatList.Search.ShowMore')}\n              </Link>\n            )}\n            {lang('DialogList.SearchSectionGlobal')}\n          </h3>\n          {globalResults.map((id, index) => {\n            if (!shouldShowMoreGlobal && index >= LESS_LIST_ITEMS_AMOUNT) {\n              return undefined;\n            }\n\n            return (\n              <LeftSearchResultChat\n                chatId={id}\n                withUsername\n                onClick={handleChatClick}\n              />\n            );\n          })}\n        </div>\n      )}\n      {Boolean(suggestedChannelIds?.length) && !searchQuery && (\n        <div className=\"search-section\">\n          <h3 className=\"section-heading\" dir={lang.isRtl ? 'auto' : undefined}>\n            {lang('SearchRecommendedChannels')}\n          </h3>\n          {suggestedChannelIds.map((id) => {\n            return (\n              <LeftSearchResultChat\n                chatId={id}\n                withUsername\n                onClick={handleChatClick}\n              />\n            );\n          })}\n        </div>\n      )}\n      {Boolean(foundMessages.length) && (\n        <div className=\"search-section\">\n          <h3 className=\"section-heading\" dir={lang.isRtl ? 'auto' : undefined}>{lang('SearchMessages')}</h3>\n          {foundMessages.map(renderFoundMessage)}\n        </div>\n      )}\n    </InfiniteScroll>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { isChannelList }): StateProps => {\n    const { userIds: contactIds } = global.contactList || {};\n    const {\n      currentUserId, messages,\n    } = global;\n\n    if (!contactIds) {\n      return {};\n    }\n\n    const {\n      fetchingStatus, globalResults, localResults, resultsByType,\n    } = selectTabState(global).globalSearch;\n    const { peerIds: globalPeerIds } = globalResults || {};\n    const { peerIds: accountPeerIds } = localResults || {};\n    const { byChatId: globalMessagesByChatId } = messages;\n    const foundIds = resultsByType?.[isChannelList ? 'channels' : 'text']?.foundIds;\n    const { similarChannelIds } = selectSimilarChannelIds(global, GLOBAL_SUGGESTED_CHANNELS_ID) || {};\n\n    return {\n      currentUserId,\n      contactIds,\n      accountPeerIds,\n      globalPeerIds,\n      foundIds,\n      globalMessagesByChatId,\n      fetchingStatus,\n      suggestedChannelIds: similarChannelIds,\n    };\n  },\n)(ChatResults));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useMemo, useRef,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiMessage } from '../../../api/types';\nimport type { StateProps } from './helpers/createMapStateToProps';\nimport { LoadMoreDirection } from '../../../types';\n\nimport { SLIDE_TRANSITION_DURATION } from '../../../config';\nimport { getIsDownloading, getMessageDocument } from '../../../global/helpers';\nimport { formatMonthAndYear, toYearMonth } from '../../../util/dates/dateFormat';\nimport { parseSearchResultKey } from '../../../util/keys/searchResultKey';\nimport { MEMO_EMPTY_ARRAY } from '../../../util/memo';\nimport { throttle } from '../../../util/schedulers';\nimport { createMapStateToProps } from './helpers/createMapStateToProps';\nimport { getSenderName } from './helpers/getSenderName';\n\nimport { useIntersectionObserver } from '../../../hooks/useIntersectionObserver';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useAsyncRendering from '../../right/hooks/useAsyncRendering';\n\nimport Document from '../../common/Document';\nimport NothingFound from '../../common/NothingFound';\nimport InfiniteScroll from '../../ui/InfiniteScroll';\nimport Loading from '../../ui/Loading';\n\nexport type OwnProps = {\n  searchQuery?: string;\n};\n\nconst CURRENT_TYPE = 'documents';\nconst INTERSECTION_THROTTLE = 500;\n\nconst runThrottled = throttle((cb) => cb(), 500, true);\n\nconst FileResults: FC<OwnProps & StateProps> = ({\n  searchQuery,\n  isLoading,\n  chatsById,\n  usersById,\n  globalMessagesByChatId,\n  foundIds,\n  activeDownloads,\n  shouldWarnAboutSvg,\n}) => {\n  const {\n    searchMessagesGlobal,\n    focusMessage,\n  } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n\n  const lang = useOldLang();\n\n  const { observe: observeIntersectionForMedia } = useIntersectionObserver({\n    rootRef: containerRef,\n    throttleMs: INTERSECTION_THROTTLE,\n  });\n\n  const handleLoadMore = useCallback(({ direction }: { direction: LoadMoreDirection }) => {\n    if (direction === LoadMoreDirection.Backwards) {\n      runThrottled(() => {\n        searchMessagesGlobal({\n          type: CURRENT_TYPE,\n        });\n      });\n    }\n    // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps -- `searchQuery` is required to prevent infinite message loading\n  }, [searchQuery]);\n\n  const foundMessages = useMemo(() => {\n    if (!foundIds || !globalMessagesByChatId) {\n      return MEMO_EMPTY_ARRAY;\n    }\n\n    return foundIds.map((id) => {\n      const [chatId, messageId] = parseSearchResultKey(id);\n      const message = globalMessagesByChatId[chatId]?.byId[messageId];\n\n      return message && getMessageDocument(message) ? message : undefined;\n    }).filter(Boolean) as ApiMessage[];\n  }, [globalMessagesByChatId, foundIds]);\n\n  const handleMessageFocus = useCallback((message: ApiMessage) => {\n    focusMessage({ chatId: message.chatId, messageId: message.id });\n  }, [focusMessage]);\n\n  function renderList() {\n    return foundMessages.map((message, index) => {\n      const isFirst = index === 0;\n      const shouldDrawDateDivider = isFirst\n        || toYearMonth(message.date) !== toYearMonth(foundMessages[index - 1].date);\n      return (\n        <>\n          {shouldDrawDateDivider && (\n            <p\n              className=\"section-heading\"\n              dir={lang.isRtl ? 'rtl' : undefined}\n              key={message.date}\n            >\n              {formatMonthAndYear(lang, new Date(message.date * 1000))}\n            </p>\n          )}\n          <div\n            className=\"ListItem small-icon\"\n            key={message.id}\n          >\n            <Document\n              document={getMessageDocument(message)!}\n              message={message}\n              withDate\n              datetime={message.date}\n              smaller\n              sender={getSenderName(lang, message, chatsById, usersById)}\n              className=\"scroll-item\"\n              isDownloading={getIsDownloading(activeDownloads, message.content.document!)}\n              shouldWarnAboutSvg={shouldWarnAboutSvg}\n              observeIntersection={observeIntersectionForMedia}\n              onDateClick={handleMessageFocus}\n            />\n          </div>\n        </>\n      );\n    });\n  }\n\n  const canRenderContents = useAsyncRendering([searchQuery], SLIDE_TRANSITION_DURATION) && !isLoading;\n\n  return (\n    <div ref={containerRef} className=\"LeftSearch--content\">\n      <InfiniteScroll\n        className=\"search-content documents-list custom-scroll\"\n        items={canRenderContents ? foundMessages : undefined}\n        onLoadMore={handleLoadMore}\n        noFastList\n      >\n        {!canRenderContents && <Loading />}\n        {canRenderContents && (!foundIds || foundIds.length === 0) && (\n          <NothingFound\n            text={lang('ChatList.Search.NoResults')}\n            description={lang('ChatList.Search.NoResultsDescription')}\n          />\n        )}\n        {canRenderContents && foundIds && foundIds.length > 0 && renderList()}\n      </InfiniteScroll>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  createMapStateToProps(CURRENT_TYPE),\n)(FileResults));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useMemo, useRef,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiMessage } from '../../../api/types';\nimport type { StateProps } from './helpers/createMapStateToProps';\nimport { LoadMoreDirection } from '../../../types';\n\nimport { SLIDE_TRANSITION_DURATION } from '../../../config';\nimport { formatMonthAndYear, toYearMonth } from '../../../util/dates/dateFormat';\nimport { parseSearchResultKey } from '../../../util/keys/searchResultKey';\nimport { MEMO_EMPTY_ARRAY } from '../../../util/memo';\nimport { throttle } from '../../../util/schedulers';\nimport { createMapStateToProps } from './helpers/createMapStateToProps';\nimport { getSenderName } from './helpers/getSenderName';\n\nimport { useIntersectionObserver } from '../../../hooks/useIntersectionObserver';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useAsyncRendering from '../../right/hooks/useAsyncRendering';\n\nimport NothingFound from '../../common/NothingFound';\nimport WebLink from '../../common/WebLink';\nimport InfiniteScroll from '../../ui/InfiniteScroll';\nimport Loading from '../../ui/Loading';\n\nexport type OwnProps = {\n  searchQuery?: string;\n};\n\nconst CURRENT_TYPE = 'links';\nconst INTERSECTION_THROTTLE = 500;\n\nconst runThrottled = throttle((cb) => cb(), 500, true);\n\nconst LinkResults: FC<OwnProps & StateProps> = ({\n  searchQuery,\n  isLoading,\n  chatsById,\n  usersById,\n  globalMessagesByChatId,\n  foundIds,\n  isChatProtected,\n}) => {\n  const {\n    searchMessagesGlobal,\n    focusMessage,\n  } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n\n  const lang = useOldLang();\n\n  const { observe: observeIntersectionForMedia } = useIntersectionObserver({\n    rootRef: containerRef,\n    throttleMs: INTERSECTION_THROTTLE,\n  });\n\n  const handleLoadMore = useCallback(({ direction }: { direction: LoadMoreDirection }) => {\n    if (direction === LoadMoreDirection.Backwards) {\n      runThrottled(() => {\n        searchMessagesGlobal({\n          type: CURRENT_TYPE,\n        });\n      });\n    }\n  // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps -- `searchQuery` is required to prevent infinite message loading\n  }, [searchQuery]);\n\n  const foundMessages = useMemo(() => {\n    if (!foundIds || !globalMessagesByChatId) {\n      return MEMO_EMPTY_ARRAY;\n    }\n\n    return foundIds.map((id) => {\n      const [chatId, messageId] = parseSearchResultKey(id);\n\n      return globalMessagesByChatId[chatId]?.byId[messageId];\n    }).filter(Boolean);\n  }, [globalMessagesByChatId, foundIds]);\n\n  const handleMessageFocus = useCallback((message: ApiMessage) => {\n    focusMessage({ chatId: message.chatId, messageId: message.id });\n  }, [focusMessage]);\n\n  function renderList() {\n    return foundMessages.map((message, index) => {\n      const isFirst = index === 0;\n      const shouldDrawDateDivider = isFirst\n        || toYearMonth(message.date) !== toYearMonth(foundMessages[index - 1].date);\n      return (\n        <>\n          {shouldDrawDateDivider && (\n            <p\n              className=\"section-heading\"\n              key={message.date}\n              dir={lang.isRtl ? 'rtl' : undefined}\n            >\n              {formatMonthAndYear(lang, new Date(message.date * 1000))}\n            </p>\n          )}\n          <div\n            className=\"ListItem small-icon\"\n            dir={lang.isRtl ? 'rtl' : undefined}\n            key={message.id}\n          >\n            <WebLink\n              key={message.id}\n              message={message}\n              senderTitle={getSenderName(lang, message, chatsById, usersById)}\n              isProtected={isChatProtected || message.isProtected}\n              observeIntersection={observeIntersectionForMedia}\n              onMessageClick={handleMessageFocus}\n            />\n          </div>\n        </>\n      );\n    });\n  }\n\n  const canRenderContents = useAsyncRendering([searchQuery], SLIDE_TRANSITION_DURATION) && !isLoading;\n\n  return (\n    <div ref={containerRef} className=\"LeftSearch--content\">\n      <InfiniteScroll\n        className=\"search-content documents-list custom-scroll\"\n        items={canRenderContents ? foundMessages : undefined}\n        onLoadMore={handleLoadMore}\n        noFastList\n      >\n        {!canRenderContents && <Loading />}\n        {canRenderContents && (!foundIds || foundIds.length === 0) && (\n          <NothingFound\n            text={lang('ChatList.Search.NoResults')}\n            description={lang('ChatList.Search.NoResultsDescription')}\n          />\n        )}\n        {canRenderContents && foundIds && foundIds.length > 0 && renderList()}\n      </InfiniteScroll>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  createMapStateToProps(CURRENT_TYPE),\n)(LinkResults));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useMemo, useRef,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { StateProps } from './helpers/createMapStateToProps';\nimport { LoadMoreDirection, MediaViewerOrigin } from '../../../types';\n\nimport { SLIDE_TRANSITION_DURATION } from '../../../config';\nimport buildClassName from '../../../util/buildClassName';\nimport { parseSearchResultKey } from '../../../util/keys/searchResultKey';\nimport { MEMO_EMPTY_ARRAY } from '../../../util/memo';\nimport { throttle } from '../../../util/schedulers';\nimport { createMapStateToProps } from './helpers/createMapStateToProps';\n\nimport { useIntersectionObserver } from '../../../hooks/useIntersectionObserver';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useAsyncRendering from '../../right/hooks/useAsyncRendering';\n\nimport Media from '../../common/Media';\nimport NothingFound from '../../common/NothingFound';\nimport InfiniteScroll from '../../ui/InfiniteScroll';\nimport Loading from '../../ui/Loading';\nimport ChatMessage from './ChatMessage';\n\nexport type OwnProps = {\n  searchQuery?: string;\n};\n\nconst CURRENT_TYPE = 'media';\nconst INTERSECTION_THROTTLE = 500;\n\nconst runThrottled = throttle((cb) => cb(), 500, true);\n\nconst MediaResults: FC<OwnProps & StateProps> = ({\n  searchQuery,\n  isLoading,\n  globalMessagesByChatId,\n  foundIds,\n  isChatProtected,\n}) => {\n  const {\n    searchMessagesGlobal,\n    openMediaViewer,\n  } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n\n  const lang = useOldLang();\n\n  const { observe: observeIntersectionForMedia } = useIntersectionObserver({\n    rootRef: containerRef,\n    throttleMs: INTERSECTION_THROTTLE,\n  });\n\n  const handleLoadMore = useCallback(({ direction }: { direction: LoadMoreDirection }) => {\n    if (direction === LoadMoreDirection.Backwards) {\n      runThrottled(() => {\n        searchMessagesGlobal({\n          type: CURRENT_TYPE,\n        });\n      });\n    }\n  // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps -- `searchQuery` is required to prevent infinite message loading\n  }, [searchMessagesGlobal, searchQuery]);\n\n  const foundMessages = useMemo(() => {\n    if (!foundIds || !globalMessagesByChatId) {\n      return MEMO_EMPTY_ARRAY;\n    }\n\n    return foundIds.map((id) => {\n      const [chatId, messageId] = parseSearchResultKey(id);\n\n      return globalMessagesByChatId[chatId]?.byId[messageId];\n    }).filter(Boolean);\n  }, [globalMessagesByChatId, foundIds]);\n\n  const handleSelectMedia = useCallback((id: number, chatId: string) => {\n    openMediaViewer({\n      chatId,\n      messageId: id,\n      origin: MediaViewerOrigin.SearchResult,\n    });\n  }, [openMediaViewer]);\n\n  function renderGallery() {\n    return (\n      <div className=\"media-list\" dir={lang.isRtl ? 'rtl' : undefined}>\n        {foundMessages.map((message) => (\n          <Media\n            key={`${message.chatId}-${message.id}`}\n            idPrefix=\"search-media\"\n            message={message}\n            isProtected={isChatProtected || message.isProtected}\n            observeIntersection={observeIntersectionForMedia}\n            onClick={handleSelectMedia}\n          />\n        ))}\n      </div>\n    );\n  }\n\n  function renderSearchResult() {\n    return foundMessages.map((message) => (\n      <ChatMessage\n        key={message.id}\n        chatId={message.chatId}\n        message={message}\n      />\n    ));\n  }\n\n  const canRenderContents = useAsyncRendering([searchQuery], SLIDE_TRANSITION_DURATION) && !isLoading;\n  const isMediaGrid = canRenderContents && foundIds && foundIds.length > 0 && !searchQuery;\n  const isMessageList = canRenderContents && foundIds && foundIds.length > 0 && searchQuery;\n\n  const classNames = buildClassName(\n    'search-content custom-scroll',\n    isMessageList && 'chat-list',\n  );\n\n  return (\n    <div ref={containerRef} className=\"LeftSearch--content LeftSearch--media\">\n      <InfiniteScroll\n        className={classNames}\n        items={canRenderContents ? foundMessages : undefined}\n        itemSelector={!searchQuery ? '.Media' : '.ListItem'}\n        onLoadMore={handleLoadMore}\n        noFastList\n      >\n        {!canRenderContents && <Loading />}\n        {canRenderContents && (!foundIds || foundIds.length === 0) && (\n          <NothingFound\n            text={lang('ChatList.Search.NoResults')}\n            description={lang('ChatList.Search.NoResultsDescription')}\n          />\n        )}\n        {isMediaGrid && renderGallery()}\n        {isMessageList && renderSearchResult()}\n      </InfiniteScroll>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  createMapStateToProps(CURRENT_TYPE),\n)(MediaResults));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo,\n  useMemo,\n  useRef,\n  useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport { GlobalSearchContent } from '../../../types';\n\nimport { selectTabState } from '../../../global/selectors';\nimport { parseDateString } from '../../../util/dates/dateFormat';\n\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useKeyboardListNavigation from '../../../hooks/useKeyboardListNavigation';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport TabList from '../../ui/TabList';\nimport Transition from '../../ui/Transition';\nimport AudioResults from './AudioResults';\nimport BotAppResults from './BotAppResults';\nimport ChatMessageResults from './ChatMessageResults';\nimport ChatResults from './ChatResults';\nimport FileResults from './FileResults';\nimport LinkResults from './LinkResults';\nimport MediaResults from './MediaResults';\n\nimport './LeftSearch.scss';\n\nexport type OwnProps = {\n  searchQuery?: string;\n  searchDate?: number;\n  isActive: boolean;\n  onReset: () => void;\n};\n\ntype StateProps = {\n  currentContent?: GlobalSearchContent;\n  chatId?: string;\n};\n\nconst TABS = [\n  { type: GlobalSearchContent.ChatList, title: 'SearchAllChatsShort' },\n  { type: GlobalSearchContent.ChannelList, title: 'ChannelsTab' },\n  { type: GlobalSearchContent.BotApps, title: 'AppsTab' },\n  { type: GlobalSearchContent.Media, title: 'SharedMediaTab2' },\n  { type: GlobalSearchContent.Links, title: 'SharedLinksTab2' },\n  { type: GlobalSearchContent.Files, title: 'SharedFilesTab2' },\n  { type: GlobalSearchContent.Music, title: 'SharedMusicTab2' },\n  { type: GlobalSearchContent.Voice, title: 'SharedVoiceTab2' },\n];\n\nconst CHAT_TABS = [\n  { type: GlobalSearchContent.ChatList, title: 'All Messages' },\n  ...TABS.slice(3), // Skip ChatList, ChannelList and BotApps, replaced with All Messages\n];\n\nconst LeftSearch: FC<OwnProps & StateProps> = ({\n  searchQuery,\n  searchDate,\n  isActive,\n  currentContent = GlobalSearchContent.ChatList,\n  chatId,\n  onReset,\n}) => {\n  const {\n    setGlobalSearchContent,\n    setGlobalSearchDate,\n  } = getActions();\n\n  const lang = useOldLang();\n  const [activeTab, setActiveTab] = useState(currentContent);\n  const dateSearchQuery = useMemo(() => parseDateString(searchQuery), [searchQuery]);\n\n  const tabs = chatId ? CHAT_TABS : TABS;\n\n  const handleSwitchTab = useLastCallback((index: number) => {\n    const tab = tabs[index];\n    setGlobalSearchContent({ content: tab.type });\n    setActiveTab(index);\n  });\n\n  const handleSearchDateSelect = useLastCallback((value: Date) => {\n    setGlobalSearchDate({ date: value.getTime() / 1000 });\n  });\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  const handleKeyDown = useKeyboardListNavigation(containerRef, isActive, undefined, '.ListItem-button', true);\n\n  return (\n    <div className=\"LeftSearch\" ref={containerRef} onKeyDown={handleKeyDown}>\n      <TabList activeTab={activeTab} tabs={tabs} onSwitchTab={handleSwitchTab} />\n      <Transition\n        name={lang.isRtl ? 'slideOptimizedRtl' : 'slideOptimized'}\n        renderCount={tabs.length}\n        activeKey={currentContent}\n      >\n        {(() => {\n          switch (currentContent) {\n            case GlobalSearchContent.ChatList:\n            case GlobalSearchContent.ChannelList:\n              if (chatId) {\n                return (\n                  <ChatMessageResults\n                    searchQuery={searchQuery}\n                    dateSearchQuery={dateSearchQuery}\n                    onReset={onReset}\n                    onSearchDateSelect={handleSearchDateSelect}\n                  />\n                );\n              }\n              return (\n                <ChatResults\n                  isChannelList={currentContent === GlobalSearchContent.ChannelList}\n                  searchQuery={searchQuery}\n                  searchDate={searchDate}\n                  dateSearchQuery={dateSearchQuery}\n                  onReset={onReset}\n                  onSearchDateSelect={handleSearchDateSelect}\n                />\n              );\n            case GlobalSearchContent.Media:\n              return <MediaResults searchQuery={searchQuery} />;\n            case GlobalSearchContent.Links:\n              return <LinkResults searchQuery={searchQuery} />;\n            case GlobalSearchContent.Files:\n              return <FileResults searchQuery={searchQuery} />;\n            case GlobalSearchContent.Music:\n              return (\n                <AudioResults\n                  key=\"audio\"\n                  searchQuery={searchQuery}\n                />\n              );\n            case GlobalSearchContent.Voice:\n              return (\n                <AudioResults\n                  key=\"voice\"\n                  isVoice\n                  searchQuery={searchQuery}\n                />\n              );\n            case GlobalSearchContent.BotApps:\n              return (\n                <BotAppResults\n                  key=\"botApps\"\n                  searchQuery={searchQuery}\n                />\n              );\n            default:\n              return undefined;\n          }\n        })()}\n      </Transition>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const { currentContent, chatId } = selectTabState(global).globalSearch;\n\n    return { currentContent, chatId };\n  },\n)(LeftSearch));\n","import type { Dispatch, StateReducer } from '../useReducer';\n\nimport useReducer from '../useReducer';\n\nexport type TwoFaActions = (\n  'setCurrentPassword' | 'setPassword' | 'setHint' | 'setEmail' | 'reset'\n);\nexport type TwoFaDispatch = Dispatch<TwoFaState, TwoFaActions>;\n\nexport type TwoFaState = {\n  currentPassword: string;\n  password: string;\n  hint: string;\n  email: string;\n};\n\nconst INITIAL_STATE: TwoFaState = {\n  currentPassword: '',\n  password: '',\n  hint: '',\n  email: '',\n};\n\nconst twoFaReducer: StateReducer<TwoFaState, TwoFaActions> = (\n  state,\n  action,\n) => {\n  switch (action.type) {\n    case 'setCurrentPassword':\n      return {\n        ...state,\n        currentPassword: action.payload,\n      };\n\n    case 'setPassword':\n      return {\n        ...state,\n        password: action.payload,\n      };\n\n    case 'setHint':\n      return {\n        ...state,\n        hint: action.payload,\n      };\n\n    case 'setEmail':\n      return {\n        ...state,\n        email: action.payload,\n      };\n\n    case 'reset':\n      return INITIAL_STATE;\n\n    default:\n      return state;\n  }\n};\n\nconst useTwoFaReducer = () => {\n  return useReducer(twoFaReducer, INITIAL_STATE);\n};\n\nexport default useTwoFaReducer;\n","import type { FC } from '../../../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo, useState,\n} from '../../../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../../../global';\n\nimport type { FolderEditDispatch, FoldersState } from '../../../../hooks/reducers/useFoldersReducer';\n\nimport { ALL_FOLDER_ID, ARCHIVED_FOLDER_ID } from '../../../../config';\nimport { filterChatsByName } from '../../../../global/helpers';\nimport { selectCurrentLimit } from '../../../../global/selectors/limits';\nimport { unique } from '../../../../util/iteratees';\nimport { CUSTOM_PEER_EXCLUDED_CHAT_TYPES, CUSTOM_PEER_INCLUDED_CHAT_TYPES } from '../../../../util/objects/customPeer';\n\nimport { selectChatFilters } from '../../../../hooks/reducers/useFoldersReducer';\nimport { useFolderManagerForOrderedIds } from '../../../../hooks/useFolderManager';\nimport useHistoryBack from '../../../../hooks/useHistoryBack';\nimport useLastCallback from '../../../../hooks/useLastCallback';\nimport useOldLang from '../../../../hooks/useOldLang';\n\nimport Icon from '../../../common/icons/Icon';\nimport PeerPicker from '../../../common/pickers/PeerPicker';\nimport FloatingActionButton from '../../../ui/FloatingActionButton';\nimport Loading from '../../../ui/Loading';\n\ntype StateProps = {\n  maxChats: number;\n};\n\ntype OwnProps = {\n  mode: 'included' | 'excluded';\n  state: FoldersState;\n  dispatch: FolderEditDispatch;\n  isActive?: boolean;\n  onReset: VoidFunction;\n  onSaveFilter: VoidFunction;\n};\n\nconst SettingsFoldersChatFilters: FC<OwnProps & StateProps> = ({\n  mode,\n  state,\n  dispatch,\n  isActive,\n  onReset,\n  onSaveFilter,\n  maxChats,\n}) => {\n  const lang = useOldLang();\n\n  const { openLimitReachedModal } = getActions();\n\n  const { chatFilter } = state;\n  const { selectedChatIds, selectedChatTypes } = useMemo(() => selectChatFilters(state, mode, true), [mode, state]);\n  const chatTypes = mode === 'included' ? CUSTOM_PEER_INCLUDED_CHAT_TYPES : CUSTOM_PEER_EXCLUDED_CHAT_TYPES;\n\n  const [isTouched, setIsTouched] = useState(false);\n\n  const folderAllOrderedIds = useFolderManagerForOrderedIds(ALL_FOLDER_ID);\n  const folderArchivedOrderedIds = useFolderManagerForOrderedIds(ARCHIVED_FOLDER_ID);\n\n  const shouldHideChatTypes = state.folder.isChatList;\n\n  useEffect(() => {\n    if (!isActive) {\n      setIsTouched(false);\n    }\n  }, [isActive]);\n\n  const displayedIds = useMemo(() => {\n    // No need for expensive global updates on chats, so we avoid them\n    const chatsById = getGlobal().chats.byId;\n\n    const chatIds = [...folderAllOrderedIds || [], ...folderArchivedOrderedIds || []];\n    return unique([\n      ...filterChatsByName(lang, chatIds, chatsById, chatFilter),\n    ]);\n  }, [folderAllOrderedIds, folderArchivedOrderedIds, lang, chatFilter]);\n\n  const handleFilterChange = useLastCallback((newFilter: string) => {\n    dispatch({\n      type: 'setChatFilter',\n      payload: newFilter,\n    });\n    setIsTouched(true);\n  });\n\n  const handleSelectedIdsChange = useLastCallback((ids: string[]) => {\n    if (mode === 'included') {\n      if (ids.length >= maxChats) {\n        openLimitReachedModal({\n          limit: 'dialogFiltersChats',\n        });\n        return;\n      }\n      dispatch({\n        type: 'setIncludeFilters',\n        payload: { ...state.includeFilters, includedChatIds: ids },\n      });\n    } else {\n      dispatch({\n        type: 'setExcludeFilters',\n        payload: { ...state.excludeFilters, excludedChatIds: ids },\n      });\n    }\n    setIsTouched(true);\n  });\n\n  const handleSelectedChatTypesChange = useLastCallback((keys: string[]) => {\n    const newFilters: Record<string, boolean> = {};\n    keys.forEach((key) => {\n      newFilters[key] = true;\n    });\n\n    if (mode === 'included') {\n      dispatch({\n        type: 'setIncludeFilters',\n        payload: {\n          includedChatIds: selectedChatIds,\n          ...newFilters,\n        },\n      });\n    } else {\n      dispatch({\n        type: 'setExcludeFilters',\n        payload: {\n          excludedChatIds: selectedChatIds,\n          ...newFilters,\n        },\n      });\n    }\n    setIsTouched(true);\n  });\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  if (!displayedIds) {\n    return <Loading />;\n  }\n\n  return (\n    <div className=\"Picker settings-folders-chat-list\">\n      <PeerPicker\n        categories={shouldHideChatTypes ? undefined : chatTypes}\n        itemIds={displayedIds}\n        selectedIds={selectedChatIds}\n        selectedCategories={selectedChatTypes}\n        filterValue={chatFilter}\n        filterPlaceholder={lang('Search')}\n        categoryPlaceholderKey=\"FilterChatTypes\"\n        searchInputId=\"new-group-picker-search\"\n        isSearchable\n        withDefaultPadding\n        withPeerTypes\n        allowMultiple\n        itemInputType=\"checkbox\"\n        onSelectedIdsChange={handleSelectedIdsChange}\n        onSelectedCategoriesChange={handleSelectedChatTypesChange}\n        onFilterChange={handleFilterChange}\n      />\n\n      <FloatingActionButton\n        isShown={isTouched}\n        onClick={onSaveFilter}\n        ariaLabel={lang('Save')}\n      >\n        <Icon name=\"check\" />\n      </FloatingActionButton>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    return {\n      maxChats: selectCurrentLimit(global, 'dialogFiltersChats'),\n    };\n  },\n)(SettingsFoldersChatFilters));\n","import type { FC } from '../../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useMemo, useState,\n} from '../../../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../../../global';\n\nimport type { ApiChatlistExportedInvite } from '../../../../api/types';\nimport type {\n  FolderEditDispatch,\n  FoldersState,\n} from '../../../../hooks/reducers/useFoldersReducer';\n\nimport { STICKER_SIZE_FOLDER_SETTINGS } from '../../../../config';\nimport { isUserId } from '../../../../global/helpers';\nimport { selectCanShareFolder } from '../../../../global/selectors';\nimport { selectCurrentLimit } from '../../../../global/selectors/limits';\nimport { findIntersectionWithSet } from '../../../../util/iteratees';\nimport { MEMO_EMPTY_ARRAY } from '../../../../util/memo';\nimport { CUSTOM_PEER_EXCLUDED_CHAT_TYPES, CUSTOM_PEER_INCLUDED_CHAT_TYPES } from '../../../../util/objects/customPeer';\nimport { LOCAL_TGS_URLS } from '../../../common/helpers/animatedAssets';\n\nimport { selectChatFilters } from '../../../../hooks/reducers/useFoldersReducer';\nimport useHistoryBack from '../../../../hooks/useHistoryBack';\nimport useOldLang from '../../../../hooks/useOldLang';\n\nimport AnimatedIcon from '../../../common/AnimatedIcon';\nimport GroupChatInfo from '../../../common/GroupChatInfo';\nimport PrivateChatInfo from '../../../common/PrivateChatInfo';\nimport FloatingActionButton from '../../../ui/FloatingActionButton';\nimport InputText from '../../../ui/InputText';\nimport ListItem from '../../../ui/ListItem';\nimport Spinner from '../../../ui/Spinner';\n\ntype OwnProps = {\n  state: FoldersState;\n  dispatch: FolderEditDispatch;\n  onAddIncludedChats: VoidFunction;\n  onAddExcludedChats: VoidFunction;\n  onShareFolder: VoidFunction;\n  onOpenInvite: (url: string) => void;\n  isActive?: boolean;\n  isOnlyInvites?: boolean;\n  onReset: () => void;\n  onBack: () => void;\n  onSaveFolder: (cb?: VoidFunction) => void;\n};\n\ntype StateProps = {\n  loadedActiveChatIds?: string[];\n  loadedArchivedChatIds?: string[];\n  invites?: ApiChatlistExportedInvite[];\n  isRemoved?: boolean;\n  maxInviteLinks: number;\n  maxChatLists: number;\n  chatListCount: number;\n};\n\nconst SUBMIT_TIMEOUT = 500;\n\nconst INITIAL_CHATS_LIMIT = 5;\n\nexport const ERROR_NO_TITLE = 'Please provide a title for this folder.';\nexport const ERROR_NO_CHATS = 'ChatList.Filter.Error.Empty';\n\nconst SettingsFoldersEdit: FC<OwnProps & StateProps> = ({\n  state,\n  dispatch,\n  onAddIncludedChats,\n  onAddExcludedChats,\n  onShareFolder,\n  onOpenInvite,\n  isActive,\n  onReset,\n  isRemoved,\n  onBack,\n  loadedActiveChatIds,\n  isOnlyInvites,\n  loadedArchivedChatIds,\n  invites,\n  maxInviteLinks,\n  maxChatLists,\n  chatListCount,\n  onSaveFolder,\n}) => {\n  const {\n    loadChatlistInvites,\n    openLimitReachedModal,\n    showNotification,\n  } = getActions();\n\n  const isCreating = state.mode === 'create';\n  const isEditingChatList = state.folder.isChatList;\n\n  const [isIncludedChatsListExpanded, setIsIncludedChatsListExpanded] = useState(false);\n  const [isExcludedChatsListExpanded, setIsExcludedChatsListExpanded] = useState(false);\n\n  useEffect(() => {\n    if (isRemoved) {\n      onReset();\n    }\n  }, [isRemoved, onReset]);\n\n  useEffect(() => {\n    if (isActive && state.folderId && state.folder.isChatList) {\n      loadChatlistInvites({ folderId: state.folderId });\n    }\n  }, [isActive, state.folder.isChatList, state.folderId]);\n\n  const {\n    selectedChatIds: includedChatIds,\n    selectedChatTypes: includedChatTypes,\n  } = useMemo(() => selectChatFilters(state, 'included'), [state]);\n  const {\n    selectedChatIds: excludedChatIds,\n    selectedChatTypes: excludedChatTypes,\n  } = useMemo(() => selectChatFilters(state, 'excluded'), [state]);\n\n  useEffect(() => {\n    setIsIncludedChatsListExpanded(false);\n    setIsExcludedChatsListExpanded(false);\n  }, [state.folderId]);\n\n  const [visibleIncludedChatIds, visibleExcludedChatIds] = useMemo(() => {\n    const allLoadedChatsSet = new Set([\n      ...(loadedActiveChatIds || []),\n      ...(loadedArchivedChatIds || []),\n    ]);\n\n    const loadedIncludedChatIds = findIntersectionWithSet(includedChatIds, allLoadedChatsSet);\n    const loadedExcludedChatIds = findIntersectionWithSet(excludedChatIds, allLoadedChatsSet);\n\n    return [\n      isIncludedChatsListExpanded\n        ? loadedIncludedChatIds\n        : loadedIncludedChatIds.slice(0, INITIAL_CHATS_LIMIT - includedChatTypes.length),\n      isExcludedChatsListExpanded\n        ? loadedExcludedChatIds\n        : loadedExcludedChatIds.slice(0, INITIAL_CHATS_LIMIT - excludedChatTypes.length),\n    ];\n  }, [\n    excludedChatIds, includedChatIds, includedChatTypes, excludedChatTypes,\n    isExcludedChatsListExpanded, isIncludedChatsListExpanded,\n    loadedActiveChatIds, loadedArchivedChatIds,\n  ]);\n\n  const lang = useOldLang();\n\n  useHistoryBack({\n    isActive,\n    onBack,\n  });\n\n  const handleChange = useCallback((event: React.ChangeEvent<HTMLInputElement>) => {\n    const { currentTarget } = event;\n    dispatch({ type: 'setTitle', payload: currentTarget.value.trim() });\n  }, [dispatch]);\n\n  const handleSubmit = useCallback(() => {\n    dispatch({ type: 'setIsLoading', payload: true });\n\n    onSaveFolder(() => {\n      setTimeout(() => {\n        onReset();\n      }, SUBMIT_TIMEOUT);\n    });\n  }, [dispatch, onSaveFolder, onReset]);\n\n  const handleCreateInviteClick = useCallback(() => {\n    if (!invites) {\n      if (isCreating) {\n        onSaveFolder(onShareFolder);\n      }\n      return;\n    }\n\n    // Ignoring global updates is a known drawback here\n    if (!selectCanShareFolder(getGlobal(), state.folderId!)) {\n      showNotification({ message: lang('ChatList.Filter.InviteLink.IncludeExcludeError') });\n      return;\n    }\n\n    if (chatListCount >= maxChatLists && !state.folder.isChatList) {\n      openLimitReachedModal({\n        limit: 'chatlistJoined',\n      });\n      return;\n    }\n\n    if (invites.length < maxInviteLinks) {\n      if (state.isTouched) {\n        onSaveFolder(onShareFolder);\n      } else {\n        onShareFolder();\n      }\n      return;\n    }\n\n    openLimitReachedModal({\n      limit: 'chatlistInvites',\n    });\n  }, [\n    invites, state.folderId, state.isTouched, chatListCount, maxInviteLinks, isCreating, onSaveFolder,\n    onShareFolder, lang, maxChatLists, state.folder.isChatList,\n  ]);\n\n  const handleEditInviteClick = useCallback((e: React.MouseEvent<HTMLElement>, url: string) => {\n    if (state.isTouched) {\n      onSaveFolder(() => onOpenInvite(url));\n    } else {\n      onOpenInvite(url);\n    }\n  }, [onSaveFolder, onOpenInvite, state.isTouched]);\n\n  function renderChatType(key: string, mode: 'included' | 'excluded') {\n    const chatType = mode === 'included'\n      ? CUSTOM_PEER_INCLUDED_CHAT_TYPES.find(({ type: typeKey }) => typeKey === key)\n      : CUSTOM_PEER_EXCLUDED_CHAT_TYPES.find(({ type: typeKey }) => typeKey === key);\n\n    if (!chatType) {\n      return undefined;\n    }\n\n    return (\n      <ListItem\n        key={chatType.type}\n        className=\"settings-folders-list-item mb-1\"\n        narrow\n        inactive\n      >\n        <PrivateChatInfo\n          avatarSize=\"small\"\n          customPeer={chatType}\n        />\n      </ListItem>\n    );\n  }\n\n  function renderChats(mode: 'included' | 'excluded') {\n    const selectedChatTypes = mode === 'included' ? includedChatTypes : excludedChatTypes;\n    const visibleChatIds = mode === 'included' ? visibleIncludedChatIds : visibleExcludedChatIds;\n\n    const isExpanded = mode === 'included' ? isIncludedChatsListExpanded : isExcludedChatsListExpanded;\n    const allChatIds = mode === 'included' ? includedChatIds : excludedChatIds;\n    const leftChatsCount = allChatIds.length - visibleChatIds.length;\n    const clickHandler = mode === 'included'\n      ? () => setIsIncludedChatsListExpanded(true)\n      : () => setIsExcludedChatsListExpanded(true);\n\n    return (\n      <>\n        {selectedChatTypes.map((key) => renderChatType(key, mode))}\n        {visibleChatIds.map((id) => (\n          <ListItem\n            className=\"settings-folders-list-item mb-1\"\n            narrow\n            inactive\n          >\n            {isUserId(id) ? (\n              <PrivateChatInfo avatarSize=\"small\" userId={id} />\n            ) : (\n              <GroupChatInfo avatarSize=\"small\" chatId={id} />\n            )}\n          </ListItem>\n        ))}\n        {(!isExpanded && leftChatsCount > 0) && (\n          <ListItem\n            key=\"load-more\"\n            className=\"settings-folders-list-item\"\n            narrow\n            // eslint-disable-next-line react/jsx-no-bind\n            onClick={clickHandler}\n            icon=\"down\"\n          >\n            {lang('FilterShowMoreChats', leftChatsCount, 'i')}\n          </ListItem>\n        )}\n      </>\n    );\n  }\n\n  return (\n    <div className=\"settings-fab-wrapper\">\n      <div className=\"settings-content no-border custom-scroll\">\n        <div className=\"settings-content-header\">\n          <AnimatedIcon\n            size={STICKER_SIZE_FOLDER_SETTINGS}\n            tgsUrl={LOCAL_TGS_URLS.FoldersNew}\n            play={String(state.folderId)}\n            className=\"settings-content-icon\"\n          />\n\n          {isCreating && (\n            <p className=\"settings-item-description mb-3\" dir={lang.isRtl ? 'rtl' : undefined}>\n              {lang('FilterIncludeInfo')}\n            </p>\n          )}\n\n          <InputText\n            className=\"mb-0\"\n            label={lang('FilterNameHint')}\n            value={state.folder.title}\n            onChange={handleChange}\n            error={state.error && state.error === ERROR_NO_TITLE ? ERROR_NO_TITLE : undefined}\n          />\n        </div>\n\n        {!isOnlyInvites && (\n          <div className=\"settings-item pt-3\">\n            {state.error && state.error === ERROR_NO_CHATS && (\n              <p className=\"settings-item-description color-danger mb-2\" dir={lang.isRtl ? 'rtl' : undefined}>\n                {lang(state.error)}\n              </p>\n            )}\n\n            <h4 className=\"settings-item-header mb-3\" dir={lang.isRtl ? 'rtl' : undefined}>{lang('FilterInclude')}</h4>\n\n            <ListItem\n              className=\"settings-folders-list-item color-primary\"\n              icon=\"add\"\n              narrow\n              onClick={onAddIncludedChats}\n            >\n              {lang('FilterAddChats')}\n            </ListItem>\n\n            {renderChats('included')}\n          </div>\n        )}\n\n        {!isOnlyInvites && !isEditingChatList && (\n          <div className=\"settings-item pt-3\">\n            <h4 className=\"settings-item-header mb-3\" dir={lang.isRtl ? 'rtl' : undefined}>{lang('FilterExclude')}</h4>\n\n            <ListItem\n              className=\"settings-folders-list-item color-primary\"\n              icon=\"add\"\n              narrow\n              onClick={onAddExcludedChats}\n            >\n              {lang('FilterAddChats')}\n            </ListItem>\n\n            {renderChats('excluded')}\n          </div>\n        )}\n\n        <div className=\"settings-item pt-3\">\n          <h4 className=\"settings-item-header mb-3\" dir={lang.isRtl ? 'rtl' : undefined}>\n            {lang('FolderLinkScreen.Title')}\n          </h4>\n\n          <ListItem\n            className=\"settings-folders-list-item color-primary\"\n            icon=\"add\"\n            narrow\n            onClick={handleCreateInviteClick}\n          >\n            {lang('ChatListFilter.CreateLinkNew')}\n          </ListItem>\n\n          {invites?.map((invite) => (\n            <ListItem\n              className=\"settings-folders-list-item\"\n              icon=\"link\"\n              narrow\n              multiline\n              onClick={handleEditInviteClick}\n              clickArg={invite.url}\n            >\n              <span className=\"title\" dir=\"auto\">{invite.title || invite.url}</span>\n              <span className=\"subtitle\">\n                {lang('ChatListFilter.LinkLabelChatCount', invite.peerIds.length, 'i')}\n              </span>\n            </ListItem>\n          ))}\n\n        </div>\n      </div>\n\n      <FloatingActionButton\n        isShown={Boolean(state.isTouched)}\n        disabled={state.isLoading}\n        onClick={handleSubmit}\n        ariaLabel={state.mode === 'edit' ? 'Save changes' : 'Create folder'}\n      >\n        {state.isLoading ? (\n          <Spinner color=\"white\" />\n        ) : (\n          <i className=\"icon icon-check\" />\n        )}\n      </FloatingActionButton>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { state }): StateProps => {\n    const { listIds } = global.chats;\n    const { byId, invites } = global.chatFolders;\n    const chatListCount = Object.values(byId).reduce((acc, el) => acc + (el.isChatList ? 1 : 0), 0);\n\n    return {\n      loadedActiveChatIds: listIds.active,\n      loadedArchivedChatIds: listIds.archived,\n      invites: state.folderId ? (invites[state.folderId] || MEMO_EMPTY_ARRAY) : undefined,\n      isRemoved: state.folderId !== undefined && !byId[state.folderId],\n      maxInviteLinks: selectCurrentLimit(global, 'chatlistInvites'),\n      maxChatLists: selectCurrentLimit(global, 'chatlistJoined'),\n      chatListCount,\n    };\n  },\n)(SettingsFoldersEdit));\n","import type { FC } from '../../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useMemo, useState,\n} from '../../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../../global';\n\nimport type { ApiChatFolder } from '../../../../api/types';\n\nimport { ALL_FOLDER_ID, STICKER_SIZE_FOLDER_SETTINGS } from '../../../../config';\nimport { getFolderDescriptionText } from '../../../../global/helpers';\nimport { selectIsCurrentUserPremium } from '../../../../global/selectors';\nimport { selectCurrentLimit } from '../../../../global/selectors/limits';\nimport { isBetween } from '../../../../util/math';\nimport { MEMO_EMPTY_ARRAY } from '../../../../util/memo';\nimport { throttle } from '../../../../util/schedulers';\nimport { LOCAL_TGS_URLS } from '../../../common/helpers/animatedAssets';\nimport renderText from '../../../common/helpers/renderText';\n\nimport { useFolderManagerForChatsCount } from '../../../../hooks/useFolderManager';\nimport useHistoryBack from '../../../../hooks/useHistoryBack';\nimport useOldLang from '../../../../hooks/useOldLang';\nimport usePreviousDeprecated from '../../../../hooks/usePreviousDeprecated';\n\nimport AnimatedIcon from '../../../common/AnimatedIcon';\nimport Button from '../../../ui/Button';\nimport Draggable from '../../../ui/Draggable';\nimport ListItem from '../../../ui/ListItem';\nimport Loading from '../../../ui/Loading';\n\ntype OwnProps = {\n  isActive?: boolean;\n  onCreateFolder: () => void;\n  onEditFolder: (folder: ApiChatFolder) => void;\n  onReset: () => void;\n};\n\ntype StateProps = {\n  folderIds?: number[];\n  foldersById: Record<number, ApiChatFolder>;\n  recommendedChatFolders?: ApiChatFolder[];\n  maxFolders: number;\n  isPremium?: boolean;\n};\n\ntype SortState = {\n  orderedFolderIds?: number[];\n  dragOrderIds?: number[];\n  draggedIndex?: number;\n};\n\nconst FOLDER_HEIGHT_PX = 68;\nconst runThrottledForLoadRecommended = throttle((cb) => cb(), 60000, true);\n\nconst SettingsFoldersMain: FC<OwnProps & StateProps> = ({\n  isActive,\n  onCreateFolder,\n  onEditFolder,\n  onReset,\n  folderIds,\n  foldersById,\n  isPremium,\n  recommendedChatFolders,\n  maxFolders,\n}) => {\n  const {\n    loadRecommendedChatFolders,\n    addChatFolder,\n    openLimitReachedModal,\n    openDeleteChatFolderModal,\n    sortChatFolders,\n  } = getActions();\n\n  const [state, setState] = useState<SortState>({\n    orderedFolderIds: folderIds,\n    dragOrderIds: folderIds,\n    draggedIndex: undefined,\n  });\n\n  const prevFolderIds = usePreviousDeprecated(folderIds);\n\n  // Sync folders state after changing folders in other clients\n  useEffect(() => {\n    if (prevFolderIds !== folderIds) {\n      setState({\n        orderedFolderIds: folderIds,\n        dragOrderIds: folderIds,\n        draggedIndex: undefined,\n      });\n    }\n  }, [prevFolderIds, folderIds, state.orderedFolderIds?.length]);\n\n  // Due to the parent Transition, this component never gets unmounted,\n  // that's why we use throttled API call on every update.\n  useEffect(() => {\n    runThrottledForLoadRecommended(() => {\n      loadRecommendedChatFolders();\n    });\n  }, [loadRecommendedChatFolders]);\n\n  const handleCreateFolder = useCallback(() => {\n    if (Object.keys(foldersById).length >= maxFolders - 1) {\n      openLimitReachedModal({\n        limit: 'dialogFilters',\n      });\n\n      return;\n    }\n\n    onCreateFolder();\n  }, [foldersById, maxFolders, onCreateFolder, openLimitReachedModal]);\n\n  const lang = useOldLang();\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  const chatsCountByFolderId = useFolderManagerForChatsCount();\n  const userFolders = useMemo(() => {\n    if (!folderIds) {\n      return undefined;\n    }\n\n    if (folderIds.length <= 1) {\n      return MEMO_EMPTY_ARRAY;\n    }\n\n    return folderIds.map((id) => {\n      const folder = foldersById[id];\n\n      if (id === ALL_FOLDER_ID) {\n        return {\n          id,\n          title: lang('FilterAllChats'),\n        };\n      }\n\n      return {\n        id: folder.id,\n        title: folder.title,\n        subtitle: getFolderDescriptionText(lang, folder, chatsCountByFolderId[folder.id]),\n        isChatList: folder.isChatList,\n      };\n    });\n  }, [folderIds, foldersById, lang, chatsCountByFolderId]);\n\n  const handleCreateFolderFromRecommended = useCallback((folder: ApiChatFolder) => {\n    if (Object.keys(foldersById).length >= maxFolders - 1) {\n      openLimitReachedModal({\n        limit: 'dialogFilters',\n      });\n\n      return;\n    }\n\n    addChatFolder({ folder });\n  }, [foldersById, maxFolders, addChatFolder, openLimitReachedModal]);\n\n  const handleDrag = useCallback((translation: { x: number; y: number }, id: string | number) => {\n    const delta = Math.round(translation.y / FOLDER_HEIGHT_PX);\n    const index = state.orderedFolderIds?.indexOf(id as number) || 0;\n    const dragOrderIds = state.orderedFolderIds?.filter((folderId) => folderId !== id);\n\n    if (!dragOrderIds || !isBetween(index + delta, 0, folderIds?.length || 0)) {\n      return;\n    }\n\n    dragOrderIds.splice(index + delta + (isPremium ? 0 : 1), 0, id as number);\n    setState((current) => ({\n      ...current,\n      draggedIndex: index,\n      dragOrderIds,\n    }));\n  }, [folderIds?.length, isPremium, state.orderedFolderIds]);\n\n  const handleDragEnd = useCallback(() => {\n    setState((current) => {\n      sortChatFolders({ folderIds: current.dragOrderIds! });\n\n      return {\n        ...current,\n        orderedFolderIds: current.dragOrderIds,\n        draggedIndex: undefined,\n      };\n    });\n  }, [sortChatFolders]);\n\n  const canCreateNewFolder = useMemo(() => {\n    return !isPremium || Object.keys(foldersById).length < maxFolders - 1;\n  }, [foldersById, isPremium, maxFolders]);\n\n  return (\n    <div className=\"settings-content no-border custom-scroll\">\n      <div className=\"settings-content-header\">\n        <AnimatedIcon\n          size={STICKER_SIZE_FOLDER_SETTINGS}\n          tgsUrl={LOCAL_TGS_URLS.FoldersAll}\n          className=\"settings-content-icon\"\n        />\n\n        <p className=\"settings-item-description mb-3\" dir=\"auto\">\n          {lang('CreateNewFilterInfo')}\n        </p>\n\n        {canCreateNewFolder && (\n          <Button\n          // TODO: Refactor button component to handle icon placemenet with props\n            className=\"with-icon mb-2\"\n            color=\"primary\"\n            size=\"smaller\"\n            pill\n            fluid\n            onClick={handleCreateFolder}\n            isRtl={lang.isRtl}\n          >\n            <i className=\"icon icon-add\" />\n            {lang('CreateNewFilter')}\n          </Button>\n        )}\n      </div>\n\n      <div className=\"settings-item pt-3\">\n        <h4 className=\"settings-item-header mb-3\" dir={lang.isRtl ? 'rtl' : undefined}>{lang('Filters')}</h4>\n\n        <div className=\"settings-sortable-container\" style={`height: ${(folderIds?.length || 0) * FOLDER_HEIGHT_PX}px`}>\n          {userFolders?.length ? userFolders.map((folder, i) => {\n            const isBlocked = i > maxFolders - 1;\n            const isDragged = state.draggedIndex === i;\n            const draggedTop = (state.orderedFolderIds?.indexOf(folder.id) ?? 0) * FOLDER_HEIGHT_PX;\n            const top = (state.dragOrderIds?.indexOf(folder.id) ?? 0) * FOLDER_HEIGHT_PX;\n\n            if (folder.id === ALL_FOLDER_ID) {\n              return (\n                <Draggable\n                  key={folder.id}\n                  id={folder.id}\n                  onDrag={handleDrag}\n                  onDragEnd={handleDragEnd}\n                  style={`top: ${isDragged ? draggedTop : top}px;`}\n                  knobStyle={`${lang.isRtl ? 'left' : 'right'}: 0.375rem;`}\n                  isDisabled={!isPremium || !isActive}\n                >\n                  <ListItem\n                    key={folder.id}\n                    className=\"drag-item mb-2 no-icon settings-sortable-item\"\n                    narrow\n                    inactive\n                    multiline\n                    isStatic\n                    allowSelection\n                  >\n                    <span className=\"title\">\n                      {folder.title}\n                    </span>\n                    <span className=\"subtitle\">{lang('FoldersAllChatsDesc')}</span>\n                  </ListItem>\n                </Draggable>\n              );\n            }\n\n            return (\n              <Draggable\n                key={folder.id}\n                id={folder.id}\n                onDrag={handleDrag}\n                onDragEnd={handleDragEnd}\n                style={`top: ${isDragged ? draggedTop : top}px;`}\n                knobStyle={`${lang.isRtl ? 'left' : 'right'}: 3rem;`}\n                isDisabled={isBlocked || !isActive}\n              >\n                <ListItem\n                  className=\"drag-item mb-2 no-icon settings-sortable-item\"\n                  narrow\n                  secondaryIcon=\"more\"\n                  multiline\n                  contextActions={[\n                    {\n                      handler: () => {\n                        openDeleteChatFolderModal({ folderId: folder.id });\n                      },\n                      destructive: true,\n                      title: lang('Delete'),\n                      icon: 'delete',\n                    },\n                  ]}\n                  // eslint-disable-next-line react/jsx-no-bind\n                  onClick={() => {\n                    if (isBlocked) {\n                      openLimitReachedModal({\n                        limit: 'dialogFilters',\n                      });\n                    } else {\n                      onEditFolder(foldersById[folder.id]);\n                    }\n                  }}\n                >\n                  <span className=\"title\">\n                    {renderText(folder.title, ['emoji'])}\n                    {isBlocked && <i className=\"icon icon-lock-badge settings-folders-blocked-icon\" />}\n                  </span>\n                  <span className=\"subtitle\">\n                    {folder.isChatList && <i className=\"icon icon-link mr-1\" />}\n                    {folder.subtitle}\n                  </span>\n                </ListItem>\n              </Draggable>\n            );\n          }) : userFolders && !userFolders.length ? (\n            <p className=\"settings-item-description my-4\" dir=\"auto\">\n              You have no folders yet.\n            </p>\n          ) : <Loading />}\n        </div>\n      </div>\n\n      {(recommendedChatFolders && Boolean(recommendedChatFolders.length)) && (\n        <div className=\"settings-item pt-3\">\n          <h4 className=\"settings-item-header mb-3\" dir={lang.isRtl ? 'rtl' : undefined}>\n            {lang('FilterRecommended')}\n          </h4>\n\n          {recommendedChatFolders.map((folder) => (\n            <ListItem\n              className=\"mb-2\"\n              narrow\n              // eslint-disable-next-line react/jsx-no-bind\n              onClick={() => handleCreateFolderFromRecommended(folder)}\n            >\n              <div className=\"settings-folders-recommended-item\">\n                <div className=\"multiline-item\">\n                  <span className=\"title\">{renderText(folder.title, ['emoji'])}</span>\n                  <span className=\"subtitle\">{folder.description}</span>\n                </div>\n\n                <Button\n                  className=\"px-3\"\n                  color=\"primary\"\n                  size=\"tiny\"\n                  pill\n                  fluid\n                  isRtl={lang.isRtl}\n                >\n                  {lang('Add')}\n                </Button>\n              </div>\n            </ListItem>\n          ))}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const {\n      orderedIds: folderIds,\n      byId: foldersById,\n      recommended: recommendedChatFolders,\n    } = global.chatFolders;\n\n    return {\n      folderIds,\n      foldersById,\n      isPremium: selectIsCurrentUserPremium(global),\n      recommendedChatFolders,\n      maxFolders: selectCurrentLimit(global, 'dialogFilters'),\n    };\n  },\n)(SettingsFoldersMain));\n","import type { FC } from '../../../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo, useRef, useState,\n} from '../../../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../../../global';\n\nimport { STICKER_SIZE_FOLDER_SETTINGS } from '../../../../config';\nimport { isChatChannel, isUserBot } from '../../../../global/helpers';\nimport {\n  selectCanInviteToChat, selectChat,\n  selectChatFolder,\n  selectTabState, selectUser,\n} from '../../../../global/selectors';\nimport { partition } from '../../../../util/iteratees';\nimport { LOCAL_TGS_URLS } from '../../../common/helpers/animatedAssets';\nimport renderText from '../../../common/helpers/renderText';\n\nimport useEffectWithPrevDeps from '../../../../hooks/useEffectWithPrevDeps';\nimport useHistoryBack from '../../../../hooks/useHistoryBack';\nimport useLastCallback from '../../../../hooks/useLastCallback';\nimport useOldLang from '../../../../hooks/useOldLang';\n\nimport AnimatedIcon from '../../../common/AnimatedIcon';\nimport LinkField from '../../../common/LinkField';\nimport PeerPicker from '../../../common/pickers/PeerPicker';\nimport FloatingActionButton from '../../../ui/FloatingActionButton';\nimport Spinner from '../../../ui/Spinner';\n\ntype OwnProps = {\n  isActive?: boolean;\n  onReset: VoidFunction;\n};\n\ntype StateProps = {\n  folderId?: number;\n  title?: string;\n  includedChatIds?: string[];\n  pinnedChatIds?: string[];\n  peerIds?: string[];\n  url?: string;\n  isLoading?: boolean;\n};\n\nconst SettingsShareChatlist: FC<OwnProps & StateProps> = ({\n  isActive,\n  onReset,\n  folderId,\n  title,\n  includedChatIds,\n  pinnedChatIds,\n  peerIds,\n  url,\n  isLoading,\n}) => {\n  const {\n    createChatlistInvite, deleteChatlistInvite, editChatlistInvite, showNotification,\n  } = getActions();\n  const lang = useOldLang();\n\n  const [isTouched, setIsTouched] = useState(false);\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  useEffect(() => {\n    if (!isLoading) {\n      setIsTouched(false);\n    }\n  }, [isLoading]);\n\n  useEffect(() => {\n    if (!url && folderId && isActive) {\n      createChatlistInvite({ folderId });\n    }\n  }, [folderId, isActive, url]);\n\n  const handleRevoke = useLastCallback(() => {\n    if (!url || !folderId) return;\n\n    deleteChatlistInvite({ folderId, url });\n    onReset();\n  });\n\n  const itemIds = useMemo(() => {\n    return (includedChatIds || []).concat(pinnedChatIds || []);\n  }, [includedChatIds, pinnedChatIds]);\n\n  const [unlockedIds, lockedIds] = useMemo(() => {\n    const global = getGlobal();\n    return partition(itemIds, (id) => selectCanInviteToChat(global, id));\n  }, [itemIds]);\n\n  const [selectedIds, setSelectedIds] = useState<string[]>(peerIds || []);\n\n  const isFirstRenderRef = useRef(true);\n  useEffectWithPrevDeps(([prevUrl]) => {\n    if (prevUrl !== url) {\n      isFirstRenderRef.current = true;\n    }\n    if (!isFirstRenderRef.current) return;\n    isFirstRenderRef.current = false;\n    if (!url) {\n      setSelectedIds(unlockedIds);\n    } else if (peerIds) {\n      setSelectedIds(peerIds);\n    }\n  }, [url, unlockedIds, peerIds]);\n\n  const handleClickDisabled = useLastCallback((id: string) => {\n    const global = getGlobal();\n    const user = selectUser(global, id);\n    const chat = selectChat(global, id);\n    if (user && isUserBot(user)) {\n      showNotification({\n        message: lang('FolderLinkScreen.AlertTextUnavailableBot'),\n      });\n    } else if (user) {\n      showNotification({\n        message: lang('FolderLinkScreen.AlertTextUnavailableUser'),\n      });\n    } else if (chat && isChatChannel(chat)) {\n      showNotification({\n        message: lang('FolderLinkScreen.AlertTextUnavailablePublicChannel'),\n      });\n    } else {\n      showNotification({\n        message: lang('FolderLinkScreen.AlertTextUnavailablePublicGroup'),\n      });\n    }\n  });\n\n  const handleSelectedIdsChange = useLastCallback((ids: string[]) => {\n    setSelectedIds(ids);\n    setIsTouched(true);\n  });\n\n  const handleSubmit = useLastCallback(() => {\n    if (!folderId || !url || !isTouched) return;\n    editChatlistInvite({ folderId, peerIds: selectedIds, url });\n  });\n\n  const chatsCount = selectedIds.length;\n  const isDisabled = !chatsCount || isLoading;\n\n  return (\n    <div className=\"settings-content no-border custom-scroll SettingsFoldersChatsPicker\">\n      <div className=\"settings-content-header\">\n        <AnimatedIcon\n          size={STICKER_SIZE_FOLDER_SETTINGS}\n          tgsUrl={LOCAL_TGS_URLS.FoldersShare}\n          className=\"settings-content-icon\"\n        />\n\n        <p className=\"settings-item-description mb-3\" dir=\"auto\">\n          {renderText(lang('FolderLinkScreen.TitleDescriptionSelected', [title, chatsCount]),\n            ['simple_markdown'])}\n        </p>\n      </div>\n\n      <LinkField\n        className=\"settings-item\"\n        link={!url ? lang('Loading') : url}\n        withShare\n        onRevoke={handleRevoke}\n        isDisabled={!chatsCount || isTouched}\n      />\n\n      <div className=\"settings-item settings-item-picker\">\n        <PeerPicker\n          itemIds={itemIds}\n          lockedUnselectedIds={lockedIds}\n          onSelectedIdsChange={handleSelectedIdsChange}\n          selectedIds={selectedIds}\n          onDisabledClick={handleClickDisabled}\n          allowMultiple\n          withStatus\n          itemInputType=\"checkbox\"\n        />\n      </div>\n\n      <FloatingActionButton\n        isShown={isLoading || isTouched}\n        disabled={isDisabled}\n        onClick={handleSubmit}\n        ariaLabel=\"Save changes\"\n      >\n        {isLoading ? (\n          <Spinner color=\"white\" />\n        ) : (\n          <i className=\"icon icon-check\" />\n        )}\n      </FloatingActionButton>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const { folderId, url, isLoading } = selectTabState(global).shareFolderScreen || {};\n    const folder = folderId ? selectChatFolder(global, folderId) : undefined;\n    const invite = folderId ? global.chatFolders.invites[folderId]?.find((i) => i.url === url) : undefined;\n\n    return {\n      folderId,\n      title: folder?.title,\n      includedChatIds: folder?.includedChatIds,\n      pinnedChatIds: folder?.pinnedChatIds,\n      url,\n      isLoading,\n      peerIds: invite?.peerIds,\n    };\n  },\n)(SettingsShareChatlist));\n","import type { FC } from '../../../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../../../lib/teact/teact';\nimport { getActions } from '../../../../global';\n\nimport type { ApiChatFolder } from '../../../../api/types';\nimport type { FolderEditDispatch, FoldersState } from '../../../../hooks/reducers/useFoldersReducer';\nimport { SettingsScreens } from '../../../../types';\n\nimport { selectChatFilters } from '../../../../hooks/reducers/useFoldersReducer';\n\nimport SettingsFoldersChatFilters from './SettingsFoldersChatFilters';\nimport SettingsFoldersEdit, { ERROR_NO_CHATS, ERROR_NO_TITLE } from './SettingsFoldersEdit';\nimport SettingsFoldersMain from './SettingsFoldersMain';\nimport SettingsShareChatlist from './SettingsShareChatlist';\n\nimport './SettingsFolders.scss';\n\nconst TRANSITION_DURATION = 200;\n\nexport type OwnProps = {\n  currentScreen: SettingsScreens;\n  shownScreen: SettingsScreens;\n  state: FoldersState;\n  dispatch: FolderEditDispatch;\n  isActive?: boolean;\n  onScreenSelect: (screen: SettingsScreens) => void;\n  onReset: () => void;\n};\n\nconst SettingsFolders: FC<OwnProps> = ({\n  currentScreen,\n  shownScreen,\n  state,\n  dispatch,\n  isActive,\n  onScreenSelect,\n  onReset,\n}) => {\n  const {\n    openShareChatFolderModal,\n    editChatFolder,\n    addChatFolder,\n  } = getActions();\n\n  const handleReset = useCallback(() => {\n    if (\n      currentScreen === SettingsScreens.FoldersCreateFolder\n      || currentScreen === SettingsScreens.FoldersEditFolder\n      || currentScreen === SettingsScreens.FoldersEditFolderFromChatList\n      || currentScreen === SettingsScreens.FoldersEditFolderInvites\n    ) {\n      setTimeout(() => {\n        dispatch({ type: 'reset' });\n      }, TRANSITION_DURATION);\n    }\n\n    if (\n      currentScreen === SettingsScreens.FoldersIncludedChats\n      || currentScreen === SettingsScreens.FoldersExcludedChats\n    ) {\n      if (state.mode === 'create') {\n        onScreenSelect(SettingsScreens.FoldersCreateFolder);\n      } else {\n        onScreenSelect(SettingsScreens.FoldersEditFolder);\n      }\n      return;\n    }\n\n    onReset();\n  }, [\n    state.mode, dispatch,\n    currentScreen, onReset, onScreenSelect,\n  ]);\n\n  const isCreating = state.mode === 'create';\n\n  const saveState = useCallback((newState: FoldersState) => {\n    const { title } = newState.folder;\n\n    if (!title) {\n      dispatch({ type: 'setError', payload: ERROR_NO_TITLE });\n      return false;\n    }\n\n    const {\n      selectedChatIds: includedChatIds,\n      selectedChatTypes: includedChatTypes,\n    } = selectChatFilters(newState, 'included');\n\n    if (!includedChatIds.length && !Object.keys(includedChatTypes).length) {\n      dispatch({ type: 'setError', payload: ERROR_NO_CHATS });\n      return false;\n    }\n\n    if (!isCreating) {\n      editChatFolder({ id: newState.folderId!, folderUpdate: newState.folder });\n    } else {\n      addChatFolder({ folder: newState.folder as ApiChatFolder });\n    }\n\n    dispatch({ type: 'setError', payload: undefined });\n    dispatch({ type: 'setIsTouched', payload: false });\n\n    return true;\n  }, [dispatch, isCreating]);\n\n  const handleSaveFolder = useCallback((cb?: NoneToVoidFunction) => {\n    if (!saveState(state)) {\n      return;\n    }\n    cb?.();\n  }, [saveState, state]);\n\n  const handleSaveFilter = useCallback(() => {\n    const newState = dispatch({ type: 'saveFilters' });\n    handleReset();\n    saveState(newState);\n  }, [dispatch, handleReset, saveState]);\n\n  const handleCreateFolder = useCallback(() => {\n    dispatch({ type: 'reset' });\n    onScreenSelect(SettingsScreens.FoldersCreateFolder);\n  }, [onScreenSelect, dispatch]);\n\n  const handleEditFolder = useCallback((folder: ApiChatFolder) => {\n    dispatch({ type: 'editFolder', payload: folder });\n    onScreenSelect(SettingsScreens.FoldersEditFolder);\n  }, [dispatch, onScreenSelect]);\n\n  const handleAddIncludedChats = useCallback(() => {\n    dispatch({ type: 'editIncludeFilters' });\n    onScreenSelect(currentScreen === SettingsScreens.FoldersEditFolderFromChatList\n      ? SettingsScreens.FoldersIncludedChatsFromChatList\n      : SettingsScreens.FoldersIncludedChats);\n  }, [currentScreen, dispatch, onScreenSelect]);\n\n  const handleAddExcludedChats = useCallback(() => {\n    dispatch({ type: 'editExcludeFilters' });\n    onScreenSelect(currentScreen === SettingsScreens.FoldersEditFolderFromChatList\n      ? SettingsScreens.FoldersExcludedChatsFromChatList\n      : SettingsScreens.FoldersExcludedChats);\n  }, [currentScreen, dispatch, onScreenSelect]);\n\n  const handleShareFolder = useCallback(() => {\n    openShareChatFolderModal({ folderId: state.folderId!, noRequestNextScreen: true });\n    dispatch({ type: 'setIsChatlist', payload: true });\n    onScreenSelect(SettingsScreens.FoldersShare);\n  }, [dispatch, onScreenSelect, state.folderId]);\n\n  const handleOpenInvite = useCallback((url: string) => {\n    openShareChatFolderModal({ folderId: state.folderId!, url, noRequestNextScreen: true });\n    onScreenSelect(SettingsScreens.FoldersShare);\n  }, [onScreenSelect, state.folderId]);\n\n  switch (currentScreen) {\n    case SettingsScreens.Folders:\n      return (\n        <SettingsFoldersMain\n          onCreateFolder={handleCreateFolder}\n          onEditFolder={handleEditFolder}\n          isActive={isActive || [\n            SettingsScreens.FoldersCreateFolder,\n            SettingsScreens.FoldersEditFolder,\n            SettingsScreens.FoldersIncludedChats,\n            SettingsScreens.FoldersExcludedChats,\n          ].includes(shownScreen)}\n          onReset={onReset}\n        />\n      );\n    case SettingsScreens.FoldersCreateFolder:\n    case SettingsScreens.FoldersEditFolder:\n    case SettingsScreens.FoldersEditFolderFromChatList:\n    case SettingsScreens.FoldersEditFolderInvites:\n      return (\n        <SettingsFoldersEdit\n          state={state}\n          dispatch={dispatch}\n          onAddIncludedChats={handleAddIncludedChats}\n          onAddExcludedChats={handleAddExcludedChats}\n          onShareFolder={handleShareFolder}\n          onOpenInvite={handleOpenInvite}\n          onReset={handleReset}\n          isActive={isActive || [\n            SettingsScreens.FoldersIncludedChats,\n            SettingsScreens.FoldersExcludedChats,\n          ].includes(shownScreen)}\n          isOnlyInvites={currentScreen === SettingsScreens.FoldersEditFolderInvites}\n          onBack={onReset}\n          onSaveFolder={handleSaveFolder}\n        />\n      );\n    case SettingsScreens.FoldersIncludedChats:\n    case SettingsScreens.FoldersIncludedChatsFromChatList:\n      return (\n        <SettingsFoldersChatFilters\n          mode=\"included\"\n          state={state}\n          dispatch={dispatch}\n          onReset={handleReset}\n          onSaveFilter={handleSaveFilter}\n          isActive={isActive}\n        />\n      );\n    case SettingsScreens.FoldersExcludedChats:\n    case SettingsScreens.FoldersExcludedChatsFromChatList:\n      return (\n        <SettingsFoldersChatFilters\n          mode=\"excluded\"\n          state={state}\n          dispatch={dispatch}\n          onReset={handleReset}\n          onSaveFilter={handleSaveFilter}\n          isActive={isActive}\n        />\n      );\n\n    case SettingsScreens.FoldersShare:\n      return (\n        <SettingsShareChatlist\n          isActive={isActive}\n          onReset={handleReset}\n        />\n      );\n\n    default:\n      return undefined;\n  }\n};\n\nexport default memo(SettingsFolders);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback, useState } from '../../../lib/teact/teact';\n\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport PasswordForm from '../../common/PasswordForm';\nimport PasswordMonkey from '../../common/PasswordMonkey';\n\ntype OwnProps = {\n  error?: string;\n  isLoading?: boolean;\n  shouldDisablePasswordManager?: boolean;\n  expectedPassword?: string;\n  placeholder?: string;\n  hint?: string;\n  submitLabel?: string;\n  clearError?: NoneToVoidFunction;\n  onSubmit: (password: string) => void;\n  isActive?: boolean;\n  onReset: () => void;\n};\n\nconst EQUAL_PASSWORD_ERROR = 'Passwords Should Be Equal';\n\nconst SettingsPasswordForm: FC<OwnProps> = ({\n  isActive,\n  onReset,\n  error,\n  isLoading,\n  shouldDisablePasswordManager,\n  expectedPassword,\n  placeholder = 'Current Password',\n  hint,\n  submitLabel,\n  clearError,\n  onSubmit,\n}) => {\n  const [validationError, setValidationError] = useState<string>('');\n  const [shouldShowPassword, setShouldShowPassword] = useState(false);\n\n  const handleSubmit = useCallback((newPassword) => {\n    if (expectedPassword && newPassword !== expectedPassword) {\n      setValidationError(EQUAL_PASSWORD_ERROR);\n    } else {\n      onSubmit(newPassword);\n    }\n  }, [onSubmit, expectedPassword]);\n\n  const handleClearError = useCallback(() => {\n    if (clearError) {\n      clearError();\n    }\n    setValidationError('');\n  }, [clearError]);\n\n  const lang = useOldLang();\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  return (\n    <div className=\"settings-content password-form custom-scroll\">\n      <div className=\"settings-content-header no-border\">\n        <PasswordMonkey isBig isPasswordVisible={shouldShowPassword} />\n      </div>\n\n      <div className=\"settings-item pt-0\">\n        <PasswordForm\n          error={validationError || error}\n          hint={hint}\n          placeholder={placeholder}\n          shouldDisablePasswordManager={shouldDisablePasswordManager}\n          submitLabel={submitLabel || lang('Next')}\n          clearError={handleClearError}\n          isLoading={isLoading}\n          isPasswordVisible={shouldShowPassword}\n          shouldResetValue={isActive}\n          onChangePasswordVisibility={setShouldShowPassword}\n          onSubmit={handleSubmit}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default memo(SettingsPasswordForm);\n","import type { FC } from '../../../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../../../lib/teact/teact';\n\nimport { STICKER_SIZE_PASSCODE } from '../../../../config';\nimport { LOCAL_TGS_URLS } from '../../../common/helpers/animatedAssets';\n\nimport useHistoryBack from '../../../../hooks/useHistoryBack';\nimport useOldLang from '../../../../hooks/useOldLang';\n\nimport AnimatedIcon from '../../../common/AnimatedIcon';\nimport Button from '../../../ui/Button';\n\ntype OwnProps = {\n  isActive?: boolean;\n  onReset: (forceReturnToChatList?: boolean) => void;\n};\n\nconst SettingsPasscodeCongratulations: FC<OwnProps> = ({\n  isActive, onReset,\n}) => {\n  const lang = useOldLang();\n\n  const fullReset = useCallback(() => {\n    onReset(true);\n  }, [onReset]);\n\n  useHistoryBack({ isActive, onBack: onReset });\n\n  return (\n    <div className=\"settings-content local-passcode custom-scroll\">\n      <div className=\"settings-content-header no-border\">\n        <AnimatedIcon\n          size={STICKER_SIZE_PASSCODE}\n          tgsUrl={LOCAL_TGS_URLS.Congratulations}\n          className=\"settings-content-icon\"\n        />\n\n        <p className=\"settings-item-description mb-3\" dir=\"auto\">\n          Congratulations!\n        </p>\n        <p className=\"settings-item-description mb-3\" dir=\"auto\">\n          Now you can lock the app with a passcode so that others can&apos;t open it.\n        </p>\n      </div>\n\n      <div className=\"settings-item pt-0\">\n        <Button onClick={fullReset}>{lang('Back')}</Button>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(SettingsPasscodeCongratulations);\n","import type { FC } from '../../../../lib/teact/teact';\nimport React, { memo } from '../../../../lib/teact/teact';\n\nimport { SettingsScreens } from '../../../../types';\n\nimport { LOCAL_TGS_URLS } from '../../../common/helpers/animatedAssets';\n\nimport useHistoryBack from '../../../../hooks/useHistoryBack';\nimport useOldLang from '../../../../hooks/useOldLang';\n\nimport AnimatedIconWithPreview from '../../../common/AnimatedIconWithPreview';\nimport ListItem from '../../../ui/ListItem';\n\nimport lockPreviewUrl from '../../../../assets/lock.png';\n\ntype OwnProps = {\n  isActive?: boolean;\n  onScreenSelect: (screen: SettingsScreens) => void;\n  onReset: () => void;\n};\n\nconst SettingsPasscodeEnabled: FC<OwnProps> = ({\n  isActive, onReset, onScreenSelect,\n}) => {\n  const lang = useOldLang();\n\n  useHistoryBack({ isActive, onBack: onReset });\n\n  return (\n    <div className=\"settings-content local-passcode custom-scroll\">\n      <div className=\"settings-content-header no-border\">\n        <AnimatedIconWithPreview\n          tgsUrl={LOCAL_TGS_URLS.Lock}\n          previewUrl={lockPreviewUrl}\n          size={160}\n          className=\"settings-content-icon\"\n        />\n\n        <p className=\"settings-item-description mb-3\" dir=\"auto\">\n          Local passcode is enabled.\n        </p>\n      </div>\n\n      <div className=\"settings-item pt-0\">\n        <ListItem\n          icon=\"edit\"\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onScreenSelect(SettingsScreens.PasscodeChangePasscodeCurrent)}\n        >\n          {lang('Passcode.Change')}\n        </ListItem>\n        <ListItem\n          icon=\"password-off\"\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onScreenSelect(SettingsScreens.PasscodeTurnOff)}\n        >\n          {lang('Passcode.TurnOff')}\n        </ListItem>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(SettingsPasscodeEnabled);\n","import type { FC } from '../../../../lib/teact/teact';\nimport React, { memo } from '../../../../lib/teact/teact';\n\nimport { STICKER_SIZE_PASSCODE } from '../../../../config';\nimport { LOCAL_TGS_URLS } from '../../../common/helpers/animatedAssets';\n\nimport useHistoryBack from '../../../../hooks/useHistoryBack';\nimport useOldLang from '../../../../hooks/useOldLang';\n\nimport AnimatedIconWithPreview from '../../../common/AnimatedIconWithPreview';\nimport Button from '../../../ui/Button';\n\nimport lockPreviewUrl from '../../../../assets/lock.png';\n\ntype OwnProps = {\n  onStart: NoneToVoidFunction;\n  isActive?: boolean;\n  onReset: () => void;\n};\n\nconst SettingsPasscodeStart: FC<OwnProps> = ({\n  isActive, onReset, onStart,\n}) => {\n  const lang = useOldLang();\n\n  useHistoryBack({ isActive, onBack: onReset });\n\n  return (\n    <div className=\"settings-content local-passcode custom-scroll\">\n      <div className=\"settings-content-header no-border\">\n        <AnimatedIconWithPreview\n          tgsUrl={LOCAL_TGS_URLS.Lock}\n          previewUrl={lockPreviewUrl}\n          size={STICKER_SIZE_PASSCODE}\n          className=\"settings-content-icon\"\n        />\n\n        <p className=\"settings-item-description\" dir=\"auto\">\n          When you set up an additional passcode, a lock icon will appear on the chats page.\n          Tap it to lock and unlock your Telegram Web A.\n        </p>\n        <p className=\"settings-item-description mb-3\" dir=\"auto\">\n          Note: if you forget your local passcode, you&apos;ll need to log out of Telegram Web A and log in again.\n        </p>\n      </div>\n\n      <div className=\"settings-item pt-0\">\n        <Button onClick={onStart}>{lang('EnablePasscode')}</Button>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(SettingsPasscodeStart);\n","import type { FC } from '../../../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../../global';\n\nimport type { GlobalState } from '../../../../global/types';\nimport { SettingsScreens } from '../../../../types';\n\nimport { decryptSession } from '../../../../util/passcode';\n\nimport useOldLang from '../../../../hooks/useOldLang';\n\nimport SettingsPasscodeForm from '../SettingsPasswordForm';\nimport SettingsPasscodeCongratulations from './SettingsPasscodeCongratulations';\nimport SettingsPasscodeEnabled from './SettingsPasscodeEnabled';\nimport SettingsPasscodeStart from './SettingsPasscodeStart';\n\nexport type OwnProps = {\n  passcode: string;\n  currentScreen: SettingsScreens;\n  shownScreen: SettingsScreens;\n  isActive?: boolean;\n  onSetPasscode: (passcode: string) => void;\n  onScreenSelect: (screen: SettingsScreens) => void;\n  onReset: () => void;\n};\n\ntype StateProps = GlobalState['passcode'];\n\nconst SettingsPasscode: FC<OwnProps & StateProps> = ({\n  passcode,\n  currentScreen,\n  shownScreen,\n  error,\n  isActive,\n  isLoading,\n  onScreenSelect,\n  onSetPasscode,\n  onReset,\n}) => {\n  const {\n    setPasscode,\n    clearPasscode,\n    setPasscodeError,\n    clearPasscodeError,\n  } = getActions();\n\n  const lang = useOldLang();\n\n  const handleStartWizard = useCallback(() => {\n    onSetPasscode('');\n    onScreenSelect(SettingsScreens.PasscodeNewPasscode);\n  }, [onScreenSelect, onSetPasscode]);\n\n  const handleNewPassword = useCallback((value: string) => {\n    onSetPasscode(value);\n    onScreenSelect(SettingsScreens.PasscodeNewPasscodeConfirm);\n  }, [onScreenSelect, onSetPasscode]);\n\n  const handleNewPasswordConfirm = useCallback(() => {\n    setPasscode({ passcode });\n    onSetPasscode('');\n    onScreenSelect(SettingsScreens.PasscodeCongratulations);\n  }, [onScreenSelect, onSetPasscode, passcode, setPasscode]);\n\n  const handleChangePasswordCurrent = useCallback((currentPasscode: string) => {\n    onSetPasscode('');\n    decryptSession(currentPasscode).then(() => {\n      onScreenSelect(SettingsScreens.PasscodeChangePasscodeNew);\n    }, () => {\n      setPasscodeError({\n        error: lang('PasscodeController.Error.Current'),\n      });\n    });\n  }, [lang, onScreenSelect, onSetPasscode, setPasscodeError]);\n\n  const handleChangePasswordNew = useCallback((value: string) => {\n    onSetPasscode(value);\n    onScreenSelect(SettingsScreens.PasscodeChangePasscodeConfirm);\n  }, [onScreenSelect, onSetPasscode]);\n\n  const handleTurnOff = useCallback((currentPasscode: string) => {\n    decryptSession(currentPasscode).then(() => {\n      clearPasscode();\n      onScreenSelect(SettingsScreens.Privacy);\n    }, () => {\n      setPasscodeError({\n        error: lang('PasscodeController.Error.Current'),\n      });\n    });\n  }, [clearPasscode, lang, onScreenSelect, setPasscodeError]);\n\n  switch (currentScreen) {\n    case SettingsScreens.PasscodeDisabled:\n      return (\n        <SettingsPasscodeStart\n          onStart={handleStartWizard}\n          isActive={isActive || [\n            SettingsScreens.PasscodeNewPasscode,\n            SettingsScreens.PasscodeNewPasscodeConfirm,\n            SettingsScreens.PasscodeCongratulations,\n          ].includes(shownScreen)}\n          onReset={onReset}\n        />\n      );\n\n    case SettingsScreens.PasscodeNewPasscode:\n      return (\n        <SettingsPasscodeForm\n          shouldDisablePasswordManager\n          placeholder={lang('EnterNewPasscode')}\n          submitLabel={lang('Continue')}\n          onSubmit={handleNewPassword}\n          isActive={isActive || [\n            SettingsScreens.PasscodeNewPasscodeConfirm,\n            SettingsScreens.PasscodeCongratulations,\n          ].includes(shownScreen)}\n          onReset={onReset}\n        />\n      );\n\n    case SettingsScreens.PasscodeNewPasscodeConfirm:\n      return (\n        <SettingsPasscodeForm\n          shouldDisablePasswordManager\n          expectedPassword={passcode}\n          placeholder={lang('ReEnterYourPasscode')}\n          submitLabel={lang('Continue')}\n          isLoading={isLoading}\n          onSubmit={handleNewPasswordConfirm}\n          isActive={isActive || [\n            SettingsScreens.PasscodeCongratulations,\n          ].includes(shownScreen)}\n          onReset={onReset}\n        />\n      );\n\n    case SettingsScreens.PasscodeCongratulations:\n      return (\n        <SettingsPasscodeCongratulations\n          isActive={isActive}\n          onReset={onReset}\n        />\n      );\n\n    case SettingsScreens.PasscodeEnabled:\n      return (\n        <SettingsPasscodeEnabled\n          onScreenSelect={onScreenSelect}\n          isActive={isActive || [\n            SettingsScreens.PasscodeChangePasscodeCurrent,\n            SettingsScreens.PasscodeChangePasscodeNew,\n            SettingsScreens.PasscodeChangePasscodeConfirm,\n            SettingsScreens.PasscodeCongratulations,\n            SettingsScreens.PasscodeTurnOff,\n          ].includes(shownScreen)}\n          onReset={onReset}\n        />\n      );\n\n    case SettingsScreens.PasscodeChangePasscodeCurrent:\n      return (\n        <SettingsPasscodeForm\n          shouldDisablePasswordManager\n          error={error}\n          clearError={clearPasscodeError}\n          placeholder={lang('PasscodeController.Current.Placeholder')}\n          onSubmit={handleChangePasswordCurrent}\n          isActive={isActive || [\n            SettingsScreens.PasscodeChangePasscodeNew,\n            SettingsScreens.PasscodeChangePasscodeConfirm,\n            SettingsScreens.PasscodeCongratulations,\n          ].includes(shownScreen)}\n          onReset={onReset}\n        />\n      );\n\n    case SettingsScreens.PasscodeChangePasscodeNew:\n      return (\n        <SettingsPasscodeForm\n          shouldDisablePasswordManager\n          placeholder={lang('PleaseEnterNewFirstPassword')}\n          onSubmit={handleChangePasswordNew}\n          isActive={isActive || [\n            SettingsScreens.PasscodeChangePasscodeConfirm,\n            SettingsScreens.PasscodeCongratulations,\n          ].includes(shownScreen)}\n          onReset={onReset}\n        />\n      );\n\n    case SettingsScreens.PasscodeChangePasscodeConfirm:\n      return (\n        <SettingsPasscodeForm\n          shouldDisablePasswordManager\n          expectedPassword={passcode}\n          placeholder={lang('PasscodeController.ReEnterPasscode.Placeholder')}\n          isLoading={isLoading}\n          onSubmit={handleNewPasswordConfirm}\n          isActive={isActive || [\n            SettingsScreens.PasscodeCongratulations,\n          ].includes(shownScreen)}\n          onReset={onReset}\n        />\n      );\n\n    case SettingsScreens.PasscodeTurnOff:\n      return (\n        <SettingsPasscodeForm\n          shouldDisablePasswordManager\n          error={error ? lang(error) : undefined}\n          clearError={clearPasscodeError}\n          placeholder={lang('PasscodeController.Current.Placeholder')}\n          onSubmit={handleTurnOff}\n          isActive={isActive}\n          onReset={onReset}\n        />\n      );\n\n    default:\n      return undefined;\n  }\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => ({ ...global.passcode }),\n)(SettingsPasscode));\n","import React, { memo } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiPremiumSection } from '../../../global/types';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport StarIcon from '../../common/icons/StarIcon';\nimport ListItem from '../../ui/ListItem';\n\ntype OwnProps = {\n  premiumSection?: ApiPremiumSection;\n};\n\nfunction PremiumStatusItem({ premiumSection }: OwnProps) {\n  const { openPremiumModal } = getActions();\n  const lang = useOldLang();\n  const handleOpenPremiumModal = useLastCallback(() => openPremiumModal({ initialSection: premiumSection }));\n\n  return (\n    <div className=\"settings-item\">\n      <ListItem\n        leftElement={<StarIcon className=\"icon ListItem-main-icon\" type=\"premium\" size=\"big\" />}\n        onClick={handleOpenPremiumModal}\n      >\n        {lang('PrivacyLastSeenPremium')}\n      </ListItem>\n      <p\n        className=\"settings-item-description-larger premium-info\"\n        dir={lang.isRtl ? 'rtl' : undefined}\n      >\n        {lang('lng_messages_privacy_premium_about')}\n      </p>\n    </div>\n  );\n}\n\nexport default memo(PremiumStatusItem);\n","import React, { memo } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Icon from '../../common/icons/Icon';\n\nimport styles from './PrivacyLockedOption.module.scss';\n\ntype OwnProps = {\n  label: string;\n};\n\nfunction PrivacyLockedOption({ label }: OwnProps) {\n  const lang = useOldLang();\n  const { showNotification } = getActions();\n\n  return (\n    <div\n      className={styles.contactsAndPremiumOptionTitle}\n      onClick={() => showNotification({ message: lang('OptionPremiumRequiredMessage') })}\n    >\n      <span>{label}</span>\n      <Icon name=\"lock-badge\" className={styles.lockIcon} />\n    </div>\n  );\n}\n\nexport default memo(PrivacyLockedOption);\n","// extracted by mini-css-extract-plugin\nexport default {\"contacts_and_premium_option-title\":\"TGUdGos3\",\"contactsAndPremiumOptionTitle\":\"TGUdGos3\",\"lock-icon\":\"jWxrRbkh\",\"lockIcon\":\"jWxrRbkh\"};","import React, { memo, useMemo } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport { selectIsCurrentUserPremium, selectNewNoncontactPeersRequirePremium } from '../../../global/selectors';\n\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport RadioGroup from '../../ui/RadioGroup';\nimport PremiumStatusItem from './PremiumStatusItem';\nimport PrivacyLockedOption from './PrivacyLockedOption';\n\ntype OwnProps = {\n  isActive?: boolean;\n  onReset: VoidFunction;\n};\n\ntype StateProps = {\n  shouldNewNonContactPeersRequirePremium?: boolean;\n  canLimitNewMessagesWithoutPremium?: boolean;\n  isCurrentUserPremium?: boolean;\n};\n\nfunction PrivacyMessages({\n  isActive,\n  canLimitNewMessagesWithoutPremium,\n  shouldNewNonContactPeersRequirePremium,\n  isCurrentUserPremium,\n  onReset,\n}: OwnProps & StateProps) {\n  const { updateGlobalPrivacySettings } = getActions();\n  const lang = useOldLang();\n\n  const canChange = isCurrentUserPremium || canLimitNewMessagesWithoutPremium;\n\n  const options = useMemo(() => {\n    return [\n      { value: 'everybody', label: lang('P2PEverybody') },\n      {\n        value: 'contacts_and_premium',\n        label: canChange ? (\n          lang('PrivacyMessagesContactsAndPremium')\n        ) : (\n          <PrivacyLockedOption label={lang('PrivacyMessagesContactsAndPremium')} />\n        ),\n        hidden: !canChange,\n      },\n    ];\n  }, [lang, canChange]);\n\n  const handleChange = useLastCallback((privacy: string) => {\n    updateGlobalPrivacySettings({ shouldNewNonContactPeersRequirePremium: privacy === 'contacts_and_premium' });\n  });\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  return (\n    <>\n      <div className=\"settings-item\">\n        <h4 className=\"settings-item-header\" dir={lang.isRtl ? 'rtl' : undefined}>\n          {lang('PrivacyMessagesTitle')}\n        </h4>\n        <RadioGroup\n          name=\"privacy-messages\"\n          options={options}\n          onChange={handleChange}\n          selected={shouldNewNonContactPeersRequirePremium ? 'contacts_and_premium' : 'everybody'}\n        />\n        <p className=\"settings-item-description-larger\" dir={lang.isRtl ? 'rtl' : undefined}>\n          {lang('Privacy.Messages.SectionFooter')}\n        </p>\n      </div>\n      {!canChange && <PremiumStatusItem premiumSection=\"message_privacy\" />}\n    </>\n  );\n}\n\nexport default memo(withGlobal<OwnProps>((global): StateProps => {\n  return {\n    shouldNewNonContactPeersRequirePremium: selectNewNoncontactPeersRequirePremium(global),\n    isCurrentUserPremium: selectIsCurrentUserPremium(global),\n    canLimitNewMessagesWithoutPremium: global.appConfig?.canLimitNewMessagesWithoutPremium,\n  };\n})(PrivacyMessages));\n","import type { ApiSession } from '../../../../api/types';\nimport type { DeviceType } from '../../../../types/icons/device';\n\nexport default function getSessionIcon(session: ApiSession): DeviceType {\n  const platform = session.platform.toLowerCase();\n  const device = session.deviceModel.toLowerCase();\n  const systemVersion = session.systemVersion.toLowerCase();\n\n  if (device.includes('xbox')) {\n    return 'xbox';\n  }\n\n  if (device.includes('chrome') && !device.includes('chromebook')) {\n    return 'chrome';\n  }\n  if (device.includes('brave')) {\n    return 'brave';\n  }\n  if (device.includes('vivaldi')) {\n    return 'vivaldi';\n  }\n  if (device.includes('safari')) {\n    return 'safari';\n  }\n  if (device.includes('firefox')) {\n    return 'firefox';\n  }\n  if (device.includes('opera')) {\n    return 'opera';\n  }\n  if (device.includes('samsungbrowser')) {\n    return 'samsung';\n  }\n  if (platform.includes('android')) {\n    return 'android';\n  }\n  if (\n    device.includes('iphone')\n    || device.includes('ipad')\n    || platform.includes('ios')\n    || platform.includes('macos')\n    || systemVersion.includes('macos')\n  ) {\n    return 'apple';\n  }\n  if (platform.includes('ubuntu') || systemVersion.includes('ubuntu')) {\n    return 'ubuntu';\n  }\n  if (platform.includes('linux') || systemVersion.includes('linux')) {\n    return 'linux';\n  }\n  if (platform.includes('windows') || systemVersion.includes('windows')) {\n    return 'windows';\n  }\n\n  return 'unknown';\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"SettingsActiveSession\":\"M84mrPgu\",\"settingsActiveSession\":\"M84mrPgu\",\"iconDevice\":\"Add8P_K4\",\"iconDevice__android\":\"onkXVGY4\",\"iconDeviceAndroid\":\"onkXVGY4\",\"iconDevice__apple\":\"xw13aT8u\",\"iconDeviceApple\":\"xw13aT8u\",\"iconDevice__brave\":\"HESrGUdv\",\"iconDeviceBrave\":\"HESrGUdv\",\"iconDevice__chrome\":\"Vpej7wm7\",\"iconDeviceChrome\":\"Vpej7wm7\",\"iconDevice__edge\":\"ueWE77x9\",\"iconDeviceEdge\":\"ueWE77x9\",\"iconDevice__firefox\":\"_lMTmvya\",\"iconDeviceFirefox\":\"_lMTmvya\",\"iconDevice__linux\":\"cDVfvyG_\",\"iconDeviceLinux\":\"cDVfvyG_\",\"iconDevice__opera\":\"nWqlTxZt\",\"iconDeviceOpera\":\"nWqlTxZt\",\"iconDevice__safari\":\"ldFLp1Gf\",\"iconDeviceSafari\":\"ldFLp1Gf\",\"iconDevice__samsung\":\"VHNORBGL\",\"iconDeviceSamsung\":\"VHNORBGL\",\"iconDevice__ubuntu\":\"QBVivtdu\",\"iconDeviceUbuntu\":\"QBVivtdu\",\"iconDevice__unknown\":\"GbjIgrwU\",\"iconDeviceUnknown\":\"GbjIgrwU\",\"iconDevice__vivaldi\":\"yieVnjoI\",\"iconDeviceVivaldi\":\"yieVnjoI\",\"iconDevice__windows\":\"_0dnTFOE\",\"iconDeviceWindows\":\"_0dnTFOE\",\"iconDevice__xbox\":\"fbCjjDpU\",\"iconDeviceXbox\":\"fbCjjDpU\",\"title\":\"c6edjhlh\",\"note\":\"lRqTZAYn\",\"date\":\"oLnN6crs\",\"box\":\"wVEXuPlZ\",\"actionHeader\":\"olQS2T1n\",\"actionName\":\"KuX1APpO\",\"headerButton\":\"VT8pZfMu\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiSession } from '../../../api/types';\n\nimport buildClassName from '../../../util/buildClassName';\nimport { formatDateTimeToString } from '../../../util/dates/dateFormat';\nimport getSessionIcon from './helpers/getSessionIcon';\n\nimport useCurrentOrPrev from '../../../hooks/useCurrentOrPrev';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Button from '../../ui/Button';\nimport ListItem from '../../ui/ListItem';\nimport Modal from '../../ui/Modal';\nimport Switcher from '../../ui/Switcher';\n\nimport styles from './SettingsActiveSession.module.scss';\n\ntype OwnProps = {\n  isOpen: boolean;\n  hash?: string;\n  onClose: () => void;\n};\n\ntype StateProps = {\n  session?: ApiSession;\n};\n\nconst SettingsActiveSession: FC<OwnProps & StateProps> = ({\n  isOpen, session, onClose,\n}) => {\n  const { changeSessionSettings, terminateAuthorization } = getActions();\n  const lang = useOldLang();\n\n  const renderingSession = useCurrentOrPrev(session, true);\n\n  const handleSecretChatsStateChange = useCallback(() => {\n    changeSessionSettings({\n      hash: session!.hash,\n      areSecretChatsEnabled: !session!.areSecretChatsEnabled,\n    });\n  }, [changeSessionSettings, session]);\n\n  const handleCallsStateChange = useCallback(() => {\n    changeSessionSettings({\n      hash: session!.hash,\n      areCallsEnabled: !session!.areCallsEnabled,\n    });\n  }, [changeSessionSettings, session]);\n\n  const handleTerminateSessionClick = useCallback(() => {\n    terminateAuthorization({ hash: session!.hash });\n    onClose();\n  }, [onClose, session, terminateAuthorization]);\n\n  if (!renderingSession) {\n    return undefined;\n  }\n\n  function renderHeader() {\n    return (\n      <div className=\"modal-header-condensed\" dir={lang.isRtl ? 'rtl' : undefined}>\n        <Button round color=\"translucent\" size=\"smaller\" ariaLabel={lang('Close')} onClick={onClose}>\n          <i className=\"icon icon-close\" />\n        </Button>\n        <div className=\"modal-title\">{lang('SessionPreview.Title')}</div>\n        <Button\n          color=\"danger\"\n          onClick={handleTerminateSessionClick}\n          className={buildClassName('modal-action-button', styles.headerButton)}\n        >\n          {lang('SessionPreview.TerminateSession')}\n        </Button>\n      </div>\n    );\n  }\n  return (\n    <Modal\n      header={renderHeader()}\n      isOpen={isOpen}\n      hasCloseButton\n      onClose={onClose}\n      className={styles.SettingsActiveSession}\n    >\n      <div className={buildClassName(\n        styles.iconDevice,\n        renderingSession && styles[`iconDevice__${getSessionIcon(renderingSession)}`],\n      )}\n      />\n      <h3 className={styles.title} dir=\"auto\">{renderingSession?.deviceModel}</h3>\n      <div className={styles.date} aria-label={lang('PrivacySettings.LastSeen')}>\n        {formatDateTimeToString(renderingSession.dateActive * 1000, lang.code)}\n      </div>\n\n      <dl className={styles.box}>\n        <dt>{lang('SessionPreview.App')}</dt>\n        <dd>\n          {renderingSession?.appName} {renderingSession?.appVersion},{' '}\n          {renderingSession?.platform} {renderingSession?.systemVersion}\n        </dd>\n\n        <dt>{lang('SessionPreview.Ip')}</dt>\n        <dd>{renderingSession?.ip}</dd>\n\n        <dt>{lang('SessionPreview.Location')}</dt>\n        <dd>{renderingSession && getLocation(renderingSession)}</dd>\n      </dl>\n\n      <p className={styles.note}>{lang('SessionPreview.IpDesc')}</p>\n\n      <h4 className={styles.actionHeader}>{lang('AuthSessions.View.AcceptTitle')}</h4>\n\n      <ListItem onClick={handleSecretChatsStateChange}>\n        <span className={styles.actionName}>{lang('SessionPreview.Accept.Secret')}</span>\n        <Switcher\n          id=\"accept_secrets\"\n          label=\"On\"\n          checked={renderingSession.areSecretChatsEnabled}\n        />\n      </ListItem>\n      <ListItem onClick={handleCallsStateChange}>\n        <span className={styles.actionName}>{lang('SessionPreview.Accept.Calls')}</span>\n        <Switcher\n          id=\"accept_calls\"\n          label=\"On\"\n          checked={renderingSession.areCallsEnabled}\n        />\n      </ListItem>\n    </Modal>\n  );\n};\n\nfunction getLocation(session: ApiSession) {\n  return [session.region, session.country].filter(Boolean).join(', ');\n}\n\nexport default memo(withGlobal<OwnProps>((global, { hash }) => {\n  return {\n    session: hash ? global.activeSessions.byHash[hash] : undefined,\n  };\n})(SettingsActiveSession));\n","/* eslint-disable react/jsx-no-bind */\nimport type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useMemo, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiSession } from '../../../api/types';\n\nimport { formatPastTimeShort } from '../../../util/dates/dateFormat';\nimport getSessionIcon from './helpers/getSessionIcon';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport ConfirmDialog from '../../ui/ConfirmDialog';\nimport ListItem from '../../ui/ListItem';\nimport RadioGroup from '../../ui/RadioGroup';\nimport SettingsActiveSession from './SettingsActiveSession';\n\nimport './SettingsActiveSessions.scss';\n\ntype OwnProps = {\n  isActive?: boolean;\n  onReset: () => void;\n};\n\ntype StateProps = {\n  byHash: Record<string, ApiSession>;\n  orderedHashes: string[];\n  ttlDays?: number;\n};\n\nconst SettingsActiveSessions: FC<OwnProps & StateProps> = ({\n  isActive,\n  onReset,\n  byHash,\n  orderedHashes,\n  ttlDays,\n}) => {\n  const {\n    terminateAuthorization,\n    terminateAllAuthorizations,\n    changeSessionTtl,\n  } = getActions();\n\n  const lang = useOldLang();\n  const [isConfirmTerminateAllDialogOpen, openConfirmTerminateAllDialog, closeConfirmTerminateAllDialog] = useFlag();\n  const [openedSessionHash, setOpenedSessionHash] = useState<string | undefined>();\n  const [isModalOpen, openModal, closeModal] = useFlag();\n\n  const autoTerminateValue = useMemo(() => {\n    // eslint-disable-next-line max-len\n    // https://github.com/DrKLO/Telegram/blob/96dce2c9aabc33b87db61d830aa087b6b03fe397/TMessagesProj/src/main/java/org/telegram/ui/SessionsActivity.java#L195\n    if (ttlDays === undefined) {\n      return undefined;\n    }\n\n    if (ttlDays <= 7) {\n      return '7';\n    }\n\n    if (ttlDays <= 30) {\n      return '30';\n    }\n\n    if (ttlDays <= 93) {\n      return '90';\n    }\n\n    if (ttlDays <= 183) {\n      return '183';\n    }\n\n    if (ttlDays > 183) {\n      return '365';\n    }\n\n    return undefined;\n  }, [ttlDays]);\n\n  const AUTO_TERMINATE_OPTIONS = useMemo(() => {\n    const options = [{\n      label: lang('Weeks', 1, 'i'),\n      value: '7',\n    }, {\n      label: lang('Months', 1, 'i'),\n      value: '30',\n    }, {\n      label: lang('Months', 3, 'i'),\n      value: '90',\n    }, {\n      label: lang('Months', 6, 'i'),\n      value: '183',\n    }];\n    if (ttlDays && ttlDays >= 365) {\n      options.push({\n        label: lang('Years', 1, 'i'),\n        value: '365',\n      });\n    }\n    return options;\n  }, [lang, ttlDays]);\n\n  const handleTerminateSessionClick = useCallback((hash: string) => {\n    terminateAuthorization({ hash });\n  }, [terminateAuthorization]);\n\n  const handleTerminateAllSessions = useCallback(() => {\n    closeConfirmTerminateAllDialog();\n    terminateAllAuthorizations();\n  }, [closeConfirmTerminateAllDialog, terminateAllAuthorizations]);\n\n  const handleOpenSessionModal = useCallback((hash: string) => {\n    setOpenedSessionHash(hash);\n    openModal();\n  }, [openModal]);\n\n  const handleCloseSessionModal = useCallback(() => {\n    setOpenedSessionHash(undefined);\n    closeModal();\n  }, [closeModal]);\n\n  const handleChangeSessionTtl = useCallback((value: string) => {\n    changeSessionTtl({ days: Number(value) });\n  }, [changeSessionTtl]);\n\n  const currentSession = useMemo(() => {\n    const currentSessionHash = orderedHashes.find((hash) => byHash[hash].isCurrent);\n\n    return currentSessionHash ? byHash[currentSessionHash] : undefined;\n  }, [byHash, orderedHashes]);\n\n  const otherSessionHashes = useMemo(() => {\n    return orderedHashes.filter((hash) => !byHash[hash].isCurrent);\n  }, [byHash, orderedHashes]);\n  const hasOtherSessions = Boolean(otherSessionHashes.length);\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  function renderCurrentSession(session: ApiSession) {\n    return (\n      <div className=\"settings-item\">\n        <h4 className=\"settings-item-header\" dir={lang.isRtl ? 'rtl' : undefined}>\n          {lang('AuthSessions.CurrentSession')}\n        </h4>\n\n        <ListItem narrow inactive icon={`device-${getSessionIcon(session)}`} iconClassName=\"icon-device\">\n          <div className=\"multiline-menu-item full-size\" dir=\"auto\">\n            <span className=\"title\" dir=\"auto\">{session.deviceModel}</span>\n            <span className=\"subtitle black tight\">\n              {session.appName} {session.appVersion}, {session.platform} {session.systemVersion}\n            </span>\n            <span className=\"subtitle\">{session.ip} - {getLocation(session)}</span>\n          </div>\n        </ListItem>\n\n        {hasOtherSessions && (\n          <ListItem\n            className=\"destructive mb-0 no-icon\"\n            icon=\"stop\"\n            ripple\n            narrow\n            onClick={openConfirmTerminateAllDialog}\n          >\n            {lang('TerminateAllSessions')}\n          </ListItem>\n        )}\n      </div>\n    );\n  }\n\n  function renderOtherSessions(sessionHashes: string[]) {\n    return (\n      <div className=\"settings-item\">\n        <h4 className=\"settings-item-header\" dir={lang.isRtl ? 'rtl' : undefined}>\n          {lang('OtherSessions')}\n        </h4>\n\n        {sessionHashes.map(renderSession)}\n      </div>\n    );\n  }\n\n  function renderAutoTerminate() {\n    return (\n      <div className=\"settings-item\">\n        <h4 className=\"settings-item-header\" dir={lang.isRtl ? 'rtl' : undefined}>\n          {lang('TerminateOldSessionHeader')}\n        </h4>\n\n        <p className=\"settings-item-description-larger\">{lang('IfInactiveFor')}</p>\n        <RadioGroup\n          name=\"session_ttl\"\n          options={AUTO_TERMINATE_OPTIONS}\n          selected={autoTerminateValue}\n          onChange={handleChangeSessionTtl}\n        />\n      </div>\n    );\n  }\n\n  function renderSession(sessionHash: string) {\n    const session = byHash[sessionHash];\n\n    return (\n      <ListItem\n        key={session.hash}\n        ripple\n        narrow\n        contextActions={[{\n          title: 'Terminate',\n          icon: 'stop',\n          destructive: true,\n          handler: () => {\n            handleTerminateSessionClick(session.hash);\n          },\n        }]}\n        icon={`device-${getSessionIcon(session)}`}\n        iconClassName=\"icon-device\"\n        onClick={() => { handleOpenSessionModal(session.hash); }}\n      >\n        <div className=\"multiline-menu-item full-size\" dir=\"auto\">\n          <span className=\"date\">{formatPastTimeShort(lang, session.dateActive * 1000)}</span>\n          <span className=\"title\">{session.deviceModel}</span>\n          <span className=\"subtitle black tight\">\n            {session.appName} {session.appVersion}, {session.platform} {session.systemVersion}\n          </span>\n          <span className=\"subtitle\">{session.ip} {getLocation(session)}</span>\n        </div>\n      </ListItem>\n    );\n  }\n\n  return (\n    <div className=\"settings-content custom-scroll SettingsActiveSessions\">\n      {currentSession && renderCurrentSession(currentSession)}\n      {hasOtherSessions && renderOtherSessions(otherSessionHashes)}\n      {renderAutoTerminate()}\n      {hasOtherSessions && (\n        <ConfirmDialog\n          isOpen={isConfirmTerminateAllDialogOpen}\n          onClose={closeConfirmTerminateAllDialog}\n          text={lang('AreYouSureSessions')}\n          confirmLabel={lang('TerminateAllSessions')}\n          confirmHandler={handleTerminateAllSessions}\n          confirmIsDestructive\n          areButtonsInColumn\n        />\n      )}\n      <SettingsActiveSession isOpen={isModalOpen} hash={openedSessionHash} onClose={handleCloseSessionModal} />\n    </div>\n  );\n};\n\nfunction getLocation(session: ApiSession) {\n  return [session.region, session.country].filter(Boolean).join(', ');\n}\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => global.activeSessions,\n)(SettingsActiveSessions));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"Wd0fmiSY\",\"avatar\":\"OhZHdRsP\",\"title\":\"EQ7__xGn\",\"note\":\"YRYk96ki\",\"box\":\"kmCTIfvf\",\"action-header\":\"qkq5Fa0V\",\"actionHeader\":\"qkq5Fa0V\",\"action-name\":\"zFYUiy13\",\"actionName\":\"zFYUiy13\",\"header-button\":\"lUf0RJ2h\",\"headerButton\":\"lUf0RJ2h\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiUser, ApiWebSession } from '../../../api/types';\n\nimport buildClassName from '../../../util/buildClassName';\n\nimport useCurrentOrPrev from '../../../hooks/useCurrentOrPrev';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Avatar from '../../common/Avatar';\nimport FullNameTitle from '../../common/FullNameTitle';\nimport Button from '../../ui/Button';\nimport Modal from '../../ui/Modal';\n\nimport styles from './SettingsActiveWebsite.module.scss';\n\ntype OwnProps = {\n  isOpen: boolean;\n  hash?: string;\n  onClose: () => void;\n};\n\ntype StateProps = {\n  session?: ApiWebSession;\n  bot?: ApiUser;\n};\n\nconst SettingsActiveWebsite: FC<OwnProps & StateProps> = ({\n  isOpen,\n  session,\n  bot,\n  onClose,\n}) => {\n  const { terminateWebAuthorization } = getActions();\n  const lang = useOldLang();\n\n  const renderingSession = useCurrentOrPrev(session, true);\n  const renderingBot = useCurrentOrPrev(bot, true);\n\n  const handleTerminateSessionClick = useCallback(() => {\n    terminateWebAuthorization({ hash: session!.hash });\n    onClose();\n  }, [onClose, session, terminateWebAuthorization]);\n\n  if (!renderingSession) {\n    return undefined;\n  }\n\n  function renderHeader() {\n    return (\n      <div className=\"modal-header-condensed\" dir={lang.isRtl ? 'rtl' : undefined}>\n        <Button round color=\"translucent\" size=\"smaller\" ariaLabel={lang('Close')} onClick={onClose}>\n          <i className=\"icon icon-close\" />\n        </Button>\n        <div className=\"modal-title\">{lang('WebSessionsTitle')}</div>\n        <Button\n          color=\"danger\"\n          onClick={handleTerminateSessionClick}\n          className={buildClassName('modal-action-button', styles.headerButton)}\n        >\n          {lang('AuthSessions.LogOut')}\n        </Button>\n      </div>\n    );\n  }\n  return (\n    <Modal\n      header={renderHeader()}\n      isOpen={isOpen}\n      hasCloseButton\n      onClose={onClose}\n      className={styles.root}\n    >\n      <Avatar\n        className={styles.avatar}\n        peer={renderingBot}\n        size=\"large\"\n      />\n      {renderingBot && <FullNameTitle className={styles.title} peer={renderingBot} />}\n      <div className={styles.note}>\n        {renderingSession?.domain}\n      </div>\n\n      <dl className={styles.box}>\n        <dt>{lang('AuthSessions.View.Browser')}</dt>\n        <dd>\n          {renderingSession?.browser}\n        </dd>\n\n        <dt>{lang('SessionPreview.Ip')}</dt>\n        <dd>{renderingSession?.ip}</dd>\n\n        <dt>{lang('SessionPreview.Location')}</dt>\n        <dd>{renderingSession?.region}</dd>\n      </dl>\n      <p className={styles.note}>{lang('AuthSessions.View.LocationInfo')}</p>\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>((global, { hash }): StateProps => {\n  const session = hash ? global.activeWebSessions.byHash[hash] : undefined;\n  const bot = session ? global.users.byId[session.botId] : undefined;\n\n  return {\n    session,\n    bot,\n  };\n})(SettingsActiveWebsite));\n","// extracted by mini-css-extract-plugin\nexport default {\"avatar\":\"v0wP46TR\",\"clear-help\":\"WnnxcARX\",\"clearHelp\":\"WnnxcARX\",\"subtitle\":\"uEUfjByC\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../../global';\n\nimport type { ApiWebSession } from '../../../api/types';\n\nimport buildClassName from '../../../util/buildClassName';\nimport { formatPastTimeShort } from '../../../util/dates/dateFormat';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Avatar from '../../common/Avatar';\nimport FullNameTitle from '../../common/FullNameTitle';\nimport ConfirmDialog from '../../ui/ConfirmDialog';\nimport ListItem from '../../ui/ListItem';\nimport SettingsActiveWebsite from './SettingsActiveWebsite';\n\nimport styles from './SettingsActiveWebsites.module.scss';\n\ntype OwnProps = {\n  isActive?: boolean;\n  onReset: () => void;\n};\n\ntype StateProps = {\n  byHash: Record<string, ApiWebSession>;\n  orderedHashes: string[];\n};\n\nconst SettingsActiveWebsites: FC<OwnProps & StateProps> = ({\n  isActive,\n  byHash,\n  orderedHashes,\n  onReset,\n}) => {\n  const {\n    terminateWebAuthorization,\n    terminateAllWebAuthorizations,\n  } = getActions();\n\n  const lang = useOldLang();\n  const [isConfirmTerminateAllDialogOpen, openConfirmTerminateAllDialog, closeConfirmTerminateAllDialog] = useFlag();\n  const [openedWebsiteHash, setOpenedWebsiteHash] = useState<string | undefined>();\n  const [isModalOpen, openModal, closeModal] = useFlag();\n\n  const handleTerminateAuthClick = useCallback((hash: string) => {\n    terminateWebAuthorization({ hash });\n  }, [terminateWebAuthorization]);\n\n  const handleTerminateAllAuth = useCallback(() => {\n    closeConfirmTerminateAllDialog();\n    terminateAllWebAuthorizations();\n  }, [closeConfirmTerminateAllDialog, terminateAllWebAuthorizations]);\n\n  const handleOpenSessionModal = useCallback((hash: string) => {\n    setOpenedWebsiteHash(hash);\n    openModal();\n  }, [openModal]);\n\n  const handleCloseWebsiteModal = useCallback(() => {\n    setOpenedWebsiteHash(undefined);\n    closeModal();\n  }, [closeModal]);\n\n  // Close when empty\n  useEffect(() => {\n    if (!orderedHashes.length) {\n      onReset();\n    }\n  }, [onReset, orderedHashes]);\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  function renderSessions(sessionHashes: string[]) {\n    return (\n      <div className=\"settings-item\">\n        <h4 className=\"settings-item-header\" dir={lang.isRtl ? 'rtl' : undefined}>\n          {lang('WebSessionsTitle')}\n        </h4>\n\n        {sessionHashes.map(renderSession)}\n      </div>\n    );\n  }\n\n  function renderSession(sessionHash: string) {\n    const session = byHash[sessionHash];\n    const bot = getGlobal().users.byId[session.botId];\n\n    return (\n      <ListItem\n        key={session.hash}\n        ripple\n        narrow\n        contextActions={[{\n          title: 'Terminate',\n          icon: 'stop',\n          destructive: true,\n          handler: () => {\n            handleTerminateAuthClick(session.hash);\n          },\n        }]}\n        // eslint-disable-next-line react/jsx-no-bind\n        onClick={() => handleOpenSessionModal(session.hash)}\n      >\n        <Avatar className={styles.avatar} peer={bot} size=\"tiny\" />\n        <div className=\"multiline-menu-item full-size\" dir=\"auto\">\n          <span className=\"date\">{formatPastTimeShort(lang, session.dateActive * 1000)}</span>\n          {bot && <FullNameTitle className={styles.title} peer={bot} />}\n          <span className={buildClassName('subtitle', 'black', 'tight', styles.platform)}>\n            {session.domain}, {session.browser}, {session.platform}\n          </span>\n          <span className={buildClassName('subtitle', styles.subtitle)}>{session.ip} {session.region}</span>\n        </div>\n      </ListItem>\n    );\n  }\n\n  if (!orderedHashes.length) return undefined;\n\n  return (\n    <div className=\"settings-content custom-scroll\">\n      <div className=\"settings-item\">\n        <ListItem\n          className=\"destructive mb-0 no-icon\"\n          icon=\"stop\"\n          ripple\n          narrow\n          onClick={openConfirmTerminateAllDialog}\n        >\n          {lang('AuthSessions.LogOutApplications')}\n        </ListItem>\n        <p className={buildClassName('settings-item-description', styles.clearHelp)}>\n          {lang('ClearOtherWebSessionsHelp')}\n        </p>\n      </div>\n      {renderSessions(orderedHashes)}\n      <ConfirmDialog\n        isOpen={isConfirmTerminateAllDialogOpen}\n        onClose={closeConfirmTerminateAllDialog}\n        title={lang('AuthSessions.LogOutApplications')}\n        text={lang('AreYouSureWebSessions')}\n        confirmHandler={handleTerminateAllAuth}\n        confirmIsDestructive\n      />\n      <SettingsActiveWebsite isOpen={isModalOpen} hash={openedWebsiteHash} onClose={handleCloseWebsiteModal} />\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const { byHash, orderedHashes } = global.activeWebSessions;\n    return {\n      byHash,\n      orderedHashes,\n    };\n  },\n)(SettingsActiveWebsites));\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo } from '../../lib/teact/teact';\n\nimport type { ApiSticker, ApiStickerSet } from '../../api/types';\nimport type { ObserveFn } from '../../hooks/useIntersectionObserver';\n\nimport { CHAT_HEIGHT_PX, STICKER_SIZE_GENERAL_SETTINGS } from '../../config';\nimport buildClassName from '../../util/buildClassName';\n\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport StickerSetCover from '../middle/composer/StickerSetCover';\nimport Button from '../ui/Button';\nimport ListItem from '../ui/ListItem';\nimport StickerButton from './StickerButton';\n\nimport './StickerSetCard.scss';\n\ntype OwnProps = {\n  stickerSet?: ApiStickerSet;\n  noPlay?: boolean;\n  className?: string;\n  observeIntersection: ObserveFn;\n  onClick: (value: ApiSticker) => void;\n};\n\nconst StickerSetCard: FC<OwnProps> = ({\n  stickerSet,\n  noPlay,\n  className,\n  observeIntersection,\n  onClick,\n}) => {\n  const lang = useOldLang();\n\n  const firstSticker = stickerSet?.stickers?.[0];\n\n  const handleCardClick = useLastCallback(() => {\n    if (firstSticker) onClick(firstSticker);\n  });\n\n  if (!stickerSet?.stickers) {\n    return undefined;\n  }\n\n  function renderPreview() {\n    if (!stickerSet) return undefined;\n    if (stickerSet.hasThumbnail || !firstSticker) {\n      return (\n        <Button\n          ariaLabel={stickerSet.title}\n          color=\"translucent\"\n          isRtl={lang.isRtl}\n        >\n          <StickerSetCover\n            stickerSet={stickerSet}\n            size={STICKER_SIZE_GENERAL_SETTINGS}\n            noPlay={noPlay}\n            observeIntersection={observeIntersection}\n          />\n        </Button>\n      );\n    } else {\n      return (\n        <StickerButton\n          sticker={firstSticker}\n          size={STICKER_SIZE_GENERAL_SETTINGS}\n          title={stickerSet.title}\n          noPlay={noPlay}\n          observeIntersection={observeIntersection}\n          noContextMenu\n          isCurrentUserPremium\n          clickArg={undefined}\n        />\n      );\n    }\n  }\n\n  return (\n    <ListItem\n      narrow\n      className={buildClassName('StickerSetCard', 'chat-item-clickable small-icon', className)}\n      style={`height: ${CHAT_HEIGHT_PX}px;`}\n      inactive={!firstSticker}\n      onClick={handleCardClick}\n    >\n      {renderPreview()}\n      <div className=\"multiline-menu-item\">\n        <div className=\"title\">{stickerSet.title}</div>\n        <div className=\"subtitle\">{lang('StickerPack.StickerCount', stickerSet.count, 'i')}</div>\n      </div>\n    </ListItem>\n  );\n};\n\nexport default memo(StickerSetCard);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useMemo, useRef,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiSticker, ApiStickerSet } from '../../../api/types';\nimport type { ISettings } from '../../../types';\n\nimport { selectCanPlayAnimatedEmojis } from '../../../global/selectors';\nimport { pick } from '../../../util/iteratees';\nimport renderText from '../../common/helpers/renderText';\n\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport { useIntersectionObserver } from '../../../hooks/useIntersectionObserver';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport StickerSetCard from '../../common/StickerSetCard';\nimport Checkbox from '../../ui/Checkbox';\n\ntype OwnProps = {\n  isActive?: boolean;\n  onReset: () => void;\n};\n\ntype StateProps = Pick<ISettings, (\n  'shouldSuggestCustomEmoji'\n)> & {\n  customEmojiSetIds?: string[];\n  stickerSetsById: Record<string, ApiStickerSet>;\n  canPlayAnimatedEmojis: boolean;\n};\n\nconst SettingsCustomEmoji: FC<OwnProps & StateProps> = ({\n  isActive,\n  customEmojiSetIds,\n  stickerSetsById,\n  shouldSuggestCustomEmoji,\n  canPlayAnimatedEmojis,\n  onReset,\n}) => {\n  const { openStickerSet, setSettingOption } = getActions();\n  const lang = useOldLang();\n\n  // eslint-disable-next-line no-null/no-null\n  const stickerSettingsRef = useRef<HTMLDivElement>(null);\n  const { observe: observeIntersectionForCovers } = useIntersectionObserver({ rootRef: stickerSettingsRef });\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  const handleStickerSetClick = useCallback((sticker: ApiSticker) => {\n    openStickerSet({\n      stickerSetInfo: sticker.stickerSetInfo,\n    });\n  }, [openStickerSet]);\n\n  const handleSuggestCustomEmojiChange = useCallback((newValue: boolean) => {\n    setSettingOption({ shouldSuggestCustomEmoji: newValue });\n  }, [setSettingOption]);\n\n  const customEmojiSets = useMemo(() => (\n    customEmojiSetIds && Object.values(pick(stickerSetsById, customEmojiSetIds))\n  ), [customEmojiSetIds, stickerSetsById]);\n\n  return (\n    <div className=\"settings-content custom-scroll\">\n      {customEmojiSets && (\n        <div className=\"settings-item\">\n          <Checkbox\n            label={lang('SuggestAnimatedEmoji')}\n            checked={shouldSuggestCustomEmoji}\n            onCheck={handleSuggestCustomEmojiChange}\n          />\n          <div className=\"mt-4\" ref={stickerSettingsRef}>\n            {customEmojiSets.map((stickerSet: ApiStickerSet) => (\n              <StickerSetCard\n                key={stickerSet.id}\n                stickerSet={stickerSet}\n                observeIntersection={observeIntersectionForCovers}\n                onClick={handleStickerSetClick}\n                noPlay={!canPlayAnimatedEmojis}\n              />\n            ))}\n          </div>\n          <p className=\"settings-item-description mt-3\" dir=\"auto\">\n            {renderText(lang('EmojiBotInfo'), ['links'])}\n          </p>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    return {\n      ...pick(global.settings.byKey, [\n        'shouldSuggestCustomEmoji',\n      ]),\n      customEmojiSetIds: global.customEmojis.added.setIds,\n      stickerSetsById: global.stickers.setsById,\n      canPlayAnimatedEmojis: selectCanPlayAnimatedEmojis(global),\n    };\n  },\n)(SettingsCustomEmoji));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ISettings } from '../../../types';\n\nimport { AUTODOWNLOAD_FILESIZE_MB_LIMITS } from '../../../config';\nimport { pick } from '../../../util/iteratees';\n\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Checkbox from '../../ui/Checkbox';\nimport RangeSlider from '../../ui/RangeSlider';\n\ntype OwnProps = {\n  isActive?: boolean;\n  onReset: () => void;\n};\n\ntype StateProps = Pick<ISettings, (\n  'canAutoLoadPhotoFromContacts' |\n  'canAutoLoadPhotoInPrivateChats' |\n  'canAutoLoadPhotoInGroups' |\n  'canAutoLoadPhotoInChannels' |\n  'canAutoLoadVideoFromContacts' |\n  'canAutoLoadVideoInPrivateChats' |\n  'canAutoLoadVideoInGroups' |\n  'canAutoLoadVideoInChannels' |\n  'canAutoLoadFileFromContacts' |\n  'canAutoLoadFileInPrivateChats' |\n  'canAutoLoadFileInGroups' |\n  'canAutoLoadFileInChannels' |\n  'autoLoadFileMaxSizeMb'\n)>;\n\nconst SettingsDataStorage: FC<OwnProps & StateProps> = ({\n  isActive,\n  onReset,\n  canAutoLoadPhotoFromContacts,\n  canAutoLoadPhotoInPrivateChats,\n  canAutoLoadPhotoInGroups,\n  canAutoLoadPhotoInChannels,\n  canAutoLoadVideoFromContacts,\n  canAutoLoadVideoInPrivateChats,\n  canAutoLoadVideoInGroups,\n  canAutoLoadVideoInChannels,\n  canAutoLoadFileFromContacts,\n  canAutoLoadFileInPrivateChats,\n  canAutoLoadFileInGroups,\n  canAutoLoadFileInChannels,\n  autoLoadFileMaxSizeMb,\n}) => {\n  const { setSettingOption } = getActions();\n\n  const lang = useOldLang();\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  const renderFileSizeCallback = useCallback((value: number) => {\n    return lang('AutodownloadSizeLimitUpTo', lang('FileSize.MB', String(AUTODOWNLOAD_FILESIZE_MB_LIMITS[value]), 'i'));\n  }, [lang]);\n\n  const handleFileSizeChange = useCallback((value: number) => {\n    setSettingOption({ autoLoadFileMaxSizeMb: AUTODOWNLOAD_FILESIZE_MB_LIMITS[value] });\n  }, [setSettingOption]);\n\n  function renderContentSizeSlider() {\n    const value = AUTODOWNLOAD_FILESIZE_MB_LIMITS.indexOf(autoLoadFileMaxSizeMb);\n\n    return (\n      <div className=\"pt-5\">\n        <RangeSlider\n          label={lang('AutoDownloadMaxFileSize')}\n          min={0}\n          max={5}\n          value={value !== -1 ? value : 2}\n          renderValue={renderFileSizeCallback}\n          onChange={handleFileSizeChange}\n        />\n      </div>\n    );\n  }\n\n  function renderAutoDownloadBlock(\n    title: string,\n    key: 'Photo' | 'Video' | 'File',\n    canAutoLoadFromContacts: boolean,\n    canAutoLoadInPrivateChats: boolean,\n    canAutoLoadInGroups: boolean,\n    canAutoLoadInChannels: boolean,\n  ) {\n    return (\n      <div className=\"settings-item\">\n        <h4 className=\"settings-item-header\" dir={lang.isRtl ? 'rtl' : undefined}>{title}</h4>\n\n        <Checkbox\n          label={lang('AutoDownloadSettings.Contacts')}\n          checked={canAutoLoadFromContacts}\n          // TODO rewrite to support `useCallback`\n          // eslint-disable-next-line react/jsx-no-bind\n          onCheck={(isChecked) => setSettingOption({ [`canAutoLoad${key}FromContacts`]: isChecked })}\n        />\n        <Checkbox\n          label={lang('AutoDownloadSettings.PrivateChats')}\n          checked={canAutoLoadInPrivateChats}\n          // eslint-disable-next-line react/jsx-no-bind\n          onCheck={(isChecked) => setSettingOption({ [`canAutoLoad${key}InPrivateChats`]: isChecked })}\n        />\n        <Checkbox\n          label={lang('AutoDownloadSettings.GroupChats')}\n          checked={canAutoLoadInGroups}\n          // eslint-disable-next-line react/jsx-no-bind\n          onCheck={(isChecked) => setSettingOption({ [`canAutoLoad${key}InGroups`]: isChecked })}\n        />\n        <Checkbox\n          label={lang('AutoDownloadSettings.Channels')}\n          checked={canAutoLoadInChannels}\n          // eslint-disable-next-line react/jsx-no-bind\n          onCheck={(isChecked) => setSettingOption({ [`canAutoLoad${key}InChannels`]: isChecked })}\n        />\n\n        {key === 'File' && renderContentSizeSlider()}\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"settings-content custom-scroll\">\n      {renderAutoDownloadBlock(\n        lang('AutoDownloadPhotosTitle'),\n        'Photo',\n        canAutoLoadPhotoFromContacts,\n        canAutoLoadPhotoInPrivateChats,\n        canAutoLoadPhotoInGroups,\n        canAutoLoadPhotoInChannels,\n      )}\n      {renderAutoDownloadBlock(\n        lang('AutoDownloadVideosTitle'),\n        'Video',\n        canAutoLoadVideoFromContacts,\n        canAutoLoadVideoInPrivateChats,\n        canAutoLoadVideoInGroups,\n        canAutoLoadVideoInChannels,\n      )}\n      {renderAutoDownloadBlock(\n        'Auto-download files', // Proper translation is not available yet\n        'File',\n        canAutoLoadFileFromContacts,\n        canAutoLoadFileInPrivateChats,\n        canAutoLoadFileInGroups,\n        canAutoLoadFileInChannels,\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    return pick(global.settings.byKey, [\n      'canAutoLoadPhotoFromContacts',\n      'canAutoLoadPhotoInPrivateChats',\n      'canAutoLoadPhotoInGroups',\n      'canAutoLoadPhotoInChannels',\n      'canAutoLoadVideoFromContacts',\n      'canAutoLoadVideoInPrivateChats',\n      'canAutoLoadVideoInGroups',\n      'canAutoLoadVideoInChannels',\n      'canAutoLoadFileFromContacts',\n      'canAutoLoadFileInPrivateChats',\n      'canAutoLoadFileInGroups',\n      'canAutoLoadFileInChannels',\n      'autoLoadFileMaxSizeMb',\n    ]);\n  },\n)(SettingsDataStorage));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"Ys1i4ssl\",\"item\":\"skaVPMTF\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useMemo, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ISettings } from '../../../types';\n\nimport { SUPPORTED_TRANSLATION_LANGUAGES } from '../../../config';\nimport buildClassName from '../../../util/buildClassName';\nimport { partition } from '../../../util/iteratees';\n\nimport useEffectWithPrevDeps from '../../../hooks/useEffectWithPrevDeps';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport ItemPicker, { type ItemPickerOption } from '../../common/pickers/ItemPicker';\n\nimport styles from './SettingsDoNotTranslate.module.scss';\n\n// https://fasttext.cc/docs/en/language-identification.html\nconst LOCAL_SUPPORTED_DETECTION_LANGUAGES = [\n  'af', 'als', 'am', 'an', 'ar', 'arz', 'as', 'ast', 'av', 'az',\n  'azb', 'ba', 'bar', 'bcl', 'be', 'bg', 'bh', 'bn', 'bo', 'bpy',\n  'br', 'bs', 'bxr', 'ca', 'cbk', 'ce', 'ceb', 'ckb', 'co', 'cs',\n  'cv', 'cy', 'da', 'de', 'diq', 'dsb', 'dty', 'dv', 'el', 'eml',\n  'en', 'eo', 'es', 'et', 'eu', 'fa', 'fi', 'fr', 'frr', 'fy',\n  'ga', 'gd', 'gl', 'gn', 'gom', 'gu', 'gv', 'he', 'hi', 'hif',\n  'hr', 'hsb', 'ht', 'hu', 'hy', 'ia', 'id', 'ie', 'ilo', 'io',\n  'is', 'it', 'ja', 'jbo', 'jv', 'ka', 'kk', 'km', 'kn', 'ko',\n  'krc', 'ku', 'kv', 'kw', 'ky', 'la', 'lb', 'lez', 'li', 'lmo',\n  'lo', 'lrc', 'lt', 'lv', 'mai', 'mg', 'mhr', 'min', 'mk', 'ml',\n  'mn', 'mr', 'mrj', 'ms', 'mt', 'mwl', 'my', 'myv', 'mzn', 'nah',\n  'nap', 'nds', 'ne', 'new', 'nl', 'nn', 'no', 'oc', 'or', 'os',\n  'pa', 'pam', 'pfl', 'pl', 'pms', 'pnb', 'ps', 'pt', 'qu', 'rm',\n  'ro', 'ru', 'rue', 'sa', 'sah', 'sc', 'scn', 'sco', 'sd', 'sh',\n  'si', 'sk', 'sl', 'so', 'sq', 'sr', 'su', 'sv', 'sw', 'ta', 'te',\n  'tg', 'th', 'tk', 'tl', 'tr', 'tt', 'tyv', 'ug', 'uk', 'ur', 'uz',\n  'vec', 'vep', 'vi', 'vls', 'vo', 'wa', 'war', 'wuu', 'xal', 'xmf',\n  'yi', 'yo', 'yue', 'zh',\n];\n\nconst SUPPORTED_LANGUAGES = SUPPORTED_TRANSLATION_LANGUAGES.filter((lang: string) => (\n  LOCAL_SUPPORTED_DETECTION_LANGUAGES.includes(lang)\n));\n\ntype OwnProps = {\n  isActive?: boolean;\n  onReset: () => void;\n};\n\ntype StateProps = Pick<ISettings, 'doNotTranslate'>;\n\nconst SettingsDoNotTranslate: FC<OwnProps & StateProps> = ({\n  isActive,\n  doNotTranslate,\n  onReset,\n}) => {\n  const { setSettingOption } = getActions();\n\n  const lang = useOldLang();\n  const language = lang.code || 'en';\n  const [displayedOptions, setDisplayedOptions] = useState<string[]>([]);\n  const [searchQuery, setSearchQuery] = useState<string>('');\n\n  const displayedOptionList: ItemPickerOption[] = useMemo(() => {\n    const options = SUPPORTED_LANGUAGES.map((langCode: string) => {\n      const translatedNames = new Intl.DisplayNames([language], { type: 'language' });\n      const translatedName = translatedNames.of(langCode)!;\n\n      const originalNames = new Intl.DisplayNames([langCode], { type: 'language' });\n      const originalName = originalNames.of(langCode)!;\n\n      return {\n        langCode,\n        translatedName,\n        originalName,\n      };\n    }).filter(Boolean).map(({ langCode, translatedName, originalName }) => ({\n      label: translatedName,\n      subLabel: originalName,\n      value: langCode,\n    }));\n\n    if (!searchQuery.trim()) {\n      const currentLanguageOption = options.find((option) => option.value === language);\n      const otherOptionList = options.filter((option) => option.value !== language);\n      return currentLanguageOption ? [currentLanguageOption, ...otherOptionList] : options;\n    }\n\n    return options?.filter((option) => option.label.toLowerCase().includes(searchQuery.toLowerCase()));\n  }, [language, searchQuery]);\n\n  useEffectWithPrevDeps(([prevIsActive, prevLanguage]) => {\n    if (prevIsActive === isActive && prevLanguage?.find((option) => option === language)) return;\n    const [selected] = partition(displayedOptionList, (option) => doNotTranslate.includes(option.value));\n    setDisplayedOptions([...selected.map((option) => option.value)]);\n  }, [isActive, doNotTranslate, displayedOptions.length, language, displayedOptionList]);\n\n  const handleChange = useLastCallback((newSelectedIds: string[]) => {\n    setDisplayedOptions(newSelectedIds);\n    setSettingOption({\n      doNotTranslate: newSelectedIds,\n    });\n  });\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  return (\n    <div className={buildClassName(styles.root, 'settings-content infinite-scroll')}>\n      <div className={buildClassName(styles.item)}>\n        <ItemPicker\n          className={styles.picker}\n          items={displayedOptionList}\n          selectedValues={displayedOptions}\n          onSelectedValuesChange={handleChange}\n          filterValue={searchQuery}\n          onFilterChange={setSearchQuery}\n          isSearchable\n          allowMultiple\n          withDefaultPadding\n          itemInputType=\"checkbox\"\n          searchInputId=\"lang-picker-search\"\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const {\n      doNotTranslate,\n    } = global.settings.byKey;\n\n    return {\n      doNotTranslate,\n    };\n  },\n)(SettingsDoNotTranslate));\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useMemo, useState,\n} from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport type { ApiUsername } from '../../api/types';\n\nimport buildClassName from '../../util/buildClassName';\nimport { copyTextToClipboard } from '../../util/clipboard';\nimport { isBetween } from '../../util/math';\n\nimport useOldLang from '../../hooks/useOldLang';\nimport usePreviousDeprecated from '../../hooks/usePreviousDeprecated';\n\nimport ConfirmDialog from '../ui/ConfirmDialog';\nimport Draggable from '../ui/Draggable';\nimport ListItem from '../ui/ListItem';\n\nimport styles from './ManageUsernames.module.scss';\n\ntype SortState = {\n  orderedUsernames?: string[];\n  dragOrderUsernames?: string[];\n  draggedIndex?: number;\n};\n\ntype OwnProps = {\n  chatId?: string;\n  usernames: ApiUsername[];\n  onEditUsername: (username: string) => void;\n};\n\nconst USERNAME_HEIGHT_PX = 60;\n\nconst ManageUsernames: FC<OwnProps> = ({\n  chatId,\n  usernames,\n  onEditUsername,\n}) => {\n  const {\n    showNotification,\n    toggleUsername,\n    toggleChatUsername,\n    sortUsernames,\n    sortChatUsernames,\n  } = getActions();\n  const lang = useOldLang();\n  const [usernameForConfirm, setUsernameForConfirm] = useState<ApiUsername | undefined>();\n\n  const usernameList = useMemo(() => usernames.map(({ username }) => username), [usernames]);\n  const prevUsernameList = usePreviousDeprecated(usernameList);\n\n  const [state, setState] = useState<SortState>({\n    orderedUsernames: usernameList,\n    dragOrderUsernames: usernameList,\n    draggedIndex: undefined,\n  });\n\n  // Sync folders state after changing folders in other clients\n  useEffect(() => {\n    if (prevUsernameList !== usernameList) {\n      setState({\n        orderedUsernames: usernameList,\n        dragOrderUsernames: usernameList,\n        draggedIndex: undefined,\n      });\n    }\n  }, [prevUsernameList, usernameList]);\n\n  const handleCopyUsername = useCallback((value: string) => {\n    copyTextToClipboard(`@${value}`);\n    showNotification({\n      message: lang('UsernameCopied'),\n    });\n  }, [lang, showNotification]);\n\n  const handleUsernameClick = useCallback((data: ApiUsername) => {\n    if (data.isEditable) {\n      onEditUsername(data.username);\n    } else {\n      setUsernameForConfirm(data);\n    }\n  }, [onEditUsername]);\n\n  const closeConfirmUsernameDialog = useCallback(() => {\n    setUsernameForConfirm(undefined);\n  }, []);\n\n  const handleUsernameToggle = useCallback(() => {\n    if (!usernameForConfirm) {\n      return;\n    }\n\n    if (chatId) {\n      toggleChatUsername({\n        chatId,\n        username: usernameForConfirm.username,\n        isActive: !usernameForConfirm.isActive,\n      });\n    } else {\n      toggleUsername({\n        username: usernameForConfirm.username,\n        isActive: !usernameForConfirm.isActive,\n      });\n    }\n    closeConfirmUsernameDialog();\n  }, [chatId, closeConfirmUsernameDialog, toggleChatUsername, toggleUsername, usernameForConfirm]);\n\n  const handleDrag = useCallback((translation: { x: number; y: number }, id: string | number) => {\n    const delta = Math.round(translation.y / USERNAME_HEIGHT_PX);\n    const index = state.orderedUsernames?.indexOf(id as string) || 0;\n    const dragOrderUsernames = state.orderedUsernames?.filter((username) => username !== id);\n\n    if (!dragOrderUsernames || !isBetween(index + delta, 0, usernameList.length)) {\n      return;\n    }\n\n    dragOrderUsernames.splice(index + delta, 0, id as string);\n    setState((current) => ({\n      ...current,\n      draggedIndex: index,\n      dragOrderUsernames,\n    }));\n  }, [state.orderedUsernames, usernameList.length]);\n\n  const handleDragEnd = useCallback(() => {\n    setState((current) => {\n      if (chatId) {\n        sortChatUsernames({\n          chatId,\n          usernames: current.dragOrderUsernames!,\n        });\n      } else {\n        sortUsernames({ usernames: current.dragOrderUsernames! });\n      }\n\n      return {\n        ...current,\n        orderedUsernames: current.dragOrderUsernames,\n        draggedIndex: undefined,\n      };\n    });\n  }, [chatId, sortChatUsernames, sortUsernames]);\n\n  return (\n    <>\n      <div className={styles.container}>\n        <h4 className={styles.header} dir={lang.isRtl ? 'rtl' : undefined}>\n          {lang('lng_usernames_subtitle')}\n        </h4>\n        <div className={styles.sortableContainer} style={`height: ${(usernames.length) * USERNAME_HEIGHT_PX}px`}>\n          {usernames.map((usernameData, i) => {\n            const isDragged = state.draggedIndex === i;\n            const draggedTop = (state.orderedUsernames?.indexOf(usernameData.username) ?? 0) * USERNAME_HEIGHT_PX;\n            const top = (state.dragOrderUsernames?.indexOf(usernameData.username) ?? 0) * USERNAME_HEIGHT_PX;\n            const subtitle = usernameData.isEditable\n              ? 'lng_usernames_edit'\n              : (usernameData.isActive ? 'lng_usernames_active' : 'lng_usernames_non_active');\n\n            return (\n              <Draggable\n                key={usernameData.username}\n                id={usernameData.username}\n                onDrag={handleDrag}\n                onDragEnd={handleDragEnd}\n                style={`top: ${isDragged ? draggedTop : top}px;`}\n                knobStyle={`${lang.isRtl ? 'left' : 'right'}: 3rem;`}\n                isDisabled={!usernameData.isActive}\n              >\n                <ListItem\n                  key={usernameData.username}\n                  className={buildClassName('drag-item mb-2 no-icon', styles.item)}\n                  narrow\n                  secondaryIcon=\"more\"\n                  icon={usernameData.isActive ? 'link' : 'link-broken'}\n                  multiline\n                  contextActions={[\n                    {\n                      handler: () => {\n                        handleCopyUsername(usernameData.username);\n                      },\n                      title: lang('Copy'),\n                      icon: 'copy',\n                    },\n                  ]}\n                  // eslint-disable-next-line react/jsx-no-bind\n                  onClick={() => {\n                    handleUsernameClick(usernameData);\n                  }}\n                >\n                  <span className=\"title\">@{usernameData.username}</span>\n                  <span className=\"subtitle\">{lang(subtitle)}</span>\n                </ListItem>\n              </Draggable>\n            );\n          })}\n        </div>\n        <p className={styles.description} dir={lang.isRtl ? 'rtl' : undefined}>\n          {lang('lng_usernames_description')}\n        </p>\n      </div>\n      <ConfirmDialog\n        isOpen={Boolean(usernameForConfirm)}\n        onClose={closeConfirmUsernameDialog}\n        title={lang(usernameForConfirm?.isActive ? 'Username.DeactivateAlertTitle' : 'Username.ActivateAlertTitle')}\n        text={lang(usernameForConfirm?.isActive ? 'Username.DeactivateAlertText' : 'Username.ActivateAlertText')}\n        confirmLabel={lang(usernameForConfirm?.isActive\n          ? 'Username.DeactivateAlertHide'\n          : 'Username.ActivateAlertShow')}\n        confirmHandler={handleUsernameToggle}\n        confirmIsDestructive={!usernameForConfirm?.isActive}\n      />\n    </>\n  );\n};\n\nexport default memo(ManageUsernames);\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"PaO1MMi5\",\"header\":\"wSswdVkR\",\"description\":\"oiJc22Aj\",\"sortableContainer\":\"lAeeBh9K\",\"item\":\"l04OwRBg\"};","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useMemo, useState,\n} from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport { TME_LINK_PREFIX } from '../../config';\nimport { debounce } from '../../util/schedulers';\nimport {\n  isUsernameValid, MAX_USERNAME_LENGTH, MIN_UPDATE_USERNAME_LENGTH, USERNAME_REGEX,\n} from '../../util/username';\n\nimport useOldLang from '../../hooks/useOldLang';\nimport usePreviousDeprecated from '../../hooks/usePreviousDeprecated';\n\nimport InputText from '../ui/InputText';\n\ntype OwnProps = {\n  currentUsername?: string;\n  asLink?: boolean;\n  isLoading?: boolean;\n  isUsernameAvailable?: boolean;\n  checkedUsername?: string;\n  onChange: (value: string) => void;\n};\n\nconst LINK_PREFIX_REGEX = /https:\\/\\/t\\.me\\/?/i;\n\nconst runDebouncedForCheckUsername = debounce((cb) => cb(), 250, false);\n\nconst UsernameInput: FC<OwnProps> = ({\n  currentUsername,\n  asLink,\n  isLoading,\n  isUsernameAvailable,\n  checkedUsername,\n  onChange,\n}) => {\n  const { checkUsername, checkPublicLink } = getActions();\n  const [username, setUsername] = useState(currentUsername || '');\n\n  const lang = useOldLang();\n  const langPrefix = asLink ? 'SetUrl' : 'Username';\n  const label = asLink ? lang('SetUrlPlaceholder') : lang('Username');\n\n  const previousIsUsernameAvailable = usePreviousDeprecated(isUsernameAvailable);\n  const renderingIsUsernameAvailable = currentUsername !== username\n    ? (isUsernameAvailable ?? previousIsUsernameAvailable) : undefined;\n  const isChecking = username && currentUsername !== username && checkedUsername !== username;\n\n  const [usernameSuccess, usernameError] = useMemo(() => {\n    if (!username.length) {\n      return [];\n    }\n\n    if (username.length < MIN_UPDATE_USERNAME_LENGTH) {\n      return [undefined, lang(`${langPrefix}InvalidShort`)];\n    }\n    if (username.length > MAX_USERNAME_LENGTH) {\n      return [undefined, lang(`${langPrefix}InvalidLong`)];\n    }\n    if (!USERNAME_REGEX.test(username)) {\n      return [undefined, lang(`${langPrefix}Invalid`)];\n    }\n\n    if (renderingIsUsernameAvailable === undefined || isChecking) {\n      return [];\n    }\n\n    // Variable `isUsernameAvailable` is initialized with `undefined`, so a strict false check is required\n    return [\n      renderingIsUsernameAvailable ? lang(`${langPrefix}Available`, label) : undefined,\n      renderingIsUsernameAvailable === false ? lang(`${langPrefix}InUse`) : undefined,\n    ];\n  }, [username, renderingIsUsernameAvailable, isChecking, lang, langPrefix, label]);\n\n  useEffect(() => {\n    setUsername(currentUsername || '');\n  }, [asLink, currentUsername]);\n\n  const handleUsernameChange = useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    const value = e.target.value.trim();\n    // Prevent prefix editing\n    if (asLink && !value.match(LINK_PREFIX_REGEX)) {\n      if (!value.length) {\n        setUsername('');\n        onChange?.('');\n      }\n      return;\n    }\n    const newUsername = value.replace(LINK_PREFIX_REGEX, '');\n\n    setUsername(newUsername);\n\n    const isValid = newUsername === '' ? true : isUsernameValid(newUsername, true);\n    if (!isValid) return;\n\n    onChange?.(newUsername);\n\n    runDebouncedForCheckUsername(() => {\n      if (newUsername !== currentUsername) {\n        const check = asLink ? checkPublicLink : checkUsername;\n        check({ username: newUsername });\n      }\n    });\n  }, [asLink, checkPublicLink, checkUsername, currentUsername, onChange]);\n\n  return (\n    <InputText\n      value={`${asLink ? TME_LINK_PREFIX : ''}${username}`}\n      onChange={handleUsernameChange}\n      label={isChecking ? lang('Checking') : label}\n      error={usernameError}\n      success={usernameSuccess}\n      readOnly={isLoading}\n      teactExperimentControlled\n    />\n  );\n};\n\nexport default memo(UsernameInput);\n","import type { ChangeEvent } from 'react';\nimport type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useMemo,\n  useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiUsername } from '../../../api/types';\nimport { ApiMediaFormat } from '../../../api/types';\nimport { ProfileEditProgress } from '../../../types';\n\nimport { PURCHASE_USERNAME, TME_LINK_PREFIX, USERNAME_PURCHASE_ERROR } from '../../../config';\nimport { getChatAvatarHash } from '../../../global/helpers';\nimport { selectTabState, selectUser, selectUserFullInfo } from '../../../global/selectors';\nimport { selectCurrentLimit } from '../../../global/selectors/limits';\nimport { throttle } from '../../../util/schedulers';\nimport renderText from '../../common/helpers/renderText';\n\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useMedia from '../../../hooks/useMedia';\nimport useOldLang from '../../../hooks/useOldLang';\nimport usePreviousDeprecated from '../../../hooks/usePreviousDeprecated';\n\nimport ManageUsernames from '../../common/ManageUsernames';\nimport SafeLink from '../../common/SafeLink';\nimport UsernameInput from '../../common/UsernameInput';\nimport AvatarEditable from '../../ui/AvatarEditable';\nimport FloatingActionButton from '../../ui/FloatingActionButton';\nimport InputText from '../../ui/InputText';\nimport Spinner from '../../ui/Spinner';\nimport TextArea from '../../ui/TextArea';\n\ntype OwnProps = {\n  isActive: boolean;\n  onReset: () => void;\n};\n\ntype StateProps = {\n  currentAvatarHash?: string;\n  currentFirstName?: string;\n  currentLastName?: string;\n  currentBio?: string;\n  progress?: ProfileEditProgress;\n  checkedUsername?: string;\n  editUsernameError?: string;\n  isUsernameAvailable?: boolean;\n  maxBioLength: number;\n  usernames?: ApiUsername[];\n};\n\nconst runThrottled = throttle((cb) => cb(), 60000, true);\n\nconst ERROR_FIRST_NAME_MISSING = 'Please provide your first name';\n\nconst SettingsEditProfile: FC<OwnProps & StateProps> = ({\n  isActive,\n  currentAvatarHash,\n  currentFirstName,\n  currentLastName,\n  currentBio,\n  progress,\n  checkedUsername,\n  editUsernameError,\n  isUsernameAvailable,\n  maxBioLength,\n  usernames,\n  onReset,\n}) => {\n  const {\n    loadCurrentUser,\n    updateProfile,\n  } = getActions();\n\n  const lang = useOldLang();\n\n  const firstEditableUsername = useMemo(() => usernames?.find(({ isEditable }) => isEditable), [usernames]);\n  const currentUsername = firstEditableUsername?.username || '';\n  const [isUsernameTouched, setIsUsernameTouched] = useState(false);\n  const [isProfileFieldsTouched, setIsProfileFieldsTouched] = useState(false);\n  const [error, setError] = useState<string | undefined>();\n\n  const [photo, setPhoto] = useState<File | undefined>();\n  const [firstName, setFirstName] = useState(currentFirstName || '');\n  const [lastName, setLastName] = useState(currentLastName || '');\n  const [bio, setBio] = useState(currentBio || '');\n  const [editableUsername, setEditableUsername] = useState<string | false>(currentUsername);\n\n  const currentAvatarBlobUrl = useMedia(currentAvatarHash, false, ApiMediaFormat.BlobUrl);\n\n  const isLoading = progress === ProfileEditProgress.InProgress;\n  const isUsernameError = editableUsername === false;\n\n  const previousIsUsernameAvailable = usePreviousDeprecated(isUsernameAvailable);\n  const renderingIsUsernameAvailable = isUsernameAvailable ?? previousIsUsernameAvailable;\n  const shouldRenderUsernamesManage = usernames && usernames.length > 1;\n\n  const isSaveButtonShown = useMemo(() => {\n    if (isUsernameError) {\n      return false;\n    }\n\n    return Boolean(photo) || isProfileFieldsTouched || (isUsernameTouched && renderingIsUsernameAvailable === true);\n  }, [isUsernameError, photo, isProfileFieldsTouched, isUsernameTouched, renderingIsUsernameAvailable]);\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  // Due to the parent Transition, this component never gets unmounted,\n  // that's why we use throttled API call on every update.\n  useEffect(() => {\n    runThrottled(() => {\n      loadCurrentUser();\n    });\n  }, [loadCurrentUser]);\n\n  useEffect(() => {\n    setPhoto(undefined);\n  }, [currentAvatarBlobUrl]);\n\n  useEffect(() => {\n    setFirstName(currentFirstName || '');\n    setLastName(currentLastName || '');\n    setBio(currentBio || '');\n  }, [currentFirstName, currentLastName, currentBio]);\n\n  useEffect(() => {\n    setEditableUsername(currentUsername || '');\n  }, [currentUsername]);\n\n  useEffect(() => {\n    if (progress === ProfileEditProgress.Complete) {\n      setIsProfileFieldsTouched(false);\n      setIsUsernameTouched(false);\n      setError(undefined);\n    }\n  }, [progress]);\n\n  const handlePhotoChange = useCallback((newPhoto: File) => {\n    setPhoto(newPhoto);\n  }, []);\n\n  const handleFirstNameChange = useCallback((e: ChangeEvent<HTMLInputElement>) => {\n    setFirstName(e.target.value);\n    setIsProfileFieldsTouched(true);\n  }, []);\n\n  const handleLastNameChange = useCallback((e: ChangeEvent<HTMLInputElement>) => {\n    setLastName(e.target.value);\n    setIsProfileFieldsTouched(true);\n  }, []);\n\n  const handleBioChange = useCallback((e: ChangeEvent<HTMLTextAreaElement>) => {\n    setBio(e.target.value);\n    setIsProfileFieldsTouched(true);\n  }, []);\n\n  const handleUsernameChange = useCallback((value: string | false) => {\n    setEditableUsername(value);\n    setIsUsernameTouched(currentUsername !== value);\n  }, [currentUsername]);\n\n  const handleProfileSave = useCallback(() => {\n    const trimmedFirstName = firstName.trim();\n    const trimmedLastName = lastName.trim();\n    const trimmedBio = bio.trim();\n\n    if (!editableUsername) return;\n\n    if (!trimmedFirstName.length) {\n      setError(ERROR_FIRST_NAME_MISSING);\n      return;\n    }\n\n    updateProfile({\n      photo,\n      ...(isProfileFieldsTouched && {\n        firstName: trimmedFirstName,\n        lastName: trimmedLastName,\n        bio: trimmedBio,\n      }),\n      ...(isUsernameTouched && {\n        username: editableUsername,\n      }),\n    });\n  }, [\n    photo,\n    firstName, lastName, bio, isProfileFieldsTouched,\n    editableUsername, isUsernameTouched,\n    updateProfile,\n  ]);\n\n  function renderPurchaseLink() {\n    const purchaseInfoLink = `${TME_LINK_PREFIX}${PURCHASE_USERNAME}`;\n\n    return (\n      <p className=\"settings-item-description\" dir={lang.isRtl ? 'rtl' : undefined}>\n        {(lang('lng_username_purchase_available') as string)\n          .replace('{link}', '%PURCHASE_LINK%')\n          .split('%')\n          .map((s) => {\n            return (s === 'PURCHASE_LINK' ? <SafeLink url={purchaseInfoLink} text={`@${PURCHASE_USERNAME}`} /> : s);\n          })}\n      </p>\n    );\n  }\n\n  return (\n    <div className=\"settings-fab-wrapper\">\n      <div className=\"settings-content no-border custom-scroll\">\n        <div className=\"settings-edit-profile settings-item\">\n          <AvatarEditable\n            currentAvatarBlobUrl={currentAvatarBlobUrl}\n            onChange={handlePhotoChange}\n            title=\"Edit your profile photo\"\n            disabled={isLoading}\n          />\n          <InputText\n            value={firstName}\n            onChange={handleFirstNameChange}\n            label={lang('FirstName')}\n            disabled={isLoading}\n            error={error === ERROR_FIRST_NAME_MISSING ? error : undefined}\n          />\n          <InputText\n            value={lastName}\n            onChange={handleLastNameChange}\n            label={lang('LastName')}\n            disabled={isLoading}\n          />\n          <TextArea\n            value={bio}\n            onChange={handleBioChange}\n            label={lang('UserBio')}\n            disabled={isLoading}\n            maxLength={maxBioLength}\n            maxLengthIndicator={maxBioLength ? (maxBioLength - bio.length).toString() : undefined}\n          />\n\n          <p className=\"settings-item-description\" dir={lang.isRtl ? 'rtl' : undefined}>\n            {renderText(lang('lng_settings_about_bio'), ['br', 'simple_markdown'])}\n          </p>\n        </div>\n\n        <div className=\"settings-item\">\n          <h4 className=\"settings-item-header\" dir={lang.isRtl ? 'rtl' : undefined}>{lang('Username')}</h4>\n\n          <UsernameInput\n            currentUsername={currentUsername}\n            isLoading={isLoading}\n            isUsernameAvailable={isUsernameAvailable}\n            checkedUsername={checkedUsername}\n            onChange={handleUsernameChange}\n          />\n\n          {editUsernameError === USERNAME_PURCHASE_ERROR && renderPurchaseLink()}\n          <p className=\"settings-item-description\" dir={lang.isRtl ? 'rtl' : undefined}>\n            {renderText(lang('UsernameHelp'), ['br', 'simple_markdown'])}\n          </p>\n          {editableUsername && (\n            <p className=\"settings-item-description\" dir={lang.isRtl ? 'rtl' : undefined}>\n              {lang('lng_username_link')}<br />\n              <span className=\"username-link\">{TME_LINK_PREFIX}{editableUsername}</span>\n            </p>\n          )}\n        </div>\n\n        {shouldRenderUsernamesManage && (\n          <ManageUsernames\n            usernames={usernames}\n            onEditUsername={setEditableUsername}\n          />\n        )}\n      </div>\n\n      <FloatingActionButton\n        isShown={isSaveButtonShown}\n        onClick={handleProfileSave}\n        disabled={isLoading}\n        ariaLabel={lang('Save')}\n      >\n        {isLoading ? (\n          <Spinner color=\"white\" />\n        ) : (\n          <i className=\"icon icon-check\" />\n        )}\n      </FloatingActionButton>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const { currentUserId } = global;\n    const {\n      progress, isUsernameAvailable, checkedUsername, error: editUsernameError,\n    } = selectTabState(global).profileEdit || {};\n    const currentUser = currentUserId ? selectUser(global, currentUserId) : undefined;\n\n    const maxBioLength = selectCurrentLimit(global, 'aboutLength');\n\n    if (!currentUser) {\n      return {\n        progress,\n        checkedUsername,\n        isUsernameAvailable,\n        editUsernameError,\n        maxBioLength,\n      };\n    }\n\n    const {\n      firstName: currentFirstName,\n      lastName: currentLastName,\n      usernames,\n    } = currentUser;\n    const currentUserFullInfo = currentUserId ? selectUserFullInfo(global, currentUserId) : undefined;\n    const currentAvatarHash = getChatAvatarHash(currentUser);\n\n    return {\n      currentAvatarHash,\n      currentFirstName,\n      currentLastName,\n      currentBio: currentUserFullInfo?.bio,\n      progress,\n      isUsernameAvailable,\n      checkedUsername,\n      editUsernameError,\n      maxBioLength,\n      usernames,\n    };\n  },\n)(SettingsEditProfile));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport { DEBUG_LOG_FILENAME } from '../../../config';\nimport { getDebugLogs } from '../../../util/debugConsole';\nimport download from '../../../util/download';\nimport { IS_ELECTRON } from '../../../util/windowEnvironment';\nimport { LOCAL_TGS_URLS } from '../../common/helpers/animatedAssets';\n\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport AnimatedIcon from '../../common/AnimatedIcon';\nimport Checkbox from '../../ui/Checkbox';\nimport ListItem from '../../ui/ListItem';\n\ntype OwnProps = {\n  isActive?: boolean;\n  onReset: () => void;\n};\n\ntype StateProps = {\n  shouldShowLoginCodeInChatList?: boolean;\n  shouldForceHttpTransport?: boolean;\n  shouldAllowHttpTransport?: boolean;\n  shouldCollectDebugLogs?: boolean;\n  shouldDebugExportedSenders?: boolean;\n};\n\nconst SettingsExperimental: FC<OwnProps & StateProps> = ({\n  isActive,\n  onReset,\n  shouldShowLoginCodeInChatList,\n  shouldForceHttpTransport,\n  shouldAllowHttpTransport,\n  shouldCollectDebugLogs,\n  shouldDebugExportedSenders,\n}) => {\n  const { requestConfetti, setSettingOption } = getActions();\n  const lang = useOldLang();\n\n  const [isAutoUpdateEnabled, setIsAutoUpdateEnabled] = useState(false);\n  useEffect(() => {\n    window.electron?.getIsAutoUpdateEnabled().then(setIsAutoUpdateEnabled);\n  }, []);\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  const handleDownloadLog = useLastCallback(() => {\n    const file = new File([getDebugLogs()], DEBUG_LOG_FILENAME, { type: 'text/plain' });\n    const url = URL.createObjectURL(file);\n    download(url, DEBUG_LOG_FILENAME);\n  });\n\n  const handleIsAutoUpdateEnabledChange = useCallback((isChecked: boolean) => {\n    window.electron?.setIsAutoUpdateEnabled(isChecked);\n  }, []);\n\n  return (\n    <div className=\"settings-content custom-scroll\">\n      <div className=\"settings-content-header no-border\">\n        <AnimatedIcon\n          tgsUrl={LOCAL_TGS_URLS.Experimental}\n          size={200}\n          className=\"experimental-duck\"\n          nonInteractive\n          noLoop={false}\n        />\n        <p className=\"settings-item-description pt-3\" dir=\"auto\">{lang('lng_settings_experimental_about')}</p>\n      </div>\n      <div className=\"settings-item\">\n        <ListItem\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => requestConfetti({ withStars: true })}\n          icon=\"animations\"\n        >\n          <div className=\"title\">Launch some confetti!</div>\n        </ListItem>\n\n        <Checkbox\n          label=\"Show login code in chat list\"\n          checked={Boolean(shouldShowLoginCodeInChatList)}\n          // eslint-disable-next-line react/jsx-no-bind\n          onCheck={() => setSettingOption({ shouldShowLoginCodeInChatList: !shouldShowLoginCodeInChatList })}\n        />\n\n        <Checkbox\n          label=\"Allow HTTP Transport\"\n          checked={Boolean(shouldAllowHttpTransport)}\n          // eslint-disable-next-line react/jsx-no-bind\n          onCheck={() => setSettingOption({ shouldAllowHttpTransport: !shouldAllowHttpTransport })}\n        />\n\n        <Checkbox\n          label=\"Force HTTP Transport\"\n          disabled={!shouldAllowHttpTransport}\n          checked={Boolean(shouldForceHttpTransport)}\n          // eslint-disable-next-line react/jsx-no-bind\n          onCheck={() => setSettingOption({ shouldForceHttpTransport: !shouldForceHttpTransport })}\n        />\n\n        <Checkbox\n          label={lang('DebugMenuEnableLogs')}\n          checked={Boolean(shouldCollectDebugLogs)}\n          // eslint-disable-next-line react/jsx-no-bind\n          onCheck={() => setSettingOption({ shouldCollectDebugLogs: !shouldCollectDebugLogs })}\n        />\n\n        <Checkbox\n          label=\"Enable exported senders debug\"\n          checked={Boolean(shouldDebugExportedSenders)}\n          // eslint-disable-next-line react/jsx-no-bind\n          onCheck={() => setSettingOption({ shouldDebugExportedSenders: !shouldDebugExportedSenders })}\n        />\n\n        {IS_ELECTRON && (\n          <Checkbox\n            label=\"Enable autoupdates\"\n            checked={Boolean(isAutoUpdateEnabled)}\n            onCheck={handleIsAutoUpdateEnabledChange}\n          />\n        )}\n\n        <ListItem\n          onClick={handleDownloadLog}\n          icon=\"bug\"\n        >\n          <div className=\"title\">Download log</div>\n        </ListItem>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal(\n  (global): StateProps => {\n    return {\n      shouldShowLoginCodeInChatList: global.settings.byKey.shouldShowLoginCodeInChatList,\n      shouldForceHttpTransport: global.settings.byKey.shouldForceHttpTransport,\n      shouldAllowHttpTransport: global.settings.byKey.shouldAllowHttpTransport,\n      shouldCollectDebugLogs: global.settings.byKey.shouldCollectDebugLogs,\n      shouldDebugExportedSenders: global.settings.byKey.shouldDebugExportedSenders,\n    };\n  },\n)(SettingsExperimental));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ISettings, TimeFormat } from '../../../types';\nimport type { IRadioOption } from '../../ui/RadioGroup';\nimport { SettingsScreens } from '../../../types';\n\nimport { pick } from '../../../util/iteratees';\nimport { setTimeFormat } from '../../../util/oldLangProvider';\nimport { getSystemTheme } from '../../../util/systemTheme';\nimport {\n  IS_ANDROID, IS_ELECTRON, IS_IOS, IS_MAC_OS, IS_WINDOWS,\n} from '../../../util/windowEnvironment';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Checkbox from '../../ui/Checkbox';\nimport ListItem from '../../ui/ListItem';\nimport RadioGroup from '../../ui/RadioGroup';\nimport RangeSlider from '../../ui/RangeSlider';\n\ntype OwnProps = {\n  isActive?: boolean;\n  onScreenSelect: (screen: SettingsScreens) => void;\n  onReset: () => void;\n};\n\ntype StateProps =\n  Pick<ISettings, (\n    'messageTextSize' |\n    'animationLevel' |\n    'messageSendKeyCombo' |\n    'timeFormat'\n  )> & {\n    theme: ISettings['theme'];\n    shouldUseSystemTheme: boolean;\n  };\n\nconst TIME_FORMAT_OPTIONS: IRadioOption[] = [{\n  label: '12-hour',\n  value: '12h',\n}, {\n  label: '24-hour',\n  value: '24h',\n}];\n\nconst SettingsGeneral: FC<OwnProps & StateProps> = ({\n  isActive,\n  onScreenSelect,\n  onReset,\n  messageTextSize,\n  messageSendKeyCombo,\n  timeFormat,\n  theme,\n  shouldUseSystemTheme,\n}) => {\n  const {\n    setSettingOption,\n  } = getActions();\n\n  const lang = useOldLang();\n\n  const { isMobile } = useAppLayout();\n  const isMobileDevice = isMobile && (IS_IOS || IS_ANDROID);\n\n  const appearanceThemeOptions: IRadioOption[] = [{\n    label: lang('EmptyChat.Appearance.Light'),\n    value: 'light',\n  }, {\n    label: lang('EmptyChat.Appearance.Dark'),\n    value: 'dark',\n  }, {\n    label: lang('EmptyChat.Appearance.System'),\n    value: 'auto',\n  }];\n\n  const keyboardSendOptions = !isMobileDevice ? [\n    { value: 'enter', label: lang('lng_settings_send_enter'), subLabel: 'New line by Shift + Enter' },\n    {\n      value: 'ctrl-enter',\n      label: lang(IS_MAC_OS || IS_IOS ? 'lng_settings_send_cmdenter' : 'lng_settings_send_ctrlenter'),\n      subLabel: 'New line by Enter',\n    },\n  ] : undefined;\n\n  const handleMessageTextSizeChange = useCallback((newSize: number) => {\n    document.documentElement.style.setProperty(\n      '--composer-text-size', `${Math.max(newSize, IS_IOS ? 16 : 15)}px`,\n    );\n    document.documentElement.style.setProperty('--message-meta-height', `${Math.floor(newSize * 1.3125)}px`);\n    document.documentElement.style.setProperty('--message-text-size', `${newSize}px`);\n    document.documentElement.setAttribute('data-message-text-size', newSize.toString());\n\n    setSettingOption({ messageTextSize: newSize });\n  }, [setSettingOption]);\n\n  const handleAppearanceThemeChange = useCallback((value: string) => {\n    const newTheme = value === 'auto' ? getSystemTheme() : value as ISettings['theme'];\n\n    setSettingOption({ theme: newTheme });\n    setSettingOption({ shouldUseSystemTheme: value === 'auto' });\n  }, [setSettingOption]);\n\n  const handleTimeFormatChange = useCallback((newTimeFormat: string) => {\n    setSettingOption({ timeFormat: newTimeFormat as TimeFormat });\n    setSettingOption({ wasTimeFormatSetManually: true });\n\n    setTimeFormat(newTimeFormat as TimeFormat);\n  }, [setSettingOption]);\n\n  const handleMessageSendComboChange = useCallback((newCombo: string) => {\n    setSettingOption({ messageSendKeyCombo: newCombo as ISettings['messageSendKeyCombo'] });\n  }, [setSettingOption]);\n\n  const [isTrayIconEnabled, setIsTrayIconEnabled] = useState(false);\n  useEffect(() => {\n    window.electron?.getIsTrayIconEnabled().then(setIsTrayIconEnabled);\n  }, []);\n\n  const handleIsTrayIconEnabledChange = useCallback((isChecked: boolean) => {\n    window.electron?.setIsTrayIconEnabled(isChecked);\n  }, []);\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  return (\n    <div className=\"settings-content custom-scroll\">\n      <div className=\"settings-item pt-3\">\n        <h4 className=\"settings-item-header\" dir={lang.isRtl ? 'rtl' : undefined}>{lang('SETTINGS')}</h4>\n\n        <RangeSlider\n          label={lang('TextSize')}\n          min={12}\n          max={20}\n          value={messageTextSize}\n          onChange={handleMessageTextSizeChange}\n        />\n\n        <ListItem\n          icon=\"photo\"\n          narrow\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onScreenSelect(SettingsScreens.GeneralChatBackground)}\n        >\n          {lang('ChatBackground')}\n        </ListItem>\n\n        {IS_ELECTRON && IS_WINDOWS && (\n          <Checkbox\n            label={lang('GeneralSettings.StatusBarItem')}\n            checked={Boolean(isTrayIconEnabled)}\n            onCheck={handleIsTrayIconEnabledChange}\n          />\n        )}\n      </div>\n\n      <div className=\"settings-item\">\n        <h4 className=\"settings-item-header\" dir={lang.isRtl ? 'rtl' : undefined}>\n          {lang('Theme')}\n        </h4>\n        <RadioGroup\n          name=\"theme\"\n          options={appearanceThemeOptions}\n          selected={shouldUseSystemTheme ? 'auto' : theme}\n          onChange={handleAppearanceThemeChange}\n        />\n      </div>\n\n      <div className=\"settings-item\">\n        <h4 className=\"settings-item-header\" dir={lang.isRtl ? 'rtl' : undefined}>\n          Time Format\n        </h4>\n        <RadioGroup\n          name=\"timeformat\"\n          options={TIME_FORMAT_OPTIONS}\n          selected={timeFormat}\n          onChange={handleTimeFormatChange}\n        />\n      </div>\n\n      {keyboardSendOptions && (\n        <div className=\"settings-item\">\n          <h4 className=\"settings-item-header\" dir={lang.isRtl ? 'rtl' : undefined}>{lang('VoiceOver.Keyboard')}</h4>\n\n          <RadioGroup\n            name=\"keyboard-send-settings\"\n            options={keyboardSendOptions}\n            onChange={handleMessageSendComboChange}\n            selected={messageSendKeyCombo}\n          />\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const { theme, shouldUseSystemTheme } = global.settings.byKey;\n\n    return {\n      ...pick(global.settings.byKey, [\n        'messageTextSize',\n        'animationLevel',\n        'messageSendKeyCombo',\n        'isSensitiveEnabled',\n        'canChangeSensitive',\n        'timeFormat',\n      ]),\n      theme,\n      shouldUseSystemTheme,\n    };\n  },\n)(SettingsGeneral));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useRef,\n  useState,\n} from '../../../lib/teact/teact';\n\nimport type { ApiWallpaper } from '../../../api/types';\nimport type { ThemeKey } from '../../../types';\nimport { UPLOADING_WALLPAPER_SLUG } from '../../../types';\n\nimport { CUSTOM_BG_CACHE_NAME } from '../../../config';\nimport buildClassName from '../../../util/buildClassName';\nimport * as cacheApi from '../../../util/cacheApi';\nimport { fetchBlob } from '../../../util/files';\n\nimport useCanvasBlur from '../../../hooks/useCanvasBlur';\nimport useMedia from '../../../hooks/useMedia';\nimport useMediaWithLoadProgress from '../../../hooks/useMediaWithLoadProgress';\nimport usePreviousDeprecated from '../../../hooks/usePreviousDeprecated';\nimport useShowTransitionDeprecated from '../../../hooks/useShowTransitionDeprecated';\n\nimport ProgressSpinner from '../../ui/ProgressSpinner';\n\nimport './WallpaperTile.scss';\n\ntype OwnProps = {\n  wallpaper: ApiWallpaper;\n  theme: ThemeKey;\n  isSelected: boolean;\n  onClick: (slug: string) => void;\n};\n\nconst WallpaperTile: FC<OwnProps> = ({\n  wallpaper,\n  theme,\n  isSelected,\n  onClick,\n}) => {\n  const { slug, document } = wallpaper;\n  const localMediaHash = `wallpaper${document.id!}`;\n  const localBlobUrl = document.previewBlobUrl;\n  const previewBlobUrl = useMedia(`${localMediaHash}?size=m`);\n  const thumbRef = useCanvasBlur(document.thumbnail?.dataUri, Boolean(previewBlobUrl), true);\n  const { transitionClassNames } = useShowTransitionDeprecated(\n    Boolean(previewBlobUrl || localBlobUrl),\n    undefined,\n    undefined,\n    'slow',\n  );\n  const isLoadingRef = useRef(false);\n  const [isLoadAllowed, setIsLoadAllowed] = useState(false);\n  const {\n    mediaData: fullMedia, loadProgress,\n  } = useMediaWithLoadProgress(localMediaHash, !isLoadAllowed);\n  const wasLoadDisabled = usePreviousDeprecated(isLoadAllowed) === false;\n  const { shouldRender: shouldRenderSpinner, transitionClassNames: spinnerClassNames } = useShowTransitionDeprecated(\n    (isLoadAllowed && !fullMedia) || slug === UPLOADING_WALLPAPER_SLUG,\n    undefined,\n    wasLoadDisabled,\n    'slow',\n  );\n  // To prevent triggering of the effect for useCallback\n  const cacheKeyRef = useRef<string>();\n  cacheKeyRef.current = theme;\n\n  const handleSelect = useCallback(() => {\n    (async () => {\n      const blob = await fetchBlob(fullMedia!);\n      await cacheApi.save(CUSTOM_BG_CACHE_NAME, cacheKeyRef.current!, blob);\n      onClick(slug);\n    })();\n  }, [fullMedia, onClick, slug]);\n\n  useEffect(() => {\n    // If we've clicked on a wallpaper, select it when full media is loaded\n    if (fullMedia && isLoadingRef.current) {\n      handleSelect();\n      isLoadingRef.current = false;\n    }\n  }, [fullMedia, handleSelect]);\n\n  const handleClick = useCallback(() => {\n    if (fullMedia) {\n      handleSelect();\n    } else {\n      isLoadingRef.current = true;\n      setIsLoadAllowed((isAllowed) => !isAllowed);\n    }\n  }, [fullMedia, handleSelect]);\n\n  const className = buildClassName(\n    'WallpaperTile',\n    isSelected && 'selected',\n  );\n\n  return (\n    <div className={className} onClick={handleClick}>\n      <div className=\"media-inner\">\n        <canvas\n          ref={thumbRef}\n          className=\"thumbnail\"\n        />\n        <img\n          src={previewBlobUrl || localBlobUrl}\n          className={buildClassName('full-media', transitionClassNames)}\n          alt=\"\"\n          draggable={false}\n        />\n        {shouldRenderSpinner && (\n          <div className={buildClassName('spinner-container', spinnerClassNames)}>\n            <ProgressSpinner progress={loadProgress} onClick={handleClick} />\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(WallpaperTile);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useRef,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiWallpaper } from '../../../api/types';\nimport type { ThemeKey } from '../../../types';\nimport { SettingsScreens, UPLOADING_WALLPAPER_SLUG } from '../../../types';\n\nimport { DARK_THEME_PATTERN_COLOR, DEFAULT_PATTERN_COLOR } from '../../../config';\nimport { selectTheme } from '../../../global/selectors';\nimport { getAverageColor, getPatternColor, rgb2hex } from '../../../util/colors';\nimport { validateFiles } from '../../../util/files';\nimport { throttle } from '../../../util/schedulers';\nimport { openSystemFilesDialog } from '../../../util/systemFilesDialog';\n\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Checkbox from '../../ui/Checkbox';\nimport ListItem from '../../ui/ListItem';\nimport Loading from '../../ui/Loading';\nimport WallpaperTile from './WallpaperTile';\n\nimport './SettingsGeneralBackground.scss';\n\ntype OwnProps = {\n  isActive?: boolean;\n  onScreenSelect: (screen: SettingsScreens) => void;\n  onReset: () => void;\n};\n\ntype StateProps = {\n  background?: string;\n  isBlurred?: boolean;\n  loadedWallpapers?: ApiWallpaper[];\n  theme: ThemeKey;\n};\n\nconst SUPPORTED_TYPES = 'image/jpeg';\n\nconst runThrottled = throttle((cb) => cb(), 60000, true);\n\nconst SettingsGeneralBackground: FC<OwnProps & StateProps> = ({\n  isActive,\n  onScreenSelect,\n  onReset,\n  background,\n  isBlurred,\n  loadedWallpapers,\n  theme,\n}) => {\n  const {\n    loadWallpapers,\n    uploadWallpaper,\n    setThemeSettings,\n  } = getActions();\n\n  const themeRef = useRef<ThemeKey>();\n  themeRef.current = theme;\n  // Due to the parent Transition, this component never gets unmounted,\n  // that's why we use throttled API call on every update.\n  useEffect(() => {\n    runThrottled(() => {\n      loadWallpapers();\n    });\n  }, [loadWallpapers]);\n\n  const handleFileSelect = useCallback((e: Event) => {\n    const { files } = e.target as HTMLInputElement;\n\n    const validatedFiles = validateFiles(files);\n    if (validatedFiles?.length) {\n      uploadWallpaper(validatedFiles[0]);\n    }\n  }, [uploadWallpaper]);\n\n  const handleUploadWallpaper = useCallback(() => {\n    openSystemFilesDialog(SUPPORTED_TYPES, handleFileSelect, true);\n  }, [handleFileSelect]);\n\n  const handleSetColor = useCallback(() => {\n    onScreenSelect(SettingsScreens.GeneralChatBackgroundColor);\n  }, [onScreenSelect]);\n\n  const handleResetToDefault = useCallback(() => {\n    setThemeSettings({\n      theme,\n      background: undefined,\n      backgroundColor: undefined,\n      isBlurred: true,\n      patternColor: theme === 'dark' ? DARK_THEME_PATTERN_COLOR : DEFAULT_PATTERN_COLOR,\n    });\n  }, [setThemeSettings, theme]);\n\n  const handleWallPaperSelect = useCallback((slug: string) => {\n    setThemeSettings({ theme: themeRef.current!, background: slug });\n    const currentWallpaper = loadedWallpapers && loadedWallpapers.find((wallpaper) => wallpaper.slug === slug);\n    if (currentWallpaper?.document.thumbnail) {\n      getAverageColor(currentWallpaper.document.thumbnail.dataUri)\n        .then((color) => {\n          const patternColor = getPatternColor(color);\n          const rgbColor = `#${rgb2hex(color)}`;\n          setThemeSettings({ theme: themeRef.current!, backgroundColor: rgbColor, patternColor });\n        });\n    }\n  }, [loadedWallpapers, setThemeSettings]);\n\n  const handleWallPaperBlurChange = useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    setThemeSettings({ theme: themeRef.current!, isBlurred: e.target.checked });\n  }, [setThemeSettings]);\n\n  const lang = useOldLang();\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  const isUploading = loadedWallpapers?.[0] && loadedWallpapers[0].slug === UPLOADING_WALLPAPER_SLUG;\n\n  return (\n    <div className=\"SettingsGeneralBackground settings-content custom-scroll\">\n      <div className=\"settings-item pt-3\">\n        <ListItem\n          icon=\"camera-add\"\n          className=\"mb-0\"\n          disabled={isUploading}\n          onClick={handleUploadWallpaper}\n        >\n          {lang('UploadImage')}\n        </ListItem>\n\n        <ListItem\n          icon=\"colorize\"\n          className=\"mb-0\"\n          onClick={handleSetColor}\n        >\n          {lang('SetColor')}\n        </ListItem>\n\n        <ListItem icon=\"favorite\" onClick={handleResetToDefault}>\n          {lang('ThemeResetToDefaults')}\n        </ListItem>\n\n        <Checkbox\n          label={lang('BackgroundBlurred')}\n          checked={Boolean(isBlurred)}\n          onChange={handleWallPaperBlurChange}\n        />\n      </div>\n\n      {loadedWallpapers ? (\n        <div className=\"settings-wallpapers\">\n          {loadedWallpapers.map((wallpaper) => (\n            <WallpaperTile\n              key={wallpaper.slug}\n              wallpaper={wallpaper}\n              theme={theme}\n              isSelected={background === wallpaper.slug}\n              onClick={handleWallPaperSelect}\n            />\n          ))}\n        </div>\n      ) : (\n        <Loading />\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const theme = selectTheme(global);\n    const { background, isBlurred } = global.settings.themes[theme] || {};\n    const { loadedWallpapers } = global.settings;\n\n    return {\n      background,\n      isBlurred,\n      loadedWallpapers,\n      theme,\n    };\n  },\n)(SettingsGeneralBackground));\n","import type { ChangeEvent, MutableRefObject, RefObject } from 'react';\nimport type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ThemeKey } from '../../../types';\nimport type { RealTouchEvent } from '../../../util/captureEvents';\n\nimport { selectTheme } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { captureEvents } from '../../../util/captureEvents';\nimport {\n  getPatternColor, hex2rgb, hsb2rgb, rgb2hex, rgb2hsb,\n} from '../../../util/colors';\nimport { pick } from '../../../util/iteratees';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\n\nimport InputText from '../../ui/InputText';\n\nimport './SettingsGeneralBackgroundColor.scss';\n\ntype OwnProps = {\n  isActive?: boolean;\n  onReset: () => void;\n};\n\ntype StateProps = {\n  backgroundColor?: string;\n  theme: ThemeKey;\n};\n\ninterface CanvasRects {\n  colorRect: {\n    offsetLeft: number;\n    top: number;\n    width: number;\n    height: number;\n  };\n  hueRect: {\n    offsetLeft: number;\n    width: number;\n  };\n}\n\nconst DEFAULT_HSB = rgb2hsb(hex2rgb('e6ebee'));\nconst PREDEFINED_COLORS = [\n  '#e6ebee', '#b2cee1', '#008dd0', '#c6e7cb', '#c4e1a6', '#60b16e',\n  '#ccd0af', '#a6a997', '#7a7072', '#fdd7af', '#fdb76e', '#dd8851',\n];\n\nconst SettingsGeneralBackground: FC<OwnProps & StateProps> = ({\n  isActive,\n  onReset,\n  theme,\n  backgroundColor,\n}) => {\n  const { setThemeSettings } = getActions();\n\n  const themeRef = useRef<ThemeKey>();\n  themeRef.current = theme;\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const colorPickerRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const huePickerRef = useRef<HTMLDivElement>(null);\n  const isFirstRunRef = useRef(true);\n\n  const [hsb, setHsb] = useState(getInitialHsb(backgroundColor));\n  // Cache for drag handlers\n  const hsbRef = useRef(hsb);\n  useEffect(() => {\n    hsbRef.current = hsb;\n  }, [hsb]);\n\n  const [isDragging, markIsDragging, unmarkIsDragging] = useFlag();\n  const [rgbInput, setRgbInput] = useState('');\n  const [hexInput, setHexInput] = useState('');\n\n  const rectsRef = useRef<CanvasRects>();\n  const colorCtxRef = useRef<CanvasRenderingContext2D>();\n\n  // Setup: cache rects, subscribe for drag events\n  useEffect(() => {\n    // We use `offsetLeft` instead of `left` to support screen transition\n    const colorRect = {\n      offsetLeft: colorPickerRef.current!.offsetLeft,\n      ...pick(colorPickerRef.current!.getBoundingClientRect(), ['top', 'width', 'height']),\n    };\n    const hueRect = {\n      offsetLeft: huePickerRef.current!.offsetLeft,\n      ...pick(huePickerRef.current!.getBoundingClientRect(), ['width']),\n    };\n\n    rectsRef.current = { colorRect, hueRect };\n\n    function handleColorDrag(e: MouseEvent | RealTouchEvent) {\n      const colorPosition = [\n        Math.min(Math.max(0, e.pageX! - colorRect.offsetLeft), colorRect.width - 1),\n        Math.min(Math.max(0, e.pageY! - colorRect.top + containerRef.current!.scrollTop), colorRect.height - 1),\n      ];\n\n      const { huePosition } = hsb2positions(hsbRef.current, rectsRef.current!);\n\n      setHsb(positions2hsb({ colorPosition, huePosition }, rectsRef.current!));\n      markIsDragging();\n\n      return true;\n    }\n\n    captureEvents(colorPickerRef.current!, {\n      onCapture: handleColorDrag,\n      onDrag: handleColorDrag,\n      onRelease: unmarkIsDragging,\n      onClick: unmarkIsDragging,\n      selectorToPreventScroll: '.SettingsGeneralBackgroundColor',\n      withCursor: true,\n    });\n\n    function handleHueDrag(e: MouseEvent | RealTouchEvent) {\n      const { colorPosition } = hsb2positions(hsbRef.current, rectsRef.current!);\n      const huePosition = Math.min(Math.max(0, e.pageX! - hueRect.offsetLeft), hueRect.width - 1);\n\n      setHsb(positions2hsb({ colorPosition, huePosition }, rectsRef.current!));\n      markIsDragging();\n\n      return true;\n    }\n\n    captureEvents(huePickerRef.current!, {\n      onCapture: handleHueDrag,\n      onDrag: handleHueDrag,\n      onRelease: unmarkIsDragging,\n      onClick: unmarkIsDragging,\n      selectorToPreventScroll: '.SettingsGeneralBackgroundColor',\n      withCursor: true,\n    });\n  }, [markIsDragging, unmarkIsDragging]);\n\n  const { colorPosition = [0, 0], huePosition = 0 } = rectsRef.current ? hsb2positions(hsb, rectsRef.current) : {};\n  const hex = rgb2hex(hsb2rgb(hsb));\n  const hue = hsb[0];\n  const hueHex = rgb2hex(hsb2rgb([hue, 1, 1]));\n\n  // Save value and update inputs when HSL changes\n  useEffect(() => {\n    const rgb = hsb2rgb(hsb);\n    const color = `#${rgb2hex(rgb)}`;\n\n    setRgbInput(rgb.join(', '));\n    setHexInput(color);\n\n    if (!isFirstRunRef.current) {\n      const patternColor = getPatternColor(rgb);\n      setThemeSettings({\n        theme: themeRef.current!,\n        background: undefined,\n        backgroundColor: color,\n        patternColor,\n      });\n    }\n    isFirstRunRef.current = false;\n  }, [hsb, setThemeSettings]);\n\n  // Redraw color picker when hue changes\n  useEffect(() => {\n    drawColor(colorPickerRef.current!.firstChild as HTMLCanvasElement, hue, colorCtxRef, rectsRef);\n  }, [hue]);\n\n  // Initially draw hue picker\n  useEffect(() => {\n    drawHue(huePickerRef.current!.firstChild as HTMLCanvasElement);\n  }, []);\n\n  const handleRgbChange = useCallback((e: ChangeEvent<HTMLInputElement>) => {\n    const rgbValue = e.currentTarget.value.replace(/[^\\d, ]/g, '').slice(0, 13);\n\n    if (rgbValue.match(/^\\d{1,3},\\s?\\d{1,3},\\s?\\d{1,3}$/)) {\n      const rgb = rgbValue.split(',').map((channel) => Number(channel.trim())) as [number, number, number];\n      setHsb(rgb2hsb(rgb));\n    }\n\n    e.currentTarget.value = rgbValue;\n  }, []);\n\n  const handleHexChange = useCallback((e: ChangeEvent<HTMLInputElement>) => {\n    const hexValue = e.currentTarget.value.replace(/[^0-9a-fA-F]/g, '').slice(0, 6);\n\n    if (hexValue.match(/^#?[0-9a-fA-F]{6}$/)) {\n      setHsb(rgb2hsb(hex2rgb(hexValue.replace('#', ''))));\n    }\n\n    e.currentTarget.value = hexValue;\n  }, []);\n\n  const handlePredefinedColorClick = useCallback((e: React.MouseEvent<HTMLInputElement>) => {\n    setHsb(rgb2hsb(hex2rgb(e.currentTarget.dataset.color!.replace('#', ''))));\n  }, []);\n\n  const className = buildClassName(\n    'SettingsGeneralBackgroundColor settings-content custom-scroll',\n    isDragging && 'is-dragging',\n  );\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  return (\n    <div ref={containerRef} className={className}>\n      <div className=\"settings-item pt-3\">\n        <div ref={colorPickerRef} className=\"color-picker\">\n          <canvas />\n          <div\n            className=\"handle\"\n            style={`transform: translate(${colorPosition[0]}px, ${colorPosition[1]}px); background-color: #${hex};`}\n          />\n        </div>\n        <div ref={huePickerRef} className=\"hue-picker\">\n          <canvas />\n          <div\n            className=\"handle\"\n            style={`transform: translateX(${huePosition}px); background-color: #${hueHex};`}\n          />\n        </div>\n        <div className=\"tools\">\n          <InputText value={hexInput} label=\"HEX\" onChange={handleHexChange} />\n          <InputText value={rgbInput} label=\"RGB\" onChange={handleRgbChange} />\n        </div>\n      </div>\n      <div className=\"predefined-colors\">\n        {PREDEFINED_COLORS.map((color) => (\n          <div\n            className={buildClassName('predefined-color', color === `#${hex}` ? 'active' : undefined)}\n            data-color={color}\n            style={`background-color: ${color};`}\n            onClick={handlePredefinedColorClick}\n          />\n        ))}\n      </div>\n    </div>\n  );\n};\n\nfunction getInitialHsb(backgroundColor?: string) {\n  return backgroundColor && backgroundColor.startsWith('#')\n    ? rgb2hsb(hex2rgb(backgroundColor.replace('#', '')))\n    : DEFAULT_HSB;\n}\n\nfunction hsb2positions(hsb: [number, number, number], rects: CanvasRects) {\n  return {\n    colorPosition: [\n      Math.round((hsb[1]) * (rects.colorRect.width - 1)),\n      Math.round((1 - hsb[2]) * (rects.colorRect.height - 1)),\n    ],\n    huePosition: Math.round(hsb[0] * (rects.hueRect.width - 1)),\n  };\n}\n\nfunction positions2hsb(\n  { colorPosition, huePosition }: { colorPosition: number[]; huePosition: number },\n  rects: CanvasRects,\n): [number, number, number] {\n  return [\n    huePosition / (rects.hueRect.width - 1),\n    colorPosition[0] / (rects.colorRect.width - 1),\n    1 - colorPosition[1] / (rects.colorRect.height - 1),\n  ];\n}\n\nfunction drawColor(\n  canvas: HTMLCanvasElement,\n  hue: number,\n  colorCtxRef: MutableRefObject<CanvasRenderingContext2D | undefined>,\n  rectsRef: RefObject<CanvasRects | undefined>,\n) {\n  let w: number;\n  let h: number;\n  let ctx: CanvasRenderingContext2D;\n\n  if (!colorCtxRef.current || !rectsRef.current) {\n    // First run\n    w = canvas.offsetWidth;\n    h = canvas.offsetHeight;\n    ctx = canvas.getContext('2d')!;\n\n    canvas.width = w;\n    canvas.height = h;\n\n    colorCtxRef.current = ctx;\n  } else {\n    w = rectsRef.current.colorRect.width;\n    h = rectsRef.current.colorRect.height;\n    ctx = colorCtxRef.current;\n  }\n\n  const imgData = ctx!.createImageData(w, h);\n  const pixels = imgData.data;\n  const col = hsb2rgb([hue, 1, 1]);\n\n  let index = 0;\n\n  for (let y = 0; y < h; y++) {\n    const perY = 1 - y / (h - 1);\n    const st = [255 * perY, 255 * perY, 255 * perY];\n    const ed = [col[0] * perY, col[1] * perY, col[2] * perY];\n    for (let x = 0; x < w; x++) {\n      const perX = x / (w - 1);\n      pixels[index++] = st[0] + (ed[0] - st[0]) * perX;\n      pixels[index++] = st[1] + (ed[1] - st[1]) * perX;\n      pixels[index++] = st[2] + (ed[2] - st[2]) * perX;\n      pixels[index++] = 255;\n    }\n  }\n\n  ctx!.putImageData(imgData, 0, 0);\n}\n\nfunction drawHue(canvas: HTMLCanvasElement) {\n  const w = canvas.offsetWidth;\n  const h = 1;\n  canvas.width = w;\n  canvas.height = h;\n  const ctx = canvas.getContext('2d')!;\n\n  const imgData = ctx.createImageData(w, h);\n  const pixels = imgData.data;\n\n  let index = 0;\n\n  for (let x = 0; x < w; x++) {\n    const hue = x / (w - 1);\n    const rgb = hsb2rgb([hue, 1, 1]);\n    /* eslint-disable prefer-destructuring */\n    pixels[index++] = rgb[0];\n    pixels[index++] = rgb[1];\n    pixels[index++] = rgb[2];\n    /* eslint-enable prefer-destructuring */\n    pixels[index++] = 255;\n  }\n\n  ctx.putImageData(imgData, 0, 0);\n}\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const theme = selectTheme(global);\n    const { backgroundColor } = global.settings.themes[theme] || {};\n    return {\n      backgroundColor,\n      theme,\n    };\n  },\n)(SettingsGeneralBackground));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useMemo, useState,\n} from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport { SettingsScreens } from '../../../types';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useMultiClick from '../../../hooks/useMultiClick';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Button from '../../ui/Button';\nimport ConfirmDialog from '../../ui/ConfirmDialog';\nimport DropdownMenu from '../../ui/DropdownMenu';\nimport MenuItem from '../../ui/MenuItem';\n\ntype OwnProps = {\n  currentScreen: SettingsScreens;\n  editedFolderId?: number;\n  onReset: () => void;\n  onScreenSelect: (screen: SettingsScreens) => void;\n};\n\nconst SettingsHeader: FC<OwnProps> = ({\n  currentScreen,\n  editedFolderId,\n  onReset,\n  onScreenSelect,\n}) => {\n  const {\n    signOut,\n    openDeleteChatFolderModal,\n  } = getActions();\n\n  const { isMobile } = useAppLayout();\n  const [isSignOutDialogOpen, setIsSignOutDialogOpen] = useState(false);\n\n  const handleMultiClick = useMultiClick(5, () => {\n    onScreenSelect(SettingsScreens.Experimental);\n  });\n\n  const openSignOutConfirmation = useCallback(() => {\n    setIsSignOutDialogOpen(true);\n  }, []);\n\n  const closeSignOutConfirmation = useCallback(() => {\n    setIsSignOutDialogOpen(false);\n  }, []);\n\n  const openDeleteFolderConfirmation = useCallback(() => {\n    if (!editedFolderId) return;\n\n    openDeleteChatFolderModal({ folderId: editedFolderId });\n  }, [editedFolderId, openDeleteChatFolderModal]);\n\n  const handleSignOutMessage = useCallback(() => {\n    closeSignOutConfirmation();\n    signOut({ forceInitApi: true });\n  }, [closeSignOutConfirmation, signOut]);\n\n  const SettingsMenuButton: FC<{ onTrigger: () => void; isOpen?: boolean }> = useMemo(() => {\n    return ({ onTrigger, isOpen }) => (\n      <Button\n        round\n        ripple={!isMobile}\n        size=\"smaller\"\n        color=\"translucent\"\n        className={isOpen ? 'active' : ''}\n        onClick={onTrigger}\n        ariaLabel=\"More actions\"\n      >\n        <i className=\"icon icon-more\" />\n      </Button>\n    );\n  }, [isMobile]);\n\n  const lang = useOldLang();\n\n  function renderHeaderContent() {\n    switch (currentScreen) {\n      case SettingsScreens.EditProfile:\n        return <h3>{lang('lng_settings_information')}</h3>;\n      case SettingsScreens.General:\n        return <h3>{lang('General')}</h3>;\n      case SettingsScreens.QuickReaction:\n        return <h3>{lang('DoubleTapSetting')}</h3>;\n      case SettingsScreens.CustomEmoji:\n        return <h3>{lang('Emoji')}</h3>;\n      case SettingsScreens.Notifications:\n        return <h3>{lang('Notifications')}</h3>;\n      case SettingsScreens.DataStorage:\n        return <h3>{lang('DataSettings')}</h3>;\n      case SettingsScreens.Privacy:\n        return <h3>{lang('PrivacySettings')}</h3>;\n      case SettingsScreens.Language:\n        return <h3>{lang('Language')}</h3>;\n      case SettingsScreens.DoNotTranslate:\n        return <h3>{lang('DoNotTranslate')}</h3>;\n      case SettingsScreens.Stickers:\n        return <h3>{lang('StickersName')}</h3>;\n      case SettingsScreens.Experimental:\n        return <h3>{lang('lng_settings_experimental')}</h3>;\n\n      case SettingsScreens.GeneralChatBackground:\n        return <h3>{lang('ChatBackground')}</h3>;\n      case SettingsScreens.GeneralChatBackgroundColor:\n        return <h3>{lang('SetColor')}</h3>;\n\n      case SettingsScreens.PrivacyPhoneNumber:\n        return <h3>{lang('PrivacyPhone')}</h3>;\n      case SettingsScreens.PrivacyLastSeen:\n        return <h3>{lang('PrivacyLastSeen')}</h3>;\n      case SettingsScreens.PrivacyProfilePhoto:\n        return <h3>{lang('Privacy.ProfilePhoto')}</h3>;\n      case SettingsScreens.PrivacyBio:\n        return <h3>{lang('PrivacyBio')}</h3>;\n      case SettingsScreens.PrivacyBirthday:\n        return <h3>{lang('PrivacyBirthday')}</h3>;\n      case SettingsScreens.PrivacyForwarding:\n        return <h3>{lang('PrivacyForwards')}</h3>;\n      case SettingsScreens.PrivacyVoiceMessages:\n        return <h3>{lang('PrivacyVoiceMessages')}</h3>;\n      case SettingsScreens.PrivacyMessages:\n        return <h3>{lang('PrivacyMessages')}</h3>;\n      case SettingsScreens.PrivacyGroupChats:\n        return <h3>{lang('AutodownloadGroupChats')}</h3>;\n      case SettingsScreens.PrivacyPhoneCall:\n        return <h3>{lang('Calls')}</h3>;\n\n      case SettingsScreens.PrivacyPhoneNumberAllowedContacts:\n      case SettingsScreens.PrivacyLastSeenAllowedContacts:\n      case SettingsScreens.PrivacyProfilePhotoAllowedContacts:\n      case SettingsScreens.PrivacyBioAllowedContacts:\n      case SettingsScreens.PrivacyBirthdayAllowedContacts:\n      case SettingsScreens.PrivacyForwardingAllowedContacts:\n      case SettingsScreens.PrivacyVoiceMessagesAllowedContacts:\n      case SettingsScreens.PrivacyGroupChatsAllowedContacts:\n      case SettingsScreens.PrivacyPhoneCallAllowedContacts:\n      case SettingsScreens.PrivacyPhoneP2PAllowedContacts:\n        return <h3>{lang('AlwaysShareWith')}</h3>;\n      case SettingsScreens.PrivacyPhoneNumberDeniedContacts:\n      case SettingsScreens.PrivacyLastSeenDeniedContacts:\n      case SettingsScreens.PrivacyProfilePhotoDeniedContacts:\n      case SettingsScreens.PrivacyBioDeniedContacts:\n      case SettingsScreens.PrivacyBirthdayDeniedContacts:\n      case SettingsScreens.PrivacyForwardingDeniedContacts:\n      case SettingsScreens.PrivacyVoiceMessagesDeniedContacts:\n      case SettingsScreens.PrivacyGroupChatsDeniedContacts:\n      case SettingsScreens.PrivacyPhoneCallDeniedContacts:\n      case SettingsScreens.PrivacyPhoneP2PDeniedContacts:\n        return <h3>{lang('NeverShareWith')}</h3>;\n\n      case SettingsScreens.Performance:\n        return <h3>{lang('Animations and Performance')}</h3>;\n\n      case SettingsScreens.ActiveSessions:\n        return <h3>{lang('SessionsTitle')}</h3>;\n      case SettingsScreens.ActiveWebsites:\n        return <h3>{lang('OtherWebSessions')}</h3>;\n      case SettingsScreens.PrivacyBlockedUsers:\n        return <h3>{lang('BlockedUsers')}</h3>;\n\n      case SettingsScreens.TwoFaDisabled:\n      case SettingsScreens.TwoFaEnabled:\n        return <h3>{lang('TwoStepVerification')}</h3>;\n      case SettingsScreens.TwoFaNewPassword:\n      case SettingsScreens.TwoFaChangePasswordNew:\n      case SettingsScreens.TwoFaChangePasswordConfirm:\n        return <h3>{lang('PleaseEnterCurrentPassword')}</h3>;\n      case SettingsScreens.TwoFaNewPasswordConfirm:\n        return <h3>{lang('PleaseReEnterPassword')}</h3>;\n      case SettingsScreens.TwoFaNewPasswordHint:\n      case SettingsScreens.TwoFaChangePasswordHint:\n        return <h3>{lang('PasswordHint')}</h3>;\n      case SettingsScreens.TwoFaNewPasswordEmail:\n      case SettingsScreens.TwoFaRecoveryEmail:\n        return <h3>{lang('RecoveryEmailTitle')}</h3>;\n      case SettingsScreens.TwoFaNewPasswordEmailCode:\n      case SettingsScreens.TwoFaRecoveryEmailCode:\n        return <h3>Recovery Email Code</h3>;\n      case SettingsScreens.TwoFaCongratulations:\n        return <h3>{lang('TwoStepVerificationPasswordSet')}</h3>;\n      case SettingsScreens.TwoFaChangePasswordCurrent:\n      case SettingsScreens.TwoFaTurnOff:\n      case SettingsScreens.TwoFaRecoveryEmailCurrentPassword:\n        return <h3>{lang('PleaseEnterCurrentPassword')}</h3>;\n\n      case SettingsScreens.PasscodeDisabled:\n      case SettingsScreens.PasscodeEnabled:\n      case SettingsScreens.PasscodeNewPasscode:\n      case SettingsScreens.PasscodeNewPasscodeConfirm:\n      case SettingsScreens.PasscodeCongratulations:\n        return <h3>{lang('Passcode')}</h3>;\n\n      case SettingsScreens.PasscodeTurnOff:\n        return <h3>{lang('PasscodeController.Disable.Title')}</h3>;\n\n      case SettingsScreens.PasscodeChangePasscodeCurrent:\n      case SettingsScreens.PasscodeChangePasscodeNew:\n        return <h3>{lang('PasscodeController.Change.Title')}</h3>;\n\n      case SettingsScreens.PasscodeChangePasscodeConfirm:\n        return <h3>{lang('PasscodeController.ReEnterPasscode.Placeholder')}</h3>;\n\n      case SettingsScreens.Folders:\n        return <h3>{lang('Filters')}</h3>;\n      case SettingsScreens.FoldersCreateFolder:\n        return <h3>{lang('FilterNew')}</h3>;\n      case SettingsScreens.FoldersShare:\n        return <h3>{lang('FolderLinkScreen.Title')}</h3>;\n      case SettingsScreens.FoldersEditFolder:\n      case SettingsScreens.FoldersEditFolderFromChatList:\n      case SettingsScreens.FoldersEditFolderInvites:\n        return (\n          <div className=\"settings-main-header\">\n            <h3>{lang('FilterEdit')}</h3>\n            {Boolean(editedFolderId) && (\n              <DropdownMenu\n                className=\"settings-more-menu\"\n                trigger={SettingsMenuButton}\n                positionX=\"right\"\n              >\n                <MenuItem icon=\"delete\" destructive onClick={openDeleteFolderConfirmation}>\n                  {lang('Delete')}\n                </MenuItem>\n              </DropdownMenu>\n            )}\n          </div>\n        );\n      case SettingsScreens.FoldersIncludedChats:\n      case SettingsScreens.FoldersIncludedChatsFromChatList:\n      case SettingsScreens.FoldersExcludedChats:\n      case SettingsScreens.FoldersExcludedChatsFromChatList:\n        return (\n          <h3>\n            {lang(\n              currentScreen === SettingsScreens.FoldersIncludedChats\n                  || currentScreen === SettingsScreens.FoldersIncludedChatsFromChatList\n                ? 'FilterInclude' : 'FilterExclude',\n            )}\n          </h3>\n        );\n      default:\n        return (\n          <div className=\"settings-main-header\">\n            {/* eslint-disable-next-line jsx-a11y/no-noninteractive-element-interactions */}\n            <h3 onClick={handleMultiClick}>\n              {lang('SETTINGS')}\n            </h3>\n\n            <Button\n              round\n              ripple={!isMobile}\n              size=\"smaller\"\n              color=\"translucent\"\n              // eslint-disable-next-line react/jsx-no-bind\n              onClick={() => onScreenSelect(SettingsScreens.EditProfile)}\n              ariaLabel={lang('lng_settings_information')}\n            >\n              <i className=\"icon icon-edit\" />\n            </Button>\n            <DropdownMenu\n              className=\"settings-more-menu\"\n              trigger={SettingsMenuButton}\n              positionX=\"right\"\n            >\n              <MenuItem icon=\"logout\" onClick={openSignOutConfirmation}>{lang('LogOutTitle')}</MenuItem>\n            </DropdownMenu>\n          </div>\n        );\n    }\n  }\n\n  return (\n    <div className=\"left-header\">\n      <Button\n        round\n        size=\"smaller\"\n        color=\"translucent\"\n        onClick={onReset}\n        ariaLabel={lang('AccDescrGoBack')}\n      >\n        <i className=\"icon icon-arrow-left\" />\n      </Button>\n      {renderHeaderContent()}\n      <ConfirmDialog\n        isOpen={isSignOutDialogOpen}\n        onClose={closeSignOutConfirmation}\n        text={lang('lng_sure_logout')}\n        confirmLabel={lang('AccountSettings.Logout')}\n        confirmHandler={handleSignOutMessage}\n        confirmIsDestructive\n      />\n    </div>\n  );\n};\n\nexport default memo(SettingsHeader);\n","import { useCallback, useRef } from '../lib/teact/teact';\n\nconst CLICK_TIMEOUT = 300;\n\nexport default function useMultiClick(amount: number, callback: NoneToVoidFunction) {\n  const currentAmountRef = useRef(0);\n  const timeoutRef = useRef<ReturnType<typeof setTimeout>>();\n  const handleClick = useCallback(() => {\n    currentAmountRef.current++;\n    if (currentAmountRef.current === amount) {\n      currentAmountRef.current = 0;\n      callback();\n      return;\n    }\n\n    if (timeoutRef.current) {\n      clearTimeout(timeoutRef.current);\n    }\n\n    timeoutRef.current = setTimeout(() => {\n      currentAmountRef.current = 0;\n    }, CLICK_TIMEOUT);\n  }, [amount, callback]);\n\n  return handleClick;\n}\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ISettings, LangCode } from '../../../types';\nimport { SettingsScreens } from '../../../types';\n\nimport { selectIsCurrentUserPremium } from '../../../global/selectors';\nimport { oldSetLanguage } from '../../../util/oldLangProvider';\nimport { IS_TRANSLATION_SUPPORTED } from '../../../util/windowEnvironment';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport ItemPicker, { type ItemPickerOption } from '../../common/pickers/ItemPicker';\nimport Checkbox from '../../ui/Checkbox';\nimport ListItem from '../../ui/ListItem';\nimport Loading from '../../ui/Loading';\n\ntype OwnProps = {\n  isActive?: boolean;\n  onReset: () => void;\n  onScreenSelect: (screen: SettingsScreens) => void;\n};\n\ntype StateProps = {\n  isCurrentUserPremium: boolean;\n} & Pick<ISettings, 'languages' | 'language' | 'canTranslate' | 'canTranslateChats' | 'doNotTranslate'>;\n\nconst SettingsLanguage: FC<OwnProps & StateProps> = ({\n  isActive,\n  isCurrentUserPremium,\n  languages,\n  language,\n  canTranslate,\n  canTranslateChats,\n  doNotTranslate,\n  onScreenSelect,\n  onReset,\n}) => {\n  const {\n    loadLanguages,\n    loadAttachBots,\n    setSettingOption,\n    openPremiumModal,\n  } = getActions();\n\n  const [selectedLanguage, setSelectedLanguage] = useState<string>(language);\n  const [isLoading, markIsLoading, unmarkIsLoading] = useFlag();\n\n  const canTranslateChatsEnabled = isCurrentUserPremium && canTranslateChats;\n\n  const lang = useOldLang();\n\n  useEffect(() => {\n    if (!languages?.length) {\n      loadLanguages();\n    }\n  }, [languages]);\n\n  const handleChange = useLastCallback((langCode: string) => {\n    setSelectedLanguage(langCode);\n    markIsLoading();\n\n    void oldSetLanguage(langCode as LangCode, () => {\n      unmarkIsLoading();\n\n      setSettingOption({ language: langCode as LangCode });\n\n      loadAttachBots(); // Should be refetched every language change\n    });\n  });\n\n  const options = useMemo(() => {\n    if (!languages) return undefined;\n    const currentLangCode = (window.navigator.language || 'en').toLowerCase();\n    const shortLangCode = currentLangCode.substr(0, 2);\n\n    return languages.map(({ langCode, nativeName, name }) => ({\n      value: langCode,\n      label: nativeName,\n      subLabel: name,\n      isLoading: langCode === selectedLanguage && isLoading,\n    } satisfies ItemPickerOption)).sort((a) => {\n      return currentLangCode && (a.value === currentLangCode || a.value === shortLangCode) ? -1 : 0;\n    });\n  }, [isLoading, languages, selectedLanguage]);\n\n  const handleShouldTranslateChange = useLastCallback((newValue: boolean) => {\n    setSettingOption({ canTranslate: newValue });\n  });\n\n  const handleShouldTranslateChatsChange = useLastCallback((newValue: boolean) => {\n    setSettingOption({ canTranslateChats: newValue });\n  });\n\n  const handleShouldTranslateChatsClick = useLastCallback(() => {\n    if (!isCurrentUserPremium) {\n      openPremiumModal({\n        initialSection: 'translations',\n      });\n    }\n  });\n\n  const doNotTranslateText = useMemo(() => {\n    if (!IS_TRANSLATION_SUPPORTED || !doNotTranslate.length) {\n      return undefined;\n    }\n\n    if (doNotTranslate.length === 1) {\n      const originalNames = new Intl.DisplayNames([language], { type: 'language' });\n      return originalNames.of(doNotTranslate[0])!;\n    }\n\n    return lang('Languages', doNotTranslate.length);\n  }, [doNotTranslate, lang, language]);\n\n  const handleDoNotSelectOpen = useLastCallback(() => {\n    onScreenSelect(SettingsScreens.DoNotTranslate);\n  });\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  return (\n    <div className=\"settings-content settings-language custom-scroll\">\n      {IS_TRANSLATION_SUPPORTED && (\n        <div className=\"settings-item\">\n          <Checkbox\n            label={lang('ShowTranslateButton')}\n            checked={canTranslate}\n            onCheck={handleShouldTranslateChange}\n          />\n          <Checkbox\n            label={lang('ShowTranslateChatButton')}\n            checked={canTranslateChatsEnabled}\n            disabled={!isCurrentUserPremium}\n            rightIcon={!isCurrentUserPremium ? 'lock' : undefined}\n            onClickLabel={handleShouldTranslateChatsClick}\n            onCheck={handleShouldTranslateChatsChange}\n          />\n          {(canTranslate || canTranslateChatsEnabled) && (\n            <ListItem\n              narrow\n              onClick={handleDoNotSelectOpen}\n            >\n              {lang('DoNotTranslate')}\n              <span className=\"settings-item__current-value\">{doNotTranslateText}</span>\n            </ListItem>\n          )}\n          <p className=\"settings-item-description mb-0 mt-1\">\n            {lang('lng_translate_settings_about')}\n          </p>\n        </div>\n      )}\n      <div className=\"settings-item settings-item-picker\">\n        <h4 className=\"settings-item-header settings-picker-title\">\n          {lang('Localization.InterfaceLanguage')}\n        </h4>\n        {options ? (\n          <ItemPicker\n            items={options}\n            selectedValue={selectedLanguage}\n            onSelectedValueChange={handleChange}\n            itemInputType=\"radio\"\n            className=\"settings-picker\"\n          />\n        ) : (\n          <Loading />\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const {\n      language, languages, canTranslate, canTranslateChats, doNotTranslate,\n    } = global.settings.byKey;\n\n    const isCurrentUserPremium = selectIsCurrentUserPremium(global);\n\n    return {\n      isCurrentUserPremium,\n      languages,\n      language,\n      canTranslate,\n      canTranslateChats,\n      doNotTranslate,\n    };\n  },\n)(SettingsLanguage));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useEffect } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport { SettingsScreens } from '../../../types';\n\nimport { FAQ_URL, PRIVACY_URL } from '../../../config';\nimport {\n  selectIsGiveawayGiftsPurchaseAvailable,\n  selectIsPremiumPurchaseBlocked,\n} from '../../../global/selectors';\nimport { formatInteger } from '../../../util/textFormat';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport StarIcon from '../../common/icons/StarIcon';\nimport ChatExtra from '../../common/profile/ChatExtra';\nimport ProfileInfo from '../../common/ProfileInfo';\nimport ConfirmDialog from '../../ui/ConfirmDialog';\nimport ListItem from '../../ui/ListItem';\n\ntype OwnProps = {\n  isActive?: boolean;\n  onScreenSelect: (screen: SettingsScreens) => void;\n  onReset: () => void;\n};\n\ntype StateProps = {\n  sessionCount: number;\n  currentUserId?: string;\n  canBuyPremium?: boolean;\n  isGiveawayAvailable?: boolean;\n  starsBalance?: number;\n  shouldDisplayStars?: boolean;\n};\n\nconst SettingsMain: FC<OwnProps & StateProps> = ({\n  isActive,\n  currentUserId,\n  sessionCount,\n  canBuyPremium,\n  isGiveawayAvailable,\n  starsBalance,\n  shouldDisplayStars,\n  onScreenSelect,\n  onReset,\n}) => {\n  const {\n    loadMoreProfilePhotos,\n    openPremiumModal,\n    openSupportChat,\n    openUrl,\n    openPremiumGiftingModal,\n    openStarsBalanceModal,\n  } = getActions();\n\n  const [isSupportDialogOpen, openSupportDialog, closeSupportDialog] = useFlag(false);\n\n  const oldLang = useOldLang();\n\n  useEffect(() => {\n    if (currentUserId) {\n      loadMoreProfilePhotos({ peerId: currentUserId, isPreload: true });\n    }\n  }, [currentUserId]);\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  const handleOpenSupport = useLastCallback(() => {\n    openSupportChat();\n    closeSupportDialog();\n  });\n\n  return (\n    <div className=\"settings-content custom-scroll\">\n      <div className=\"settings-main-menu\">\n        {currentUserId && (\n          <ProfileInfo\n            peerId={currentUserId}\n            canPlayVideo={Boolean(isActive)}\n            forceShowSelf\n          />\n        )}\n        {currentUserId && (\n          <ChatExtra\n            chatOrUserId={currentUserId}\n            isInSettings\n          />\n        )}\n        <ListItem\n          icon=\"settings\"\n          narrow\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onScreenSelect(SettingsScreens.General)}\n        >\n          {oldLang('Telegram.GeneralSettingsViewController')}\n        </ListItem>\n        <ListItem\n          icon=\"animations\"\n          narrow\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onScreenSelect(SettingsScreens.Performance)}\n        >\n          {oldLang('Animations and Performance')}\n        </ListItem>\n        <ListItem\n          icon=\"unmute\"\n          narrow\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onScreenSelect(SettingsScreens.Notifications)}\n        >\n          {oldLang('Notifications')}\n        </ListItem>\n        <ListItem\n          icon=\"data\"\n          narrow\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onScreenSelect(SettingsScreens.DataStorage)}\n        >\n          {oldLang('DataSettings')}\n        </ListItem>\n        <ListItem\n          icon=\"lock\"\n          narrow\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onScreenSelect(SettingsScreens.Privacy)}\n        >\n          {oldLang('PrivacySettings')}\n        </ListItem>\n        <ListItem\n          icon=\"folder\"\n          narrow\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onScreenSelect(SettingsScreens.Folders)}\n        >\n          {oldLang('Filters')}\n        </ListItem>\n        <ListItem\n          icon=\"active-sessions\"\n          narrow\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onScreenSelect(SettingsScreens.ActiveSessions)}\n        >\n          {oldLang('SessionsTitle')}\n          {sessionCount > 0 && (<span className=\"settings-item__current-value\">{sessionCount}</span>)}\n        </ListItem>\n        <ListItem\n          icon=\"language\"\n          narrow\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onScreenSelect(SettingsScreens.Language)}\n        >\n          {oldLang('Language')}\n          <span className=\"settings-item__current-value\">{oldLang.langName}</span>\n        </ListItem>\n        <ListItem\n          icon=\"stickers\"\n          narrow\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onScreenSelect(SettingsScreens.Stickers)}\n        >\n          {oldLang('StickersName')}\n        </ListItem>\n      </div>\n      <div className=\"settings-main-menu\">\n        {canBuyPremium && (\n          <ListItem\n            leftElement={<StarIcon className=\"icon ListItem-main-icon\" type=\"premium\" size=\"big\" />}\n            narrow\n            // eslint-disable-next-line react/jsx-no-bind\n            onClick={() => openPremiumModal()}\n          >\n            {oldLang('TelegramPremium')}\n          </ListItem>\n        )}\n        {shouldDisplayStars && (\n          <ListItem\n            leftElement={<StarIcon className=\"icon ListItem-main-icon\" type=\"gold\" size=\"big\" />}\n            narrow\n            // eslint-disable-next-line react/jsx-no-bind\n            onClick={() => openStarsBalanceModal({})}\n          >\n            {oldLang('MenuTelegramStars')}\n            {Boolean(starsBalance) && (\n              <span className=\"settings-item__current-value\">{formatInteger(starsBalance)}</span>\n            )}\n          </ListItem>\n        )}\n        {isGiveawayAvailable && (\n          <ListItem\n            icon=\"gift\"\n            narrow\n            // eslint-disable-next-line react/jsx-no-bind\n            onClick={() => openPremiumGiftingModal()}\n          >\n            {oldLang('GiftPremiumGifting')}\n          </ListItem>\n        )}\n      </div>\n      <div className=\"settings-main-menu\">\n        <ListItem\n          icon=\"ask-support\"\n          narrow\n          onClick={openSupportDialog}\n        >\n          {oldLang('AskAQuestion')}\n        </ListItem>\n        <ListItem\n          icon=\"help\"\n          narrow\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => openUrl({ url: FAQ_URL })}\n        >\n          {oldLang('TelegramFaq')}\n        </ListItem>\n        <ListItem\n          icon=\"privacy-policy\"\n          narrow\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => openUrl({ url: PRIVACY_URL })}\n        >\n          {oldLang('PrivacyPolicy')}\n        </ListItem>\n      </div>\n      <ConfirmDialog\n        isOpen={isSupportDialogOpen}\n        confirmLabel={oldLang('lng_settings_ask_ok')}\n        title={oldLang('AskAQuestion')}\n        text={oldLang('lng_settings_ask_sure')}\n        confirmHandler={handleOpenSupport}\n        onClose={closeSupportDialog}\n      />\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const { currentUserId } = global;\n    const isGiveawayAvailable = selectIsGiveawayGiftsPurchaseAvailable(global);\n    const starsBalance = global.stars?.balance;\n    const shouldDisplayStars = Boolean(global.stars?.history?.all?.transactions.length);\n\n    return {\n      sessionCount: global.activeSessions.orderedHashes.length,\n      currentUserId,\n      canBuyPremium: !selectIsPremiumPurchaseBlocked(global),\n      isGiveawayAvailable,\n      starsBalance,\n      shouldDisplayStars,\n    };\n  },\n)(SettingsMain));\n","import type { ChangeEvent } from 'react';\nimport type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback, useEffect } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport {\n  checkIfNotificationsSupported,\n  checkIfOfflinePushFailed,\n  playNotifySound,\n} from '../../../util/notifications';\n\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useRunDebounced from '../../../hooks/useRunDebounced';\n\nimport Checkbox from '../../ui/Checkbox';\nimport RangeSlider from '../../ui/RangeSlider';\n\ntype OwnProps = {\n  isActive?: boolean;\n  onReset: () => void;\n};\n\ntype StateProps = {\n  hasPrivateChatsNotifications: boolean;\n  hasPrivateChatsMessagePreview: boolean;\n  hasGroupNotifications: boolean;\n  hasGroupMessagePreview: boolean;\n  hasBroadcastNotifications: boolean;\n  hasBroadcastMessagePreview: boolean;\n  hasContactJoinedNotifications: boolean;\n  hasWebNotifications: boolean;\n  hasPushNotifications: boolean;\n  notificationSoundVolume: number;\n};\n\nconst SettingsNotifications: FC<OwnProps & StateProps> = ({\n  isActive,\n  onReset,\n  hasPrivateChatsNotifications,\n  hasPrivateChatsMessagePreview,\n  hasGroupNotifications,\n  hasGroupMessagePreview,\n  hasBroadcastNotifications,\n  hasBroadcastMessagePreview,\n  hasContactJoinedNotifications,\n  hasPushNotifications,\n  hasWebNotifications,\n  notificationSoundVolume,\n}) => {\n  const {\n    loadNotificationSettings,\n    updateContactSignUpNotification,\n    updateNotificationSettings,\n    updateWebNotificationSettings,\n  } = getActions();\n\n  useEffect(() => {\n    loadNotificationSettings();\n  }, [loadNotificationSettings]);\n\n  const runDebounced = useRunDebounced(500, true);\n\n  const areNotificationsSupported = checkIfNotificationsSupported();\n  const areOfflineNotificationsSupported = areNotificationsSupported && !checkIfOfflinePushFailed();\n\n  const handleSettingsChange = useCallback((\n    e: ChangeEvent<HTMLInputElement>,\n    peerType: 'contact' | 'group' | 'broadcast',\n    setting: 'silent' | 'showPreviews',\n  ) => {\n    const currentIsSilent = peerType === 'contact'\n      ? !hasPrivateChatsNotifications\n      : !(peerType === 'group' ? hasGroupNotifications : hasBroadcastNotifications);\n    const currentShouldShowPreviews = peerType === 'contact'\n      ? hasPrivateChatsMessagePreview\n      : (peerType === 'group' ? hasGroupMessagePreview : hasBroadcastMessagePreview);\n\n    updateNotificationSettings({\n      peerType,\n      ...(setting === 'silent' && { isSilent: !e.target.checked, shouldShowPreviews: currentShouldShowPreviews }),\n      ...(setting === 'showPreviews' && { shouldShowPreviews: e.target.checked, isSilent: currentIsSilent }),\n    });\n  }, [\n    hasBroadcastMessagePreview, hasBroadcastNotifications,\n    hasGroupMessagePreview, hasGroupNotifications,\n    hasPrivateChatsMessagePreview, hasPrivateChatsNotifications,\n    updateNotificationSettings,\n  ]);\n\n  const handleWebNotificationsChange = useCallback((e: ChangeEvent<HTMLInputElement>) => {\n    const isEnabled = e.target.checked;\n    updateWebNotificationSettings({\n      hasWebNotifications: isEnabled,\n      ...(!isEnabled && { hasPushNotifications: false }),\n    });\n  }, [updateWebNotificationSettings]);\n\n  const handlePushNotificationsChange = useCallback((e: ChangeEvent<HTMLInputElement>) => {\n    updateWebNotificationSettings({\n      hasPushNotifications: e.target.checked,\n    });\n  }, [updateWebNotificationSettings]);\n\n  const handlePrivateChatsNotificationsChange = useCallback((e: ChangeEvent<HTMLInputElement>) => {\n    handleSettingsChange(e, 'contact', 'silent');\n  }, [handleSettingsChange]);\n\n  const handlePrivateChatsPreviewChange = useCallback((e: ChangeEvent<HTMLInputElement>) => {\n    handleSettingsChange(e, 'contact', 'showPreviews');\n  }, [handleSettingsChange]);\n\n  const handleGroupsNotificationsChange = useCallback((e: ChangeEvent<HTMLInputElement>) => {\n    handleSettingsChange(e, 'group', 'silent');\n  }, [handleSettingsChange]);\n\n  const handleGroupsPreviewChange = useCallback((e: ChangeEvent<HTMLInputElement>) => {\n    handleSettingsChange(e, 'group', 'showPreviews');\n  }, [handleSettingsChange]);\n\n  const handleChannelsNotificationsChange = useCallback((e: ChangeEvent<HTMLInputElement>) => {\n    handleSettingsChange(e, 'broadcast', 'silent');\n  }, [handleSettingsChange]);\n\n  const handleChannelsPreviewChange = useCallback((e: ChangeEvent<HTMLInputElement>) => {\n    handleSettingsChange(e, 'broadcast', 'showPreviews');\n  }, [handleSettingsChange]);\n\n  const handleContactNotificationChange = useCallback((e: ChangeEvent<HTMLInputElement>) => {\n    updateContactSignUpNotification({\n      isSilent: !e.target.checked,\n    });\n  }, [updateContactSignUpNotification]);\n\n  const handleVolumeChange = useCallback((volume: number) => {\n    updateWebNotificationSettings({\n      notificationSoundVolume: volume,\n    });\n    runDebounced(() => playNotifySound(undefined, volume));\n  }, [runDebounced, updateWebNotificationSettings]);\n\n  const lang = useOldLang();\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  return (\n    <div className=\"settings-content custom-scroll\">\n      <div className=\"settings-item\">\n        <h4 className=\"settings-item-header\" dir={lang.isRtl ? 'rtl' : undefined}>\n          Web notifications\n        </h4>\n        <Checkbox\n          label=\"Web notifications\"\n          // eslint-disable-next-line max-len\n          subLabel={lang(hasWebNotifications ? 'UserInfo.NotificationsEnabled' : 'UserInfo.NotificationsDisabled')}\n          checked={hasWebNotifications}\n          disabled={!areNotificationsSupported}\n          onChange={handleWebNotificationsChange}\n        />\n        <Checkbox\n          label=\"Offline notifications\"\n          disabled={!hasWebNotifications || !areOfflineNotificationsSupported}\n          // eslint-disable-next-line max-len\n          subLabel={areOfflineNotificationsSupported ? lang(hasPushNotifications ? 'UserInfo.NotificationsEnabled' : 'UserInfo.NotificationsDisabled') : 'Not supported'}\n          checked={hasPushNotifications}\n          onChange={handlePushNotificationsChange}\n        />\n        <div className=\"settings-item-slider\">\n          <RangeSlider\n            label=\"Sound\"\n            min={0}\n            max={10}\n            disabled={!areNotificationsSupported}\n            value={notificationSoundVolume}\n            onChange={handleVolumeChange}\n          />\n        </div>\n      </div>\n      <div className=\"settings-item\">\n        <h4 className=\"settings-item-header\" dir={lang.isRtl ? 'rtl' : undefined}>\n          {lang('AutodownloadPrivateChats')}\n        </h4>\n\n        <Checkbox\n          label={lang('NotificationsForPrivateChats')}\n          // eslint-disable-next-line max-len\n          subLabel={lang(hasPrivateChatsNotifications ? 'UserInfo.NotificationsEnabled' : 'UserInfo.NotificationsDisabled')}\n          checked={hasPrivateChatsNotifications}\n          onChange={handlePrivateChatsNotificationsChange}\n        />\n        <Checkbox\n          label={lang('MessagePreview')}\n          disabled={!hasPrivateChatsNotifications}\n          // eslint-disable-next-line max-len\n          subLabel={lang(hasPrivateChatsMessagePreview ? 'UserInfo.NotificationsEnabled' : 'UserInfo.NotificationsDisabled')}\n          checked={hasPrivateChatsMessagePreview}\n          onChange={handlePrivateChatsPreviewChange}\n        />\n      </div>\n\n      <div className=\"settings-item\">\n        <h4 className=\"settings-item-header\" dir={lang.isRtl ? 'rtl' : undefined}>{lang('FilterGroups')}</h4>\n\n        <Checkbox\n          label={lang('NotificationsForGroups')}\n          subLabel={lang(hasGroupNotifications ? 'UserInfo.NotificationsEnabled' : 'UserInfo.NotificationsDisabled')}\n          checked={hasGroupNotifications}\n          onChange={handleGroupsNotificationsChange}\n        />\n        <Checkbox\n          label={lang('MessagePreview')}\n          disabled={!hasGroupNotifications}\n          subLabel={lang(hasGroupMessagePreview ? 'UserInfo.NotificationsEnabled' : 'UserInfo.NotificationsDisabled')}\n          checked={hasGroupMessagePreview}\n          onChange={handleGroupsPreviewChange}\n        />\n      </div>\n\n      <div className=\"settings-item\">\n        <h4 className=\"settings-item-header\" dir={lang.isRtl ? 'rtl' : undefined}>{lang('FilterChannels')}</h4>\n\n        <Checkbox\n          label={lang('NotificationsForChannels')}\n          // eslint-disable-next-line max-len\n          subLabel={lang(hasBroadcastNotifications ? 'UserInfo.NotificationsEnabled' : 'UserInfo.NotificationsDisabled')}\n          checked={hasBroadcastNotifications}\n          onChange={handleChannelsNotificationsChange}\n        />\n        <Checkbox\n          label={lang('MessagePreview')}\n          disabled={!hasBroadcastNotifications}\n          // eslint-disable-next-line max-len\n          subLabel={lang(hasBroadcastMessagePreview ? 'UserInfo.NotificationsEnabled' : 'UserInfo.NotificationsDisabled')}\n          checked={hasBroadcastMessagePreview}\n          onChange={handleChannelsPreviewChange}\n        />\n      </div>\n\n      <div className=\"settings-item\">\n        <h4 className=\"settings-item-header\" dir={lang.isRtl ? 'rtl' : undefined}>{lang('PhoneOther')}</h4>\n\n        <Checkbox\n          label={lang('ContactJoined')}\n          checked={hasContactJoinedNotifications}\n          onChange={handleContactNotificationChange}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    return {\n      hasPrivateChatsNotifications: Boolean(global.settings.byKey.hasPrivateChatsNotifications),\n      hasPrivateChatsMessagePreview: Boolean(global.settings.byKey.hasPrivateChatsMessagePreview),\n      hasGroupNotifications: Boolean(global.settings.byKey.hasGroupNotifications),\n      hasGroupMessagePreview: Boolean(global.settings.byKey.hasGroupMessagePreview),\n      hasBroadcastNotifications: Boolean(global.settings.byKey.hasBroadcastNotifications),\n      hasBroadcastMessagePreview: Boolean(global.settings.byKey.hasBroadcastMessagePreview),\n      hasContactJoinedNotifications: Boolean(global.settings.byKey.hasContactJoinedNotifications),\n      hasWebNotifications: global.settings.byKey.hasWebNotifications,\n      hasPushNotifications: global.settings.byKey.hasPushNotifications,\n      notificationSoundVolume: global.settings.byKey.notificationSoundVolume,\n    };\n  },\n)(SettingsNotifications));\n","import React, {\n  memo, useCallback, useMemo, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { AnimationLevel, PerformanceType, PerformanceTypeKey } from '../../../types';\n\nimport {\n  ANIMATION_LEVEL_CUSTOM, ANIMATION_LEVEL_MAX, ANIMATION_LEVEL_MED, ANIMATION_LEVEL_MIN,\n} from '../../../config';\nimport {\n  INITIAL_PERFORMANCE_STATE_MAX,\n  INITIAL_PERFORMANCE_STATE_MID,\n  INITIAL_PERFORMANCE_STATE_MIN,\n} from '../../../global/initialState';\nimport { selectPerformanceSettings } from '../../../global/selectors';\nimport { areDeepEqual } from '../../../util/areDeepEqual';\nimport { IS_BACKDROP_BLUR_SUPPORTED } from '../../../util/windowEnvironment';\n\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Checkbox from '../../ui/Checkbox';\nimport RangeSlider from '../../ui/RangeSlider';\n\ntype PerformanceSection = [string, PerformanceOption[]];\ntype PerformanceOption = {\n  key: PerformanceTypeKey;\n  label: string;\n  disabled?: boolean;\n};\n\ntype OwnProps = {\n  isActive?: boolean;\n  onReset: () => void;\n};\n\ntype StateProps = {\n  performanceSettings: PerformanceType;\n};\n\nconst ANIMATION_LEVEL_OPTIONS = [\n  'Power Saving',\n  'Nice and Fast',\n  'Lots of Stuff',\n];\n\nconst ANIMATION_LEVEL_CUSTOM_OPTIONS = [\n  'Power Saving',\n  'Custom',\n  'Lots of Stuff',\n];\n\nconst PERFORMANCE_OPTIONS: PerformanceSection[] = [\n  ['LiteMode.Key.animations.Title', [\n    { key: 'pageTransitions', label: 'Page Transitions' },\n    { key: 'messageSendingAnimations', label: 'Message Sending Animation' },\n    { key: 'mediaViewerAnimations', label: 'Media Viewer Animations' },\n    { key: 'messageComposerAnimations', label: 'Message Composer Animations' },\n    { key: 'contextMenuAnimations', label: 'Context Menu Animation' },\n    { key: 'contextMenuBlur', label: 'Context Menu Blur', disabled: !IS_BACKDROP_BLUR_SUPPORTED },\n    { key: 'rightColumnAnimations', label: 'Right Column Animation' },\n  ]],\n  ['Stickers and Emoji', [\n    { key: 'animatedEmoji', label: 'Allow Animated Emoji' },\n    { key: 'loopAnimatedStickers', label: 'Loop Animated Stickers' },\n    { key: 'reactionEffects', label: 'Reaction Effects' },\n    { key: 'stickerEffects', label: 'Full-Screen Sticker and Emoji Effects' },\n  ]],\n  ['AutoplayMedia', [\n    { key: 'autoplayGifs', label: 'AutoplayGIF' },\n    { key: 'autoplayVideos', label: 'AutoplayVideo' },\n  ]],\n];\n\nfunction SettingsPerformance({\n  isActive,\n  performanceSettings,\n  onReset,\n}: OwnProps & StateProps) {\n  const {\n    setSettingOption,\n    updatePerformanceSettings,\n  } = getActions();\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  const lang = useOldLang();\n  const [sectionExpandedStates, setSectionExpandedStates] = useState<Record<number, boolean>>({});\n\n  const sectionCheckedStates = useMemo(() => {\n    return PERFORMANCE_OPTIONS.reduce((acc, [, options], index) => {\n      acc[index] = options.every(({ key }) => performanceSettings[key]);\n\n      return acc;\n    }, {} as Record<number, boolean>);\n  }, [performanceSettings]);\n\n  const animationLevelState = useMemo(() => {\n    if (areDeepEqual(performanceSettings, INITIAL_PERFORMANCE_STATE_MAX)) {\n      return ANIMATION_LEVEL_MAX;\n    }\n    if (areDeepEqual(performanceSettings, INITIAL_PERFORMANCE_STATE_MIN)) {\n      return ANIMATION_LEVEL_MIN;\n    }\n    if (areDeepEqual(performanceSettings, INITIAL_PERFORMANCE_STATE_MID)) {\n      return ANIMATION_LEVEL_MED;\n    }\n\n    return ANIMATION_LEVEL_CUSTOM;\n  }, [performanceSettings]);\n  const animationLevelOptions = animationLevelState === ANIMATION_LEVEL_CUSTOM\n    ? ANIMATION_LEVEL_CUSTOM_OPTIONS\n    : ANIMATION_LEVEL_OPTIONS;\n\n  const handleToggleSection = useCallback((e: React.MouseEvent, index?: string) => {\n    e.preventDefault();\n    const sectionIndex = Number(index);\n\n    setSectionExpandedStates((prev) => ({\n      ...prev,\n      [sectionIndex]: !prev[sectionIndex],\n    }));\n  }, []);\n\n  const handleAnimationLevelChange = useCallback((newLevel: number) => {\n    const performance = newLevel === ANIMATION_LEVEL_MIN\n      ? INITIAL_PERFORMANCE_STATE_MIN\n      : (newLevel === ANIMATION_LEVEL_MED ? INITIAL_PERFORMANCE_STATE_MID : INITIAL_PERFORMANCE_STATE_MAX);\n\n    setSettingOption({ animationLevel: newLevel as AnimationLevel });\n    updatePerformanceSettings(performance);\n  }, [setSettingOption]);\n\n  const handlePropertyGroupChange = useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    const { name, checked } = e.target;\n    const perfomanceSection = PERFORMANCE_OPTIONS.find(([sectionName]) => sectionName === name);\n    if (!perfomanceSection) {\n      return;\n    }\n\n    const newSettings = perfomanceSection[1].reduce((acc, { key }) => {\n      acc[key] = checked;\n      return acc;\n    }, {} as Partial<PerformanceType>);\n\n    updatePerformanceSettings(newSettings);\n  }, []);\n\n  const handlePropertyChange = useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    const { name, checked } = e.target;\n\n    updatePerformanceSettings({ [name as PerformanceTypeKey]: checked });\n  }, []);\n\n  return (\n    <div className=\"settings-content custom-scroll\">\n      <div className=\"settings-item\">\n        <h4 className=\"settings-item-header\" dir={lang.isRtl ? 'rtl' : undefined}>\n          Animation Level\n        </h4>\n        <p className=\"settings-item-description\" dir={lang.isRtl ? 'rtl' : undefined}>\n          Choose the desired animations amount.\n        </p>\n\n        <RangeSlider\n          options={animationLevelOptions}\n          value={animationLevelState === ANIMATION_LEVEL_CUSTOM ? ANIMATION_LEVEL_MED : animationLevelState}\n          onChange={handleAnimationLevelChange}\n        />\n      </div>\n\n      <div className=\"settings-item-simple settings-item__with-shifted-dropdown\">\n        <h3 className=\"settings-item-header\" dir=\"auto\">Resource-Intensive Processes</h3>\n\n        {PERFORMANCE_OPTIONS.map(([sectionName, options], index) => {\n          return (\n            <div\n              key={sectionName}\n              className=\"settings-dropdown-section\"\n            >\n              <div className=\"ListItem with-checkbox\">\n                <Checkbox\n                  name={sectionName}\n                  value={index.toString()}\n                  checked={sectionCheckedStates[index]}\n                  label={lang(sectionName)}\n                  rightIcon={sectionExpandedStates[index] ? 'up' : 'down'}\n                  onChange={handlePropertyGroupChange}\n                  onClickLabel={handleToggleSection}\n                />\n              </div>\n              {Boolean(sectionExpandedStates[index]) && (\n                <div className=\"DropdownList DropdownList--open\">\n                  {options.map(({ key, label, disabled }) => (\n                    <Checkbox\n                      key={key}\n                      name={key}\n                      checked={performanceSettings[key]}\n                      label={lang(label)}\n                      disabled={disabled}\n                      onChange={handlePropertyChange}\n                    />\n                  ))}\n                </div>\n              )}\n            </div>\n          );\n        })}\n      </div>\n    </div>\n  );\n}\n\nexport default memo(withGlobal<OwnProps>((global): StateProps => {\n  return {\n    performanceSettings: selectPerformanceSettings(global),\n  };\n})(SettingsPerformance));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback, useEffect } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { GlobalState } from '../../../global/types';\nimport type { ApiPrivacySettings } from '../../../types';\nimport { SettingsScreens } from '../../../types';\n\nimport { selectCanSetPasscode, selectIsCurrentUserPremium } from '../../../global/selectors';\n\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport StarIcon from '../../common/icons/StarIcon';\nimport Checkbox from '../../ui/Checkbox';\nimport ListItem from '../../ui/ListItem';\n\ntype OwnProps = {\n  isActive?: boolean;\n  onScreenSelect: (screen: SettingsScreens) => void;\n  onReset: () => void;\n};\n\ntype StateProps = {\n  isCurrentUserPremium?: boolean;\n  hasPassword?: boolean;\n  hasPasscode?: boolean;\n  canSetPasscode?: boolean;\n  blockedCount: number;\n  webAuthCount: number;\n  isSensitiveEnabled?: boolean;\n  canChangeSensitive?: boolean;\n  canDisplayAutoarchiveSetting: boolean;\n  shouldArchiveAndMuteNewNonContact?: boolean;\n  shouldNewNonContactPeersRequirePremium?: boolean;\n  canDisplayChatInTitle?: boolean;\n  privacy: GlobalState['settings']['privacy'];\n};\n\nconst SettingsPrivacy: FC<OwnProps & StateProps> = ({\n  isActive,\n  isCurrentUserPremium,\n  hasPassword,\n  hasPasscode,\n  blockedCount,\n  webAuthCount,\n  isSensitiveEnabled,\n  canChangeSensitive,\n  canDisplayAutoarchiveSetting,\n  shouldArchiveAndMuteNewNonContact,\n  shouldNewNonContactPeersRequirePremium,\n  canDisplayChatInTitle,\n  canSetPasscode,\n  privacy,\n  onScreenSelect,\n  onReset,\n}) => {\n  const {\n    loadPrivacySettings,\n    loadBlockedUsers,\n    loadContentSettings,\n    updateContentSettings,\n    loadGlobalPrivacySettings,\n    updateGlobalPrivacySettings,\n    loadWebAuthorizations,\n    setSettingOption,\n  } = getActions();\n\n  useEffect(() => {\n    loadBlockedUsers();\n    loadPrivacySettings();\n    loadContentSettings();\n    loadWebAuthorizations();\n  }, []);\n\n  useEffect(() => {\n    if (isActive) {\n      loadGlobalPrivacySettings();\n    }\n  }, [isActive, loadGlobalPrivacySettings]);\n\n  const lang = useOldLang();\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  const handleArchiveAndMuteChange = useCallback((isEnabled: boolean) => {\n    updateGlobalPrivacySettings({\n      shouldArchiveAndMuteNewNonContact: isEnabled,\n    });\n  }, [updateGlobalPrivacySettings]);\n\n  const handleChatInTitleChange = useCallback((isChecked: boolean) => {\n    setSettingOption({\n      canDisplayChatInTitle: isChecked,\n    });\n  }, []);\n\n  const handleUpdateContentSettings = useCallback((isChecked: boolean) => {\n    updateContentSettings(isChecked);\n  }, [updateContentSettings]);\n\n  function getVisibilityValue(setting?: ApiPrivacySettings) {\n    if (!setting) return lang('Loading');\n\n    const { visibility, shouldAllowPremium } = setting;\n    const blockCount = setting.blockChatIds.length + setting.blockUserIds.length;\n    const allowCount = setting.allowChatIds.length + setting.allowUserIds.length;\n    const total = [];\n    if (blockCount) total.push(`-${blockCount}`);\n    if (allowCount) total.push(`+${allowCount}`);\n\n    const exceptionString = total.length ? `(${total.join(',')})` : '';\n\n    if (shouldAllowPremium) {\n      return lang(exceptionString ? 'ContactsAndPremium' : 'PrivacyPremium');\n    }\n\n    switch (visibility) {\n      case 'everybody':\n        return `${lang('P2PEverybody')} ${exceptionString}`;\n\n      case 'contacts':\n        return `${lang('P2PContacts')} ${exceptionString}`;\n\n      case 'nobody':\n        return `${lang('P2PNobody')} ${exceptionString}`;\n    }\n\n    return undefined;\n  }\n\n  return (\n    <div className=\"settings-content custom-scroll\">\n      <div className=\"settings-item pt-3\">\n        <ListItem\n          icon=\"delete-user\"\n          narrow\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onScreenSelect(SettingsScreens.PrivacyBlockedUsers)}\n        >\n          {lang('BlockedUsers')}\n          <span className=\"settings-item__current-value\">{blockedCount || ''}</span>\n        </ListItem>\n        {canSetPasscode && (\n          <ListItem\n            icon=\"key\"\n            narrow\n            // eslint-disable-next-line react/jsx-no-bind\n            onClick={() => onScreenSelect(\n              hasPasscode ? SettingsScreens.PasscodeEnabled : SettingsScreens.PasscodeDisabled,\n            )}\n          >\n            <div className=\"multiline-menu-item\">\n              <span className=\"title\">{lang('Passcode')}</span>\n              <span className=\"subtitle\" dir=\"auto\">\n                {lang(hasPasscode ? 'PasswordOn' : 'PasswordOff')}\n              </span>\n            </div>\n          </ListItem>\n        )}\n        <ListItem\n          icon=\"lock\"\n          narrow\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onScreenSelect(\n            hasPassword ? SettingsScreens.TwoFaEnabled : SettingsScreens.TwoFaDisabled,\n          )}\n        >\n          <div className=\"multiline-menu-item\">\n            <span className=\"title\">{lang('TwoStepVerification')}</span>\n            <span className=\"subtitle\" dir=\"auto\">\n              {lang(hasPassword ? 'PasswordOn' : 'PasswordOff')}\n            </span>\n          </div>\n        </ListItem>\n        {webAuthCount > 0 && (\n          <ListItem\n            icon=\"web\"\n            narrow\n            // eslint-disable-next-line react/jsx-no-bind\n            onClick={() => onScreenSelect(SettingsScreens.ActiveWebsites)}\n          >\n            {lang('PrivacySettings.WebSessions')}\n            <span className=\"settings-item__current-value\">{webAuthCount}</span>\n          </ListItem>\n        )}\n      </div>\n\n      <div className=\"settings-item\">\n        <h4 className=\"settings-item-header\" dir={lang.isRtl ? 'rtl' : undefined}>{lang('PrivacyTitle')}</h4>\n\n        <ListItem\n          narrow\n          className=\"no-icon\"\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onScreenSelect(SettingsScreens.PrivacyPhoneNumber)}\n        >\n          <div className=\"multiline-menu-item\">\n            <span className=\"title\">{lang('PrivacyPhoneTitle')}</span>\n            <span className=\"subtitle\" dir=\"auto\">\n              {getVisibilityValue(privacy.phoneNumber)}\n            </span>\n          </div>\n        </ListItem>\n        <ListItem\n          narrow\n          className=\"no-icon\"\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onScreenSelect(SettingsScreens.PrivacyLastSeen)}\n        >\n          <div className=\"multiline-menu-item\">\n            <span className=\"title\">{lang('LastSeenTitle')}</span>\n            <span className=\"subtitle\" dir=\"auto\">\n              {getVisibilityValue(privacy.lastSeen)}\n            </span>\n          </div>\n        </ListItem>\n        <ListItem\n          narrow\n          className=\"no-icon\"\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onScreenSelect(SettingsScreens.PrivacyProfilePhoto)}\n        >\n          <div className=\"multiline-menu-item\">\n            <span className=\"title\">{lang('PrivacyProfilePhotoTitle')}</span>\n            <span className=\"subtitle\" dir=\"auto\">\n              {getVisibilityValue(privacy.profilePhoto)}\n            </span>\n          </div>\n        </ListItem>\n        <ListItem\n          narrow\n          className=\"no-icon\"\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onScreenSelect(SettingsScreens.PrivacyBio)}\n        >\n          <div className=\"multiline-menu-item\">\n            <span className=\"title\">{lang('PrivacyBio')}</span>\n            <span className=\"subtitle\" dir=\"auto\">\n              {getVisibilityValue(privacy.bio)}\n            </span>\n          </div>\n        </ListItem>\n        <ListItem\n          narrow\n          className=\"no-icon\"\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onScreenSelect(SettingsScreens.PrivacyBirthday)}\n        >\n          <div className=\"multiline-menu-item\">\n            <span className=\"title\">{lang('PrivacyBirthday')}</span>\n            <span className=\"subtitle\" dir=\"auto\">\n              {getVisibilityValue(privacy.birthday)}\n            </span>\n          </div>\n        </ListItem>\n        <ListItem\n          narrow\n          className=\"no-icon\"\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onScreenSelect(SettingsScreens.PrivacyForwarding)}\n        >\n          <div className=\"multiline-menu-item\">\n            <span className=\"title\">{lang('PrivacyForwardsTitle')}</span>\n            <span className=\"subtitle\" dir=\"auto\">\n              {getVisibilityValue(privacy.forwards)}\n            </span>\n          </div>\n        </ListItem>\n        <ListItem\n          narrow\n          className=\"no-icon\"\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onScreenSelect(SettingsScreens.PrivacyPhoneCall)}\n        >\n          <div className=\"multiline-menu-item\">\n            <span className=\"title\">{lang('WhoCanCallMe')}</span>\n            <span className=\"subtitle\" dir=\"auto\">\n              {getVisibilityValue(privacy.phoneCall)}\n            </span>\n          </div>\n        </ListItem>\n        <ListItem\n          narrow\n          allowDisabledClick\n          rightElement={isCurrentUserPremium && <StarIcon size=\"big\" type=\"premium\" />}\n          className=\"no-icon\"\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onScreenSelect(SettingsScreens.PrivacyVoiceMessages)}\n        >\n          <div className=\"multiline-menu-item\">\n            <span className=\"title\">{lang('PrivacyVoiceMessagesTitle')}</span>\n            <span className=\"subtitle\" dir=\"auto\">\n              {getVisibilityValue(privacy.voiceMessages)}\n            </span>\n          </div>\n        </ListItem>\n        <ListItem\n          narrow\n          rightElement={isCurrentUserPremium && <StarIcon size=\"big\" type=\"premium\" />}\n          className=\"no-icon\"\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onScreenSelect(SettingsScreens.PrivacyMessages)}\n        >\n          <div className=\"multiline-menu-item\">\n            <span className=\"title\">{lang('PrivacyMessagesTitle')}</span>\n            <span className=\"subtitle\" dir=\"auto\">\n              {shouldNewNonContactPeersRequirePremium\n                ? lang('PrivacyMessagesContactsAndPremium')\n                : lang('P2PEverybody')}\n            </span>\n          </div>\n        </ListItem>\n        <ListItem\n          narrow\n          className=\"no-icon\"\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onScreenSelect(SettingsScreens.PrivacyGroupChats)}\n        >\n          <div className=\"multiline-menu-item\">\n            <span className=\"title\">{lang('WhoCanAddMe')}</span>\n            <span className=\"subtitle\" dir=\"auto\">\n              {getVisibilityValue(privacy.chatInvite)}\n            </span>\n          </div>\n        </ListItem>\n      </div>\n\n      {canChangeSensitive && (\n        <div className=\"settings-item\">\n          <h4 className=\"settings-item-header\" dir={lang.isRtl ? 'rtl' : undefined}>\n            {lang('lng_settings_sensitive_title')}\n          </h4>\n          <Checkbox\n            label={lang('lng_settings_sensitive_disable_filtering')}\n            subLabel={lang('lng_settings_sensitive_about')}\n            checked={Boolean(isSensitiveEnabled)}\n            disabled={!canChangeSensitive}\n            onCheck={handleUpdateContentSettings}\n          />\n        </div>\n      )}\n\n      {canDisplayAutoarchiveSetting && (\n        <div className=\"settings-item\">\n          <h4 className=\"settings-item-header\" dir={lang.isRtl ? 'rtl' : undefined}>\n            {lang('NewChatsFromNonContacts')}\n          </h4>\n          <Checkbox\n            label={lang('ArchiveAndMute')}\n            subLabel={lang('ArchiveAndMuteInfo')}\n            checked={Boolean(shouldArchiveAndMuteNewNonContact)}\n            onCheck={handleArchiveAndMuteChange}\n          />\n        </div>\n      )}\n\n      <div className=\"settings-item\">\n        <h4 className=\"settings-item-header\" dir={lang.isRtl ? 'rtl' : undefined}>\n          {lang('lng_settings_window_system')}\n        </h4>\n        <Checkbox\n          label={lang('lng_settings_title_chat_name')}\n          checked={Boolean(canDisplayChatInTitle)}\n          onCheck={handleChatInTitleChange}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const {\n      settings: {\n        byKey: {\n          hasPassword, isSensitiveEnabled, canChangeSensitive, shouldArchiveAndMuteNewNonContact,\n          canDisplayChatInTitle, shouldNewNonContactPeersRequirePremium,\n        },\n        privacy,\n      },\n      blocked,\n      passcode: {\n        hasPasscode,\n      },\n      appConfig,\n    } = global;\n\n    return {\n      isCurrentUserPremium: selectIsCurrentUserPremium(global),\n      hasPassword,\n      hasPasscode: Boolean(hasPasscode),\n      blockedCount: blocked.totalCount,\n      webAuthCount: global.activeWebSessions.orderedHashes.length,\n      isSensitiveEnabled,\n      canDisplayAutoarchiveSetting: Boolean(appConfig?.canDisplayAutoarchiveSetting),\n      shouldArchiveAndMuteNewNonContact,\n      canChangeSensitive,\n      shouldNewNonContactPeersRequirePremium,\n      privacy,\n      canDisplayChatInTitle,\n      canSetPasscode: selectCanSetPasscode(global),\n    };\n  },\n)(SettingsPrivacy));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect,\n  useMemo, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiUser } from '../../../api/types';\n\nimport { filterUsersByName, getUserFullName } from '../../../global/helpers';\nimport { selectTabState } from '../../../global/selectors';\nimport { unique } from '../../../util/iteratees';\n\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport ChatOrUserPicker from '../../common/pickers/ChatOrUserPicker';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  onClose: NoneToVoidFunction;\n};\n\ntype StateProps = {\n  usersById: Record<string, ApiUser>;\n  blockedIds: string[];\n  contactIds?: string[];\n  localContactIds?: string[];\n  currentUserId?: string;\n};\n\nconst BlockUserModal: FC<OwnProps & StateProps> = ({\n  usersById,\n  blockedIds,\n  contactIds,\n  localContactIds,\n  currentUserId,\n  isOpen,\n  onClose,\n}) => {\n  const {\n    setUserSearchQuery,\n    blockUser,\n  } = getActions();\n\n  const lang = useOldLang();\n  const [search, setSearch] = useState('');\n\n  useEffect(() => {\n    setUserSearchQuery({ query: search });\n  }, [search, setUserSearchQuery]);\n\n  const filteredContactIds = useMemo(() => {\n    const availableContactIds = unique([\n      ...(contactIds || []),\n      ...(localContactIds || []),\n    ].filter((contactId) => {\n      return contactId !== currentUserId && !blockedIds.includes(contactId);\n    }));\n\n    return filterUsersByName(availableContactIds, usersById, search)\n      .sort((firstId, secondId) => {\n        const firstName = getUserFullName(usersById[firstId]) || '';\n        const secondName = getUserFullName(usersById[secondId]) || '';\n\n        return firstName.localeCompare(secondName);\n      });\n  }, [blockedIds, contactIds, currentUserId, search, localContactIds, usersById]);\n\n  const handleRemoveUser = useCallback((userId: string) => {\n    blockUser({ userId });\n    onClose();\n  }, [onClose]);\n\n  return (\n    <ChatOrUserPicker\n      isOpen={isOpen}\n      chatOrUserIds={filteredContactIds}\n      searchPlaceholder={lang('BlockedUsers.BlockUser')}\n      search={search}\n      onSearchChange={setSearch}\n      onSelectChatOrUser={handleRemoveUser}\n      onClose={onClose}\n    />\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const {\n      users: {\n        byId: usersById,\n      },\n      blocked: {\n        ids: blockedIds,\n      },\n      contactList,\n      currentUserId,\n    } = global;\n\n    return {\n      usersById,\n      blockedIds,\n      contactIds: contactList?.userIds,\n      localContactIds: selectTabState(global).userSearch.localUserIds,\n      currentUserId,\n    };\n  },\n)(BlockUserModal));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback, useMemo } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiChat, ApiCountryCode, ApiUser } from '../../../api/types';\n\nimport { CHAT_HEIGHT_PX } from '../../../config';\nimport { getMainUsername, isUserId } from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\nimport { formatPhoneNumberWithCode } from '../../../util/phoneNumber';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Avatar from '../../common/Avatar';\nimport FullNameTitle from '../../common/FullNameTitle';\nimport FloatingActionButton from '../../ui/FloatingActionButton';\nimport ListItem from '../../ui/ListItem';\nimport Loading from '../../ui/Loading';\nimport BlockUserModal from './BlockUserModal';\n\ntype OwnProps = {\n  isActive?: boolean;\n  onReset: () => void;\n};\n\ntype StateProps = {\n  chatsByIds: Record<string, ApiChat>;\n  usersByIds: Record<string, ApiUser>;\n  blockedIds: string[];\n  phoneCodeList: ApiCountryCode[];\n};\n\nconst SettingsPrivacyBlockedUsers: FC<OwnProps & StateProps> = ({\n  isActive,\n  onReset,\n  chatsByIds,\n  usersByIds,\n  blockedIds,\n  phoneCodeList,\n}) => {\n  const { unblockUser } = getActions();\n\n  const lang = useOldLang();\n  const [isBlockUserModalOpen, openBlockUserModal, closeBlockUserModal] = useFlag();\n  const handleUnblockClick = useCallback((userId: string) => {\n    unblockUser({ userId });\n  }, [unblockUser]);\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  const blockedUsernamesById = useMemo(() => {\n    return blockedIds.reduce((acc, userId) => {\n      const isPrivate = isUserId(userId);\n      const user = isPrivate ? usersByIds[userId] : undefined;\n      const mainUsername = user && !user.phoneNumber && getMainUsername(user);\n\n      if (mainUsername) {\n        acc[userId] = mainUsername;\n      }\n\n      return acc;\n    }, {} as Record<string, string>);\n  }, [blockedIds, usersByIds]);\n\n  function renderContact(contactId: string, i: number, viewportOffset: number) {\n    const isPrivate = isUserId(contactId);\n    const user = usersByIds[contactId];\n    const chat = chatsByIds[contactId];\n    const peer = user || chat;\n\n    const className = buildClassName(\n      'Chat chat-item-clickable blocked-list-item small-icon',\n      isPrivate ? 'private' : 'group',\n    );\n\n    const userMainUsername = blockedUsernamesById[contactId];\n\n    return (\n      <ListItem\n        key={`blocked_${contactId}`}\n        className={className}\n        ripple\n        narrow\n        contextActions={[{\n          title: 'Unblock',\n          icon: 'unlock',\n          handler: () => {\n            handleUnblockClick(contactId);\n          },\n        }]}\n        style={`top: ${(viewportOffset + i) * CHAT_HEIGHT_PX}px;`}\n      >\n        <Avatar\n          size=\"medium\"\n          peer={peer}\n        />\n        <div className=\"contact-info\" dir=\"auto\">\n          {peer && <FullNameTitle peer={peer} />}\n          {user?.phoneNumber && (\n            <div className=\"contact-phone\" dir=\"auto\">{formatPhoneNumberWithCode(phoneCodeList, user.phoneNumber)}</div>\n          )}\n          {userMainUsername && (<div className=\"contact-username\" dir=\"auto\">@{userMainUsername}</div>)}\n        </div>\n      </ListItem>\n    );\n  }\n\n  return (\n    <div className=\"settings-fab-wrapper\">\n      <div className=\"settings-content infinite-scroll\">\n        <div className=\"settings-item no-border\">\n          <p className=\"settings-item-description-larger mt-0 mb-2\" dir={lang.isRtl ? 'rtl' : undefined}>\n            {lang('BlockedUsersInfo')}\n          </p>\n        </div>\n\n        <div className=\"chat-list custom-scroll\">\n          {blockedIds?.length ? (\n            <div className=\"scroll-container settings-item\">\n              {blockedIds!.map((contactId, i) => renderContact(contactId, i, 0))}\n            </div>\n          ) : blockedIds && !blockedIds.length ? (\n            <div className=\"no-results\" dir=\"auto\">{lang('NoBlocked')}</div>\n          ) : (\n            <Loading key=\"loading\" />\n          )}\n        </div>\n      </div>\n\n      <FloatingActionButton\n        isShown\n        className=\"block-user-button\"\n        onClick={openBlockUserModal}\n        ariaLabel={lang('BlockContact')}\n      >\n        <i className=\"icon icon-add\" />\n      </FloatingActionButton>\n      <BlockUserModal\n        isOpen={isBlockUserModalOpen}\n        onClose={closeBlockUserModal}\n      />\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const {\n      chats: {\n        byId: chatsByIds,\n      },\n      users: {\n        byId: usersByIds,\n      },\n      blocked: {\n        ids,\n      },\n      countryList: {\n        phoneCodes: phoneCodeList,\n      },\n    } = global;\n\n    return {\n      chatsByIds,\n      usersByIds,\n      blockedIds: ids,\n      phoneCodeList,\n    };\n  },\n)(SettingsPrivacyBlockedUsers));\n","import type { ApiPrivacyKey } from '../../../../types';\nimport { SettingsScreens } from '../../../../types';\n\nexport function getPrivacyKey(screen: SettingsScreens): ApiPrivacyKey | undefined {\n  switch (screen) {\n    case SettingsScreens.PrivacyPhoneNumber:\n    case SettingsScreens.PrivacyPhoneNumberAllowedContacts:\n    case SettingsScreens.PrivacyPhoneNumberDeniedContacts:\n      return 'phoneNumber';\n    case SettingsScreens.PrivacyLastSeen:\n    case SettingsScreens.PrivacyLastSeenAllowedContacts:\n    case SettingsScreens.PrivacyLastSeenDeniedContacts:\n      return 'lastSeen';\n    case SettingsScreens.PrivacyProfilePhoto:\n    case SettingsScreens.PrivacyProfilePhotoAllowedContacts:\n    case SettingsScreens.PrivacyProfilePhotoDeniedContacts:\n      return 'profilePhoto';\n    case SettingsScreens.PrivacyBio:\n    case SettingsScreens.PrivacyBioAllowedContacts:\n    case SettingsScreens.PrivacyBioDeniedContacts:\n      return 'bio';\n    case SettingsScreens.PrivacyBirthday:\n    case SettingsScreens.PrivacyBirthdayAllowedContacts:\n    case SettingsScreens.PrivacyBirthdayDeniedContacts:\n      return 'birthday';\n    case SettingsScreens.PrivacyForwarding:\n    case SettingsScreens.PrivacyForwardingAllowedContacts:\n    case SettingsScreens.PrivacyForwardingDeniedContacts:\n      return 'forwards';\n    case SettingsScreens.PrivacyVoiceMessages:\n    case SettingsScreens.PrivacyVoiceMessagesAllowedContacts:\n    case SettingsScreens.PrivacyVoiceMessagesDeniedContacts:\n      return 'voiceMessages';\n    case SettingsScreens.PrivacyGroupChats:\n    case SettingsScreens.PrivacyGroupChatsAllowedContacts:\n    case SettingsScreens.PrivacyGroupChatsDeniedContacts:\n      return 'chatInvite';\n    case SettingsScreens.PrivacyPhoneCall:\n    case SettingsScreens.PrivacyPhoneCallAllowedContacts:\n    case SettingsScreens.PrivacyPhoneCallDeniedContacts:\n      return 'phoneCall';\n    case SettingsScreens.PrivacyPhoneP2P:\n    case SettingsScreens.PrivacyPhoneP2PAllowedContacts:\n    case SettingsScreens.PrivacyPhoneP2PDeniedContacts:\n      return 'phoneP2P';\n    case SettingsScreens.PrivacyAddByPhone:\n      return 'addByPhone';\n  }\n\n  return undefined;\n}\n","import React, { memo } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { PrivacyVisibility } from '../../../types';\n\nimport { selectIsCurrentUserPremium, selectShouldHideReadMarks } from '../../../global/selectors';\nimport renderText from '../../common/helpers/renderText';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport StarIcon from '../../common/icons/StarIcon';\nimport Checkbox from '../../ui/Checkbox';\nimport ListItem from '../../ui/ListItem';\n\ntype OwnProps = {\n  visibility?: PrivacyVisibility;\n};\n\ntype StateProps = {\n  isCurrentUserPremium: boolean;\n  shouldHideReadMarks: boolean;\n};\n\nconst SettingsPrivacyLastSeen = ({\n  isCurrentUserPremium, shouldHideReadMarks, visibility,\n}: OwnProps & StateProps) => {\n  const { updateGlobalPrivacySettings, openPremiumModal } = getActions();\n  const lang = useOldLang();\n  const canShowHideReadTime = visibility === 'nobody' || visibility === 'contacts';\n\n  const handleChangeShouldHideReadMarks = useLastCallback(\n    (isEnabled) => updateGlobalPrivacySettings({ shouldHideReadMarks: isEnabled }),\n  );\n\n  const handleOpenPremiumModal = useLastCallback(() => {\n    openPremiumModal({\n      initialSection: 'last_seen',\n    });\n  });\n\n  return (\n    <>\n      {canShowHideReadTime && (\n        <div className=\"settings-item\">\n          <Checkbox\n            label={lang('HideReadTime')}\n            checked={shouldHideReadMarks}\n            onCheck={handleChangeShouldHideReadMarks}\n          />\n          <p className=\"settings-item-description-larger\" dir={lang.isRtl ? 'rtl' : undefined}>\n            {renderText(lang('HideReadTimeInfo'), ['br'])}\n          </p>\n        </div>\n      )}\n      <div className=\"settings-item\">\n        <ListItem\n          leftElement={<StarIcon className=\"icon ListItem-main-icon\" type=\"premium\" size=\"big\" />}\n          onClick={handleOpenPremiumModal}\n        >\n          {isCurrentUserPremium ? lang('PrivacyLastSeenPremiumForPremium') : lang('PrivacyLastSeenPremium')}\n        </ListItem>\n        <p\n          className=\"settings-item-description-larger premium-info\"\n          dir={lang.isRtl ? 'rtl' : undefined}\n        >\n          {isCurrentUserPremium\n            ? lang('PrivacyLastSeenPremiumInfoForPremium')\n            : lang('PrivacyLastSeenPremiumInfo')}\n        </p>\n      </div>\n    </>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    return {\n      isCurrentUserPremium: selectIsCurrentUserPremium(global),\n      shouldHideReadMarks: Boolean(selectShouldHideReadMarks(global)),\n    };\n  },\n)(SettingsPrivacyLastSeen));\n","// extracted by mini-css-extract-plugin\nexport default {\"fallback-photo\":\"Qvhl9Jjv\",\"fallbackPhoto\":\"Qvhl9Jjv\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useRef,\n} from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiPhoto } from '../../../api/types';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Avatar from '../../common/Avatar';\nimport ConfirmDialog from '../../ui/ConfirmDialog';\nimport ListItem from '../../ui/ListItem';\nimport SelectAvatar from '../../ui/SelectAvatar';\n\nimport styles from './SettingsPrivacyPublicPhoto.module.scss';\n\ntype OwnProps = {\n  currentUserId: string;\n  hasCurrentUserFullInfo?: boolean;\n  currentUserFallbackPhoto?: ApiPhoto;\n};\n\nconst SettingsPrivacyPublicProfilePhoto: FC<OwnProps> = ({\n  currentUserId,\n  hasCurrentUserFullInfo,\n  currentUserFallbackPhoto,\n}) => {\n  const {\n    loadFullUser, uploadProfilePhoto, deleteProfilePhoto, showNotification,\n  } = getActions();\n\n  const lang = useOldLang();\n\n  const [isDeleteFallbackPhotoModalOpen, openDeleteFallbackPhotoModal, closeDeleteFallbackPhotoModal] = useFlag(false);\n\n  // eslint-disable-next-line no-null/no-null\n  const inputRef = useRef<HTMLInputElement>(null);\n\n  useEffect(() => {\n    if (!hasCurrentUserFullInfo) {\n      loadFullUser({ userId: currentUserId });\n    }\n  }, [hasCurrentUserFullInfo, currentUserId, loadFullUser]);\n\n  const handleSelectFile = useCallback((file: File) => {\n    uploadProfilePhoto({\n      file,\n      isFallback: true,\n    });\n    showNotification({\n      message: lang('Privacy.ProfilePhoto.PublicPhotoSuccess'),\n    });\n  }, [lang, showNotification, uploadProfilePhoto]);\n\n  const handleConfirmDelete = useCallback(() => {\n    closeDeleteFallbackPhotoModal();\n    deleteProfilePhoto({ photo: currentUserFallbackPhoto! });\n  }, [closeDeleteFallbackPhotoModal, deleteProfilePhoto, currentUserFallbackPhoto]);\n\n  const handleOpenFileSelector = useCallback(() => {\n    inputRef.current?.click();\n  }, []);\n\n  return (\n    <div className=\"settings-item\">\n      <ListItem\n        narrow\n        icon=\"camera-add\"\n        onClick={handleOpenFileSelector}\n      >\n        <SelectAvatar\n          onChange={handleSelectFile}\n          inputRef={inputRef}\n        />\n        {lang(currentUserFallbackPhoto\n          ? 'Privacy.ProfilePhoto.UpdatePublicPhoto'\n          : 'Privacy.ProfilePhoto.SetPublicPhoto')}\n      </ListItem>\n      {currentUserFallbackPhoto && (\n        <ListItem\n          narrow\n          leftElement={<Avatar photo={currentUserFallbackPhoto} size=\"mini\" className={styles.fallbackPhoto} />}\n          onClick={openDeleteFallbackPhotoModal}\n          destructive\n        >\n          {lang(currentUserFallbackPhoto.isVideo\n            ? 'Privacy.ProfilePhoto.RemovePublicVideo'\n            : 'Privacy.ProfilePhoto.RemovePublicPhoto')}\n          <ConfirmDialog\n            isOpen={isDeleteFallbackPhotoModalOpen}\n            onClose={closeDeleteFallbackPhotoModal}\n            text={lang('Privacy.ResetPhoto.Confirm')}\n            confirmLabel={lang('Delete')}\n            confirmHandler={handleConfirmDelete}\n            confirmIsDestructive\n          />\n        </ListItem>\n      )}\n      <p className=\"settings-item-description-larger\" dir={lang.isRtl ? 'rtl' : undefined}>\n        {lang('Privacy.ProfilePhoto.PublicPhotoInfo')}\n      </p>\n    </div>\n  );\n};\n\nexport default memo(SettingsPrivacyPublicProfilePhoto);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback, useMemo } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiPhoto } from '../../../api/types';\nimport type { ApiPrivacySettings } from '../../../types';\nimport { SettingsScreens } from '../../../types';\n\nimport { selectIsCurrentUserPremium, selectUserFullInfo } from '../../../global/selectors';\nimport { getPrivacyKey } from './helpers/privacy';\n\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport ListItem from '../../ui/ListItem';\nimport RadioGroup from '../../ui/RadioGroup';\nimport PremiumStatusItem from './PremiumStatusItem';\nimport PrivacyLockedOption from './PrivacyLockedOption';\nimport SettingsPrivacyLastSeen from './SettingsPrivacyLastSeen';\nimport SettingsPrivacyPublicProfilePhoto from './SettingsPrivacyPublicProfilePhoto';\n\ntype OwnProps = {\n  screen: SettingsScreens;\n  isActive?: boolean;\n  onScreenSelect: (screen: SettingsScreens) => void;\n  onReset: () => void;\n};\n\ntype StateProps = {\n  currentUserId: string;\n  hasCurrentUserFullInfo?: boolean;\n  currentUserFallbackPhoto?: ApiPhoto;\n  primaryPrivacy?: ApiPrivacySettings;\n  secondaryPrivacy?: ApiPrivacySettings;\n  isPremiumRequired?: boolean;\n};\n\nconst SettingsPrivacyVisibility: FC<OwnProps & StateProps> = ({\n  screen,\n  isActive,\n  primaryPrivacy,\n  secondaryPrivacy,\n  currentUserId,\n  hasCurrentUserFullInfo,\n  currentUserFallbackPhoto,\n  isPremiumRequired,\n  onScreenSelect,\n  onReset,\n}) => {\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  const secondaryScreen = useMemo(() => {\n    switch (screen) {\n      case SettingsScreens.PrivacyPhoneCall:\n        return SettingsScreens.PrivacyPhoneP2P;\n      case SettingsScreens.PrivacyPhoneNumber: {\n        return primaryPrivacy?.visibility === 'nobody' ? SettingsScreens.PrivacyAddByPhone : undefined;\n      }\n      default:\n        return undefined;\n    }\n  }, [primaryPrivacy, screen]);\n\n  return (\n    <div className=\"settings-content custom-scroll\">\n      <PrivacySubsection\n        screen={screen}\n        privacy={primaryPrivacy}\n        onScreenSelect={onScreenSelect}\n        isPremiumRequired={isPremiumRequired}\n      />\n      {screen === SettingsScreens.PrivacyProfilePhoto && primaryPrivacy?.visibility !== 'everybody' && (\n        <SettingsPrivacyPublicProfilePhoto\n          currentUserId={currentUserId}\n          hasCurrentUserFullInfo={hasCurrentUserFullInfo}\n          currentUserFallbackPhoto={currentUserFallbackPhoto}\n        />\n      )}\n      {screen === SettingsScreens.PrivacyLastSeen && (\n        <SettingsPrivacyLastSeen visibility={primaryPrivacy?.visibility} />\n      )}\n      {secondaryScreen && (\n        <PrivacySubsection\n          screen={secondaryScreen}\n          privacy={secondaryPrivacy}\n          onScreenSelect={onScreenSelect}\n        />\n      )}\n    </div>\n  );\n};\n\nfunction PrivacySubsection({\n  screen,\n  privacy,\n  onScreenSelect,\n  isPremiumRequired,\n}: {\n  screen: SettingsScreens;\n  privacy?: ApiPrivacySettings;\n  isPremiumRequired?: boolean;\n  onScreenSelect: (screen: SettingsScreens) => void;\n}) {\n  const { setPrivacyVisibility } = getActions();\n  const lang = useOldLang();\n\n  const visibilityOptions = useMemo(() => {\n    const hasNobody = screen !== SettingsScreens.PrivacyAddByPhone;\n    const options = [\n      { value: 'everybody', label: lang('P2PEverybody') },\n      {\n        value: 'contacts',\n        label: isPremiumRequired ? (\n          <PrivacyLockedOption label={lang('P2PContacts')} />\n        ) : (\n          lang('P2PContacts')\n        ),\n        hidden: isPremiumRequired,\n      },\n    ];\n\n    if (hasNobody) {\n      options.push({\n        value: 'nobody',\n        label: isPremiumRequired ? (\n          <PrivacyLockedOption label={lang('P2PNobody')} />\n        ) : (\n          lang('P2PNobody')\n        ),\n        hidden: isPremiumRequired,\n      });\n    }\n    return options;\n  }, [lang, screen, isPremiumRequired]);\n\n  const primaryExceptionLists = useMemo(() => {\n    if (screen === SettingsScreens.PrivacyAddByPhone) {\n      return {\n        shouldShowDenied: false,\n        shouldShowAllowed: false,\n      };\n    }\n\n    return {\n      shouldShowDenied: privacy?.visibility !== 'nobody',\n      shouldShowAllowed: privacy?.visibility !== 'everybody',\n    };\n  }, [privacy, screen]);\n\n  const privacyKey = getPrivacyKey(screen);\n\n  const descriptionText = useMemo(() => {\n    switch (screen) {\n      case SettingsScreens.PrivacyLastSeen:\n        return lang('CustomHelp');\n      case SettingsScreens.PrivacyAddByPhone: {\n        return privacy?.visibility === 'everybody' ? lang('PrivacyPhoneInfo') : lang('PrivacyPhoneInfo3');\n      }\n      case SettingsScreens.PrivacyVoiceMessages:\n        return lang('PrivacyVoiceMessagesInfo');\n      default:\n        return undefined;\n    }\n  }, [lang, screen, privacy]);\n\n  const headerText = useMemo(() => {\n    switch (screen) {\n      case SettingsScreens.PrivacyPhoneNumber:\n        return lang('PrivacyPhoneTitle');\n      case SettingsScreens.PrivacyAddByPhone:\n        return lang('PrivacyPhoneTitle2');\n      case SettingsScreens.PrivacyLastSeen:\n        return lang('LastSeenTitle');\n      case SettingsScreens.PrivacyProfilePhoto:\n        return lang('PrivacyProfilePhotoTitle');\n      case SettingsScreens.PrivacyBio:\n        return lang('PrivacyBioTitle');\n      case SettingsScreens.PrivacyBirthday:\n        return lang('PrivacyBirthdayTitle');\n      case SettingsScreens.PrivacyForwarding:\n        return lang('PrivacyForwardsTitle');\n      case SettingsScreens.PrivacyVoiceMessages:\n        return lang('PrivacyVoiceMessagesTitle');\n      case SettingsScreens.PrivacyGroupChats:\n        return lang('WhoCanAddMe');\n      case SettingsScreens.PrivacyPhoneCall:\n        return lang('WhoCanCallMe');\n      case SettingsScreens.PrivacyPhoneP2P:\n        return lang('PrivacyP2P');\n      default:\n        return undefined;\n    }\n  }, [lang, screen]);\n\n  const prepareSubtitle = useLastCallback((userIds?: string[], chatIds?: string[], shouldAllowPremium?: boolean) => {\n    const userIdsCount = userIds?.length || 0;\n    const chatIdsCount = chatIds?.length || 0;\n\n    if (!userIdsCount && !chatIdsCount) {\n      return shouldAllowPremium ? lang('PrivacyPremium') : lang('EditAdminAddUsers');\n    } else if (shouldAllowPremium) {\n      return lang('ContactsAndPremium');\n    }\n\n    const userCountString = userIdsCount > 0 ? lang('Users', userIdsCount) : undefined;\n    const chatCountString = chatIdsCount > 0 ? lang('Chats', chatIdsCount) : undefined;\n\n    return [userCountString, chatCountString].filter(Boolean).join(', ');\n  });\n\n  const allowedString = useMemo(() => {\n    return prepareSubtitle(privacy?.allowUserIds, privacy?.allowChatIds, privacy?.shouldAllowPremium);\n  }, [privacy]);\n\n  const blockString = useMemo(() => {\n    return prepareSubtitle(privacy?.blockUserIds, privacy?.blockChatIds);\n  }, [privacy]);\n\n  const handleVisibilityChange = useCallback((value) => {\n    setPrivacyVisibility({\n      privacyKey: privacyKey!,\n      visibility: value,\n    });\n  }, [privacyKey]);\n\n  const allowedContactsScreen = (() => {\n    switch (screen) {\n      case SettingsScreens.PrivacyPhoneNumber:\n        return SettingsScreens.PrivacyPhoneNumberAllowedContacts;\n      case SettingsScreens.PrivacyLastSeen:\n        return SettingsScreens.PrivacyLastSeenAllowedContacts;\n      case SettingsScreens.PrivacyProfilePhoto:\n        return SettingsScreens.PrivacyProfilePhotoAllowedContacts;\n      case SettingsScreens.PrivacyBio:\n        return SettingsScreens.PrivacyBioAllowedContacts;\n      case SettingsScreens.PrivacyBirthday:\n        return SettingsScreens.PrivacyBirthdayAllowedContacts;\n      case SettingsScreens.PrivacyForwarding:\n        return SettingsScreens.PrivacyForwardingAllowedContacts;\n      case SettingsScreens.PrivacyPhoneCall:\n        return SettingsScreens.PrivacyPhoneCallAllowedContacts;\n      case SettingsScreens.PrivacyPhoneP2P:\n        return SettingsScreens.PrivacyPhoneP2PAllowedContacts;\n      case SettingsScreens.PrivacyVoiceMessages:\n        return SettingsScreens.PrivacyVoiceMessagesAllowedContacts;\n      default:\n        return SettingsScreens.PrivacyGroupChatsAllowedContacts;\n    }\n  })();\n\n  const deniedContactsScreen = (() => {\n    switch (screen) {\n      case SettingsScreens.PrivacyPhoneNumber:\n        return SettingsScreens.PrivacyPhoneNumberDeniedContacts;\n      case SettingsScreens.PrivacyLastSeen:\n        return SettingsScreens.PrivacyLastSeenDeniedContacts;\n      case SettingsScreens.PrivacyProfilePhoto:\n        return SettingsScreens.PrivacyProfilePhotoDeniedContacts;\n      case SettingsScreens.PrivacyBio:\n        return SettingsScreens.PrivacyBioDeniedContacts;\n      case SettingsScreens.PrivacyBirthday:\n        return SettingsScreens.PrivacyBirthdayDeniedContacts;\n      case SettingsScreens.PrivacyForwarding:\n        return SettingsScreens.PrivacyForwardingDeniedContacts;\n      case SettingsScreens.PrivacyPhoneCall:\n        return SettingsScreens.PrivacyPhoneCallDeniedContacts;\n      case SettingsScreens.PrivacyPhoneP2P:\n        return SettingsScreens.PrivacyPhoneP2PDeniedContacts;\n      case SettingsScreens.PrivacyVoiceMessages:\n        return SettingsScreens.PrivacyVoiceMessagesDeniedContacts;\n      default:\n        return SettingsScreens.PrivacyGroupChatsDeniedContacts;\n    }\n  })();\n\n  return (\n    <>\n      <div className=\"settings-item\">\n        <h4 className=\"settings-item-header\" dir={lang.isRtl ? 'rtl' : undefined}>{headerText}</h4>\n        <RadioGroup\n          name={`visibility-${privacyKey}`}\n          options={visibilityOptions}\n          onChange={handleVisibilityChange}\n          selected={privacy?.visibility}\n        />\n        {descriptionText && (\n          <p className=\"settings-item-description-larger\" dir={lang.isRtl ? 'rtl' : undefined}>{descriptionText}</p>\n        )}\n      </div>\n      {!isPremiumRequired && (primaryExceptionLists.shouldShowAllowed || primaryExceptionLists.shouldShowDenied) && (\n        <div className=\"settings-item\">\n          <h4 className=\"settings-item-header\" dir={lang.isRtl ? 'rtl' : undefined}>\n            {lang('PrivacyExceptions')}\n          </h4>\n          {primaryExceptionLists.shouldShowAllowed && (\n            <ListItem\n              narrow\n              icon=\"add-user\"\n              // eslint-disable-next-line react/jsx-no-bind\n              onClick={() => {\n                onScreenSelect(allowedContactsScreen);\n              }}\n            >\n              <div className=\"multiline-menu-item full-size\">\n                <span className=\"title\">{lang('AlwaysAllow')}</span>\n                <span className=\"subtitle\">{allowedString}</span>\n              </div>\n            </ListItem>\n          )}\n          {primaryExceptionLists.shouldShowDenied && (\n            <ListItem\n              narrow\n              icon=\"delete-user\"\n              // eslint-disable-next-line react/jsx-no-bind\n              onClick={() => {\n                onScreenSelect(deniedContactsScreen);\n              }}\n            >\n              <div className=\"multiline-menu-item full-size\">\n                <span className=\"title\">{lang('NeverAllow')}</span>\n                <span className=\"subtitle\">{blockString}</span>\n              </div>\n            </ListItem>\n          )}\n        </div>\n      )}\n      {isPremiumRequired && <PremiumStatusItem />}\n    </>\n  );\n}\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { screen }): StateProps => {\n    let primaryPrivacy: ApiPrivacySettings | undefined;\n    let secondaryPrivacy: ApiPrivacySettings | undefined;\n\n    const {\n      currentUserId,\n      settings: { privacy },\n    } = global;\n\n    const currentUserFullInfo = selectUserFullInfo(global, currentUserId!);\n\n    switch (screen) {\n      case SettingsScreens.PrivacyPhoneNumber:\n        primaryPrivacy = privacy.phoneNumber;\n        secondaryPrivacy = privacy.addByPhone;\n        break;\n\n      case SettingsScreens.PrivacyLastSeen:\n        primaryPrivacy = privacy.lastSeen;\n        break;\n\n      case SettingsScreens.PrivacyProfilePhoto:\n        primaryPrivacy = privacy.profilePhoto;\n        break;\n\n      case SettingsScreens.PrivacyBio:\n        primaryPrivacy = privacy.bio;\n        break;\n\n      case SettingsScreens.PrivacyBirthday:\n        primaryPrivacy = privacy.birthday;\n        break;\n\n      case SettingsScreens.PrivacyPhoneP2P:\n      case SettingsScreens.PrivacyPhoneCall:\n        primaryPrivacy = privacy.phoneCall;\n        secondaryPrivacy = privacy.phoneP2P;\n        break;\n\n      case SettingsScreens.PrivacyForwarding:\n        primaryPrivacy = privacy.forwards;\n        break;\n\n      case SettingsScreens.PrivacyVoiceMessages:\n        primaryPrivacy = privacy.voiceMessages;\n        break;\n\n      case SettingsScreens.PrivacyGroupChats:\n        primaryPrivacy = privacy.chatInvite;\n        break;\n    }\n\n    if (!primaryPrivacy) {\n      return {\n        currentUserId: currentUserId!,\n        hasCurrentUserFullInfo: Boolean(currentUserFullInfo),\n        currentUserFallbackPhoto: currentUserFullInfo?.fallbackPhoto,\n      };\n    }\n\n    return {\n      primaryPrivacy,\n      secondaryPrivacy,\n      currentUserId: currentUserId!,\n      hasCurrentUserFullInfo: Boolean(currentUserFullInfo),\n      currentUserFallbackPhoto: currentUserFullInfo?.fallbackPhoto,\n      isPremiumRequired: screen === SettingsScreens.PrivacyVoiceMessages && !selectIsCurrentUserPremium(global),\n    };\n  },\n)(SettingsPrivacyVisibility));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useMemo, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../../global';\n\nimport type { GlobalState } from '../../../global/types';\nimport type { ApiPrivacySettings, CustomPeerType } from '../../../types';\nimport { SettingsScreens } from '../../../types';\n\nimport { ALL_FOLDER_ID, ARCHIVED_FOLDER_ID, SERVICE_NOTIFICATIONS_USER_ID } from '../../../config';\nimport {\n  filterChatsByName, isChatChannel, isDeletedUser,\n} from '../../../global/helpers';\nimport { unique } from '../../../util/iteratees';\nimport { CUSTOM_PEER_PREMIUM } from '../../../util/objects/customPeer';\nimport { getPrivacyKey } from './helpers/privacy';\n\nimport { useFolderManagerForOrderedIds } from '../../../hooks/useFolderManager';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport PeerPicker from '../../common/pickers/PeerPicker';\nimport FloatingActionButton from '../../ui/FloatingActionButton';\n\nexport type OwnProps = {\n  isAllowList?: boolean;\n  withPremiumCategory?: boolean;\n  screen: SettingsScreens;\n  isActive?: boolean;\n  onScreenSelect: (screen: SettingsScreens) => void;\n  onReset: () => void;\n};\n\ntype StateProps = {\n  currentUserId?: string;\n  settings?: ApiPrivacySettings;\n};\n\nconst PREMIUM_CATEGORY = [CUSTOM_PEER_PREMIUM];\n\nconst SettingsPrivacyVisibilityExceptionList: FC<OwnProps & StateProps> = ({\n  isAllowList,\n  withPremiumCategory,\n  screen,\n  isActive,\n  currentUserId,\n  settings,\n  onScreenSelect,\n  onReset,\n}) => {\n  const { setPrivacySettings } = getActions();\n\n  const lang = useOldLang();\n\n  const selectedContactIds = useMemo(() => {\n    if (!settings) {\n      return [];\n    }\n\n    if (isAllowList) {\n      return [...settings.allowUserIds, ...settings.allowChatIds];\n    } else {\n      return [...settings.blockUserIds, ...settings.blockChatIds];\n    }\n  }, [isAllowList, settings]);\n  const selectedCategoryTypes = useMemo(() => {\n    if (!settings) {\n      return [];\n    }\n\n    return [settings.shouldAllowPremium ? CUSTOM_PEER_PREMIUM.type : undefined].filter(Boolean);\n  }, [settings]);\n  const [searchQuery, setSearchQuery] = useState<string>('');\n  const [isSubmitShown, setIsSubmitShown] = useState<boolean>(false);\n  const [newSelectedContactIds, setNewSelectedContactIds] = useState<string[]>(selectedContactIds);\n  const [newSelectedCategoryTypes, setNewSelectedCategoryTypes] = useState<CustomPeerType[]>(selectedCategoryTypes);\n\n  // Reset selected contact ids on change from other client when screen is not active\n  useEffect(() => {\n    if (!isActive) {\n      setNewSelectedContactIds(selectedContactIds);\n      setNewSelectedCategoryTypes(selectedCategoryTypes);\n    }\n  }, [isActive, selectedCategoryTypes, selectedContactIds]);\n\n  const folderAllOrderedIds = useFolderManagerForOrderedIds(ALL_FOLDER_ID);\n  const folderArchivedOrderedIds = useFolderManagerForOrderedIds(ARCHIVED_FOLDER_ID);\n  const displayedIds = useMemo(() => {\n    // No need for expensive global updates on chats, so we avoid them\n    const chatsById = getGlobal().chats.byId;\n    const usersById = getGlobal().users.byId;\n\n    const chatIds = unique([...folderAllOrderedIds || [], ...folderArchivedOrderedIds || []])\n      .filter((chatId) => {\n        const chat = chatsById[chatId];\n        const user = usersById[chatId];\n        const isDeleted = user && isDeletedUser(user);\n        const isChannel = chat && isChatChannel(chat);\n        return chatId !== currentUserId && chatId !== SERVICE_NOTIFICATIONS_USER_ID && !isChannel && !isDeleted;\n      });\n\n    const filteredChats = filterChatsByName(lang, chatIds, chatsById, searchQuery);\n\n    // Show only relevant items\n    if (searchQuery) return filteredChats;\n\n    return unique([\n      ...selectedContactIds,\n      ...filterChatsByName(lang, chatIds, chatsById, searchQuery),\n    ]);\n  }, [folderAllOrderedIds, folderArchivedOrderedIds, selectedContactIds, lang, searchQuery, currentUserId]);\n\n  const handleSelectedCategoriesChange = useCallback((value: CustomPeerType[]) => {\n    setNewSelectedCategoryTypes(value);\n    setIsSubmitShown(true);\n  }, []);\n\n  const handleSelectedContactIdsChange = useCallback((value: string[]) => {\n    setNewSelectedContactIds(value);\n    setIsSubmitShown(true);\n  }, []);\n\n  const handleSubmit = useCallback(() => {\n    setPrivacySettings({\n      privacyKey: getPrivacyKey(screen)!,\n      isAllowList: Boolean(isAllowList),\n      updatedIds: newSelectedContactIds,\n      isPremiumAllowed: newSelectedCategoryTypes.includes(CUSTOM_PEER_PREMIUM.type) || undefined,\n    });\n\n    onScreenSelect(SettingsScreens.Privacy);\n  }, [isAllowList, newSelectedCategoryTypes, newSelectedContactIds, onScreenSelect, screen]);\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  return (\n    <div className=\"NewChat-inner step-1\">\n      <PeerPicker\n        categories={withPremiumCategory ? PREMIUM_CATEGORY : undefined}\n        itemIds={displayedIds || []}\n        selectedIds={newSelectedContactIds}\n        selectedCategories={newSelectedCategoryTypes}\n        filterValue={searchQuery}\n        filterPlaceholder={isAllowList ? lang('AlwaysAllowPlaceholder') : lang('NeverAllowPlaceholder')}\n        categoryPlaceholderKey=\"PrivacyUserTypes\"\n        searchInputId=\"new-group-picker-search\"\n        isSearchable\n        onSelectedIdsChange={handleSelectedContactIdsChange}\n        onSelectedCategoriesChange={handleSelectedCategoriesChange}\n        onFilterChange={setSearchQuery}\n        allowMultiple\n        itemInputType=\"checkbox\"\n        withDefaultPadding\n        withStatus\n      />\n\n      <FloatingActionButton\n        isShown={isSubmitShown}\n        onClick={handleSubmit}\n        ariaLabel={isAllowList ? lang('AlwaysAllow') : lang('NeverAllow')}\n      >\n        <i className=\"icon icon-check\" />\n      </FloatingActionButton>\n    </div>\n  );\n};\n\nfunction getCurrentPrivacySettings(global: GlobalState, screen: SettingsScreens) {\n  const { privacy } = global.settings;\n  switch (screen) {\n    case SettingsScreens.PrivacyPhoneNumberAllowedContacts:\n    case SettingsScreens.PrivacyPhoneNumberDeniedContacts:\n      return privacy.phoneNumber;\n    case SettingsScreens.PrivacyLastSeenAllowedContacts:\n    case SettingsScreens.PrivacyLastSeenDeniedContacts:\n      return privacy.lastSeen;\n    case SettingsScreens.PrivacyProfilePhotoAllowedContacts:\n    case SettingsScreens.PrivacyProfilePhotoDeniedContacts:\n      return privacy.profilePhoto;\n    case SettingsScreens.PrivacyBioAllowedContacts:\n    case SettingsScreens.PrivacyBioDeniedContacts:\n      return privacy.bio;\n    case SettingsScreens.PrivacyBirthdayAllowedContacts:\n    case SettingsScreens.PrivacyBirthdayDeniedContacts:\n      return privacy.birthday;\n    case SettingsScreens.PrivacyPhoneCallAllowedContacts:\n    case SettingsScreens.PrivacyPhoneCallDeniedContacts:\n      return privacy.phoneCall;\n    case SettingsScreens.PrivacyPhoneP2PAllowedContacts:\n    case SettingsScreens.PrivacyPhoneP2PDeniedContacts:\n      return privacy.phoneP2P;\n    case SettingsScreens.PrivacyForwardingAllowedContacts:\n    case SettingsScreens.PrivacyForwardingDeniedContacts:\n      return privacy.forwards;\n    case SettingsScreens.PrivacyVoiceMessagesAllowedContacts:\n    case SettingsScreens.PrivacyVoiceMessagesDeniedContacts:\n      return privacy.voiceMessages;\n    case SettingsScreens.PrivacyGroupChatsDeniedContacts:\n    case SettingsScreens.PrivacyGroupChatsAllowedContacts:\n      return privacy.chatInvite;\n  }\n\n  return undefined;\n}\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { screen }): StateProps => {\n    return {\n      currentUserId: global.currentUserId,\n      settings: getCurrentPrivacySettings(global, screen),\n    };\n  },\n)(SettingsPrivacyVisibilityExceptionList));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback, useMemo } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiAvailableReaction } from '../../../api/types';\n\nimport useHistoryBack from '../../../hooks/useHistoryBack';\n\nimport ReactionStaticEmoji from '../../common/ReactionStaticEmoji';\nimport RadioGroup from '../../ui/RadioGroup';\n\ntype OwnProps = {\n  isActive?: boolean;\n  onReset: () => void;\n};\n\ntype StateProps = {\n  availableReactions?: ApiAvailableReaction[];\n  selectedReaction?: string;\n};\n\nconst SettingsQuickReaction: FC<OwnProps & StateProps> = ({\n  isActive,\n  availableReactions,\n  selectedReaction,\n  onReset,\n}) => {\n  const { setDefaultReaction } = getActions();\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  const options = useMemo(() => (\n    (availableReactions || []).filter((availableReaction) => !availableReaction.isInactive)\n      .map((availableReaction) => ({\n        label: (\n          <>\n            <ReactionStaticEmoji reaction={availableReaction.reaction} availableReactions={availableReactions} />\n            {availableReaction.title}\n          </>\n        ),\n        value: availableReaction.reaction.emoticon,\n      }))\n  ), [availableReactions]);\n\n  const handleChange = useCallback((reaction: string) => {\n    setDefaultReaction({\n      reaction: { emoticon: reaction },\n    });\n  }, [setDefaultReaction]);\n\n  return (\n    <div className=\"settings-content settings-item custom-scroll settings-quick-reaction\">\n      <RadioGroup\n        name=\"quick-reaction-settings\"\n        options={options}\n        selected={selectedReaction}\n        onChange={handleChange}\n        withIcon\n      />\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global) => {\n    const { config, reactions } = global;\n\n    return {\n      availableReactions: reactions.availableReactions,\n      selectedReaction: config?.defaultReaction,\n    };\n  },\n)(SettingsQuickReaction));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useMemo, useRef,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type {\n  ApiAvailableReaction,\n  ApiReaction,\n  ApiSticker,\n  ApiStickerSet,\n} from '../../../api/types';\nimport type { ISettings } from '../../../types';\nimport { SettingsScreens } from '../../../types';\n\nimport { selectCanPlayAnimatedEmojis } from '../../../global/selectors';\nimport { pick } from '../../../util/iteratees';\nimport { REM } from '../../common/helpers/mediaDimensions';\nimport renderText from '../../common/helpers/renderText';\n\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport { useIntersectionObserver } from '../../../hooks/useIntersectionObserver';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport ReactionStaticEmoji from '../../common/ReactionStaticEmoji';\nimport StickerSetCard from '../../common/StickerSetCard';\nimport Checkbox from '../../ui/Checkbox';\nimport ListItem from '../../ui/ListItem';\n\nconst DEFAULT_REACTION_SIZE = 1.5 * REM;\n\ntype OwnProps = {\n  isActive?: boolean;\n  onScreenSelect: (screen: SettingsScreens) => void;\n  onReset: () => void;\n};\n\ntype StateProps =\n  Pick<ISettings, (\n    'shouldSuggestStickers' | 'shouldUpdateStickerSetOrder'\n  )> & {\n    addedSetIds?: string[];\n    customEmojiSetIds?: string[];\n    stickerSetsById: Record<string, ApiStickerSet>;\n    defaultReaction?: ApiReaction;\n    availableReactions?: ApiAvailableReaction[];\n    canPlayAnimatedEmojis: boolean;\n  };\n\nconst SettingsStickers: FC<OwnProps & StateProps> = ({\n  isActive,\n  addedSetIds,\n  customEmojiSetIds,\n  stickerSetsById,\n  defaultReaction,\n  shouldSuggestStickers,\n  shouldUpdateStickerSetOrder,\n  availableReactions,\n  canPlayAnimatedEmojis,\n  onReset,\n  onScreenSelect,\n}) => {\n  const {\n    setSettingOption,\n    openStickerSet,\n  } = getActions();\n  const lang = useOldLang();\n\n  // eslint-disable-next-line no-null/no-null\n  const stickerSettingsRef = useRef<HTMLDivElement>(null);\n  const { observe: observeIntersectionForCovers } = useIntersectionObserver({ rootRef: stickerSettingsRef });\n\n  const handleStickerSetClick = useCallback((sticker: ApiSticker) => {\n    openStickerSet({\n      stickerSetInfo: sticker.stickerSetInfo,\n    });\n  }, [openStickerSet]);\n\n  const handleSuggestStickerSetOrderChange = useCallback((newValue: boolean) => {\n    setSettingOption({ shouldUpdateStickerSetOrder: newValue });\n  }, [setSettingOption]);\n\n  const handleSuggestStickersChange = useCallback((newValue: boolean) => {\n    setSettingOption({ shouldSuggestStickers: newValue });\n  }, [setSettingOption]);\n\n  const stickerSets = useMemo(() => (\n    addedSetIds && Object.values(pick(stickerSetsById, addedSetIds))\n  ), [addedSetIds, stickerSetsById]);\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  return (\n    <div className=\"settings-content custom-scroll\">\n      <div className=\"settings-item\">\n        <Checkbox\n          label={lang('SuggestStickers')}\n          checked={shouldSuggestStickers}\n          onCheck={handleSuggestStickersChange}\n        />\n        <ListItem\n          narrow\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onScreenSelect(SettingsScreens.CustomEmoji)}\n          icon=\"smile\"\n        >\n          {lang('StickersList.EmojiItem')}\n          {customEmojiSetIds && <span className=\"settings-item__current-value\">{customEmojiSetIds.length}</span>}\n        </ListItem>\n        {defaultReaction && (\n          <ListItem\n            className=\"SettingsDefaultReaction\"\n            narrow\n            // eslint-disable-next-line react/jsx-no-bind\n            onClick={() => onScreenSelect(SettingsScreens.QuickReaction)}\n          >\n            <ReactionStaticEmoji\n              reaction={defaultReaction}\n              className=\"current-default-reaction\"\n              size={DEFAULT_REACTION_SIZE}\n              availableReactions={availableReactions}\n            />\n            <div className=\"title\">{lang('DoubleTapSetting')}</div>\n          </ListItem>\n        )}\n      </div>\n      <div className=\"settings-item\">\n        <h4 className=\"settings-item-header\" dir={lang.isRtl ? 'rtl' : undefined}>\n          {lang('InstalledStickers.DynamicPackOrder')}\n        </h4>\n        <Checkbox\n          label={lang('InstalledStickers.DynamicPackOrder')}\n          checked={shouldUpdateStickerSetOrder}\n          onCheck={handleSuggestStickerSetOrderChange}\n        />\n        <p className=\"settings-item-description mt-3\" dir=\"auto\">\n          {lang('InstalledStickers.DynamicPackOrderInfo')}\n        </p>\n      </div>\n      {stickerSets && (\n        <div className=\"settings-item\">\n          <h4 className=\"settings-item-header\" dir={lang.isRtl ? 'rtl' : undefined}>\n            {lang('ChooseStickerMyStickerSets')}\n          </h4>\n          <div ref={stickerSettingsRef}>\n            {stickerSets.map((stickerSet: ApiStickerSet) => (\n              <StickerSetCard\n                key={stickerSet.id}\n                stickerSet={stickerSet}\n                observeIntersection={observeIntersectionForCovers}\n                onClick={handleStickerSetClick}\n                noPlay={!canPlayAnimatedEmojis}\n              />\n            ))}\n          </div>\n          <p className=\"settings-item-description mt-3\" dir=\"auto\">\n            {renderText(lang('StickersBotInfo'), ['links'])}\n          </p>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    return {\n      ...pick(global.settings.byKey, [\n        'shouldSuggestStickers',\n        'shouldUpdateStickerSetOrder',\n      ]),\n      addedSetIds: global.stickers.added.setIds,\n      customEmojiSetIds: global.customEmojis.added.setIds,\n      stickerSetsById: global.stickers.setsById,\n      defaultReaction: global.config?.defaultReaction,\n      availableReactions: global.reactions.availableReactions,\n      canPlayAnimatedEmojis: selectCanPlayAnimatedEmojis(global),\n    };\n  },\n)(SettingsStickers));\n","import type { FC } from '../../../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../../../lib/teact/teact';\n\nimport { SettingsScreens } from '../../../../types';\n\nimport { STICKER_SIZE_TWO_FA } from '../../../../config';\nimport { LOCAL_TGS_URLS } from '../../../common/helpers/animatedAssets';\n\nimport useHistoryBack from '../../../../hooks/useHistoryBack';\nimport useOldLang from '../../../../hooks/useOldLang';\n\nimport AnimatedIcon from '../../../common/AnimatedIcon';\nimport Button from '../../../ui/Button';\n\ntype OwnProps = {\n  isActive?: boolean;\n  onScreenSelect: (screen: SettingsScreens) => void;\n  onReset: () => void;\n};\n\nconst SettingsTwoFaCongratulations: FC<OwnProps> = ({\n  isActive, onReset, onScreenSelect,\n}) => {\n  const lang = useOldLang();\n\n  const handleClick = useCallback(() => {\n    onScreenSelect(SettingsScreens.Privacy);\n  }, [onScreenSelect]);\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  return (\n    <div className=\"settings-content two-fa custom-scroll\">\n      <div className=\"settings-content-header no-border\">\n        <AnimatedIcon\n          size={STICKER_SIZE_TWO_FA}\n          tgsUrl={LOCAL_TGS_URLS.Congratulations}\n          className=\"settings-content-icon\"\n        />\n\n        <p className=\"settings-item-description mb-3\" dir=\"auto\">\n          {lang('TwoStepVerificationPasswordSetInfo')}\n        </p>\n      </div>\n\n      <div className=\"settings-item pt-0\">\n        <Button onClick={handleClick}>{lang('TwoStepVerificationPasswordReturnSettings')}</Button>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(SettingsTwoFaCongratulations);\n","import type { FC } from '../../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useRef, useState,\n} from '../../../../lib/teact/teact';\nimport { withGlobal } from '../../../../global';\n\nimport type { ApiSticker } from '../../../../api/types';\n\nimport { selectAnimatedEmoji } from '../../../../global/selectors';\nimport { IS_TOUCH_ENV } from '../../../../util/windowEnvironment';\n\nimport useAppLayout from '../../../../hooks/useAppLayout';\nimport useHistoryBack from '../../../../hooks/useHistoryBack';\nimport useOldLang from '../../../../hooks/useOldLang';\n\nimport AnimatedIconFromSticker from '../../../common/AnimatedIconFromSticker';\nimport InputText from '../../../ui/InputText';\nimport Loading from '../../../ui/Loading';\n\ntype OwnProps = {\n  isLoading?: boolean;\n  error?: string;\n  clearError: NoneToVoidFunction;\n  onSubmit: (hint: string) => void;\n  isActive?: boolean;\n  onReset: () => void;\n};\n\ntype StateProps = {\n  animatedEmoji: ApiSticker;\n  codeLength: number;\n};\n\nconst ICON_SIZE = 160;\n\nconst SettingsTwoFaEmailCode: FC<OwnProps & StateProps> = ({\n  animatedEmoji,\n  codeLength,\n  isLoading,\n  error,\n  clearError,\n  onSubmit,\n  isActive,\n  onReset,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const inputRef = useRef<HTMLInputElement>(null);\n  const { isMobile } = useAppLayout();\n  const focusDelayTimeoutMs = isMobile ? 550 : 400;\n\n  const [value, setValue] = useState<string>('');\n\n  useEffect(() => {\n    if (!IS_TOUCH_ENV) {\n      setTimeout(() => {\n        inputRef.current!.focus();\n      }, focusDelayTimeoutMs);\n    }\n  }, [focusDelayTimeoutMs]);\n\n  const lang = useOldLang();\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  const handleInputChange = useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    if (error && clearError) {\n      clearError();\n    }\n\n    const newValue = e.target.value.slice(0, codeLength);\n\n    if (newValue.length === codeLength) {\n      onSubmit(newValue);\n    }\n\n    setValue(newValue);\n    e.target.value = newValue;\n  }, [clearError, codeLength, error, onSubmit]);\n\n  return (\n    <div className=\"settings-content two-fa custom-scroll\">\n      <div className=\"settings-content-header no-border\">\n        <AnimatedIconFromSticker sticker={animatedEmoji} size={ICON_SIZE} className=\"settings-content-icon\" />\n      </div>\n\n      <div className=\"settings-item pt-0\">\n        <InputText\n          value={value}\n          ref={inputRef}\n          inputMode=\"decimal\"\n          label={lang('YourEmailCode')}\n          error={error}\n          onChange={handleInputChange}\n        />\n        {isLoading && <Loading />}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>((global) => {\n  return {\n    animatedEmoji: selectAnimatedEmoji(global, '💌'),\n    codeLength: global.twoFaSettings.waitingEmailCodeLength,\n  };\n})(SettingsTwoFaEmailCode));\n","import type { FC } from '../../../../lib/teact/teact';\nimport React, { memo } from '../../../../lib/teact/teact';\n\nimport { SettingsScreens } from '../../../../types';\n\nimport { LOCAL_TGS_URLS } from '../../../common/helpers/animatedAssets';\nimport renderText from '../../../common/helpers/renderText';\n\nimport useHistoryBack from '../../../../hooks/useHistoryBack';\nimport useOldLang from '../../../../hooks/useOldLang';\n\nimport AnimatedIconWithPreview from '../../../common/AnimatedIconWithPreview';\nimport ListItem from '../../../ui/ListItem';\n\nimport lockPreviewUrl from '../../../../assets/lock.png';\n\ntype OwnProps = {\n  isActive?: boolean;\n  onScreenSelect: (screen: SettingsScreens) => void;\n  onReset: () => void;\n};\n\nconst SettingsTwoFaEnabled: FC<OwnProps> = ({\n  isActive, onReset, onScreenSelect,\n}) => {\n  const lang = useOldLang();\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  return (\n    <div className=\"settings-content two-fa custom-scroll\">\n      <div className=\"settings-content-header no-border\">\n        <AnimatedIconWithPreview\n          tgsUrl={LOCAL_TGS_URLS.Lock}\n          previewUrl={lockPreviewUrl}\n          size={160}\n          className=\"settings-content-icon\"\n        />\n\n        <p className=\"settings-item-description mb-3\" dir=\"auto\">\n          {renderText(lang('EnabledPasswordText'), ['br'])}\n        </p>\n      </div>\n\n      <div className=\"settings-item pt-0\">\n        <ListItem\n          icon=\"edit\"\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onScreenSelect(SettingsScreens.TwoFaChangePasswordCurrent)}\n        >\n          {lang('ChangePassword')}\n        </ListItem>\n        <ListItem\n          icon=\"password-off\"\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onScreenSelect(SettingsScreens.TwoFaTurnOff)}\n        >\n          {lang('TurnPasswordOff')}\n        </ListItem>\n        <ListItem\n          icon=\"email\"\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onScreenSelect(SettingsScreens.TwoFaRecoveryEmailCurrentPassword)}\n        >\n          {lang('SetRecoveryEmail')}\n        </ListItem>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(SettingsTwoFaEnabled);\n","import type { FC } from '../../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useRef, useState,\n} from '../../../../lib/teact/teact';\nimport { withGlobal } from '../../../../global';\n\nimport type { ApiSticker } from '../../../../api/types';\n\nimport { selectAnimatedEmoji } from '../../../../global/selectors';\nimport { IS_TOUCH_ENV } from '../../../../util/windowEnvironment';\nimport renderText from '../../../common/helpers/renderText';\n\nimport useAppLayout from '../../../../hooks/useAppLayout';\nimport useFlag from '../../../../hooks/useFlag';\nimport useHistoryBack from '../../../../hooks/useHistoryBack';\nimport useOldLang from '../../../../hooks/useOldLang';\n\nimport AnimatedIconFromSticker from '../../../common/AnimatedIconFromSticker';\nimport Button from '../../../ui/Button';\nimport InputText from '../../../ui/InputText';\nimport Modal from '../../../ui/Modal';\n\ntype OwnProps = {\n  icon: 'hint' | 'email';\n  type?: 'text' | 'email';\n  isLoading?: boolean;\n  error?: string;\n  placeholder: string;\n  shouldConfirm?: boolean;\n  clearError?: NoneToVoidFunction;\n  onSubmit: (value?: string) => void;\n  isActive?: boolean;\n  onReset: () => void;\n};\n\ntype StateProps = {\n  animatedEmoji: ApiSticker;\n};\n\nconst ICON_SIZE = 160;\n\nconst SettingsTwoFaSkippableForm: FC<OwnProps & StateProps> = ({\n  animatedEmoji,\n  type = 'text',\n  isLoading,\n  error,\n  placeholder,\n  shouldConfirm,\n  clearError,\n  onSubmit,\n  isActive,\n  onReset,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const inputRef = useRef<HTMLInputElement>(null);\n  const { isMobile } = useAppLayout();\n\n  const focusDelayTimeoutMs = isMobile ? 550 : 400;\n  const [value, setValue] = useState<string>('');\n  const [isConfirmShown, markIsConfirmShown, unmarkIsConfirmShown] = useFlag(false);\n\n  useEffect(() => {\n    if (!IS_TOUCH_ENV) {\n      setTimeout(() => {\n        inputRef.current!.focus();\n      }, focusDelayTimeoutMs);\n    }\n  }, [focusDelayTimeoutMs]);\n\n  const handleInputChange = useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    if (error && clearError) {\n      clearError();\n    }\n\n    setValue(e.target.value);\n  }, [clearError, error]);\n\n  const handleSubmit = (e: React.FormEvent<HTMLFormElement>) => {\n    e.preventDefault();\n\n    if (!inputRef.current) {\n      return;\n    }\n\n    onSubmit(value);\n  };\n\n  const handleSkip = useCallback(() => {\n    onSubmit();\n  }, [onSubmit]);\n\n  const handleSkipConfirm = useCallback(() => {\n    unmarkIsConfirmShown();\n    onSubmit();\n  }, [onSubmit, unmarkIsConfirmShown]);\n\n  const lang = useOldLang();\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  return (\n    <div className=\"settings-content two-fa custom-scroll\">\n      <div className=\"settings-content-header no-border\">\n        <AnimatedIconFromSticker sticker={animatedEmoji} size={ICON_SIZE} className=\"settings-content-icon\" />\n      </div>\n\n      <div className=\"settings-item pt-0\">\n        <form action=\"\" onSubmit={handleSubmit}>\n          <InputText\n            ref={inputRef}\n            value={value}\n            inputMode={type}\n            label={placeholder}\n            error={error}\n            onChange={handleInputChange}\n          />\n\n          {value ? (\n            <Button type=\"submit\" isLoading={isLoading} ripple>{lang('Continue')}</Button>\n          ) : (\n            <Button\n              isText\n              isLoading={isLoading}\n              ripple\n              onClick={shouldConfirm ? markIsConfirmShown : handleSkip}\n            >\n              {lang('YourEmailSkip')}\n            </Button>\n          )}\n        </form>\n        {shouldConfirm && (\n          <Modal\n            className=\"narrow\"\n            isOpen={isConfirmShown}\n            title={lang('YourEmailSkipWarning')}\n            onClose={unmarkIsConfirmShown}\n          >\n            {renderText(lang('YourEmailSkipWarningText'), ['br', 'simple_markdown'])}\n            <div className=\"dialog-buttons\">\n              <Button\n                color=\"danger\"\n                ripple\n                isText\n                className=\"confirm-dialog-button\"\n                onClick={handleSkipConfirm}\n              >\n                {lang('YourEmailSkip')}\n              </Button>\n              <Button\n                color=\"primary\"\n                ripple\n                isText\n                className=\"confirm-dialog-button\"\n                onClick={unmarkIsConfirmShown}\n              >\n                {lang('Cancel')}\n              </Button>\n            </div>\n          </Modal>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>((global, { icon }) => {\n  return {\n    animatedEmoji: selectAnimatedEmoji(global, icon === 'email' ? '💌' : '💡'),\n  };\n})(SettingsTwoFaSkippableForm));\n","import type { FC } from '../../../../lib/teact/teact';\nimport React, { memo } from '../../../../lib/teact/teact';\n\nimport { LOCAL_TGS_URLS } from '../../../common/helpers/animatedAssets';\n\nimport useHistoryBack from '../../../../hooks/useHistoryBack';\nimport useOldLang from '../../../../hooks/useOldLang';\n\nimport AnimatedIconWithPreview from '../../../common/AnimatedIconWithPreview';\nimport Button from '../../../ui/Button';\n\nimport lockPreviewUrl from '../../../../assets/lock.png';\n\ntype OwnProps = {\n  onStart: NoneToVoidFunction;\n  isActive?: boolean;\n  onReset: () => void;\n};\n\nconst SettingsTwoFaStart: FC<OwnProps> = ({\n  isActive, onReset, onStart,\n}) => {\n  const lang = useOldLang();\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  return (\n    <div className=\"settings-content two-fa custom-scroll\">\n      <div className=\"settings-content-header no-border\">\n        <AnimatedIconWithPreview\n          tgsUrl={LOCAL_TGS_URLS.Lock}\n          previewUrl={lockPreviewUrl}\n          size={160}\n          className=\"settings-content-icon\"\n        />\n\n        <p className=\"settings-item-description mb-3\" dir=\"auto\">\n          {lang('SetAdditionalPasswordInfo')}\n        </p>\n      </div>\n\n      <div className=\"settings-item pt-0\">\n        <Button onClick={onStart}>{lang('EditAdminTransferSetPassword')}</Button>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(SettingsTwoFaStart);\n","import type { FC } from '../../../../lib/teact/teact';\nimport React, { memo, useCallback, useEffect } from '../../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../../global';\n\nimport type { GlobalState } from '../../../../global/types';\nimport type { TwoFaDispatch, TwoFaState } from '../../../../hooks/reducers/useTwoFaReducer';\nimport { SettingsScreens } from '../../../../types';\n\nimport useOldLang from '../../../../hooks/useOldLang';\n\nimport SettingsTwoFaPassword from '../SettingsPasswordForm';\nimport SettingsTwoFaCongratulations from './SettingsTwoFaCongratulations';\nimport SettingsTwoFaEmailCode from './SettingsTwoFaEmailCode';\nimport SettingsTwoFaEnabled from './SettingsTwoFaEnabled';\nimport SettingsTwoFaSkippableForm from './SettingsTwoFaSkippableForm';\nimport SettingsTwoFaStart from './SettingsTwoFaStart';\n\nexport type OwnProps = {\n  state: TwoFaState;\n  currentScreen: SettingsScreens;\n  shownScreen: SettingsScreens;\n  dispatch: TwoFaDispatch;\n  isActive?: boolean;\n  onScreenSelect: (screen: SettingsScreens) => void;\n  onReset: () => void;\n};\n\ntype StateProps = GlobalState['twoFaSettings'];\n\nconst SettingsTwoFa: FC<OwnProps & StateProps> = ({\n  currentScreen,\n  shownScreen,\n  state,\n  hint,\n  isLoading,\n  error,\n  waitingEmailCodeLength,\n  dispatch,\n  isActive,\n  onScreenSelect,\n  onReset,\n}) => {\n  const {\n    updatePassword,\n    checkPassword,\n    clearTwoFaError,\n    updateRecoveryEmail,\n    provideTwoFaEmailCode,\n    clearPassword,\n  } = getActions();\n\n  useEffect(() => {\n    if (waitingEmailCodeLength) {\n      if (currentScreen === SettingsScreens.TwoFaNewPasswordEmail) {\n        onScreenSelect(SettingsScreens.TwoFaNewPasswordEmailCode);\n      } else if (currentScreen === SettingsScreens.TwoFaRecoveryEmail) {\n        onScreenSelect(SettingsScreens.TwoFaRecoveryEmailCode);\n      }\n    }\n  }, [currentScreen, onScreenSelect, waitingEmailCodeLength]);\n\n  const handleStartWizard = useCallback(() => {\n    dispatch({ type: 'reset' });\n    onScreenSelect(SettingsScreens.TwoFaNewPassword);\n  }, [dispatch, onScreenSelect]);\n\n  const handleNewPassword = useCallback((value: string) => {\n    dispatch({ type: 'setPassword', payload: value });\n    onScreenSelect(SettingsScreens.TwoFaNewPasswordConfirm);\n  }, [dispatch, onScreenSelect]);\n\n  const handleNewPasswordConfirm = useCallback(() => {\n    onScreenSelect(SettingsScreens.TwoFaNewPasswordHint);\n  }, [onScreenSelect]);\n\n  const handleNewPasswordHint = useCallback((value?: string) => {\n    dispatch({ type: 'setHint', payload: value });\n    onScreenSelect(SettingsScreens.TwoFaNewPasswordEmail);\n  }, [dispatch, onScreenSelect]);\n\n  const handleNewPasswordEmail = useCallback((value?: string) => {\n    dispatch({ type: 'setEmail', payload: value });\n    updatePassword({\n      ...state,\n      email: value,\n      onSuccess: () => {\n        onScreenSelect(SettingsScreens.TwoFaCongratulations);\n      },\n    });\n  }, [dispatch, onScreenSelect, state, updatePassword]);\n\n  const handleChangePasswordCurrent = useCallback((value: string) => {\n    dispatch({ type: 'setCurrentPassword', payload: value });\n    checkPassword({\n      currentPassword: value,\n      onSuccess: () => {\n        onScreenSelect(SettingsScreens.TwoFaChangePasswordNew);\n      },\n    });\n  }, [checkPassword, dispatch, onScreenSelect]);\n\n  const handleChangePasswordNew = useCallback((value: string) => {\n    dispatch({ type: 'setPassword', payload: value });\n    onScreenSelect(SettingsScreens.TwoFaChangePasswordConfirm);\n  }, [dispatch, onScreenSelect]);\n\n  const handleChangePasswordConfirm = useCallback(() => {\n    onScreenSelect(SettingsScreens.TwoFaChangePasswordHint);\n  }, [onScreenSelect]);\n\n  const handleChangePasswordHint = useCallback((value?: string) => {\n    dispatch({ type: 'setHint', payload: value });\n    updatePassword({\n      ...state,\n      hint: value,\n      onSuccess: () => {\n        onScreenSelect(SettingsScreens.TwoFaCongratulations);\n      },\n    });\n  }, [dispatch, onScreenSelect, state, updatePassword]);\n\n  const handleTurnOff = useCallback((value: string) => {\n    clearPassword({\n      currentPassword: value,\n      onSuccess: () => {\n        onScreenSelect(SettingsScreens.Privacy);\n      },\n    });\n  }, [clearPassword, onScreenSelect]);\n\n  const handleRecoveryEmailCurrentPassword = useCallback((value: string) => {\n    dispatch({ type: 'setCurrentPassword', payload: value });\n    checkPassword({\n      currentPassword: value,\n      onSuccess: () => {\n        onScreenSelect(SettingsScreens.TwoFaRecoveryEmail);\n      },\n    });\n  }, [checkPassword, dispatch, onScreenSelect]);\n\n  const handleRecoveryEmail = useCallback((value?: string) => {\n    dispatch({ type: 'setEmail', payload: value });\n    updateRecoveryEmail({\n      ...state,\n      email: value!,\n      onSuccess: () => {\n        onScreenSelect(SettingsScreens.TwoFaCongratulations);\n      },\n    });\n  }, [dispatch, onScreenSelect, state, updateRecoveryEmail]);\n\n  const handleEmailCode = useCallback((code: string) => {\n    provideTwoFaEmailCode({ code });\n  }, [provideTwoFaEmailCode]);\n\n  const lang = useOldLang();\n\n  switch (currentScreen) {\n    case SettingsScreens.TwoFaDisabled:\n      return (\n        <SettingsTwoFaStart\n          onStart={handleStartWizard}\n          isActive={isActive || [\n            SettingsScreens.TwoFaNewPassword,\n            SettingsScreens.TwoFaNewPasswordConfirm,\n            SettingsScreens.TwoFaNewPasswordHint,\n            SettingsScreens.TwoFaNewPasswordEmail,\n            SettingsScreens.TwoFaNewPasswordEmailCode,\n            SettingsScreens.TwoFaCongratulations,\n          ].includes(shownScreen)}\n          onReset={onReset}\n        />\n      );\n\n    case SettingsScreens.TwoFaNewPassword:\n      return (\n        <SettingsTwoFaPassword\n          placeholder={lang('PleaseEnterPassword')}\n          submitLabel={lang('Continue')}\n          onSubmit={handleNewPassword}\n          isActive={isActive || [\n            SettingsScreens.TwoFaNewPasswordConfirm,\n            SettingsScreens.TwoFaNewPasswordHint,\n            SettingsScreens.TwoFaNewPasswordEmail,\n            SettingsScreens.TwoFaNewPasswordEmailCode,\n            SettingsScreens.TwoFaCongratulations,\n          ].includes(shownScreen)}\n          onReset={onReset}\n        />\n      );\n\n    case SettingsScreens.TwoFaNewPasswordConfirm:\n      return (\n        <SettingsTwoFaPassword\n          expectedPassword={state.password}\n          placeholder={lang('PleaseReEnterPassword')}\n          submitLabel={lang('Continue')}\n          onSubmit={handleNewPasswordConfirm}\n          isActive={isActive || [\n            SettingsScreens.TwoFaNewPasswordHint,\n            SettingsScreens.TwoFaNewPasswordEmail,\n            SettingsScreens.TwoFaNewPasswordEmailCode,\n            SettingsScreens.TwoFaCongratulations,\n          ].includes(shownScreen)}\n          onReset={onReset}\n        />\n      );\n\n    case SettingsScreens.TwoFaNewPasswordHint:\n      return (\n        <SettingsTwoFaSkippableForm\n          icon=\"hint\"\n          placeholder={lang('PasswordHintPlaceholder')}\n          onSubmit={handleNewPasswordHint}\n          isActive={isActive || [\n            SettingsScreens.TwoFaNewPasswordEmail,\n            SettingsScreens.TwoFaNewPasswordEmailCode,\n            SettingsScreens.TwoFaCongratulations,\n          ].includes(shownScreen)}\n          onReset={onReset}\n        />\n      );\n\n    case SettingsScreens.TwoFaNewPasswordEmail:\n      return (\n        <SettingsTwoFaSkippableForm\n          icon=\"email\"\n          type=\"email\"\n          isLoading={isLoading}\n          error={error}\n          clearError={clearTwoFaError}\n          placeholder={lang('RecoveryEmailTitle')}\n          shouldConfirm\n          onSubmit={handleNewPasswordEmail}\n          isActive={isActive || [\n            SettingsScreens.TwoFaNewPasswordEmailCode,\n            SettingsScreens.TwoFaCongratulations,\n          ].includes(shownScreen)}\n          onReset={onReset}\n        />\n      );\n\n    case SettingsScreens.TwoFaNewPasswordEmailCode:\n      return (\n        <SettingsTwoFaEmailCode\n          isLoading={isLoading}\n          error={error}\n          clearError={clearTwoFaError}\n          onSubmit={handleEmailCode}\n          isActive={isActive || shownScreen === SettingsScreens.TwoFaCongratulations}\n          onReset={onReset}\n        />\n      );\n\n    case SettingsScreens.TwoFaCongratulations:\n      return (\n        <SettingsTwoFaCongratulations\n          onScreenSelect={onScreenSelect}\n          isActive={isActive}\n          onReset={onReset}\n        />\n      );\n\n    case SettingsScreens.TwoFaEnabled:\n      return (\n        <SettingsTwoFaEnabled\n          onScreenSelect={onScreenSelect}\n          isActive={isActive || [\n            SettingsScreens.TwoFaChangePasswordCurrent,\n            SettingsScreens.TwoFaChangePasswordNew,\n            SettingsScreens.TwoFaChangePasswordConfirm,\n            SettingsScreens.TwoFaChangePasswordHint,\n            SettingsScreens.TwoFaTurnOff,\n            SettingsScreens.TwoFaRecoveryEmailCurrentPassword,\n            SettingsScreens.TwoFaRecoveryEmail,\n            SettingsScreens.TwoFaRecoveryEmailCode,\n            SettingsScreens.TwoFaCongratulations,\n          ].includes(shownScreen)}\n          onReset={onReset}\n        />\n      );\n\n    case SettingsScreens.TwoFaChangePasswordCurrent:\n      return (\n        <SettingsTwoFaPassword\n          isLoading={isLoading}\n          error={error}\n          clearError={clearTwoFaError}\n          hint={hint}\n          onSubmit={handleChangePasswordCurrent}\n          isActive={isActive || [\n            SettingsScreens.TwoFaChangePasswordNew,\n            SettingsScreens.TwoFaChangePasswordConfirm,\n            SettingsScreens.TwoFaChangePasswordHint,\n            SettingsScreens.TwoFaCongratulations,\n          ].includes(shownScreen)}\n          onReset={onReset}\n        />\n      );\n\n    case SettingsScreens.TwoFaChangePasswordNew:\n      return (\n        <SettingsTwoFaPassword\n          placeholder={lang('PleaseEnterNewFirstPassword')}\n          onSubmit={handleChangePasswordNew}\n          isActive={isActive || [\n            SettingsScreens.TwoFaChangePasswordConfirm,\n            SettingsScreens.TwoFaChangePasswordHint,\n            SettingsScreens.TwoFaCongratulations,\n          ].includes(shownScreen)}\n          onReset={onReset}\n        />\n      );\n\n    case SettingsScreens.TwoFaChangePasswordConfirm:\n      return (\n        <SettingsTwoFaPassword\n          expectedPassword={state.password}\n          placeholder={lang('PleaseReEnterPassword')}\n          onSubmit={handleChangePasswordConfirm}\n          isActive={isActive || [\n            SettingsScreens.TwoFaChangePasswordHint,\n            SettingsScreens.TwoFaCongratulations,\n          ].includes(shownScreen)}\n          onReset={onReset}\n        />\n      );\n\n    case SettingsScreens.TwoFaChangePasswordHint:\n      return (\n        <SettingsTwoFaSkippableForm\n          isLoading={isLoading}\n          error={error}\n          clearError={clearTwoFaError}\n          icon=\"hint\"\n          placeholder={lang('PasswordHintPlaceholder')}\n          onSubmit={handleChangePasswordHint}\n          isActive={isActive || shownScreen === SettingsScreens.TwoFaCongratulations}\n          onReset={onReset}\n        />\n      );\n\n    case SettingsScreens.TwoFaTurnOff:\n      return (\n        <SettingsTwoFaPassword\n          isLoading={isLoading}\n          error={error}\n          clearError={clearTwoFaError}\n          hint={hint}\n          onSubmit={handleTurnOff}\n          isActive={isActive}\n          onReset={onReset}\n        />\n      );\n\n    case SettingsScreens.TwoFaRecoveryEmailCurrentPassword:\n      return (\n        <SettingsTwoFaPassword\n          isLoading={isLoading}\n          error={error}\n          clearError={clearTwoFaError}\n          hint={hint}\n          onSubmit={handleRecoveryEmailCurrentPassword}\n          isActive={isActive || [\n            SettingsScreens.TwoFaRecoveryEmail,\n            SettingsScreens.TwoFaRecoveryEmailCode,\n            SettingsScreens.TwoFaCongratulations,\n          ].includes(shownScreen)}\n          onReset={onReset}\n        />\n      );\n\n    case SettingsScreens.TwoFaRecoveryEmail:\n      return (\n        <SettingsTwoFaSkippableForm\n          icon=\"email\"\n          type=\"email\"\n          placeholder={lang('RecoveryEmailTitle')}\n          onSubmit={handleRecoveryEmail}\n          isActive={isActive || [\n            SettingsScreens.TwoFaRecoveryEmailCode,\n            SettingsScreens.TwoFaCongratulations,\n          ].includes(shownScreen)}\n          onReset={onReset}\n        />\n      );\n\n    case SettingsScreens.TwoFaRecoveryEmailCode:\n      return (\n        <SettingsTwoFaEmailCode\n          isLoading={isLoading}\n          error={error}\n          clearError={clearTwoFaError}\n          onSubmit={handleEmailCode}\n          isActive={isActive || shownScreen === SettingsScreens.TwoFaCongratulations}\n          onReset={onReset}\n        />\n      );\n\n    default:\n      return undefined;\n  }\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => ({ ...global.twoFaSettings }),\n)(SettingsTwoFa));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useState } from '../../../lib/teact/teact';\nimport { getActions, getGlobal } from '../../../global';\n\nimport type { FolderEditDispatch, FoldersState } from '../../../hooks/reducers/useFoldersReducer';\nimport { SettingsScreens } from '../../../types';\n\nimport { selectTabState } from '../../../global/selectors';\nimport { LAYERS_ANIMATION_NAME } from '../../../util/windowEnvironment';\n\nimport useTwoFaReducer from '../../../hooks/reducers/useTwoFaReducer';\nimport useLastCallback from '../../../hooks/useLastCallback';\n\nimport Transition from '../../ui/Transition';\nimport SettingsFolders from './folders/SettingsFolders';\nimport SettingsPasscode from './passcode/SettingsPasscode';\nimport PrivacyMessages from './PrivacyMessages';\nimport SettingsActiveSessions from './SettingsActiveSessions';\nimport SettingsActiveWebsites from './SettingsActiveWebsites';\nimport SettingsCustomEmoji from './SettingsCustomEmoji';\nimport SettingsDataStorage from './SettingsDataStorage';\nimport SettingsDoNotTranslate from './SettingsDoNotTranslate';\nimport SettingsEditProfile from './SettingsEditProfile';\nimport SettingsExperimental from './SettingsExperimental';\nimport SettingsGeneral from './SettingsGeneral';\nimport SettingsGeneralBackground from './SettingsGeneralBackground';\nimport SettingsGeneralBackgroundColor from './SettingsGeneralBackgroundColor';\nimport SettingsHeader from './SettingsHeader';\nimport SettingsLanguage from './SettingsLanguage';\nimport SettingsMain from './SettingsMain';\nimport SettingsNotifications from './SettingsNotifications';\nimport SettingsPerformance from './SettingsPerformance';\nimport SettingsPrivacy from './SettingsPrivacy';\nimport SettingsPrivacyBlockedUsers from './SettingsPrivacyBlockedUsers';\nimport SettingsPrivacyVisibility from './SettingsPrivacyVisibility';\nimport SettingsPrivacyVisibilityExceptionList from './SettingsPrivacyVisibilityExceptionList';\nimport SettingsQuickReaction from './SettingsQuickReaction';\nimport SettingsStickers from './SettingsStickers';\nimport SettingsTwoFa from './twoFa/SettingsTwoFa';\n\nimport './Settings.scss';\n\nconst TRANSITION_RENDER_COUNT = Object.keys(SettingsScreens).length / 2;\nconst TRANSITION_DURATION = 200;\n\nconst TWO_FA_SCREENS = [\n  SettingsScreens.TwoFaDisabled,\n  SettingsScreens.TwoFaNewPassword,\n  SettingsScreens.TwoFaNewPasswordConfirm,\n  SettingsScreens.TwoFaNewPasswordHint,\n  SettingsScreens.TwoFaNewPasswordEmail,\n  SettingsScreens.TwoFaNewPasswordEmailCode,\n  SettingsScreens.TwoFaCongratulations,\n  SettingsScreens.TwoFaEnabled,\n  SettingsScreens.TwoFaChangePasswordCurrent,\n  SettingsScreens.TwoFaChangePasswordNew,\n  SettingsScreens.TwoFaChangePasswordConfirm,\n  SettingsScreens.TwoFaChangePasswordHint,\n  SettingsScreens.TwoFaTurnOff,\n  SettingsScreens.TwoFaRecoveryEmailCurrentPassword,\n  SettingsScreens.TwoFaRecoveryEmail,\n  SettingsScreens.TwoFaRecoveryEmailCode,\n];\n\nconst PASSCODE_SCREENS = [\n  SettingsScreens.PasscodeDisabled,\n  SettingsScreens.PasscodeEnabled,\n];\n\nconst FOLDERS_SCREENS = [\n  SettingsScreens.Folders,\n  SettingsScreens.FoldersCreateFolder,\n  SettingsScreens.FoldersEditFolder,\n  SettingsScreens.FoldersEditFolderFromChatList,\n  SettingsScreens.FoldersEditFolderInvites,\n  SettingsScreens.FoldersIncludedChats,\n  SettingsScreens.FoldersIncludedChatsFromChatList,\n  SettingsScreens.FoldersExcludedChats,\n  SettingsScreens.FoldersExcludedChatsFromChatList,\n  SettingsScreens.FoldersShare,\n];\n\nconst PRIVACY_SCREENS = [\n  SettingsScreens.PrivacyBlockedUsers,\n  SettingsScreens.ActiveWebsites,\n];\n\nconst PRIVACY_PHONE_NUMBER_SCREENS = [\n  SettingsScreens.PrivacyPhoneNumberAllowedContacts,\n  SettingsScreens.PrivacyPhoneNumberDeniedContacts,\n];\n\nconst PRIVACY_LAST_SEEN_PHONE_SCREENS = [\n  SettingsScreens.PrivacyLastSeenAllowedContacts,\n  SettingsScreens.PrivacyLastSeenDeniedContacts,\n];\n\nconst PRIVACY_PROFILE_PHOTO_SCREENS = [\n  SettingsScreens.PrivacyProfilePhotoAllowedContacts,\n  SettingsScreens.PrivacyProfilePhotoDeniedContacts,\n];\n\nconst PRIVACY_BIO_SCREENS = [\n  SettingsScreens.PrivacyBioAllowedContacts,\n  SettingsScreens.PrivacyBioDeniedContacts,\n];\n\nconst PRIVACY_BIRTHDAY_SCREENS = [\n  SettingsScreens.PrivacyBirthdayAllowedContacts,\n  SettingsScreens.PrivacyBirthdayDeniedContacts,\n];\n\nconst PRIVACY_PHONE_CALL_SCREENS = [\n  SettingsScreens.PrivacyPhoneCallAllowedContacts,\n  SettingsScreens.PrivacyPhoneCallDeniedContacts,\n];\n\nconst PRIVACY_PHONE_P2P_SCREENS = [\n  SettingsScreens.PrivacyPhoneP2PAllowedContacts,\n  SettingsScreens.PrivacyPhoneP2PDeniedContacts,\n];\n\nconst PRIVACY_FORWARDING_SCREENS = [\n  SettingsScreens.PrivacyForwardingAllowedContacts,\n  SettingsScreens.PrivacyForwardingDeniedContacts,\n];\n\nconst PRIVACY_VOICE_MESSAGES_SCREENS = [\n  SettingsScreens.PrivacyVoiceMessagesAllowedContacts,\n  SettingsScreens.PrivacyVoiceMessagesDeniedContacts,\n];\n\nconst PRIVACY_GROUP_CHATS_SCREENS = [\n  SettingsScreens.PrivacyGroupChatsAllowedContacts,\n  SettingsScreens.PrivacyGroupChatsDeniedContacts,\n];\n\nexport type OwnProps = {\n  isActive: boolean;\n  currentScreen: SettingsScreens;\n  foldersState: FoldersState;\n  foldersDispatch: FolderEditDispatch;\n  onScreenSelect: (screen: SettingsScreens) => void;\n  shouldSkipTransition?: boolean;\n  onReset: (forceReturnToChatList?: true | Event) => void;\n};\n\nconst Settings: FC<OwnProps> = ({\n  isActive,\n  currentScreen,\n  foldersState,\n  foldersDispatch,\n  onScreenSelect,\n  onReset,\n  shouldSkipTransition,\n}) => {\n  const { closeShareChatFolderModal } = getActions();\n\n  const [twoFaState, twoFaDispatch] = useTwoFaReducer();\n  const [privacyPasscode, setPrivacyPasscode] = useState<string>('');\n\n  const handleReset = useLastCallback((forceReturnToChatList?: true | Event) => {\n    const isFromSettings = selectTabState(getGlobal()).shareFolderScreen?.isFromSettings;\n\n    if (currentScreen === SettingsScreens.FoldersShare) {\n      closeShareChatFolderModal();\n    }\n\n    if (forceReturnToChatList === true || (isFromSettings !== undefined && !isFromSettings)) {\n      onReset(true);\n      return;\n    }\n\n    if (\n      currentScreen === SettingsScreens.FoldersCreateFolder\n      || currentScreen === SettingsScreens.FoldersEditFolder\n      || currentScreen === SettingsScreens.FoldersEditFolderFromChatList\n      || currentScreen === SettingsScreens.FoldersEditFolderInvites\n    ) {\n      setTimeout(() => {\n        foldersDispatch({ type: 'reset' });\n      }, TRANSITION_DURATION);\n    }\n\n    if (\n      currentScreen === SettingsScreens.FoldersIncludedChats\n      || currentScreen === SettingsScreens.FoldersExcludedChats\n    ) {\n      if (foldersState.mode === 'create') {\n        onScreenSelect(SettingsScreens.FoldersCreateFolder);\n      } else {\n        onScreenSelect(SettingsScreens.FoldersEditFolder);\n      }\n      return;\n    }\n\n    onReset();\n  });\n\n  function renderCurrentSectionContent(isScreenActive: boolean, activeScreen: SettingsScreens) {\n    const privacyAllowScreens: Record<number, boolean> = {\n      [SettingsScreens.PrivacyPhoneNumber]: PRIVACY_PHONE_NUMBER_SCREENS.includes(activeScreen),\n      [SettingsScreens.PrivacyLastSeen]: PRIVACY_LAST_SEEN_PHONE_SCREENS.includes(activeScreen),\n      [SettingsScreens.PrivacyProfilePhoto]: PRIVACY_PROFILE_PHOTO_SCREENS.includes(activeScreen),\n      [SettingsScreens.PrivacyBio]: PRIVACY_BIO_SCREENS.includes(activeScreen),\n      [SettingsScreens.PrivacyBirthday]: PRIVACY_BIRTHDAY_SCREENS.includes(activeScreen),\n      [SettingsScreens.PrivacyPhoneCall]: PRIVACY_PHONE_CALL_SCREENS.includes(activeScreen),\n      [SettingsScreens.PrivacyPhoneP2P]: PRIVACY_PHONE_P2P_SCREENS.includes(activeScreen),\n      [SettingsScreens.PrivacyForwarding]: PRIVACY_FORWARDING_SCREENS.includes(activeScreen),\n      [SettingsScreens.PrivacyVoiceMessages]: PRIVACY_VOICE_MESSAGES_SCREENS.includes(activeScreen),\n      [SettingsScreens.PrivacyGroupChats]: PRIVACY_GROUP_CHATS_SCREENS.includes(activeScreen),\n    };\n\n    const isTwoFaScreen = TWO_FA_SCREENS.includes(activeScreen);\n    const isPasscodeScreen = PASSCODE_SCREENS.includes(activeScreen);\n    const isFoldersScreen = FOLDERS_SCREENS.includes(activeScreen);\n    const isPrivacyScreen = PRIVACY_SCREENS.includes(activeScreen)\n      || isTwoFaScreen\n      || isPasscodeScreen\n      || Object.keys(privacyAllowScreens).map(Number).includes(activeScreen)\n      || Object.values(privacyAllowScreens).includes(true);\n\n    switch (currentScreen) {\n      case SettingsScreens.Main:\n        return (\n          <SettingsMain onScreenSelect={onScreenSelect} isActive={isActive} onReset={handleReset} />\n        );\n      case SettingsScreens.EditProfile:\n        return (\n          <SettingsEditProfile\n            isActive={isActive && isScreenActive}\n            onReset={handleReset}\n          />\n        );\n      case SettingsScreens.General:\n        return (\n          <SettingsGeneral\n            onScreenSelect={onScreenSelect}\n            isActive={isScreenActive\n              || activeScreen === SettingsScreens.GeneralChatBackgroundColor\n              || activeScreen === SettingsScreens.GeneralChatBackground\n              || activeScreen === SettingsScreens.QuickReaction\n              || activeScreen === SettingsScreens.CustomEmoji\n              || isPrivacyScreen || isFoldersScreen}\n            onReset={handleReset}\n          />\n        );\n      case SettingsScreens.QuickReaction:\n        return (\n          <SettingsQuickReaction isActive={isScreenActive} onReset={handleReset} />\n        );\n      case SettingsScreens.CustomEmoji:\n        return (\n          <SettingsCustomEmoji isActive={isScreenActive} onReset={handleReset} />\n        );\n      case SettingsScreens.Notifications:\n        return (\n          <SettingsNotifications isActive={isScreenActive} onReset={handleReset} />\n        );\n      case SettingsScreens.DataStorage:\n        return (\n          <SettingsDataStorage isActive={isScreenActive} onReset={handleReset} />\n        );\n      case SettingsScreens.Privacy:\n        return (\n          <SettingsPrivacy\n            onScreenSelect={onScreenSelect}\n            isActive={isScreenActive || isPrivacyScreen}\n            onReset={handleReset}\n          />\n        );\n      case SettingsScreens.Language:\n        return (\n          <SettingsLanguage\n            isActive={isScreenActive || activeScreen === SettingsScreens.DoNotTranslate}\n            onReset={handleReset}\n            onScreenSelect={onScreenSelect}\n          />\n        );\n      case SettingsScreens.DoNotTranslate:\n        return (\n          <SettingsDoNotTranslate isActive={isScreenActive} onReset={handleReset} />\n        );\n      case SettingsScreens.Stickers:\n        return (\n          <SettingsStickers isActive={isScreenActive} onReset={handleReset} onScreenSelect={onScreenSelect} />\n        );\n      case SettingsScreens.Experimental:\n        return (\n          <SettingsExperimental isActive={isScreenActive} onReset={handleReset} />\n        );\n      case SettingsScreens.GeneralChatBackground:\n        return (\n          <SettingsGeneralBackground\n            onScreenSelect={onScreenSelect}\n            isActive={isScreenActive || activeScreen === SettingsScreens.GeneralChatBackgroundColor}\n            onReset={handleReset}\n          />\n        );\n      case SettingsScreens.GeneralChatBackgroundColor:\n        return (\n          <SettingsGeneralBackgroundColor\n            isActive={isScreenActive}\n            onReset={handleReset}\n          />\n        );\n      case SettingsScreens.ActiveSessions:\n        return (\n          <SettingsActiveSessions\n            isActive={isScreenActive}\n            onReset={handleReset}\n          />\n        );\n      case SettingsScreens.ActiveWebsites:\n        return (\n          <SettingsActiveWebsites\n            isActive={isScreenActive}\n            onReset={handleReset}\n          />\n        );\n      case SettingsScreens.PrivacyBlockedUsers:\n        return (\n          <SettingsPrivacyBlockedUsers\n            isActive={isScreenActive}\n            onReset={handleReset}\n          />\n        );\n      case SettingsScreens.PrivacyPhoneNumber:\n      case SettingsScreens.PrivacyLastSeen:\n      case SettingsScreens.PrivacyProfilePhoto:\n      case SettingsScreens.PrivacyBio:\n      case SettingsScreens.PrivacyBirthday:\n      case SettingsScreens.PrivacyPhoneCall:\n      case SettingsScreens.PrivacyForwarding:\n      case SettingsScreens.PrivacyVoiceMessages:\n      case SettingsScreens.PrivacyGroupChats:\n        return (\n          <SettingsPrivacyVisibility\n            screen={currentScreen}\n            onScreenSelect={onScreenSelect}\n            isActive={isScreenActive || privacyAllowScreens[currentScreen]}\n            onReset={handleReset}\n          />\n        );\n\n      case SettingsScreens.PrivacyPhoneNumberAllowedContacts:\n      case SettingsScreens.PrivacyLastSeenAllowedContacts:\n      case SettingsScreens.PrivacyProfilePhotoAllowedContacts:\n      case SettingsScreens.PrivacyBioAllowedContacts:\n      case SettingsScreens.PrivacyBirthdayAllowedContacts:\n      case SettingsScreens.PrivacyPhoneCallAllowedContacts:\n      case SettingsScreens.PrivacyPhoneP2PAllowedContacts:\n      case SettingsScreens.PrivacyForwardingAllowedContacts:\n      case SettingsScreens.PrivacyVoiceMessagesAllowedContacts:\n      case SettingsScreens.PrivacyGroupChatsAllowedContacts:\n        return (\n          <SettingsPrivacyVisibilityExceptionList\n            isAllowList\n            withPremiumCategory={currentScreen === SettingsScreens.PrivacyGroupChatsAllowedContacts}\n            screen={currentScreen}\n            onScreenSelect={onScreenSelect}\n            isActive={isScreenActive || privacyAllowScreens[currentScreen]}\n            onReset={handleReset}\n          />\n        );\n\n      case SettingsScreens.PrivacyPhoneNumberDeniedContacts:\n      case SettingsScreens.PrivacyLastSeenDeniedContacts:\n      case SettingsScreens.PrivacyProfilePhotoDeniedContacts:\n      case SettingsScreens.PrivacyBioDeniedContacts:\n      case SettingsScreens.PrivacyBirthdayDeniedContacts:\n      case SettingsScreens.PrivacyPhoneCallDeniedContacts:\n      case SettingsScreens.PrivacyPhoneP2PDeniedContacts:\n      case SettingsScreens.PrivacyForwardingDeniedContacts:\n      case SettingsScreens.PrivacyVoiceMessagesDeniedContacts:\n      case SettingsScreens.PrivacyGroupChatsDeniedContacts:\n        return (\n          <SettingsPrivacyVisibilityExceptionList\n            screen={currentScreen}\n            onScreenSelect={onScreenSelect}\n            isActive={isScreenActive}\n            onReset={handleReset}\n          />\n        );\n\n      case SettingsScreens.PrivacyMessages:\n        return (\n          <PrivacyMessages\n            isActive={isScreenActive}\n            onReset={handleReset}\n          />\n        );\n\n      case SettingsScreens.Folders:\n      case SettingsScreens.FoldersCreateFolder:\n      case SettingsScreens.FoldersEditFolder:\n      case SettingsScreens.FoldersEditFolderFromChatList:\n      case SettingsScreens.FoldersEditFolderInvites:\n      case SettingsScreens.FoldersIncludedChats:\n      case SettingsScreens.FoldersIncludedChatsFromChatList:\n      case SettingsScreens.FoldersExcludedChats:\n      case SettingsScreens.FoldersExcludedChatsFromChatList:\n      case SettingsScreens.FoldersShare:\n        return (\n          <SettingsFolders\n            currentScreen={currentScreen}\n            shownScreen={activeScreen}\n            state={foldersState}\n            dispatch={foldersDispatch}\n            isActive={isScreenActive}\n            onScreenSelect={onScreenSelect}\n            onReset={handleReset}\n          />\n        );\n\n      case SettingsScreens.TwoFaDisabled:\n      case SettingsScreens.TwoFaNewPassword:\n      case SettingsScreens.TwoFaNewPasswordConfirm:\n      case SettingsScreens.TwoFaNewPasswordHint:\n      case SettingsScreens.TwoFaNewPasswordEmail:\n      case SettingsScreens.TwoFaNewPasswordEmailCode:\n      case SettingsScreens.TwoFaCongratulations:\n      case SettingsScreens.TwoFaEnabled:\n      case SettingsScreens.TwoFaChangePasswordCurrent:\n      case SettingsScreens.TwoFaChangePasswordNew:\n      case SettingsScreens.TwoFaChangePasswordConfirm:\n      case SettingsScreens.TwoFaChangePasswordHint:\n      case SettingsScreens.TwoFaTurnOff:\n      case SettingsScreens.TwoFaRecoveryEmailCurrentPassword:\n      case SettingsScreens.TwoFaRecoveryEmail:\n      case SettingsScreens.TwoFaRecoveryEmailCode:\n        return (\n          <SettingsTwoFa\n            currentScreen={currentScreen}\n            state={twoFaState}\n            dispatch={twoFaDispatch}\n            shownScreen={activeScreen}\n            isActive={isScreenActive}\n            onScreenSelect={onScreenSelect}\n            onReset={handleReset}\n          />\n        );\n\n      case SettingsScreens.PasscodeDisabled:\n      case SettingsScreens.PasscodeNewPasscode:\n      case SettingsScreens.PasscodeNewPasscodeConfirm:\n      case SettingsScreens.PasscodeChangePasscodeCurrent:\n      case SettingsScreens.PasscodeChangePasscodeNew:\n      case SettingsScreens.PasscodeChangePasscodeConfirm:\n      case SettingsScreens.PasscodeCongratulations:\n      case SettingsScreens.PasscodeEnabled:\n      case SettingsScreens.PasscodeTurnOff:\n        return (\n          <SettingsPasscode\n            currentScreen={currentScreen}\n            passcode={privacyPasscode}\n            onSetPasscode={setPrivacyPasscode}\n            shownScreen={activeScreen}\n            isActive={isScreenActive}\n            onScreenSelect={onScreenSelect}\n            onReset={handleReset}\n          />\n        );\n\n      case SettingsScreens.Performance:\n        return (\n          <SettingsPerformance\n            isActive={isScreenActive}\n            onReset={handleReset}\n          />\n        );\n\n      default:\n        return undefined;\n    }\n  }\n\n  function renderCurrentSection(\n    isScreenActive: boolean,\n    _isFrom: boolean,\n    _currentKey: SettingsScreens,\n    activeKey: SettingsScreens,\n  ) {\n    return (\n      <>\n        <SettingsHeader\n          currentScreen={currentScreen}\n          onReset={handleReset}\n          onScreenSelect={onScreenSelect}\n          editedFolderId={foldersState.folderId}\n        />\n        {renderCurrentSectionContent(isScreenActive, activeKey)}\n      </>\n    );\n  }\n\n  return (\n    <Transition\n      id=\"Settings\"\n      name={shouldSkipTransition ? 'none' : LAYERS_ANIMATION_NAME}\n      activeKey={currentScreen}\n      renderCount={TRANSITION_RENDER_COUNT}\n      shouldWrap\n      withSwipeControl\n    >\n      {renderCurrentSection}\n    </Transition>\n  );\n};\n\nexport default memo(Settings);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback, useMemo } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiUser, ApiUserStatus } from '../../../api/types';\nimport { StoryViewerOrigin } from '../../../types';\n\nimport { filterUsersByName, sortUserIds } from '../../../global/helpers';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useInfiniteScroll from '../../../hooks/useInfiniteScroll';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport PrivateChatInfo from '../../common/PrivateChatInfo';\nimport FloatingActionButton from '../../ui/FloatingActionButton';\nimport InfiniteScroll from '../../ui/InfiniteScroll';\nimport ListItem from '../../ui/ListItem';\nimport Loading from '../../ui/Loading';\n\nexport type OwnProps = {\n  filter: string;\n  isActive: boolean;\n  onReset: () => void;\n};\n\ntype StateProps = {\n  usersById: Record<string, ApiUser>;\n  userStatusesById: Record<string, ApiUserStatus>;\n  contactIds?: string[];\n};\n\nconst ContactList: FC<OwnProps & StateProps> = ({\n  isActive,\n  filter,\n  usersById,\n  userStatusesById,\n  contactIds,\n  onReset,\n}) => {\n  const {\n    openChat,\n    openNewContactDialog,\n  } = getActions();\n\n  const lang = useOldLang();\n  const { isMobile } = useAppLayout();\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  const handleClick = useCallback((id: string) => {\n    openChat({ id, shouldReplaceHistory: true });\n  }, [openChat]);\n\n  const listIds = useMemo(() => {\n    if (!contactIds) {\n      return undefined;\n    }\n\n    const filteredIds = filterUsersByName(contactIds, usersById, filter);\n\n    return sortUserIds(filteredIds, usersById, userStatusesById);\n  }, [contactIds, filter, usersById, userStatusesById]);\n\n  const [viewportIds, getMore] = useInfiniteScroll(undefined, listIds, Boolean(filter));\n\n  return (\n    <InfiniteScroll items={viewportIds} onLoadMore={getMore} className=\"chat-list custom-scroll\">\n      {viewportIds?.length ? (\n        viewportIds.map((id) => (\n          <ListItem\n            key={id}\n            className=\"chat-item-clickable contact-list-item\"\n            // eslint-disable-next-line react/jsx-no-bind\n            onClick={() => handleClick(id)}\n          >\n            <PrivateChatInfo\n              userId={id}\n              forceShowSelf\n              avatarSize=\"large\"\n              withStory\n              storyViewerOrigin={StoryViewerOrigin.ChatList}\n              ripple={!isMobile}\n            />\n          </ListItem>\n        ))\n      ) : viewportIds && !viewportIds.length ? (\n        <p className=\"no-results\" key=\"no-results\" dir=\"auto\">\n          {filter.length ? 'No contacts matched your search.' : 'Contact list is empty.'}\n        </p>\n      ) : (\n        <Loading key=\"loading\" />\n      )}\n      <FloatingActionButton\n        key=\"create-new-contact\"\n        isShown\n        onClick={openNewContactDialog}\n        ariaLabel={lang('CreateNewContact')}\n      >\n        <i className=\"icon icon-add-user-filled\" />\n      </FloatingActionButton>\n    </InfiniteScroll>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const { userIds: contactIds } = global.contactList || {};\n    const { byId: usersById, statusesById: userStatusesById } = global.users;\n\n    return {\n      usersById,\n      userStatusesById,\n      contactIds,\n    };\n  },\n)(ContactList));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback, useMemo } from '../../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../../global';\n\nimport { filterUsersByName, isUserBot } from '../../../global/helpers';\nimport { selectTabState } from '../../../global/selectors';\nimport { unique } from '../../../util/iteratees';\nimport sortChatIds from '../../common/helpers/sortChatIds';\n\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport PeerPicker from '../../common/pickers/PeerPicker';\nimport Button from '../../ui/Button';\nimport FloatingActionButton from '../../ui/FloatingActionButton';\n\nexport type OwnProps = {\n  isChannel?: boolean;\n  isActive: boolean;\n  selectedMemberIds: string[];\n  onSelectedMemberIdsChange: (ids: string[]) => void;\n  onNextStep: () => void;\n  onReset: () => void;\n};\n\ntype StateProps = {\n  localContactIds?: string[];\n  searchQuery?: string;\n  isSearching?: boolean;\n  localPeerIds?: string[];\n  globalPeerIds?: string[];\n};\n\nconst NewChatStep1: FC<OwnProps & StateProps> = ({\n  isChannel,\n  isActive,\n  selectedMemberIds,\n  localContactIds,\n  searchQuery,\n  isSearching,\n  localPeerIds,\n  globalPeerIds,\n  onSelectedMemberIdsChange,\n  onNextStep,\n  onReset,\n}) => {\n  const {\n    setGlobalSearchQuery,\n  } = getActions();\n\n  const lang = useOldLang();\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  const handleFilterChange = useCallback((query: string) => {\n    setGlobalSearchQuery({ query });\n  }, []);\n\n  const displayedIds = useMemo(() => {\n    // No need for expensive global updates on users, so we avoid them\n    const usersById = getGlobal().users.byId;\n    const foundContactIds = localContactIds ? filterUsersByName(localContactIds, usersById, searchQuery) : [];\n\n    return sortChatIds(\n      unique([\n        ...foundContactIds,\n        ...(localPeerIds || []),\n        ...(globalPeerIds || []),\n      ]).filter((contactId) => {\n        const user = usersById[contactId];\n\n        return user && !user.isSelf && (user.canBeInvitedToGroup || !isUserBot(user));\n      }),\n      false,\n      selectedMemberIds,\n    );\n  }, [localContactIds, searchQuery, localPeerIds, globalPeerIds, selectedMemberIds]);\n\n  const handleNextStep = useCallback(() => {\n    setGlobalSearchQuery({ query: '' });\n    onNextStep();\n  }, [onNextStep]);\n\n  return (\n    <div className=\"NewChat step-1\">\n      <div className=\"left-header\">\n        <Button\n          round\n          size=\"smaller\"\n          color=\"translucent\"\n          onClick={onReset}\n          ariaLabel=\"Return to Chat List\"\n        >\n          <i className=\"icon icon-arrow-left\" />\n        </Button>\n        <h3>{lang('GroupAddMembers')}</h3>\n      </div>\n      <div className=\"NewChat-inner step-1\">\n        <PeerPicker\n          itemIds={displayedIds}\n          selectedIds={selectedMemberIds}\n          filterValue={searchQuery}\n          filterPlaceholder={lang('SendMessageTo')}\n          searchInputId=\"new-group-picker-search\"\n          isLoading={isSearching}\n          isSearchable\n          allowMultiple\n          withStatus\n          itemInputType=\"checkbox\"\n          withDefaultPadding\n          onSelectedIdsChange={onSelectedMemberIdsChange}\n          onFilterChange={handleFilterChange}\n        />\n\n        <FloatingActionButton\n          isShown\n          onClick={handleNextStep}\n          ariaLabel={isChannel ? 'Continue To Channel Info' : 'Continue To Group Info'}\n        >\n          <i className=\"icon icon-arrow-right\" />\n        </FloatingActionButton>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const { userIds: localContactIds } = global.contactList || {};\n\n    const {\n      query: searchQuery,\n      fetchingStatus,\n      globalResults,\n      localResults,\n    } = selectTabState(global).globalSearch;\n    const { peerIds: globalPeerIds } = globalResults || {};\n    const { peerIds: localPeerIds } = localResults || {};\n\n    return {\n      localContactIds,\n      searchQuery,\n      isSearching: fetchingStatus?.chats,\n      globalPeerIds,\n      localPeerIds,\n    };\n  },\n)(NewChatStep1));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo,\n  useCallback, useEffect, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../../global';\n\nimport { ChatCreationProgress } from '../../../types';\n\nimport { getUserFirstOrLastName } from '../../../global/helpers';\nimport { selectTabState } from '../../../global/selectors';\n\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport PrivateChatInfo from '../../common/PrivateChatInfo';\nimport AvatarEditable from '../../ui/AvatarEditable';\nimport Button from '../../ui/Button';\nimport FloatingActionButton from '../../ui/FloatingActionButton';\nimport InputText from '../../ui/InputText';\nimport ListItem from '../../ui/ListItem';\nimport Spinner from '../../ui/Spinner';\n\nexport type OwnProps = {\n  isChannel?: boolean;\n  isActive: boolean;\n  memberIds: string[];\n  onReset: (forceReturnToChatList?: boolean) => void;\n};\n\ntype StateProps = {\n  creationProgress?: ChatCreationProgress;\n  creationError?: string;\n  maxGroupSize?: number;\n};\n\nconst MAX_MEMBERS_FOR_GENERATE_CHAT_NAME = 4;\n\nconst NewChatStep2: FC<OwnProps & StateProps > = ({\n  isChannel,\n  isActive,\n  memberIds,\n  maxGroupSize,\n  creationProgress,\n  creationError,\n  onReset,\n}) => {\n  const {\n    createGroupChat,\n    createChannel,\n  } = getActions();\n\n  const lang = useOldLang();\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  const [title, setTitle] = useState('');\n  const [about, setAbout] = useState('');\n  const [photo, setPhoto] = useState<File | undefined>();\n  const [error, setError] = useState<string | undefined>();\n\n  const chatTitleEmptyError = 'Chat title can\\'t be empty';\n  const channelTitleEmptyError = 'Channel title can\\'t be empty';\n  const chatTooManyUsersError = 'Sorry, creating supergroups is not yet supported';\n\n  const isLoading = creationProgress === ChatCreationProgress.InProgress;\n\n  useEffect(() => {\n    if (isChannel) {\n      return;\n    }\n    if (!memberIds.length || memberIds.length > MAX_MEMBERS_FOR_GENERATE_CHAT_NAME) {\n      setTitle('');\n      return;\n    }\n    const global = getGlobal();\n    const usersById = global.users.byId;\n    const memberFirstNames = [global.currentUserId!, ...memberIds]\n      .map((userId) => getUserFirstOrLastName(usersById[userId]))\n      .filter(Boolean);\n    const generatedChatName = memberFirstNames.slice(0, -1).join(', ')\n      + lang('CreateGroup.PeersTitleLastDelimeter')\n      + memberFirstNames[memberFirstNames.length - 1];\n    setTitle(generatedChatName);\n  }, [isChannel, memberIds, lang]);\n\n  const handleTitleChange = useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    const { value } = e.currentTarget;\n    const newValue = value.replace(/^\\s+/, '');\n\n    setTitle(newValue);\n\n    if (newValue !== value) {\n      e.currentTarget.value = newValue;\n    }\n  }, []);\n\n  const handleDescriptionChange = useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    setAbout(e.currentTarget.value);\n  }, []);\n\n  const handleCreateGroup = useCallback(() => {\n    if (!title.length) {\n      setError(chatTitleEmptyError);\n      return;\n    }\n\n    if (maxGroupSize && memberIds.length >= maxGroupSize) {\n      setError(chatTooManyUsersError);\n      return;\n    }\n\n    createGroupChat({\n      title,\n      photo,\n      memberIds,\n    });\n  }, [title, memberIds, maxGroupSize, createGroupChat, photo]);\n\n  const handleCreateChannel = useCallback(() => {\n    if (!title.length) {\n      setError(channelTitleEmptyError);\n      return;\n    }\n\n    createChannel({\n      title,\n      about,\n      photo,\n      memberIds,\n    });\n  }, [title, createChannel, about, photo, memberIds, channelTitleEmptyError]);\n\n  useEffect(() => {\n    if (creationProgress === ChatCreationProgress.Complete) {\n      onReset(true);\n    }\n  }, [creationProgress, onReset]);\n\n  const renderedError = (creationError && lang(creationError)) || (\n    error !== chatTitleEmptyError && error !== channelTitleEmptyError\n      ? error\n      : undefined\n  );\n\n  return (\n    <div className=\"NewChat\">\n      <div className=\"left-header\">\n        <Button\n          round\n          size=\"smaller\"\n          color=\"translucent\"\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onReset()}\n          ariaLabel=\"Return to member selection\"\n        >\n          <i className=\"icon icon-arrow-left\" />\n        </Button>\n        <h3>{lang(isChannel ? 'NewChannel' : 'NewGroup')}</h3>\n      </div>\n      <div className=\"NewChat-inner step-2\">\n        <AvatarEditable\n          onChange={setPhoto}\n          title={lang('AddPhoto')}\n        />\n        <InputText\n          value={title}\n          onChange={handleTitleChange}\n          label={lang(isChannel ? 'EnterChannelName' : 'GroupName')}\n          error={error === chatTitleEmptyError || error === channelTitleEmptyError ? error : undefined}\n        />\n        {isChannel && (\n          <>\n            <InputText\n              value={about}\n              onChange={handleDescriptionChange}\n              label={lang('DescriptionOptionalPlaceholder')}\n            />\n            <p className=\"note\">{lang('DescriptionInfo')}</p>\n          </>\n        )}\n\n        {renderedError && (\n          <p className=\"error\">{renderedError}</p>\n        )}\n\n        {memberIds.length > 0 && (\n          <>\n            <h3 className=\"chat-members-heading\">{lang('GroupInfo.ParticipantCount', memberIds.length, 'i')}</h3>\n\n            <div className=\"chat-members-list custom-scroll\">\n              {memberIds.map((id) => (\n                <ListItem inactive className=\"chat-item-clickable\">\n                  <PrivateChatInfo userId={id} />\n                </ListItem>\n              ))}\n            </div>\n          </>\n        )}\n      </div>\n\n      <FloatingActionButton\n        isShown={title.length !== 0}\n        onClick={isChannel ? handleCreateChannel : handleCreateGroup}\n        disabled={isLoading}\n        ariaLabel={isChannel ? lang('ChannelIntro.CreateChannel') : 'Create Group'}\n      >\n        {isLoading ? (\n          <Spinner color=\"white\" />\n        ) : (\n          <i className=\"icon icon-arrow-right\" />\n        )}\n      </FloatingActionButton>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const {\n      progress: creationProgress,\n      error: creationError,\n    } = selectTabState(global).chatCreation || {};\n\n    return {\n      creationProgress,\n      creationError,\n      maxGroupSize: global.config?.maxGroupSize,\n    };\n  },\n)(NewChatStep2));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback, useState } from '../../../lib/teact/teact';\n\nimport { LeftColumnContent } from '../../../types';\n\nimport { LAYERS_ANIMATION_NAME } from '../../../util/windowEnvironment';\n\nimport Transition from '../../ui/Transition';\nimport NewChatStep1 from './NewChatStep1';\nimport NewChatStep2 from './NewChatStep2';\n\nimport './NewChat.scss';\n\nexport type OwnProps = {\n  isActive: boolean;\n  isChannel?: boolean;\n  content: LeftColumnContent;\n  onContentChange: (content: LeftColumnContent) => void;\n  onReset: () => void;\n};\n\nconst RENDER_COUNT = Object.keys(LeftColumnContent).length / 2;\n\nconst NewChat: FC<OwnProps> = ({\n  isActive,\n  isChannel = false,\n  content,\n  onContentChange,\n  onReset,\n}) => {\n  const [newChatMemberIds, setNewChatMemberIds] = useState<string[]>([]);\n\n  const handleNextStep = useCallback(() => {\n    onContentChange(isChannel ? LeftColumnContent.NewChannelStep2 : LeftColumnContent.NewGroupStep2);\n  }, [isChannel, onContentChange]);\n\n  return (\n    <Transition\n      id=\"NewChat\"\n      name={LAYERS_ANIMATION_NAME}\n      renderCount={RENDER_COUNT}\n      activeKey={content}\n    >\n      {(isStepActive) => {\n        switch (content) {\n          case LeftColumnContent.NewChannelStep1:\n          case LeftColumnContent.NewGroupStep1:\n            return (\n              <NewChatStep1\n                isChannel={isChannel}\n                isActive={isActive}\n                selectedMemberIds={newChatMemberIds}\n                onSelectedMemberIdsChange={setNewChatMemberIds}\n                onNextStep={handleNextStep}\n                onReset={onReset}\n              />\n            );\n          case LeftColumnContent.NewChannelStep2:\n          case LeftColumnContent.NewGroupStep2:\n            return (\n              <NewChatStep2\n                isChannel={isChannel}\n                isActive={isStepActive && isActive}\n                memberIds={newChatMemberIds}\n                onReset={onReset}\n              />\n            );\n          default:\n            return undefined;\n        }\n      }}\n    </Transition>\n  );\n};\n\nexport default memo(NewChat);\n","// extracted by mini-css-extract-plugin\nexport default {\"name\":\"BDZrSTO_\",\"root\":\"QOz6fQFU\",\"avatar\":\"dXSy0i2c\",\"avatarHidden\":\"n0vJEdNW\",\"ghost\":\"E1IeDpeb\",\"ghostAnimateName\":\"HMp3KTKQ\",\"ghostRevealName\":\"unYkDic1\",\"ghostLast\":\"dZJGfaXC\"};","import { ANIMATION_END_DELAY } from '../../../config';\nimport { requestMutation } from '../../../lib/fasterdom/fasterdom';\nimport { applyStyles } from '../../../util/animation';\nimport stopEvent from '../../../util/stopEvent';\nimport { REM } from '../../common/helpers/mediaDimensions';\n\nimport ribbonStyles from '../StoryRibbon.module.scss';\nimport togglerStyles from '../StoryToggler.module.scss';\n\nexport const ANIMATION_DURATION = 250;\nconst RIBBON_OFFSET = 0.25 * REM;\nconst RIBBON_Z_INDEX = 11;\nconst STROKE_OFFSET = 0.1875 * REM;\nconst CANVAS_OFFSET = 0.125 * REM;\n\nconst callbacks: Set<NoneToVoidFunction> = new Set();\n\nexport function animateOpening(isArchived?: boolean) {\n  cancelDelayedCallbacks();\n\n  const {\n    container, toggler, leftMainHeader, ribbonPeers, toggleAvatars,\n  } = getHTMLElements(isArchived);\n\n  if (!toggler || !toggleAvatars || !ribbonPeers || !container || !leftMainHeader) {\n    return;\n  }\n\n  const { bottom: headerBottom, right: headerRight } = leftMainHeader.getBoundingClientRect();\n  const toTop = headerBottom + RIBBON_OFFSET;\n\n  // Toggle avatars are in the reverse order\n  const lastToggleAvatar = toggleAvatars[0];\n  const firstToggleAvatar = toggleAvatars[toggleAvatars.length - 1];\n  const lastId = getPeerId(lastToggleAvatar);\n\n  Array.from(ribbonPeers).reverse().forEach((peer, index, { length }) => {\n    const id = getPeerId(peer);\n    if (!id) return;\n    const isLast = id === lastId;\n    let toggleAvatar = selectByPeerId(toggler, id);\n    let zIndex = RIBBON_Z_INDEX + index + 1;\n    if (!toggleAvatar) {\n      const isSelf = index === length - 1;\n\n      // Self story should appear from the first toggle avatar\n      toggleAvatar = isSelf ? firstToggleAvatar : lastToggleAvatar;\n      zIndex = RIBBON_Z_INDEX;\n    }\n\n    if (!toggleAvatar) return;\n\n    let {\n      // eslint-disable-next-line prefer-const\n      top: fromTop,\n      left: fromLeft,\n      width: fromWidth,\n    } = toggleAvatar.getBoundingClientRect();\n\n    const {\n      left: toLeft,\n      width: toWidth,\n    } = peer.getBoundingClientRect();\n\n    if (toLeft > headerRight) {\n      return;\n    }\n\n    fromLeft -= STROKE_OFFSET;\n    fromWidth += 2 * STROKE_OFFSET;\n\n    const fromTranslateX = fromLeft - toLeft;\n    const fromTranslateY = fromTop - toTop;\n    const fromScale = fromWidth / toWidth;\n\n    fromTop -= STROKE_OFFSET;\n\n    const toTranslateX = toLeft - fromLeft + 2 * STROKE_OFFSET;\n    const toTranslateY = toTop - fromTop + STROKE_OFFSET;\n    const toScale = toWidth / (fromWidth + 2 * STROKE_OFFSET);\n\n    requestMutation(() => {\n      if (!toggleAvatar) return;\n      const ghost = createGhost(peer);\n\n      let ghost2: HTMLElement | undefined;\n\n      // If this is a toogle avatar we create a second ghost and do crossfade animation\n      if (zIndex > RIBBON_Z_INDEX) {\n        ghost2 = createGhost(toggleAvatar!);\n        if (isLast) {\n          ghost2.classList.add(togglerStyles.ghostLast);\n        }\n      } else {\n        // Else we animate only name\n        ghost.classList.add(togglerStyles.ghostAnimateName);\n      }\n\n      applyStyles(ghost, {\n        top: `${toTop}px`,\n        left: `${toLeft}px`,\n        zIndex: `${zIndex}`,\n        opacity: ghost2 ? '0' : '',\n        transform: `translate3d(${fromTranslateX}px, ${fromTranslateY}px, 0) scale(${fromScale})`,\n      });\n\n      if (ghost2) {\n        applyStyles(ghost2, {\n          top: `${fromTop}px`,\n          left: `${fromLeft}px`,\n          zIndex: `${zIndex}`,\n        });\n      }\n\n      container.appendChild(ghost);\n      if (ghost2) {\n        container.appendChild(ghost2);\n      }\n      toggleAvatar.classList.add('animating');\n      peer.classList.add('animating');\n\n      requestMutation(() => {\n        applyStyles(ghost, {\n          opacity: '',\n          transform: '',\n        });\n\n        if (ghost2) {\n          applyStyles(ghost2, {\n            opacity: '0',\n            transform: `translate3d(${toTranslateX}px, ${toTranslateY}px, 0) scale(${toScale})`,\n          });\n        } else {\n          ghost.classList.add(togglerStyles.ghostRevealName);\n        }\n\n        const cb = createDelayedCallback(() => {\n          requestMutation(() => {\n            if (container.contains(ghost)) {\n              container.removeChild(ghost);\n            }\n            if (ghost2 && container.contains(ghost2)) {\n              container.removeChild(ghost2);\n            }\n            toggleAvatar?.classList.remove('animating');\n            peer.classList.remove('animating');\n          });\n        }, ANIMATION_DURATION + ANIMATION_END_DELAY);\n\n        callbacks.add(cb);\n      });\n    });\n  });\n}\n\nexport function animateClosing(isArchived?: boolean) {\n  cancelDelayedCallbacks();\n\n  const {\n    container,\n    toggler,\n    toggleAvatars,\n    ribbonPeers,\n    leftMainHeader,\n  } = getHTMLElements(isArchived);\n\n  if (!toggler || !toggleAvatars || !ribbonPeers || !container || !leftMainHeader) {\n    return;\n  }\n  const { right: headerRight } = leftMainHeader.getBoundingClientRect();\n\n  // Toggle avatars are in the reverse order\n  const lastToggleAvatar = toggleAvatars[0];\n  const firstToggleAvatar = toggleAvatars[toggleAvatars.length - 1];\n  const lastId = getPeerId(lastToggleAvatar);\n\n  Array.from(ribbonPeers).reverse().forEach((peer, index, { length }) => {\n    const id = getPeerId(peer);\n    if (!id) return;\n    const isLast = id === lastId;\n    let toggleAvatar = selectByPeerId(toggler, id);\n    let zIndex = RIBBON_Z_INDEX + index + 1;\n    if (!toggleAvatar) {\n      const isSelf = index === length - 1;\n\n      // Self story should appear from the first toggle avatar\n      toggleAvatar = isSelf ? firstToggleAvatar : lastToggleAvatar;\n      zIndex = RIBBON_Z_INDEX;\n    }\n\n    if (!toggleAvatar) return;\n\n    const {\n      top: fromTop,\n      left: fromLeft,\n      width: fromWidth,\n    } = peer.getBoundingClientRect();\n\n    let {\n      left: toLeft,\n      width: toWidth,\n      top: toTop,\n    } = toggleAvatar.getBoundingClientRect();\n\n    if (fromLeft > headerRight) {\n      return;\n    }\n\n    toLeft -= STROKE_OFFSET;\n    toWidth += 2 * STROKE_OFFSET;\n\n    const toTranslateX = toLeft - fromLeft;\n    const toTranslateY = toTop - fromTop - CANVAS_OFFSET;\n    const toScale = toWidth / fromWidth;\n\n    toTop -= STROKE_OFFSET;\n\n    const fromTranslateX = fromLeft - toLeft + 2 * STROKE_OFFSET;\n    const fromTranslateY = fromTop - toTop + STROKE_OFFSET;\n    const fromScale = fromWidth / (toWidth + 2 * STROKE_OFFSET);\n\n    requestMutation(() => {\n      const ghost = createGhost(peer);\n      let ghost2: HTMLElement | undefined;\n\n      if (zIndex > RIBBON_Z_INDEX) {\n        ghost2 = createGhost(toggleAvatar!);\n        if (isLast) {\n          ghost2.classList.add(togglerStyles.ghostLast);\n        }\n      } else {\n        ghost.classList.add(togglerStyles.ghostAnimateName, togglerStyles.ghostRevealName);\n      }\n\n      applyStyles(ghost, {\n        top: `${fromTop}px`,\n        left: `${fromLeft}px`,\n        width: `${fromWidth}px`,\n        zIndex: `${zIndex}`,\n      });\n\n      if (ghost2) {\n        applyStyles(ghost2, {\n          top: `${toTop}px`,\n          left: `${toLeft}px`,\n          zIndex: `${zIndex}`,\n          opacity: '0',\n          transform: `translate3d(${fromTranslateX}px, ${fromTranslateY}px, 0) scale(${fromScale})`,\n        });\n      }\n\n      peer.classList.add('animating');\n      toggleAvatar!.classList.add('animating');\n\n      container.appendChild(ghost);\n      if (ghost2) {\n        container.appendChild(ghost2);\n      }\n\n      requestMutation(() => {\n        applyStyles(ghost, {\n          opacity: ghost2 ? '0' : '',\n          transform: `translate3d(${toTranslateX}px, ${toTranslateY}px, 0) scale(${toScale})`,\n        });\n\n        if (ghost2) {\n          applyStyles(ghost2!, {\n            opacity: '',\n            transform: '',\n          });\n        } else {\n          ghost.classList.remove(togglerStyles.ghostRevealName);\n        }\n\n        const cb = createDelayedCallback(() => {\n          requestMutation(() => {\n            if (container.contains(ghost)) {\n              container.removeChild(ghost);\n            }\n            if (ghost2 && container.contains(ghost2)) {\n              container.removeChild(ghost2);\n            }\n            peer.classList.remove('animating');\n            toggleAvatar!.classList.remove('animating');\n          });\n        }, ANIMATION_DURATION + ANIMATION_END_DELAY);\n\n        callbacks.add(cb);\n      });\n    });\n  });\n}\n\nfunction getHTMLElements(isArchived?: boolean) {\n  let container = document.getElementById('LeftColumn');\n  if (container && isArchived) {\n    container = container.querySelector<HTMLElement>('.ArchivedChats');\n  }\n  if (!container) return {};\n  const toggler = container.querySelector<HTMLElement>('#StoryToggler');\n  const ribbon = container.querySelector<HTMLElement>('#StoryRibbon');\n  const leftMainHeader = container.querySelector<HTMLElement>('.left-header');\n  const ribbonPeers = ribbon?.querySelectorAll<HTMLElement>(`.${ribbonStyles.peer}`);\n  const toggleAvatars = toggler?.querySelectorAll<HTMLElement>('.Avatar');\n\n  return {\n    container,\n    toggler,\n    leftMainHeader,\n    ribbonPeers,\n    toggleAvatars,\n  };\n}\n\nfunction createGhost(sourceEl: HTMLElement) {\n  const ghost = sourceEl.cloneNode(true) as HTMLElement;\n  ghost.classList.add(togglerStyles.ghost);\n\n  // Avoid source animating class being copied to the ghost\n  ghost.classList.remove('animating');\n\n  ghost.draggable = false;\n  ghost.oncontextmenu = stopEvent;\n\n  const sourceCanvas = sourceEl.querySelector('canvas');\n  if (sourceCanvas) {\n    const canvas = ghost.querySelector('canvas');\n    canvas?.getContext('2d')?.drawImage(sourceCanvas, 0, 0);\n  }\n\n  return ghost;\n}\n\nfunction getPeerId(el: HTMLElement) {\n  return el?.getAttribute('data-peer-id');\n}\n\nfunction selectByPeerId(el: HTMLElement, id: string) {\n  return el?.querySelector<HTMLElement>(`[data-peer-id=\"${id}\"]`);\n}\n\nfunction createDelayedCallback(callback: NoneToVoidFunction, ms: number) {\n  const timeout = setTimeout(callback, ms);\n\n  return () => {\n    clearTimeout(timeout);\n    callback();\n  };\n}\n\nfunction cancelDelayedCallbacks() {\n  callbacks.forEach((cb) => cb());\n  callbacks.clear();\n}\n","import React, { memo, useRef } from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport type { ApiPeer } from '../../api/types';\nimport { StoryViewerOrigin } from '../../types';\n\nimport { getSenderTitle, isUserId } from '../../global/helpers';\nimport buildClassName from '../../util/buildClassName';\nimport { preventMessageInputBlurWithBubbling } from '../middle/helpers/preventMessageInputBlur';\n\nimport useContextMenuHandlers from '../../hooks/useContextMenuHandlers';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\nimport useStoryPreloader from './hooks/useStoryPreloader';\n\nimport Avatar from '../common/Avatar';\nimport Menu from '../ui/Menu';\nimport MenuItem from '../ui/MenuItem';\n\nimport styles from './StoryRibbon.module.scss';\n\ninterface OwnProps {\n  peer: ApiPeer;\n  isArchived?: boolean;\n}\n\nfunction StoryRibbonButton({ peer, isArchived }: OwnProps) {\n  const {\n    openChat,\n    openChatWithInfo,\n    openStoryViewer,\n    toggleStoriesHidden,\n  } = getActions();\n\n  const lang = useOldLang();\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n\n  const isSelf = 'isSelf' in peer && peer.isSelf;\n  const isChannel = !isUserId(peer.id);\n\n  useStoryPreloader(peer.id);\n\n  const {\n    isContextMenuOpen, contextMenuAnchor,\n    handleBeforeContextMenu, handleContextMenu,\n    handleContextMenuClose, handleContextMenuHide,\n  } = useContextMenuHandlers(ref);\n\n  const getTriggerElement = useLastCallback(() => ref.current);\n  const getRootElement = useLastCallback(() => document.body);\n  const getMenuElement = useLastCallback(() => ref.current!.querySelector('.story-peer-context-menu .bubble'));\n  const getLayout = useLastCallback(() => ({ withPortal: true, isDense: true }));\n\n  const handleClick = useLastCallback(() => {\n    if (isContextMenuOpen) return;\n\n    openStoryViewer({ peerId: peer.id, origin: StoryViewerOrigin.StoryRibbon });\n  });\n\n  const handleMouseDown = useLastCallback((e: React.MouseEvent<HTMLElement>) => {\n    preventMessageInputBlurWithBubbling(e);\n    handleBeforeContextMenu(e);\n  });\n\n  const handleSavedStories = useLastCallback(() => {\n    openChatWithInfo({ id: peer.id, shouldReplaceHistory: true, profileTab: 'stories' });\n  });\n\n  const handleArchivedStories = useLastCallback(() => {\n    openChatWithInfo({ id: peer.id, shouldReplaceHistory: true, profileTab: 'storiesArchive' });\n  });\n\n  const handleOpenChat = useLastCallback(() => {\n    openChat({ id: peer.id, shouldReplaceHistory: true });\n  });\n\n  const handleOpenProfile = useLastCallback(() => {\n    openChatWithInfo({ id: peer.id, shouldReplaceHistory: true });\n  });\n\n  const handleArchivePeer = useLastCallback(() => {\n    toggleStoriesHidden({ peerId: peer.id, isHidden: !isArchived });\n  });\n\n  return (\n    <div\n      ref={ref}\n      role=\"button\"\n      data-peer-id={peer.id}\n      tabIndex={0}\n      className={styles.peer}\n      onMouseDown={handleMouseDown}\n      onClick={handleClick}\n      onContextMenu={handleContextMenu}\n    >\n      <Avatar\n        peer={peer}\n        withStory\n        storyViewerOrigin={StoryViewerOrigin.StoryRibbon}\n        storyViewerMode=\"full\"\n      />\n      <div className={buildClassName(styles.name, peer.hasUnreadStories && styles.name_hasUnreadStory)}>\n        {isSelf ? lang('MyStory') : getSenderTitle(lang, peer)}\n      </div>\n      {contextMenuAnchor !== undefined && (\n        <Menu\n          isOpen={isContextMenuOpen}\n          anchor={contextMenuAnchor}\n          getTriggerElement={getTriggerElement}\n          getRootElement={getRootElement}\n          getMenuElement={getMenuElement}\n          getLayout={getLayout}\n          className={buildClassName('story-peer-context-menu', styles.contextMenu)}\n          autoClose\n          withPortal\n          onClose={handleContextMenuClose}\n          onCloseAnimationEnd={handleContextMenuHide}\n        >\n          {isSelf ? (\n            <>\n              <MenuItem onClick={handleSavedStories} icon=\"play-story\">\n                {lang('StoryList.Context.SavedStories')}\n              </MenuItem>\n              <MenuItem onClick={handleArchivedStories} icon=\"archive\">\n                {lang('StoryList.Context.ArchivedStories')}\n              </MenuItem>\n            </>\n          ) : (\n            <>\n              {!isChannel && (\n                <MenuItem onClick={handleOpenChat} icon=\"message\">\n                  {lang('SendMessageTitle')}\n                </MenuItem>\n              )}\n              {isChannel ? (\n                <MenuItem onClick={handleOpenProfile} icon=\"channel\">\n                  {lang('ChatList.ContextOpenChannel')}\n                </MenuItem>\n              ) : (\n                <MenuItem onClick={handleOpenProfile} icon=\"user\">\n                  {lang('StoryList.Context.ViewProfile')}\n                </MenuItem>\n              )}\n              <MenuItem\n                onClick={handleArchivePeer}\n                icon={isArchived ? 'unarchive' : 'archive'}\n              >\n                {lang(isArchived ? 'StoryList.Context.Unarchive' : 'StoryList.Context.Archive')}\n              </MenuItem>\n            </>\n          )}\n        </Menu>\n      )}\n    </div>\n  );\n}\n\nexport default memo(StoryRibbonButton);\n","import React, { memo, useRef } from '../../lib/teact/teact';\nimport { withGlobal } from '../../global';\n\nimport type { ApiChat, ApiUser } from '../../api/types';\n\nimport buildClassName from '../../util/buildClassName';\n\nimport { getIsMobile } from '../../hooks/useAppLayout';\nimport useHorizontalScroll from '../../hooks/useHorizontalScroll';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport StoryRibbonButton from './StoryRibbonButton';\n\nimport styles from './StoryRibbon.module.scss';\n\ninterface OwnProps {\n  isArchived?: boolean;\n  className?: string;\n  isClosing?: boolean;\n}\n\ninterface StateProps {\n  orderedPeerIds: string[];\n  usersById: Record<string, ApiUser>;\n  chatsById: Record<string, ApiChat>;\n}\n\nfunction StoryRibbon({\n  isArchived,\n  className,\n  orderedPeerIds,\n  usersById,\n  chatsById,\n  isClosing,\n}: OwnProps & StateProps) {\n  const lang = useOldLang();\n  const fullClassName = buildClassName(\n    styles.root,\n    !orderedPeerIds.length && styles.hidden,\n    isClosing && styles.closing,\n    className,\n    'no-scrollbar',\n  );\n\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n\n  useHorizontalScroll(ref, getIsMobile());\n\n  return (\n    <div\n      ref={ref}\n      id=\"StoryRibbon\"\n      className={fullClassName}\n      dir={lang.isRtl ? 'rtl' : undefined}\n    >\n      {orderedPeerIds.map((peerId) => {\n        const peer = usersById[peerId] || chatsById[peerId];\n\n        if (!peer) {\n          return undefined;\n        }\n\n        return (\n          <StoryRibbonButton\n            key={peerId}\n            peer={peer}\n            isArchived={isArchived}\n          />\n        );\n      })}\n    </div>\n  );\n}\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { isArchived }): StateProps => {\n    const { orderedPeerIds: { active, archived } } = global.stories;\n    const usersById = global.users.byId;\n    const chatsById = global.chats.byId;\n\n    return {\n      orderedPeerIds: isArchived ? archived : active,\n      usersById,\n      chatsById,\n    };\n  },\n)(StoryRibbon));\n","import React, {\n  beginHeavyAnimation, memo, useEffect, useMemo,\n} from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { ApiChat, ApiUser } from '../../api/types';\nimport type { GlobalState } from '../../global/types';\n\nimport { ANIMATION_END_DELAY, PREVIEW_AVATAR_COUNT } from '../../config';\nimport { selectIsForumPanelOpen, selectPerformanceSettingsValue, selectTabState } from '../../global/selectors';\nimport { animateClosing, animateOpening, ANIMATION_DURATION } from './helpers/ribbonAnimation';\n\nimport useOldLang from '../../hooks/useOldLang';\nimport useShowTransition from '../../hooks/useShowTransition';\nimport useStoryPreloader from './hooks/useStoryPreloader';\n\nimport Avatar from '../common/Avatar';\n\nimport styles from './StoryToggler.module.scss';\n\ninterface OwnProps {\n  isArchived?: boolean;\n  canShow?: boolean;\n}\n\ninterface StateProps {\n  currentUserId: string;\n  orderedPeerIds: string[];\n  isShown: boolean;\n  isForumPanelOpen?: boolean;\n  withAnimation?: boolean;\n  usersById: Record<string, ApiUser>;\n  chatsById: Record<string, ApiChat>;\n  peerStories: GlobalState['stories']['byPeerId'];\n}\n\nconst PRELOAD_PEERS = 5;\n\nfunction StoryToggler({\n  currentUserId,\n  orderedPeerIds,\n  usersById,\n  chatsById,\n  canShow,\n  isShown,\n  isForumPanelOpen,\n  isArchived,\n  withAnimation,\n  peerStories,\n}: OwnProps & StateProps) {\n  const { toggleStoryRibbon } = getActions();\n\n  const lang = useOldLang();\n\n  const peers = useMemo(() => {\n    if (orderedPeerIds.length === 1) {\n      return [usersById[orderedPeerIds[0]] || chatsById[orderedPeerIds[0]]];\n    }\n\n    return orderedPeerIds\n      .map((id) => usersById[id] || chatsById[id])\n      .filter((peer) => peer && peer.id !== currentUserId)\n      .slice(0, PREVIEW_AVATAR_COUNT)\n      .reverse();\n  }, [currentUserId, orderedPeerIds, usersById, chatsById]);\n\n  const closeFriends = useMemo(() => {\n    if (!peers?.length) return {};\n    return peers.reduce((acc, peer) => {\n      const stories = peerStories[peer.id];\n      if (!stories) return acc;\n\n      const isCloseFriend = stories.orderedIds.some((id) => {\n        const story = stories.byId[id];\n        if (!story || !('isForCloseFriends' in story)) return false;\n        const isRead = stories.lastReadId && story.id <= stories.lastReadId;\n        return story.isForCloseFriends && !isRead;\n      });\n\n      acc[peer.id] = isCloseFriend;\n      return acc;\n    }, {} as Record<string, boolean>);\n  }, [peerStories, peers]);\n\n  const preloadPeerIds = useMemo(() => {\n    return orderedPeerIds.slice(0, PRELOAD_PEERS);\n  }, [orderedPeerIds]);\n\n  useStoryPreloader(preloadPeerIds);\n\n  const isVisible = canShow && isShown;\n  // For some reason, setting 'slow' here also fixes scroll freezes on iOS when collapsing Story Ribbon\n  const { ref, shouldRender } = useShowTransition<HTMLButtonElement>({\n    isOpen: isVisible,\n    className: 'slow',\n    withShouldRender: true,\n  });\n\n  useEffect(() => {\n    if (!withAnimation || isForumPanelOpen) return;\n    if (isVisible) {\n      beginHeavyAnimation(ANIMATION_DURATION + ANIMATION_END_DELAY);\n      animateClosing(isArchived);\n    } else {\n      beginHeavyAnimation(ANIMATION_DURATION + ANIMATION_END_DELAY);\n      animateOpening(isArchived);\n    }\n  }, [isArchived, isVisible, withAnimation, isForumPanelOpen]);\n\n  if (!shouldRender) {\n    return undefined;\n  }\n\n  return (\n    <button\n      ref={ref}\n      type=\"button\"\n      id=\"StoryToggler\"\n      className={styles.root}\n      aria-label={lang('Chat.Context.Peer.OpenStory')}\n      onClick={() => toggleStoryRibbon({ isShown: true, isArchived })}\n      dir={lang.isRtl ? 'rtl' : undefined}\n    >\n      {peers.map((peer) => (\n        <Avatar\n          key={peer.id}\n          peer={peer}\n          size=\"tiny\"\n          className={styles.avatar}\n          withStorySolid\n          forceFriendStorySolid={closeFriends[peer.id]}\n        />\n      ))}\n    </button>\n  );\n}\n\nexport default memo(withGlobal<OwnProps>((global, { isArchived }): StateProps => {\n  const { orderedPeerIds: { archived, active }, byPeerId } = global.stories;\n  const { storyViewer: { isRibbonShown, isArchivedRibbonShown } } = selectTabState(global);\n  const isForumPanelOpen = selectIsForumPanelOpen(global);\n  const withAnimation = selectPerformanceSettingsValue(global, 'storyRibbonAnimations');\n\n  return {\n    currentUserId: global.currentUserId!,\n    orderedPeerIds: isArchived ? archived : active,\n    isShown: isArchived ? !isArchivedRibbonShown : !isRibbonShown,\n    isForumPanelOpen,\n    withAnimation,\n    usersById: global.users.byId,\n    chatsById: global.chats.byId,\n    peerStories: byPeerId,\n  };\n})(StoryToggler));\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo } from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport type { GlobalState } from '../../global/types';\nimport type { FolderEditDispatch } from '../../hooks/reducers/useFoldersReducer';\nimport type { LeftColumnContent, SettingsScreens } from '../../types';\n\nimport { ANIMATION_END_DELAY } from '../../config';\nimport buildClassName from '../../util/buildClassName';\nimport { ANIMATION_DURATION } from '../story/helpers/ribbonAnimation';\n\nimport useForumPanelRender from '../../hooks/useForumPanelRender';\nimport useHistoryBack from '../../hooks/useHistoryBack';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\nimport useShowTransitionDeprecated from '../../hooks/useShowTransitionDeprecated';\nimport useLeftHeaderButtonRtlForumTransition from './main/hooks/useLeftHeaderButtonRtlForumTransition';\n\nimport StoryRibbon from '../story/StoryRibbon';\nimport StoryToggler from '../story/StoryToggler';\nimport Button from '../ui/Button';\nimport DropdownMenu from '../ui/DropdownMenu';\nimport MenuItem from '../ui/MenuItem';\nimport ChatList from './main/ChatList';\nimport ForumPanel from './main/ForumPanel';\n\nimport './ArchivedChats.scss';\n\nexport type OwnProps = {\n  isActive: boolean;\n  isForumPanelOpen?: boolean;\n  archiveSettings: GlobalState['archiveSettings'];\n  isStoryRibbonShown?: boolean;\n  onReset: () => void;\n  onTopicSearch: NoneToVoidFunction;\n  onSettingsScreenSelect: (screen: SettingsScreens) => void;\n  foldersDispatch: FolderEditDispatch;\n  onLeftColumnContentChange: (content: LeftColumnContent) => void;\n};\n\nconst ArchivedChats: FC<OwnProps> = ({\n  isActive,\n  isForumPanelOpen,\n  archiveSettings,\n  isStoryRibbonShown,\n  onReset,\n  onTopicSearch,\n  onSettingsScreenSelect,\n  onLeftColumnContentChange,\n  foldersDispatch,\n}) => {\n  const { updateArchiveSettings } = getActions();\n  const lang = useOldLang();\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  const handleDisplayArchiveInChats = useLastCallback(() => {\n    updateArchiveSettings({ isHidden: false });\n  });\n\n  const {\n    shouldDisableDropdownMenuTransitionRef,\n    handleDropdownMenuTransitionEnd,\n  } = useLeftHeaderButtonRtlForumTransition(isForumPanelOpen);\n\n  const {\n    shouldRender: shouldRenderTitle,\n    transitionClassNames: titleClassNames,\n  } = useShowTransitionDeprecated(!isForumPanelOpen);\n\n  const {\n    shouldRenderForumPanel, handleForumPanelAnimationEnd,\n    handleForumPanelAnimationStart, isAnimationStarted,\n  } = useForumPanelRender(isForumPanelOpen);\n  const isForumPanelVisible = isForumPanelOpen && isAnimationStarted;\n\n  const {\n    shouldRender: shouldRenderStoryRibbon,\n    transitionClassNames: storyRibbonClassNames,\n    isClosing: isStoryRibbonClosing,\n  } = useShowTransitionDeprecated(\n    isStoryRibbonShown, undefined, undefined, '', false, ANIMATION_DURATION + ANIMATION_END_DELAY,\n  );\n\n  return (\n    <div className=\"ArchivedChats\">\n      <div className={buildClassName('left-header', !shouldRenderStoryRibbon && 'left-header-shadow')}>\n        {lang.isRtl && <div className=\"DropdownMenuFiller\" />}\n        <Button\n          round\n          size=\"smaller\"\n          color=\"translucent\"\n          onClick={onReset}\n          ariaLabel=\"Return to chat list\"\n          className={buildClassName(\n            lang.isRtl && 'rtl',\n            isForumPanelVisible && lang.isRtl && 'right-aligned',\n            shouldDisableDropdownMenuTransitionRef.current && lang.isRtl && 'disable-transition',\n          )}\n          onTransitionEnd={handleDropdownMenuTransitionEnd}\n        >\n          <i className=\"icon icon-arrow-left\" />\n        </Button>\n        {shouldRenderTitle && <h3 className={titleClassNames}>{lang('ArchivedChats')}</h3>}\n        <div className=\"story-toggler-wrapper\">\n          <StoryToggler canShow isArchived />\n        </div>\n        {archiveSettings.isHidden && (\n          <DropdownMenu\n            className=\"archived-chats-more-menu\"\n            positionX=\"right\"\n            onTransitionEnd={lang.isRtl ? handleDropdownMenuTransitionEnd : undefined}\n          >\n            <MenuItem icon=\"archive-from-main\" onClick={handleDisplayArchiveInChats}>\n              {lang('lng_context_archive_to_list')}\n            </MenuItem>\n          </DropdownMenu>\n        )}\n      </div>\n      <div\n        className={buildClassName(\n          'chat-list-wrapper',\n          shouldRenderStoryRibbon && 'with-story-ribbon',\n          storyRibbonClassNames,\n        )}\n      >\n        {shouldRenderStoryRibbon && (\n          <StoryRibbon isArchived className=\"left-header-shadow\" isClosing={isStoryRibbonClosing} />\n        )}\n        <ChatList\n          folderType=\"archived\"\n          isActive={isActive}\n          isForumPanelOpen={isForumPanelVisible}\n          onSettingsScreenSelect={onSettingsScreenSelect}\n          onLeftColumnContentChange={onLeftColumnContentChange}\n          foldersDispatch={foldersDispatch}\n          archiveSettings={archiveSettings}\n        />\n      </div>\n      {shouldRenderForumPanel && (\n        <ForumPanel\n          isOpen={isForumPanelOpen}\n          onTopicSearch={onTopicSearch}\n          onOpenAnimationStart={handleForumPanelAnimationStart}\n          onCloseAnimationEnd={handleForumPanelAnimationEnd}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default memo(ArchivedChats);\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useMemo, useState,\n} from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { ApiChatFolder } from '../../api/types';\n\nimport { ALL_FOLDER_ID } from '../../config';\nimport buildClassName from '../../util/buildClassName';\n\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Button from '../ui/Button';\nimport CheckboxGroup from '../ui/CheckboxGroup';\nimport Modal from '../ui/Modal';\n\nimport styles from './ChatFolderModal.module.scss';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  chatId: string;\n  onClose: () => void;\n  onCloseAnimationEnd?: () => void;\n};\n\ntype StateProps = {\n  foldersById?: Record<number, ApiChatFolder>;\n  folderOrderedIds?: number[];\n};\n\nconst ChatFolderModal: FC<OwnProps & StateProps> = ({\n  isOpen,\n  chatId,\n  foldersById,\n  folderOrderedIds,\n  onClose,\n  onCloseAnimationEnd,\n}) => {\n  const { editChatFolders } = getActions();\n\n  const lang = useOldLang();\n\n  const initialSelectedFolderIds = useMemo(() => {\n    if (!foldersById) {\n      return [];\n    }\n\n    return Object.keys(foldersById).reduce((result, folderId) => {\n      const { includedChatIds, pinnedChatIds } = foldersById[Number(folderId)];\n      if (includedChatIds.includes(chatId) || pinnedChatIds?.includes(chatId)) {\n        result.push(folderId);\n      }\n\n      return result;\n    }, [] as string[]);\n  }, [chatId, foldersById]);\n\n  const [selectedFolderIds, setSelectedFolderIds] = useState<string[]>(initialSelectedFolderIds);\n\n  const folders = useMemo(() => {\n    return folderOrderedIds?.filter((folderId) => folderId !== ALL_FOLDER_ID).map((folderId) => ({\n      label: foldersById ? foldersById[folderId].title : '',\n      value: String(folderId),\n    })) || [];\n  }, [folderOrderedIds, foldersById]);\n\n  const handleSubmit = useCallback(() => {\n    const idsToRemove = initialSelectedFolderIds.filter((id) => !selectedFolderIds.includes(id)).map(Number);\n    const idsToAdd = selectedFolderIds.filter((id) => !initialSelectedFolderIds.includes(id)).map(Number);\n\n    editChatFolders({ chatId, idsToRemove, idsToAdd });\n    onClose();\n  }, [chatId, editChatFolders, initialSelectedFolderIds, onClose, selectedFolderIds]);\n\n  if (!foldersById || !folderOrderedIds) {\n    return undefined;\n  }\n\n  return (\n    <Modal\n      isOpen={isOpen}\n      onClose={onClose}\n      onCloseAnimationEnd={onCloseAnimationEnd}\n      onEnter={handleSubmit}\n      className={buildClassName(styles.root, 'delete')}\n      contentClassName={styles.modalContent}\n      title={lang('FilterAddTo')}\n    >\n      <div className={buildClassName(styles.main, 'custom-scroll')}>\n        <CheckboxGroup\n          options={folders}\n          selected={selectedFolderIds}\n          onChange={setSelectedFolderIds}\n        />\n      </div>\n      <div className={styles.footer}>\n        <div className=\"dialog-buttons\">\n          <Button color=\"primary\" className=\"confirm-dialog-button\" isText onClick={handleSubmit}>\n            {lang('FilterAddTo')}\n          </Button>\n          <Button className=\"confirm-dialog-button\" isText onClick={onClose}>{lang('Cancel')}</Button>\n        </div>\n      </div>\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const { byId: foldersById, orderedIds: folderOrderedIds } = global.chatFolders;\n\n    return {\n      foldersById,\n      folderOrderedIds,\n    };\n  },\n)(ChatFolderModal));\n","// extracted by mini-css-extract-plugin\nexport default {\"modalContent\":\"EG5lPWY1\",\"root\":\"_fJBBCCE\",\"main\":\"heYMHiUt\",\"footer\":\"_jtqAaUU\"};","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useMemo, useState,\n} from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport { MAX_INT_32 } from '../../config';\n\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Button from '../ui/Button';\nimport Modal from '../ui/Modal';\nimport RadioGroup from '../ui/RadioGroup';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  chatId: string;\n  topicId?: number;\n  onClose: () => void;\n  onCloseAnimationEnd?: () => void;\n};\n\nenum MuteDuration {\n  OneHour = '3600',\n  FourHours = '14400',\n  EightHours = '28800',\n  OneDay = '86400',\n  ThreeDays = '259200',\n  Forever = '-1',\n}\n\nconst MuteChatModal: FC<OwnProps> = ({\n  isOpen,\n  chatId,\n  topicId,\n  onClose,\n  onCloseAnimationEnd,\n}) => {\n  const [muteUntilOption, setMuteUntilOption] = useState(MuteDuration.Forever);\n  const { updateChatMutedState, updateTopicMutedState } = getActions();\n\n  const lang = useOldLang();\n\n  const muteForOptions = useMemo(() => [\n    { label: lang('MuteFor.Hours', 1), value: MuteDuration.OneHour },\n    { label: lang('MuteFor.Hours', 4), value: MuteDuration.FourHours },\n    { label: lang('MuteFor.Hours', 8), value: MuteDuration.EightHours },\n    { label: lang('MuteFor.Days', 1), value: MuteDuration.OneDay },\n    { label: lang('MuteFor.Days', 3), value: MuteDuration.ThreeDays },\n    { label: lang('MuteFor.Forever'), value: MuteDuration.Forever },\n  ], [lang]);\n\n  const handleSubmit = useCallback(() => {\n    let muteUntil: number;\n    if (muteUntilOption === MuteDuration.Forever) {\n      muteUntil = MAX_INT_32;\n    } else {\n      muteUntil = Math.floor(Date.now() / 1000) + Number(muteUntilOption);\n    }\n    if (topicId) {\n      updateTopicMutedState({ chatId, topicId, muteUntil });\n    } else {\n      updateChatMutedState({ chatId, muteUntil });\n    }\n    onClose();\n  }, [chatId, muteUntilOption, onClose, topicId]);\n\n  return (\n    <Modal\n      isOpen={isOpen}\n      onClose={onClose}\n      onCloseAnimationEnd={onCloseAnimationEnd}\n      onEnter={handleSubmit}\n      className=\"delete\"\n      title={lang('Notifications')}\n    >\n      <RadioGroup\n        name=\"muteFor\"\n        options={muteForOptions}\n        selected={muteUntilOption}\n        onChange={setMuteUntilOption as any}\n      />\n      <div className=\"dialog-buttons\">\n        <Button color=\"primary\" className=\"confirm-dialog-button\" isText onClick={handleSubmit}>\n          {lang('Common.Done')}\n        </Button>\n        <Button className=\"confirm-dialog-button\" isText onClick={onClose}>{lang('Cancel')}</Button>\n      </div>\n    </Modal>\n  );\n};\n\nexport default memo(MuteChatModal);\n","import type { ApiFormattedText } from '../../../../api/types';\nimport { ApiMessageEntityTypes } from '../../../../api/types';\n\nimport parseHtmlAsFormattedText from '../../../../util/parseHtmlAsFormattedText';\n\nconst div = document.createElement('div');\nconst ALLOWED_QUOTE_ENTITIES = new Set([\n  ApiMessageEntityTypes.Bold,\n  ApiMessageEntityTypes.Italic,\n  ApiMessageEntityTypes.Underline,\n  ApiMessageEntityTypes.Strike,\n  ApiMessageEntityTypes.Spoiler,\n  ApiMessageEntityTypes.CustomEmoji,\n]);\n\nexport function getSelectionAsFormattedText(range: Range) {\n  const html = getSelectionAsHtml(range);\n  const formattedText = parseHtmlAsFormattedText(html, false, true);\n\n  return stripEntitiesForQuote(formattedText);\n}\n\nfunction getSelectionAsHtml(range: Range) {\n  const clonedSelection = range.cloneContents();\n  div.appendChild(clonedSelection);\n\n  const html = wrapHtmlWithMarkupTags(range, div.innerHTML);\n  div.innerHTML = '';\n\n  return html\n    .replace(/<br\\s*\\/?>/gi, '\\n')\n    .replace(/&nbsp;/gi, ' ') // Convert nbsp's to spaces\n    .replace(/\\u00a0/gi, ' ');\n}\n\nfunction stripEntitiesForQuote(text: ApiFormattedText): ApiFormattedText {\n  if (!text.entities) return text;\n\n  const entities = text.entities.filter((entity) => ALLOWED_QUOTE_ENTITIES.has(entity.type as ApiMessageEntityTypes));\n  return { ...text, entities: entities.length ? entities : undefined };\n}\n\nfunction wrapHtmlWithMarkupTags(range: Range, html: string) {\n  const container = range.commonAncestorContainer;\n  if (container.nodeType === Node.ELEMENT_NODE && (container as Element).classList.contains('text-content')) {\n    return html;\n  }\n  let currentElement = range.commonAncestorContainer.parentElement;\n  while (currentElement && !currentElement.classList.contains('text-content')) {\n    const tag = currentElement.tagName.toLowerCase();\n    const entityType = currentElement.dataset.entityType;\n    html = `<${tag} ${entityType ? `data-entity-type=\"${entityType}\"` : ''}>${html}</${tag}>`;\n    currentElement = currentElement.parentElement;\n  }\n\n  return html;\n}\n","import type { FC } from '../../lib/teact/teact';\nimport React from '../../lib/teact/teact';\n\nimport type { OwnProps } from './PinMessageModal';\n\nimport { Bundles } from '../../util/moduleLoader';\n\nimport useModuleLoader from '../../hooks/useModuleLoader';\n\nconst PinMessageModalAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const PinMessageModal = useModuleLoader(Bundles.Extra, 'PinMessageModal', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return PinMessageModal ? <PinMessageModal {...props} /> : undefined;\n};\n\nexport default PinMessageModalAsync;\n","import type { ApiMessage } from '../../../../api/types';\nimport type { IconName } from '../../../../types/icons';\nimport { ApiMediaFormat } from '../../../../api/types';\n\nimport {\n  getMessageContact,\n  getMessageHtmlId,\n  getMessagePhoto,\n  getMessageText,\n  getMessageWebPagePhoto,\n  getMessageWebPageVideo,\n  getPhotoMediaHash,\n  hasMediaLocalBlobUrl,\n} from '../../../../global/helpers';\nimport { getMessageTextWithSpoilers } from '../../../../global/helpers/messageSummary';\nimport {\n  CLIPBOARD_ITEM_SUPPORTED,\n  copyHtmlToClipboard,\n  copyImageToClipboard,\n  copyTextToClipboard,\n} from '../../../../util/clipboard';\nimport getMessageIdsForSelectedText from '../../../../util/getMessageIdsForSelectedText';\nimport * as mediaLoader from '../../../../util/mediaLoader';\nimport { IS_SAFARI } from '../../../../util/windowEnvironment';\nimport { renderMessageText } from '../../../common/helpers/renderMessageText';\n\ntype ICopyOptions = {\n  label: string;\n  icon: IconName;\n  handler: () => void;\n}[];\n\nexport function getMessageCopyOptions(\n  message: ApiMessage,\n  href?: string,\n  canCopy?: boolean,\n  afterEffect?: () => void,\n  onCopyLink?: () => void,\n  onCopyMessages?: (messageIds: number[]) => void,\n  onCopyNumber?: () => void,\n): ICopyOptions {\n  const options: ICopyOptions = [];\n  const text = getMessageText(message);\n  const photo = getMessagePhoto(message)\n    || (!getMessageWebPageVideo(message) ? getMessageWebPagePhoto(message) : undefined);\n  const contact = getMessageContact(message);\n  const mediaHash = photo ? getPhotoMediaHash(photo, 'inline') : undefined;\n  const canImageBeCopied = canCopy && photo && (mediaHash || hasMediaLocalBlobUrl(photo))\n    && CLIPBOARD_ITEM_SUPPORTED && !IS_SAFARI;\n  const selection = window.getSelection();\n\n  if (canImageBeCopied) {\n    options.push({\n      label: 'lng_context_copy_image',\n      icon: 'copy-media',\n      handler: () => {\n        Promise.resolve(mediaHash ? mediaLoader.fetch(mediaHash, ApiMediaFormat.BlobUrl) : photo!.blobUrl)\n          .then(copyImageToClipboard);\n\n        afterEffect?.();\n      },\n    });\n  }\n\n  if (canCopy && href) {\n    options.push({\n      label: 'lng_context_copy_link',\n      icon: 'copy',\n      handler: () => {\n        copyTextToClipboard(href);\n\n        afterEffect?.();\n      },\n    });\n  } else if (canCopy && text) {\n    // Detect if the user has selection in the current message\n    const hasSelection = Boolean((\n      selection?.anchorNode?.parentNode\n      && (selection.anchorNode.parentNode as HTMLElement).closest('.Message .content-inner')\n      && selection.toString().replace(/(?:\\r\\n|\\r|\\n)/g, '') !== ''\n      && checkMessageHasSelection(message)\n    ));\n\n    options.push({\n      label: getCopyLabel(hasSelection),\n      icon: 'copy',\n      handler: () => {\n        const messageIds = getMessageIdsForSelectedText();\n        if (messageIds?.length && onCopyMessages) {\n          onCopyMessages(messageIds);\n        } else if (hasSelection) {\n          document.execCommand('copy');\n        } else {\n          const clipboardText = renderMessageText(\n            { message, shouldRenderAsHtml: true },\n          );\n          if (clipboardText) copyHtmlToClipboard(clipboardText.join(''), getMessageTextWithSpoilers(message)!);\n        }\n\n        afterEffect?.();\n      },\n    });\n  }\n\n  if (onCopyLink) {\n    options.push({\n      label: 'lng_context_copy_message_link',\n      icon: 'link',\n      handler: onCopyLink,\n    });\n  }\n\n  if (contact && onCopyNumber) {\n    options.push({\n      label: 'lng_profile_copy_phone',\n      icon: 'copy',\n      handler: () => {\n        onCopyNumber();\n\n        afterEffect?.();\n      },\n    });\n  }\n\n  return options;\n}\nfunction checkMessageHasSelection(message: ApiMessage): boolean {\n  const selection = window.getSelection();\n  const selectionParentNode = (selection?.anchorNode?.parentNode as HTMLElement);\n  const selectedMessageElement = selectionParentNode?.closest<HTMLDivElement>('.Message.message-list-item');\n  return getMessageHtmlId(message.id) === selectedMessageElement?.id;\n}\nfunction getCopyLabel(hasSelection: boolean): string {\n  if (hasSelection) {\n    return 'lng_context_copy_selected';\n  }\n  return 'lng_context_copy_text';\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"item\":\"lhinieg0\",\"get\":\"wysoV1T4\",\"skeleton\":\"gPqaUijR\",\"transition\":\"Yg6u_MIn\"};","import React, { memo } from '../../../lib/teact/teact';\nimport { getActions } from '../../../lib/teact/teactn';\n\nimport type { ApiMessage } from '../../../api/types';\n\nimport { formatDateAtTime } from '../../../util/dates/dateFormat';\n\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport MenuItem from '../../ui/MenuItem';\nimport MenuSeparator from '../../ui/MenuSeparator';\nimport Skeleton from '../../ui/placeholder/Skeleton';\nimport Transition from '../../ui/Transition';\n\nimport styles from './ReadTimeMenuItem.module.scss';\n\ntype OwnProps = {\n  message: ApiMessage;\n  shouldRenderShowWhen?: boolean;\n  canLoadReadDate?: boolean;\n  menuSeparatorSize: 'thin' | 'thick';\n  closeContextMenu: NoneToVoidFunction;\n};\n\nfunction ReadTimeMenuItem({\n  message, shouldRenderShowWhen, canLoadReadDate, closeContextMenu, menuSeparatorSize,\n}: OwnProps) {\n  const { openPrivacySettingsNoticeModal } = getActions();\n  const lang = useOldLang();\n  const { readDate } = message;\n  const shouldRenderSkeleton = canLoadReadDate && !readDate && !shouldRenderShowWhen;\n\n  const handleOpenModal = () => {\n    closeContextMenu();\n    openPrivacySettingsNoticeModal({ chatId: message.chatId, isReadDate: true });\n  };\n\n  return (\n    <>\n      <MenuSeparator size={menuSeparatorSize} />\n      <MenuItem icon=\"message-read\" className={styles.item}>\n        <Transition name=\"fade\" activeKey={shouldRenderSkeleton ? 1 : 2} className={styles.transition}>\n          {shouldRenderSkeleton ? <Skeleton className={styles.skeleton} /> : (\n            <>\n              {Boolean(readDate) && lang('PmReadAt', formatDateAtTime(lang, readDate * 1000))}\n              {!readDate && shouldRenderShowWhen && (\n                <div>\n                  {lang('PmRead')}\n                  <span className={styles.get} onClick={handleOpenModal}>\n                    {lang('PmReadShowWhen')}\n                  </span>\n                </div>\n              )}\n            </>\n          )}\n        </Transition>\n      </MenuItem>\n    </>\n  );\n}\n\nexport default memo(ReadTimeMenuItem);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo, useRef,\n} from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type {\n  ApiAvailableReaction,\n  ApiChat,\n  ApiChatReactions,\n  ApiMessage,\n  ApiPeer,\n  ApiReaction,\n  ApiSponsoredMessage,\n  ApiStickerSet,\n  ApiThreadInfo,\n  ApiUser,\n} from '../../../api/types';\nimport type { IAnchorPosition } from '../../../types';\n\nimport { getUserFullName, isUserId } from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\nimport { disableScrolling } from '../../../util/scrollLock';\nimport { REM } from '../../common/helpers/mediaDimensions';\nimport renderText from '../../common/helpers/renderText';\nimport { getMessageCopyOptions } from './helpers/copyOptions';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useFlag from '../../../hooks/useFlag';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport AvatarList from '../../common/AvatarList';\nimport Menu from '../../ui/Menu';\nimport MenuItem from '../../ui/MenuItem';\nimport MenuSeparator from '../../ui/MenuSeparator';\nimport Skeleton from '../../ui/placeholder/Skeleton';\nimport ReactionSelector from './reactions/ReactionSelector';\nimport ReadTimeMenuItem from './ReadTimeMenuItem';\n\nimport './MessageContextMenu.scss';\n\ntype OwnProps = {\n  isReactionPickerOpen?: boolean;\n  availableReactions?: ApiAvailableReaction[];\n  topReactions?: ApiReaction[];\n  defaultTagReactions?: ApiReaction[];\n  isOpen: boolean;\n  anchor: IAnchorPosition;\n  targetHref?: string;\n  message: ApiMessage | ApiSponsoredMessage;\n  canSendNow?: boolean;\n  enabledReactions?: ApiChatReactions;\n  reactionsLimit?: number;\n  canReschedule?: boolean;\n  canReply?: boolean;\n  canQuote?: boolean;\n  repliesThreadInfo?: ApiThreadInfo;\n  canPin?: boolean;\n  canUnpin?: boolean;\n  canDelete?: boolean;\n  canReport?: boolean;\n  canShowReactionsCount?: boolean;\n  canShowReactionList?: boolean;\n  canBuyPremium?: boolean;\n  canEdit?: boolean;\n  canForward?: boolean;\n  canFaveSticker?: boolean;\n  canUnfaveSticker?: boolean;\n  canCopy?: boolean;\n  canCopyLink?: boolean;\n  canSelect?: boolean;\n  canTranslate?: boolean;\n  canShowOriginal?: boolean;\n  canSelectLanguage?: boolean;\n  isPrivate?: boolean;\n  isCurrentUserPremium?: boolean;\n  canDownload?: boolean;\n  canSaveGif?: boolean;\n  canRevote?: boolean;\n  canClosePoll?: boolean;\n  isDownloading?: boolean;\n  canShowSeenBy?: boolean;\n  seenByRecentPeers?: ApiPeer[];\n  noReplies?: boolean;\n  hasCustomEmoji?: boolean;\n  customEmojiSets?: ApiStickerSet[];\n  canPlayAnimatedEmojis?: boolean;\n  isInSavedMessages?: boolean;\n  shouldRenderShowWhen?: boolean;\n  canLoadReadDate?: boolean;\n  onReply?: NoneToVoidFunction;\n  onOpenThread?: VoidFunction;\n  onEdit?: NoneToVoidFunction;\n  onPin?: NoneToVoidFunction;\n  onUnpin?: NoneToVoidFunction;\n  onForward?: NoneToVoidFunction;\n  onDelete?: NoneToVoidFunction;\n  onReport?: NoneToVoidFunction;\n  onFaveSticker?: NoneToVoidFunction;\n  onUnfaveSticker?: NoneToVoidFunction;\n  onSelect?: NoneToVoidFunction;\n  onSend?: NoneToVoidFunction;\n  onReschedule?: NoneToVoidFunction;\n  onClose: NoneToVoidFunction;\n  onCloseAnimationEnd?: NoneToVoidFunction;\n  onCopyLink?: NoneToVoidFunction;\n  onCopyMessages?: (messageIds: number[]) => void;\n  onCopyNumber?: NoneToVoidFunction;\n  onDownload?: NoneToVoidFunction;\n  onSaveGif?: NoneToVoidFunction;\n  onCancelVote?: NoneToVoidFunction;\n  onClosePoll?: NoneToVoidFunction;\n  onShowSeenBy?: NoneToVoidFunction;\n  onShowReactors?: NoneToVoidFunction;\n  onAboutAdsClick?: NoneToVoidFunction;\n  onSponsoredHide?: NoneToVoidFunction;\n  onSponsorInfo?: NoneToVoidFunction;\n  onSponsoredReport?: NoneToVoidFunction;\n  onTranslate?: NoneToVoidFunction;\n  onShowOriginal?: NoneToVoidFunction;\n  onSelectLanguage?: NoneToVoidFunction;\n  onToggleReaction?: (reaction: ApiReaction) => void;\n  onReactionPickerOpen?: (position: IAnchorPosition) => void;\n};\n\nconst SCROLLBAR_WIDTH = 10;\nconst REACTION_SELECTOR_WIDTH_REM = 19.25;\nconst ANIMATION_DURATION = 200;\n\nconst MessageContextMenu: FC<OwnProps> = ({\n  isReactionPickerOpen,\n  availableReactions,\n  topReactions,\n  defaultTagReactions,\n  isOpen,\n  message,\n  isPrivate,\n  isCurrentUserPremium,\n  enabledReactions,\n  reactionsLimit,\n  anchor,\n  targetHref,\n  canSendNow,\n  canReschedule,\n  canBuyPremium,\n  canReply,\n  canQuote,\n  canEdit,\n  noReplies,\n  canPin,\n  canUnpin,\n  canDelete,\n  canReport,\n  canForward,\n  canFaveSticker,\n  canUnfaveSticker,\n  canCopy,\n  canCopyLink,\n  canSelect,\n  canDownload,\n  canSaveGif,\n  canRevote,\n  canClosePoll,\n  canTranslate,\n  canShowOriginal,\n  canSelectLanguage,\n  isDownloading,\n  repliesThreadInfo,\n  canShowSeenBy,\n  canShowReactionsCount,\n  canShowReactionList,\n  seenByRecentPeers,\n  hasCustomEmoji,\n  customEmojiSets,\n  canPlayAnimatedEmojis,\n  isInSavedMessages,\n  shouldRenderShowWhen,\n  canLoadReadDate,\n  onReply,\n  onOpenThread,\n  onEdit,\n  onPin,\n  onUnpin,\n  onForward,\n  onDelete,\n  onReport,\n  onFaveSticker,\n  onUnfaveSticker,\n  onSelect,\n  onSend,\n  onReschedule,\n  onClose,\n  onCloseAnimationEnd,\n  onCopyLink,\n  onCopyNumber,\n  onDownload,\n  onSaveGif,\n  onCancelVote,\n  onClosePoll,\n  onShowSeenBy,\n  onShowReactors,\n  onToggleReaction,\n  onCopyMessages,\n  onAboutAdsClick,\n  onSponsoredHide,\n  onSponsorInfo,\n  onSponsoredReport,\n  onReactionPickerOpen,\n  onTranslate,\n  onShowOriginal,\n  onSelectLanguage,\n}) => {\n  const {\n    showNotification, openStickerSet, openCustomEmojiSets, loadStickers,\n  } = getActions();\n  // eslint-disable-next-line no-null/no-null\n  const menuRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const scrollableRef = useRef<HTMLDivElement>(null);\n  const lang = useOldLang();\n  const noReactions = !isPrivate && !enabledReactions;\n  const withReactions = canShowReactionList && !noReactions;\n  const isSponsoredMessage = !('id' in message);\n  const messageId = !isSponsoredMessage ? message.id : '';\n  const seenByDates = !isSponsoredMessage ? message.seenByDates : undefined;\n\n  const [areItemsHidden, hideItems] = useFlag();\n  const [isReady, markIsReady, unmarkIsReady] = useFlag();\n  const { isMobile, isDesktop } = useAppLayout();\n  const seenByDatesCount = useMemo(() => (seenByDates ? Object.keys(seenByDates).length : 0), [seenByDates]);\n\n  const handleAfterCopy = useLastCallback(() => {\n    showNotification({\n      message: lang('Share.Link.Copied'),\n    });\n    onClose();\n  });\n\n  useEffect(() => {\n    if (isOpen && areItemsHidden && !isReactionPickerOpen) {\n      onClose();\n    }\n  }, [onClose, isOpen, isReactionPickerOpen, areItemsHidden]);\n\n  useEffect(() => {\n    if (customEmojiSets?.length) {\n      customEmojiSets.map((customEmojiSet) => {\n        return loadStickers({\n          stickerSetInfo: {\n            id: customEmojiSet.id,\n            accessHash: customEmojiSet.accessHash,\n          },\n        });\n      });\n    }\n  }, [customEmojiSets, openCustomEmojiSets]);\n\n  const handleOpenCustomEmojiSets = useLastCallback(() => {\n    if (!customEmojiSets) return;\n    if (customEmojiSets.length === 1) {\n      openStickerSet({\n        stickerSetInfo: {\n          shortName: customEmojiSets[0].shortName,\n        },\n      });\n    } else {\n      openCustomEmojiSets({\n        setIds: customEmojiSets.map((set) => set.id),\n      });\n    }\n    onClose();\n  });\n\n  const copyOptions = isSponsoredMessage\n    ? []\n    : getMessageCopyOptions(\n      message,\n      targetHref,\n      canCopy,\n      handleAfterCopy,\n      canCopyLink ? onCopyLink : undefined,\n      onCopyMessages,\n      onCopyNumber,\n    );\n\n  const getTriggerElement = useLastCallback(() => {\n    return isSponsoredMessage\n      ? document.querySelector('.Transition_slide-active > .MessageList .SponsoredMessage')\n      : document.querySelector(`.Transition_slide-active > .MessageList div[data-message-id=\"${messageId}\"]`);\n  });\n\n  const getRootElement = useLastCallback(() => document.querySelector('.Transition_slide-active > .MessageList'));\n\n  const getMenuElement = useLastCallback(() => document.querySelector('.MessageContextMenu .bubble'));\n\n  const getLayout = useLastCallback(() => {\n    const extraHeightAudioPlayer = (isMobile\n      && (document.querySelector<HTMLElement>('.AudioPlayer-content'))?.offsetHeight) || 0;\n    const pinnedElement = document.querySelector<HTMLElement>('.HeaderPinnedMessageWrapper');\n    const extraHeightPinned = (((isMobile && !extraHeightAudioPlayer)\n        || (!isMobile && pinnedElement?.classList.contains('full-width')))\n      && pinnedElement?.offsetHeight) || 0;\n\n    return {\n      extraPaddingX: SCROLLBAR_WIDTH,\n      extraTopPadding: (document.querySelector<HTMLElement>('.MiddleHeader')!).offsetHeight,\n      extraMarginTop: extraHeightPinned + extraHeightAudioPlayer,\n      shouldAvoidNegativePosition: !isDesktop,\n      menuElMinWidth: withReactions && isMobile ? REACTION_SELECTOR_WIDTH_REM * REM : undefined,\n    };\n  });\n\n  useEffect(() => {\n    if (!isOpen) {\n      unmarkIsReady();\n      return;\n    }\n\n    setTimeout(() => {\n      markIsReady();\n    }, ANIMATION_DURATION);\n  }, [isOpen, markIsReady, unmarkIsReady]);\n\n  useEffect(() => {\n    return disableScrolling(scrollableRef.current, '.ReactionPicker');\n  }, [isOpen]);\n\n  const handleOpenMessageReactionPicker = useLastCallback((position: IAnchorPosition) => {\n    onReactionPickerOpen!(position);\n    hideItems();\n  });\n\n  return (\n    <Menu\n      ref={menuRef}\n      isOpen={isOpen}\n      anchor={anchor}\n      getTriggerElement={getTriggerElement}\n      getRootElement={getRootElement}\n      getMenuElement={getMenuElement}\n      getLayout={getLayout}\n      withMaxHeight\n      className={buildClassName(\n        'MessageContextMenu', 'fluid', withReactions && 'with-reactions',\n      )}\n      onClose={onClose}\n      onCloseAnimationEnd={onCloseAnimationEnd}\n    >\n      {withReactions && (\n        <ReactionSelector\n          enabledReactions={enabledReactions}\n          topReactions={topReactions}\n          allAvailableReactions={availableReactions}\n          defaultTagReactions={defaultTagReactions}\n          currentReactions={!isSponsoredMessage ? message.reactions?.results : undefined}\n          reactionsLimit={reactionsLimit}\n          onToggleReaction={onToggleReaction!}\n          isPrivate={isPrivate}\n          isReady={isReady}\n          canBuyPremium={canBuyPremium}\n          isCurrentUserPremium={isCurrentUserPremium}\n          isInSavedMessages={isInSavedMessages}\n          canPlayAnimatedEmojis={canPlayAnimatedEmojis}\n          onShowMore={handleOpenMessageReactionPicker}\n          onClose={onClose}\n          className={buildClassName(areItemsHidden && 'ReactionSelector-hidden')}\n        />\n      )}\n\n      <div\n        ref={scrollableRef}\n        className={buildClassName(\n          'MessageContextMenu_items scrollable-content custom-scroll',\n          areItemsHidden && 'MessageContextMenu_items-hidden',\n        )}\n        dir={lang.isRtl ? 'rtl' : undefined}\n      >\n        {canSendNow && <MenuItem icon=\"send-outline\" onClick={onSend}>{lang('MessageScheduleSend')}</MenuItem>}\n        {canReschedule && (\n          <MenuItem icon=\"schedule\" onClick={onReschedule}>{lang('MessageScheduleEditTime')}</MenuItem>\n        )}\n        {canReply && (\n          <MenuItem icon=\"reply\" onClick={onReply}>\n            {lang(canQuote ? 'lng_context_quote_and_reply' : 'Reply')}\n          </MenuItem>\n        )}\n        {!noReplies && Boolean(repliesThreadInfo?.messagesCount) && (\n          <MenuItem icon=\"replies\" onClick={onOpenThread}>\n            {lang('Conversation.ContextViewReplies', repliesThreadInfo!.messagesCount, 'i')}\n          </MenuItem>\n        )}\n        {canEdit && <MenuItem icon=\"edit\" onClick={onEdit}>{lang('Edit')}</MenuItem>}\n        {canFaveSticker && (\n          <MenuItem icon=\"favorite\" onClick={onFaveSticker}>{lang('AddToFavorites')}</MenuItem>\n        )}\n        {canUnfaveSticker && (\n          <MenuItem icon=\"favorite\" onClick={onUnfaveSticker}>{lang('Stickers.RemoveFromFavorites')}</MenuItem>\n        )}\n        {canTranslate && <MenuItem icon=\"language\" onClick={onTranslate}>{lang('TranslateMessage')}</MenuItem>}\n        {canShowOriginal && <MenuItem icon=\"language\" onClick={onShowOriginal}>{lang('ShowOriginalButton')}</MenuItem>}\n        {canSelectLanguage && (\n          <MenuItem icon=\"web\" onClick={onSelectLanguage}>{lang('lng_settings_change_lang')}</MenuItem>\n        )}\n        {copyOptions.map((option) => (\n          <MenuItem\n            key={option.label}\n            icon={option.icon}\n            onClick={option.handler}\n            withPreventDefaultOnMouseDown\n          >{lang(option.label)}\n          </MenuItem>\n        ))}\n        {canPin && <MenuItem icon=\"pin\" onClick={onPin}>{lang('DialogPin')}</MenuItem>}\n        {canUnpin && <MenuItem icon=\"unpin\" onClick={onUnpin}>{lang('DialogUnpin')}</MenuItem>}\n        {canSaveGif && <MenuItem icon=\"gifs\" onClick={onSaveGif}>{lang('lng_context_save_gif')}</MenuItem>}\n        {canRevote && <MenuItem icon=\"revote\" onClick={onCancelVote}>{lang('lng_polls_retract')}</MenuItem>}\n        {canClosePoll && <MenuItem icon=\"stop\" onClick={onClosePoll}>{lang('lng_polls_stop')}</MenuItem>}\n        {canDownload && (\n          <MenuItem icon=\"download\" onClick={onDownload}>\n            {isDownloading ? lang('lng_context_cancel_download') : lang('lng_media_download')}\n          </MenuItem>\n        )}\n        {canForward && <MenuItem icon=\"forward\" onClick={onForward}>{lang('Forward')}</MenuItem>}\n        {canSelect && <MenuItem icon=\"select\" onClick={onSelect}>{lang('Common.Select')}</MenuItem>}\n        {canReport && <MenuItem icon=\"flag\" onClick={onReport}>{lang('lng_context_report_msg')}</MenuItem>}\n        {canDelete && <MenuItem destructive icon=\"delete\" onClick={onDelete}>{lang('Delete')}</MenuItem>}\n        {hasCustomEmoji && (\n          <>\n            <MenuSeparator size=\"thick\" />\n            {!customEmojiSets && (\n              <>\n                <Skeleton inline className=\"menu-loading-row\" />\n                <Skeleton inline className=\"menu-loading-row\" />\n              </>\n            )}\n            {customEmojiSets && customEmojiSets.length === 1 && (\n              <MenuItem withWrap onClick={handleOpenCustomEmojiSets} className=\"menu-custom-emoji-sets\">\n                {renderText(lang('MessageContainsEmojiPack', customEmojiSets[0].title), ['simple_markdown', 'emoji'])}\n              </MenuItem>\n            )}\n            {customEmojiSets && customEmojiSets.length > 1 && (\n              <MenuItem withWrap onClick={handleOpenCustomEmojiSets} className=\"menu-custom-emoji-sets\">\n                {renderText(lang('MessageContainsEmojiPacks', customEmojiSets.length), ['simple_markdown'])}\n              </MenuItem>\n            )}\n          </>\n        )}\n        {isSponsoredMessage && message.sponsorInfo && (\n          <MenuItem icon=\"channel\" onClick={onSponsorInfo}>{lang('SponsoredMessageSponsor')}</MenuItem>\n        )}\n        {isSponsoredMessage && (\n          <MenuItem icon=\"info\" onClick={onAboutAdsClick}>\n            {lang(message.canReport ? 'AboutRevenueSharingAds' : 'SponsoredMessageInfo')}\n          </MenuItem>\n        )}\n        {isSponsoredMessage && message.canReport && (\n          <MenuItem icon=\"hand-stop\" onClick={onSponsoredReport}>\n            {lang('ReportAd')}\n          </MenuItem>\n        )}\n        {isSponsoredMessage && onSponsoredHide && (\n          <>\n            <MenuSeparator />\n            <MenuItem icon=\"close-circle\" onClick={onSponsoredHide}>{lang('HideAd')}</MenuItem>\n          </>\n        )}\n        {(canShowSeenBy || canShowReactionsCount) && !isSponsoredMessage && (\n          <>\n            <MenuSeparator size={hasCustomEmoji ? 'thin' : 'thick'} />\n            <MenuItem\n              icon={canShowReactionsCount ? 'heart-outline' : 'group'}\n              onClick={canShowReactionsCount ? onShowReactors : onShowSeenBy}\n              disabled={!canShowReactionsCount && !seenByDatesCount}\n            >\n              <span className=\"MessageContextMenu--seen-by-label-wrapper\">\n                <span className=\"MessageContextMenu--seen-by-label\" dir={lang.isRtl ? 'rtl' : undefined}>\n                  {canShowReactionsCount && message.reactors?.count ? (\n                    canShowSeenBy && seenByDatesCount\n                      ? lang(\n                        'Chat.OutgoingContextMixedReactionCount',\n                        [message.reactors.count, seenByDatesCount],\n                      )\n                      : lang('Chat.ContextReactionCount', message.reactors.count, 'i')\n                  ) : (\n                    seenByDatesCount === 1 && seenByRecentPeers\n                      ? renderText(\n                        isUserId(seenByRecentPeers[0].id)\n                          ? getUserFullName(seenByRecentPeers[0] as ApiUser)!\n                          : (seenByRecentPeers[0] as ApiChat).title,\n                      ) : (\n                        seenByDatesCount\n                          ? lang('Conversation.ContextMenuSeen', seenByDatesCount, 'i')\n                          : lang('Conversation.ContextMenuNoViews')\n                      )\n                  )}\n                </span>\n              </span>\n              <AvatarList className=\"avatars\" size=\"micro\" peers={seenByRecentPeers} />\n            </MenuItem>\n          </>\n        )}\n        {!isSponsoredMessage && (canLoadReadDate || shouldRenderShowWhen) && (\n          <ReadTimeMenuItem\n            canLoadReadDate={canLoadReadDate}\n            shouldRenderShowWhen={shouldRenderShowWhen}\n            message={message}\n            menuSeparatorSize={hasCustomEmoji ? 'thin' : 'thick'}\n            closeContextMenu={onClose}\n          />\n        )}\n      </div>\n    </Menu>\n  );\n};\n\nexport default memo(MessageContextMenu);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../../global';\n\nimport type {\n  ApiAvailableReaction,\n  ApiChatReactions,\n  ApiMessage,\n  ApiReaction,\n  ApiStickerSet,\n  ApiStickerSetInfo,\n  ApiThreadInfo,\n} from '../../../api/types';\nimport type { ActiveDownloads, MessageListType } from '../../../global/types';\nimport type { IAlbum, IAnchorPosition, ThreadId } from '../../../types';\nimport { MAIN_THREAD_ID } from '../../../api/types';\n\nimport { PREVIEW_AVATAR_COUNT, SERVICE_NOTIFICATIONS_USER_ID } from '../../../config';\nimport {\n  areReactionsEmpty,\n  getCanPostInChat,\n  getIsDownloading,\n  getMessageDownloadableMedia,\n  getMessageVideo,\n  hasMessageTtl,\n  isActionMessage,\n  isChatChannel,\n  isChatGroup,\n  isMessageLocal,\n  isOwnMessage,\n  isUserId,\n  isUserRightBanned,\n} from '../../../global/helpers';\nimport {\n  selectActiveDownloads,\n  selectAllowedMessageActionsSlow,\n  selectCanPlayAnimatedEmojis,\n  selectCanScheduleUntilOnline,\n  selectCanTranslateMessage,\n  selectChat,\n  selectChatFullInfo,\n  selectCurrentMessageList,\n  selectIsChatWithSelf,\n  selectIsCurrentUserPremium,\n  selectIsMessageProtected,\n  selectIsMessageUnread,\n  selectIsPremiumPurchaseBlocked,\n  selectIsReactionPickerOpen,\n  selectMessageCustomEmojiSets,\n  selectMessageTranslations,\n  selectRequestedChatTranslationLanguage,\n  selectRequestedMessageTranslationLanguage,\n  selectStickerSet,\n  selectThreadInfo,\n  selectTopic,\n  selectUserStatus,\n} from '../../../global/selectors';\nimport { copyTextToClipboard } from '../../../util/clipboard';\nimport { getSelectionAsFormattedText } from './helpers/getSelectionAsFormattedText';\nimport { isSelectionRangeInsideMessage } from './helpers/isSelectionRangeInsideMessage';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useSchedule from '../../../hooks/useSchedule';\nimport useShowTransition from '../../../hooks/useShowTransition';\n\nimport PinMessageModal from '../../common/PinMessageModal.async';\nimport ReportModal from '../../common/ReportModal';\nimport ConfirmDialog from '../../ui/ConfirmDialog';\nimport MessageContextMenu from './MessageContextMenu';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  message: ApiMessage;\n  album?: IAlbum;\n  anchor: IAnchorPosition;\n  targetHref?: string;\n  messageListType: MessageListType;\n  noReplies?: boolean;\n  detectedLanguage?: string;\n  repliesThreadInfo?: ApiThreadInfo;\n  onClose: NoneToVoidFunction;\n  onCloseAnimationEnd: NoneToVoidFunction;\n};\n\ntype StateProps = {\n  threadId?: ThreadId;\n  availableReactions?: ApiAvailableReaction[];\n  topReactions?: ApiReaction[];\n  defaultTagReactions?: ApiReaction[];\n  noOptions?: boolean;\n  canSendNow?: boolean;\n  canReschedule?: boolean;\n  canReply?: boolean;\n  canPin?: boolean;\n  canShowReactionsCount?: boolean;\n  canBuyPremium?: boolean;\n  canShowReactionList?: boolean;\n  customEmojiSetsInfo?: ApiStickerSetInfo[];\n  customEmojiSets?: ApiStickerSet[];\n  canUnpin?: boolean;\n  canDelete?: boolean;\n  canReport?: boolean;\n  canEdit?: boolean;\n  canForward?: boolean;\n  canFaveSticker?: boolean;\n  canUnfaveSticker?: boolean;\n  canCopy?: boolean;\n  canTranslate?: boolean;\n  canShowOriginal?: boolean;\n  isMessageTranslated?: boolean;\n  canSelectLanguage?: boolean;\n  isPrivate?: boolean;\n  isCurrentUserPremium?: boolean;\n  hasFullInfo?: boolean;\n  canCopyLink?: boolean;\n  canSelect?: boolean;\n  canDownload?: boolean;\n  canSaveGif?: boolean;\n  canRevote?: boolean;\n  canClosePoll?: boolean;\n  canLoadReadDate?: boolean;\n  shouldRenderShowWhen?: boolean;\n  activeDownloads: ActiveDownloads;\n  canShowSeenBy?: boolean;\n  enabledReactions?: ApiChatReactions;\n  canScheduleUntilOnline?: boolean;\n  reactionsLimit?: number;\n  canPlayAnimatedEmojis?: boolean;\n  isReactionPickerOpen?: boolean;\n  isInSavedMessages?: boolean;\n  isChannel?: boolean;\n  canReplyInChat?: boolean;\n};\n\nconst selection = window.getSelection();\n\nconst ContextMenuContainer: FC<OwnProps & StateProps> = ({\n  threadId,\n  availableReactions,\n  topReactions,\n  defaultTagReactions,\n  isOpen,\n  messageListType,\n  message,\n  customEmojiSetsInfo,\n  customEmojiSets,\n  album,\n  anchor,\n  targetHref,\n  noOptions,\n  canSendNow,\n  hasFullInfo,\n  canReschedule,\n  canReply,\n  canPin,\n  repliesThreadInfo,\n  canUnpin,\n  canDelete,\n  canReport,\n  canShowReactionsCount,\n  canShowReactionList,\n  canEdit,\n  enabledReactions,\n  reactionsLimit,\n  isPrivate,\n  isCurrentUserPremium,\n  canForward,\n  canBuyPremium,\n  canFaveSticker,\n  canUnfaveSticker,\n  canCopy,\n  canCopyLink,\n  canSelect,\n  canDownload,\n  canSaveGif,\n  canRevote,\n  canClosePoll,\n  canPlayAnimatedEmojis,\n  canLoadReadDate,\n  shouldRenderShowWhen,\n  activeDownloads,\n  noReplies,\n  canShowSeenBy,\n  canScheduleUntilOnline,\n  canTranslate,\n  isMessageTranslated,\n  canShowOriginal,\n  canSelectLanguage,\n  isReactionPickerOpen,\n  isInSavedMessages,\n  onClose,\n  onCloseAnimationEnd,\n  canReplyInChat,\n}) => {\n  const {\n    openThread,\n    updateDraftReplyInfo,\n    setEditingId,\n    pinMessage,\n    openForwardMenu,\n    openReplyMenu,\n    faveSticker,\n    unfaveSticker,\n    toggleMessageSelection,\n    sendScheduledMessages,\n    rescheduleMessage,\n    downloadMedia,\n    cancelMediaDownload,\n    loadSeenBy,\n    openSeenByModal,\n    openReactorListModal,\n    loadFullChat,\n    loadReactors,\n    copyMessagesByIds,\n    saveGif,\n    loadStickers,\n    cancelPollVote,\n    closePoll,\n    toggleReaction,\n    requestMessageTranslation,\n    showOriginalMessage,\n    openChatLanguageModal,\n    openMessageReactionPicker,\n    openPremiumModal,\n    loadOutboxReadDate,\n    copyMessageLink,\n    openDeleteMessageModal,\n  } = getActions();\n\n  const lang = useOldLang();\n  const { ref: containerRef } = useShowTransition({\n    isOpen,\n    onCloseAnimationEnd,\n    className: false,\n  });\n  const [isMenuOpen, setIsMenuOpen] = useState(true);\n  const [isReportModalOpen, setIsReportModalOpen] = useState(false);\n  const [isPinModalOpen, setIsPinModalOpen] = useState(false);\n  const [isClosePollDialogOpen, openClosePollDialog, closeClosePollDialog] = useFlag();\n  const [canQuoteSelection, setCanQuoteSelection] = useState(false);\n  const [requestCalendar, calendar] = useSchedule(canScheduleUntilOnline, onClose, message.date);\n\n  // `undefined` indicates that emoji are present and loading\n  const hasCustomEmoji = customEmojiSetsInfo === undefined || Boolean(customEmojiSetsInfo.length);\n\n  useEffect(() => {\n    if (canShowSeenBy && isOpen) {\n      loadSeenBy({ chatId: message.chatId, messageId: message.id });\n    }\n  }, [loadSeenBy, isOpen, message.chatId, message.id, canShowSeenBy]);\n\n  useEffect(() => {\n    if (canLoadReadDate && isOpen) {\n      loadOutboxReadDate({ chatId: message.chatId, messageId: message.id });\n    }\n  }, [canLoadReadDate, isOpen, message.chatId, message.id, message.readDate]);\n\n  useEffect(() => {\n    if (canShowReactionsCount && isOpen) {\n      loadReactors({ chatId: message.chatId, messageId: message.id });\n    }\n  }, [canShowReactionsCount, isOpen, loadReactors, message.chatId, message.id]);\n\n  useEffect(() => {\n    if (customEmojiSetsInfo?.length && customEmojiSets?.length !== customEmojiSetsInfo.length) {\n      customEmojiSetsInfo.forEach((set) => {\n        loadStickers({ stickerSetInfo: set });\n      });\n    }\n  }, [customEmojiSetsInfo, customEmojiSets, loadStickers]);\n\n  useEffect(() => {\n    if (!hasFullInfo && !isPrivate && isOpen) {\n      loadFullChat({ chatId: message.chatId });\n    }\n  }, [hasFullInfo, isOpen, isPrivate, loadFullChat, message.chatId]);\n\n  const seenByRecentPeers = useMemo(() => {\n    // No need for expensive global updates on chats or users, so we avoid them\n    const chatsById = getGlobal().chats.byId;\n    const usersById = getGlobal().users.byId;\n    if (message.reactions?.recentReactions?.length) {\n      const uniqueReactors = new Set(message.reactions?.recentReactions?.map(\n        ({ peerId }) => usersById[peerId] || chatsById[peerId],\n      ));\n\n      return Array.from(uniqueReactors).filter(Boolean).slice(0, PREVIEW_AVATAR_COUNT);\n    }\n\n    if (!message.seenByDates) {\n      return undefined;\n    }\n\n    return Object.keys(message.seenByDates).slice(0, PREVIEW_AVATAR_COUNT)\n      .map((id) => usersById[id] || chatsById[id])\n      .filter(Boolean);\n  }, [message.reactions?.recentReactions, message.seenByDates]);\n\n  const isDownloading = useMemo(() => {\n    if (album) {\n      return album.messages.some((msg) => {\n        const downloadableMedia = getMessageDownloadableMedia(msg);\n        if (!downloadableMedia) return false;\n        return getIsDownloading(activeDownloads, downloadableMedia);\n      });\n    }\n\n    const downloadableMedia = getMessageDownloadableMedia(message);\n    if (!downloadableMedia) return false;\n    return getIsDownloading(activeDownloads, downloadableMedia);\n  }, [activeDownloads, album, message]);\n\n  const selectionRange = canReply && selection?.rangeCount ? selection.getRangeAt(0) : undefined;\n\n  useEffect(() => {\n    if (isMessageTranslated) {\n      setCanQuoteSelection(false);\n      return;\n    }\n\n    const isMessageTextSelected = selectionRange\n      && !selectionRange.collapsed\n      && Boolean(message.content.text?.text)\n      && isSelectionRangeInsideMessage(selectionRange);\n\n    if (!isMessageTextSelected) {\n      setCanQuoteSelection(false);\n      return;\n    }\n\n    const selectionText = getSelectionAsFormattedText(selectionRange);\n\n    setCanQuoteSelection(\n      selectionText.text.trim().length > 0\n      && message.content.text!.text!.includes(selectionText.text),\n    );\n  }, [\n    selectionRange, selectionRange?.collapsed, selectionRange?.startOffset, selectionRange?.endOffset,\n    isMessageTranslated, message.content.text,\n  ]);\n\n  const closeMenu = useLastCallback(() => {\n    setIsMenuOpen(false);\n    onClose();\n  });\n\n  const handleDelete = useLastCallback(() => {\n    setIsMenuOpen(false);\n    closeMenu();\n    openDeleteMessageModal({ isSchedule: messageListType === 'scheduled', album, message });\n  });\n\n  const handleReport = useLastCallback(() => {\n    setIsMenuOpen(false);\n    setIsReportModalOpen(true);\n  });\n\n  const closeReportModal = useLastCallback(() => {\n    setIsReportModalOpen(false);\n    onClose();\n  });\n\n  const closePinModal = useLastCallback(() => {\n    setIsPinModalOpen(false);\n    onClose();\n  });\n\n  const handleReply = useLastCallback(() => {\n    const quoteText = canQuoteSelection && selectionRange ? getSelectionAsFormattedText(selectionRange) : undefined;\n    if (!canReplyInChat) {\n      openReplyMenu({ fromChatId: message.chatId, messageId: message.id, quoteText });\n    } else {\n      updateDraftReplyInfo({\n        replyToMsgId: message.id,\n        quoteText,\n        replyToPeerId: undefined,\n      });\n    }\n    closeMenu();\n  });\n\n  const handleOpenThread = useLastCallback(() => {\n    openThread({\n      chatId: message.chatId,\n      threadId: message.id,\n    });\n    closeMenu();\n  });\n\n  const handleEdit = useLastCallback(() => {\n    setEditingId({ messageId: message.id });\n    closeMenu();\n  });\n\n  const handlePin = useLastCallback(() => {\n    setIsMenuOpen(false);\n    setIsPinModalOpen(true);\n  });\n\n  const handleUnpin = useLastCallback(() => {\n    pinMessage({ messageId: message.id, isUnpin: true });\n    closeMenu();\n  });\n\n  const handleForward = useLastCallback(() => {\n    closeMenu();\n    if (album?.messages) {\n      const messageIds = album.messages.map(({ id }) => id);\n      openForwardMenu({ fromChatId: message.chatId, messageIds });\n    } else {\n      openForwardMenu({ fromChatId: message.chatId, messageIds: [message.id] });\n    }\n  });\n\n  const handleFaveSticker = useLastCallback(() => {\n    closeMenu();\n    faveSticker({ sticker: message.content.sticker! });\n  });\n\n  const handleUnfaveSticker = useLastCallback(() => {\n    closeMenu();\n    unfaveSticker({ sticker: message.content.sticker! });\n  });\n\n  const handleCancelVote = useLastCallback(() => {\n    closeMenu();\n    cancelPollVote({ chatId: message.chatId, messageId: message.id });\n  });\n\n  const handlePollClose = useLastCallback(() => {\n    closeMenu();\n    closePoll({ chatId: message.chatId, messageId: message.id });\n  });\n\n  const handleSelectMessage = useLastCallback(() => {\n    const params = album?.messages\n      ? {\n        messageId: message.id,\n        childMessageIds: album.messages.map(({ id }) => id),\n        withShift: false,\n      }\n      : { messageId: message.id, withShift: false };\n\n    toggleMessageSelection(params);\n    closeMenu();\n  });\n\n  const handleScheduledMessageSend = useLastCallback(() => {\n    sendScheduledMessages({ chatId: message.chatId, id: message.id });\n    closeMenu();\n  });\n\n  const handleRescheduleMessage = useLastCallback((scheduledAt: number) => {\n    rescheduleMessage({\n      chatId: message.chatId,\n      messageId: message.id,\n      scheduledAt,\n    });\n    onClose();\n  });\n\n  const handleOpenCalendar = useLastCallback(() => {\n    setIsMenuOpen(false);\n    requestCalendar(handleRescheduleMessage);\n  });\n\n  const handleOpenSeenByModal = useLastCallback(() => {\n    closeMenu();\n    openSeenByModal({ chatId: message.chatId, messageId: message.id });\n  });\n\n  const handleOpenReactorListModal = useLastCallback(() => {\n    closeMenu();\n    openReactorListModal({ chatId: message.chatId, messageId: message.id });\n  });\n\n  const handleCopyMessages = useLastCallback((messageIds: number[]) => {\n    copyMessagesByIds({ messageIds });\n    closeMenu();\n  });\n\n  const handleCopyLink = useLastCallback(() => {\n    copyMessageLink({\n      chatId: message.chatId,\n      messageId: message.id,\n      shouldIncludeThread: threadId !== MAIN_THREAD_ID,\n      shouldIncludeGrouped: true, // TODO: Provide correct value when ability to target specific message is added\n    });\n    closeMenu();\n  });\n\n  const handleCopyNumber = useLastCallback(() => {\n    copyTextToClipboard(message.content.contact!.phoneNumber);\n    closeMenu();\n  });\n\n  const handleDownloadClick = useLastCallback(() => {\n    (album?.messages || [message]).forEach((msg) => {\n      const downloadableMedia = getMessageDownloadableMedia(msg);\n      if (!downloadableMedia) return;\n\n      if (isDownloading) {\n        cancelMediaDownload({ media: downloadableMedia });\n      } else {\n        downloadMedia({ media: downloadableMedia, originMessage: msg });\n      }\n    });\n    closeMenu();\n  });\n\n  const handleSaveGif = useLastCallback(() => {\n    const video = getMessageVideo(message);\n    saveGif({ gif: video! });\n    closeMenu();\n  });\n\n  const handleToggleReaction = useLastCallback((reaction: ApiReaction) => {\n    if (isInSavedMessages && !isCurrentUserPremium) {\n      openPremiumModal({\n        initialSection: 'saved_tags',\n      });\n    } else {\n      toggleReaction({\n        chatId: message.chatId, messageId: message.id, reaction, shouldAddToRecent: true,\n      });\n    }\n    closeMenu();\n  });\n\n  const handleReactionPickerOpen = useLastCallback((position: IAnchorPosition) => {\n    openMessageReactionPicker({ chatId: message.chatId, messageId: message.id, position });\n  });\n\n  const handleTranslate = useLastCallback(() => {\n    requestMessageTranslation({\n      chatId: message.chatId,\n      id: message.id,\n    });\n    closeMenu();\n  });\n\n  const handleShowOriginal = useLastCallback(() => {\n    showOriginalMessage({\n      chatId: message.chatId,\n      id: message.id,\n    });\n    closeMenu();\n  });\n\n  const handleSelectLanguage = useLastCallback(() => {\n    openChatLanguageModal({\n      chatId: message.chatId,\n      messageId: message.id,\n    });\n    closeMenu();\n  });\n\n  const reportMessageIds = useMemo(() => (album ? album.messages : [message]).map(({ id }) => id), [album, message]);\n\n  if (noOptions) {\n    closeMenu();\n\n    return undefined;\n  }\n\n  const scheduledMaxDate = new Date();\n  scheduledMaxDate.setFullYear(scheduledMaxDate.getFullYear() + 1);\n\n  return (\n    <div ref={containerRef} className=\"ContextMenuContainer\">\n      <MessageContextMenu\n        isReactionPickerOpen={isReactionPickerOpen}\n        availableReactions={availableReactions}\n        topReactions={topReactions}\n        defaultTagReactions={defaultTagReactions}\n        message={message}\n        isPrivate={isPrivate}\n        isCurrentUserPremium={isCurrentUserPremium}\n        canBuyPremium={canBuyPremium}\n        isOpen={isMenuOpen}\n        enabledReactions={enabledReactions}\n        reactionsLimit={reactionsLimit}\n        anchor={anchor}\n        targetHref={targetHref}\n        canShowReactionsCount={canShowReactionsCount}\n        canShowReactionList={canShowReactionList}\n        canSendNow={canSendNow}\n        canReschedule={canReschedule}\n        canReply={canReply}\n        canQuote={canQuoteSelection}\n        canDelete={canDelete}\n        canReport={canReport}\n        canPin={canPin}\n        repliesThreadInfo={repliesThreadInfo}\n        canUnpin={canUnpin}\n        canEdit={canEdit}\n        canForward={canForward}\n        canFaveSticker={canFaveSticker}\n        canUnfaveSticker={canUnfaveSticker}\n        canCopy={canCopy}\n        canCopyLink={canCopyLink}\n        canSelect={canSelect}\n        canDownload={canDownload}\n        canSaveGif={canSaveGif}\n        canRevote={canRevote}\n        canClosePoll={canClosePoll}\n        canShowSeenBy={canShowSeenBy}\n        canTranslate={canTranslate}\n        canShowOriginal={canShowOriginal}\n        canSelectLanguage={canSelectLanguage}\n        canPlayAnimatedEmojis={canPlayAnimatedEmojis}\n        shouldRenderShowWhen={shouldRenderShowWhen}\n        canLoadReadDate={canLoadReadDate}\n        hasCustomEmoji={hasCustomEmoji}\n        customEmojiSets={customEmojiSets}\n        isDownloading={isDownloading}\n        seenByRecentPeers={seenByRecentPeers}\n        isInSavedMessages={isInSavedMessages}\n        noReplies={noReplies}\n        onOpenThread={handleOpenThread}\n        onReply={handleReply}\n        onEdit={handleEdit}\n        onPin={handlePin}\n        onUnpin={handleUnpin}\n        onForward={handleForward}\n        onDelete={handleDelete}\n        onReport={handleReport}\n        onFaveSticker={handleFaveSticker}\n        onUnfaveSticker={handleUnfaveSticker}\n        onSelect={handleSelectMessage}\n        onSend={handleScheduledMessageSend}\n        onReschedule={handleOpenCalendar}\n        onClose={closeMenu}\n        onCopyLink={handleCopyLink}\n        onCopyMessages={handleCopyMessages}\n        onCopyNumber={handleCopyNumber}\n        onDownload={handleDownloadClick}\n        onSaveGif={handleSaveGif}\n        onCancelVote={handleCancelVote}\n        onClosePoll={openClosePollDialog}\n        onShowSeenBy={handleOpenSeenByModal}\n        onToggleReaction={handleToggleReaction}\n        onShowReactors={handleOpenReactorListModal}\n        onReactionPickerOpen={handleReactionPickerOpen}\n        onTranslate={handleTranslate}\n        onShowOriginal={handleShowOriginal}\n        onSelectLanguage={handleSelectLanguage}\n      />\n      <ReportModal\n        isOpen={isReportModalOpen}\n        onClose={closeReportModal}\n        messageIds={reportMessageIds}\n      />\n      <PinMessageModal\n        isOpen={isPinModalOpen}\n        messageId={message.id}\n        chatId={message.chatId}\n        onClose={closePinModal}\n      />\n      <ConfirmDialog\n        isOpen={isClosePollDialogOpen}\n        onClose={closeClosePollDialog}\n        text={lang('lng_polls_stop_warning')}\n        confirmLabel={lang('lng_polls_stop_sure')}\n        confirmHandler={handlePollClose}\n      />\n      {canReschedule && calendar}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { message, messageListType, detectedLanguage }): StateProps => {\n    const { threadId } = selectCurrentMessageList(global) || {};\n\n    const { defaultTags, topReactions, availableReactions } = global.reactions;\n\n    const activeDownloads = selectActiveDownloads(global);\n    const chat = selectChat(global, message.chatId);\n    const isPrivate = chat && isUserId(chat.id);\n    const chatFullInfo = !isPrivate ? selectChatFullInfo(global, message.chatId) : undefined;\n\n    const {\n      seenByExpiresAt, seenByMaxChatMembers, maxUniqueReactions, readDateExpiresAt,\n    } = global.appConfig || {};\n\n    const reactionsLimit = chatFullInfo?.reactionsLimit || maxUniqueReactions;\n\n    const {\n      noOptions,\n      canReplyGlobally,\n      canPin,\n      canUnpin,\n      canDelete,\n      canReport,\n      canEdit,\n      canForward,\n      canFaveSticker,\n      canUnfaveSticker,\n      canCopy,\n      canCopyLink,\n      canSelect,\n      canDownload,\n      canSaveGif,\n      canRevote,\n      canClosePoll,\n    } = (threadId && selectAllowedMessageActionsSlow(global, message, threadId)) || {};\n\n    const userStatus = isPrivate ? selectUserStatus(global, chat.id) : undefined;\n    const isOwn = isOwnMessage(message);\n    const isMessageUnread = selectIsMessageUnread(global, message);\n    const canLoadReadDate = Boolean(\n      isPrivate\n      && isOwn\n      && !isMessageUnread\n      && readDateExpiresAt\n      && message.date > Date.now() / 1000 - readDateExpiresAt\n      && !userStatus?.isReadDateRestricted\n      && messageListType !== 'scheduled',\n    );\n    const shouldRenderShowWhen = Boolean(\n      canLoadReadDate && isPrivate && selectUserStatus(global, chat.id)?.isReadDateRestrictedByMe,\n    );\n    const isPinned = messageListType === 'pinned';\n    const isScheduled = messageListType === 'scheduled';\n    const isChannel = chat && isChatChannel(chat);\n\n    const threadInfo = threadId && selectThreadInfo(global, message.chatId, threadId);\n    const isMessageThread = Boolean(threadInfo && !threadInfo?.isCommentsInfo && threadInfo?.fromChannelId);\n    const topic = threadId ? selectTopic(global, message.chatId, threadId) : undefined;\n\n    const canSendText = chat && !isUserRightBanned(chat, 'sendPlain', chatFullInfo);\n\n    const canReplyInChat = chat && threadId ? getCanPostInChat(chat, topic, isMessageThread, chatFullInfo)\n     && canSendText : false;\n\n    const isLocal = isMessageLocal(message);\n    const hasTtl = hasMessageTtl(message);\n    const canShowSeenBy = Boolean(!isLocal\n      && chat\n      && !isMessageUnread\n      && seenByMaxChatMembers\n      && seenByExpiresAt\n      && isChatGroup(chat)\n      && isOwn\n      && !isScheduled\n      && chat.membersCount\n      && chat.membersCount <= seenByMaxChatMembers\n      && message.date > Date.now() / 1000 - seenByExpiresAt);\n    const isAction = isActionMessage(message);\n    const canShowReactionsCount = !isLocal && !isChannel && !isScheduled && !isAction && !isPrivate && message.reactions\n      && !areReactionsEmpty(message.reactions) && message.reactions.canSeeList;\n    const isProtected = selectIsMessageProtected(global, message);\n    const canCopyNumber = Boolean(message.content.contact);\n    const isCurrentUserPremium = selectIsCurrentUserPremium(global);\n\n    const customEmojiSetsInfo = selectMessageCustomEmojiSets(global, message);\n    const customEmojiSetsNotFiltered = customEmojiSetsInfo?.map((set) => selectStickerSet(global, set));\n    const customEmojiSets = customEmojiSetsNotFiltered?.every<ApiStickerSet>(Boolean)\n      ? customEmojiSetsNotFiltered : undefined;\n\n    const translationRequestLanguage = selectRequestedMessageTranslationLanguage(global, message.chatId, message.id);\n    const hasTranslation = translationRequestLanguage\n      ? Boolean(selectMessageTranslations(global, message.chatId, translationRequestLanguage)[message.id]?.text)\n      : undefined;\n    const canTranslate = !hasTranslation && selectCanTranslateMessage(global, message, detectedLanguage);\n    const isChatTranslated = selectRequestedChatTranslationLanguage(global, message.chatId);\n\n    const isInSavedMessages = selectIsChatWithSelf(global, message.chatId);\n\n    return {\n      threadId,\n      availableReactions,\n      topReactions,\n      defaultTagReactions: defaultTags,\n      noOptions,\n      canSendNow: isScheduled,\n      canReschedule: isScheduled,\n      canReply: !isPinned && !isScheduled && canReplyGlobally,\n      canPin: !isScheduled && canPin,\n      canUnpin: !isScheduled && canUnpin,\n      canDelete,\n      canReport,\n      canEdit: !isPinned && canEdit,\n      canForward: !isScheduled && canForward,\n      canFaveSticker: !isScheduled && canFaveSticker,\n      canUnfaveSticker: !isScheduled && canUnfaveSticker,\n      canCopy: (canCopyNumber || (!isProtected && canCopy)),\n      canCopyLink: !isScheduled && canCopyLink,\n      canSelect,\n      canDownload: !isProtected && canDownload,\n      canSaveGif: !isProtected && canSaveGif,\n      canRevote,\n      canClosePoll: !isScheduled && canClosePoll,\n      activeDownloads,\n      canShowSeenBy,\n      canLoadReadDate,\n      shouldRenderShowWhen,\n      enabledReactions: chat?.isForbidden ? undefined : chatFullInfo?.enabledReactions,\n      reactionsLimit,\n      isPrivate,\n      isCurrentUserPremium,\n      hasFullInfo: Boolean(chatFullInfo),\n      canShowReactionsCount,\n      canShowReactionList: !isLocal && !isAction\n        && !isScheduled && chat?.id !== SERVICE_NOTIFICATIONS_USER_ID && !hasTtl,\n      canBuyPremium: !isCurrentUserPremium && !selectIsPremiumPurchaseBlocked(global),\n      customEmojiSetsInfo,\n      customEmojiSets,\n      canScheduleUntilOnline: selectCanScheduleUntilOnline(global, message.chatId),\n      canTranslate,\n      canShowOriginal: hasTranslation && !isChatTranslated,\n      canSelectLanguage: hasTranslation && !isChatTranslated,\n      isMessageTranslated: hasTranslation,\n      canPlayAnimatedEmojis: selectCanPlayAnimatedEmojis(global),\n      isReactionPickerOpen: selectIsReactionPickerOpen(global),\n      isInSavedMessages,\n      isChannel,\n      canReplyInChat,\n    };\n  },\n)(ContextMenuContainer));\n","export function isSelectionRangeInsideMessage(range: Range) {\n  const ancestor = range.commonAncestorContainer;\n  const el = ancestor.nodeType === Node.TEXT_NODE\n    ? ancestor.parentNode! as Element\n    : ancestor as Element;\n\n  return Boolean(el.closest('.message-content-wrapper .text-content'))\n    && !(Boolean(el.closest('.EmbeddedMessage')) || Boolean(el.closest('.WebPage')));\n}\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiSponsoredMessage } from '../../../api/types';\nimport type { IAnchorPosition } from '../../../types';\n\nimport buildClassName from '../../../util/buildClassName';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useShowTransitionDeprecated from '../../../hooks/useShowTransitionDeprecated';\n\nimport MessageContextMenu from './MessageContextMenu';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  message: ApiSponsoredMessage;\n  anchor: IAnchorPosition;\n  onAboutAdsClick: NoneToVoidFunction;\n  onReportAd: NoneToVoidFunction;\n  onClose: NoneToVoidFunction;\n  onCloseAnimationEnd: NoneToVoidFunction;\n};\n\nconst SponsoredMessageContextMenuContainer: FC<OwnProps> = ({\n  message,\n  anchor,\n  onAboutAdsClick,\n  onReportAd,\n  onClose,\n  onCloseAnimationEnd,\n}) => {\n  const { openPremiumModal, showDialog } = getActions();\n\n  const [isMenuOpen, , closeMenu] = useFlag(true);\n  const { transitionClassNames } = useShowTransitionDeprecated(isMenuOpen, onCloseAnimationEnd, undefined, false);\n\n  const handleAboutAdsOpen = useLastCallback(() => {\n    onAboutAdsClick();\n    closeMenu();\n  });\n\n  const handleSponsoredHide = useLastCallback(() => {\n    closeMenu();\n    openPremiumModal();\n    onClose();\n  });\n\n  const handleSponsorInfo = useLastCallback(() => {\n    closeMenu();\n    showDialog({\n      data: {\n        message: [message.sponsorInfo, message.additionalInfo].join('\\n'),\n      },\n    });\n  });\n\n  const handleReportSponsoredMessage = useLastCallback(() => {\n    closeMenu();\n    onReportAd();\n  });\n\n  if (!anchor) {\n    return undefined;\n  }\n\n  return (\n    <div className={buildClassName('ContextMenuContainer', transitionClassNames)}>\n      <MessageContextMenu\n        isOpen={isMenuOpen}\n        anchor={anchor}\n        message={message}\n        onClose={closeMenu}\n        onCloseAnimationEnd={closeMenu}\n        onAboutAdsClick={handleAboutAdsOpen}\n        onSponsoredHide={handleSponsoredHide}\n        onSponsorInfo={handleSponsorInfo}\n        onSponsoredReport={handleReportSponsoredMessage}\n      />\n    </div>\n  );\n};\n\nexport default memo(SponsoredMessageContextMenuContainer);\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useMemo, useRef,\n} from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { ApiSticker, ApiStickerSet } from '../../api/types';\nimport type { MessageList } from '../../global/types';\n\nimport { EMOJI_SIZE_MODAL, STICKER_SIZE_MODAL, TME_LINK_PREFIX } from '../../config';\nimport { getAllowedAttachmentOptions, getCanPostInChat } from '../../global/helpers';\nimport {\n  selectCanScheduleUntilOnline,\n  selectChat,\n  selectChatFullInfo,\n  selectCurrentMessageList,\n  selectIsChatWithSelf,\n  selectIsCurrentUserPremium,\n  selectShouldSchedule,\n  selectStickerSet,\n  selectThreadInfo,\n  selectTopic,\n} from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport { copyTextToClipboard } from '../../util/clipboard';\nimport renderText from './helpers/renderText';\n\nimport useAppLayout from '../../hooks/useAppLayout';\nimport { useIntersectionObserver } from '../../hooks/useIntersectionObserver';\nimport useOldLang from '../../hooks/useOldLang';\nimport usePreviousDeprecated from '../../hooks/usePreviousDeprecated';\nimport useSchedule from '../../hooks/useSchedule';\nimport useScrolledState from '../../hooks/useScrolledState';\n\nimport Button from '../ui/Button';\nimport DropdownMenu from '../ui/DropdownMenu';\nimport Loading from '../ui/Loading';\nimport MenuItem from '../ui/MenuItem';\nimport Modal from '../ui/Modal';\nimport StickerButton from './StickerButton';\n\nimport './StickerSetModal.scss';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  fromSticker?: ApiSticker;\n  stickerSetShortName?: string;\n  onClose: () => void;\n};\n\ntype StateProps = {\n  currentMessageList?: MessageList;\n  canSendStickers?: boolean;\n  stickerSet?: ApiStickerSet;\n  canScheduleUntilOnline?: boolean;\n  shouldSchedule?: boolean;\n  isSavedMessages?: boolean;\n  isCurrentUserPremium?: boolean;\n  shouldUpdateStickerSetOrder?: boolean;\n};\n\nconst INTERSECTION_THROTTLE = 200;\n\nconst StickerSetModal: FC<OwnProps & StateProps> = ({\n  isOpen,\n  fromSticker,\n  stickerSetShortName,\n  stickerSet,\n  canSendStickers,\n  canScheduleUntilOnline,\n  shouldSchedule,\n  isSavedMessages,\n  isCurrentUserPremium,\n  shouldUpdateStickerSetOrder,\n  currentMessageList,\n  onClose,\n}) => {\n  const {\n    loadStickers,\n    toggleStickerSet,\n    sendMessage,\n    showNotification,\n  } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const sharedCanvasRef = useRef<HTMLCanvasElement>(null);\n\n  const lang = useOldLang();\n\n  const { isMobile } = useAppLayout();\n\n  const prevStickerSet = usePreviousDeprecated(stickerSet);\n  const renderingStickerSet = stickerSet || prevStickerSet;\n\n  const isAdded = Boolean(!renderingStickerSet?.isArchived && renderingStickerSet?.installedDate);\n  const isEmoji = renderingStickerSet?.isEmoji;\n\n  const [requestCalendar, calendar] = useSchedule(canScheduleUntilOnline);\n  const {\n    handleScroll: handleContentScroll,\n    isAtBeginning: shouldHideTopBorder,\n  } = useScrolledState();\n\n  const {\n    observe: observeIntersection,\n  } = useIntersectionObserver({ rootRef: containerRef, throttleMs: INTERSECTION_THROTTLE, isDisabled: !isOpen });\n\n  useEffect(() => {\n    if (isOpen && !renderingStickerSet?.stickers) {\n      loadStickers({\n        stickerSetInfo: fromSticker ? fromSticker.stickerSetInfo : { shortName: stickerSetShortName! },\n      });\n    }\n  }, [isOpen, fromSticker, loadStickers, stickerSetShortName, renderingStickerSet]);\n\n  const handleSelect = useCallback((sticker: ApiSticker, isSilent?: boolean, isScheduleRequested?: boolean) => {\n    if (!currentMessageList) {\n      return;\n    }\n    sticker = {\n      ...sticker,\n      isPreloadedGlobally: true,\n    };\n\n    if (shouldSchedule || isScheduleRequested) {\n      requestCalendar((scheduledAt) => {\n        sendMessage({\n          messageList: currentMessageList, sticker, isSilent, scheduledAt,\n        });\n        onClose();\n      });\n    } else {\n      sendMessage({\n        messageList: currentMessageList,\n        sticker,\n        isSilent,\n        shouldUpdateStickerSetOrder: shouldUpdateStickerSetOrder && isAdded,\n      });\n      onClose();\n    }\n  }, [currentMessageList, shouldSchedule, requestCalendar, onClose, shouldUpdateStickerSetOrder, isAdded]);\n\n  const handleButtonClick = useCallback(() => {\n    if (renderingStickerSet) {\n      toggleStickerSet({ stickerSetId: renderingStickerSet.id });\n      onClose();\n    }\n  }, [onClose, renderingStickerSet, toggleStickerSet]);\n\n  const handleCopyLink = useCallback(() => {\n    if (!renderingStickerSet) return;\n    const { shortName } = renderingStickerSet;\n    const suffix = isEmoji ? 'addemoji' : 'addstickers';\n    const url = `${TME_LINK_PREFIX}${suffix}/${shortName}`;\n    copyTextToClipboard(url);\n    showNotification({\n      message: lang('LinkCopied'),\n    });\n  }, [isEmoji, lang, renderingStickerSet, showNotification]);\n\n  const renderButtonText = () => {\n    if (!renderingStickerSet) return lang('Loading');\n\n    const suffix = isEmoji ? 'Emoji' : 'Sticker';\n\n    return lang(\n      isAdded ? `StickerPack.Remove${suffix}Count` : `StickerPack.Add${suffix}Count`,\n      renderingStickerSet.count,\n      'i',\n    );\n  };\n\n  const MoreMenuButton: FC<{ onTrigger: () => void; isOpen?: boolean }> = useMemo(() => {\n    return ({ onTrigger, isOpen: isMenuOpen }) => (\n      <Button\n        round\n        ripple={!isMobile}\n        size=\"smaller\"\n        color=\"translucent\"\n        className={isMenuOpen ? 'active' : ''}\n        onClick={onTrigger}\n        ariaLabel=\"More actions\"\n      >\n        <i className=\"icon icon-more\" />\n      </Button>\n    );\n  }, [isMobile]);\n\n  function renderHeader() {\n    const fullClassName = buildClassName('modal-header', !shouldHideTopBorder && 'with-top-border');\n\n    return (\n      <div className={fullClassName} dir={lang.isRtl ? 'rtl' : undefined}>\n        <Button round color=\"translucent\" size=\"smaller\" ariaLabel={lang('Close')} onClick={onClose}>\n          <i className=\"icon icon-close\" />\n        </Button>\n        <div className=\"modal-title\">\n          {renderingStickerSet ? renderText(renderingStickerSet.title, ['emoji', 'links']) : lang('AccDescrStickerSet')}\n        </div>\n        <DropdownMenu\n          className=\"stickers-more-menu with-menu-transitions\"\n          trigger={MoreMenuButton}\n          positionX=\"right\"\n        >\n          <MenuItem icon=\"copy\" onClick={handleCopyLink}>{lang('StickersCopy')}</MenuItem>\n        </DropdownMenu>\n      </div>\n    );\n  }\n\n  return (\n    <Modal\n      className={buildClassName('StickerSetModal', isEmoji && 'custom-emoji')}\n      isOpen={isOpen}\n      onClose={onClose}\n      header={renderHeader()}\n    >\n      {renderingStickerSet?.stickers ? (\n        <>\n          <div ref={containerRef} className=\"stickers custom-scroll\" onScroll={handleContentScroll}>\n            <div className=\"shared-canvas-container stickers-grid\">\n              <canvas ref={sharedCanvasRef} className=\"shared-canvas\" />\n              {renderingStickerSet.stickers.map((sticker) => (\n                <StickerButton\n                  sticker={sticker}\n                  size={isEmoji ? EMOJI_SIZE_MODAL : STICKER_SIZE_MODAL}\n                  observeIntersection={observeIntersection}\n                  onClick={canSendStickers && !isEmoji ? handleSelect : undefined}\n                  clickArg={sticker}\n                  isSavedMessages={isSavedMessages}\n                  isCurrentUserPremium={isCurrentUserPremium}\n                  sharedCanvasRef={sharedCanvasRef}\n                />\n              ))}\n            </div>\n          </div>\n          <div className=\"button-wrapper\">\n            <Button\n              size=\"smaller\"\n              fluid\n              color={isAdded ? 'danger' : 'primary'}\n              onClick={handleButtonClick}\n            >\n              {renderButtonText()}\n            </Button>\n          </div>\n        </>\n      ) : (\n        <Loading />\n      )}\n      {calendar}\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { fromSticker, stickerSetShortName }): StateProps => {\n    const currentMessageList = selectCurrentMessageList(global);\n    const { chatId, threadId } = currentMessageList || {};\n    const chat = chatId && selectChat(global, chatId);\n    const chatFullInfo = chatId ? selectChatFullInfo(global, chatId) : undefined;\n    const sendOptions = chat ? getAllowedAttachmentOptions(chat, chatFullInfo) : undefined;\n    const threadInfo = chatId && threadId ? selectThreadInfo(global, chatId, threadId) : undefined;\n    const isMessageThread = Boolean(!threadInfo?.isCommentsInfo && threadInfo?.fromChannelId);\n    const topic = chatId && threadId ? selectTopic(global, chatId, threadId) : undefined;\n    const canSendStickers = Boolean(\n      chat && threadId && getCanPostInChat(chat, topic, isMessageThread, chatFullInfo)\n        && sendOptions?.canSendStickers,\n    );\n    const isSavedMessages = Boolean(chatId) && selectIsChatWithSelf(global, chatId);\n\n    const stickerSetInfo = fromSticker ? fromSticker.stickerSetInfo\n      : stickerSetShortName ? { shortName: stickerSetShortName } : undefined;\n\n    const stickerSet = stickerSetInfo ? selectStickerSet(global, stickerSetInfo) : undefined;\n\n    return {\n      canScheduleUntilOnline: Boolean(chatId) && selectCanScheduleUntilOnline(global, chatId),\n      canSendStickers,\n      isSavedMessages,\n      shouldSchedule: selectShouldSchedule(global),\n      stickerSet,\n      isCurrentUserPremium: selectIsCurrentUserPremium(global),\n      shouldUpdateStickerSetOrder: global.settings.byKey.shouldUpdateStickerSetOrder,\n      currentMessageList,\n    };\n  },\n)(StickerSetModal));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"nZYT4vJ3\",\"sets\":\"JzkmXjFF\"};","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo,\n  useMemo,\n  useRef,\n} from '../../lib/teact/teact';\nimport { getGlobal } from '../../lib/teact/teactn';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { ApiSticker } from '../../api/types';\n\nimport { selectCanPlayAnimatedEmojis } from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\n\nimport { useIntersectionObserver } from '../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\nimport usePreviousDeprecated from '../../hooks/usePreviousDeprecated';\n\nimport Modal from '../ui/Modal';\nimport StickerSetCard from './StickerSetCard';\n\nimport styles from './CustomEmojiSetsModal.module.scss';\n\nexport type OwnProps = {\n  customEmojiSetIds?: string[];\n  onClose: () => void;\n};\n\ntype StateProps = {\n  canPlayAnimatedEmojis?: boolean;\n};\n\nconst CustomEmojiSetsModal: FC<OwnProps & StateProps> = ({\n  customEmojiSetIds,\n  canPlayAnimatedEmojis,\n  onClose,\n}) => {\n  const { openStickerSet } = getActions();\n  const lang = useOldLang();\n\n  const customEmojiSets = useMemo(() => {\n    return customEmojiSetIds?.map((id) => getGlobal().stickers.setsById[id]);\n  }, [customEmojiSetIds]);\n\n  // eslint-disable-next-line no-null/no-null\n  const customEmojiModalRef = useRef<HTMLDivElement>(null);\n  const { observe: observeIntersectionForCovers } = useIntersectionObserver({\n    rootRef: customEmojiModalRef, isDisabled: !customEmojiSets,\n  });\n\n  const prevCustomEmojiSets = usePreviousDeprecated(customEmojiSets);\n  const renderingCustomEmojiSets = customEmojiSets || prevCustomEmojiSets;\n\n  const handleSetClick = useLastCallback((sticker: ApiSticker) => {\n    openStickerSet({\n      stickerSetInfo: sticker.stickerSetInfo,\n    });\n  });\n\n  return (\n    <Modal\n      isOpen={Boolean(customEmojiSets)}\n      className={styles.root}\n      onClose={onClose}\n      hasCloseButton\n      title={lang('lng_custom_emoji_used_sets')}\n    >\n      <div className={buildClassName(styles.sets, 'custom-scroll')} ref={customEmojiModalRef} teactFastList>\n        {renderingCustomEmojiSets?.map((customEmojiSet) => {\n          return (\n            <StickerSetCard\n              key={customEmojiSet.id}\n              className={styles.setCard}\n              stickerSet={customEmojiSet}\n              onClick={handleSetClick}\n              observeIntersection={observeIntersectionForCovers}\n              noPlay={!canPlayAnimatedEmojis}\n            />\n          );\n        })}\n      </div>\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    return {\n      canPlayAnimatedEmojis: selectCanPlayAnimatedEmojis(global),\n    };\n  },\n)(CustomEmojiSetsModal));\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo, useState,\n} from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { ApiBotCommand, ApiChat } from '../../api/types';\nimport type { IAnchorPosition, ThreadId } from '../../types';\nimport type { IconName } from '../../types/icons';\nimport { MAIN_THREAD_ID } from '../../api/types';\n\nimport { REPLIES_USER_ID } from '../../config';\nimport {\n  getCanAddContact,\n  getCanDeleteChat,\n  getCanManageTopic,\n  getHasAdminRight,\n  getIsSavedDialog,\n  isChatChannel,\n  isChatGroup,\n  isUserId,\n  isUserRightBanned,\n  selectIsChatMuted,\n} from '../../global/helpers';\nimport {\n  selectBot,\n  selectCanManage,\n  selectCanTranslateChat,\n  selectChat,\n  selectChatFullInfo,\n  selectCurrentMessageList,\n  selectIsChatWithSelf,\n  selectIsPremiumPurchaseBlocked,\n  selectIsRightColumnShown,\n  selectNotifyExceptions,\n  selectNotifySettings,\n  selectTabState,\n  selectTopic,\n  selectUser,\n  selectUserFullInfo,\n} from '../../global/selectors';\nimport { disableScrolling } from '../../util/scrollLock';\n\nimport useAppLayout from '../../hooks/useAppLayout';\nimport useFlag from '../../hooks/useFlag';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\nimport usePrevDuringAnimation from '../../hooks/usePrevDuringAnimation';\nimport useShowTransitionDeprecated from '../../hooks/useShowTransitionDeprecated';\n\nimport DeleteChatModal from '../common/DeleteChatModal';\nimport ReportModal from '../common/ReportModal';\nimport MuteChatModal from '../left/MuteChatModal.async';\nimport Menu from '../ui/Menu';\nimport MenuItem from '../ui/MenuItem';\nimport MenuSeparator from '../ui/MenuSeparator';\nimport Portal from '../ui/Portal';\n\nimport './HeaderMenuContainer.scss';\n\nconst BOT_BUTTONS: Record<string, { icon: IconName; label: string }> = {\n  settings: {\n    icon: 'bots',\n    label: 'BotSettings',\n  },\n  help: {\n    icon: 'help',\n    label: 'BotHelp',\n  },\n};\n\nexport type OwnProps = {\n  chatId: string;\n  threadId: ThreadId;\n  isOpen: boolean;\n  withExtraActions: boolean;\n  anchor: IAnchorPosition;\n  isChannel?: boolean;\n  canStartBot?: boolean;\n  canSubscribe?: boolean;\n  canSearch?: boolean;\n  canCall?: boolean;\n  canMute?: boolean;\n  canViewStatistics?: boolean;\n  canViewBoosts?: boolean;\n  canViewMonetization?: boolean;\n  canShowBoostModal?: boolean;\n  withForumActions?: boolean;\n  canLeave?: boolean;\n  canEnterVoiceChat?: boolean;\n  canCreateVoiceChat?: boolean;\n  pendingJoinRequests?: number;\n  canTranslate?: boolean;\n  onSubscribeChannel: () => void;\n  onSearchClick: () => void;\n  onAsMessagesClick: () => void;\n  onClose: () => void;\n  onCloseAnimationEnd: () => void;\n  onJoinRequestsClick?: () => void;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  botCommands?: ApiBotCommand[];\n  botPrivacyPolicyUrl?: string;\n  isPrivate?: boolean;\n  isMuted?: boolean;\n  isTopic?: boolean;\n  isForum?: boolean;\n  isForumAsMessages?: true;\n  canAddContact?: boolean;\n  canReportChat?: boolean;\n  canDeleteChat?: boolean;\n  canGiftPremium?: boolean;\n  canCreateTopic?: boolean;\n  canEditTopic?: boolean;\n  hasLinkedChat?: boolean;\n  isChatInfoShown?: boolean;\n  isRightColumnShown?: boolean;\n  canManage?: boolean;\n  canTranslate?: boolean;\n  isBlocked?: boolean;\n  isBot?: boolean;\n  isChatWithSelf?: boolean;\n  savedDialog?: ApiChat;\n};\n\nconst CLOSE_MENU_ANIMATION_DURATION = 200;\n\nconst HeaderMenuContainer: FC<OwnProps & StateProps> = ({\n  chatId,\n  threadId,\n  isOpen,\n  withExtraActions,\n  anchor,\n  isChannel,\n  botCommands,\n  botPrivacyPolicyUrl,\n  withForumActions,\n  isTopic,\n  isForum,\n  isForumAsMessages,\n  isChatInfoShown,\n  canStartBot,\n  canSubscribe,\n  canSearch,\n  canCall,\n  canMute,\n  canViewStatistics,\n  canViewMonetization,\n  canViewBoosts,\n  pendingJoinRequests,\n  canLeave,\n  canEnterVoiceChat,\n  canCreateVoiceChat,\n  chat,\n  isPrivate,\n  isMuted,\n  canReportChat,\n  canDeleteChat,\n  canGiftPremium,\n  hasLinkedChat,\n  canAddContact,\n  canCreateTopic,\n  canEditTopic,\n  canManage,\n  isRightColumnShown,\n  canTranslate,\n  isBlocked,\n  isBot,\n  isChatWithSelf,\n  savedDialog,\n  canShowBoostModal,\n  onJoinRequestsClick,\n  onSubscribeChannel,\n  onSearchClick,\n  onAsMessagesClick,\n  onClose,\n  onCloseAnimationEnd,\n}) => {\n  const {\n    updateChatMutedState,\n    enterMessageSelectMode,\n    sendBotCommand,\n    restartBot,\n    requestMasterAndJoinGroupCall,\n    createGroupCall,\n    openLinkedChat,\n    openAddContactDialog,\n    requestMasterAndRequestCall,\n    toggleStatistics,\n    openMonetizationStatistics,\n    openBoostStatistics,\n    openPremiumGiftModal,\n    openThreadWithInfo,\n    openCreateTopicPanel,\n    openEditTopicPanel,\n    openChat,\n    openUrl,\n    toggleManagement,\n    togglePeerTranslations,\n    blockUser,\n    unblockUser,\n    setViewForumAsMessages,\n    openBoostModal,\n  } = getActions();\n\n  const { isMobile } = useAppLayout();\n  const [isMenuOpen, setIsMenuOpen] = useState(true);\n  const [shouldCloseFast, setShouldCloseFast] = useState(false);\n  const [isDeleteModalOpen, setIsDeleteModalOpen] = useState(false);\n  const [isReportModalOpen, setIsReportModalOpen] = useState(false);\n  const [isMuteModalOpen, setIsMuteModalOpen] = useState(false);\n  const [shouldRenderMuteModal, markRenderMuteModal, unmarkRenderMuteModal] = useFlag();\n  const { x, y } = anchor;\n\n  useShowTransitionDeprecated(isOpen, onCloseAnimationEnd, undefined, false);\n  const isViewGroupInfoShown = usePrevDuringAnimation(\n    (!isChatInfoShown && isForum) ? true : undefined, CLOSE_MENU_ANIMATION_DURATION,\n  );\n\n  const handleReport = useLastCallback(() => {\n    setIsMenuOpen(false);\n    setIsReportModalOpen(true);\n  });\n\n  const closeReportModal = useLastCallback(() => {\n    setIsReportModalOpen(false);\n    onClose();\n  });\n\n  const closeMuteModal = useLastCallback(() => {\n    setIsMuteModalOpen(false);\n    onClose();\n  });\n\n  const handleDelete = useLastCallback(() => {\n    setIsMenuOpen(false);\n    setIsDeleteModalOpen(true);\n  });\n\n  const closeMenu = useLastCallback(() => {\n    setIsMenuOpen(false);\n    onClose();\n  });\n\n  const handleViewGroupInfo = useLastCallback(() => {\n    openThreadWithInfo({ chatId, threadId });\n    setShouldCloseFast(!isRightColumnShown);\n    closeMenu();\n  });\n\n  const closeDeleteModal = useLastCallback(() => {\n    setIsDeleteModalOpen(false);\n    onClose();\n  });\n\n  const handleStartBot = useLastCallback(() => {\n    sendBotCommand({ command: '/start' });\n  });\n\n  const handleRestartBot = useLastCallback(() => {\n    restartBot({ chatId });\n  });\n\n  const handleUnmuteClick = useLastCallback(() => {\n    updateChatMutedState({ chatId, isMuted: false });\n    closeMenu();\n  });\n\n  const handleMuteClick = useLastCallback(() => {\n    markRenderMuteModal();\n    setIsMuteModalOpen(true);\n    setIsMenuOpen(false);\n  });\n\n  const handleCreateTopicClick = useLastCallback(() => {\n    openCreateTopicPanel({ chatId });\n    setShouldCloseFast(!isRightColumnShown);\n    closeMenu();\n  });\n\n  const handleEditClick = useLastCallback(() => {\n    toggleManagement({ force: true });\n    setShouldCloseFast(!isRightColumnShown);\n    closeMenu();\n  });\n\n  const handleEditTopicClick = useLastCallback(() => {\n    openEditTopicPanel({ chatId, topicId: Number(threadId) });\n    setShouldCloseFast(!isRightColumnShown);\n    closeMenu();\n  });\n\n  const handleViewAsTopicsClick = useLastCallback(() => {\n    openChat({ id: undefined });\n    setViewForumAsMessages({ chatId, isEnabled: false });\n    closeMenu();\n  });\n\n  const handleEnterVoiceChatClick = useLastCallback(() => {\n    if (canCreateVoiceChat) {\n      // TODO Show popup to schedule\n      createGroupCall({\n        chatId,\n      });\n    } else {\n      requestMasterAndJoinGroupCall({\n        chatId,\n      });\n    }\n    closeMenu();\n  });\n\n  const handleLinkedChatClick = useLastCallback(() => {\n    openLinkedChat({ id: chatId });\n    closeMenu();\n  });\n\n  const handleGiftPremiumClick = useLastCallback(() => {\n    openPremiumGiftModal({ forUserIds: [chatId] });\n    closeMenu();\n  });\n\n  const handleAddContactClick = useLastCallback(() => {\n    openAddContactDialog({ userId: chatId });\n    closeMenu();\n  });\n\n  const handleSubscribe = useLastCallback(() => {\n    onSubscribeChannel();\n    closeMenu();\n  });\n\n  const handleVideoCall = useLastCallback(() => {\n    requestMasterAndRequestCall({ userId: chatId, isVideo: true });\n    closeMenu();\n  });\n\n  const handleCall = useLastCallback(() => {\n    requestMasterAndRequestCall({ userId: chatId });\n    closeMenu();\n  });\n\n  const handleSearch = useLastCallback(() => {\n    onSearchClick();\n    closeMenu();\n  });\n\n  const handleStatisticsClick = useLastCallback(() => {\n    toggleStatistics();\n    setShouldCloseFast(!isRightColumnShown);\n    closeMenu();\n  });\n\n  const handleMonetizationClick = useLastCallback(() => {\n    openMonetizationStatistics({ chatId });\n    setShouldCloseFast(!isRightColumnShown);\n    closeMenu();\n  });\n\n  const handleBoostClick = useLastCallback(() => {\n    if (canViewBoosts) {\n      openBoostStatistics({ chatId });\n      setShouldCloseFast(!isRightColumnShown);\n    } else {\n      openBoostModal({ chatId });\n    }\n    closeMenu();\n  });\n\n  const handleEnableTranslations = useLastCallback(() => {\n    togglePeerTranslations({ chatId, isEnabled: true });\n    closeMenu();\n  });\n\n  const handleSelectMessages = useLastCallback(() => {\n    enterMessageSelectMode();\n    closeMenu();\n  });\n\n  const handleOpenAsMessages = useLastCallback(() => {\n    onAsMessagesClick();\n    closeMenu();\n  });\n\n  const handleBlock = useLastCallback(() => {\n    blockUser({ userId: chatId });\n    closeMenu();\n  });\n\n  const handleUnblock = useLastCallback(() => {\n    unblockUser({ userId: chatId });\n    closeMenu();\n  });\n\n  useEffect(disableScrolling, []);\n\n  const lang = useOldLang();\n\n  const botButtons = useMemo(() => {\n    const commandButtons = botCommands?.map(({ command }) => {\n      const cmd = BOT_BUTTONS[command];\n      if (!cmd) return undefined;\n\n      const handleClick = () => {\n        sendBotCommand({ command: `/${command}` });\n        closeMenu();\n      };\n\n      return (\n        <MenuItem\n          key={command}\n          icon={cmd.icon}\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={handleClick}\n        >\n          {lang(cmd.label)}\n        </MenuItem>\n      );\n    });\n\n    const hasPrivacyCommand = botCommands?.some(({ command }) => command === 'privacy');\n\n    const privacyButton = isBot && (\n      <MenuItem\n        icon=\"privacy-policy\"\n        // eslint-disable-next-line react/jsx-no-bind\n        onClick={() => {\n          if (hasPrivacyCommand && !botPrivacyPolicyUrl) {\n            sendBotCommand({ command: '/privacy' });\n          } else {\n            openUrl({ url: botPrivacyPolicyUrl || lang('BotDefaultPrivacyPolicy') });\n          }\n          closeMenu();\n        }}\n      >\n        {lang('BotPrivacyPolicy')}\n      </MenuItem>\n    );\n\n    return [...commandButtons || [], privacyButton].filter(Boolean);\n  }, [botCommands, lang, botPrivacyPolicyUrl, isBot]);\n\n  const deleteTitle = useMemo(() => {\n    if (!chat) return undefined;\n\n    if (savedDialog) {\n      return lang('Delete');\n    }\n\n    if (isPrivate) {\n      return lang('DeleteChatUser');\n    }\n\n    if (canDeleteChat) {\n      return lang('GroupInfo.DeleteAndExit');\n    }\n\n    if (isChannel) {\n      return lang('LeaveChannel');\n    }\n\n    return lang('Group.LeaveGroup');\n  }, [canDeleteChat, chat, isChannel, isPrivate, savedDialog, lang]);\n\n  return (\n    <Portal>\n      <div className=\"HeaderMenuContainer\">\n        <Menu\n          isOpen={isMenuOpen}\n          positionX=\"right\"\n          style={`left: ${x}px;top: ${y}px;`}\n          onClose={closeMenu}\n          shouldCloseFast={shouldCloseFast}\n        >\n          {isMobile && canSearch && (\n            <MenuItem\n              icon=\"search\"\n              onClick={handleSearch}\n            >\n              {lang('Search')}\n            </MenuItem>\n          )}\n          {withForumActions && canCreateTopic && (\n            <>\n              <MenuItem\n                icon=\"comments\"\n                onClick={handleCreateTopicClick}\n              >\n                {lang('lng_forum_create_topic')}\n              </MenuItem>\n              <MenuSeparator />\n            </>\n          )}\n          {isViewGroupInfoShown && (\n            <MenuItem\n              icon=\"info\"\n              onClick={handleViewGroupInfo}\n            >\n              {isTopic ? lang('lng_context_view_topic') : lang('lng_context_view_group')}\n            </MenuItem>\n          )}\n          {canManage && !canEditTopic && (\n            <MenuItem\n              icon=\"edit\"\n              onClick={handleEditClick}\n            >\n              {lang('Edit')}\n            </MenuItem>\n          )}\n          {canEditTopic && (\n            <MenuItem\n              icon=\"edit\"\n              onClick={handleEditTopicClick}\n            >\n              {lang('lng_forum_topic_edit')}\n            </MenuItem>\n          )}\n          {isMobile && !withForumActions && isForum && !isTopic && (\n            <MenuItem\n              icon=\"forums\"\n              onClick={handleViewAsTopicsClick}\n            >\n              {lang('Chat.ContextViewAsTopics')}\n            </MenuItem>\n          )}\n          {withForumActions && Boolean(pendingJoinRequests) && (\n            <MenuItem\n              icon=\"user\"\n              onClick={onJoinRequestsClick}\n            >\n              {isChannel ? lang('SubscribeRequests') : lang('MemberRequests')}\n              <div className=\"right-badge\">{pendingJoinRequests}</div>\n            </MenuItem>\n          )}\n          {withForumActions && !isTopic && !isForumAsMessages && (\n            <MenuItem\n              icon=\"message\"\n              onClick={handleOpenAsMessages}\n            >\n              {lang('lng_forum_view_as_messages')}\n            </MenuItem>\n          )}\n          {withExtraActions && canStartBot && (\n            <MenuItem\n              icon=\"bots\"\n              onClick={handleStartBot}\n            >\n              {lang('BotStart')}\n            </MenuItem>\n          )}\n          {withExtraActions && canSubscribe && (\n            <MenuItem\n              icon={isChannel ? 'channel' : 'group'}\n              onClick={handleSubscribe}\n            >\n              {lang(isChannel ? 'ProfileJoinChannel' : 'ProfileJoinGroup')}\n            </MenuItem>\n          )}\n          {canShowBoostModal && !canViewBoosts && (\n            <MenuItem\n              icon=\"boost-outline\"\n              onClick={handleBoostClick}\n            >\n              {lang(isChannel ? 'BoostingBoostChannelMenu' : 'BoostingBoostGroupMenu')}\n            </MenuItem>\n          )}\n          {canAddContact && (\n            <MenuItem\n              icon=\"add-user\"\n              onClick={handleAddContactClick}\n            >\n              {lang('AddContact')}\n            </MenuItem>\n          )}\n          {isMobile && canCall && (\n            <MenuItem\n              icon=\"phone\"\n              onClick={handleCall}\n            >\n              {lang('Call')}\n            </MenuItem>\n          )}\n          {canCall && (\n            <MenuItem\n              icon=\"video-outlined\"\n              onClick={handleVideoCall}\n            >\n              {lang('VideoCall')}\n            </MenuItem>\n          )}\n          {canMute && (isMuted ? (\n            <MenuItem\n              icon=\"unmute\"\n              onClick={handleUnmuteClick}\n            >\n              {lang('ChatsUnmute')}\n            </MenuItem>\n          )\n            : (\n              <MenuItem\n                icon=\"mute\"\n                onClick={handleMuteClick}\n              >\n                {lang('ChatsMute')}...\n              </MenuItem>\n            )\n          )}\n          {(canEnterVoiceChat || canCreateVoiceChat) && (\n            <MenuItem\n              icon=\"voice-chat\"\n              onClick={handleEnterVoiceChatClick}\n            >\n              {lang(canCreateVoiceChat ? 'StartVoipChat' : 'VoipGroupJoinCall')}\n            </MenuItem>\n          )}\n          {hasLinkedChat && (\n            <MenuItem\n              icon={isChannel ? 'comments' : 'channel'}\n              onClick={handleLinkedChatClick}\n            >\n              {lang(isChannel ? 'ViewDiscussion' : 'lng_profile_view_channel')}\n            </MenuItem>\n          )}\n          {!withForumActions && (\n            <MenuItem\n              icon=\"select\"\n              onClick={handleSelectMessages}\n            >\n              {lang('ReportSelectMessages')}\n            </MenuItem>\n          )}\n          {canViewBoosts && (\n            <MenuItem\n              icon=\"boost-outline\"\n              onClick={handleBoostClick}\n            >\n              {lang('Boosts')}\n            </MenuItem>\n          )}\n          {canViewStatistics && (\n            <MenuItem\n              icon=\"stats\"\n              onClick={handleStatisticsClick}\n            >\n              {lang('Statistics')}\n            </MenuItem>\n          )}\n          {isChannel && canViewMonetization && (\n            <MenuItem\n              icon=\"cash-circle\"\n              onClick={handleMonetizationClick}\n            >\n              {lang('lng_channel_earn_title')}\n            </MenuItem>\n          )}\n          {canTranslate && (\n            <MenuItem\n              icon=\"language\"\n              onClick={handleEnableTranslations}\n            >\n              {lang('lng_context_translate')}\n            </MenuItem>\n          )}\n          {canReportChat && (\n            <MenuItem\n              icon=\"flag\"\n              onClick={handleReport}\n            >\n              {lang('ReportPeer.Report')}\n            </MenuItem>\n          )}\n          {botButtons}\n          {canGiftPremium && (\n            <MenuItem\n              icon=\"gift\"\n              onClick={handleGiftPremiumClick}\n            >\n              {lang('GiftPremium')}\n            </MenuItem>\n          )}\n          {isBot && (\n            <MenuItem\n              icon={isBlocked ? 'bots' : 'hand-stop'}\n              onClick={isBlocked ? handleRestartBot : handleBlock}\n            >\n              {isBlocked ? lang('BotRestart') : lang('Bot.Stop')}\n            </MenuItem>\n          )}\n          {isPrivate && !isChatWithSelf && !isBot && (\n            <MenuItem\n              icon={isBlocked ? 'user' : 'hand-stop'}\n              onClick={isBlocked ? handleUnblock : handleBlock}\n            >\n              {isBlocked ? lang('Unblock') : lang('BlockUser')}\n            </MenuItem>\n          )}\n          {canLeave && (\n            <>\n              <MenuSeparator />\n              <MenuItem\n                destructive\n                icon=\"delete\"\n                onClick={handleDelete}\n              >\n                {deleteTitle}\n              </MenuItem>\n            </>\n          )}\n        </Menu>\n        {chat && (\n          <DeleteChatModal\n            isOpen={isDeleteModalOpen}\n            onClose={closeDeleteModal}\n            chat={savedDialog || chat}\n            isSavedDialog={Boolean(savedDialog)}\n          />\n        )}\n        {canMute && shouldRenderMuteModal && chat?.id && (\n          <MuteChatModal\n            isOpen={isMuteModalOpen}\n            onClose={closeMuteModal}\n            onCloseAnimationEnd={unmarkRenderMuteModal}\n            chatId={chat.id}\n          />\n        )}\n        {canReportChat && chat?.id && (\n          <ReportModal\n            isOpen={isReportModalOpen}\n            onClose={closeReportModal}\n            subject=\"peer\"\n            peerId={chat.id}\n          />\n        )}\n      </div>\n    </Portal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId, threadId }): StateProps => {\n    const chat = selectChat(global, chatId);\n    if (!chat || chat.isRestricted) {\n      return {};\n    }\n    const isPrivate = isUserId(chat.id);\n    const user = isPrivate ? selectUser(global, chatId) : undefined;\n    const canAddContact = user && getCanAddContact(user);\n    const isMainThread = threadId === MAIN_THREAD_ID;\n    const isChatWithSelf = selectIsChatWithSelf(global, chatId);\n    const canReportChat = isMainThread && (isChatChannel(chat) || isChatGroup(chat) || (user && !user.isSelf));\n    const { chatId: currentChatId, threadId: currentThreadId } = selectCurrentMessageList(global) || {};\n\n    const chatBot = chatId !== REPLIES_USER_ID ? selectBot(global, chatId) : undefined;\n    const userFullInfo = isPrivate ? selectUserFullInfo(global, chatId) : undefined;\n    const chatFullInfo = !isPrivate ? selectChatFullInfo(global, chatId) : undefined;\n    const fullInfo = userFullInfo || chatFullInfo;\n    const canGiftPremium = Boolean(\n      userFullInfo?.premiumGifts?.length\n      && !selectIsPremiumPurchaseBlocked(global),\n    );\n\n    const topic = selectTopic(global, chatId, threadId);\n    const canCreateTopic = chat.isForum && (\n      chat.isCreator || !isUserRightBanned(chat, 'manageTopics') || getHasAdminRight(chat, 'manageTopics')\n    );\n    const canEditTopic = topic && getCanManageTopic(chat, topic);\n    const canManage = selectCanManage(global, chatId);\n    // Context menu item should only be displayed if user hid translation panel\n    const canTranslate = selectCanTranslateChat(global, chatId) && fullInfo?.isTranslationDisabled;\n\n    const isSavedDialog = getIsSavedDialog(chatId, threadId, global.currentUserId);\n    const savedDialog = isSavedDialog ? selectChat(global, String(threadId)) : undefined;\n\n    return {\n      chat,\n      isMuted: selectIsChatMuted(chat, selectNotifySettings(global), selectNotifyExceptions(global)),\n      isPrivate,\n      isTopic: chat?.isForum && !isMainThread,\n      isForum: chat?.isForum,\n      isForumAsMessages: chat?.isForumAsMessages,\n      canAddContact,\n      canReportChat,\n      canDeleteChat: getCanDeleteChat(chat),\n      canGiftPremium,\n      hasLinkedChat: Boolean(chatFullInfo?.linkedChatId),\n      botCommands: chatBot ? userFullInfo?.botInfo?.commands : undefined,\n      botPrivacyPolicyUrl: chatBot ? userFullInfo?.botInfo?.privacyPolicyUrl : undefined,\n      isChatInfoShown: selectTabState(global).isChatInfoShown\n        && currentChatId === chatId && currentThreadId === threadId,\n      canCreateTopic,\n      canEditTopic,\n      canManage,\n      isRightColumnShown: selectIsRightColumnShown(global),\n      canTranslate,\n      isBlocked: userFullInfo?.isBlocked,\n      isBot: Boolean(chatBot),\n      isChatWithSelf,\n      savedDialog,\n    };\n  },\n)(HeaderMenuContainer));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"vv5ppXel\",\"active\":\"FVgqrSSK\",\"info\":\"DboxqiZd\",\"topRow\":\"Ymu2m1PR\",\"meta\":\"A2rsvUBm\",\"subtitle\":\"qUzmwaIn\"};","import React, { memo } from '../../../lib/teact/teact';\n\nimport type { ApiChat, ApiMessage, ApiPeer } from '../../../api/types';\n\nimport { getMessageSenderName } from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\nimport renderText from '../../common/helpers/renderText';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Avatar from '../../common/Avatar';\nimport FullNameTitle from '../../common/FullNameTitle';\nimport LastMessageMeta from '../../common/LastMessageMeta';\nimport MessageSummary from '../../common/MessageSummary';\n\nimport styles from './MiddleSearchResult.module.scss';\n\ntype OwnProps = {\n  isActive?: boolean;\n  message: ApiMessage;\n  senderPeer?: ApiPeer;\n  messageChat?: ApiChat;\n  shouldShowChat?: boolean;\n  query?: string;\n  className?: string;\n  onClick: (message: ApiMessage) => void;\n};\n\nconst TRUNCATE_LENGTH = 200;\n\nconst MiddleSearchResult = ({\n  isActive,\n  message,\n  senderPeer,\n  messageChat,\n  shouldShowChat,\n  query,\n  className,\n  onClick,\n}: OwnProps) => {\n  const lang = useOldLang();\n  const hiddenForwardTitle = message.forwardInfo?.hiddenUserName;\n\n  const peer = shouldShowChat ? messageChat : senderPeer;\n\n  const senderName = shouldShowChat ? getMessageSenderName(lang, message.chatId, senderPeer) : undefined;\n\n  const handleClick = useLastCallback(() => {\n    onClick(message);\n  });\n\n  return (\n    <div\n      role=\"button\"\n      tabIndex={0}\n      className={buildClassName(styles.root, isActive && styles.active, className)}\n      onClick={handleClick}\n    >\n      <Avatar\n        className={styles.avatar}\n        peer={peer}\n        text={hiddenForwardTitle}\n        size=\"medium\"\n      />\n      <div className={styles.info}>\n        <div className={styles.topRow}>\n          {(peer && <FullNameTitle peer={peer} withEmojiStatus />) || hiddenForwardTitle}\n          <LastMessageMeta className={styles.meta} message={message} />\n        </div>\n        <div className={styles.subtitle} dir=\"auto\">\n          {senderName && (\n            <>\n              <span className=\"sender-name\">{renderText(senderName)}</span>\n              <span className=\"colon\">:</span>\n            </>\n          )}\n          <MessageSummary message={message} highlight={query} truncateLength={TRUNCATE_LENGTH} />\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(MiddleSearchResult);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"FTMljUuX\",\"header\":\"OvmjSMwA\",\"active\":\"DEIUzXQd\",\"avatar\":\"mp1PmoMq\",\"input\":\"z2K8Q7ib\",\"mobile\":\"u0fb78AA\",\"focused\":\"dqF8dYNx\",\"withDropdown\":\"AqhBggrp\",\"adaptSearchBorders\":\"Q9RZQaTu\",\"dropdown\":\"MFGvbICO\",\"dropdownHidden\":\"Alee0CKy\",\"results\":\"RtfTOE72\",\"placeholder\":\"O1HoZFge\",\"separator\":\"_Yy43QLl\",\"savedTags\":\"BcvAfv1E\",\"wrap\":\"JkESCST6\",\"searchTags\":\"rO3pH3LI\",\"savedSearchTag\":\"qA4gov4D\",\"hash\":\"q5NOmUAM\",\"searchTypes\":\"rVYZG__K\",\"searchType\":\"nE1Xwoo7\",\"selectedType\":\"i29dP8iT\",\"footer\":\"jyS1l9yn\",\"keyboard-visible\":\"ao05jKHW\",\"keyboardVisible\":\"ao05jKHW\",\"counter\":\"NmmL_cO3\",\"mobileNavigation\":\"dLO1hlHU\",\"navigationButton\":\"Z4vLAlsu\",\"navigationDisabled\":\"IqA7R2xO\",\"jumpIn\":\"n9kXbTu6\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useLayoutEffect,\n  useMemo,\n  useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../../global';\n\nimport type {\n  ApiChat, ApiMessage, ApiReaction, ApiReactionKey, ApiSavedReactionTag,\n} from '../../../api/types';\nimport type {\n  CustomPeer, MiddleSearchParams, MiddleSearchType, ThreadId,\n} from '../../../types';\n\nimport { ANONYMOUS_USER_ID, REPLIES_USER_ID } from '../../../config';\nimport { requestMeasure, requestMutation, requestNextMutation } from '../../../lib/fasterdom/fasterdom';\nimport { getIsSavedDialog, getReactionKey, isSameReaction } from '../../../global/helpers';\nimport {\n  selectChat,\n  selectChatMessage,\n  selectCurrentMessageList,\n  selectCurrentMiddleSearch,\n  selectForwardedSender,\n  selectIsChatWithSelf,\n  selectIsCurrentUserPremium,\n  selectSender,\n  selectTabState,\n} from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport captureEscKeyListener from '../../../util/captureEscKeyListener';\nimport { getDayStartAt } from '../../../util/dates/dateFormat';\nimport focusEditableElement from '../../../util/focusEditableElement';\nimport { getSearchResultKey, parseSearchResultKey, type SearchResultKey } from '../../../util/keys/searchResultKey';\nimport { MEMO_EMPTY_ARRAY } from '../../../util/memo';\nimport { debounce, fastRaf } from '../../../util/schedulers';\nimport { IS_IOS } from '../../../util/windowEnvironment';\n\nimport { useClickOutside } from '../../../hooks/events/useOutsideClick';\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useEffectWithPrevDeps from '../../../hooks/useEffectWithPrevDeps';\nimport useFlag from '../../../hooks/useFlag';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useInfiniteScroll from '../../../hooks/useInfiniteScroll';\nimport useKeyboardListNavigation from '../../../hooks/useKeyboardListNavigation';\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Avatar from '../../common/Avatar';\nimport Icon from '../../common/icons/Icon';\nimport PickerSelectedItem from '../../common/pickers/PickerSelectedItem';\nimport Button from '../../ui/Button';\nimport InfiniteScroll from '../../ui/InfiniteScroll';\nimport SearchInput from '../../ui/SearchInput';\nimport SavedTagButton from '../message/reactions/SavedTagButton';\nimport MiddleSearchResult from './MiddleSearchResult';\n\nimport styles from './MiddleSearch.module.scss';\n\nexport type OwnProps = {\n  isActive: boolean;\n};\n\ntype StateProps = {\n  isActive?: boolean;\n  chat?: ApiChat;\n  threadId?: ThreadId;\n  requestedQuery?: string;\n  savedTags?: Record<ApiReactionKey, ApiSavedReactionTag>;\n  savedTag?: ApiReaction;\n  totalCount?: number;\n  lastSearchQuery?: string;\n  foundIds?: SearchResultKey[];\n  isHistoryCalendarOpen?: boolean;\n  isCurrentUserPremium?: boolean;\n  isSavedMessages?: boolean;\n  fetchingQuery?: string;\n  isHashtagQuery?: boolean;\n  searchType?: MiddleSearchType;\n  currentUserId?: string;\n};\n\nconst CHANNELS_PEER: CustomPeer = {\n  isCustomPeer: true,\n  avatarIcon: 'channel-filled',\n  titleKey: 'SearchPublicPosts',\n};\nconst FOCUSED_SEARCH_TRIGGER_OFFSET = 5;\nconst HIDE_TIMEOUT = 200;\nconst RESULT_ITEM_CLASS_NAME = 'MiddleSearchResult';\n\nconst runDebouncedForSearch = debounce((cb) => cb(), 200, false);\n\nconst MiddleSearch: FC<StateProps> = ({\n  isActive,\n  chat,\n  threadId,\n  requestedQuery,\n  savedTags,\n  savedTag,\n  totalCount,\n  lastSearchQuery,\n  foundIds,\n  isHistoryCalendarOpen,\n  isCurrentUserPremium,\n  isSavedMessages,\n  fetchingQuery,\n  isHashtagQuery,\n  searchType = 'chat',\n  currentUserId,\n}) => {\n  const {\n    updateMiddleSearch,\n    resetMiddleSearch,\n    performMiddleSearch,\n    focusMessage,\n    closeMiddleSearch,\n    openHistoryCalendar,\n    openPremiumModal,\n    loadSavedReactionTags,\n  } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const inputRef = useRef<HTMLInputElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n\n  const { isMobile } = useAppLayout();\n  const oldLang = useOldLang();\n  const lang = useLang();\n\n  const [query, setQuery] = useState(requestedQuery || '');\n  const [focusedIndex, setFocusedIndex] = useState(0);\n  const canFocusNewer = foundIds && focusedIndex > 0;\n  const canFocusOlder = foundIds && focusedIndex < foundIds.length - 1;\n\n  const [isFullyHidden, setIsFullyHidden] = useState(!isActive);\n  const hiddenTimerRef = useRef<number>();\n  const maybeLongPressActiveRef = useRef(true);\n\n  const [isFocused, markFocused, markBlurred] = useFlag();\n  const [isViewAsList, setIsViewAsList] = useState(true);\n  const [isLoading, setIsLoading] = useState(false);\n\n  const handleClickOutside = useLastCallback((event: MouseEvent) => {\n    if (maybeLongPressActiveRef.current) return;\n    // Ignore clicks inside modals\n    if ((event.target as HTMLElement).closest('.Modal')) return;\n    markBlurred();\n  });\n  useClickOutside([ref], handleClickOutside);\n\n  const hasResultsContainer = Boolean((query && foundIds) || isHashtagQuery);\n  const isOnlyHash = isHashtagQuery && !query;\n  const areResultsEmpty = Boolean(query && foundIds && !foundIds.length && !isLoading && !isOnlyHash);\n  const hasResultsPlaceholder = areResultsEmpty || isOnlyHash;\n  const isNonFocusedDropdownForced = searchType === 'myChats' || searchType === 'channels';\n  const hasResultsDropdown = isActive && (isViewAsList || !isMobile) && (isFocused || isNonFocusedDropdownForced)\n    && Boolean(\n      hasResultsContainer || hasResultsPlaceholder || savedTags,\n    );\n\n  const hasQueryData = Boolean((query && !isOnlyHash) || savedTag);\n  const hasNavigationButtons = searchType === 'chat' && Boolean(foundIds?.length);\n\n  const handleClose = useLastCallback(() => {\n    closeMiddleSearch();\n  });\n\n  const focusInput = useLastCallback(() => {\n    requestMeasure(() => {\n      inputRef.current?.focus();\n    });\n  });\n\n  const blurInput = useLastCallback(() => {\n    inputRef.current?.blur();\n  });\n\n  // Fix for iOS keyboard\n  useEffect(() => {\n    const { visualViewport } = window;\n    if (!visualViewport) {\n      return undefined;\n    }\n\n    const mainEl = document.getElementById('Main') as HTMLDivElement;\n    const handleResize = () => {\n      const { activeElement } = document;\n      if (activeElement && (activeElement === inputRef.current)) {\n        const { pageTop, height } = visualViewport;\n\n        requestMutation(() => {\n          mainEl.style.transform = `translateY(${pageTop}px)`;\n          mainEl.style.height = `${height}px`;\n          document.documentElement.scrollTop = pageTop;\n        });\n      } else {\n        requestMutation(() => {\n          mainEl.style.transform = '';\n          mainEl.style.height = '';\n        });\n      }\n    };\n\n    visualViewport.addEventListener('resize', handleResize);\n\n    return () => {\n      visualViewport.removeEventListener('resize', handleResize);\n    };\n  }, []);\n\n  // Focus message\n  useEffect(() => {\n    if (foundIds?.length) {\n      if (searchType === 'chat') {\n        const [chatId, messageId] = parseSearchResultKey(foundIds[0]);\n        focusMessage({ chatId, messageId, threadId });\n      }\n      setFocusedIndex(0);\n    } else {\n      setFocusedIndex(-1);\n    }\n  }, [searchType, focusMessage, foundIds, threadId]);\n\n  // Disable native up/down buttons on iOS\n  useLayoutEffect(() => {\n    if (!IS_IOS) return;\n\n    Array.from(document.querySelectorAll<HTMLInputElement>('input')).forEach((input) => {\n      input.disabled = Boolean(isActive && input !== inputRef.current);\n    });\n  }, [isActive]);\n\n  // Blur on exit\n  useEffect(() => {\n    if (!isActive) {\n      inputRef.current!.blur();\n      setIsViewAsList(true);\n      setFocusedIndex(0);\n      setQuery('');\n      hiddenTimerRef.current = window.setTimeout(() => setIsFullyHidden(true), HIDE_TIMEOUT);\n    } else {\n      setIsFullyHidden(false);\n      clearTimeout(hiddenTimerRef.current);\n    }\n  }, [isActive]);\n\n  useEffect(() => {\n    if (!requestedQuery || !chat?.id) return;\n    setQuery(requestedQuery);\n    updateMiddleSearch({ chatId: chat.id, threadId, update: { requestedQuery: undefined } });\n    setIsLoading(true);\n\n    requestNextMutation(() => {\n      const input = inputRef.current;\n      if (!input) return;\n      focusEditableElement(input, true, true);\n      markFocused();\n    });\n  }, [chat?.id, requestedQuery, threadId]);\n\n  useEffectWithPrevDeps(([prevIsActive]) => {\n    if (isActive !== prevIsActive && !query && lastSearchQuery) {\n      setQuery(lastSearchQuery); // Restore query when returning back\n    }\n  }, [isActive, lastSearchQuery, query]);\n\n  useEffectWithPrevDeps(([prevIsCalendarOpen]) => {\n    if (!isActive || prevIsCalendarOpen === isHistoryCalendarOpen) return;\n    if (isHistoryCalendarOpen) {\n      blurInput();\n      markBlurred();\n    } else {\n      focusInput();\n    }\n  }, [isHistoryCalendarOpen, isActive]);\n\n  const handleReset = useLastCallback(() => {\n    if (!query?.length && !savedTag) {\n      handleClose();\n      return;\n    }\n\n    setQuery('');\n    setIsLoading(false);\n    resetMiddleSearch();\n    focusInput();\n  });\n\n  useEffect(() => (isActive ? captureEscKeyListener(handleReset) : undefined), [isActive, handleClose]);\n\n  const savedTagsArray = useMemo(() => {\n    if (!savedTags) return undefined;\n    return Object.values(savedTags);\n  }, [savedTags]);\n\n  const hasSavedTags = Boolean(savedTagsArray?.length);\n  const areSavedTagsDisabled = hasSavedTags && !isCurrentUserPremium;\n\n  useEffect(() => {\n    if (isSavedMessages && isActive) loadSavedReactionTags();\n  }, [isSavedMessages, isActive]);\n\n  const handleSearch = useLastCallback(() => {\n    const chatId = chat?.id;\n    if (!chatId) {\n      return;\n    }\n\n    runDebouncedForSearch(() => performMiddleSearch({ chatId, threadId, query }));\n  });\n\n  const handleQueryChange = useLastCallback((newQuery: string) => {\n    if (newQuery.startsWith('#') && !isHashtagQuery) {\n      updateMiddleSearch({ chatId: chat!.id, threadId, update: { isHashtag: true } });\n      setQuery(newQuery.slice(1));\n      handleSearch();\n      return;\n    }\n\n    setQuery(newQuery);\n\n    if (!newQuery) {\n      setIsLoading(false);\n      resetMiddleSearch();\n    }\n  });\n\n  useEffect(() => {\n    if (query) {\n      handleSearch();\n    }\n  }, [query]);\n\n  useEffect(() => {\n    setIsLoading(Boolean(fetchingQuery));\n  }, [fetchingQuery]);\n\n  useEffect(() => {\n    if (!foundIds?.length) return;\n    const isClose = foundIds.length - focusedIndex < FOCUSED_SEARCH_TRIGGER_OFFSET;\n    if (isClose) {\n      handleSearch();\n    }\n  }, [focusedIndex, foundIds?.length]);\n\n  useEffect(() => {\n    if (!isActive) return undefined;\n\n    maybeLongPressActiveRef.current = true;\n\n    function focus() {\n      inputRef.current?.focus();\n      markFocused();\n\n      fastRaf(() => {\n        maybeLongPressActiveRef.current = false;\n      });\n    }\n\n    function removeListeners() {\n      window.removeEventListener('touchend', focus);\n      window.removeEventListener('mouseup', focus);\n\n      fastRaf(() => {\n        maybeLongPressActiveRef.current = false;\n      });\n    }\n\n    window.addEventListener('touchend', focus);\n    window.addEventListener('mouseup', focus);\n\n    window.addEventListener('touchstart', removeListeners);\n    window.addEventListener('mousedown', removeListeners);\n\n    return () => {\n      removeListeners();\n      window.removeEventListener('touchstart', removeListeners);\n      window.removeEventListener('mousedown', removeListeners);\n    };\n  }, [isActive]);\n\n  useHistoryBack({\n    isActive,\n    onBack: handleClose,\n  });\n\n  const [viewportIds, getMore, viewportOffset = 0] = useInfiniteScroll(handleSearch, foundIds);\n\n  const viewportResults = useMemo(() => {\n    if ((!query && !savedTag) || !viewportIds?.length) {\n      return MEMO_EMPTY_ARRAY;\n    }\n    const global = getGlobal();\n\n    return viewportIds.map((searchResultKey) => {\n      const [chatId, id] = parseSearchResultKey(searchResultKey);\n      const message = selectChatMessage(global, chatId, id);\n      if (!message) {\n        return undefined;\n      }\n\n      const originalSender = (isSavedMessages || chatId === REPLIES_USER_ID || chatId === ANONYMOUS_USER_ID)\n        ? selectForwardedSender(global, message) : undefined;\n      const messageSender = selectSender(global, message);\n      const messageChat = selectChat(global, message.chatId);\n\n      const senderPeer = originalSender || messageSender;\n\n      return {\n        searchResultKey,\n        message,\n        messageChat,\n        senderPeer,\n      };\n    }).filter(Boolean);\n  }, [query, savedTag, viewportIds, isSavedMessages]);\n\n  const handleMessageClick = useLastCallback((message: ApiMessage) => {\n    const searchResultKey = getSearchResultKey(message);\n    const index = foundIds?.indexOf(searchResultKey) || 0;\n    const realIndex = index + viewportOffset;\n    setFocusedIndex(realIndex);\n\n    if (searchType === 'chat') {\n      setIsViewAsList(false);\n    }\n\n    focusMessage({\n      chatId: message.chatId,\n      messageId: message.id,\n      threadId: !isHashtagQuery ? threadId : undefined,\n    });\n\n    markBlurred();\n  });\n\n  const handleTriggerViewStyle = useLastCallback(() => {\n    setIsViewAsList((prev) => !prev);\n    markFocused();\n  });\n\n  const handleKeyDown = useKeyboardListNavigation(containerRef, hasResultsContainer, (index) => {\n    const foundResult = viewportResults?.[index === -1 ? 0 : index];\n    if (foundResult) {\n      handleMessageClick(foundResult.message);\n      setFocusedIndex(index + viewportOffset);\n    }\n  }, `.${RESULT_ITEM_CLASS_NAME}`, true);\n\n  const updateSearchParams = useLastCallback((update: Partial<MiddleSearchParams>) => {\n    updateMiddleSearch({ chatId: chat!.id, threadId, update });\n\n    handleSearch();\n  });\n\n  const activateSearchTag = useLastCallback((tag: ApiReaction) => {\n    if (areSavedTagsDisabled) {\n      openPremiumModal({\n        initialSection: 'saved_tags',\n      });\n      return;\n    }\n\n    updateSearchParams({ savedTag: tag });\n  });\n\n  const removeSearchSavedTag = useLastCallback(() => {\n    updateSearchParams({ savedTag: undefined });\n  });\n\n  const handleDeleteTag = useLastCallback(() => {\n    if (isHashtagQuery) {\n      updateSearchParams({ isHashtag: false });\n      return;\n    }\n\n    if (savedTag) {\n      removeSearchSavedTag();\n    }\n  });\n\n  const handleChangeSearchType = useLastCallback((type: MiddleSearchType) => {\n    updateSearchParams({ type });\n    setIsViewAsList(true);\n  });\n\n  const handleFocusOlder = useLastCallback(() => {\n    if (searchType !== 'chat') return;\n    markBlurred();\n    blurInput();\n    if (foundIds) {\n      const newFocusIndex = focusedIndex + 1;\n      const [chatId, messageId] = parseSearchResultKey(foundIds[newFocusIndex]);\n      focusMessage({ chatId, messageId, threadId });\n      setFocusedIndex(newFocusIndex);\n    }\n  });\n\n  const handleFocusNewer = useLastCallback(() => {\n    if (searchType !== 'chat') return;\n    markBlurred();\n    blurInput();\n    if (foundIds) {\n      const newFocusIndex = focusedIndex - 1;\n      const [chatId, messageId] = parseSearchResultKey(foundIds[newFocusIndex]);\n      focusMessage({ chatId, messageId, threadId });\n      setFocusedIndex(newFocusIndex);\n    }\n  });\n\n  function renderTypeTag(type: MiddleSearchType, isForTag?: boolean) {\n    const isSelected = !isForTag && searchType === type;\n    switch (type) {\n      case 'chat':\n        return (\n          <PickerSelectedItem\n            className={buildClassName(styles.searchType, isSelected && styles.selectedType)}\n            fluid\n            peerId={chat?.id}\n            title={oldLang('SearchThisChat')}\n            clickArg=\"chat\"\n            onClick={isForTag ? handleDeleteTag : handleChangeSearchType}\n          />\n        );\n      case 'myChats':\n        return (\n          <PickerSelectedItem\n            className={buildClassName(styles.searchType, isSelected && styles.selectedType)}\n            fluid\n            peerId={currentUserId}\n            forceShowSelf\n            title={oldLang('SearchMyMessages')}\n            clickArg=\"myChats\"\n            onClick={isForTag ? handleDeleteTag : handleChangeSearchType}\n          />\n        );\n      case 'channels':\n        return (\n          <PickerSelectedItem\n            className={buildClassName(styles.searchType, isSelected && styles.selectedType)}\n            fluid\n            customPeer={CHANNELS_PEER}\n            title={oldLang('SearchPublicPosts')}\n            clickArg=\"channels\"\n            onClick={isForTag ? handleDeleteTag : handleChangeSearchType}\n          />\n        );\n    }\n    return undefined;\n  }\n\n  function renderDropdown() {\n    return (\n      <div className={buildClassName(styles.dropdown, !hasResultsDropdown && styles.dropdownHidden)}>\n        {!isMobile && <div className={styles.separator} />}\n        {hasSavedTags && !isHashtagQuery && (\n          <div\n            className={buildClassName(\n              styles.savedTags,\n              !isMobile && styles.wrap,\n              'no-scrollbar',\n            )}\n          >\n            {savedTagsArray.map((tag) => {\n              const isChosen = isSameReaction(tag.reaction, savedTag);\n              return (\n                <SavedTagButton\n                  containerId=\"local-search\"\n                  key={getReactionKey(tag.reaction)}\n                  reaction={tag.reaction}\n                  tag={tag}\n                  withCount\n                  isDisabled={areSavedTagsDisabled}\n                  isChosen={isChosen}\n                  onClick={isChosen ? removeSearchSavedTag : activateSearchTag}\n                />\n              );\n            })}\n          </div>\n        )}\n        {isHashtagQuery && (\n          <div\n            className={buildClassName(styles.searchTypes, 'no-scrollbar')}\n          >\n            {renderTypeTag('chat')}\n            {renderTypeTag('myChats')}\n            {renderTypeTag('channels')}\n          </div>\n        )}\n        {hasResultsContainer && (\n          <InfiniteScroll\n            ref={containerRef}\n            className={buildClassName(styles.results, 'custom-scroll')}\n            items={viewportResults}\n            preloadBackwards={0}\n            onLoadMore={getMore}\n            onKeyDown={handleKeyDown}\n          >\n            {areResultsEmpty && (\n              <span key=\"nothing\" className={styles.placeholder}>\n                {oldLang('NoResultFoundFor', query)}\n              </span>\n            )}\n            {isOnlyHash && (\n              <span key=\"enterhash\" className={styles.placeholder}>\n                {oldLang('HashtagSearchPlaceholder')}\n              </span>\n            )}\n            {viewportResults?.map(({\n              message, senderPeer, messageChat, searchResultKey,\n            }, i) => (\n              <MiddleSearchResult\n                key={searchResultKey}\n                teactOrderKey={-message.date}\n                className={RESULT_ITEM_CLASS_NAME}\n                query={query}\n                message={message}\n                senderPeer={senderPeer}\n                messageChat={messageChat}\n                shouldShowChat={isHashtagQuery}\n                isActive={focusedIndex - viewportOffset === i}\n                onClick={handleMessageClick}\n              />\n            ))}\n          </InfiniteScroll>\n        )}\n      </div>\n    );\n  }\n\n  return (\n    <div\n      id=\"MiddleSearch\"\n      className={buildClassName(\n        styles.root,\n        isActive && styles.active,\n        !isActive && isFullyHidden && 'visually-hidden', // `display: none` would prevent focus on iOS\n        isFocused && styles.focused,\n        isMobile && styles.mobile,\n      )}\n      ref={ref}\n    >\n      <div className={styles.header}>\n        {!isMobile && (\n          <Avatar\n            className={styles.avatar}\n            peer={chat}\n            size=\"medium\"\n            isSavedMessages={isSavedMessages}\n          />\n        )}\n        <SearchInput\n          ref={inputRef}\n          value={query}\n          className={buildClassName(\n            styles.input,\n            hasResultsDropdown && styles.withDropdown,\n            hasResultsDropdown && !isMobile && styles.adaptSearchBorders,\n          )}\n          canClose={!isMobile}\n          isLoading={isLoading}\n          resultsItemSelector={`.${styles.results} .${RESULT_ITEM_CLASS_NAME}`}\n          hasUpButton={hasNavigationButtons && !isMobile}\n          hasDownButton={hasNavigationButtons && !isMobile}\n          placeholder={isHashtagQuery ? oldLang('SearchHashtagsHint') : oldLang('Search')}\n          teactExperimentControlled\n          onChange={handleQueryChange}\n          onStartBackspace={handleDeleteTag}\n          onReset={handleReset}\n          withBackIcon={isMobile}\n          onFocus={markFocused}\n          focused={isFocused}\n          onUpClick={canFocusOlder ? handleFocusOlder : undefined}\n          onDownClick={canFocusNewer ? handleFocusNewer : undefined}\n        >\n          <div className={styles.searchTags}>\n            {savedTag && (\n              <SavedTagButton\n                containerId=\"local-search-tags\"\n                className={styles.savedSearchTag}\n                reaction={savedTag}\n                tag={savedTags![getReactionKey(savedTag)]}\n                onClick={removeSearchSavedTag}\n              />\n            )}\n            {isHashtagQuery && <div className={styles.hash}>#</div>}\n          </div>\n          {!isMobile && renderDropdown()}\n        </SearchInput>\n        {!isMobile && (\n          <div className={styles.icons}>\n            <Button\n              round\n              size=\"smaller\"\n              color=\"translucent\"\n              // eslint-disable-next-line react/jsx-no-bind\n              onClick={() => openHistoryCalendar({ selectedAt: getDayStartAt(Date.now()) })}\n              ariaLabel={oldLang('JumpToDate')}\n            >\n              <Icon name=\"calendar\" />\n            </Button>\n          </div>\n        )}\n      </div>\n      {isMobile && renderDropdown()}\n      {isMobile && (\n        <div className={styles.footer}>\n          <Button\n            round\n            size=\"smaller\"\n            color=\"translucent\"\n            // eslint-disable-next-line react/jsx-no-bind\n            onClick={() => openHistoryCalendar({ selectedAt: getDayStartAt(Date.now()) })}\n            ariaLabel={oldLang('JumpToDate')}\n          >\n            <Icon name=\"calendar\" />\n          </Button>\n          <div className={styles.counter}>\n            {hasQueryData && (\n              foundIds?.length ? (\n                oldLang('Of', [focusedIndex + 1, totalCount])\n              ) : foundIds && !foundIds.length && (\n                oldLang('NoResult')\n              )\n            )}\n          </div>\n          {searchType === 'chat' && Boolean(foundIds?.length) && (\n            <Button\n              className={styles.viewStyle}\n              size=\"smaller\"\n              isText\n              fluid\n              noForcedUpperCase\n              onClick={handleTriggerViewStyle}\n            >\n              {isViewAsList ? oldLang('SearchAsChat') : oldLang('SearchAsList')}\n            </Button>\n          )}\n          {hasNavigationButtons && !hasResultsDropdown && (\n            <div className={styles.mobileNavigation}>\n              <Button\n                className={buildClassName(styles.navigationButton, !canFocusOlder && styles.navigationDisabled)}\n                round\n                size=\"smaller\"\n                color=\"secondary\"\n                onClick={handleFocusOlder}\n                nonInteractive={!canFocusOlder}\n                ariaLabel={lang('AriaSearchOlderResult')}\n              >\n                <Icon name=\"up\" />\n              </Button>\n              <Button\n                className={buildClassName(styles.navigationButton, !canFocusNewer && styles.navigationDisabled)}\n                round\n                size=\"smaller\"\n                color=\"secondary\"\n                onClick={handleFocusNewer}\n                nonInteractive={!canFocusNewer}\n                ariaLabel={lang('AriaSearchNewerResult')}\n              >\n                <Icon name=\"down\" />\n              </Button>\n            </div>\n          )}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const currentMessageList = selectCurrentMessageList(global);\n    if (!currentMessageList) {\n      return {};\n    }\n    const { chatId, threadId } = currentMessageList;\n\n    const chat = selectChat(global, chatId);\n    if (!chat) {\n      return {};\n    }\n\n    const {\n      requestedQuery, savedTag, results, fetchingQuery, isHashtag, type,\n    } = selectCurrentMiddleSearch(global) || {};\n    const { totalCount, foundIds, query: lastSearchQuery } = results || {};\n\n    const currentUserId = global.currentUserId;\n    const isSavedMessages = selectIsChatWithSelf(global, chatId);\n    const isSavedDialog = getIsSavedDialog(chatId, threadId, currentUserId);\n\n    const savedTags = isSavedMessages && !isSavedDialog ? global.savedReactionTags?.byKey : undefined;\n\n    return {\n      chat,\n      requestedQuery,\n      totalCount,\n      threadId,\n      foundIds,\n      isHistoryCalendarOpen: Boolean(selectTabState(global).historyCalendarSelectedAt),\n      savedTags,\n      savedTag,\n      isCurrentUserPremium: selectIsCurrentUserPremium(global),\n      isSavedMessages,\n      fetchingQuery,\n      isHashtagQuery: isHashtag,\n      currentUserId,\n      searchType: type,\n      lastSearchQuery,\n    };\n  },\n)(MiddleSearch));\n","import { useEffect } from '../../lib/teact/teact';\n\nimport useLastCallback from '../useLastCallback';\n\nexport function useClickOutside(\n  refs: React.RefObject<HTMLElement>[], callback: (event: MouseEvent) => void,\n) {\n  const handleClickOutside = useLastCallback((event: MouseEvent) => {\n    const clickedOutside = refs.every((ref) => {\n      return ref.current && !ref.current.contains(event.target as Node);\n    });\n\n    if (clickedOutside) callback(event);\n  });\n\n  useEffect(() => {\n    document.addEventListener('click', handleClickOutside);\n    return () => {\n      document.removeEventListener('click', handleClickOutside);\n    };\n  }, [handleClickOutside]);\n}\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo,\n  useRef,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiChat, ApiSticker, ApiStickerSet } from '../../../api/types';\nimport type { StickerSetOrReactionsSetOrRecent, ThreadId } from '../../../types';\n\nimport {\n  CHAT_STICKER_SET_ID,\n  EFFECT_EMOJIS_SET_ID,\n  EFFECT_STICKERS_SET_ID,\n  FAVORITE_SYMBOL_SET_ID,\n  RECENT_SYMBOL_SET_ID,\n  SLIDE_TRANSITION_DURATION,\n  STICKER_PICKER_MAX_SHARED_COVERS,\n  STICKER_SIZE_PICKER_HEADER,\n} from '../../../config';\nimport { isUserId } from '../../../global/helpers';\nimport {\n  selectChat, selectChatFullInfo, selectIsChatWithSelf, selectIsCurrentUserPremium, selectShouldLoopStickers,\n} from '../../../global/selectors';\nimport animateHorizontalScroll from '../../../util/animateHorizontalScroll';\nimport buildClassName from '../../../util/buildClassName';\nimport { pickTruthy } from '../../../util/iteratees';\nimport { MEMO_EMPTY_ARRAY } from '../../../util/memo';\nimport { IS_TOUCH_ENV } from '../../../util/windowEnvironment';\nimport { REM } from '../../common/helpers/mediaDimensions';\n\nimport useHorizontalScroll from '../../../hooks/useHorizontalScroll';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useScrolledState from '../../../hooks/useScrolledState';\nimport useSendMessageAction from '../../../hooks/useSendMessageAction';\nimport { useStickerPickerObservers } from '../../common/hooks/useStickerPickerObservers';\nimport useAsyncRendering from '../../right/hooks/useAsyncRendering';\n\nimport Avatar from '../../common/Avatar';\nimport StickerButton from '../../common/StickerButton';\nimport StickerSet from '../../common/StickerSet';\nimport Button from '../../ui/Button';\nimport Loading from '../../ui/Loading';\nimport StickerSetCover from './StickerSetCover';\n\nimport styles from './StickerPicker.module.scss';\n\ntype OwnProps = {\n  chatId: string;\n  threadId?: ThreadId;\n  className: string;\n  isHidden?: boolean;\n  isTranslucent?: boolean;\n  loadAndPlay: boolean;\n  canSendStickers?: boolean;\n  noContextMenus?: boolean;\n  idPrefix: string;\n  onStickerSelect: (\n    sticker: ApiSticker, isSilent?: boolean, shouldSchedule?: boolean, canUpdateStickerSetsOrder?: boolean,\n  ) => void;\n  isForEffects?: boolean;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  recentStickers: ApiSticker[];\n  favoriteStickers: ApiSticker[];\n  effectStickers?: ApiSticker[];\n  effectEmojis?: ApiSticker[];\n  stickerSetsById: Record<string, ApiStickerSet>;\n  chatStickerSetId?: string;\n  addedSetIds?: string[];\n  canAnimate?: boolean;\n  isSavedMessages?: boolean;\n  isCurrentUserPremium?: boolean;\n};\n\nconst HEADER_BUTTON_WIDTH = 2.5 * REM; // px (including margin)\n\nconst StickerPicker: FC<OwnProps & StateProps> = ({\n  chat,\n  threadId,\n  className,\n  isHidden,\n  isTranslucent,\n  loadAndPlay,\n  canSendStickers,\n  recentStickers,\n  favoriteStickers,\n  effectStickers,\n  effectEmojis,\n  addedSetIds,\n  stickerSetsById,\n  chatStickerSetId,\n  canAnimate,\n  isSavedMessages,\n  isCurrentUserPremium,\n  noContextMenus,\n  idPrefix,\n  onStickerSelect,\n  isForEffects,\n}) => {\n  const {\n    loadRecentStickers,\n    addRecentSticker,\n    unfaveSticker,\n    faveSticker,\n    removeRecentSticker,\n  } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const headerRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const sharedCanvasRef = useRef<HTMLCanvasElement>(null);\n\n  const {\n    handleScroll: handleContentScroll,\n    isAtBeginning: shouldHideTopBorder,\n  } = useScrolledState();\n\n  const sendMessageAction = useSendMessageAction(chat?.id, threadId);\n\n  const prefix = `${idPrefix}-sticker-set`;\n  const {\n    activeSetIndex,\n    observeIntersectionForSet,\n    observeIntersectionForPlayingItems,\n    observeIntersectionForShowingItems,\n    observeIntersectionForCovers,\n    selectStickerSet,\n  } = useStickerPickerObservers(containerRef, headerRef, prefix, isHidden);\n\n  const lang = useOldLang();\n\n  const areAddedLoaded = Boolean(addedSetIds);\n\n  const allSets = useMemo(() => {\n    if (isForEffects && effectStickers) {\n      const effectSets: StickerSetOrReactionsSetOrRecent[] = [];\n      if (effectEmojis?.length) {\n        effectSets.push({\n          id: EFFECT_EMOJIS_SET_ID,\n          accessHash: '0',\n          title: '',\n          stickers: effectEmojis,\n          count: effectEmojis.length,\n          isEmoji: true,\n        });\n      }\n      if (effectStickers?.length) {\n        effectSets.push({\n          id: EFFECT_STICKERS_SET_ID,\n          accessHash: '0',\n          title: lang('StickerEffects'),\n          stickers: effectStickers,\n          count: effectStickers.length,\n        });\n      }\n      return effectSets;\n    }\n\n    if (!addedSetIds) {\n      return MEMO_EMPTY_ARRAY;\n    }\n\n    const defaultSets = [];\n\n    if (favoriteStickers.length) {\n      defaultSets.push({\n        id: FAVORITE_SYMBOL_SET_ID,\n        accessHash: '0',\n        title: lang('FavoriteStickers'),\n        stickers: favoriteStickers,\n        count: favoriteStickers.length,\n      });\n    }\n\n    if (recentStickers.length) {\n      defaultSets.push({\n        id: RECENT_SYMBOL_SET_ID,\n        accessHash: '0',\n        title: lang('RecentStickers'),\n        stickers: recentStickers,\n        count: recentStickers.length,\n      });\n    }\n\n    const userSetIds = [...(addedSetIds || [])];\n    if (chatStickerSetId) {\n      userSetIds.unshift(chatStickerSetId);\n    }\n\n    const existingAddedSetIds = Object.values(pickTruthy(stickerSetsById, userSetIds));\n\n    return [\n      ...defaultSets,\n      ...existingAddedSetIds,\n    ];\n  }, [\n    addedSetIds,\n    stickerSetsById,\n    favoriteStickers,\n    recentStickers,\n    chatStickerSetId,\n    lang,\n    effectStickers,\n    isForEffects,\n    effectEmojis,\n  ]);\n\n  const noPopulatedSets = useMemo(() => (\n    areAddedLoaded\n    && allSets.filter((set) => set.stickers?.length).length === 0\n  ), [allSets, areAddedLoaded]);\n\n  useEffect(() => {\n    if (!loadAndPlay) return;\n    loadRecentStickers();\n    if (!canSendStickers) return;\n    sendMessageAction({ type: 'chooseSticker' });\n  }, [canSendStickers, loadAndPlay, loadRecentStickers, sendMessageAction]);\n\n  const canRenderContents = useAsyncRendering([], SLIDE_TRANSITION_DURATION);\n  const shouldRenderContents = areAddedLoaded && canRenderContents\n  && !noPopulatedSets && (canSendStickers || isForEffects);\n\n  useHorizontalScroll(headerRef, !shouldRenderContents || !headerRef.current);\n\n  // Scroll container and header when active set changes\n  useEffect(() => {\n    if (!areAddedLoaded) {\n      return;\n    }\n\n    const header = headerRef.current;\n    if (!header) {\n      return;\n    }\n\n    const newLeft = activeSetIndex * HEADER_BUTTON_WIDTH - (header.offsetWidth / 2 - HEADER_BUTTON_WIDTH / 2);\n\n    animateHorizontalScroll(header, newLeft);\n  }, [areAddedLoaded, activeSetIndex]);\n\n  const handleStickerSelect = useLastCallback((sticker: ApiSticker, isSilent?: boolean, shouldSchedule?: boolean) => {\n    onStickerSelect(sticker, isSilent, shouldSchedule, true);\n    addRecentSticker({ sticker });\n  });\n\n  const handleStickerUnfave = useLastCallback((sticker: ApiSticker) => {\n    unfaveSticker({ sticker });\n  });\n\n  const handleStickerFave = useLastCallback((sticker: ApiSticker) => {\n    faveSticker({ sticker });\n  });\n\n  const handleMouseMove = useLastCallback(() => {\n    if (!canSendStickers) return;\n    sendMessageAction({ type: 'chooseSticker' });\n  });\n\n  const handleRemoveRecentSticker = useLastCallback((sticker: ApiSticker) => {\n    removeRecentSticker({ sticker });\n  });\n\n  if (!chat) return undefined;\n\n  function renderCover(stickerSet: StickerSetOrReactionsSetOrRecent, index: number) {\n    const firstSticker = stickerSet.stickers?.[0];\n    const buttonClassName = buildClassName(styles.stickerCover, index === activeSetIndex && styles.activated);\n    const withSharedCanvas = index < STICKER_PICKER_MAX_SHARED_COVERS;\n\n    if (stickerSet.id === RECENT_SYMBOL_SET_ID\n      || stickerSet.id === FAVORITE_SYMBOL_SET_ID\n      || stickerSet.id === CHAT_STICKER_SET_ID\n      || stickerSet.hasThumbnail\n      || !firstSticker\n    ) {\n      return (\n        <Button\n          key={stickerSet.id}\n          className={buttonClassName}\n          ariaLabel={stickerSet.title}\n          round\n          faded={stickerSet.id === RECENT_SYMBOL_SET_ID || stickerSet.id === FAVORITE_SYMBOL_SET_ID}\n          color=\"translucent\"\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => selectStickerSet(index)}\n        >\n          {stickerSet.id === RECENT_SYMBOL_SET_ID ? (\n            <i className=\"icon icon-recent\" />\n          ) : stickerSet.id === FAVORITE_SYMBOL_SET_ID ? (\n            <i className=\"icon icon-favorite\" />\n          ) : stickerSet.id === CHAT_STICKER_SET_ID ? (\n            <Avatar peer={chat} size=\"small\" />\n          ) : (\n            <StickerSetCover\n              stickerSet={stickerSet as ApiStickerSet}\n              noPlay={!canAnimate || !loadAndPlay}\n              observeIntersection={observeIntersectionForCovers}\n              sharedCanvasRef={withSharedCanvas ? sharedCanvasRef : undefined}\n              forcePlayback\n            />\n          )}\n        </Button>\n      );\n    } else {\n      return (\n        <StickerButton\n          key={stickerSet.id}\n          sticker={firstSticker}\n          size={STICKER_SIZE_PICKER_HEADER}\n          title={stickerSet.title}\n          className={buttonClassName}\n          noPlay={!canAnimate || !loadAndPlay}\n          observeIntersection={observeIntersectionForCovers}\n          noContextMenu\n          isCurrentUserPremium\n          sharedCanvasRef={withSharedCanvas ? sharedCanvasRef : undefined}\n          withTranslucentThumb={isTranslucent}\n          onClick={selectStickerSet}\n          clickArg={index}\n          forcePlayback\n        />\n      );\n    }\n  }\n\n  const fullClassName = buildClassName(styles.root, className);\n\n  if (!shouldRenderContents) {\n    return (\n      <div className={fullClassName}>\n        {!canSendStickers && !isForEffects ? (\n          <div className={styles.pickerDisabled}>{lang('ErrorSendRestrictedStickersAll')}</div>\n        ) : noPopulatedSets ? (\n          <div className={styles.pickerDisabled}>{lang('NoStickers')}</div>\n        ) : (\n          <Loading />\n        )}\n      </div>\n    );\n  }\n\n  const headerClassName = buildClassName(\n    styles.header,\n    'no-scrollbar',\n    !shouldHideTopBorder && styles.headerWithBorder,\n  );\n\n  return (\n    <div className={fullClassName}>\n      { !isForEffects && (\n        <div ref={headerRef} className={headerClassName}>\n          <div className=\"shared-canvas-container\">\n            <canvas ref={sharedCanvasRef} className=\"shared-canvas\" />\n            {allSets.map(renderCover)}\n          </div>\n        </div>\n      ) }\n      <div\n        ref={containerRef}\n        onMouseMove={handleMouseMove}\n        onScroll={handleContentScroll}\n        className={\n          buildClassName(\n            styles.main,\n            IS_TOUCH_ENV ? 'no-scrollbar' : 'custom-scroll',\n            !isForEffects && styles.hasHeader,\n          )\n        }\n      >\n        {allSets.map((stickerSet, i) => (\n          <StickerSet\n            key={stickerSet.id}\n            stickerSet={stickerSet}\n            loadAndPlay={Boolean(canAnimate && loadAndPlay)}\n            noContextMenus={noContextMenus}\n            index={i}\n            idPrefix={prefix}\n            observeIntersection={observeIntersectionForSet}\n            observeIntersectionForPlayingItems={observeIntersectionForPlayingItems}\n            observeIntersectionForShowingItems={observeIntersectionForShowingItems}\n            isNearActive={activeSetIndex >= i - 1 && activeSetIndex <= i + 1}\n            favoriteStickers={favoriteStickers}\n            isSavedMessages={isSavedMessages}\n            isCurrentUserPremium={isCurrentUserPremium}\n            isTranslucent={isTranslucent}\n            isChatStickerSet={stickerSet.id === chatStickerSetId}\n            onStickerSelect={handleStickerSelect}\n            onStickerUnfave={handleStickerUnfave}\n            onStickerFave={handleStickerFave}\n            onStickerRemoveRecent={handleRemoveRecentSticker}\n            forcePlayback\n            shouldHideHeader={stickerSet.id === EFFECT_EMOJIS_SET_ID}\n          />\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const {\n      setsById,\n      added,\n      recent,\n      favorite,\n      effect,\n    } = global.stickers;\n\n    const isSavedMessages = selectIsChatWithSelf(global, chatId);\n    const chat = selectChat(global, chatId);\n    const chatStickerSetId = !isUserId(chatId) ? selectChatFullInfo(global, chatId)?.stickerSet?.id : undefined;\n\n    return {\n      chat,\n      effectStickers: effect?.stickers,\n      effectEmojis: effect?.emojis,\n      recentStickers: recent.stickers,\n      favoriteStickers: favorite.stickers,\n      stickerSetsById: setsById,\n      addedSetIds: added.setIds,\n      canAnimate: selectShouldLoopStickers(global),\n      isSavedMessages,\n      isCurrentUserPremium: selectIsCurrentUserPremium(global),\n      chatStickerSetId,\n    };\n  },\n)(StickerPicker));\n","import type { FC } from '../../../../lib/teact/teact';\nimport React, {\n  memo,\n  useMemo, useRef,\n} from '../../../../lib/teact/teact';\nimport { withGlobal } from '../../../../global';\n\nimport type {\n  ApiAvailableReaction, ApiChatReactions, ApiMessage,\n  ApiReaction,\n} from '../../../../api/types';\n\nimport {\n  getReactionKey, sortReactions,\n} from '../../../../global/helpers';\nimport { selectChatFullInfo } from '../../../../global/selectors';\nimport buildClassName from '../../../../util/buildClassName';\nimport { REM } from '../../../common/helpers/mediaDimensions';\n\nimport useAppLayout from '../../../../hooks/useAppLayout';\nimport useWindowSize from '../../../../hooks/window/useWindowSize';\n\nimport ReactionEmoji from '../../../common/ReactionEmoji';\n\nimport styles from './ReactionPickerLimited.module.scss';\n\ntype OwnProps = {\n  chatId: string;\n  loadAndPlay: boolean;\n  onReactionSelect?: (reaction: ApiReaction) => void;\n  selectedReactionIds?: string[];\n  message?: ApiMessage;\n};\n\ntype StateProps = {\n  enabledReactions?: ApiChatReactions;\n  availableReactions?: ApiAvailableReaction[];\n  topReactions: ApiReaction[];\n  canAnimate?: boolean;\n  isSavedMessages?: boolean;\n  reactionsLimit?: number;\n  isCurrentUserPremium?: boolean;\n};\n\nconst REACTION_SIZE = 36;\nconst GRID_GAP_THRESHOLD = 600;\nconst MODAL_PADDING_SIZE_REM = 0.5;\nconst MODAL_MAX_HEIGHT_REM = 18;\nconst MODAL_MAX_WIDTH_REM = 26.25;\nconst GRID_GAP_DESKTOP_REM = 0.625;\nconst GRID_GAP_MOBILE_REM = 0.5;\n\nconst ReactionPickerLimited: FC<OwnProps & StateProps> = ({\n  loadAndPlay,\n  enabledReactions,\n  availableReactions,\n  topReactions,\n  selectedReactionIds,\n  onReactionSelect,\n  message,\n  reactionsLimit,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const sharedCanvasRef = useRef<HTMLCanvasElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const sharedCanvasHqRef = useRef<HTMLCanvasElement>(null);\n  const { width: windowWidth } = useWindowSize();\n  const { isTouchScreen } = useAppLayout();\n\n  const currentReactions = message?.reactions?.results;\n\n  const shouldUseCurrentReactions = reactionsLimit && currentReactions\n   && currentReactions.length >= reactionsLimit;\n\n  const allAvailableReactions = useMemo(() => {\n    if (shouldUseCurrentReactions) {\n      return currentReactions.map(({ reaction }) => reaction);\n    }\n    if (!enabledReactions) {\n      return [];\n    }\n\n    if (enabledReactions.type === 'all') {\n      return sortReactions((availableReactions || []).map(({ reaction }) => reaction), topReactions);\n    }\n\n    return sortReactions(enabledReactions.allowed, topReactions);\n  }, [availableReactions, enabledReactions, topReactions, shouldUseCurrentReactions, currentReactions]);\n\n  const pickerHeight = useMemo(() => {\n    const pickerWidth = Math.min(MODAL_MAX_WIDTH_REM * REM, windowWidth);\n    const gapWidth = (windowWidth > GRID_GAP_THRESHOLD ? GRID_GAP_DESKTOP_REM : GRID_GAP_MOBILE_REM) * REM;\n    const availableWidth = pickerWidth - MODAL_PADDING_SIZE_REM * REM;\n\n    const itemsInRow = Math.floor((availableWidth + gapWidth) / (REACTION_SIZE + gapWidth));\n    const rowsCount = Math.ceil(allAvailableReactions.length / itemsInRow);\n\n    const pickerMaxHeight = rowsCount * REACTION_SIZE + (rowsCount - 1) * gapWidth + MODAL_PADDING_SIZE_REM * REM * 2;\n\n    return Math.min(MODAL_MAX_HEIGHT_REM * REM, pickerMaxHeight);\n  }, [allAvailableReactions.length, windowWidth]);\n\n  return (\n    <div className={styles.root} style={`height: ${pickerHeight}px`}>\n      <div className={buildClassName(styles.wrapper, isTouchScreen ? 'no-scrollbar' : 'custom-scroll')}>\n        <div className=\"symbol-set-container shared-canvas-container\">\n          <canvas ref={sharedCanvasRef} className=\"shared-canvas\" />\n          <canvas ref={sharedCanvasHqRef} className=\"shared-canvas\" />\n          {allAvailableReactions.map((reaction) => {\n            const reactionId = getReactionKey(reaction);\n            const isSelected = reactionId ? selectedReactionIds?.includes(reactionId) : undefined;\n\n            return (\n              <ReactionEmoji\n                key={reactionId}\n                reaction={reaction}\n                isSelected={isSelected}\n                loadAndPlay={loadAndPlay}\n                availableReactions={availableReactions}\n                onClick={onReactionSelect!}\n                sharedCanvasRef={sharedCanvasRef}\n                sharedCanvasHqRef={sharedCanvasHqRef}\n              />\n            );\n          })}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const { availableReactions, topReactions } = global.reactions;\n\n    const { maxUniqueReactions } = global.appConfig || {};\n    const { enabledReactions } = selectChatFullInfo(global, chatId) || {};\n\n    return {\n      enabledReactions,\n      availableReactions,\n      topReactions,\n      reactionsLimit: maxUniqueReactions,\n    };\n  },\n)(ReactionPickerLimited));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"MhpiTAwi\",\"wrapper\":\"NIaqmosK\"};","import type { FC } from '../../../../lib/teact/teact';\nimport React, { memo, useMemo, useRef } from '../../../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../../../global';\n\nimport type { IAnchorPosition } from '../../../../types';\nimport {\n  type ApiAvailableEffect,\n  type ApiMessage,\n  type ApiMessageEntity,\n  type ApiReaction,\n  type ApiReactionCustomEmoji,\n  type ApiSticker,\n  type ApiStory,\n  type ApiStorySkipped,\n  MAIN_THREAD_ID,\n} from '../../../../api/types';\n\nimport { getReactionKey, getStoryKey, isUserId } from '../../../../global/helpers';\nimport {\n  selectChat,\n  selectChatFullInfo,\n  selectChatMessage,\n  selectIsContextMenuTranslucent,\n  selectIsCurrentUserPremium,\n  selectPeerStory,\n  selectTabState,\n} from '../../../../global/selectors';\nimport buildClassName from '../../../../util/buildClassName';\nimport parseHtmlAsFormattedText from '../../../../util/parseHtmlAsFormattedText';\nimport { REM } from '../../../common/helpers/mediaDimensions';\nimport { buildCustomEmojiHtml } from '../../composer/helpers/customEmoji';\n\nimport { getIsMobile } from '../../../../hooks/useAppLayout';\nimport useCurrentOrPrev from '../../../../hooks/useCurrentOrPrev';\nimport useLastCallback from '../../../../hooks/useLastCallback';\nimport useOldLang from '../../../../hooks/useOldLang';\n\nimport CustomEmojiPicker from '../../../common/CustomEmojiPicker';\nimport Menu from '../../../ui/Menu';\nimport StickerPicker from '../../composer/StickerPicker';\nimport ReactionPickerLimited from './ReactionPickerLimited';\n\nimport styles from './ReactionPicker.module.scss';\n\nexport type OwnProps = {\n  isOpen: boolean;\n};\n\ninterface StateProps {\n  shouldUseFullPicker?: boolean;\n  message?: ApiMessage;\n  story?: ApiStory | ApiStorySkipped;\n  isCurrentUserPremium?: boolean;\n  position?: IAnchorPosition;\n  isTranslucent?: boolean;\n  sendAsMessage?: boolean;\n  chatId?: string;\n  isForEffects?: boolean;\n  availableEffectById: Record<string, ApiAvailableEffect>;\n}\n\nconst FULL_PICKER_SHIFT_DELTA = { x: -23, y: -64 };\nconst LIMITED_PICKER_SHIFT_DELTA = { x: -21, y: -10 };\nconst REACTION_SELECTOR_WIDTH = 16.375 * REM;\n\nconst ReactionPicker: FC<OwnProps & StateProps> = ({\n  isOpen,\n  message,\n  story,\n  position,\n  isTranslucent,\n  isCurrentUserPremium,\n  shouldUseFullPicker,\n  sendAsMessage,\n  chatId,\n  isForEffects,\n  availableEffectById,\n}) => {\n  const {\n    toggleReaction, closeReactionPicker, sendMessage, showNotification, sendStoryReaction, saveEffectInDraft,\n    requestEffectInComposer,\n  } = getActions();\n\n  const lang = useOldLang();\n\n  const renderedMessageId = useCurrentOrPrev(message?.id, true);\n  const renderedChatId = useCurrentOrPrev(message?.chatId, true);\n  const renderedStoryPeerId = useCurrentOrPrev(story?.peerId, true);\n  const renderedStoryId = useCurrentOrPrev(story?.id);\n  const storedPosition = useCurrentOrPrev(position, true);\n  // eslint-disable-next-line no-null/no-null\n  const menuRef = useRef<HTMLDivElement>(null);\n  const renderingPosition = useMemo((): IAnchorPosition | undefined => {\n    if (!storedPosition) {\n      return undefined;\n    }\n\n    if (renderedStoryId) {\n      return storedPosition;\n    }\n\n    return {\n      x: storedPosition.x + (shouldUseFullPicker ? FULL_PICKER_SHIFT_DELTA.x : LIMITED_PICKER_SHIFT_DELTA.x),\n      y: storedPosition.y + (shouldUseFullPicker ? FULL_PICKER_SHIFT_DELTA.y : LIMITED_PICKER_SHIFT_DELTA.y),\n    };\n  }, [renderedStoryId, storedPosition, shouldUseFullPicker]);\n\n  const getMenuElement = useLastCallback(() => menuRef.current);\n  const getLayout = useLastCallback(() => ({\n    withPortal: true,\n    isDense: !renderedStoryPeerId,\n    deltaX: !getIsMobile() && menuRef.current\n      ? -(menuRef.current.offsetWidth - REACTION_SELECTOR_WIDTH) / 2 - FULL_PICKER_SHIFT_DELTA.x / 2\n      : 0,\n  }));\n\n  const handleToggleCustomReaction = useLastCallback((sticker: ApiSticker) => {\n    if (!renderedChatId || !renderedMessageId) {\n      return;\n    }\n    const reaction = sticker.isCustomEmoji\n      ? { documentId: sticker.id } as ApiReactionCustomEmoji\n      : { emoticon: sticker.emoji } as ApiReaction;\n\n    toggleReaction({\n      chatId: renderedChatId, messageId: renderedMessageId, reaction, shouldAddToRecent: true,\n    });\n    closeReactionPicker();\n  });\n\n  const handleToggleReaction = useLastCallback((reaction: ApiReaction) => {\n    if (!renderedChatId || !renderedMessageId) {\n      return;\n    }\n\n    toggleReaction({\n      chatId: renderedChatId, messageId: renderedMessageId, reaction, shouldAddToRecent: true,\n    });\n    closeReactionPicker();\n  });\n\n  const handleStoryReactionSelect = useLastCallback((item: ApiReaction | ApiSticker) => {\n    const reaction = 'id' in item ? { documentId: item.id } : item;\n\n    const sticker = 'documentId' in item\n      ? getGlobal().customEmojis.byId[item.documentId] : 'emoticon' in item ? undefined : item;\n\n    if (sticker && !sticker.isFree && !isCurrentUserPremium) {\n      showNotification({\n        message: lang('UnlockPremiumEmojiHint'),\n        action: {\n          action: 'openPremiumModal',\n          payload: { initialSection: 'animated_emoji' },\n        },\n        actionText: lang('PremiumMore'),\n      });\n\n      closeReactionPicker();\n\n      return;\n    }\n\n    if (!sendAsMessage) {\n      sendStoryReaction({\n        peerId: renderedStoryPeerId!,\n        storyId: renderedStoryId!,\n        containerId: getStoryKey(renderedStoryPeerId!, renderedStoryId!),\n        reaction,\n        shouldAddToRecent: true,\n      });\n      closeReactionPicker();\n      return;\n    }\n\n    let text: string | undefined;\n    let entities: ApiMessageEntity[] | undefined;\n\n    if ('emoticon' in item) {\n      text = item.emoticon;\n    } else {\n      const customEmojiMessage = parseHtmlAsFormattedText(buildCustomEmojiHtml(sticker!));\n      text = customEmojiMessage.text;\n      entities = customEmojiMessage.entities;\n    }\n\n    sendMessage({ text, entities, isReaction: true });\n    closeReactionPicker();\n  });\n\n  const handleStickerSelect = useLastCallback((sticker: ApiSticker) => {\n    const availableEffects = Object.values(availableEffectById);\n    const effectId = availableEffects.find((effect) => effect.effectStickerId === sticker.id)?.id;\n\n    if (chatId) saveEffectInDraft({ chatId, threadId: MAIN_THREAD_ID, effectId });\n\n    if (effectId) requestEffectInComposer({ });\n    closeReactionPicker();\n  });\n\n  const selectedReactionIds = useMemo(() => {\n    return (message?.reactions?.results || []).reduce<string[]>((acc, { chosenOrder, reaction }) => {\n      if (chosenOrder !== undefined) {\n        acc.push(getReactionKey(reaction));\n      }\n\n      return acc;\n    }, []);\n  }, [message?.reactions?.results]);\n\n  return (\n    <Menu\n      isOpen={isOpen}\n      ref={menuRef}\n      className={buildClassName(styles.menu, 'ReactionPicker')}\n      bubbleClassName={buildClassName(\n        styles.menuContent,\n        !shouldUseFullPicker && !renderedStoryId && styles.onlyReactions,\n        renderedStoryId && styles.storyMenu,\n      )}\n      withPortal\n      noCompact\n      anchor={renderingPosition}\n      getTriggerElement={getTriggerElement}\n      getRootElement={getRootElement}\n      getMenuElement={getMenuElement}\n      getLayout={getLayout}\n      backdropExcludedSelector=\".Modal.confirm\"\n      onClose={closeReactionPicker}\n    >\n      {isForEffects && chatId ? (\n        <StickerPicker\n          className=\"\"\n          isHidden={!isOpen}\n          loadAndPlay={Boolean(isOpen && shouldUseFullPicker)}\n          idPrefix=\"message-effect\"\n          canSendStickers={false}\n          noContextMenus={false}\n          chatId={chatId}\n          isTranslucent={isTranslucent}\n          onStickerSelect={handleStickerSelect}\n          isForEffects={isForEffects}\n        />\n      ) : (\n        <>\n          <CustomEmojiPicker\n            chatId={renderedChatId}\n            idPrefix=\"message-emoji-set-\"\n            isHidden={!isOpen || !(shouldUseFullPicker || renderedStoryId)}\n            loadAndPlay={Boolean(isOpen && shouldUseFullPicker)}\n            isReactionPicker\n            className={!shouldUseFullPicker && !renderedStoryId ? styles.hidden : undefined}\n            selectedReactionIds={selectedReactionIds}\n            isTranslucent={isTranslucent}\n            onCustomEmojiSelect={renderedStoryId ? handleStoryReactionSelect : handleToggleCustomReaction}\n            onReactionSelect={renderedStoryId ? handleStoryReactionSelect : handleToggleReaction}\n          />\n          {!shouldUseFullPicker && Boolean(renderedChatId) && (\n            <ReactionPickerLimited\n              chatId={renderedChatId}\n              loadAndPlay={isOpen}\n              onReactionSelect={renderedStoryId ? handleStoryReactionSelect : handleToggleReaction}\n              selectedReactionIds={selectedReactionIds}\n              message={message}\n            />\n          )}\n        </>\n      )}\n    </Menu>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>((global): StateProps => {\n  const state = selectTabState(global);\n  const availableEffectById = global.availableEffectById;\n  const {\n    chatId, messageId, storyPeerId, storyId, position, sendAsMessage, isForEffects,\n  } = state.reactionPicker || {};\n  const story = storyPeerId && storyId\n    ? selectPeerStory(global, storyPeerId, storyId) as ApiStory | ApiStorySkipped\n    : undefined;\n  const chat = chatId ? selectChat(global, chatId) : undefined;\n  const chatFullInfo = chatId ? selectChatFullInfo(global, chatId) : undefined;\n  const message = chatId && messageId ? selectChatMessage(global, chatId, messageId) : undefined;\n  const isPrivateChat = isUserId(chatId || storyPeerId || '');\n  const areSomeReactionsAllowed = chatFullInfo?.enabledReactions?.type === 'some';\n  const { maxUniqueReactions } = global.appConfig || {};\n  const areAllReactionsAllowed = chatFullInfo?.enabledReactions?.type === 'all'\n  && chatFullInfo?.enabledReactions?.areCustomAllowed;\n\n  const currentReactions = message?.reactions?.results;\n  const shouldUseCurrentReactions = Boolean(maxUniqueReactions && currentReactions\n    && currentReactions.length >= maxUniqueReactions);\n\n  return {\n    message,\n    story,\n    position,\n    shouldUseFullPicker: (chat?.isForbidden || areSomeReactionsAllowed || shouldUseCurrentReactions) ? false\n      : (areAllReactionsAllowed || isPrivateChat),\n    isTranslucent: selectIsContextMenuTranslucent(global),\n    isCurrentUserPremium: selectIsCurrentUserPremium(global),\n    sendAsMessage,\n    isForEffects,\n    chatId,\n    availableEffectById,\n  };\n})(ReactionPicker));\n\nfunction getTriggerElement(): HTMLElement | null {\n  return document.querySelector('body');\n}\n\nfunction getRootElement() {\n  return document.querySelector('body');\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"menu\":\"gBh4WvBC\",\"menuContent\":\"qSfKwMzX\",\"storyMenu\":\"srpBMrqr\",\"onlyReactions\":\"dRNSqkOC\",\"hidden\":\"KVwgF6DG\"};","import { fixImageContent } from '../../../../util/parseHtmlAsFormattedText';\n\nconst div = document.createElement('div');\n\nexport function getHtmlTextLength(html: string) {\n  div.innerHTML = html;\n  fixImageContent(div);\n  div.querySelectorAll('br').forEach((br) => {\n    br.replaceWith('\\n');\n  });\n  return div.textContent?.trim().length || 0;\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"QucaiGVU\",\"preview\":\"SHoF85Vw\",\"duration\":\"nI2M1SBH\",\"single\":\"FjrnqGba\",\"no-grouping\":\"g0cTsM9d\",\"noGrouping\":\"g0cTsM9d\",\"file\":\"B6f6GcvN\",\"overlay\":\"bX7LdgxW\",\"action-item\":\"Zo7u5epf\",\"actionItem\":\"Zo7u5epf\",\"delete-file\":\"CYJwy9T_\",\"deleteFile\":\"CYJwy9T_\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useMemo } from '../../../lib/teact/teact';\n\nimport type { ApiAttachment } from '../../../api/types';\n\nimport { SUPPORTED_PHOTO_CONTENT_TYPES, SUPPORTED_VIDEO_CONTENT_TYPES } from '../../../config';\nimport buildClassName from '../../../util/buildClassName';\nimport { formatMediaDuration } from '../../../util/dates/dateFormat';\nimport { getFileExtension } from '../../common/helpers/documentInfo';\nimport { REM } from '../../common/helpers/mediaDimensions';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\n\nimport File from '../../common/File';\nimport MediaSpoiler from '../../common/MediaSpoiler';\n\nimport styles from './AttachmentModalItem.module.scss';\n\ntype OwnProps = {\n  attachment: ApiAttachment;\n  className?: string;\n  shouldDisplayCompressed?: boolean;\n  shouldDisplayGrouped?: boolean;\n  isSingle?: boolean;\n  index: number;\n  onDelete?: (index: number) => void;\n  onToggleSpoiler?: (index: number) => void;\n};\n\nconst BLUR_CANVAS_SIZE = 15 * REM;\n\nconst AttachmentModalItem: FC<OwnProps> = ({\n  attachment,\n  className,\n  isSingle,\n  shouldDisplayCompressed,\n  shouldDisplayGrouped,\n  index,\n  onDelete,\n  onToggleSpoiler,\n}) => {\n  const displayType = getDisplayType(attachment, shouldDisplayCompressed);\n\n  const handleSpoilerClick = useLastCallback(() => {\n    onToggleSpoiler?.(index);\n  });\n\n  const content = useMemo(() => {\n    switch (displayType) {\n      case 'photo':\n        return (\n          <img\n            className={styles.preview}\n            src={attachment.blobUrl}\n            alt=\"\"\n            draggable={false}\n          />\n        );\n      case 'video':\n        return (\n          <>\n            {Boolean(attachment.quick?.duration) && (\n              <div className={styles.duration}>{formatMediaDuration(attachment.quick!.duration)}</div>\n            )}\n            <video\n              className={styles.preview}\n              src={attachment.blobUrl}\n              autoPlay\n              muted\n              loop\n              disablePictureInPicture\n            />\n          </>\n        );\n      default:\n        return (\n          <>\n            <File\n              className={styles.file}\n              name={attachment.filename}\n              extension={getFileExtension(attachment.filename, attachment.mimeType)}\n              previewData={attachment.previewBlobUrl}\n              size={attachment.size}\n              smaller\n            />\n            {onDelete && (\n              <i\n                className={buildClassName('icon', 'icon-delete', styles.actionItem, styles.deleteFile)}\n                onClick={() => onDelete(index)}\n              />\n            )}\n          </>\n        );\n    }\n  }, [attachment, displayType, index, onDelete]);\n\n  const shouldSkipGrouping = displayType === 'file' || !shouldDisplayGrouped;\n  const shouldDisplaySpoiler = Boolean(displayType !== 'file' && attachment.shouldSendAsSpoiler);\n  const shouldRenderOverlay = displayType !== 'file';\n\n  const rootClassName = buildClassName(\n    className, styles.root, isSingle && styles.single, shouldSkipGrouping && styles.noGrouping,\n  );\n\n  return (\n    <div className={rootClassName}>\n      {content}\n      <MediaSpoiler\n        isVisible={shouldDisplaySpoiler}\n        thumbDataUri={attachment.previewBlobUrl || attachment.blobUrl}\n        width={BLUR_CANVAS_SIZE}\n        height={BLUR_CANVAS_SIZE}\n      />\n      {shouldRenderOverlay && (\n        <div className={styles.overlay}>\n          <i\n            className={buildClassName(\n              'icon',\n              attachment.shouldSendAsSpoiler ? 'icon-spoiler-disable' : 'icon-spoiler',\n              styles.actionItem,\n            )}\n            onClick={handleSpoilerClick}\n          />\n          {onDelete && (\n            <i\n              className={buildClassName('icon', 'icon-delete', styles.actionItem)}\n              onClick={() => onDelete(index)}\n            />\n          )}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport function getDisplayType(attachment: ApiAttachment, shouldDisplayCompressed?: boolean) {\n  if (shouldDisplayCompressed && attachment.quick) {\n    if (SUPPORTED_PHOTO_CONTENT_TYPES.has(attachment.mimeType)) {\n      return 'photo';\n    }\n    if (SUPPORTED_VIDEO_CONTENT_TYPES.has(attachment.mimeType)) {\n      return 'video';\n    }\n  }\n  return 'file';\n}\n\nexport default memo(AttachmentModalItem);\n","export default function findInViewport(\n  container: HTMLElement,\n  selectorOrElements: string | NodeListOf<HTMLElement> | HTMLElement[],\n  margin = 0,\n  isDense = false,\n  shouldContainBottom = false,\n  isHorizontal = false,\n) {\n  const viewportY1 = container[isHorizontal ? 'scrollLeft' : 'scrollTop'];\n  const viewportY2 = viewportY1 + container[isHorizontal ? 'offsetWidth' : 'offsetHeight'];\n  const allElements = typeof selectorOrElements === 'string'\n    ? container.querySelectorAll<HTMLElement>(selectorOrElements)\n    : selectorOrElements;\n  const { length } = allElements;\n  const visibleIndexes: number[] = [];\n  let isFound = false;\n\n  for (let i = 0; i < length; i++) {\n    const element = allElements[i];\n    const y1 = element[isHorizontal ? 'offsetLeft' : 'offsetTop'];\n    const y2 = y1 + element[isHorizontal ? 'offsetWidth' : 'offsetHeight'];\n    const isVisible = shouldContainBottom\n      ? y2 >= viewportY1 - margin && y2 <= viewportY2 + margin\n      : y1 <= viewportY2 + margin && y2 >= viewportY1 - margin;\n\n    if (isVisible) {\n      visibleIndexes.push(i);\n      isFound = true;\n    } else if (isFound && !isDense) {\n      break;\n    }\n  }\n\n  return { allElements, visibleIndexes };\n}\n","function isFullyVisible(container: HTMLElement, element: HTMLElement, isHorizontal = false) {\n  const viewportY1 = container[isHorizontal ? 'scrollLeft' : 'scrollTop'];\n  const viewportY2 = viewportY1 + container[isHorizontal ? 'offsetWidth' : 'offsetHeight'];\n  const y1 = element[isHorizontal ? 'offsetLeft' : 'offsetTop'];\n  const y2 = y1 + element[isHorizontal ? 'offsetWidth' : 'offsetHeight'];\n  return y1 > viewportY1 && y2 < viewportY2;\n}\n\nexport default isFullyVisible;\n","import animateScroll from './animateScroll';\nimport findInViewport from './findInViewport';\nimport isFullyVisible from './isFullyVisible';\n\nconst VIEWPORT_MARGIN = 8;\nconst SCROLL_MARGIN = 10;\n\nexport default function setTooltipItemVisible(selector: string, index: number, containerRef: Record<string, any>) {\n  const container = containerRef.current!;\n  if (!container || index < 0) {\n    return;\n  }\n  const { visibleIndexes, allElements } = findInViewport(\n    container,\n    selector,\n    VIEWPORT_MARGIN,\n    true,\n    true,\n  );\n\n  if (!allElements.length || !allElements[index]) {\n    return;\n  }\n  const first = visibleIndexes[0];\n  if (!visibleIndexes.includes(index)\n    || (index === first && !isFullyVisible(container, allElements[first]))) {\n    const position = index > visibleIndexes[visibleIndexes.length - 1] ? 'start' : 'end';\n    animateScroll(container, allElements[index], position, SCROLL_MARGIN);\n  }\n}\n","import { useEffect, useState } from '../../../../lib/teact/teact';\n\nimport captureKeyboardListeners from '../../../../util/captureKeyboardListeners';\nimport cycleRestrict from '../../../../util/cycleRestrict';\n\nimport useLastCallback from '../../../../hooks/useLastCallback';\n\nexport function useKeyboardNavigation({\n  isActive,\n  isHorizontal,\n  shouldSaveSelectionOnUpdateItems,\n  shouldRemoveSelectionOnReset,\n  noArrowNavigation,\n  items,\n  shouldSelectOnTab,\n  onSelect,\n  onClose,\n}: {\n  isActive: boolean;\n  isHorizontal?: boolean;\n  shouldSaveSelectionOnUpdateItems?: boolean;\n  shouldRemoveSelectionOnReset?: boolean;\n  noArrowNavigation?: boolean;\n  items?: any[];\n  shouldSelectOnTab?: boolean;\n  onSelect: (item: any) => void | boolean;\n  onClose: NoneToVoidFunction;\n}) {\n  const [selectedItemIndex, setSelectedItemIndex] = useState(-1);\n\n  const getSelectedIndex = useLastCallback((newIndex: number) => {\n    if (!items) {\n      return -1;\n    }\n\n    return cycleRestrict(items.length, newIndex);\n  });\n\n  const handleArrowKey = useLastCallback((value: number, e: KeyboardEvent) => {\n    e.preventDefault();\n    setSelectedItemIndex((index) => (getSelectedIndex(index + value)));\n  });\n\n  const handleItemSelect = useLastCallback((e: KeyboardEvent) => {\n    // Prevent action on key combinations\n    if (e.altKey || e.ctrlKey || e.metaKey || e.shiftKey) return false;\n    if (!isActive) return false;\n\n    if (items && items.length && selectedItemIndex > -1) {\n      const item = items[selectedItemIndex];\n      if (item) {\n        if (onSelect(item) === false) {\n          return false;\n        }\n\n        e.preventDefault();\n      }\n    }\n\n    return true;\n  });\n\n  useEffect(() => {\n    if (!isActive) setSelectedItemIndex(shouldRemoveSelectionOnReset ? -1 : 0);\n  }, [isActive, shouldRemoveSelectionOnReset]);\n\n  const isSelectionOutOfRange = !items || selectedItemIndex > items.length - 1;\n  useEffect(() => {\n    if (!shouldSaveSelectionOnUpdateItems || isSelectionOutOfRange) {\n      setSelectedItemIndex(shouldRemoveSelectionOnReset ? -1 : 0);\n    }\n  }, [isSelectionOutOfRange, shouldRemoveSelectionOnReset, shouldSaveSelectionOnUpdateItems]);\n\n  useEffect(() => (isActive ? captureKeyboardListeners({\n    onEsc: onClose,\n    onUp: noArrowNavigation || isHorizontal ? undefined : (e: KeyboardEvent) => handleArrowKey(-1, e),\n    onDown: noArrowNavigation || isHorizontal ? undefined : (e: KeyboardEvent) => handleArrowKey(1, e),\n    onLeft: noArrowNavigation || !isHorizontal ? undefined : (e: KeyboardEvent) => handleArrowKey(-1, e),\n    onRight: noArrowNavigation || !isHorizontal ? undefined : (e: KeyboardEvent) => handleArrowKey(1, e),\n    onTab: shouldSelectOnTab ? handleItemSelect : undefined,\n    onEnter: handleItemSelect,\n  }) : undefined), [\n    noArrowNavigation, handleArrowKey, handleItemSelect, isActive, isHorizontal, onClose, shouldSelectOnTab,\n  ]);\n\n  return selectedItemIndex;\n}\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useEffect, useRef } from '../../../lib/teact/teact';\nimport { getGlobal } from '../../../global';\n\nimport type { ApiUser } from '../../../api/types';\n\nimport buildClassName from '../../../util/buildClassName';\nimport setTooltipItemVisible from '../../../util/setTooltipItemVisible';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport usePreviousDeprecated from '../../../hooks/usePreviousDeprecated';\nimport useShowTransitionDeprecated from '../../../hooks/useShowTransitionDeprecated';\nimport { useKeyboardNavigation } from './hooks/useKeyboardNavigation';\n\nimport PrivateChatInfo from '../../common/PrivateChatInfo';\nimport ListItem from '../../ui/ListItem';\n\nimport './MentionTooltip.scss';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  onClose: () => void;\n  onInsertUserName: (user: ApiUser, forceFocus?: boolean) => void;\n  filteredUsers?: ApiUser[];\n};\n\nconst MentionTooltip: FC<OwnProps> = ({\n  isOpen,\n  onClose,\n  onInsertUserName,\n  filteredUsers,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  const { shouldRender, transitionClassNames } = useShowTransitionDeprecated(isOpen, undefined, undefined, false);\n\n  const handleUserSelect = useLastCallback((userId: string, forceFocus = false) => {\n    // No need for expensive global updates on users, so we avoid them\n    const usersById = getGlobal().users.byId;\n    const user = usersById[userId];\n    if (!user) {\n      return;\n    }\n\n    onInsertUserName(user, forceFocus);\n  });\n\n  const handleClick = useLastCallback((e: React.MouseEvent, id: string) => {\n    e.preventDefault();\n\n    handleUserSelect(id);\n  });\n\n  const handleSelectMention = useLastCallback((member: ApiUser) => {\n    handleUserSelect(member.id, true);\n  });\n\n  const selectedMentionIndex = useKeyboardNavigation({\n    isActive: isOpen,\n    items: filteredUsers,\n    onSelect: handleSelectMention,\n    shouldSelectOnTab: true,\n    shouldSaveSelectionOnUpdateItems: true,\n    onClose,\n  });\n\n  useEffect(() => {\n    setTooltipItemVisible('.chat-item-clickable', selectedMentionIndex, containerRef);\n  }, [selectedMentionIndex]);\n\n  useEffect(() => {\n    if (filteredUsers && !filteredUsers.length) {\n      onClose();\n    }\n  }, [filteredUsers, onClose]);\n\n  const prevChatMembers = usePreviousDeprecated(\n    filteredUsers?.length\n      ? filteredUsers\n      : undefined,\n    shouldRender,\n  );\n  const renderedChatMembers = filteredUsers && !filteredUsers.length\n    ? prevChatMembers\n    : filteredUsers;\n\n  if (!shouldRender || (renderedChatMembers && !renderedChatMembers.length)) {\n    return undefined;\n  }\n\n  const className = buildClassName(\n    'MentionTooltip composer-tooltip custom-scroll',\n    transitionClassNames,\n  );\n\n  return (\n    <div className={className} ref={containerRef}>\n      {renderedChatMembers?.map(({ id }, index) => (\n        <ListItem\n          key={id}\n          className=\"chat-item-clickable scroll-item smaller-icon\"\n          onClick={handleClick}\n          clickArg={id}\n          focus={selectedMentionIndex === index}\n        >\n          <PrivateChatInfo\n            userId={id}\n            avatarSize=\"small\"\n            withUsername\n          />\n        </ListItem>\n      ))}\n    </div>\n  );\n};\n\nexport default memo(MentionTooltip);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"a27O2Qlr\",\"mobile\":\"khvUZbGZ\",\"symbolMenuOpen\":\"ir5kkMy1\",\"header-border\":\"Pc1k8G8s\",\"headerBorder\":\"Pc1k8G8s\",\"attachments\":\"_bxSIFgj\",\"attachments-bottom-padding\":\"RPVunBe2\",\"attachmentsBottomPadding\":\"RPVunBe2\",\"caption-wrapper\":\"EtmiUn2k\",\"captionWrapper\":\"EtmiUn2k\",\"caption-top-border\":\"FjjSKMYe\",\"captionTopBorder\":\"FjjSKMYe\",\"caption\":\"Te7lIfpB\",\"drop-target\":\"LhhRTsy6\",\"dropTarget\":\"LhhRTsy6\",\"hovered\":\"AnO3BgVv\",\"send-wrapper\":\"wDqWK9MD\",\"sendWrapper\":\"wDqWK9MD\",\"send\":\"kNlWmBJI\",\"is-pointer-env\":\"rYZmraWo\",\"isPointerEnv\":\"rYZmraWo\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo, useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type {\n  ApiAttachment, ApiChatMember, ApiMessage, ApiSticker,\n} from '../../../api/types';\nimport type { GlobalState, MessageListType } from '../../../global/types';\nimport type { ThreadId } from '../../../types';\nimport type { Signal } from '../../../util/signals';\n\nimport {\n  BASE_EMOJI_KEYWORD_LANG,\n  EDITABLE_INPUT_MODAL_ID,\n  SUPPORTED_AUDIO_CONTENT_TYPES,\n  SUPPORTED_PHOTO_CONTENT_TYPES,\n  SUPPORTED_VIDEO_CONTENT_TYPES,\n} from '../../../config';\nimport { requestMutation } from '../../../lib/fasterdom/fasterdom';\nimport { getAttachmentMediaType, isUserId } from '../../../global/helpers';\nimport { selectChatFullInfo, selectIsChatWithSelf } from '../../../global/selectors';\nimport { selectCurrentLimit } from '../../../global/selectors/limits';\nimport buildClassName from '../../../util/buildClassName';\nimport captureEscKeyListener from '../../../util/captureEscKeyListener';\nimport { validateFiles } from '../../../util/files';\nimport { removeAllSelections } from '../../../util/selection';\nimport { openSystemFilesDialog } from '../../../util/systemFilesDialog';\nimport getFilesFromDataTransferItems from './helpers/getFilesFromDataTransferItems';\nimport { getHtmlTextLength } from './helpers/getHtmlTextLength';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useContextMenuHandlers from '../../../hooks/useContextMenuHandlers';\nimport useDerivedState from '../../../hooks/useDerivedState';\nimport useFlag from '../../../hooks/useFlag';\nimport useGetSelectionRange from '../../../hooks/useGetSelectionRange';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\nimport usePreviousDeprecated from '../../../hooks/usePreviousDeprecated';\nimport useScrolledState from '../../../hooks/useScrolledState';\nimport useCustomEmojiTooltip from './hooks/useCustomEmojiTooltip';\nimport useEmojiTooltip from './hooks/useEmojiTooltip';\nimport useMentionTooltip from './hooks/useMentionTooltip';\n\nimport Button from '../../ui/Button';\nimport DropdownMenu from '../../ui/DropdownMenu';\nimport MenuItem from '../../ui/MenuItem';\nimport Modal from '../../ui/Modal';\nimport AttachmentModalItem from './AttachmentModalItem';\nimport CustomEmojiTooltip from './CustomEmojiTooltip.async';\nimport CustomSendMenu from './CustomSendMenu.async';\nimport EmojiTooltip from './EmojiTooltip.async';\nimport MentionTooltip from './MentionTooltip';\nimport MessageInput from './MessageInput';\nimport SymbolMenuButton from './SymbolMenuButton';\n\nimport styles from './AttachmentModal.module.scss';\n\nexport type OwnProps = {\n  chatId: string;\n  threadId: ThreadId;\n  attachments: ApiAttachment[];\n  editingMessage?: ApiMessage;\n  messageListType?: MessageListType;\n  getHtml: Signal<string>;\n  canShowCustomSendMenu?: boolean;\n  isReady: boolean;\n  isForMessage?: boolean;\n  shouldSchedule?: boolean;\n  shouldSuggestCompression?: boolean;\n  shouldForceCompression?: boolean;\n  shouldForceAsFile?: boolean;\n  isForCurrentMessageList?: boolean;\n  forceDarkTheme?: boolean;\n  onCaptionUpdate: (html: string) => void;\n  onSend: (sendCompressed: boolean, sendGrouped: boolean, isInvertedMedia?: true) => void;\n  onFileAppend: (files: File[], isSpoiler?: boolean) => void;\n  onAttachmentsUpdate: (attachments: ApiAttachment[]) => void;\n  onClear: NoneToVoidFunction;\n  onSendSilent: (sendCompressed: boolean, sendGrouped: boolean, isInvertedMedia?: true) => void;\n  onSendScheduled: (sendCompressed: boolean, sendGrouped: boolean, isInvertedMedia?: true) => void;\n  onCustomEmojiSelect: (emoji: ApiSticker) => void;\n  onRemoveSymbol: VoidFunction;\n  onEmojiSelect: (emoji: string) => void;\n};\n\ntype StateProps = {\n  isChatWithSelf?: boolean;\n  currentUserId?: string;\n  groupChatMembers?: ApiChatMember[];\n  recentEmojis: string[];\n  editingMessage?: ApiMessage;\n  baseEmojiKeywords?: Record<string, string[]>;\n  emojiKeywords?: Record<string, string[]>;\n  shouldSuggestCustomEmoji?: boolean;\n  customEmojiForEmoji?: ApiSticker[];\n  captionLimit: number;\n  attachmentSettings: GlobalState['attachmentSettings'];\n};\n\nconst ATTACHMENT_MODAL_INPUT_ID = 'caption-input-text';\nconst DROP_LEAVE_TIMEOUT_MS = 150;\nconst MAX_LEFT_CHARS_TO_SHOW = 100;\n\nconst AttachmentModal: FC<OwnProps & StateProps> = ({\n  chatId,\n  threadId,\n  attachments,\n  getHtml,\n  editingMessage,\n  canShowCustomSendMenu,\n  captionLimit,\n  isReady,\n  isChatWithSelf,\n  currentUserId,\n  groupChatMembers,\n  recentEmojis,\n  baseEmojiKeywords,\n  emojiKeywords,\n  isForMessage,\n  shouldSchedule,\n  shouldSuggestCustomEmoji,\n  customEmojiForEmoji,\n  attachmentSettings,\n  shouldSuggestCompression,\n  shouldForceCompression,\n  shouldForceAsFile,\n  isForCurrentMessageList,\n  forceDarkTheme,\n  onAttachmentsUpdate,\n  onCaptionUpdate,\n  onSend,\n  onFileAppend,\n  onClear,\n  onSendSilent,\n  onSendScheduled,\n  onCustomEmojiSelect,\n  onRemoveSymbol,\n  onEmojiSelect,\n}) => {\n  const { addRecentCustomEmoji, addRecentEmoji, updateAttachmentSettings } = getActions();\n\n  const lang = useOldLang();\n\n  // eslint-disable-next-line no-null/no-null\n  const mainButtonRef = useRef<HTMLButtonElement | null>(null);\n  // eslint-disable-next-line no-null/no-null\n  const inputRef = useRef<HTMLDivElement>(null);\n\n  const hideTimeoutRef = useRef<number>();\n  const prevAttachments = usePreviousDeprecated(attachments);\n  const renderingAttachments = attachments.length ? attachments : prevAttachments;\n  const { isMobile } = useAppLayout();\n\n  const isEditing = editingMessage && Boolean(editingMessage);\n  const isInAlbum = editingMessage && editingMessage?.groupedId;\n  const isEditingMessageFile = isEditing && attachments?.length && getAttachmentMediaType(attachments[0]);\n  const notEditingFile = isEditingMessageFile !== 'file';\n\n  const [isSymbolMenuOpen, openSymbolMenu, closeSymbolMenu] = useFlag();\n\n  const [shouldSendCompressed, setShouldSendCompressed] = useState(\n    shouldSuggestCompression ?? attachmentSettings.shouldCompress,\n  );\n  const isSendingCompressed = Boolean(\n    (shouldSendCompressed || shouldForceCompression || isInAlbum) && !shouldForceAsFile,\n  );\n  const [shouldSendGrouped, setShouldSendGrouped] = useState(attachmentSettings.shouldSendGrouped);\n  const isInvertedMedia = attachmentSettings.isInvertedMedia;\n\n  const {\n    handleScroll: handleAttachmentsScroll,\n    isAtBeginning: areAttachmentsNotScrolled,\n    isAtEnd: areAttachmentsScrolledToBottom,\n  } = useScrolledState();\n\n  const { handleScroll: handleCaptionScroll, isAtBeginning: isCaptionNotScrolled } = useScrolledState();\n\n  const isOpen = Boolean(attachments.length);\n  const renderingIsOpen = Boolean(renderingAttachments?.length);\n  const [isHovered, markHovered, unmarkHovered] = useFlag();\n\n  useEffect(() => {\n    if (!isOpen) {\n      closeSymbolMenu();\n      updateAttachmentSettings({ isInvertedMedia: undefined });\n    }\n  }, [closeSymbolMenu, isOpen]);\n\n  const [hasMedia, hasOnlyMedia] = useMemo(() => {\n    const onlyMedia = Boolean(renderingAttachments?.every((a) => a.quick || a.audio));\n    if (onlyMedia) return [true, true];\n    const oneMedia = Boolean(renderingAttachments?.some((a) => a.quick || a.audio));\n    return [oneMedia, false];\n  }, [renderingAttachments]);\n\n  const [hasSpoiler, isEverySpoiler] = useMemo(() => {\n    const areAllSpoilers = Boolean(renderingAttachments?.every((a) => a.shouldSendAsSpoiler));\n    if (areAllSpoilers) return [true, true];\n    const hasOneSpoiler = Boolean(renderingAttachments?.some((a) => a.shouldSendAsSpoiler));\n    return [hasOneSpoiler, false];\n  }, [renderingAttachments]);\n\n  const getSelectionRange = useGetSelectionRange(`#${EDITABLE_INPUT_MODAL_ID}`);\n\n  const {\n    isEmojiTooltipOpen,\n    filteredEmojis,\n    filteredCustomEmojis,\n    insertEmoji,\n    closeEmojiTooltip,\n  } = useEmojiTooltip(\n    Boolean(isReady && (isForCurrentMessageList || !isForMessage) && renderingIsOpen),\n    getHtml,\n    onCaptionUpdate,\n    EDITABLE_INPUT_MODAL_ID,\n    recentEmojis,\n    baseEmojiKeywords,\n    emojiKeywords,\n  );\n\n  const {\n    isCustomEmojiTooltipOpen,\n    insertCustomEmoji,\n    closeCustomEmojiTooltip,\n  } = useCustomEmojiTooltip(\n    Boolean(isReady && (isForCurrentMessageList || !isForMessage) && renderingIsOpen && shouldSuggestCustomEmoji),\n    getHtml,\n    onCaptionUpdate,\n    getSelectionRange,\n    inputRef,\n    customEmojiForEmoji,\n  );\n\n  const {\n    isMentionTooltipOpen,\n    closeMentionTooltip,\n    insertMention,\n    mentionFilteredUsers,\n  } = useMentionTooltip(\n    Boolean(isReady && isForCurrentMessageList && renderingIsOpen),\n    getHtml,\n    onCaptionUpdate,\n    getSelectionRange,\n    inputRef,\n    groupChatMembers,\n    undefined,\n    currentUserId,\n  );\n\n  useEffect(() => (isOpen ? captureEscKeyListener(onClear) : undefined), [isOpen, onClear]);\n\n  useEffect(() => {\n    if (isOpen) {\n      setShouldSendCompressed(shouldSuggestCompression ?? attachmentSettings.shouldCompress);\n      setShouldSendGrouped(attachmentSettings.shouldSendGrouped);\n    }\n  }, [attachmentSettings, isOpen, shouldSuggestCompression]);\n\n  useEffect(() => {\n    if (!isOpen) {\n      updateAttachmentSettings({ isInvertedMedia: undefined });\n    }\n  }, [updateAttachmentSettings, isOpen, shouldSuggestCompression]);\n\n  function setIsInvertedMedia(value?: true) {\n    updateAttachmentSettings({ isInvertedMedia: value });\n  }\n\n  useEffect(() => {\n    if (isOpen && isMobile) {\n      removeAllSelections();\n    }\n  }, [isMobile, isOpen]);\n\n  const {\n    isContextMenuOpen: isCustomSendMenuOpen,\n    handleContextMenu,\n    handleContextMenuClose,\n    handleContextMenuHide,\n  } = useContextMenuHandlers(mainButtonRef, !canShowCustomSendMenu || !isOpen);\n\n  const sendAttachments = useLastCallback((isSilent?: boolean, shouldSendScheduled?: boolean) => {\n    if (isOpen) {\n      const send = ((shouldSchedule || shouldSendScheduled) && isForMessage && !editingMessage) ? onSendScheduled\n        : isSilent ? onSendSilent : onSend;\n      send(isSendingCompressed, shouldSendGrouped, isInvertedMedia);\n      updateAttachmentSettings({\n        shouldCompress: shouldSuggestCompression === undefined ? isSendingCompressed : undefined,\n        shouldSendGrouped,\n        isInvertedMedia,\n      });\n    }\n  });\n\n  const handleSendSilent = useLastCallback(() => {\n    sendAttachments(true);\n  });\n\n  const handleSendClick = useLastCallback(() => {\n    sendAttachments();\n  });\n\n  const handleScheduleClick = useLastCallback(() => {\n    sendAttachments(false, true);\n  });\n\n  const handleDragLeave = (e: React.DragEvent<HTMLElement>) => {\n    const { relatedTarget: toTarget, target: fromTarget } = e;\n\n    // Esc button pressed during drag event\n    if ((fromTarget as HTMLDivElement).matches(`.${styles.dropTarget}`) && !toTarget) {\n      hideTimeoutRef.current = window.setTimeout(unmarkHovered, DROP_LEAVE_TIMEOUT_MS);\n    }\n\n    // Prevent DragLeave event from firing when the pointer moves inside the AttachmentModal drop target\n    if (fromTarget && (fromTarget as HTMLElement).closest(`.${styles.hovered}`)) {\n      return;\n    }\n\n    if (toTarget) {\n      e.stopPropagation();\n    }\n\n    unmarkHovered();\n  };\n\n  const handleFilesDrop = useLastCallback(async (e: React.DragEvent<HTMLDivElement>) => {\n    e.preventDefault();\n    unmarkHovered();\n\n    const { dataTransfer } = e;\n\n    const files = await getFilesFromDataTransferItems(dataTransfer.items);\n    if (files?.length) {\n      onFileAppend(files, isEverySpoiler);\n    }\n  });\n\n  function handleDragOver(e: React.MouseEvent<HTMLDivElement, MouseEvent>) {\n    e.preventDefault();\n\n    if (hideTimeoutRef.current) {\n      window.clearTimeout(hideTimeoutRef.current);\n      hideTimeoutRef.current = undefined;\n    }\n  }\n\n  const handleFileSelect = useLastCallback((e: Event) => {\n    const { files } = e.target as HTMLInputElement;\n    const validatedFiles = validateFiles(files);\n\n    if (validatedFiles?.length) {\n      onFileAppend(validatedFiles, isEverySpoiler);\n    }\n  });\n\n  const handleDocumentSelect = useLastCallback(() => {\n    openSystemFilesDialog('*', (e) => handleFileSelect(e));\n  });\n\n  const handleDelete = useLastCallback((index: number) => {\n    onAttachmentsUpdate(attachments.filter((a, i) => i !== index));\n  });\n\n  const handleEnableSpoilers = useLastCallback(() => {\n    onAttachmentsUpdate(attachments.map((a) => ({\n      ...a,\n      shouldSendAsSpoiler: true,\n    })));\n  });\n\n  const handleDisableSpoilers = useLastCallback(() => {\n    onAttachmentsUpdate(attachments.map((a) => ({ ...a, shouldSendAsSpoiler: undefined })));\n  });\n\n  const handleToggleSpoiler = useLastCallback((index: number) => {\n    onAttachmentsUpdate(attachments.map((attachment, i) => {\n      if (i === index) {\n        return {\n          ...attachment,\n          shouldSendAsSpoiler: !attachment.shouldSendAsSpoiler || undefined,\n        };\n      }\n\n      return attachment;\n    }));\n  });\n\n  useEffect(() => {\n    const mainButton = mainButtonRef.current;\n    const input = document.getElementById(ATTACHMENT_MODAL_INPUT_ID);\n\n    if (!mainButton || !input) return;\n\n    const { width } = mainButton.getBoundingClientRect();\n\n    requestMutation(() => {\n      input.style.setProperty('--margin-for-scrollbar', `${width}px`);\n    });\n  }, [lang, isOpen]);\n\n  const MoreMenuButton: FC<{ onTrigger: () => void; isOpen?: boolean }> = useMemo(() => {\n    return ({ onTrigger, isOpen: isMenuOpen }) => (\n      <Button\n        round\n        ripple={!isMobile}\n        size=\"smaller\"\n        color=\"translucent\"\n        className={isMenuOpen ? 'active' : ''}\n        onClick={onTrigger}\n        ariaLabel=\"More actions\"\n      >\n        <i className=\"icon icon-more\" />\n      </Button>\n    );\n  }, [isMobile]);\n\n  const leftChars = useDerivedState(() => {\n    if (!renderingIsOpen) return undefined;\n\n    const leftCharsBeforeLimit = captionLimit - getHtmlTextLength(getHtml());\n    return leftCharsBeforeLimit <= MAX_LEFT_CHARS_TO_SHOW ? leftCharsBeforeLimit : undefined;\n  }, [captionLimit, getHtml, renderingIsOpen]);\n\n  const isQuickGallery = isSendingCompressed && hasOnlyMedia;\n\n  const [areAllPhotos, areAllVideos, areAllAudios] = useMemo(() => {\n    if (!isQuickGallery || !renderingAttachments) return [false, false, false];\n    const everyPhoto = renderingAttachments.every((a) => SUPPORTED_PHOTO_CONTENT_TYPES.has(a.mimeType));\n    const everyVideo = renderingAttachments.every((a) => SUPPORTED_VIDEO_CONTENT_TYPES.has(a.mimeType));\n    const everyAudio = renderingAttachments.every((a) => SUPPORTED_AUDIO_CONTENT_TYPES.has(a.mimeType));\n    return [everyPhoto, everyVideo, everyAudio];\n  }, [renderingAttachments, isQuickGallery]);\n\n  const hasAnySpoilerable = useMemo(() => {\n    if (!renderingAttachments) return false;\n    return renderingAttachments.some((a) => !SUPPORTED_AUDIO_CONTENT_TYPES.has(a.mimeType));\n  }, [renderingAttachments]);\n\n  if (!renderingAttachments) {\n    return undefined;\n  }\n\n  const isMultiple = renderingAttachments.length > 1;\n\n  const canInvertMedia = (() => {\n    if (isEditing) return false;\n    if (!hasMedia) return false;\n    if (!shouldForceAsFile && !shouldForceCompression && !isSendingCompressed) return false;\n    if (isMultiple && shouldSendGrouped) return false;\n    return true;\n  })();\n\n  let title = '';\n  if (areAllPhotos) {\n    title = lang(isEditing ? 'EditMessageReplacePhoto' : 'PreviewSender.SendPhoto', renderingAttachments.length, 'i');\n  } else if (areAllVideos) {\n    title = lang(isEditing ? 'EditMessageReplaceVideo' : 'PreviewSender.SendVideo', renderingAttachments.length, 'i');\n  } else if (areAllAudios) {\n    title = lang(isEditing ? 'EditMessageReplaceAudio' : 'PreviewSender.SendAudio', renderingAttachments.length, 'i');\n  } else {\n    title = lang(isEditing ? 'EditMessageReplaceFile' : 'PreviewSender.SendFile', renderingAttachments.length, 'i');\n  }\n\n  function renderHeader() {\n    if (!renderingAttachments) {\n      return undefined;\n    }\n\n    return (\n      <div className=\"modal-header-condensed\" dir={lang.isRtl ? 'rtl' : undefined}>\n        <Button round color=\"translucent\" size=\"smaller\" ariaLabel=\"Cancel attachments\" onClick={onClear}>\n          <i className=\"icon icon-close\" />\n        </Button>\n        <div className=\"modal-title\">{title}</div>\n        {notEditingFile && !isInAlbum\n          && (\n            <DropdownMenu\n              className=\"attachmeneditingMessaget-modal-more-menu with-menu-transitions\"\n              trigger={MoreMenuButton}\n              positionX=\"right\"\n            >\n              {Boolean(!editingMessage) && (\n                <MenuItem icon=\"add\" onClick={handleDocumentSelect}>{lang('Add')}</MenuItem>\n              )}\n              {hasMedia && (\n                <>\n                  {\n                    canInvertMedia && (!isInvertedMedia ? (\n                      // eslint-disable-next-line react/jsx-no-bind\n                      <MenuItem icon=\"move-caption-up\" onClick={() => setIsInvertedMedia(true)}>\n                        {lang('PreviewSender.MoveTextUp')}\n                      </MenuItem>\n                    ) : (\n                      // eslint-disable-next-line react/jsx-no-bind\n                      <MenuItem icon=\"move-caption-down\" onClick={() => setIsInvertedMedia(undefined)}>\n                        {lang(('PreviewSender.MoveTextDown'))}\n                      </MenuItem>\n                    ))\n                  }\n                  {\n                    !shouldForceAsFile && !shouldForceCompression && (isSendingCompressed ? (\n                      // eslint-disable-next-line react/jsx-no-bind\n                      <MenuItem icon=\"document\" onClick={() => setShouldSendCompressed(false)}>\n                        {lang(isMultiple ? 'Attachment.SendAsFiles' : 'Attachment.SendAsFile')}\n                      </MenuItem>\n                    ) : (\n                      // eslint-disable-next-line react/jsx-no-bind\n                      <MenuItem icon=\"photo\" onClick={() => setShouldSendCompressed(true)}>\n                        {isMultiple ? 'Send All as Media' : 'Send as Media'}\n                      </MenuItem>\n                    ))\n                  }\n                  {isSendingCompressed && hasAnySpoilerable && Boolean(!editingMessage) && (\n                    hasSpoiler ? (\n                      <MenuItem icon=\"spoiler-disable\" onClick={handleDisableSpoilers}>\n                        {lang('Attachment.DisableSpoiler')}\n                      </MenuItem>\n                    ) : (\n                      <MenuItem icon=\"spoiler\" onClick={handleEnableSpoilers}>\n                        {lang('Attachment.EnableSpoiler')}\n                      </MenuItem>\n                    )\n                  )}\n                </>\n              )}\n              {isMultiple && (\n                shouldSendGrouped ? (\n                  <MenuItem\n                    icon=\"grouped-disable\"\n                    // eslint-disable-next-line react/jsx-no-bind\n                    onClick={() => setShouldSendGrouped(false)}\n                  >\n                    Ungroup All Media\n                  </MenuItem>\n                ) : (\n                  // eslint-disable-next-line react/jsx-no-bind\n                  <MenuItem icon=\"grouped\" onClick={() => setShouldSendGrouped(true)}>\n                    Group All Media\n                  </MenuItem>\n                )\n              )}\n            </DropdownMenu>\n          )}\n      </div>\n    );\n  }\n\n  const isBottomDividerShown = !areAttachmentsScrolledToBottom || !isCaptionNotScrolled;\n\n  return (\n    <Modal\n      isOpen={isOpen}\n      onClose={onClear}\n      header={renderHeader()}\n      className={buildClassName(\n        styles.root,\n        isHovered && styles.hovered,\n        !areAttachmentsNotScrolled && styles.headerBorder,\n        isMobile && styles.mobile,\n        isSymbolMenuOpen && styles.symbolMenuOpen,\n        forceDarkTheme && 'component-theme-dark',\n      )}\n      noBackdropClose\n    >\n      <div\n        className={styles.dropTarget}\n        onDragEnter={markHovered}\n        onDrop={handleFilesDrop}\n        onDragOver={handleDragOver}\n        onDragLeave={handleDragLeave}\n        onClick={unmarkHovered}\n        data-attach-description={lang('Preview.Dragging.AddItems', 10)}\n        data-dropzone\n      >\n        <div\n          className={buildClassName(\n            styles.attachments,\n            'custom-scroll',\n            isBottomDividerShown && styles.attachmentsBottomPadding,\n          )}\n          onScroll={handleAttachmentsScroll}\n        >\n          {renderingAttachments.map((attachment, i) => (\n            <AttachmentModalItem\n              attachment={attachment}\n              shouldDisplayCompressed={isSendingCompressed}\n              shouldDisplayGrouped={shouldSendGrouped}\n              isSingle={renderingAttachments.length === 1}\n              index={i}\n              key={attachment.uniqueId || i}\n              onDelete={handleDelete}\n              onToggleSpoiler={handleToggleSpoiler}\n            />\n          ))}\n        </div>\n        <div\n          className={buildClassName(\n            styles.captionWrapper,\n            isBottomDividerShown && styles.captionTopBorder,\n          )}\n        >\n          <MentionTooltip\n            isOpen={isMentionTooltipOpen}\n            filteredUsers={mentionFilteredUsers}\n            onInsertUserName={insertMention}\n            onClose={closeMentionTooltip}\n          />\n          <EmojiTooltip\n            isOpen={isEmojiTooltipOpen}\n            emojis={filteredEmojis}\n            customEmojis={filteredCustomEmojis}\n            addRecentEmoji={addRecentEmoji}\n            addRecentCustomEmoji={addRecentCustomEmoji}\n            onEmojiSelect={insertEmoji}\n            onCustomEmojiSelect={insertEmoji}\n            onClose={closeEmojiTooltip}\n          />\n          <CustomEmojiTooltip\n            chatId={chatId}\n            isOpen={isCustomEmojiTooltipOpen}\n            addRecentCustomEmoji={addRecentCustomEmoji}\n            onCustomEmojiSelect={insertCustomEmoji}\n            onClose={closeCustomEmojiTooltip}\n          />\n          <div className={styles.caption}>\n            <SymbolMenuButton\n              chatId={chatId}\n              threadId={threadId}\n              isMobile={isMobile}\n              isReady={isReady}\n              isSymbolMenuOpen={isSymbolMenuOpen}\n              openSymbolMenu={openSymbolMenu}\n              closeSymbolMenu={closeSymbolMenu}\n              onCustomEmojiSelect={onCustomEmojiSelect}\n              onRemoveSymbol={onRemoveSymbol}\n              onEmojiSelect={onEmojiSelect}\n              isAttachmentModal\n              canSendPlainText\n              className=\"attachment-modal-symbol-menu with-menu-transitions\"\n              idPrefix=\"attachment\"\n              forceDarkTheme={forceDarkTheme}\n            />\n            <MessageInput\n              ref={inputRef}\n              id={ATTACHMENT_MODAL_INPUT_ID}\n              chatId={chatId}\n              threadId={threadId}\n              isAttachmentModalInput\n              customEmojiPrefix=\"attachment\"\n              isReady={isReady}\n              isActive={isOpen}\n              getHtml={getHtml}\n              editableInputId={EDITABLE_INPUT_MODAL_ID}\n              placeholder={lang('AddCaption')}\n              onUpdate={onCaptionUpdate}\n              onSend={handleSendClick}\n              onScroll={handleCaptionScroll}\n              canAutoFocus={Boolean(isReady && isForCurrentMessageList && attachments.length)}\n              captionLimit={leftChars}\n              shouldSuppressFocus={isMobile && isSymbolMenuOpen}\n              onSuppressedFocus={closeSymbolMenu}\n            />\n            <div className={styles.sendWrapper}>\n              <Button\n                ref={mainButtonRef}\n                className={styles.send}\n                onClick={handleSendClick}\n                onContextMenu={canShowCustomSendMenu ? handleContextMenu : undefined}\n              >\n                {shouldSchedule && !editingMessage ? lang('Next') : editingMessage ? lang('Save') : lang('Send')}\n              </Button>\n              {canShowCustomSendMenu && (\n                <CustomSendMenu\n                  isOpen={isCustomSendMenuOpen}\n                  canSchedule={isForMessage}\n                  onSendSilent={!isChatWithSelf ? handleSendSilent : undefined}\n                  onSendSchedule={handleScheduleClick}\n                  onClose={handleContextMenuClose}\n                  onCloseAnimationEnd={handleContextMenuHide}\n                  isSavedMessages={isChatWithSelf}\n                />\n              )}\n            </div>\n          </div>\n        </div>\n      </div>\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const {\n      currentUserId,\n      recentEmojis,\n      customEmojis,\n      attachmentSettings,\n    } = global;\n\n    const chatFullInfo = !isUserId(chatId) ? selectChatFullInfo(global, chatId) : undefined;\n    const isChatWithSelf = selectIsChatWithSelf(global, chatId);\n    const { language, shouldSuggestCustomEmoji } = global.settings.byKey;\n    const baseEmojiKeywords = global.emojiKeywords[BASE_EMOJI_KEYWORD_LANG];\n    const emojiKeywords = language !== BASE_EMOJI_KEYWORD_LANG ? global.emojiKeywords[language] : undefined;\n\n    return {\n      isChatWithSelf,\n      currentUserId,\n      groupChatMembers: chatFullInfo?.members,\n      recentEmojis,\n      baseEmojiKeywords: baseEmojiKeywords?.keywords,\n      emojiKeywords: emojiKeywords?.keywords,\n      shouldSuggestCustomEmoji,\n      customEmojiForEmoji: customEmojis.forEmoji.stickers,\n      captionLimit: selectCurrentLimit(global, 'captionLength'),\n      attachmentSettings,\n    };\n  },\n)(AttachmentModal));\n","import type { ChangeEvent, RefObject } from 'react';\nimport type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useRef, useState,\n} from '../../../lib/teact/teact';\n\nimport type { ApiNewPoll } from '../../../api/types';\n\nimport { requestMeasure, requestNextMutation } from '../../../lib/fasterdom/fasterdom';\nimport captureEscKeyListener from '../../../util/captureEscKeyListener';\nimport parseHtmlAsFormattedText from '../../../util/parseHtmlAsFormattedText';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Button from '../../ui/Button';\nimport Checkbox from '../../ui/Checkbox';\nimport InputText from '../../ui/InputText';\nimport Modal from '../../ui/Modal';\nimport RadioGroup from '../../ui/RadioGroup';\nimport TextArea from '../../ui/TextArea';\n\nimport './PollModal.scss';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  shouldBeAnonymous?: boolean;\n  isQuiz?: boolean;\n  onSend: (pollSummary: ApiNewPoll) => void;\n  onClear: () => void;\n};\n\nconst MAX_LIST_HEIGHT = 320;\nconst MAX_OPTIONS_COUNT = 10;\nconst MAX_OPTION_LENGTH = 100;\nconst MAX_QUESTION_LENGTH = 255;\nconst MAX_SOLUTION_LENGTH = 200;\n\nconst PollModal: FC<OwnProps> = ({\n  isOpen, isQuiz, shouldBeAnonymous, onSend, onClear,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const questionInputRef = useRef<HTMLInputElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const optionsListRef = useRef<HTMLDivElement>(null);\n\n  const [question, setQuestion] = useState<string>('');\n  const [options, setOptions] = useState<string[]>(['']);\n  const [isAnonymous, setIsAnonymous] = useState(true);\n  const [isMultipleAnswers, setIsMultipleAnswers] = useState(false);\n  const [isQuizMode, setIsQuizMode] = useState(isQuiz || false);\n  const [solution, setSolution] = useState<string>('');\n  const [correctOption, setCorrectOption] = useState<number | undefined>();\n  const [hasErrors, setHasErrors] = useState<boolean>(false);\n\n  const lang = useOldLang();\n\n  const handleSolutionChange = useLastCallback((e: ChangeEvent<HTMLTextAreaElement>) => {\n    setSolution(e.target.value);\n  });\n\n  const focusInput = useLastCallback((ref: RefObject<HTMLInputElement>) => {\n    if (isOpen && ref.current) {\n      ref.current.focus();\n    }\n  });\n\n  useEffect(() => (isOpen ? captureEscKeyListener(onClear) : undefined), [isOpen, onClear]);\n  useEffect(() => {\n    if (!isOpen) {\n      setQuestion('');\n      setOptions(['']);\n      setIsAnonymous(true);\n      setIsMultipleAnswers(false);\n      setIsQuizMode(isQuiz || false);\n      setSolution('');\n      setCorrectOption(undefined);\n      setHasErrors(false);\n    }\n  }, [isQuiz, isOpen]);\n\n  useEffect(() => focusInput(questionInputRef), [focusInput, isOpen]);\n\n  const addNewOption = useLastCallback((newOptions: string[] = []) => {\n    setOptions([...newOptions, '']);\n\n    requestNextMutation(() => {\n      const list = optionsListRef.current;\n      if (!list) {\n        return;\n      }\n\n      requestMeasure(() => {\n        list.scrollTo({ top: list.scrollHeight, behavior: 'smooth' });\n      });\n    });\n  });\n\n  const handleCreate = useLastCallback(() => {\n    setHasErrors(false);\n    if (!isOpen) {\n      return;\n    }\n\n    const isNoCorrectOptionError = isQuizMode && (correctOption === undefined || !options[correctOption].trim());\n\n    const answers = options\n      .map((text, index) => {\n        text = text.trim();\n\n        if (!text) return undefined;\n\n        return {\n          text: {\n            text,\n          },\n          option: String(index),\n          ...(index === correctOption && { correct: true }),\n        };\n      }).filter(Boolean);\n\n    const questionTrimmed = question.trim().substring(0, MAX_QUESTION_LENGTH);\n    if (!questionTrimmed || answers.length < 2) {\n      setQuestion(questionTrimmed);\n      if (answers.length) {\n        const optionsTrimmed = options.map((o) => o.trim().substring(0, MAX_OPTION_LENGTH)).filter(Boolean);\n        if (optionsTrimmed.length < 2) {\n          addNewOption(optionsTrimmed);\n        } else {\n          setOptions(optionsTrimmed);\n        }\n      } else {\n        addNewOption();\n      }\n      setHasErrors(true);\n      return;\n    }\n\n    if (isNoCorrectOptionError) {\n      setHasErrors(true);\n      return;\n    }\n\n    const payload: ApiNewPoll = {\n      summary: {\n        question: {\n          text: questionTrimmed,\n        },\n        answers,\n        ...(!isAnonymous && { isPublic: true }),\n        ...(isMultipleAnswers && { multipleChoice: true }),\n        ...(isQuizMode && { quiz: true }),\n      },\n    };\n\n    if (isQuizMode) {\n      const { text, entities } = (solution && parseHtmlAsFormattedText(solution.substring(0, MAX_SOLUTION_LENGTH)))\n        || {};\n\n      payload.quiz = {\n        correctAnswers: [String(correctOption)],\n        ...(text && { solution: text }),\n        ...(entities && { solutionEntities: entities }),\n      };\n    }\n\n    onSend(payload);\n  });\n\n  const updateOption = useLastCallback((index: number, text: string) => {\n    const newOptions = [...options];\n    newOptions[index] = text;\n    if (newOptions[newOptions.length - 1].trim().length && newOptions.length < MAX_OPTIONS_COUNT) {\n      addNewOption(newOptions);\n    } else {\n      setOptions(newOptions);\n    }\n  });\n\n  const removeOption = useLastCallback((index: number) => {\n    const newOptions = [...options];\n    newOptions.splice(index, 1);\n    setOptions(newOptions);\n\n    if (correctOption !== undefined) {\n      if (correctOption === index) {\n        setCorrectOption(undefined);\n      } else if (index < correctOption) {\n        setCorrectOption(correctOption - 1);\n      }\n    }\n\n    requestNextMutation(() => {\n      if (!optionsListRef.current) {\n        return;\n      }\n\n      optionsListRef.current.classList.toggle('overflown', optionsListRef.current.scrollHeight > MAX_LIST_HEIGHT);\n    });\n  });\n\n  const handleCorrectOptionChange = useLastCallback((newValue: string) => {\n    setCorrectOption(Number(newValue));\n  });\n\n  const handleIsAnonymousChange = useLastCallback((e: ChangeEvent<HTMLInputElement>) => {\n    setIsAnonymous(e.target.checked);\n  });\n\n  const handleMultipleAnswersChange = useLastCallback((e: ChangeEvent<HTMLInputElement>) => {\n    setIsMultipleAnswers(e.target.checked);\n  });\n\n  const handleQuizModeChange = useLastCallback((e: ChangeEvent<HTMLInputElement>) => {\n    setIsQuizMode(e.target.checked);\n  });\n\n  const handleKeyPress = useLastCallback((e: React.KeyboardEvent<HTMLDivElement>) => {\n    if (e.keyCode === 13) {\n      handleCreate();\n    }\n  });\n\n  const handleQuestionChange = useLastCallback((e: ChangeEvent<HTMLInputElement>) => {\n    setQuestion(e.target.value);\n  });\n\n  const getQuestionError = useLastCallback(() => {\n    if (hasErrors && !question.trim().length) {\n      return lang('lng_polls_choose_question');\n    }\n\n    return undefined;\n  });\n\n  const getOptionsError = useLastCallback((index: number) => {\n    const optionsTrimmed = options.map((o) => o.trim()).filter((o) => o.length);\n    if (hasErrors && optionsTrimmed.length < 2 && !options[index].trim().length) {\n      return lang('lng_polls_choose_answers');\n    }\n    return undefined;\n  });\n\n  function renderHeader() {\n    return (\n      <div className=\"modal-header-condensed\">\n        <Button round color=\"translucent\" size=\"smaller\" ariaLabel=\"Cancel poll creation\" onClick={onClear}>\n          <i className=\"icon icon-close\" />\n        </Button>\n        <div className=\"modal-title\">{lang('NewPoll')}</div>\n        <Button\n          color=\"primary\"\n          size=\"smaller\"\n          className=\"modal-action-button\"\n          onClick={handleCreate}\n        >\n          {lang('Create')}\n        </Button>\n      </div>\n    );\n  }\n\n  function renderOptions() {\n    return options.map((option, index) => (\n      <div className=\"option-wrapper\">\n        <InputText\n          label={index !== options.length - 1 || options.length === MAX_OPTIONS_COUNT\n            ? lang('OptionHint')\n            : lang('CreatePoll.AddOption')}\n          error={getOptionsError(index)}\n          value={option}\n          // eslint-disable-next-line react/jsx-no-bind\n          onChange={(e) => updateOption(index, e.currentTarget.value)}\n          onKeyPress={handleKeyPress}\n        />\n        {index !== options.length - 1 && (\n          <Button\n            className=\"option-remove-button\"\n            round\n            color=\"translucent\"\n            size=\"smaller\"\n            ariaLabel={lang('Delete')}\n            // eslint-disable-next-line react/jsx-no-bind\n            onClick={() => removeOption(index)}\n          >\n            <i className=\"icon icon-close\" />\n          </Button>\n        )}\n      </div>\n    ));\n  }\n\n  function renderRadioOptions() {\n    return renderOptions()\n      .map((label, index) => ({ value: String(index), label, hidden: !options[index].trim() }));\n  }\n\n  function renderQuizNoOptionError() {\n    const optionsTrimmed = options.map((o) => o.trim()).filter((o) => o.length);\n\n    return isQuizMode && (correctOption === undefined || !optionsTrimmed[correctOption]) && (\n      <p className=\"poll-error\">{lang('lng_polls_choose_correct')}</p>\n    );\n  }\n\n  return (\n    <Modal isOpen={isOpen} onClose={onClear} header={renderHeader()} className=\"PollModal\">\n      <InputText\n        ref={questionInputRef}\n        label={lang('AskAQuestion')}\n        value={question}\n        error={getQuestionError()}\n        onChange={handleQuestionChange}\n        onKeyPress={handleKeyPress}\n      />\n      <div className=\"options-divider\" />\n\n      <div className=\"options-list custom-scroll\" ref={optionsListRef}>\n        <h3 className=\"options-header\">{lang('PollOptions')}</h3>\n\n        {hasErrors && renderQuizNoOptionError()}\n        {isQuizMode ? (\n          <RadioGroup\n            name=\"correctOption\"\n            options={renderRadioOptions()}\n            selected={String(correctOption)}\n            onChange={handleCorrectOptionChange}\n          />\n        ) : (\n          renderOptions()\n        )}\n\n      </div>\n\n      <div className=\"options-divider\" />\n\n      <div className=\"quiz-mode\">\n        {!shouldBeAnonymous && (\n          <Checkbox\n            label={lang('PollAnonymous')}\n            checked={isAnonymous}\n            onChange={handleIsAnonymousChange}\n          />\n        )}\n        <Checkbox\n          label={lang('PollMultiple')}\n          checked={isMultipleAnswers}\n          disabled={isQuizMode}\n          onChange={handleMultipleAnswersChange}\n        />\n        <Checkbox\n          label={lang('PollQuiz')}\n          checked={isQuizMode}\n          disabled={isMultipleAnswers || isQuiz !== undefined}\n          onChange={handleQuizModeChange}\n        />\n        {isQuizMode && (\n          <>\n            <h3 className=\"options-header\">{lang('lng_polls_solution_title')}</h3>\n            <TextArea\n              value={solution}\n              onChange={handleSolutionChange}\n              noReplaceNewlines\n            />\n            <div className=\"note\">{lang('CreatePoll.ExplanationInfo')}</div>\n          </>\n        )}\n      </div>\n    </Modal>\n  );\n};\n\nexport default memo(PollModal);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo } from '../../../lib/teact/teact';\n\nimport { BASE_URL, IS_PACKAGED_ELECTRON } from '../../../config';\nimport buildClassName from '../../../util/buildClassName';\nimport { handleEmojiLoad, LOADED_EMOJIS } from '../../../util/emoji/emoji';\nimport { IS_EMOJI_SUPPORTED } from '../../../util/windowEnvironment';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\n\nimport './EmojiButton.scss';\n\ntype OwnProps = {\n  emoji: Emoji;\n  focus?: boolean;\n  onClick: (emoji: string, name: string) => void;\n};\n\nconst EmojiButton: FC<OwnProps> = ({\n  emoji, focus, onClick,\n}) => {\n  const handleClick = useLastCallback((e: React.MouseEvent<HTMLDivElement, MouseEvent>) => {\n    // Preventing safari from losing focus on Composer MessageInput\n    e.preventDefault();\n\n    onClick(emoji.native, emoji.id);\n  });\n\n  const className = buildClassName(\n    'EmojiButton',\n    focus && 'focus',\n  );\n\n  const src = `${IS_PACKAGED_ELECTRON ? BASE_URL : '.'}/img-apple-64/${emoji.image}.png`;\n  const isLoaded = LOADED_EMOJIS.has(src);\n\n  return (\n    <div\n      className={className}\n      onMouseDown={handleClick}\n      title={`:${emoji.names[0]}:`}\n    >\n      {IS_EMOJI_SUPPORTED ? emoji.native : (\n        <img\n          src={src}\n          className={!isLoaded ? 'opacity-transition shown' : undefined}\n          alt={emoji.native}\n          loading=\"lazy\"\n          data-path={src}\n          onLoad={!isLoaded ? handleEmojiLoad : undefined}\n          draggable={false}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default memo(EmojiButton);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useRef } from '../../../lib/teact/teact';\n\nimport type { ObserveFn } from '../../../hooks/useIntersectionObserver';\n\nimport { EMOJI_SIZE_PICKER, RECENT_SYMBOL_SET_ID } from '../../../config';\nimport buildClassName from '../../../util/buildClassName';\nimport windowSize from '../../../util/windowSize';\nimport { REM } from '../../common/helpers/mediaDimensions';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport { useOnIntersect } from '../../../hooks/useIntersectionObserver';\nimport useMediaTransitionDeprecated from '../../../hooks/useMediaTransitionDeprecated';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport EmojiButton from './EmojiButton';\n\nconst EMOJIS_PER_ROW_ON_DESKTOP = 8;\nconst EMOJI_MARGIN = 0.625 * REM;\nconst EMOJI_VERTICAL_MARGIN = 0.25 * REM;\nconst EMOJI_VERTICAL_MARGIN_MOBILE = 0.5 * REM;\nconst MOBILE_CONTAINER_PADDING = 0.5 * REM;\n\ntype OwnProps = {\n  category: EmojiCategory;\n  index: number;\n  allEmojis: AllEmojis;\n  observeIntersection: ObserveFn;\n  shouldRender: boolean;\n  onEmojiSelect: (emoji: string, name: string) => void;\n};\n\nconst EmojiCategory: FC<OwnProps> = ({\n  category, index, allEmojis, observeIntersection, shouldRender, onEmojiSelect,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n\n  useOnIntersect(ref, observeIntersection);\n\n  const transitionClassNames = useMediaTransitionDeprecated(shouldRender);\n\n  const lang = useOldLang();\n  const { isMobile } = useAppLayout();\n\n  const emojisPerRow = isMobile\n    ? Math.floor(\n      (windowSize.get().width - MOBILE_CONTAINER_PADDING + EMOJI_MARGIN) / (EMOJI_SIZE_PICKER + EMOJI_MARGIN),\n    )\n    : EMOJIS_PER_ROW_ON_DESKTOP;\n  const height = Math.ceil(category.emojis.length / emojisPerRow)\n    * (EMOJI_SIZE_PICKER + (isMobile ? EMOJI_VERTICAL_MARGIN_MOBILE : EMOJI_VERTICAL_MARGIN));\n\n  return (\n    <div\n      ref={ref}\n      key={category.id}\n      id={`emoji-category-${index}`}\n      className=\"symbol-set\"\n    >\n      <div className=\"symbol-set-header\">\n        <p className=\"symbol-set-name\" dir=\"auto\">\n          {lang(category.id === RECENT_SYMBOL_SET_ID ? 'RecentStickers' : `Emoji${index}`)}\n        </p>\n      </div>\n      <div\n        className={buildClassName('symbol-set-container', transitionClassNames)}\n        style={`height: ${height}px;`}\n        dir={lang.isRtl ? 'rtl' : undefined}\n      >\n        {shouldRender && category.emojis.map((name) => {\n          const emoji = allEmojis[name];\n          // Recent emojis may contain emoticons that are no longer in the list\n          if (!emoji) {\n            return undefined;\n          }\n          // Some emojis have multiple skins and are represented as an Object with emojis for all skins.\n          // For now, we select only the first emoji with 'neutral' skin.\n          const displayedEmoji = 'id' in emoji ? emoji : emoji[1];\n\n          return (\n            <EmojiButton\n              key={displayedEmoji.id}\n              emoji={displayedEmoji}\n              onClick={onEmojiSelect}\n            />\n          );\n        })}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(EmojiCategory);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo,\n  useRef, useState,\n} from '../../../lib/teact/teact';\nimport { withGlobal } from '../../../global';\n\nimport type { GlobalState } from '../../../global/types';\nimport type {\n  EmojiData,\n  EmojiModule,\n  EmojiRawData,\n} from '../../../util/emoji/emoji';\n\nimport { MENU_TRANSITION_DURATION, RECENT_SYMBOL_SET_ID } from '../../../config';\nimport animateHorizontalScroll from '../../../util/animateHorizontalScroll';\nimport animateScroll from '../../../util/animateScroll';\nimport buildClassName from '../../../util/buildClassName';\nimport { uncompressEmoji } from '../../../util/emoji/emoji';\nimport { pick } from '../../../util/iteratees';\nimport { MEMO_EMPTY_ARRAY } from '../../../util/memo';\nimport { IS_TOUCH_ENV } from '../../../util/windowEnvironment';\nimport { REM } from '../../common/helpers/mediaDimensions';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useHorizontalScroll from '../../../hooks/useHorizontalScroll';\nimport { useIntersectionObserver } from '../../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useScrolledState from '../../../hooks/useScrolledState';\nimport useAsyncRendering from '../../right/hooks/useAsyncRendering';\n\nimport Button from '../../ui/Button';\nimport Loading from '../../ui/Loading';\nimport EmojiCategory from './EmojiCategory';\n\nimport './EmojiPicker.scss';\n\ntype OwnProps = {\n  className?: string;\n  onEmojiSelect: (emoji: string, name: string) => void;\n};\n\ntype StateProps = Pick<GlobalState, 'recentEmojis'>;\n\ntype EmojiCategoryData = { id: string; name: string; emojis: string[] };\n\nconst ICONS_BY_CATEGORY: Record<string, string> = {\n  recent: 'icon-recent',\n  people: 'icon-smile',\n  nature: 'icon-animals',\n  foods: 'icon-eats',\n  activity: 'icon-sport',\n  places: 'icon-car',\n  objects: 'icon-lamp',\n  symbols: 'icon-language',\n  flags: 'icon-flag',\n};\n\nconst OPEN_ANIMATION_DELAY = 200;\nconst SMOOTH_SCROLL_DISTANCE = 100;\nconst FOCUS_MARGIN = 3.25 * REM;\nconst HEADER_BUTTON_WIDTH = 2.625 * REM; // Includes margins\nconst INTERSECTION_THROTTLE = 200;\n\nconst categoryIntersections: boolean[] = [];\n\nlet emojiDataPromise: Promise<EmojiModule>;\nlet emojiRawData: EmojiRawData;\nlet emojiData: EmojiData;\n\nconst EmojiPicker: FC<OwnProps & StateProps> = ({\n  className,\n  recentEmojis,\n  onEmojiSelect,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const headerRef = useRef<HTMLDivElement>(null);\n\n  const [categories, setCategories] = useState<EmojiCategoryData[]>();\n  const [emojis, setEmojis] = useState<AllEmojis>();\n  const [activeCategoryIndex, setActiveCategoryIndex] = useState(0);\n  const { isMobile } = useAppLayout();\n  const {\n    handleScroll: handleContentScroll,\n    isAtBeginning: shouldHideTopBorder,\n  } = useScrolledState();\n\n  const { observe: observeIntersection } = useIntersectionObserver({\n    rootRef: containerRef,\n    throttleMs: INTERSECTION_THROTTLE,\n  }, (entries) => {\n    entries.forEach((entry) => {\n      const { id } = entry.target as HTMLDivElement;\n      if (!id || !id.startsWith('emoji-category-')) {\n        return;\n      }\n\n      const index = Number(id.replace('emoji-category-', ''));\n      categoryIntersections[index] = entry.isIntersecting;\n    });\n\n    const minIntersectingIndex = categoryIntersections.reduce((lowestIndex, isIntersecting, index) => {\n      return isIntersecting && index < lowestIndex ? index : lowestIndex;\n    }, Infinity);\n\n    if (minIntersectingIndex === Infinity) {\n      return;\n    }\n\n    setActiveCategoryIndex(minIntersectingIndex);\n  });\n\n  const canRenderContents = useAsyncRendering([], MENU_TRANSITION_DURATION);\n  const shouldRenderContent = emojis && canRenderContents;\n\n  useHorizontalScroll(headerRef, !(isMobile && shouldRenderContent));\n\n  // Scroll header when active set updates\n  useEffect(() => {\n    if (!categories) {\n      return;\n    }\n\n    const header = headerRef.current;\n    if (!header) {\n      return;\n    }\n\n    const newLeft = activeCategoryIndex * HEADER_BUTTON_WIDTH - header.offsetWidth / 2 + HEADER_BUTTON_WIDTH / 2;\n\n    animateHorizontalScroll(header, newLeft);\n  }, [categories, activeCategoryIndex]);\n\n  const lang = useOldLang();\n\n  const allCategories = useMemo(() => {\n    if (!categories) {\n      return MEMO_EMPTY_ARRAY;\n    }\n    const themeCategories = [...categories];\n    if (recentEmojis?.length) {\n      themeCategories.unshift({\n        id: RECENT_SYMBOL_SET_ID,\n        name: lang('RecentStickers'),\n        emojis: recentEmojis,\n      });\n    }\n\n    return themeCategories;\n  }, [categories, lang, recentEmojis]);\n\n  // Initialize data on first render.\n  useEffect(() => {\n    setTimeout(() => {\n      const exec = () => {\n        setCategories(emojiData.categories);\n\n        setEmojis(emojiData.emojis as AllEmojis);\n      };\n\n      if (emojiData) {\n        exec();\n      } else {\n        ensureEmojiData()\n          .then(exec);\n      }\n    }, OPEN_ANIMATION_DELAY);\n  }, []);\n\n  const selectCategory = useLastCallback((index: number) => {\n    setActiveCategoryIndex(index);\n    const categoryEl = containerRef.current!.closest<HTMLElement>('.SymbolMenu-main')!\n      .querySelector(`#emoji-category-${index}`)! as HTMLElement;\n    animateScroll(containerRef.current!, categoryEl, 'start', FOCUS_MARGIN, SMOOTH_SCROLL_DISTANCE);\n  });\n\n  const handleEmojiSelect = useLastCallback((emoji: string, name: string) => {\n    onEmojiSelect(emoji, name);\n  });\n\n  function renderCategoryButton(category: EmojiCategoryData, index: number) {\n    const icon = ICONS_BY_CATEGORY[category.id];\n\n    return icon && (\n      <Button\n        className={`symbol-set-button ${index === activeCategoryIndex ? 'activated' : ''}`}\n        round\n        faded\n        color=\"translucent\"\n        // eslint-disable-next-line react/jsx-no-bind\n        onClick={() => selectCategory(index)}\n        ariaLabel={category.name}\n      >\n        <i className={buildClassName('icon', icon)} />\n      </Button>\n    );\n  }\n\n  const containerClassName = buildClassName('EmojiPicker', className);\n\n  if (!shouldRenderContent) {\n    return (\n      <div className={containerClassName}>\n        <Loading />\n      </div>\n    );\n  }\n\n  const headerClassName = buildClassName(\n    'EmojiPicker-header',\n    !shouldHideTopBorder && 'with-top-border',\n  );\n\n  return (\n    <div className={containerClassName}>\n      <div\n        ref={headerRef}\n        className={headerClassName}\n        dir={lang.isRtl ? 'rtl' : undefined}\n      >\n        {allCategories.map(renderCategoryButton)}\n      </div>\n      <div\n        ref={containerRef}\n        onScroll={handleContentScroll}\n        className={buildClassName('EmojiPicker-main', IS_TOUCH_ENV ? 'no-scrollbar' : 'custom-scroll')}\n      >\n        {allCategories.map((category, i) => (\n          <EmojiCategory\n            category={category}\n            index={i}\n            allEmojis={emojis}\n            observeIntersection={observeIntersection}\n            shouldRender={activeCategoryIndex >= i - 1 && activeCategoryIndex <= i + 1}\n            onEmojiSelect={handleEmojiSelect}\n          />\n        ))}\n      </div>\n    </div>\n  );\n};\n\nasync function ensureEmojiData() {\n  if (!emojiDataPromise) {\n    emojiDataPromise = import('emoji-data-ios/emoji-data.json');\n    emojiRawData = (await emojiDataPromise).default;\n\n    emojiData = uncompressEmoji(emojiRawData);\n  }\n\n  return emojiDataPromise;\n}\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => pick(global, ['recentEmojis']),\n)(EmojiPicker));\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useRef, useState,\n} from '../../lib/teact/teact';\n\nimport type { ApiVideo } from '../../api/types';\nimport type { ObserveFn } from '../../hooks/useIntersectionObserver';\n\nimport { getVideoMediaHash, getVideoPreviewMediaHash } from '../../global/helpers';\nimport buildClassName from '../../util/buildClassName';\nimport { IS_TOUCH_ENV } from '../../util/windowEnvironment';\nimport { preventMessageInputBlurWithBubbling } from '../middle/helpers/preventMessageInputBlur';\n\nimport useBuffering from '../../hooks/useBuffering';\nimport useCanvasBlur from '../../hooks/useCanvasBlur';\nimport useContextMenuHandlers from '../../hooks/useContextMenuHandlers';\nimport { useIsIntersecting } from '../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useMedia from '../../hooks/useMedia';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Button from '../ui/Button';\nimport Menu from '../ui/Menu';\nimport MenuItem from '../ui/MenuItem';\nimport OptimizedVideo from '../ui/OptimizedVideo';\nimport Spinner from '../ui/Spinner';\n\nimport './GifButton.scss';\n\ntype OwnProps = {\n  gif: ApiVideo;\n  observeIntersection: ObserveFn;\n  isDisabled?: boolean;\n  className?: string;\n  onClick?: (gif: ApiVideo, isSilent?: boolean, shouldSchedule?: boolean) => void;\n  onUnsaveClick?: (gif: ApiVideo) => void;\n  isSavedMessages?: boolean;\n};\n\nconst GifButton: FC<OwnProps> = ({\n  gif,\n  isDisabled,\n  className,\n  observeIntersection,\n  onClick,\n  onUnsaveClick,\n  isSavedMessages,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n\n  const lang = useOldLang();\n\n  const isIntersecting = useIsIntersecting(ref, observeIntersection);\n  const loadAndPlay = isIntersecting && !isDisabled;\n  const previewHash = !gif.hasVideoPreview && gif.thumbnail && getVideoMediaHash(gif, 'pictogram');\n  const previewBlobUrl = useMedia(previewHash, !loadAndPlay);\n\n  const [withThumb] = useState(gif.thumbnail?.dataUri && !previewBlobUrl);\n  const thumbRef = useCanvasBlur(gif.thumbnail?.dataUri, !withThumb);\n\n  const videoHash = getVideoPreviewMediaHash(gif) || getVideoMediaHash(gif, 'full');\n  const videoData = useMedia(videoHash, !loadAndPlay);\n\n  const shouldRenderVideo = Boolean(loadAndPlay && videoData);\n  const { isBuffered, bufferingHandlers } = useBuffering(true);\n  const shouldRenderSpinner = loadAndPlay && !isBuffered;\n  const isVideoReady = loadAndPlay && isBuffered;\n\n  const {\n    isContextMenuOpen, contextMenuAnchor,\n    handleBeforeContextMenu, handleContextMenu,\n    handleContextMenuClose, handleContextMenuHide,\n  } = useContextMenuHandlers(ref);\n\n  const getTriggerElement = useLastCallback(() => ref.current);\n  const getRootElement = useLastCallback(() => ref.current!.closest('.custom-scroll, .no-scrollbar'));\n  const getMenuElement = useLastCallback(() => ref.current!.querySelector('.gif-context-menu .bubble'));\n\n  const handleClick = useLastCallback(() => {\n    if (isContextMenuOpen || !onClick) return;\n    onClick({\n      ...gif,\n      blobUrl: videoData,\n    });\n  });\n\n  const handleUnsaveClick = useLastCallback((e: React.MouseEvent) => {\n    e.stopPropagation();\n    e.preventDefault();\n    onUnsaveClick!(gif);\n  });\n\n  const handleContextDelete = useLastCallback(() => {\n    onUnsaveClick?.(gif);\n  });\n\n  const handleSendQuiet = useLastCallback(() => {\n    onClick!({\n      ...gif,\n      blobUrl: videoData,\n    }, true);\n  });\n\n  const handleSendScheduled = useLastCallback(() => {\n    onClick!({\n      ...gif,\n      blobUrl: videoData,\n    }, undefined, true);\n  });\n\n  const handleMouseDown = useLastCallback((e: React.MouseEvent<HTMLElement>) => {\n    preventMessageInputBlurWithBubbling(e);\n    handleBeforeContextMenu(e);\n  });\n\n  useEffect(() => {\n    if (isDisabled) handleContextMenuClose();\n  }, [handleContextMenuClose, isDisabled]);\n\n  const fullClassName = buildClassName(\n    'GifButton',\n    gif.width && gif.height && gif.width < gif.height ? 'vertical' : 'horizontal',\n    onClick && 'interactive',\n    className,\n  );\n\n  return (\n    <div\n      ref={ref}\n      className={fullClassName}\n      onMouseDown={handleMouseDown}\n      onClick={handleClick}\n      onContextMenu={handleContextMenu}\n    >\n      {!IS_TOUCH_ENV && onUnsaveClick && (\n        <Button\n          className=\"gif-unsave-button\"\n          color=\"dark\"\n          pill\n          noFastClick\n          onClick={handleUnsaveClick}\n        >\n          <i className=\"icon icon-close gif-unsave-button-icon\" />\n        </Button>\n      )}\n      {withThumb && (\n        <canvas\n          ref={thumbRef}\n          className=\"thumbnail\"\n        />\n      )}\n      {previewBlobUrl && !isVideoReady && (\n        <img\n          src={previewBlobUrl}\n          alt=\"\"\n          className=\"preview\"\n          draggable={false}\n        />\n      )}\n      {shouldRenderVideo && (\n        <OptimizedVideo\n          canPlay\n          src={videoData}\n          autoPlay\n          loop\n          muted\n          disablePictureInPicture\n          playsInline\n          preload=\"none\"\n          // eslint-disable-next-line react/jsx-props-no-spreading\n          {...bufferingHandlers}\n        />\n      )}\n      {shouldRenderSpinner && (\n        <Spinner color={previewBlobUrl || withThumb ? 'white' : 'black'} />\n      )}\n      {onClick && contextMenuAnchor !== undefined && (\n        <Menu\n          isOpen={isContextMenuOpen}\n          anchor={contextMenuAnchor}\n          getTriggerElement={getTriggerElement}\n          getRootElement={getRootElement}\n          getMenuElement={getMenuElement}\n          className=\"gif-context-menu\"\n          autoClose\n          onClose={handleContextMenuClose}\n          onCloseAnimationEnd={handleContextMenuHide}\n        >\n          {!isSavedMessages && <MenuItem onClick={handleSendQuiet} icon=\"mute\">{lang('SendWithoutSound')}</MenuItem>}\n          <MenuItem onClick={handleSendScheduled} icon=\"calendar\">\n            {lang(isSavedMessages ? 'SetReminder' : 'ScheduleMessage')}\n          </MenuItem>\n          {onUnsaveClick && (\n            <MenuItem destructive icon=\"delete\" onClick={handleContextDelete}>{lang('Delete')}</MenuItem>\n          )}\n        </Menu>\n      )}\n    </div>\n  );\n};\n\nexport default memo(GifButton);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useRef,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiVideo } from '../../../api/types';\n\nimport { SLIDE_TRANSITION_DURATION } from '../../../config';\nimport { selectCurrentMessageList, selectIsChatWithSelf } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { IS_TOUCH_ENV } from '../../../util/windowEnvironment';\n\nimport { useIntersectionObserver } from '../../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useAsyncRendering from '../../right/hooks/useAsyncRendering';\n\nimport GifButton from '../../common/GifButton';\nimport Loading from '../../ui/Loading';\n\nimport './GifPicker.scss';\n\ntype OwnProps = {\n  className: string;\n  loadAndPlay: boolean;\n  canSendGifs?: boolean;\n  onGifSelect?: (gif: ApiVideo, isSilent?: boolean, shouldSchedule?: boolean) => void;\n};\n\ntype StateProps = {\n  savedGifs?: ApiVideo[];\n  isSavedMessages?: boolean;\n};\n\nconst INTERSECTION_DEBOUNCE = 300;\n\nconst GifPicker: FC<OwnProps & StateProps> = ({\n  className,\n  loadAndPlay,\n  canSendGifs,\n  savedGifs,\n  isSavedMessages,\n  onGifSelect,\n}) => {\n  const { loadSavedGifs, saveGif } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n\n  const {\n    observe: observeIntersection,\n  } = useIntersectionObserver({ rootRef: containerRef, debounceMs: INTERSECTION_DEBOUNCE });\n\n  useEffect(() => {\n    if (loadAndPlay) {\n      loadSavedGifs();\n    }\n  }, [loadAndPlay, loadSavedGifs]);\n\n  const handleUnsaveClick = useLastCallback((gif: ApiVideo) => {\n    saveGif({ gif, shouldUnsave: true });\n  });\n\n  const canRenderContents = useAsyncRendering([], SLIDE_TRANSITION_DURATION);\n\n  return (\n    <div>\n      <div\n        ref={containerRef}\n        className={buildClassName('GifPicker', className, IS_TOUCH_ENV ? 'no-scrollbar' : 'custom-scroll')}\n      >\n        {!canSendGifs ? (\n          <div className=\"picker-disabled\">Sending GIFs is not allowed in this chat.</div>\n        ) : canRenderContents && savedGifs && savedGifs.length ? (\n          savedGifs.map((gif) => (\n            <GifButton\n              key={gif.id}\n              gif={gif}\n              observeIntersection={observeIntersection}\n              isDisabled={!loadAndPlay}\n              onClick={canSendGifs ? onGifSelect : undefined}\n              onUnsaveClick={handleUnsaveClick}\n              isSavedMessages={isSavedMessages}\n            />\n          ))\n        ) : canRenderContents && savedGifs ? (\n          <div className=\"picker-disabled\">No saved GIFs.</div>\n        ) : (\n          <Loading />\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const { chatId } = selectCurrentMessageList(global) || {};\n    const isSavedMessages = Boolean(chatId) && selectIsChatWithSelf(global, chatId);\n    return {\n      savedGifs: global.gifs.saved.gifs,\n      isSavedMessages,\n    };\n  },\n)(GifPicker));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo } from '../../../lib/teact/teact';\n\nimport buildClassName from '../../../util/buildClassName';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Button from '../../ui/Button';\n\ntype OwnProps = {\n  activeTab: SymbolMenuTabs;\n  onSwitchTab: (tab: SymbolMenuTabs) => void;\n  onRemoveSymbol: () => void;\n  onSearchOpen: (type: 'stickers' | 'gifs') => void;\n  isAttachmentModal?: boolean;\n  canSendPlainText?: boolean;\n  canSearch?: boolean;\n};\n\nexport enum SymbolMenuTabs {\n  'Emoji',\n  'CustomEmoji',\n  'Stickers',\n  'GIFs',\n}\n\nexport const SYMBOL_MENU_TAB_TITLES: Record<SymbolMenuTabs, string> = {\n  [SymbolMenuTabs.Emoji]: 'Emoji',\n  [SymbolMenuTabs.CustomEmoji]: 'StickersList.EmojiItem',\n  [SymbolMenuTabs.Stickers]: 'AccDescrStickers',\n  [SymbolMenuTabs.GIFs]: 'GifsTab',\n};\n\nconst SYMBOL_MENU_TAB_ICONS = {\n  [SymbolMenuTabs.Emoji]: 'icon-smile',\n  [SymbolMenuTabs.CustomEmoji]: 'icon-favorite',\n  [SymbolMenuTabs.Stickers]: 'icon-stickers',\n  [SymbolMenuTabs.GIFs]: 'icon-gifs',\n};\n\nconst SymbolMenuFooter: FC<OwnProps> = ({\n  activeTab, onSwitchTab, onRemoveSymbol, onSearchOpen, isAttachmentModal,\n  canSendPlainText, canSearch,\n}) => {\n  const lang = useOldLang();\n\n  function renderTabButton(tab: SymbolMenuTabs) {\n    return (\n      <Button\n        className={`symbol-tab-button ${activeTab === tab ? 'activated' : ''}`}\n        // eslint-disable-next-line react/jsx-no-bind\n        onClick={() => onSwitchTab(tab)}\n        ariaLabel={lang(SYMBOL_MENU_TAB_TITLES[tab])}\n        round\n        faded\n        color=\"translucent\"\n      >\n        <i className={buildClassName('icon', SYMBOL_MENU_TAB_ICONS[tab])} />\n      </Button>\n    );\n  }\n\n  const handleSearchOpen = useLastCallback(() => {\n    onSearchOpen(activeTab === SymbolMenuTabs.Stickers ? 'stickers' : 'gifs');\n  });\n\n  function stopPropagation(event: any) {\n    event.stopPropagation();\n  }\n\n  return (\n    <div className=\"SymbolMenu-footer\" onClick={stopPropagation} dir={lang.isRtl ? 'rtl' : undefined}>\n      {activeTab !== SymbolMenuTabs.Emoji && activeTab !== SymbolMenuTabs.CustomEmoji && canSearch && (\n        <Button\n          className=\"symbol-search-button\"\n          ariaLabel={activeTab === SymbolMenuTabs.Stickers ? 'Search Stickers' : 'Search GIFs'}\n          round\n          faded\n          color=\"translucent\"\n          onClick={handleSearchOpen}\n        >\n          <i className=\"icon icon-search\" />\n        </Button>\n      )}\n\n      {canSendPlainText && renderTabButton(SymbolMenuTabs.Emoji)}\n      {canSendPlainText && renderTabButton(SymbolMenuTabs.CustomEmoji)}\n      {!isAttachmentModal && renderTabButton(SymbolMenuTabs.Stickers)}\n      {!isAttachmentModal && renderTabButton(SymbolMenuTabs.GIFs)}\n\n      {(activeTab === SymbolMenuTabs.Emoji || activeTab === SymbolMenuTabs.CustomEmoji) && (\n        <Button\n          className=\"symbol-delete-button\"\n          onClick={onRemoveSymbol}\n          ariaLabel=\"Remove Symbol\"\n          round\n          faded\n          color=\"translucent\"\n        >\n          <i className=\"icon icon-delete-left\" />\n        </Button>\n      )}\n    </div>\n  );\n};\n\nexport default memo(SymbolMenuFooter);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useLayoutEffect, useRef, useState,\n} from '../../../lib/teact/teact';\nimport { withGlobal } from '../../../global';\n\nimport type { ApiSticker, ApiVideo } from '../../../api/types';\nimport type { GlobalActions } from '../../../global';\nimport type { ThreadId } from '../../../types';\nimport type { MenuPositionOptions } from '../../ui/Menu';\n\nimport { requestMutation } from '../../../lib/fasterdom/fasterdom';\nimport { selectIsContextMenuTranslucent, selectTabState } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { IS_TOUCH_ENV } from '../../../util/windowEnvironment';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMouseInside from '../../../hooks/useMouseInside';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useShowTransitionDeprecated from '../../../hooks/useShowTransitionDeprecated';\n\nimport CustomEmojiPicker from '../../common/CustomEmojiPicker';\nimport Button from '../../ui/Button';\nimport Menu from '../../ui/Menu';\nimport Portal from '../../ui/Portal';\nimport Transition from '../../ui/Transition';\nimport EmojiPicker from './EmojiPicker';\nimport GifPicker from './GifPicker';\nimport StickerPicker from './StickerPicker';\nimport SymbolMenuFooter, { SYMBOL_MENU_TAB_TITLES, SymbolMenuTabs } from './SymbolMenuFooter';\n\nimport './SymbolMenu.scss';\n\nconst ANIMATION_DURATION = 350;\nconst STICKERS_TAB_INDEX = 2;\n\nexport type OwnProps = {\n  chatId: string;\n  threadId?: ThreadId;\n  isOpen: boolean;\n  canSendStickers?: boolean;\n  canSendGifs?: boolean;\n  isMessageComposer?: boolean;\n  idPrefix: string;\n  onLoad: () => void;\n  onClose: () => void;\n  onEmojiSelect: (emoji: string) => void;\n  onCustomEmojiSelect: (emoji: ApiSticker) => void;\n  onStickerSelect?: (\n    sticker: ApiSticker,\n    isSilent?: boolean,\n    shouldSchedule?: boolean,\n    shouldPreserveInput?: boolean,\n    canUpdateStickerSetsOrder?: boolean,\n  ) => void;\n  onGifSelect?: (gif: ApiVideo, isSilent?: boolean, shouldSchedule?: boolean) => void;\n  onRemoveSymbol: () => void;\n  onSearchOpen: (type: 'stickers' | 'gifs') => void;\n  addRecentEmoji: GlobalActions['addRecentEmoji'];\n  addRecentCustomEmoji: GlobalActions['addRecentCustomEmoji'];\n  className?: string;\n  isAttachmentModal?: boolean;\n  canSendPlainText?: boolean;\n}\n& MenuPositionOptions;\n\ntype StateProps = {\n  isLeftColumnShown: boolean;\n  isBackgroundTranslucent?: boolean;\n};\n\nlet isActivated = false;\n\nconst SymbolMenu: FC<OwnProps & StateProps> = ({\n  chatId,\n  threadId,\n  isOpen,\n  canSendStickers,\n  canSendGifs,\n  isMessageComposer,\n  isLeftColumnShown,\n  idPrefix,\n  isAttachmentModal,\n  canSendPlainText,\n  className,\n  isBackgroundTranslucent,\n  onLoad,\n  onClose,\n  onEmojiSelect,\n  onCustomEmojiSelect,\n  onStickerSelect,\n  onGifSelect,\n  onRemoveSymbol,\n  onSearchOpen,\n  addRecentEmoji,\n  addRecentCustomEmoji,\n  ...menuPositionOptions\n}) => {\n  const [activeTab, setActiveTab] = useState<number>(0);\n  const [recentEmojis, setRecentEmojis] = useState<string[]>([]);\n  const [recentCustomEmojis, setRecentCustomEmojis] = useState<string[]>([]);\n  const { isMobile } = useAppLayout();\n\n  const [handleMouseEnter, handleMouseLeave] = useMouseInside(isOpen, onClose, undefined, isMobile);\n  const { shouldRender, transitionClassNames } = useShowTransitionDeprecated(isOpen, onClose, false, false);\n\n  const lang = useOldLang();\n\n  if (!isActivated && isOpen) {\n    isActivated = true;\n  }\n\n  useEffect(() => {\n    onLoad();\n  }, [onLoad]);\n\n  // If we can't send plain text, we should always show the stickers tab\n  useEffect(() => {\n    if (canSendPlainText) return;\n    setActiveTab(STICKERS_TAB_INDEX);\n  }, [canSendPlainText]);\n\n  useLayoutEffect(() => {\n    if (!isMobile || !isOpen || isAttachmentModal) {\n      return undefined;\n    }\n\n    document.body.classList.add('enable-symbol-menu-transforms');\n    document.body.classList.add('is-symbol-menu-open');\n\n    return () => {\n      document.body.classList.remove('is-symbol-menu-open');\n\n      setTimeout(() => {\n        requestMutation(() => {\n          document.body.classList.remove('enable-symbol-menu-transforms');\n        });\n      }, ANIMATION_DURATION);\n    };\n  }, [isAttachmentModal, isMobile, isOpen]);\n\n  const recentEmojisRef = useRef(recentEmojis);\n  recentEmojisRef.current = recentEmojis;\n  useEffect(() => {\n    if (!recentEmojisRef.current.length || isOpen) {\n      return;\n    }\n\n    recentEmojisRef.current.forEach((name) => {\n      addRecentEmoji({ emoji: name });\n    });\n\n    setRecentEmojis([]);\n  }, [isOpen, addRecentEmoji]);\n\n  const handleEmojiSelect = useLastCallback((emoji: string, name: string) => {\n    setRecentEmojis((emojis) => [...emojis, name]);\n\n    onEmojiSelect(emoji);\n  });\n\n  const recentCustomEmojisRef = useRef(recentCustomEmojis);\n  recentCustomEmojisRef.current = recentCustomEmojis;\n  useEffect(() => {\n    if (!recentCustomEmojisRef.current.length || isOpen) {\n      return;\n    }\n\n    recentCustomEmojisRef.current.forEach((documentId) => {\n      addRecentCustomEmoji({\n        documentId,\n      });\n    });\n\n    setRecentEmojis([]);\n  }, [isOpen, addRecentCustomEmoji]);\n\n  const handleCustomEmojiSelect = useLastCallback((emoji: ApiSticker) => {\n    setRecentCustomEmojis((ids) => [...ids, emoji.id]);\n\n    onCustomEmojiSelect(emoji);\n  });\n\n  const handleSearch = useLastCallback((type: 'stickers' | 'gifs') => {\n    onClose();\n    onSearchOpen(type);\n  });\n\n  const handleStickerSelect = useLastCallback((\n    sticker: ApiSticker, isSilent?: boolean, shouldSchedule?: boolean, canUpdateStickerSetsOrder?: boolean,\n  ) => {\n    onStickerSelect?.(sticker, isSilent, shouldSchedule, true, canUpdateStickerSetsOrder);\n  });\n\n  function renderContent(isActive: boolean, isFrom: boolean) {\n    switch (activeTab) {\n      case SymbolMenuTabs.Emoji:\n        return (\n          <EmojiPicker\n            className=\"picker-tab\"\n            onEmojiSelect={handleEmojiSelect}\n          />\n        );\n      case SymbolMenuTabs.CustomEmoji:\n        return (\n          <CustomEmojiPicker\n            className=\"picker-tab\"\n            isHidden={!isOpen || !isActive}\n            idPrefix={idPrefix}\n            loadAndPlay={isOpen && (isActive || isFrom)}\n            chatId={chatId}\n            isTranslucent={!isMobile && isBackgroundTranslucent}\n            onCustomEmojiSelect={handleCustomEmojiSelect}\n          />\n        );\n      case SymbolMenuTabs.Stickers:\n        return (\n          <StickerPicker\n            className=\"picker-tab\"\n            isHidden={!isOpen || !isActive}\n            loadAndPlay={canSendStickers ? isOpen && (isActive || isFrom) : false}\n            idPrefix={idPrefix}\n            canSendStickers={canSendStickers}\n            noContextMenus={!isMessageComposer}\n            chatId={chatId}\n            threadId={threadId}\n            isTranslucent={!isMobile && isBackgroundTranslucent}\n            onStickerSelect={handleStickerSelect}\n          />\n        );\n      case SymbolMenuTabs.GIFs:\n        return (\n          <GifPicker\n            className=\"picker-tab\"\n            loadAndPlay={canSendGifs ? isOpen && (isActive || isFrom) : false}\n            canSendGifs={canSendGifs}\n            onGifSelect={onGifSelect}\n          />\n        );\n    }\n\n    return undefined;\n  }\n\n  function stopPropagation(event: any) {\n    event.stopPropagation();\n  }\n\n  const content = (\n    <>\n      <div className=\"SymbolMenu-main\" onClick={stopPropagation}>\n        {isActivated && (\n          <Transition\n            name=\"slide\"\n            activeKey={activeTab}\n            renderCount={Object.values(SYMBOL_MENU_TAB_TITLES).length}\n          >\n            {renderContent}\n          </Transition>\n        )}\n      </div>\n      {isMobile && (\n        <Button\n          round\n          faded\n          color=\"translucent\"\n          ariaLabel={lang('Close')}\n          className=\"symbol-close-button\"\n          size=\"tiny\"\n          onClick={onClose}\n        >\n          <i className=\"icon icon-close\" />\n        </Button>\n      )}\n      <SymbolMenuFooter\n        activeTab={activeTab}\n        onSwitchTab={setActiveTab}\n        onRemoveSymbol={onRemoveSymbol}\n        canSearch={isMessageComposer}\n        onSearchOpen={handleSearch}\n        isAttachmentModal={isAttachmentModal}\n        canSendPlainText={canSendPlainText}\n      />\n    </>\n  );\n\n  if (isMobile) {\n    if (!shouldRender) {\n      return undefined;\n    }\n\n    const mobileClassName = buildClassName(\n      'SymbolMenu mobile-menu',\n      transitionClassNames,\n      isLeftColumnShown && 'left-column-open',\n      isAttachmentModal && 'in-attachment-modal',\n      isMessageComposer && 'in-middle-column',\n    );\n\n    if (isAttachmentModal) {\n      return (\n        <div className={mobileClassName}>\n          {content}\n        </div>\n      );\n    }\n\n    return (\n      <Portal>\n        <div className={mobileClassName}>\n          {content}\n        </div>\n      </Portal>\n    );\n  }\n\n  return (\n    <Menu\n      isOpen={isOpen}\n      onClose={onClose}\n      withPortal={isAttachmentModal}\n      className={buildClassName('SymbolMenu', className)}\n      onCloseAnimationEnd={onClose}\n      onMouseEnter={!IS_TOUCH_ENV ? handleMouseEnter : undefined}\n      onMouseLeave={!IS_TOUCH_ENV ? handleMouseLeave : undefined}\n      noCloseOnBackdrop={!IS_TOUCH_ENV}\n      noCompact\n      // eslint-disable-next-line react/jsx-props-no-spreading\n      {...(isAttachmentModal ? menuPositionOptions : {\n        positionX: 'left',\n        positionY: 'bottom',\n      })}\n    >\n      {content}\n    </Menu>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    return {\n      isLeftColumnShown: selectTabState(global).isLeftColumnShown,\n      isBackgroundTranslucent: selectIsContextMenuTranslucent(global),\n    };\n  },\n)(SymbolMenu));\n","import React, { memo } from '../../../lib/teact/teact';\n\nimport type { ApiUser } from '../../../api/types';\n\nimport buildClassName from '../../../util/buildClassName';\nimport renderText from '../../common/helpers/renderText';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\n\nimport Avatar from '../../common/Avatar';\nimport ListItem from '../../ui/ListItem';\n\nimport './ChatCommand.scss';\n\ntype OwnProps<T = undefined> = {\n  command: string;\n  description: string;\n  peer?: ApiUser;\n  withAvatar?: boolean;\n  focus?: boolean;\n  clickArg: T;\n  onClick: (arg: T) => void;\n};\n\n// eslint-disable-next-line @typescript-eslint/comma-dangle\nconst ChatCommand = <T,>({\n  withAvatar,\n  focus,\n  command,\n  description,\n  peer,\n  clickArg,\n  onClick,\n}: OwnProps<T>) => {\n  const handleClick = useLastCallback(() => {\n    onClick(clickArg);\n  });\n\n  return (\n    <ListItem\n      key={command}\n      className={buildClassName('BotCommand chat-item-clickable scroll-item', withAvatar && 'with-avatar')}\n      multiline\n      onClick={handleClick}\n      focus={focus}\n    >\n      {withAvatar && (\n        <Avatar size=\"small\" peer={peer} />\n      )}\n      <div className=\"content-inner\">\n        <span className=\"title\">/{command}</span>\n        <span className=\"subtitle\">{renderText(description)}</span>\n      </div>\n    </ListItem>\n  );\n};\n\nexport default memo(ChatCommand);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo, useRef,\n} from '../../../lib/teact/teact';\nimport { getActions, getGlobal } from '../../../global';\n\nimport type {\n  ApiBotCommand, ApiMessage, ApiQuickReply, ApiUser,\n} from '../../../api/types';\nimport type { Signal } from '../../../util/signals';\n\nimport buildClassName from '../../../util/buildClassName';\nimport freezeWhenClosed from '../../../util/hoc/freezeWhenClosed';\nimport setTooltipItemVisible from '../../../util/setTooltipItemVisible';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useShowTransitionDeprecated from '../../../hooks/useShowTransitionDeprecated';\nimport { useKeyboardNavigation } from './hooks/useKeyboardNavigation';\n\nimport ChatCommand from './ChatCommand';\n\nimport styles from './ChatCommandTooltip.module.scss';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  chatId: string;\n  withUsername?: boolean;\n  botCommands?: ApiBotCommand[];\n  quickReplies?: ApiQuickReply[];\n  quickReplyMessages?: Record<number, ApiMessage>;\n  self: ApiUser;\n  getHtml: Signal<string>;\n  onClick: NoneToVoidFunction;\n  onClose: NoneToVoidFunction;\n};\n\ntype QuickReplyWithDescription = {\n  id: number;\n  command: string;\n  description: string;\n};\n\nconst ChatCommandTooltip: FC<OwnProps> = ({\n  isOpen,\n  chatId,\n  withUsername,\n  botCommands,\n  quickReplies,\n  quickReplyMessages,\n  self,\n  getHtml,\n  onClick,\n  onClose,\n}) => {\n  const { sendBotCommand, sendQuickReply } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  const { shouldRender, transitionClassNames } = useShowTransitionDeprecated(isOpen, undefined, undefined, false);\n\n  const handleSendCommand = useLastCallback(({ botId, command }: ApiBotCommand) => {\n    // No need for expensive global updates on users and chats, so we avoid them\n    const usersById = getGlobal().users.byId;\n    const bot = usersById[botId];\n\n    sendBotCommand({\n      command: `/${command}${withUsername && bot ? `@${bot.usernames![0].username}` : ''}`,\n    });\n    onClick();\n  });\n\n  const handleSendQuickReply = useLastCallback((id: number) => {\n    sendQuickReply({ chatId, quickReplyId: id });\n    onClick();\n  });\n\n  const quickRepliesWithDescription = useMemo(() => {\n    if (!quickReplies?.length || !quickReplyMessages) return undefined;\n    return quickReplies.map((reply) => {\n      const message = quickReplyMessages[reply.topMessageId];\n      return {\n        id: reply.id,\n        command: reply.shortcut,\n        description: message?.content.text?.text || '',\n      } satisfies QuickReplyWithDescription;\n    });\n  }, [quickReplies, quickReplyMessages]);\n\n  const handleKeyboardSelect = useLastCallback((item: ApiBotCommand | QuickReplyWithDescription) => {\n    if (!item.command.startsWith(getHtml().slice(1))) {\n      return false;\n    }\n\n    if ('id' in item) {\n      handleSendQuickReply(item.id);\n    } else {\n      handleSendCommand(item);\n    }\n\n    return true;\n  });\n\n  const keyboardNavigationItems = useMemo(() => {\n    if (!botCommands && !quickRepliesWithDescription) return undefined;\n    return ([] as (ApiBotCommand | QuickReplyWithDescription)[])\n      .concat(quickRepliesWithDescription || [], botCommands || []);\n  }, [botCommands, quickRepliesWithDescription]);\n\n  const selectedCommandIndex = useKeyboardNavigation({\n    isActive: isOpen,\n    items: keyboardNavigationItems,\n    onSelect: handleKeyboardSelect,\n    onClose,\n  });\n\n  const isEmpty = (botCommands && !botCommands.length) || (quickReplies && !quickReplies.length);\n\n  useEffect(() => {\n    if (isEmpty) {\n      onClose();\n    }\n  }, [isEmpty, onClose]);\n\n  useEffect(() => {\n    setTooltipItemVisible('.chat-item-clickable', selectedCommandIndex, containerRef);\n  }, [selectedCommandIndex]);\n\n  if (!shouldRender || isEmpty) {\n    return undefined;\n  }\n\n  const className = buildClassName(\n    styles.root,\n    'composer-tooltip custom-scroll',\n    transitionClassNames,\n  );\n\n  return (\n    <div className={className} ref={containerRef}>\n      {quickRepliesWithDescription?.map((reply, index) => (\n        <ChatCommand\n          key={`quickReply_${reply.id}`}\n          command={reply.command}\n          description={reply.description}\n          peer={self}\n          withAvatar\n          clickArg={reply.id}\n          onClick={handleSendQuickReply}\n          focus={selectedCommandIndex === index}\n        />\n      ))}\n      {botCommands?.map((command, index) => (\n        <ChatCommand\n          key={`${command.botId}_${command.command}`}\n          command={command.command}\n          description={command.description}\n          // No need for expensive global updates on users and chats, so we avoid them\n          peer={getGlobal().users.byId[command.botId]}\n          withAvatar\n          clickArg={command}\n          onClick={handleSendCommand}\n          focus={selectedCommandIndex + (quickRepliesWithDescription?.length || 0) === index}\n        />\n      ))}\n    </div>\n  );\n};\n\nexport default memo(freezeWhenClosed(ChatCommandTooltip));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"iaTB59vy\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiBotCommand } from '../../../api/types';\n\nimport { IS_TOUCH_ENV } from '../../../util/windowEnvironment';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMouseInside from '../../../hooks/useMouseInside';\n\nimport Menu from '../../ui/Menu';\nimport ChatCommand from './ChatCommand';\n\nimport './BotCommandMenu.scss';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  botCommands: ApiBotCommand[];\n  onClose: NoneToVoidFunction;\n};\n\nconst BotCommandMenu: FC<OwnProps> = ({\n  isOpen, botCommands, onClose,\n}) => {\n  const { sendBotCommand } = getActions();\n  const { isMobile } = useAppLayout();\n\n  const [handleMouseEnter, handleMouseLeave] = useMouseInside(isOpen, onClose, undefined, isMobile);\n\n  const handleClick = useLastCallback((command: string) => {\n    sendBotCommand({\n      command: `/${command}`,\n    });\n    onClose();\n  });\n\n  return (\n    <Menu\n      isOpen={isOpen}\n      positionX=\"left\"\n      positionY=\"bottom\"\n      onClose={onClose}\n      className=\"BotCommandMenu\"\n      onCloseAnimationEnd={onClose}\n      onMouseEnter={!IS_TOUCH_ENV ? handleMouseEnter : undefined}\n      onMouseLeave={!IS_TOUCH_ENV ? handleMouseLeave : undefined}\n      noCloseOnBackdrop={!IS_TOUCH_ENV}\n      noCompact\n    >\n      {botCommands.map((botCommand) => (\n        <ChatCommand\n          key={botCommand.command}\n          command={botCommand.command}\n          description={botCommand.description}\n          clickArg={botCommand.command}\n          onClick={handleClick}\n        />\n      ))}\n    </Menu>\n  );\n};\n\nexport default memo(BotCommandMenu);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useEffect, useRef } from '../../../lib/teact/teact';\nimport { withGlobal } from '../../../global';\n\nimport type { ApiSticker } from '../../../api/types';\nimport type { ThreadId } from '../../../types';\n\nimport { STICKER_SIZE_PICKER } from '../../../config';\nimport { selectIsChatWithSelf, selectIsCurrentUserPremium } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport captureEscKeyListener from '../../../util/captureEscKeyListener';\n\nimport { useIntersectionObserver } from '../../../hooks/useIntersectionObserver';\nimport usePreviousDeprecated from '../../../hooks/usePreviousDeprecated';\nimport useSendMessageAction from '../../../hooks/useSendMessageAction';\nimport useShowTransitionDeprecated from '../../../hooks/useShowTransitionDeprecated';\n\nimport StickerButton from '../../common/StickerButton';\nimport Loading from '../../ui/Loading';\n\nimport './StickerTooltip.scss';\n\nexport type OwnProps = {\n  chatId: string;\n  threadId?: ThreadId;\n  isOpen: boolean;\n  onStickerSelect: (sticker: ApiSticker, isSilent?: boolean, shouldSchedule?: boolean) => void;\n  onClose: NoneToVoidFunction;\n};\n\ntype StateProps = {\n  stickers?: ApiSticker[];\n  isSavedMessages?: boolean;\n  isCurrentUserPremium?: boolean;\n};\n\nconst INTERSECTION_THROTTLE = 200;\n\nconst StickerTooltip: FC<OwnProps & StateProps> = ({\n  chatId,\n  threadId,\n  isOpen,\n  onStickerSelect,\n  onClose,\n  stickers,\n  isSavedMessages,\n  isCurrentUserPremium,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  const { shouldRender, transitionClassNames } = useShowTransitionDeprecated(isOpen, undefined, undefined, false);\n  const prevStickers = usePreviousDeprecated(stickers, true);\n  const displayedStickers = stickers || prevStickers;\n  const sendMessageAction = useSendMessageAction(chatId, threadId);\n\n  const {\n    observe: observeIntersection,\n  } = useIntersectionObserver({ rootRef: containerRef, throttleMs: INTERSECTION_THROTTLE });\n\n  useEffect(() => (isOpen ? captureEscKeyListener(onClose) : undefined), [isOpen, onClose]);\n\n  const handleMouseMove = () => {\n    sendMessageAction({ type: 'chooseSticker' });\n  };\n\n  const className = buildClassName(\n    'StickerTooltip composer-tooltip custom-scroll',\n    transitionClassNames,\n    !(displayedStickers?.length) && 'hidden',\n  );\n\n  return (\n    <div\n      ref={containerRef}\n      className={className}\n      onMouseMove={handleMouseMove}\n    >\n      {shouldRender && displayedStickers ? (\n        displayedStickers.map((sticker) => (\n          <StickerButton\n            key={sticker.id}\n            sticker={sticker}\n            size={STICKER_SIZE_PICKER}\n            observeIntersection={observeIntersection}\n            onClick={isOpen ? onStickerSelect : undefined}\n            clickArg={sticker}\n            isSavedMessages={isSavedMessages}\n            canViewSet\n            isCurrentUserPremium={isCurrentUserPremium}\n          />\n        ))\n      ) : shouldRender ? (\n        <Loading />\n      ) : undefined}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const { stickers } = global.stickers.forEmoji;\n    const isSavedMessages = selectIsChatWithSelf(global, chatId);\n    const isCurrentUserPremium = selectIsCurrentUserPremium(global);\n    return { stickers, isSavedMessages, isCurrentUserPremium };\n  },\n)(StickerTooltip));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"_8sFuAomM\",\"emojiButton\":\"crWzZ2jr\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useEffect, useRef } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiSticker } from '../../../api/types';\nimport type { GlobalActions } from '../../../global';\n\nimport { COMPOSER_EMOJI_SIZE_PICKER } from '../../../config';\nimport { selectIsChatWithSelf, selectIsCurrentUserPremium } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport captureEscKeyListener from '../../../util/captureEscKeyListener';\n\nimport useHorizontalScroll from '../../../hooks/useHorizontalScroll';\nimport { useIntersectionObserver } from '../../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport usePreviousDeprecated from '../../../hooks/usePreviousDeprecated';\nimport useShowTransitionDeprecated from '../../../hooks/useShowTransitionDeprecated';\n\nimport StickerButton from '../../common/StickerButton';\nimport Loading from '../../ui/Loading';\n\nimport styles from './CustomEmojiTooltip.module.scss';\n\nexport type OwnProps = {\n  chatId: string;\n  isOpen: boolean;\n  addRecentCustomEmoji: GlobalActions['addRecentCustomEmoji'];\n  onCustomEmojiSelect: (customEmoji: ApiSticker) => void;\n  onClose: NoneToVoidFunction;\n  noPlay?: boolean;\n};\n\ntype StateProps = {\n  customEmoji?: ApiSticker[];\n  isSavedMessages?: boolean;\n  isCurrentUserPremium?: boolean;\n};\n\nconst INTERSECTION_THROTTLE = 200;\n\nconst CustomEmojiTooltip: FC<OwnProps & StateProps> = ({\n  isOpen,\n  addRecentCustomEmoji,\n  onCustomEmojiSelect,\n  onClose,\n  customEmoji,\n  isSavedMessages,\n  isCurrentUserPremium,\n  noPlay,\n}) => {\n  const { clearCustomEmojiForEmoji } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  const { shouldRender, transitionClassNames } = useShowTransitionDeprecated(isOpen, undefined, undefined, false);\n  const prevStickers = usePreviousDeprecated(customEmoji, true);\n  const displayedStickers = customEmoji || prevStickers;\n\n  useHorizontalScroll(containerRef);\n\n  const {\n    observe: observeIntersection,\n  } = useIntersectionObserver({ rootRef: containerRef, throttleMs: INTERSECTION_THROTTLE, isDisabled: !isOpen });\n\n  useEffect(() => (isOpen ? captureEscKeyListener(onClose) : undefined), [isOpen, onClose]);\n\n  const handleCustomEmojiSelect = useLastCallback((ce: ApiSticker) => {\n    if (!isOpen) return;\n    onCustomEmojiSelect(ce);\n    addRecentCustomEmoji({\n      documentId: ce.id,\n    });\n    clearCustomEmojiForEmoji();\n  });\n\n  const className = buildClassName(\n    styles.root,\n    'composer-tooltip custom-scroll-x',\n    transitionClassNames,\n    !displayedStickers?.length && styles.hidden,\n  );\n\n  return (\n    <div\n      ref={containerRef}\n      className={className}\n    >\n      {shouldRender && displayedStickers ? (\n        displayedStickers.map((sticker) => (\n          <StickerButton\n            key={sticker.id}\n            sticker={sticker}\n            className={styles.emojiButton}\n            size={COMPOSER_EMOJI_SIZE_PICKER}\n            observeIntersection={observeIntersection}\n            onClick={handleCustomEmojiSelect}\n            clickArg={sticker}\n            isSavedMessages={isSavedMessages}\n            canViewSet\n            isCurrentUserPremium={isCurrentUserPremium}\n            noPlay={noPlay}\n          />\n        ))\n      ) : shouldRender ? (\n        <Loading />\n      ) : undefined}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const { stickers: customEmoji } = global.customEmojis.forEmoji;\n    const isSavedMessages = selectIsChatWithSelf(global, chatId);\n    const isCurrentUserPremium = selectIsCurrentUserPremium(global);\n\n    return { customEmoji, isSavedMessages, isCurrentUserPremium };\n  },\n)(CustomEmojiTooltip));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useState,\n} from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type {\n  ApiAvailableReaction,\n  ApiReaction,\n} from '../../../api/types';\nimport type { IAnchorPosition } from '../../../types';\n\nimport buildClassName from '../../../util/buildClassName';\nimport { IS_TOUCH_ENV } from '../../../util/windowEnvironment';\n\nimport useEffectWithPrevDeps from '../../../hooks/useEffectWithPrevDeps';\nimport useFlag from '../../../hooks/useFlag';\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMouseInside from '../../../hooks/useMouseInside';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Menu from '../../ui/Menu';\nimport MenuItem from '../../ui/MenuItem';\nimport ReactionSelector from '../message/reactions/ReactionSelector';\n\nimport './CustomSendMenu.scss';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  isOpenToBottom?: boolean;\n  isSavedMessages?: boolean;\n  canSchedule?: boolean;\n  canScheduleUntilOnline?: boolean;\n  onSendSilent?: NoneToVoidFunction;\n  onSendSchedule?: NoneToVoidFunction;\n  onSendWhenOnline?: NoneToVoidFunction;\n  onRemoveEffect?: NoneToVoidFunction;\n  onClose: NoneToVoidFunction;\n  onCloseAnimationEnd?: NoneToVoidFunction;\n  chatId?: string;\n  withEffects?: boolean;\n  hasCurrentEffect?: boolean;\n  effectReactions?: ApiReaction[];\n  allAvailableReactions?: ApiAvailableReaction[];\n  onToggleReaction?: (reaction: ApiReaction) => void;\n  canBuyPremium?: boolean;\n  isCurrentUserPremium?: boolean;\n  isInSavedMessages?: boolean;\n  isInStoryViewer?: boolean;\n  canPlayAnimatedEmojis?: boolean;\n};\n\nconst ANIMATION_DURATION = 200;\n\nconst CustomSendMenu: FC<OwnProps> = ({\n  isOpen,\n  isOpenToBottom = false,\n  isSavedMessages,\n  canSchedule,\n  canScheduleUntilOnline,\n  onSendSilent,\n  onSendSchedule,\n  onSendWhenOnline,\n  onRemoveEffect,\n  onClose,\n  onCloseAnimationEnd,\n  chatId,\n  withEffects,\n  hasCurrentEffect,\n  effectReactions,\n  allAvailableReactions,\n  onToggleReaction,\n  canBuyPremium,\n  isCurrentUserPremium,\n  isInSavedMessages,\n  isInStoryViewer,\n  canPlayAnimatedEmojis,\n}) => {\n  const {\n    openEffectPicker,\n  } = getActions();\n\n  const [handleMouseEnter, handleMouseLeave] = useMouseInside(isOpen, onClose);\n  const [displayScheduleUntilOnline, setDisplayScheduleUntilOnline] = useState(false);\n\n  const oldLang = useOldLang();\n  const lang = useLang();\n  const [areItemsHidden, hideItems, showItems] = useFlag();\n\n  useEffectWithPrevDeps(([prevIsOpen]) => {\n    // Avoid context menu item shuffling when opened\n    if (isOpen && !prevIsOpen) {\n      showItems();\n      setDisplayScheduleUntilOnline(Boolean(canScheduleUntilOnline));\n    }\n  }, [isOpen, canScheduleUntilOnline]);\n\n  const [isReady, markIsReady, unmarkIsReady] = useFlag();\n\n  const handleOpenMessageEffectsPicker = useLastCallback((position: IAnchorPosition) => {\n    hideItems();\n    if (chatId) openEffectPicker({ chatId, position });\n  });\n\n  useEffect(() => {\n    if (!isOpen) {\n      unmarkIsReady();\n      return;\n    }\n\n    setTimeout(() => {\n      markIsReady();\n    }, ANIMATION_DURATION);\n  }, [isOpen, markIsReady, unmarkIsReady]);\n\n  return (\n    <Menu\n      isOpen={isOpen}\n      autoClose\n      positionX=\"right\"\n      positionY={isOpenToBottom ? 'top' : 'bottom'}\n      className={buildClassName(\n        'CustomSendMenu', 'fluid', 'with-menu-transitions', withEffects && 'with-effects',\n      )}\n      onClose={onClose}\n      onCloseAnimationEnd={onCloseAnimationEnd}\n      onMouseEnter={!IS_TOUCH_ENV ? handleMouseEnter : undefined}\n      onMouseLeave={!IS_TOUCH_ENV ? handleMouseLeave : undefined}\n      noCloseOnBackdrop={!IS_TOUCH_ENV}\n    >\n\n      {withEffects && !isInStoryViewer && (\n        <ReactionSelector\n          allAvailableReactions={allAvailableReactions}\n          effectReactions={effectReactions}\n          currentReactions={undefined}\n          onToggleReaction={onToggleReaction!}\n          isPrivate\n          isReady={isReady}\n          canBuyPremium={canBuyPremium}\n          isCurrentUserPremium={isCurrentUserPremium}\n          isInSavedMessages={isInSavedMessages}\n          isForEffects\n          canPlayAnimatedEmojis={canPlayAnimatedEmojis}\n          onShowMore={handleOpenMessageEffectsPicker}\n          onClose={onClose}\n          className={buildClassName(areItemsHidden && 'ReactionSelector-hidden')}\n        />\n      )}\n\n      <div\n        className={buildClassName(\n          'CustomSendMenu_items',\n          areItemsHidden && 'CustomSendMenu_items-hidden',\n        )}\n        dir={oldLang.isRtl ? 'rtl' : undefined}\n      >\n        {onSendSilent && <MenuItem icon=\"mute\" onClick={onSendSilent}>{oldLang('SendWithoutSound')}</MenuItem>}\n        {canSchedule && onSendSchedule && (\n          <MenuItem icon=\"schedule\" onClick={onSendSchedule}>\n            {oldLang(isSavedMessages ? 'SetReminder' : 'ScheduleMessage')}\n          </MenuItem>\n        )}\n        {canSchedule && onSendSchedule && displayScheduleUntilOnline && (\n          <MenuItem icon=\"user-online\" onClick={onSendWhenOnline}>\n            {oldLang('SendWhenOnline')}\n          </MenuItem>\n        )}\n        {withEffects && hasCurrentEffect && (\n          <MenuItem icon=\"delete\" onClick={onRemoveEffect}>\n            {lang('RemoveEffect')}\n          </MenuItem>\n        )}\n      </div>\n    </Menu>\n  );\n};\n\nexport default memo(CustomSendMenu);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useRef, useState,\n} from '../../../lib/teact/teact';\n\nimport type { IAnchorPosition } from '../../../types';\nimport { ApiMessageEntityTypes } from '../../../api/types';\n\nimport { EDITABLE_INPUT_ID } from '../../../config';\nimport buildClassName from '../../../util/buildClassName';\nimport captureEscKeyListener from '../../../util/captureEscKeyListener';\nimport { ensureProtocol } from '../../../util/ensureProtocol';\nimport getKeyFromEvent from '../../../util/getKeyFromEvent';\nimport stopEvent from '../../../util/stopEvent';\nimport { INPUT_CUSTOM_EMOJI_SELECTOR } from './helpers/customEmoji';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useShowTransitionDeprecated from '../../../hooks/useShowTransitionDeprecated';\nimport useVirtualBackdrop from '../../../hooks/useVirtualBackdrop';\n\nimport Button from '../../ui/Button';\n\nimport './TextFormatter.scss';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  anchorPosition?: IAnchorPosition;\n  selectedRange?: Range;\n  setSelectedRange: (range: Range) => void;\n  onClose: () => void;\n};\n\ninterface ISelectedTextFormats {\n  bold?: boolean;\n  italic?: boolean;\n  underline?: boolean;\n  strikethrough?: boolean;\n  monospace?: boolean;\n  spoiler?: boolean;\n}\n\nconst TEXT_FORMAT_BY_TAG_NAME: Record<string, keyof ISelectedTextFormats> = {\n  B: 'bold',\n  STRONG: 'bold',\n  I: 'italic',\n  EM: 'italic',\n  U: 'underline',\n  DEL: 'strikethrough',\n  CODE: 'monospace',\n  SPAN: 'spoiler',\n};\nconst fragmentEl = document.createElement('div');\n\nconst TextFormatter: FC<OwnProps> = ({\n  isOpen,\n  anchorPosition,\n  selectedRange,\n  setSelectedRange,\n  onClose,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const linkUrlInputRef = useRef<HTMLInputElement>(null);\n  const { shouldRender, transitionClassNames } = useShowTransitionDeprecated(isOpen);\n  const [isLinkControlOpen, openLinkControl, closeLinkControl] = useFlag();\n  const [linkUrl, setLinkUrl] = useState('');\n  const [isEditingLink, setIsEditingLink] = useState(false);\n  const [inputClassName, setInputClassName] = useState<string | undefined>();\n  const [selectedTextFormats, setSelectedTextFormats] = useState<ISelectedTextFormats>({});\n\n  useEffect(() => (isOpen ? captureEscKeyListener(onClose) : undefined), [isOpen, onClose]);\n  useVirtualBackdrop(\n    isOpen,\n    containerRef,\n    onClose,\n    true,\n  );\n\n  useEffect(() => {\n    if (isLinkControlOpen) {\n      linkUrlInputRef.current!.focus();\n    } else {\n      setLinkUrl('');\n      setIsEditingLink(false);\n    }\n  }, [isLinkControlOpen]);\n\n  useEffect(() => {\n    if (!shouldRender) {\n      closeLinkControl();\n      setSelectedTextFormats({});\n      setInputClassName(undefined);\n    }\n  }, [closeLinkControl, shouldRender]);\n\n  useEffect(() => {\n    if (!isOpen || !selectedRange) {\n      return;\n    }\n\n    const selectedFormats: ISelectedTextFormats = {};\n    let { parentElement } = selectedRange.commonAncestorContainer;\n    while (parentElement && parentElement.id !== EDITABLE_INPUT_ID) {\n      const textFormat = TEXT_FORMAT_BY_TAG_NAME[parentElement.tagName];\n      if (textFormat) {\n        selectedFormats[textFormat] = true;\n      }\n\n      parentElement = parentElement.parentElement;\n    }\n\n    setSelectedTextFormats(selectedFormats);\n  }, [isOpen, selectedRange, openLinkControl]);\n\n  const restoreSelection = useLastCallback(() => {\n    if (!selectedRange) {\n      return;\n    }\n\n    const selection = window.getSelection();\n    if (selection) {\n      selection.removeAllRanges();\n      selection.addRange(selectedRange);\n    }\n  });\n\n  const updateSelectedRange = useLastCallback(() => {\n    const selection = window.getSelection();\n    if (selection) {\n      setSelectedRange(selection.getRangeAt(0));\n    }\n  });\n\n  const getSelectedText = useLastCallback((shouldDropCustomEmoji?: boolean) => {\n    if (!selectedRange) {\n      return undefined;\n    }\n    fragmentEl.replaceChildren(selectedRange.cloneContents());\n    if (shouldDropCustomEmoji) {\n      fragmentEl.querySelectorAll(INPUT_CUSTOM_EMOJI_SELECTOR).forEach((el) => {\n        el.replaceWith(el.getAttribute('alt')!);\n      });\n    }\n    return fragmentEl.innerHTML;\n  });\n\n  const getSelectedElement = useLastCallback(() => {\n    if (!selectedRange) {\n      return undefined;\n    }\n\n    return selectedRange.commonAncestorContainer.parentElement;\n  });\n\n  function updateInputStyles() {\n    const input = linkUrlInputRef.current;\n    if (!input) {\n      return;\n    }\n\n    const { offsetWidth, scrollWidth, scrollLeft } = input;\n    if (scrollWidth <= offsetWidth) {\n      setInputClassName(undefined);\n      return;\n    }\n\n    let className = '';\n    if (scrollLeft < scrollWidth - offsetWidth) {\n      className = 'mask-right';\n    }\n    if (scrollLeft > 0) {\n      className += ' mask-left';\n    }\n\n    setInputClassName(className);\n  }\n\n  function handleLinkUrlChange(e: React.ChangeEvent<HTMLInputElement>) {\n    setLinkUrl(e.target.value);\n    updateInputStyles();\n  }\n\n  function getFormatButtonClassName(key: keyof ISelectedTextFormats) {\n    if (selectedTextFormats[key]) {\n      return 'active';\n    }\n\n    if (key === 'monospace' || key === 'strikethrough') {\n      if (Object.keys(selectedTextFormats).some(\n        (fKey) => fKey !== key && Boolean(selectedTextFormats[fKey as keyof ISelectedTextFormats]),\n      )) {\n        return 'disabled';\n      }\n    } else if (selectedTextFormats.monospace || selectedTextFormats.strikethrough) {\n      return 'disabled';\n    }\n\n    return undefined;\n  }\n\n  const handleSpoilerText = useLastCallback(() => {\n    if (selectedTextFormats.spoiler) {\n      const element = getSelectedElement();\n      if (\n        !selectedRange\n        || !element\n        || element.dataset.entityType !== ApiMessageEntityTypes.Spoiler\n        || !element.textContent\n      ) {\n        return;\n      }\n\n      element.replaceWith(element.textContent);\n      setSelectedTextFormats((selectedFormats) => ({\n        ...selectedFormats,\n        spoiler: false,\n      }));\n\n      return;\n    }\n\n    const text = getSelectedText();\n    document.execCommand(\n      'insertHTML', false, `<span class=\"spoiler\" data-entity-type=\"${ApiMessageEntityTypes.Spoiler}\">${text}</span>`,\n    );\n    onClose();\n  });\n\n  const handleBoldText = useLastCallback(() => {\n    setSelectedTextFormats((selectedFormats) => {\n      // Somehow re-applying 'bold' command to already bold text doesn't work\n      document.execCommand(selectedFormats.bold ? 'removeFormat' : 'bold');\n      Object.keys(selectedFormats).forEach((key) => {\n        if ((key === 'italic' || key === 'underline') && Boolean(selectedFormats[key])) {\n          document.execCommand(key);\n        }\n      });\n\n      updateSelectedRange();\n      return {\n        ...selectedFormats,\n        bold: !selectedFormats.bold,\n      };\n    });\n  });\n\n  const handleItalicText = useLastCallback(() => {\n    document.execCommand('italic');\n    updateSelectedRange();\n    setSelectedTextFormats((selectedFormats) => ({\n      ...selectedFormats,\n      italic: !selectedFormats.italic,\n    }));\n  });\n\n  const handleUnderlineText = useLastCallback(() => {\n    document.execCommand('underline');\n    updateSelectedRange();\n    setSelectedTextFormats((selectedFormats) => ({\n      ...selectedFormats,\n      underline: !selectedFormats.underline,\n    }));\n  });\n\n  const handleStrikethroughText = useLastCallback(() => {\n    if (selectedTextFormats.strikethrough) {\n      const element = getSelectedElement();\n      if (\n        !selectedRange\n        || !element\n        || element.tagName !== 'DEL'\n        || !element.textContent\n      ) {\n        return;\n      }\n\n      element.replaceWith(element.textContent);\n      setSelectedTextFormats((selectedFormats) => ({\n        ...selectedFormats,\n        strikethrough: false,\n      }));\n\n      return;\n    }\n\n    const text = getSelectedText();\n    document.execCommand('insertHTML', false, `<del>${text}</del>`);\n    onClose();\n  });\n\n  const handleMonospaceText = useLastCallback(() => {\n    if (selectedTextFormats.monospace) {\n      const element = getSelectedElement();\n      if (\n        !selectedRange\n        || !element\n        || element.tagName !== 'CODE'\n        || !element.textContent\n      ) {\n        return;\n      }\n\n      element.replaceWith(element.textContent);\n      setSelectedTextFormats((selectedFormats) => ({\n        ...selectedFormats,\n        monospace: false,\n      }));\n\n      return;\n    }\n\n    const text = getSelectedText(true);\n    document.execCommand('insertHTML', false, `<code class=\"text-entity-code\" dir=\"auto\">${text}</code>`);\n    onClose();\n  });\n\n  const handleLinkUrlConfirm = useLastCallback(() => {\n    const formattedLinkUrl = (ensureProtocol(linkUrl) || '').split('%').map(encodeURI).join('%');\n\n    if (isEditingLink) {\n      const element = getSelectedElement();\n      if (!element || element.tagName !== 'A') {\n        return;\n      }\n\n      (element as HTMLAnchorElement).href = formattedLinkUrl;\n\n      onClose();\n\n      return;\n    }\n\n    const text = getSelectedText(true);\n    restoreSelection();\n    document.execCommand(\n      'insertHTML',\n      false,\n      `<a href=${formattedLinkUrl} class=\"text-entity-link\" dir=\"auto\">${text}</a>`,\n    );\n    onClose();\n  });\n\n  const handleKeyDown = useLastCallback((e: KeyboardEvent) => {\n    const HANDLERS_BY_KEY: Record<string, AnyToVoidFunction> = {\n      k: openLinkControl,\n      b: handleBoldText,\n      u: handleUnderlineText,\n      i: handleItalicText,\n      m: handleMonospaceText,\n      s: handleStrikethroughText,\n      p: handleSpoilerText,\n    };\n\n    const handler = HANDLERS_BY_KEY[getKeyFromEvent(e)];\n\n    if (\n      e.altKey\n      || !(e.ctrlKey || e.metaKey)\n      || !handler\n    ) {\n      return;\n    }\n\n    e.preventDefault();\n    e.stopPropagation();\n    handler();\n  });\n\n  useEffect(() => {\n    if (isOpen) {\n      document.addEventListener('keydown', handleKeyDown);\n    }\n\n    return () => document.removeEventListener('keydown', handleKeyDown);\n  }, [isOpen, handleKeyDown]);\n\n  const lang = useOldLang();\n\n  function handleContainerKeyDown(e: React.KeyboardEvent<HTMLDivElement>) {\n    if (e.key === 'Enter' && isLinkControlOpen) {\n      handleLinkUrlConfirm();\n      e.preventDefault();\n    }\n  }\n\n  if (!shouldRender) {\n    return undefined;\n  }\n\n  const className = buildClassName(\n    'TextFormatter',\n    transitionClassNames,\n    isLinkControlOpen && 'link-control-shown',\n  );\n\n  const linkUrlConfirmClassName = buildClassName(\n    'TextFormatter-link-url-confirm',\n    Boolean(linkUrl.length) && 'shown',\n  );\n\n  const style = anchorPosition\n    ? `left: ${anchorPosition.x}px; top: ${anchorPosition.y}px;--text-formatter-left: ${anchorPosition.x}px;`\n    : '';\n\n  return (\n    <div\n      ref={containerRef}\n      className={className}\n      style={style}\n      onKeyDown={handleContainerKeyDown}\n      // Prevents focus loss when clicking on the toolbar\n      onMouseDown={stopEvent}\n    >\n      <div className=\"TextFormatter-buttons\">\n        <Button\n          color=\"translucent\"\n          ariaLabel=\"Spoiler text\"\n          className={getFormatButtonClassName('spoiler')}\n          onClick={handleSpoilerText}\n        >\n          <i className=\"icon icon-eye-closed\" />\n        </Button>\n        <div className=\"TextFormatter-divider\" />\n        <Button\n          color=\"translucent\"\n          ariaLabel=\"Bold text\"\n          className={getFormatButtonClassName('bold')}\n          onClick={handleBoldText}\n        >\n          <i className=\"icon icon-bold\" />\n        </Button>\n        <Button\n          color=\"translucent\"\n          ariaLabel=\"Italic text\"\n          className={getFormatButtonClassName('italic')}\n          onClick={handleItalicText}\n        >\n          <i className=\"icon icon-italic\" />\n        </Button>\n        <Button\n          color=\"translucent\"\n          ariaLabel=\"Underlined text\"\n          className={getFormatButtonClassName('underline')}\n          onClick={handleUnderlineText}\n        >\n          <i className=\"icon icon-underlined\" />\n        </Button>\n        <Button\n          color=\"translucent\"\n          ariaLabel=\"Strikethrough text\"\n          className={getFormatButtonClassName('strikethrough')}\n          onClick={handleStrikethroughText}\n        >\n          <i className=\"icon icon-strikethrough\" />\n        </Button>\n        <Button\n          color=\"translucent\"\n          ariaLabel=\"Monospace text\"\n          className={getFormatButtonClassName('monospace')}\n          onClick={handleMonospaceText}\n        >\n          <i className=\"icon icon-monospace\" />\n        </Button>\n        <div className=\"TextFormatter-divider\" />\n        <Button color=\"translucent\" ariaLabel={lang('TextFormat.AddLinkTitle')} onClick={openLinkControl}>\n          <i className=\"icon icon-link\" />\n        </Button>\n      </div>\n\n      <div className=\"TextFormatter-link-control\">\n        <div className=\"TextFormatter-buttons\">\n          <Button color=\"translucent\" ariaLabel={lang('Cancel')} onClick={closeLinkControl}>\n            <i className=\"icon icon-arrow-left\" />\n          </Button>\n          <div className=\"TextFormatter-divider\" />\n\n          <div\n            className={buildClassName('TextFormatter-link-url-input-wrapper', inputClassName)}\n          >\n            <input\n              ref={linkUrlInputRef}\n              className=\"TextFormatter-link-url-input\"\n              type=\"text\"\n              value={linkUrl}\n              placeholder=\"Enter URL...\"\n              autoComplete=\"off\"\n              inputMode=\"url\"\n              dir=\"auto\"\n              onChange={handleLinkUrlChange}\n              onScroll={updateInputStyles}\n            />\n          </div>\n\n          <div className={linkUrlConfirmClassName}>\n            <div className=\"TextFormatter-divider\" />\n            <Button\n              color=\"translucent\"\n              ariaLabel={lang('Save')}\n              className=\"color-primary\"\n              onClick={handleLinkUrlConfirm}\n            >\n              <i className=\"icon icon-check\" />\n            </Button>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(TextFormatter);\n","export default function getKeyFromEvent(e: KeyboardEvent) {\n  const key = e.key || e.code;\n\n  return key.startsWith('Key') ? key.slice(3).toLowerCase() : key;\n}\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo } from '../../../lib/teact/teact';\n\nimport type { ApiSticker } from '../../../api/types';\nimport type { ObserveFn } from '../../../hooks/useIntersectionObserver';\n\nimport buildClassName from '../../../util/buildClassName';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\n\nimport CustomEmoji from '../../common/CustomEmoji';\n\nimport './EmojiButton.scss';\n\nconst CUSTOM_EMOJI_SIZE = 32;\n\ntype OwnProps = {\n  emoji: ApiSticker;\n  focus?: boolean;\n  onClick?: (emoji: ApiSticker) => void;\n  observeIntersection?: ObserveFn;\n};\n\nconst CustomEmojiButton: FC<OwnProps> = ({\n  emoji, focus, onClick, observeIntersection,\n}) => {\n  const handleClick = useLastCallback((e: React.MouseEvent<HTMLDivElement, MouseEvent>) => {\n    // Preventing safari from losing focus on Composer MessageInput\n    e.preventDefault();\n\n    onClick?.(emoji);\n  });\n\n  const className = buildClassName(\n    'EmojiButton',\n    focus && 'focus',\n  );\n\n  return (\n    <div\n      className={className}\n      onMouseDown={handleClick}\n      title={emoji.emoji}\n    >\n      <CustomEmoji\n        documentId={emoji.id}\n        size={CUSTOM_EMOJI_SIZE}\n        withSharedAnimation\n        shouldPreloadPreview\n        observeIntersectionForPlaying={observeIntersection}\n      />\n    </div>\n  );\n};\n\nexport default memo(CustomEmojiButton);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useRef } from '../../../lib/teact/teact';\n\nimport type { ApiSticker } from '../../../api/types';\n\nimport animateHorizontalScroll from '../../../util/animateHorizontalScroll';\nimport buildClassName from '../../../util/buildClassName';\nimport findInViewport from '../../../util/findInViewport';\nimport isFullyVisible from '../../../util/isFullyVisible';\n\nimport useEffectWithPrevDeps from '../../../hooks/useEffectWithPrevDeps';\nimport useHorizontalScroll from '../../../hooks/useHorizontalScroll';\nimport { useIntersectionObserver } from '../../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport usePrevDuringAnimation from '../../../hooks/usePrevDuringAnimation';\nimport useShowTransitionDeprecated from '../../../hooks/useShowTransitionDeprecated';\nimport { useKeyboardNavigation } from './hooks/useKeyboardNavigation';\n\nimport Loading from '../../ui/Loading';\nimport CustomEmojiButton from './CustomEmojiButton';\nimport EmojiButton from './EmojiButton';\n\nimport './EmojiTooltip.scss';\n\nconst VIEWPORT_MARGIN = 8;\nconst EMOJI_BUTTON_WIDTH = 44;\nconst CLOSE_DURATION = 350;\n\nfunction setItemVisible(index: number, containerRef: Record<string, any>) {\n  const container = containerRef.current!;\n  if (!container) {\n    return;\n  }\n\n  const { visibleIndexes, allElements } = findInViewport(\n    container,\n    '.EmojiButton',\n    VIEWPORT_MARGIN,\n    true,\n    true,\n    true,\n  );\n\n  if (!allElements.length || !allElements[index]) {\n    return;\n  }\n  const first = visibleIndexes[0];\n  if (!visibleIndexes.includes(index)\n    || (index === first && !isFullyVisible(container, allElements[first], true))) {\n    const position = index > visibleIndexes[visibleIndexes.length - 1] ? 'start' : 'end';\n    const newLeft = position === 'start' ? index * EMOJI_BUTTON_WIDTH : 0;\n\n    animateHorizontalScroll(container, newLeft);\n  }\n}\n\nexport type OwnProps = {\n  isOpen: boolean;\n  emojis: Emoji[];\n  customEmojis: ApiSticker[];\n  onEmojiSelect: (text: string) => void;\n  onCustomEmojiSelect: (emoji: ApiSticker) => void;\n  onClose: NoneToVoidFunction;\n  addRecentEmoji: ({ emoji }: { emoji: string }) => void;\n  addRecentCustomEmoji: ({ documentId }: { documentId: string }) => void;\n};\n\nconst INTERSECTION_THROTTLE = 200;\n\nconst EmojiTooltip: FC<OwnProps> = ({\n  isOpen,\n  emojis,\n  customEmojis,\n  onClose,\n  onEmojiSelect,\n  onCustomEmojiSelect,\n  addRecentEmoji,\n  addRecentCustomEmoji,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  const { shouldRender, transitionClassNames } = useShowTransitionDeprecated(isOpen, undefined, undefined, false);\n  const listEmojis: (Emoji | ApiSticker)[] = usePrevDuringAnimation(\n    emojis.length ? [...customEmojis, ...emojis] : undefined, CLOSE_DURATION,\n  ) || [];\n\n  useHorizontalScroll(containerRef);\n\n  const {\n    observe: observeIntersection,\n  } = useIntersectionObserver({ rootRef: containerRef, throttleMs: INTERSECTION_THROTTLE, isDisabled: !isOpen });\n\n  const handleSelectEmoji = useLastCallback((emoji: Emoji) => {\n    onEmojiSelect(emoji.native);\n    addRecentEmoji({ emoji: emoji.id });\n  });\n\n  const handleCustomEmojiSelect = useLastCallback((emoji: ApiSticker) => {\n    onCustomEmojiSelect(emoji);\n    addRecentCustomEmoji({ documentId: emoji.id });\n  });\n\n  const handleSelect = useLastCallback((emoji: Emoji | ApiSticker) => {\n    if ('native' in emoji) {\n      handleSelectEmoji(emoji);\n    } else {\n      handleCustomEmojiSelect(emoji);\n    }\n  });\n\n  const handleClick = useLastCallback((native: string, id: string) => {\n    onEmojiSelect(native);\n    addRecentEmoji({ emoji: id });\n  });\n\n  const handleCustomEmojiClick = useLastCallback((emoji: ApiSticker) => {\n    onCustomEmojiSelect(emoji);\n    addRecentCustomEmoji({ documentId: emoji.id });\n  });\n\n  const selectedIndex = useKeyboardNavigation({\n    isActive: isOpen,\n    isHorizontal: true,\n    items: listEmojis,\n    shouldRemoveSelectionOnReset: true,\n    onSelect: handleSelect,\n    onClose,\n  });\n\n  useEffectWithPrevDeps(([prevSelectedIndex]) => {\n    if (prevSelectedIndex === undefined || prevSelectedIndex === -1) {\n      return;\n    }\n\n    setItemVisible(selectedIndex, containerRef);\n  }, [selectedIndex]);\n\n  const className = buildClassName(\n    'EmojiTooltip composer-tooltip custom-scroll-x',\n    transitionClassNames,\n  );\n\n  return (\n    <div\n      ref={containerRef}\n      className={className}\n    >\n      {shouldRender && listEmojis ? (\n        listEmojis.map((emoji, index) => (\n          'native' in emoji ? (\n            <EmojiButton\n              key={emoji.id}\n              emoji={emoji}\n              focus={selectedIndex === index}\n              onClick={handleClick}\n            />\n          ) : (\n            <CustomEmojiButton\n              key={emoji.id}\n              emoji={emoji}\n              focus={selectedIndex === index}\n              onClick={handleCustomEmojiClick}\n              observeIntersection={observeIntersection}\n            />\n          )\n        ))\n      ) : shouldRender ? (\n        <Loading />\n      ) : undefined}\n    </div>\n  );\n};\n\nexport default memo(EmojiTooltip);\n","import type { FC, TeactNode } from '../../../../lib/teact/teact';\nimport React, { memo } from '../../../../lib/teact/teact';\n\nimport type { ApiWebDocument } from '../../../../api/types';\n\nimport { getWebDocumentHash } from '../../../../global/helpers';\nimport { getFirstLetters } from '../../../../util/textFormat';\nimport renderText from '../../../common/helpers/renderText';\nimport { preventMessageInputBlurWithBubbling } from '../../helpers/preventMessageInputBlur';\n\nimport useMedia from '../../../../hooks/useMedia';\n\nimport ListItem from '../../../ui/ListItem';\n\nimport './BaseResult.scss';\n\nexport type OwnProps = {\n  focus?: boolean;\n  thumbnail?: ApiWebDocument;\n  thumbUrl?: string;\n  title?: string;\n  description?: string;\n  transitionClassNames?: string;\n  onClick: NoneToVoidFunction;\n};\n\nconst BaseResult: FC<OwnProps> = ({\n  title,\n  description,\n  thumbnail,\n  thumbUrl,\n  focus,\n  transitionClassNames = '',\n  onClick,\n}) => {\n  let content: TeactNode | undefined;\n\n  const thumbnailDataUrl = useMedia(thumbnail ? getWebDocumentHash(thumbnail) : undefined);\n  thumbUrl = thumbUrl || thumbnailDataUrl;\n\n  if (thumbUrl) {\n    content = (\n      <img src={thumbUrl} className={transitionClassNames} alt=\"\" decoding=\"async\" draggable={false} />\n    );\n  } else if (title) {\n    content = getFirstLetters(title, 1);\n  }\n\n  return (\n    <ListItem\n      focus={focus}\n      className=\"BaseResult chat-item-clickable\"\n      onMouseDown={preventMessageInputBlurWithBubbling}\n      onClick={onClick}\n    >\n      <span className=\"thumb\">\n        {typeof content === 'string' ? renderText(content) : content}\n      </span>\n      <div className=\"content-inner\">\n        {title && (<div className=\"title\">{title}</div>)}\n        {description && (<div className=\"description\">{description}</div>)}\n      </div>\n    </ListItem>\n  );\n};\n\nexport default memo(BaseResult);\n","import type { FC } from '../../../../lib/teact/teact';\nimport React, { memo } from '../../../../lib/teact/teact';\n\nimport type { ApiBotInlineResult } from '../../../../api/types';\n\nimport useLastCallback from '../../../../hooks/useLastCallback';\n\nimport BaseResult from './BaseResult';\n\nexport type OwnProps = {\n  focus?: boolean;\n  inlineResult: ApiBotInlineResult;\n  onClick: (result: ApiBotInlineResult) => void;\n};\n\nconst ArticleResult: FC<OwnProps> = ({ focus, inlineResult, onClick }) => {\n  const {\n    title, url, description, webThumbnail,\n  } = inlineResult;\n\n  const handleClick = useLastCallback(() => {\n    onClick(inlineResult);\n  });\n\n  return (\n    <BaseResult\n      focus={focus}\n      thumbnail={webThumbnail}\n      title={title || url}\n      description={description}\n      onClick={handleClick}\n    />\n  );\n};\n\nexport default memo(ArticleResult);\n","import type { FC } from '../../../../lib/teact/teact';\nimport React, { memo } from '../../../../lib/teact/teact';\n\nimport type { ApiBotInlineMediaResult, ApiBotInlineResult, ApiVideo } from '../../../../api/types';\nimport type { ObserveFn } from '../../../../hooks/useIntersectionObserver';\n\nimport useLastCallback from '../../../../hooks/useLastCallback';\n\nimport GifButton from '../../../common/GifButton';\n\ntype OwnProps = {\n  inlineResult: ApiBotInlineMediaResult;\n  isSavedMessages?: boolean;\n  canSendGifs?: boolean;\n  observeIntersection: ObserveFn;\n  onClick: (result: ApiBotInlineResult, isSilent?: boolean, shouldSchedule?: boolean) => void;\n};\n\nconst GifResult: FC<OwnProps> = ({\n  inlineResult, isSavedMessages, canSendGifs, observeIntersection, onClick,\n}) => {\n  const { gif } = inlineResult;\n\n  const handleClick = useLastCallback((_gif: ApiVideo, isSilent?: boolean, shouldSchedule?: boolean) => {\n    onClick(inlineResult, isSilent, shouldSchedule);\n  });\n\n  if (!gif) {\n    return undefined;\n  }\n\n  return (\n    <GifButton\n      gif={gif}\n      observeIntersection={observeIntersection}\n      className=\"chat-item-clickable\"\n      onClick={canSendGifs ? handleClick : undefined}\n      isSavedMessages={isSavedMessages}\n    />\n  );\n};\n\nexport default memo(GifResult);\n","import type { FC } from '../../../../lib/teact/teact';\nimport React, { memo } from '../../../../lib/teact/teact';\n\nimport type {\n  ApiBotInlineMediaResult, ApiBotInlineResult, ApiPhoto, ApiThumbnail, ApiWebDocument,\n} from '../../../../api/types';\n\nimport { getPhotoMediaHash, getWebDocumentHash } from '../../../../global/helpers';\nimport buildClassName from '../../../../util/buildClassName';\n\nimport useLastCallback from '../../../../hooks/useLastCallback';\nimport useMedia from '../../../../hooks/useMedia';\nimport useMediaTransitionDeprecated from '../../../../hooks/useMediaTransitionDeprecated';\n\nimport BaseResult from './BaseResult';\n\nimport './MediaResult.scss';\n\nexport type OwnProps = {\n  focus?: boolean;\n  isForGallery?: boolean;\n  inlineResult: ApiBotInlineMediaResult | ApiBotInlineResult;\n  onClick: (result: ApiBotInlineResult) => void;\n};\n\nconst MediaResult: FC<OwnProps> = ({\n  focus, isForGallery, inlineResult, onClick,\n}) => {\n  let photo: ApiPhoto | undefined;\n  let thumbnail: ApiThumbnail | undefined;\n  let webThumbnail: ApiWebDocument | undefined;\n\n  if ('photo' in inlineResult) {\n    photo = inlineResult.photo;\n  }\n  // For results with type=video (for example @stikstokbot)\n  if ('thumbnail' in inlineResult) {\n    thumbnail = inlineResult.thumbnail;\n  }\n  if ('webThumbnail' in inlineResult) {\n    webThumbnail = inlineResult.webThumbnail;\n  }\n\n  const thumbnailBlobUrl = useMedia(getWebDocumentHash(webThumbnail));\n  const mediaBlobUrl = useMedia(photo && getPhotoMediaHash(photo, 'pictogram'));\n  const transitionClassNames = useMediaTransitionDeprecated(mediaBlobUrl || thumbnailBlobUrl);\n\n  const handleClick = useLastCallback(() => {\n    onClick(inlineResult);\n  });\n\n  if (isForGallery) {\n    return (\n      <div className=\"MediaResult chat-item-clickable\" onClick={handleClick}>\n        <img src={(photo?.thumbnail?.dataUri) || thumbnailBlobUrl} alt=\"\" draggable={false} />\n        <img\n          src={mediaBlobUrl}\n          className={buildClassName('full-media', transitionClassNames)}\n          alt=\"\"\n          draggable={false}\n        />\n      </div>\n    );\n  }\n\n  const { title, description } = inlineResult;\n\n  return (\n    <BaseResult\n      focus={focus}\n      thumbnail={webThumbnail}\n      thumbUrl={mediaBlobUrl || thumbnail?.dataUri}\n      transitionClassNames={transitionClassNames}\n      title={title}\n      description={description}\n      onClick={handleClick}\n    />\n  );\n};\n\nexport default memo(MediaResult);\n","import type { FC } from '../../../../lib/teact/teact';\nimport React, { memo } from '../../../../lib/teact/teact';\n\nimport type { ApiBotInlineMediaResult, ApiBotInlineResult } from '../../../../api/types';\nimport type { ObserveFn } from '../../../../hooks/useIntersectionObserver';\n\nimport { STICKER_SIZE_INLINE_BOT_RESULT } from '../../../../config';\n\nimport StickerButton from '../../../common/StickerButton';\n\ntype OwnProps = {\n  inlineResult: ApiBotInlineMediaResult;\n  isSavedMessages?: boolean;\n  observeIntersection: ObserveFn;\n  onClick: (result: ApiBotInlineResult, isSilent?: boolean, shouldSchedule?: boolean) => void;\n  isCurrentUserPremium?: boolean;\n};\n\nconst StickerResult: FC<OwnProps> = ({\n  inlineResult,\n  isSavedMessages,\n  observeIntersection,\n  onClick,\n  isCurrentUserPremium,\n}) => {\n  const { sticker } = inlineResult;\n\n  if (!sticker) {\n    return undefined;\n  }\n\n  return (\n    <StickerButton\n      sticker={sticker}\n      size={STICKER_SIZE_INLINE_BOT_RESULT}\n      observeIntersection={observeIntersection}\n      title={sticker.emoji}\n      className=\"chat-item-clickable\"\n      onClick={onClick}\n      clickArg={inlineResult}\n      isSavedMessages={isSavedMessages}\n      canViewSet\n      noShowPremium\n      isCurrentUserPremium={isCurrentUserPremium}\n    />\n  );\n};\n\nexport default memo(StickerResult);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useEffect, useRef } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type {\n  ApiBotInlineMediaResult, ApiBotInlineResult, ApiBotInlineSwitchPm, ApiBotInlineSwitchWebview,\n} from '../../../api/types';\nimport { LoadMoreDirection } from '../../../types';\n\nimport buildClassName from '../../../util/buildClassName';\nimport { throttle } from '../../../util/schedulers';\nimport setTooltipItemVisible from '../../../util/setTooltipItemVisible';\nimport { extractCurrentThemeParams } from '../../../util/themeStyle';\nimport { IS_TOUCH_ENV } from '../../../util/windowEnvironment';\n\nimport useCurrentOrPrev from '../../../hooks/useCurrentOrPrev';\nimport { useIntersectionObserver } from '../../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport usePreviousDeprecated from '../../../hooks/usePreviousDeprecated';\nimport useShowTransitionDeprecated from '../../../hooks/useShowTransitionDeprecated';\nimport { useKeyboardNavigation } from './hooks/useKeyboardNavigation';\n\nimport InfiniteScroll from '../../ui/InfiniteScroll';\nimport ListItem from '../../ui/ListItem';\nimport ArticleResult from './inlineResults/ArticleResult';\nimport GifResult from './inlineResults/GifResult';\nimport MediaResult from './inlineResults/MediaResult';\nimport StickerResult from './inlineResults/StickerResult';\n\nimport './InlineBotTooltip.scss';\n\nconst INTERSECTION_DEBOUNCE_MS = 200;\nconst runThrottled = throttle((cb) => cb(), 500, true);\n\nexport type OwnProps = {\n  isOpen: boolean;\n  botId?: string;\n  isGallery?: boolean;\n  inlineBotResults?: (ApiBotInlineResult | ApiBotInlineMediaResult)[];\n  switchPm?: ApiBotInlineSwitchPm;\n  switchWebview?: ApiBotInlineSwitchWebview;\n  isSavedMessages?: boolean;\n  canSendGifs?: boolean;\n  onSelectResult: (\n    inlineResult: ApiBotInlineMediaResult | ApiBotInlineResult, isSilent?: boolean, shouldSchedule?: boolean,\n  ) => void;\n  loadMore: NoneToVoidFunction;\n  onClose: NoneToVoidFunction;\n  isCurrentUserPremium?: boolean;\n};\n\nconst InlineBotTooltip: FC<OwnProps> = ({\n  isOpen,\n  botId,\n  isGallery,\n  inlineBotResults,\n  switchPm,\n  switchWebview,\n  isSavedMessages,\n  canSendGifs,\n  loadMore,\n  onClose,\n  onSelectResult,\n  isCurrentUserPremium,\n}) => {\n  const {\n    openChat,\n    startBot,\n    requestSimpleWebView,\n  } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  const { shouldRender, transitionClassNames } = useShowTransitionDeprecated(isOpen, undefined, undefined, false);\n  const renderedIsGallery = useCurrentOrPrev(isGallery, shouldRender);\n  const {\n    observe: observeIntersection,\n  } = useIntersectionObserver({\n    rootRef: containerRef,\n    debounceMs: INTERSECTION_DEBOUNCE_MS,\n    isDisabled: !isOpen,\n  });\n\n  const handleLoadMore = useLastCallback(({ direction }: { direction: LoadMoreDirection }) => {\n    if (direction === LoadMoreDirection.Backwards) {\n      runThrottled(loadMore);\n    }\n  });\n\n  const selectedIndex = useKeyboardNavigation({\n    isActive: isOpen,\n    shouldRemoveSelectionOnReset: renderedIsGallery,\n    noArrowNavigation: renderedIsGallery,\n    items: inlineBotResults,\n    onSelect: onSelectResult,\n    onClose,\n  });\n\n  useEffect(() => {\n    setTooltipItemVisible('.chat-item-clickable', selectedIndex, containerRef);\n  }, [selectedIndex]);\n\n  const handleSendPm = useLastCallback(() => {\n    openChat({ id: botId });\n    startBot({ botId: botId!, param: switchPm!.startParam });\n  });\n\n  const handleOpenWebview = useLastCallback(() => {\n    const theme = extractCurrentThemeParams();\n\n    requestSimpleWebView({\n      botId: botId!,\n      url: switchWebview!.url,\n      buttonText: switchWebview!.text,\n      theme,\n      isFromSwitchWebView: true,\n    });\n  });\n\n  const prevInlineBotResults = usePreviousDeprecated(\n    inlineBotResults?.length\n      ? inlineBotResults\n      : undefined,\n    shouldRender,\n  );\n  const renderedInlineBotResults = inlineBotResults?.length ? inlineBotResults : prevInlineBotResults;\n\n  if (!shouldRender || !(renderedInlineBotResults?.length || switchPm)) {\n    return undefined;\n  }\n\n  const className = buildClassName(\n    'InlineBotTooltip composer-tooltip',\n    IS_TOUCH_ENV ? 'no-scrollbar' : 'custom-scroll',\n    renderedIsGallery && 'gallery',\n    transitionClassNames,\n  );\n\n  function renderSwitchPm() {\n    return (\n      <ListItem ripple className=\"switch-pm scroll-item\" onClick={handleSendPm}>\n        <span className=\"title\">{switchPm!.text}</span>\n      </ListItem>\n    );\n  }\n\n  function renderSwitchWebview() {\n    return (\n      <ListItem ripple className=\"switch-pm scroll-item\" onClick={handleOpenWebview}>\n        <span className=\"title\">{switchWebview!.text}</span>\n      </ListItem>\n    );\n  }\n\n  function renderContent() {\n    return renderedInlineBotResults!.map((inlineBotResult, index) => {\n      switch (inlineBotResult.type) {\n        case 'gif':\n          return (\n            <GifResult\n              key={inlineBotResult.id}\n              inlineResult={inlineBotResult}\n              observeIntersection={observeIntersection}\n              onClick={onSelectResult}\n              isSavedMessages={isSavedMessages}\n              canSendGifs={canSendGifs}\n            />\n          );\n\n        case 'photo':\n          return (\n            <MediaResult\n              key={inlineBotResult.id}\n              isForGallery={renderedIsGallery}\n              inlineResult={inlineBotResult}\n              onClick={onSelectResult}\n            />\n          );\n\n        case 'sticker':\n          return (\n            <StickerResult\n              key={inlineBotResult.id}\n              inlineResult={inlineBotResult}\n              observeIntersection={observeIntersection}\n              onClick={onSelectResult}\n              isSavedMessages={isSavedMessages}\n              isCurrentUserPremium={isCurrentUserPremium}\n            />\n          );\n\n        case 'video':\n        case 'file':\n        case 'game':\n          return (\n            <MediaResult\n              key={inlineBotResult.id}\n              focus={selectedIndex === index}\n              inlineResult={inlineBotResult}\n              onClick={onSelectResult}\n            />\n          );\n        case 'article':\n        case 'audio':\n        case 'voice':\n          return (\n            <ArticleResult\n              key={inlineBotResult.id}\n              focus={selectedIndex === index}\n              inlineResult={inlineBotResult}\n              onClick={onSelectResult}\n            />\n          );\n\n        default:\n          return undefined;\n      }\n    });\n  }\n\n  return (\n    <InfiniteScroll\n      ref={containerRef}\n      className={className}\n      items={renderedInlineBotResults}\n      itemSelector=\".chat-item-clickable\"\n      noFastList\n      onLoadMore={handleLoadMore}\n      sensitiveArea={160}\n    >\n      {switchPm && renderSwitchPm()}\n      {switchWebview && renderSwitchWebview()}\n      {Boolean(renderedInlineBotResults?.length) && renderContent()}\n    </InfiniteScroll>\n  );\n};\n\nexport default memo(InlineBotTooltip);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useEffect, useRef } from '../../../lib/teact/teact';\nimport { getActions, getGlobal } from '../../../global';\n\nimport type { ApiSendAsPeerId } from '../../../api/types';\n\nimport buildClassName from '../../../util/buildClassName';\nimport setTooltipItemVisible from '../../../util/setTooltipItemVisible';\nimport { IS_TOUCH_ENV } from '../../../util/windowEnvironment';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMouseInside from '../../../hooks/useMouseInside';\nimport useOldLang from '../../../hooks/useOldLang';\nimport { useKeyboardNavigation } from './hooks/useKeyboardNavigation';\n\nimport Avatar from '../../common/Avatar';\nimport FullNameTitle from '../../common/FullNameTitle';\nimport ListItem from '../../ui/ListItem';\nimport Menu from '../../ui/Menu';\n\nimport './SendAsMenu.scss';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  chatId?: string;\n  selectedSendAsId?: string;\n  sendAsPeerIds?: ApiSendAsPeerId[];\n  isCurrentUserPremium?: boolean;\n  onClose: () => void;\n};\n\nconst SendAsMenu: FC<OwnProps> = ({\n  isOpen,\n  chatId,\n  selectedSendAsId,\n  sendAsPeerIds,\n  isCurrentUserPremium,\n  onClose,\n}) => {\n  const { saveDefaultSendAs, showNotification } = getActions();\n\n  // No need for expensive global updates on users and chats, so we avoid them\n  const usersById = getGlobal().users.byId;\n  const chatsById = getGlobal().chats.byId;\n\n  const lang = useOldLang();\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n\n  const [handleMouseEnter, handleMouseLeave, markMouseInside] = useMouseInside(isOpen, onClose, undefined);\n\n  useEffect(() => {\n    if (isOpen) {\n      markMouseInside();\n    }\n  }, [isOpen, markMouseInside]);\n\n  const handleUserSelect = useLastCallback((id: string) => {\n    onClose();\n    saveDefaultSendAs({ chatId: chatId!, sendAsId: id });\n  });\n\n  const selectedSendAsIndex = useKeyboardNavigation({\n    isActive: isOpen,\n    items: sendAsPeerIds,\n    onSelect: handleUserSelect,\n    shouldSelectOnTab: true,\n    shouldSaveSelectionOnUpdateItems: true,\n    onClose,\n  });\n\n  useEffect(() => {\n    setTooltipItemVisible('.chat-item-clickable', selectedSendAsIndex, containerRef);\n  }, [selectedSendAsIndex]);\n\n  useEffect(() => {\n    if (sendAsPeerIds && !sendAsPeerIds.length) {\n      onClose();\n    }\n  }, [sendAsPeerIds, onClose]);\n\n  return (\n    <Menu\n      isOpen={isOpen}\n      positionX=\"left\"\n      positionY=\"bottom\"\n      onClose={onClose}\n      className=\"SendAsMenu\"\n      onCloseAnimationEnd={onClose}\n      onMouseEnter={!IS_TOUCH_ENV ? handleMouseEnter : undefined}\n      onMouseLeave={!IS_TOUCH_ENV ? handleMouseLeave : undefined}\n      noCloseOnBackdrop={!IS_TOUCH_ENV}\n      noCompact\n    >\n      <div className=\"send-as-title\" dir=\"auto\">{lang('SendMessageAsTitle')}</div>\n      {usersById && chatsById && sendAsPeerIds?.map(({ id, isPremium }, index) => {\n        const user = usersById[id];\n        const chat = chatsById[id];\n        const peer = user || chat;\n\n        const handleClick = () => {\n          if (!isPremium || isCurrentUserPremium) {\n            handleUserSelect(id);\n          } else {\n            showNotification({\n              message: lang('SelectSendAsPeerPremiumHint'),\n              actionText: lang('Open'),\n              action: {\n                action: 'openPremiumModal',\n                payload: {},\n              },\n            });\n          }\n        };\n\n        const avatarClassName = buildClassName(selectedSendAsId === id && 'selected');\n\n        return (\n          <ListItem\n            key={id}\n            className=\"SendAsItem chat-item-clickable scroll-item with-avatar\"\n            // eslint-disable-next-line react/jsx-no-bind\n            onClick={handleClick}\n            focus={selectedSendAsIndex === index}\n            rightElement={!isCurrentUserPremium && isPremium\n              && <i className=\"icon icon-lock-badge send-as-icon-locked\" />}\n          >\n            <Avatar\n              size=\"small\"\n              peer={peer}\n              className={avatarClassName}\n            />\n            <div className=\"info\">\n              {peer && <FullNameTitle peer={peer} noFake />}\n              <span className=\"subtitle\">{user\n                ? lang('VoipGroupPersonalAccount')\n                : lang('Subscribers', chat?.membersCount, 'i')}\n              </span>\n            </div>\n          </ListItem>\n        );\n      })}\n    </Menu>\n  );\n};\n\nexport default memo(SendAsMenu);\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useMemo, useRef,\n} from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { ApiSticker, ApiStickerSet } from '../../api/types';\nimport type { ObserveFn } from '../../hooks/useIntersectionObserver';\n\nimport { STICKER_SIZE_SEARCH } from '../../config';\nimport { selectIsCurrentUserPremium, selectShouldLoopStickers, selectStickerSet } from '../../global/selectors';\n\nimport useOldLang from '../../hooks/useOldLang';\n\nimport StickerButton from '../common/StickerButton';\nimport Button from '../ui/Button';\nimport Spinner from '../ui/Spinner';\n\ntype OwnProps = {\n  stickerSetId: string;\n  observeIntersection: ObserveFn;\n  isModalOpen?: boolean;\n};\n\ntype StateProps = {\n  set?: ApiStickerSet;\n  shouldPlay?: boolean;\n  isCurrentUserPremium?: boolean;\n};\n\nconst PREMIUM_STICKERS_TO_DISPLAY = 3;\nconst STICKERS_TO_DISPLAY = 5;\n\nconst StickerSetResult: FC<OwnProps & StateProps> = ({\n  stickerSetId, observeIntersection, set, shouldPlay,\n  isModalOpen, isCurrentUserPremium,\n}) => {\n  const { loadStickers, toggleStickerSet, openStickerSet } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const sharedCanvasRef = useRef<HTMLCanvasElement>(null);\n\n  const lang = useOldLang();\n  const isAdded = set && !set.isArchived && Boolean(set.installedDate);\n  const areStickersLoaded = Boolean(set?.stickers);\n\n  const displayedStickers = useMemo(() => {\n    if (!set) {\n      return [];\n    }\n\n    const premiumStickerIds = (set.stickers?.filter(({ hasEffect }) => hasEffect) ?? [])\n      .slice(0, PREMIUM_STICKERS_TO_DISPLAY);\n    const coverStickerIds = (set.covers || []).map(({ id }) => id);\n    const otherStickers = set.stickers ? set.stickers.filter(({ id }) => !coverStickerIds.includes(id)) : [];\n\n    return [...premiumStickerIds, ...(set.covers || []), ...otherStickers].slice(0, STICKERS_TO_DISPLAY);\n  }, [set]);\n\n  useEffect(() => {\n    // Featured stickers are initialized with one sticker in collection (cover of SickerSet)\n    if (!areStickersLoaded && displayedStickers.length < STICKERS_TO_DISPLAY && set) {\n      loadStickers({\n        stickerSetInfo: {\n          shortName: set.shortName,\n        },\n      });\n    }\n  }, [areStickersLoaded, displayedStickers.length, loadStickers, set, stickerSetId]);\n\n  const handleAddClick = useCallback(() => {\n    toggleStickerSet({ stickerSetId });\n  }, [toggleStickerSet, stickerSetId]);\n\n  const handleStickerClick = useCallback((sticker: ApiSticker) => {\n    openStickerSet({ stickerSetInfo: sticker.stickerSetInfo });\n  }, [openStickerSet]);\n\n  if (!set) {\n    return undefined;\n  }\n\n  const canRenderStickers = displayedStickers.length > 0;\n\n  return (\n    <div key={set.id} className=\"sticker-set\" dir={lang.isRtl ? 'rtl' : undefined}>\n      <div className=\"sticker-set-header\">\n        <div className=\"title-wrapper\">\n          <h3 className=\"title\" dir=\"auto\">{set.title}</h3>\n          <p className=\"count\" dir=\"auto\">{lang('Stickers', set.count, 'i')}</p>\n        </div>\n        <Button\n          className={isAdded ? 'is-added' : undefined}\n          color=\"primary\"\n          size=\"tiny\"\n          pill\n          fluid\n          onClick={handleAddClick}\n        >\n          {lang(isAdded ? 'Stickers.Installed' : 'Stickers.Install')}\n        </Button>\n      </div>\n      <div className=\"sticker-set-main shared-canvas-container\">\n        <canvas ref={sharedCanvasRef} className=\"shared-canvas\" />\n        {!canRenderStickers && <Spinner />}\n        {canRenderStickers && displayedStickers.map((sticker) => (\n          <StickerButton\n            sticker={sticker}\n            size={STICKER_SIZE_SEARCH}\n            observeIntersection={observeIntersection}\n            noPlay={!shouldPlay || isModalOpen}\n            clickArg={sticker}\n            onClick={handleStickerClick}\n            noContextMenu\n            isCurrentUserPremium={isCurrentUserPremium}\n            sharedCanvasRef={sharedCanvasRef}\n          />\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { stickerSetId }): StateProps => {\n    return {\n      set: selectStickerSet(global, stickerSetId),\n      shouldPlay: selectShouldLoopStickers(global),\n      isCurrentUserPremium: selectIsCurrentUserPremium(global),\n    };\n  },\n)(StickerSetResult));\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useRef,\n} from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport { selectCurrentStickerSearch, selectTabState } from '../../global/selectors';\nimport { throttle } from '../../util/schedulers';\n\nimport useHistoryBack from '../../hooks/useHistoryBack';\nimport { useIntersectionObserver } from '../../hooks/useIntersectionObserver';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Loading from '../ui/Loading';\nimport StickerSetResult from './StickerSetResult';\n\nimport './StickerSearch.scss';\n\ntype OwnProps = {\n  onClose: NoneToVoidFunction;\n  isActive: boolean;\n};\n\ntype StateProps = {\n  query?: string;\n  featuredIds?: string[];\n  resultIds?: string[];\n  isModalOpen: boolean;\n};\n\nconst INTERSECTION_THROTTLE = 200;\n\nconst runThrottled = throttle((cb) => cb(), 60000, true);\n\nconst StickerSearch: FC<OwnProps & StateProps> = ({\n  isActive,\n  query,\n  featuredIds,\n  resultIds,\n  isModalOpen,\n  onClose,\n}) => {\n  const { loadFeaturedStickers } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n\n  const lang = useOldLang();\n\n  const {\n    observe: observeIntersection,\n  } = useIntersectionObserver({ rootRef: containerRef, throttleMs: INTERSECTION_THROTTLE });\n\n  // Due to the parent Transition, this component never gets unmounted,\n  // that's why we use throttled API call on every update.\n  useEffect(() => {\n    runThrottled(() => {\n      loadFeaturedStickers();\n    });\n  });\n\n  useHistoryBack({\n    isActive,\n    onBack: onClose,\n  });\n\n  function renderContent() {\n    if (query === undefined) {\n      return undefined;\n    }\n\n    if (!query && featuredIds) {\n      return featuredIds.map((id) => (\n        <StickerSetResult\n          key={id}\n          stickerSetId={id}\n          observeIntersection={observeIntersection}\n          isModalOpen={isModalOpen}\n        />\n      ));\n    }\n\n    if (resultIds) {\n      if (!resultIds.length) {\n        return <p className=\"helper-text\" dir=\"auto\">Nothing found.</p>;\n      }\n\n      return resultIds.map((id) => (\n        <StickerSetResult\n          key={id}\n          stickerSetId={id}\n          observeIntersection={observeIntersection}\n          isModalOpen={isModalOpen}\n        />\n      ));\n    }\n\n    return <Loading />;\n  }\n\n  return (\n    <div ref={containerRef} className=\"StickerSearch custom-scroll\" dir={lang.isRtl ? 'rtl' : undefined}>\n      {renderContent()}\n    </div>\n  );\n};\n\nexport default memo(withGlobal(\n  (global): StateProps => {\n    const currentSearch = selectCurrentStickerSearch(global);\n    const { query, resultIds } = currentSearch || {};\n    const { featured } = global.stickers;\n\n    return {\n      query,\n      featuredIds: featured.setIds,\n      resultIds,\n      isModalOpen: Boolean(selectTabState(global).openedStickerSetShortName),\n    };\n  },\n)(StickerSearch));\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useCallback, useRef } from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { ApiChat, ApiChatFullInfo, ApiVideo } from '../../api/types';\nimport type { MessageList } from '../../global/types';\n\nimport { getAllowedAttachmentOptions, getCanPostInChat } from '../../global/helpers';\nimport {\n  selectCanScheduleUntilOnline,\n  selectChat,\n  selectChatFullInfo,\n  selectCurrentGifSearch,\n  selectCurrentMessageList,\n  selectIsChatWithBot,\n  selectIsChatWithSelf, selectThreadInfo,\n  selectTopic,\n} from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport { IS_TOUCH_ENV } from '../../util/windowEnvironment';\n\nimport useHistoryBack from '../../hooks/useHistoryBack';\nimport { useIntersectionObserver } from '../../hooks/useIntersectionObserver';\nimport useOldLang from '../../hooks/useOldLang';\nimport useSchedule from '../../hooks/useSchedule';\n\nimport GifButton from '../common/GifButton';\nimport InfiniteScroll from '../ui/InfiniteScroll';\nimport Loading from '../ui/Loading';\n\nimport './GifSearch.scss';\n\ntype OwnProps = {\n  onClose: NoneToVoidFunction;\n  isActive: boolean;\n};\n\ntype StateProps = {\n  query?: string;\n  results?: ApiVideo[];\n  chat?: ApiChat;\n  chatFullInfo?: ApiChatFullInfo;\n  isChatWithBot?: boolean;\n  canScheduleUntilOnline?: boolean;\n  isSavedMessages?: boolean;\n  canPostInChat?: boolean;\n  currentMessageList?: MessageList;\n};\n\nconst PRELOAD_BACKWARDS = 96; // GIF Search bot results are multiplied by 24\nconst INTERSECTION_DEBOUNCE = 300;\n\nconst GifSearch: FC<OwnProps & StateProps> = ({\n  isActive,\n  query,\n  results,\n  chat,\n  chatFullInfo,\n  isChatWithBot,\n  canScheduleUntilOnline,\n  isSavedMessages,\n  canPostInChat,\n  currentMessageList,\n  onClose,\n}) => {\n  const {\n    searchMoreGifs,\n    sendMessage,\n    setGifSearchQuery,\n  } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n\n  const [requestCalendar, calendar] = useSchedule(canScheduleUntilOnline);\n\n  const {\n    observe: observeIntersection,\n  } = useIntersectionObserver({ rootRef: containerRef, debounceMs: INTERSECTION_DEBOUNCE });\n\n  const canSendGifs = canPostInChat && getAllowedAttachmentOptions(chat, chatFullInfo, isChatWithBot).canSendGifs;\n\n  const handleGifClick = useCallback((gif: ApiVideo, isSilent?: boolean, shouldSchedule?: boolean) => {\n    if (canSendGifs) {\n      if (!currentMessageList) {\n        return;\n      }\n\n      if (shouldSchedule) {\n        requestCalendar((scheduledAt) => {\n          sendMessage({\n            messageList: currentMessageList,\n            gif,\n            scheduledAt,\n            isSilent,\n          });\n        });\n      } else {\n        sendMessage({ messageList: currentMessageList, gif, isSilent });\n      }\n    }\n\n    if (IS_TOUCH_ENV) {\n      setGifSearchQuery({ query: undefined });\n    }\n  }, [canSendGifs, currentMessageList, requestCalendar]);\n\n  const handleSearchMoreGifs = useCallback(() => {\n    searchMoreGifs();\n  }, [searchMoreGifs]);\n\n  const lang = useOldLang();\n\n  useHistoryBack({\n    isActive,\n    onBack: onClose,\n  });\n\n  function renderContent() {\n    if (query === undefined) {\n      return undefined;\n    }\n\n    if (!results) {\n      return (\n        <Loading />\n      );\n    }\n\n    if (!results.length) {\n      return (\n        <p className=\"helper-text\" dir=\"auto\">{lang('NoGIFsFound')}</p>\n      );\n    }\n\n    return results.map((gif) => (\n      <GifButton\n        key={gif.id}\n        gif={gif}\n        observeIntersection={observeIntersection}\n        onClick={canSendGifs ? handleGifClick : undefined}\n        isSavedMessages={isSavedMessages}\n      />\n    ));\n  }\n\n  const hasResults = Boolean(query !== undefined && results && results.length);\n\n  return (\n    <div className=\"GifSearch\" dir={lang.isRtl ? 'rtl' : undefined}>\n      <InfiniteScroll\n        ref={containerRef}\n        className={buildClassName('gif-container custom-scroll', hasResults && 'grid')}\n        items={results}\n        itemSelector=\".GifButton\"\n        preloadBackwards={PRELOAD_BACKWARDS}\n        noFastList\n        onLoadMore={handleSearchMoreGifs}\n      >\n        {renderContent()}\n      </InfiniteScroll>\n      {calendar}\n    </div>\n  );\n};\n\nexport default memo(withGlobal(\n  (global): StateProps => {\n    const currentSearch = selectCurrentGifSearch(global);\n    const { query, results } = currentSearch || {};\n    const { chatId, threadId } = selectCurrentMessageList(global) || {};\n    const chat = chatId ? selectChat(global, chatId) : undefined;\n    const chatFullInfo = chatId ? selectChatFullInfo(global, chatId) : undefined;\n    const isChatWithBot = chat ? selectIsChatWithBot(global, chat) : undefined;\n    const isSavedMessages = Boolean(chatId) && selectIsChatWithSelf(global, chatId);\n    const threadInfo = chatId && threadId ? selectThreadInfo(global, chatId, threadId) : undefined;\n    const isMessageThread = Boolean(!threadInfo?.isCommentsInfo && threadInfo?.fromChannelId);\n    const topic = chatId && threadId ? selectTopic(global, chatId, threadId) : undefined;\n    const canPostInChat = Boolean(chat) && Boolean(threadId)\n      && getCanPostInChat(chat, topic, isMessageThread, chatFullInfo);\n\n    return {\n      query,\n      results,\n      chat,\n      isChatWithBot,\n      isSavedMessages,\n      canPostInChat,\n      canScheduleUntilOnline: Boolean(chatId) && selectCanScheduleUntilOnline(global, chatId),\n      currentMessageList: selectCurrentMessageList(global),\n    };\n  },\n)(GifSearch));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"OAKzmAva\",\"withImage\":\"BQ6HUOqN\",\"imageContainer\":\"TmJvv2A6\",\"image\":\"U96CW2I7\",\"round\":\"yxjDeIct\",\"circle\":\"cdfiLmXo\",\"withStoryCircle\":\"BOfHPv20\",\"summary\":\"vXi2JQlj\",\"title\":\"bi3fL59p\",\"info\":\"GUK4ajPK\",\"meta\":\"YH6jeZIh\",\"metaWithIcon\":\"q1LnuIUn\",\"metaIcon\":\"PJZzyVLK\",\"date\":\"C7NpG5Y9\"};","import React, { memo } from '../../../lib/teact/teact';\n\nimport type { StatisticsMessageInteractionCounter, StatisticsStoryInteractionCounter } from '../../../api/types';\n\nimport { formatIntegerCompact } from '../../../util/textFormat';\n\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Icon from '../../common/icons/Icon';\n\nimport styles from './StatisticsRecentPost.module.scss';\n\ninterface OwnProps {\n  postStatistic: StatisticsStoryInteractionCounter | StatisticsMessageInteractionCounter;\n}\n\nfunction StatisticsRecentPostMeta({ postStatistic }: OwnProps) {\n  const lang = useOldLang();\n  return (\n    <div className={styles.meta}>\n      {postStatistic.reactionsCount > 0 && (\n        <span className={styles.metaWithIcon}>\n          <Icon name=\"heart-outline\" className={styles.metaIcon} />\n          {formatIntegerCompact(postStatistic.reactionsCount)}\n        </span>\n      )}\n\n      {postStatistic.forwardsCount > 0 && (\n        <span className={styles.metaWithIcon}>\n          <Icon name=\"forward\" className={styles.metaIcon} />\n          {formatIntegerCompact(postStatistic.forwardsCount)}\n        </span>\n      )}\n\n      {!postStatistic.forwardsCount && !postStatistic.reactionsCount\n        && lang('ChannelStats.SharesCount_ZeroValueHolder')}\n    </div>\n  );\n}\n\nexport default memo(StatisticsRecentPostMeta);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiMessage, StatisticsMessageInteractionCounter } from '../../../api/types';\nimport type { LangFn } from '../../../hooks/useOldLang';\n\nimport {\n  getMessageMediaHash,\n  getMessageMediaThumbDataUri,\n  getMessageRoundVideo,\n  getMessageVideo,\n} from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\nimport { formatDateTimeToString } from '../../../util/dates/dateFormat';\nimport { renderMessageSummary } from '../../common/helpers/renderMessageText';\n\nimport useMedia from '../../../hooks/useMedia';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Icon from '../../common/icons/Icon';\nimport StatisticsRecentPostMeta from './StatisticsRecentPostMeta';\n\nimport styles from './StatisticsRecentPost.module.scss';\n\nexport type OwnProps = {\n  postStatistic: StatisticsMessageInteractionCounter;\n  message: ApiMessage;\n};\n\nconst StatisticsRecentMessage: FC<OwnProps> = ({ postStatistic, message }) => {\n  const lang = useOldLang();\n  const { toggleMessageStatistics } = getActions();\n\n  const mediaThumbnail = getMessageMediaThumbDataUri(message);\n  const mediaBlobUrl = useMedia(getMessageMediaHash(message, 'micro'));\n  const isRoundVideo = Boolean(getMessageRoundVideo(message));\n\n  const handleClick = useCallback(() => {\n    toggleMessageStatistics({ messageId: message.id });\n  }, [toggleMessageStatistics, message.id]);\n\n  return (\n    <div\n      className={buildClassName(\n        styles.root,\n        Boolean(mediaBlobUrl || mediaThumbnail) && styles.withImage,\n      )}\n      onClick={handleClick}\n    >\n      <div className={styles.title}>\n        <div className={styles.summary}>\n          {renderSummary(lang, message, mediaBlobUrl || mediaThumbnail, isRoundVideo)}\n        </div>\n        <div className={styles.meta}>\n          {lang('ChannelStats.ViewsCount', postStatistic.viewsCount, 'i')}\n        </div>\n      </div>\n\n      <div className={styles.info}>\n        <div className={styles.date}>\n          {formatDateTimeToString(message.date * 1000, lang.code)}\n        </div>\n        <StatisticsRecentPostMeta postStatistic={postStatistic} />\n      </div>\n    </div>\n  );\n};\n\nfunction renderSummary(lang: LangFn, message: ApiMessage, blobUrl?: string, isRoundVideo?: boolean) {\n  if (!blobUrl) {\n    return renderMessageSummary(lang, message);\n  }\n\n  return (\n    <span>\n      <img\n        src={blobUrl}\n        alt=\"\"\n        draggable={false}\n        className={buildClassName(styles.image, isRoundVideo && styles.round)}\n      />\n      {getMessageVideo(message) && <Icon name=\"play\" />}\n      {renderMessageSummary(lang, message, true)}\n    </span>\n  );\n}\n\nexport default memo(StatisticsRecentMessage);\n","import React, { memo } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type {\n  ApiChat,\n  ApiTypeStory,\n  StatisticsStoryInteractionCounter,\n} from '../../../api/types';\nimport type { LangFn } from '../../../hooks/useOldLang';\n\nimport { getStoryMediaHash } from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\nimport { formatDateTimeToString } from '../../../util/dates/dateFormat';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMedia from '../../../hooks/useMedia';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Avatar from '../../common/Avatar';\nimport StatisticsRecentPostMeta from './StatisticsRecentPostMeta';\n\nimport styles from './StatisticsRecentPost.module.scss';\n\nexport type OwnProps = {\n  chat: ApiChat;\n  story?: ApiTypeStory;\n  postStatistic: StatisticsStoryInteractionCounter;\n};\n\nfunction StatisticsRecentStory({ chat, story, postStatistic }: OwnProps) {\n  const lang = useOldLang();\n  const { toggleStoryStatistics } = getActions();\n  const isLoaded = story && 'content' in story;\n\n  const video = isLoaded ? story.content.video : undefined;\n  const imageHash = isLoaded ? getStoryMediaHash(story) : undefined;\n  const imgBlobUrl = useMedia(imageHash);\n  const mediaThumbnail = imgBlobUrl || video?.thumbnail?.dataUri;\n\n  const handleClick = useLastCallback(() => {\n    toggleStoryStatistics({ storyId: postStatistic.storyId });\n  });\n\n  return (\n    <div\n      className={buildClassName(styles.root, styles.withImage)}\n      onClick={handleClick}\n    >\n      <div className={styles.title}>\n        <div className={styles.summary}>\n          {renderSummary(lang, chat, imgBlobUrl || mediaThumbnail)}\n        </div>\n        <div className={styles.meta}>\n          {lang('ChannelStats.ViewsCount', postStatistic.viewsCount, 'i')}\n        </div>\n      </div>\n\n      <div className={styles.info}>\n        <div className={styles.date}>\n          {isLoaded && Boolean(story.date) && formatDateTimeToString(story.date * 1000, lang.code)}\n        </div>\n        <StatisticsRecentPostMeta postStatistic={postStatistic} />\n      </div>\n    </div>\n  );\n}\n\nfunction renderSummary(lang: LangFn, chat: ApiChat, blobUrl?: string) {\n  return (\n    <span>\n      {blobUrl ? (\n        <span className={styles.imageContainer}>\n          <img\n            src={blobUrl}\n            alt=\"\"\n            draggable={false}\n            className={buildClassName(styles.image, styles.circle, styles.withStoryCircle)}\n          />\n        </span>\n      ) : (\n        <Avatar\n          peer={chat}\n          size=\"small-mobile\"\n          className={styles.image}\n          withStorySolid\n          forceUnreadStorySolid\n        />\n      )}\n\n      {lang('Story')}\n    </span>\n  );\n}\n\nexport default memo(StatisticsRecentStory);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"T1l_4J8z\",\"pie-slim-in\":\"EgyLOizu\",\"pieSlimIn\":\"EgyLOizu\",\"pie-slim-out\":\"TBiNdFb4\",\"pieSlimOut\":\"TBiNdFb4\",\"messages\":\"suY9dEIz\",\"publicForwards\":\"S1x1ovkC\",\"messages-title\":\"evQIkAqx\",\"messagesTitle\":\"evQIkAqx\",\"publicForwards-title\":\"WxL3i5PM\",\"publicForwardsTitle\":\"WxL3i5PM\",\"ready\":\"aUrozL5_\",\"graph\":\"QQHwjG88\",\"hidden\":\"QGctP1Nk\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo,\n  useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type {\n  ApiChannelStatistics,\n  ApiChat,\n  ApiGroupStatistics,\n  ApiMessage,\n  ApiTypeStory,\n  StatisticsGraph,\n} from '../../../api/types';\n\nimport {\n  selectChat,\n  selectChatFullInfo,\n  selectChatMessages,\n  selectPeerStories,\n  selectStatistics,\n} from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { callApi } from '../../../api/gramjs';\n\nimport useForceUpdate from '../../../hooks/useForceUpdate';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Loading from '../../ui/Loading';\nimport StatisticsOverview from './StatisticsOverview';\nimport StatisticsRecentMessage from './StatisticsRecentMessage';\nimport StatisticsRecentStory from './StatisticsRecentStory';\n\nimport styles from './Statistics.module.scss';\n\ntype ILovelyChart = { create: Function };\nlet lovelyChartPromise: Promise<ILovelyChart>;\nlet LovelyChart: ILovelyChart;\n\nasync function ensureLovelyChart() {\n  if (!lovelyChartPromise) {\n    lovelyChartPromise = import('../../../lib/lovely-chart/LovelyChart') as Promise<ILovelyChart>;\n    LovelyChart = await lovelyChartPromise;\n  }\n\n  return lovelyChartPromise;\n}\n\nconst CHANNEL_GRAPHS_TITLES = {\n  growthGraph: 'ChannelStats.Graph.Growth',\n  followersGraph: 'ChannelStats.Graph.Followers',\n  muteGraph: 'ChannelStats.Graph.Notifications',\n  topHoursGraph: 'ChannelStats.Graph.ViewsByHours',\n  viewsBySourceGraph: 'ChannelStats.Graph.ViewsBySource',\n  newFollowersBySourceGraph: 'ChannelStats.Graph.NewFollowersBySource',\n  languagesGraph: 'ChannelStats.Graph.Language',\n  interactionsGraph: 'ChannelStats.Graph.Interactions',\n  reactionsByEmotionGraph: 'ChannelStats.Graph.Reactions',\n  storyInteractionsGraph: 'ChannelStats.Graph.Stories',\n  storyReactionsByEmotionGraph: 'ChannelStats.Graph.StoriesReactions',\n};\nconst CHANNEL_GRAPHS = Object.keys(CHANNEL_GRAPHS_TITLES) as (keyof ApiChannelStatistics)[];\n\nconst GROUP_GRAPHS_TITLES = {\n  growthGraph: 'Stats.GroupGrowthTitle',\n  membersGraph: 'Stats.GroupMembersTitle',\n  languagesGraph: 'Stats.GroupLanguagesTitle',\n  messagesGraph: 'Stats.GroupMessagesTitle',\n  actionsGraph: 'Stats.GroupActionsTitle',\n  topHoursGraph: 'Stats.GroupTopHoursTitle',\n};\nconst GROUP_GRAPHS = Object.keys(GROUP_GRAPHS_TITLES) as (keyof ApiGroupStatistics)[];\n\nexport type OwnProps = {\n  chatId: string;\n};\n\nexport type StateProps = {\n  chat?: ApiChat;\n  statistics: ApiChannelStatistics | ApiGroupStatistics;\n  dcId?: number;\n  isGroup: boolean;\n  messagesById: Record<string, ApiMessage>;\n  storiesById?: Record<string, ApiTypeStory>;\n};\n\nconst Statistics: FC<OwnProps & StateProps> = ({\n  chatId,\n  chat,\n  statistics,\n  dcId,\n  isGroup,\n  messagesById,\n  storiesById,\n}) => {\n  const lang = useOldLang();\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  const [isReady, setIsReady] = useState(false);\n  const loadedCharts = useRef<string[]>([]);\n\n  const { loadStatistics, loadStatisticsAsyncGraph } = getActions();\n  const forceUpdate = useForceUpdate();\n\n  useEffect(() => {\n    loadStatistics({ chatId, isGroup });\n  }, [chatId, loadStatistics, isGroup]);\n\n  const graphs = useMemo(() => {\n    return isGroup ? GROUP_GRAPHS : CHANNEL_GRAPHS;\n  }, [isGroup]);\n\n  const graphTitles = useMemo(() => {\n    return isGroup ? GROUP_GRAPHS_TITLES : CHANNEL_GRAPHS_TITLES;\n  }, [isGroup]);\n\n  // Load async graphs\n  useEffect(() => {\n    if (!statistics) {\n      return;\n    }\n\n    graphs.forEach((name) => {\n      const graph = statistics[name as keyof typeof statistics];\n      const isAsync = typeof graph === 'string';\n\n      if (isAsync) {\n        loadStatisticsAsyncGraph({\n          name,\n          chatId,\n          token: graph,\n          // Hardcode percentage for languages graph, since API does not return `percentage` flag\n          isPercentage: name === 'languagesGraph',\n        });\n      }\n    });\n  }, [graphs, chatId, statistics, loadStatisticsAsyncGraph]);\n\n  useEffect(() => {\n    (async () => {\n      await ensureLovelyChart();\n\n      if (!isReady) {\n        setIsReady(true);\n        return;\n      }\n\n      if (!statistics || !containerRef.current) {\n        return;\n      }\n\n      graphs.forEach((name, index: number) => {\n        const graph = statistics[name as keyof typeof statistics];\n        const isAsync = typeof graph === 'string';\n\n        if (isAsync || loadedCharts.current.includes(name)) {\n          return;\n        }\n\n        if (!graph) {\n          loadedCharts.current.push(name);\n\n          return;\n        }\n\n        const { zoomToken } = graph;\n\n        LovelyChart.create(\n          containerRef.current!.children[index],\n          {\n            title: lang((graphTitles as Record<string, string>)[name]),\n            ...zoomToken ? {\n              onZoom: (x: number) => callApi('fetchStatisticsAsyncGraph', { token: zoomToken, x, dcId }),\n              zoomOutLabel: lang('Graph.ZoomOut'),\n            } : {},\n            ...graph as StatisticsGraph,\n          },\n        );\n\n        loadedCharts.current.push(name);\n\n        containerRef.current!.children[index].classList.remove(styles.hidden);\n      });\n\n      forceUpdate();\n    })();\n  }, [\n    graphs, graphTitles, isReady, statistics, lang, chatId, loadStatisticsAsyncGraph, dcId, forceUpdate,\n  ]);\n\n  if (!isReady || !statistics) {\n    return <Loading />;\n  }\n\n  return (\n    <div className={buildClassName(styles.root, 'custom-scroll', isReady && styles.ready)}>\n      <StatisticsOverview\n        statistics={statistics}\n        type={isGroup ? 'group' : 'channel'}\n        title={lang('StatisticOverview')}\n      />\n\n      {!loadedCharts.current.length && <Loading />}\n\n      <div ref={containerRef}>\n        {graphs.map((graph) => (\n          <div key={graph} className={buildClassName(styles.graph, styles.hidden)} />\n        ))}\n      </div>\n\n      {Boolean((statistics as ApiChannelStatistics).recentPosts?.length) && (\n        <div className={styles.messages}>\n          <h2 className={styles.messagesTitle}>{lang('ChannelStats.Recent.Header')}</h2>\n\n          {(statistics as ApiChannelStatistics).recentPosts.map((postStatistic) => {\n            if ('msgId' in postStatistic) {\n              const message = messagesById[postStatistic.msgId];\n              if (!message || !('content' in message)) return undefined;\n\n              return (\n                <StatisticsRecentMessage\n                  key={`statistic_message_${postStatistic.msgId}`}\n                  message={message}\n                  postStatistic={postStatistic}\n                />\n              );\n            }\n\n            if ('storyId' in postStatistic && chat) {\n              const story = storiesById?.[postStatistic.storyId];\n\n              return (\n                <StatisticsRecentStory\n                  key={`statistic_story_${postStatistic.storyId}`}\n                  chat={chat}\n                  story={story}\n                  postStatistic={postStatistic}\n                />\n              );\n            }\n\n            return undefined;\n          })}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const statistics = selectStatistics(global, chatId);\n    const chat = selectChat(global, chatId);\n    const dcId = selectChatFullInfo(global, chatId)?.statisticsDcId;\n    const isGroup = chat?.type === 'chatTypeSuperGroup';\n    const messagesById = selectChatMessages(global, chatId);\n    const storiesById = selectPeerStories(global, chatId)?.byId;\n\n    return {\n      statistics, dcId, isGroup, chat, messagesById, storiesById,\n    };\n  },\n)(Statistics));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"oXLpD4Y4\",\"title\":\"paQ2VBe_\",\"views\":\"WvFuOAIf\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback, useMemo } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiMessagePublicForward } from '../../../api/types';\n\nimport { getMainUsername } from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\n\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Avatar from '../../common/Avatar';\n\nimport styles from './StatisticsPublicForward.module.scss';\n\nexport type OwnProps = {\n  data: ApiMessagePublicForward;\n};\n\nconst StatisticsMessagePublicForward: FC<OwnProps> = ({ data }) => {\n  const lang = useOldLang();\n  const { openChatByUsername } = getActions();\n\n  const username = useMemo(() => (data.chat ? getMainUsername(data.chat) : undefined), [data.chat]);\n  const handleClick = useCallback(() => {\n    openChatByUsername({ username: username!, messageId: data.messageId });\n  }, [data.messageId, openChatByUsername, username]);\n\n  return (\n    <div className={buildClassName(styles.root, 'statistic-public-forward')} onClick={handleClick}>\n      <Avatar size=\"medium\" peer={data.chat} />\n\n      <div>\n        <div className={styles.title}>\n          {data.title}\n        </div>\n\n        <div className={styles.views}>\n          {lang('ChannelStats.ViewsCount', data.views, 'i')}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(StatisticsMessagePublicForward);\n","import React, {\n  memo, useEffect, useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type {\n  ApiMessagePublicForward,\n  ApiPostStatistics,\n  StatisticsGraph,\n} from '../../../api/types';\nimport { LoadMoreDirection } from '../../../types';\n\nimport { STATISTICS_PUBLIC_FORWARDS_LIMIT } from '../../../config';\nimport { selectChatFullInfo, selectTabState } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { callApi } from '../../../api/gramjs';\n\nimport useForceUpdate from '../../../hooks/useForceUpdate';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport InfiniteScroll from '../../ui/InfiniteScroll';\nimport Loading from '../../ui/Loading';\nimport StatisticsMessagePublicForward from './StatisticsMessagePublicForward';\nimport StatisticsOverview from './StatisticsOverview';\n\nimport styles from './Statistics.module.scss';\n\ntype ILovelyChart = { create: Function };\nlet lovelyChartPromise: Promise<ILovelyChart>;\nlet LovelyChart: ILovelyChart;\n\nasync function ensureLovelyChart() {\n  if (!lovelyChartPromise) {\n    lovelyChartPromise = import('../../../lib/lovely-chart/LovelyChart') as Promise<ILovelyChart>;\n    LovelyChart = await lovelyChartPromise;\n  }\n\n  return lovelyChartPromise;\n}\n\nconst GRAPH_TITLES = {\n  viewsGraph: 'Stats.MessageInteractionsTitle',\n  reactionsGraph: 'ReactionsByEmotionChartTitle',\n};\nconst GRAPHS = Object.keys(GRAPH_TITLES) as (keyof ApiPostStatistics)[];\n\nexport type OwnProps = {\n  chatId: string;\n  isActive: boolean;\n};\n\nexport type StateProps = {\n  statistics?: ApiPostStatistics;\n  messageId?: number;\n  dcId?: number;\n};\n\nfunction Statistics({\n  chatId,\n  isActive,\n  statistics,\n  dcId,\n  messageId,\n}: OwnProps & StateProps) {\n  const lang = useOldLang();\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  const [isReady, setIsReady] = useState(false);\n  const loadedCharts = useRef<string[]>([]);\n\n  const { loadMessageStatistics, loadMessagePublicForwards, loadStatisticsAsyncGraph } = getActions();\n  const forceUpdate = useForceUpdate();\n\n  useEffect(() => {\n    if (messageId) {\n      loadMessageStatistics({ chatId, messageId });\n    }\n  }, [chatId, loadMessageStatistics, messageId]);\n\n  useEffect(() => {\n    if (!isActive || messageId) {\n      loadedCharts.current = [];\n      setIsReady(false);\n    }\n  }, [isActive, messageId]);\n\n  // Load async graphs\n  useEffect(() => {\n    if (!statistics) {\n      return;\n    }\n\n    GRAPHS.forEach((name) => {\n      const graph = statistics[name as keyof typeof statistics];\n      const isAsync = typeof graph === 'string';\n\n      if (isAsync) {\n        loadStatisticsAsyncGraph({ name, chatId, token: graph });\n      }\n    });\n  }, [chatId, statistics, loadStatisticsAsyncGraph]);\n\n  useEffect(() => {\n    (async () => {\n      await ensureLovelyChart();\n\n      if (!isReady) {\n        setIsReady(true);\n        return;\n      }\n\n      if (!statistics || !containerRef.current) {\n        return;\n      }\n\n      GRAPHS.forEach((name, index: number) => {\n        const graph = statistics[name as keyof typeof statistics];\n        const isAsync = typeof graph === 'string';\n\n        if (isAsync || loadedCharts.current.includes(name)) {\n          return;\n        }\n\n        if (!graph) {\n          loadedCharts.current.push(name);\n\n          return;\n        }\n\n        const { zoomToken } = graph as StatisticsGraph;\n\n        LovelyChart.create(\n          containerRef.current!.children[index],\n          {\n            title: lang((GRAPH_TITLES as Record<string, string>)[name]),\n            ...zoomToken ? {\n              onZoom: (x: number) => callApi('fetchStatisticsAsyncGraph', { token: zoomToken, x, dcId }),\n              zoomOutLabel: lang('Graph.ZoomOut'),\n            } : {},\n            ...graph as StatisticsGraph,\n          },\n        );\n\n        loadedCharts.current.push(name);\n      });\n\n      forceUpdate();\n    })();\n  }, [\n    isReady, statistics, lang, chatId, messageId, loadStatisticsAsyncGraph, dcId, forceUpdate,\n  ]);\n\n  const handleLoadMore = useLastCallback(({ direction }: { direction: LoadMoreDirection }) => {\n    if (direction === LoadMoreDirection.Backwards && messageId) {\n      loadMessagePublicForwards({ chatId, messageId });\n    }\n  });\n\n  if (!isReady || !statistics || !messageId) {\n    return <Loading />;\n  }\n\n  return (\n    <div className={buildClassName(styles.root, 'custom-scroll', isReady && styles.ready)}>\n      <StatisticsOverview statistics={statistics} type=\"message\" title={lang('StatisticOverview')} />\n\n      {!loadedCharts.current.length && <Loading />}\n\n      <div ref={containerRef}>\n        {GRAPHS.map((graph) => (\n          <div className={buildClassName(styles.graph, !loadedCharts.current.includes(graph) && styles.hidden)} />\n        ))}\n      </div>\n\n      {Boolean(statistics.publicForwards) && (\n        <div className={styles.publicForwards}>\n          <h2 className={styles.publicForwardsTitle}>{lang('Stats.Message.PublicShares')}</h2>\n\n          <InfiniteScroll\n            items={statistics.publicForwardsData}\n            itemSelector=\".statistic-public-forward\"\n            onLoadMore={handleLoadMore}\n            preloadBackwards={STATISTICS_PUBLIC_FORWARDS_LIMIT}\n            noFastList\n          >\n            {(statistics.publicForwardsData as ApiMessagePublicForward[]).map((item) => (\n              <StatisticsMessagePublicForward key={item.messageId} data={item} />\n            ))}\n          </InfiniteScroll>\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const dcId = selectChatFullInfo(global, chatId)?.statisticsDcId;\n    const tabState = selectTabState(global);\n    const statistics = tabState.statistics.currentMessage;\n    const messageId = tabState.statistics.currentMessageId;\n\n    return { statistics, dcId, messageId };\n  },\n)(Statistics));\n","import React, { memo } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type {\n  ApiChat, ApiStoryPublicForward, ApiUser,\n} from '../../../api/types';\n\nimport { getChatTitle, getUserFullName } from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Avatar from '../../common/Avatar';\n\nimport styles from './StatisticsPublicForward.module.scss';\n\nexport type OwnProps = {\n  data: ApiStoryPublicForward;\n  usersById: Record<string, ApiUser>;\n  chatsById: Record<string, ApiChat>;\n};\n\nfunction StatisticsMessagePublicForward({ data, chatsById, usersById }: OwnProps) {\n  const lang = useOldLang();\n  const { openChat } = getActions();\n  const user = usersById[data.peerId];\n  const chat = chatsById[data.peerId];\n\n  const handleClick = useLastCallback(() => {\n    openChat({ id: user.id });\n  });\n\n  return (\n    <div className={buildClassName(styles.root, 'statistic-public-forward')} onClick={handleClick}>\n      <Avatar size=\"medium\" peer={user || chat} withStorySolid forceUnreadStorySolid />\n\n      <div>\n        <div className={styles.title}>\n          {user ? getUserFullName(user) : getChatTitle(lang, chat)}\n        </div>\n\n        <div className={styles.views}>\n          {data.viewsCount ? lang('ChannelStats.ViewsCount', data.viewsCount, 'i') : lang('NoViews')}\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default memo(StatisticsMessagePublicForward);\n","import React, {\n  memo, useEffect, useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type {\n  ApiChat,\n  ApiPostStatistics,\n  ApiUser,\n  StatisticsGraph,\n} from '../../../api/types';\n\nimport { STATISTICS_PUBLIC_FORWARDS_LIMIT } from '../../../config';\nimport { selectChatFullInfo, selectTabState } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { callApi } from '../../../api/gramjs';\n\nimport useForceUpdate from '../../../hooks/useForceUpdate';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport InfiniteScroll from '../../ui/InfiniteScroll';\nimport Loading from '../../ui/Loading';\nimport StatisticsMessagePublicForward from './StatisticsMessagePublicForward';\nimport StatisticsOverview from './StatisticsOverview';\nimport StatisticsStoryPublicForward from './StatisticsStoryPublicForward';\n\nimport styles from './Statistics.module.scss';\n\ntype ILovelyChart = { create: Function };\nlet lovelyChartPromise: Promise<ILovelyChart>;\nlet LovelyChart: ILovelyChart;\n\nasync function ensureLovelyChart() {\n  if (!lovelyChartPromise) {\n    lovelyChartPromise = import('../../../lib/lovely-chart/LovelyChart') as Promise<ILovelyChart>;\n    LovelyChart = await lovelyChartPromise;\n  }\n\n  return lovelyChartPromise;\n}\n\nconst GRAPH_TITLES = {\n  viewsGraph: 'Stats.StoryInteractionsTitle',\n  reactionsGraph: 'ReactionsByEmotionChartTitle',\n};\nconst GRAPHS = Object.keys(GRAPH_TITLES) as (keyof ApiPostStatistics)[];\n\nexport type OwnProps = {\n  chatId: string;\n  isActive: boolean;\n};\n\nexport type StateProps = {\n  statistics?: ApiPostStatistics;\n  storyId?: number;\n  dcId?: number;\n  chatsById: Record<string, ApiChat>;\n  usersById: Record<string, ApiUser>;\n};\n\nfunction StoryStatistics({\n  chatId,\n  isActive,\n  statistics,\n  dcId,\n  storyId,\n  chatsById,\n  usersById,\n}: OwnProps & StateProps) {\n  const lang = useOldLang();\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  const [isReady, setIsReady] = useState(false);\n  const loadedCharts = useRef<string[]>([]);\n\n  const { loadStoryStatistics, loadStoryPublicForwards, loadStatisticsAsyncGraph } = getActions();\n  const forceUpdate = useForceUpdate();\n\n  useEffect(() => {\n    if (storyId) {\n      loadStoryStatistics({ chatId, storyId });\n    }\n  }, [chatId, storyId]);\n\n  useEffect(() => {\n    if (!isActive || storyId) {\n      loadedCharts.current = [];\n      setIsReady(false);\n    }\n  }, [isActive, storyId]);\n\n  // Load async graphs\n  useEffect(() => {\n    if (!statistics) {\n      return;\n    }\n\n    GRAPHS.forEach((name) => {\n      const graph = statistics[name as keyof typeof statistics];\n      const isAsync = typeof graph === 'string';\n\n      if (isAsync) {\n        loadStatisticsAsyncGraph({ name, chatId, token: graph });\n      }\n    });\n  }, [chatId, statistics, loadStatisticsAsyncGraph]);\n\n  useEffect(() => {\n    (async () => {\n      await ensureLovelyChart();\n\n      if (!isReady) {\n        setIsReady(true);\n        return;\n      }\n\n      if (!statistics || !containerRef.current) {\n        return;\n      }\n\n      GRAPHS.forEach((name, index: number) => {\n        const graph = statistics[name as keyof typeof statistics];\n        const isAsync = typeof graph === 'string';\n\n        if (isAsync || loadedCharts.current.includes(name)) {\n          return;\n        }\n\n        if (!graph) {\n          loadedCharts.current.push(name);\n\n          return;\n        }\n\n        const { zoomToken } = graph as StatisticsGraph;\n\n        LovelyChart.create(\n          containerRef.current!.children[index],\n          {\n            title: lang((GRAPH_TITLES as Record<string, string>)[name]),\n            ...zoomToken ? {\n              onZoom: (x: number) => callApi('fetchStatisticsAsyncGraph', { token: zoomToken, x, dcId }),\n              zoomOutLabel: lang('Graph.ZoomOut'),\n            } : {},\n            ...graph as StatisticsGraph,\n          },\n        );\n\n        loadedCharts.current.push(name);\n      });\n\n      forceUpdate();\n    })();\n  }, [\n    isReady, statistics, lang, chatId, storyId, loadStatisticsAsyncGraph, dcId, forceUpdate,\n  ]);\n\n  const handleLoadMore = useLastCallback(() => {\n    if (!storyId) return;\n\n    loadStoryPublicForwards({ chatId, storyId });\n  });\n\n  if (!isReady || !statistics || !storyId) {\n    return <Loading />;\n  }\n\n  return (\n    <div className={buildClassName(styles.root, 'custom-scroll', isReady && styles.ready)}>\n      <StatisticsOverview statistics={statistics} type=\"story\" title={lang('StatisticOverview')} />\n\n      {!loadedCharts.current.length && <Loading />}\n\n      <div ref={containerRef}>\n        {GRAPHS.map((graph) => (\n          <div className={buildClassName(styles.graph, !loadedCharts.current.includes(graph) && styles.hidden)} />\n        ))}\n      </div>\n\n      {Boolean(statistics.publicForwards) && (\n        <div className={styles.publicForwards}>\n          <h2 className={styles.publicForwardsTitle}>{lang('Stats.Message.PublicShares')}</h2>\n\n          <InfiniteScroll\n            items={statistics.publicForwardsData}\n            itemSelector=\".statistic-public-forward\"\n            onLoadMore={handleLoadMore}\n            preloadBackwards={STATISTICS_PUBLIC_FORWARDS_LIMIT}\n            noFastList\n          >\n            {statistics.publicForwardsData!.map((item) => {\n              if ('messageId' in item) {\n                return (\n                  <StatisticsMessagePublicForward key={`message_${item.messageId}`} data={item} />\n                );\n              }\n\n              return (\n                <StatisticsStoryPublicForward\n                  key={`story_${item.storyId}`}\n                  data={item}\n                  chatsById={chatsById}\n                  usersById={usersById}\n                />\n              );\n            })}\n          </InfiniteScroll>\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const dcId = selectChatFullInfo(global, chatId)?.statisticsDcId;\n    const tabState = selectTabState(global);\n    const statistics = tabState.statistics.currentStory;\n    const storyId = tabState.statistics.currentStoryId;\n    const { byId: usersById } = global.users;\n    const { byId: chatsById } = global.chats;\n\n    return {\n      statistics, dcId, storyId, usersById, chatsById,\n    };\n  },\n)(StoryStatistics));\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect,\n  useState,\n} from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type {\n  ApiChat,\n  ApiMessage,\n  ApiPollAnswer,\n  ApiPollResult,\n} from '../../api/types';\n\nimport { isUserId } from '../../global/helpers';\nimport { selectTabState } from '../../global/selectors';\nimport { renderTextWithEntities } from '../common/helpers/renderTextWithEntities';\n\nimport useOldLang from '../../hooks/useOldLang';\nimport usePreviousDeprecated from '../../hooks/usePreviousDeprecated';\n\nimport GroupChatInfo from '../common/GroupChatInfo';\nimport PrivateChatInfo from '../common/PrivateChatInfo';\nimport ListItem from '../ui/ListItem';\nimport Loading from '../ui/Loading';\nimport ShowMoreButton from '../ui/ShowMoreButton';\n\nimport './PollAnswerResults.scss';\n\ntype OwnProps = {\n  chat: ApiChat;\n  message: ApiMessage;\n  answer: ApiPollAnswer;\n  answerVote: ApiPollResult;\n  totalVoters: number;\n};\n\ntype StateProps = {\n  voters?: string[];\n  offset: string;\n};\n\nconst INITIAL_LIMIT = 4;\nconst VIEW_MORE_LIMIT = 50;\n\nconst PollAnswerResults: FC<OwnProps & StateProps> = ({\n  chat,\n  message,\n  answer,\n  answerVote,\n  totalVoters,\n  voters,\n  offset,\n}) => {\n  const {\n    loadPollOptionResults,\n    openChat,\n    closePollResults,\n  } = getActions();\n\n  const prevVotersCount = usePreviousDeprecated<number>(answerVote.votersCount);\n  const [isLoading, setIsLoading] = useState<boolean>(true);\n  const areVotersLoaded = Boolean(voters);\n  const { option, text } = answer;\n  const lang = useOldLang();\n\n  useEffect(() => {\n    // For update when new votes arrive or when the user takes back his vote\n    if (!areVotersLoaded || prevVotersCount !== answerVote.votersCount) {\n      loadPollOptionResults({\n        chat, messageId: message.id, option, offset, limit: INITIAL_LIMIT, shouldResetVoters: true,\n      });\n    }\n    // eslint-disable-next-line\n  }, [answerVote.votersCount, areVotersLoaded]);\n\n  const handleViewMoreClick = useCallback(() => {\n    setIsLoading(true);\n    loadPollOptionResults({\n      chat, messageId: message.id, option, offset, limit: VIEW_MORE_LIMIT,\n    });\n  }, [chat, loadPollOptionResults, message.id, offset, option]);\n\n  useEffect(() => {\n    setIsLoading(false);\n  }, [voters]);\n\n  const handleMemberClick = useCallback((id: string) => {\n    openChat({ id });\n    closePollResults();\n  }, [closePollResults, openChat]);\n\n  function renderViewMoreButton() {\n    const leftVotersCount = answerVote.votersCount - voters!.length;\n\n    return answerVote.votersCount > INITIAL_LIMIT && leftVotersCount > 0 && (\n      <ShowMoreButton\n        count={leftVotersCount}\n        itemName=\"voter\"\n        isLoading={isLoading}\n        onClick={handleViewMoreClick}\n      />\n    );\n  }\n\n  return (\n    <div className=\"PollAnswerResults\">\n      <div className=\"poll-voters\">\n        {voters\n          ? voters.map((id) => (\n            <ListItem\n              key={id}\n              className=\"chat-item-clickable\"\n              // eslint-disable-next-line react/jsx-no-bind\n              onClick={() => handleMemberClick(id)}\n            >\n              {isUserId(id) ? (\n                <PrivateChatInfo\n                  avatarSize=\"tiny\"\n                  userId={id}\n                  forceShowSelf\n                  noStatusOrTyping\n                />\n              ) : (\n                <GroupChatInfo\n                  avatarSize=\"tiny\"\n                  chatId={id}\n                  noStatusOrTyping\n                />\n              )}\n            </ListItem>\n          ))\n          : <Loading />}\n        {voters && renderViewMoreButton()}\n      </div>\n      <div className=\"answer-head\" dir={lang.isRtl ? 'rtl' : undefined}>\n        <span className=\"answer-title\" dir=\"auto\">\n          {renderTextWithEntities({\n            text: text.text,\n            entities: text.entities,\n          })}\n        </span>\n        <span className=\"answer-percent\" dir={lang.isRtl ? 'auto' : undefined}>\n          {getPercentage(answerVote.votersCount, totalVoters)}%\n        </span>\n      </div>\n    </div>\n  );\n};\n\nfunction getPercentage(value: number, total: number) {\n  return total > 0 ? ((value / total) * 100).toFixed() : 0;\n}\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { answer }: OwnProps): StateProps => {\n    const { voters, offsets } = selectTabState(global).pollResults;\n\n    return {\n      voters: voters?.[answer.option],\n      offset: (offsets?.[answer.option]) || '',\n    };\n  },\n)(PollAnswerResults));\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo } from '../../lib/teact/teact';\nimport { withGlobal } from '../../global';\n\nimport type { ApiChat, ApiMessage } from '../../api/types';\n\nimport { getMessagePoll } from '../../global/helpers';\nimport { selectChat, selectChatMessage, selectTabState } from '../../global/selectors';\nimport { buildCollectionByKey } from '../../util/iteratees';\nimport { renderTextWithEntities } from '../common/helpers/renderTextWithEntities';\n\nimport useHistoryBack from '../../hooks/useHistoryBack';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Loading from '../ui/Loading';\nimport PollAnswerResults from './PollAnswerResults';\n\nimport './PollResults.scss';\n\ntype OwnProps = {\n  isActive: boolean;\n  onClose: NoneToVoidFunction;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  message?: ApiMessage;\n};\n\nconst PollResults: FC<OwnProps & StateProps> = ({\n  isActive,\n  chat,\n  message,\n  onClose,\n}) => {\n  const lang = useOldLang();\n\n  useHistoryBack({\n    isActive,\n    onBack: onClose,\n  });\n\n  if (!message || !chat) {\n    return <Loading />;\n  }\n\n  const { summary, results } = getMessagePoll(message)!;\n  if (!results.results) {\n    return undefined;\n  }\n\n  const resultsByOption = buildCollectionByKey(results.results, 'option');\n\n  return (\n    <div className=\"PollResults\" dir={lang.isRtl ? 'rtl' : undefined}>\n      <h3 className=\"poll-question\" dir=\"auto\">\n        {renderTextWithEntities({\n          text: summary.question.text,\n          entities: summary.question.entities,\n        })}\n      </h3>\n      <div className=\"poll-results-list custom-scroll\">\n        {summary.answers.map((answer) => (\n          <PollAnswerResults\n            key={`${message.id}-${answer.option}`}\n            chat={chat}\n            message={message}\n            answer={answer}\n            answerVote={resultsByOption[answer.option]}\n            totalVoters={results.totalVoters!}\n          />\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal(\n  (global): StateProps => {\n    const {\n      pollResults: { chatId, messageId },\n    } = selectTabState(global);\n\n    if (!chatId || !messageId) {\n      return {};\n    }\n\n    const chat = selectChat(global, chatId);\n    const message = selectChatMessage(global, chatId, messageId);\n\n    return {\n      chat,\n      message,\n    };\n  },\n)(PollResults));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"xrnUE4e6\",\"content\":\"z7kF7tij\",\"section\":\"T6wFpdQO\",\"general\":\"YftUWqqw\",\"top\":\"CWsWIKQ1\",\"bottom\":\"KBl0ycLl\",\"iconWrapper\":\"iJ1U9kDD\",\"icon\":\"Rk6PT_yc\",\"clickable\":\"K1CTKtBS\",\"heading\":\"qlo3vSEw\",\"icon-picker\":\"r06zwL42\",\"iconPicker\":\"r06zwL42\"};","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useMemo, useState,\n} from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { ApiChat, ApiSticker } from '../../api/types';\nimport type { TabState } from '../../global/types';\n\nimport { DEFAULT_TOPIC_ICON_STICKER_ID } from '../../config';\nimport { selectChat, selectIsCurrentUserPremium, selectTabState } from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport cycleRestrict from '../../util/cycleRestrict';\nimport { getTopicColors } from '../../util/forumColors';\nimport { REM } from '../common/helpers/mediaDimensions';\n\nimport useHistoryBack from '../../hooks/useHistoryBack';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport CustomEmojiPicker from '../common/CustomEmojiPicker';\nimport TopicIcon from '../common/TopicIcon';\nimport FloatingActionButton from '../ui/FloatingActionButton';\nimport InputText from '../ui/InputText';\nimport Spinner from '../ui/Spinner';\nimport Transition from '../ui/Transition';\n\nimport styles from './ManageTopic.module.scss';\n\nconst ICON_SIZE = 5 * REM;\n\nexport type OwnProps = {\n  isActive: boolean;\n  onClose: NoneToVoidFunction;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  createTopicPanel?: TabState['createTopicPanel'];\n  isCurrentUserPremium?: boolean;\n};\n\nconst CreateTopic: FC<OwnProps & StateProps> = ({\n  isActive,\n  chat,\n  createTopicPanel,\n  isCurrentUserPremium,\n  onClose,\n}) => {\n  const { createTopic, openPremiumModal } = getActions();\n  const [title, setTitle] = useState('');\n  const [iconColorIndex, setIconColorIndex] = useState(0);\n  const [iconEmojiId, setIconEmojiId] = useState<string | undefined>(undefined);\n  const lang = useOldLang();\n\n  const isTouched = Boolean(title);\n  const isLoading = Boolean(createTopicPanel?.isLoading);\n\n  useHistoryBack({\n    isActive,\n    onBack: onClose,\n  });\n\n  useEffect(() => {\n    if (!isActive) {\n      setTitle('');\n      setIconEmojiId(undefined);\n    }\n  }, [isActive]);\n\n  const handleTitleChange = useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    setTitle(e.target.value);\n  }, []);\n\n  const handleIconClick = useCallback(() => {\n    setIconColorIndex((prev) => cycleRestrict(getTopicColors().length, prev + 1));\n  }, []);\n\n  const handleCreateTopic = useCallback(() => {\n    createTopic({\n      chatId: chat!.id,\n      title,\n      iconColor: getTopicColors()[iconColorIndex],\n      iconEmojiId,\n    });\n  }, [chat, createTopic, iconColorIndex, iconEmojiId, title]);\n\n  const handleCustomEmojiSelect = useCallback((emoji: ApiSticker) => {\n    if (!emoji.isFree && !isCurrentUserPremium && emoji.id !== DEFAULT_TOPIC_ICON_STICKER_ID) {\n      openPremiumModal({ initialSection: 'animated_emoji' });\n      return;\n    }\n\n    if (emoji.id === DEFAULT_TOPIC_ICON_STICKER_ID) {\n      setIconEmojiId(undefined);\n      return;\n    }\n\n    setIconEmojiId(emoji.id);\n  }, [isCurrentUserPremium, openPremiumModal]);\n\n  const dummyTopic = useMemo(() => {\n    return {\n      id: 0,\n      title,\n      iconColor: getTopicColors()[iconColorIndex],\n      iconEmojiId,\n    };\n  }, [iconColorIndex, iconEmojiId, title]);\n\n  if (!chat?.isForum) {\n    return undefined;\n  }\n\n  return (\n    <div className={styles.root}>\n      <div className={buildClassName(styles.content, 'custom-scroll')}>\n        <div className={buildClassName(styles.section, styles.top)}>\n          <span className={styles.heading}>{lang('CreateTopicTitle')}</span>\n          <Transition\n            name=\"zoomFade\"\n            activeKey={Number(dummyTopic.iconEmojiId) || 0}\n            shouldCleanup\n            direction={1}\n            className={styles.iconWrapper}\n          >\n            <TopicIcon\n              topic={dummyTopic}\n              className={buildClassName(styles.icon, styles.clickable)}\n              onClick={handleIconClick}\n              size={ICON_SIZE}\n              noLoopLimit\n            />\n          </Transition>\n          <InputText\n            value={title}\n            onChange={handleTitleChange}\n            label={lang('lng_forum_topic_title')}\n            disabled={isLoading}\n            teactExperimentControlled\n          />\n        </div>\n        <div className={buildClassName(styles.section, styles.bottom)}>\n          <CustomEmojiPicker\n            idPrefix=\"create-topic-icons-set-\"\n            isHidden={!isActive}\n            loadAndPlay={isActive}\n            onCustomEmojiSelect={handleCustomEmojiSelect}\n            className={styles.iconPicker}\n            pickerListClassName=\"fab-padding-bottom\"\n            withDefaultTopicIcons\n          />\n        </div>\n      </div>\n      <FloatingActionButton\n        isShown={isTouched}\n        disabled={isLoading}\n        onClick={handleCreateTopic}\n        ariaLabel={lang('Save')}\n      >\n        {isLoading ? (\n          <Spinner color=\"white\" />\n        ) : (\n          <i className=\"icon icon-check\" />\n        )}\n      </FloatingActionButton>\n    </div>\n  );\n};\n\nexport default memo(withGlobal(\n  (global): StateProps => {\n    const { createTopicPanel } = selectTabState(global);\n    return {\n      chat: createTopicPanel?.chatId ? selectChat(global, createTopicPanel.chatId) : undefined,\n      createTopicPanel,\n      isCurrentUserPremium: selectIsCurrentUserPremium(global),\n    };\n  },\n)(CreateTopic));\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useMemo, useState,\n} from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { ApiChat, ApiSticker, ApiTopic } from '../../api/types';\nimport type { TabState } from '../../global/types';\n\nimport { DEFAULT_TOPIC_ICON_STICKER_ID, GENERAL_TOPIC_ID } from '../../config';\nimport {\n  selectChat, selectIsCurrentUserPremium, selectTabState, selectTopic,\n} from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport { REM } from '../common/helpers/mediaDimensions';\n\nimport useHistoryBack from '../../hooks/useHistoryBack';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport CustomEmojiPicker from '../common/CustomEmojiPicker';\nimport TopicIcon from '../common/TopicIcon';\nimport FloatingActionButton from '../ui/FloatingActionButton';\nimport InputText from '../ui/InputText';\nimport Loading from '../ui/Loading';\nimport Spinner from '../ui/Spinner';\nimport Transition from '../ui/Transition';\n\nimport styles from './ManageTopic.module.scss';\n\nconst ICON_SIZE = 5 * REM;\nconst RESET_ICON_ID = '0';\n\nexport type OwnProps = {\n  isActive: boolean;\n  onClose: NoneToVoidFunction;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  topic?: ApiTopic;\n  editTopicPanel?: TabState['editTopicPanel'];\n  isCurrentUserPremium?: boolean;\n};\n\nconst EditTopic: FC<OwnProps & StateProps> = ({\n  isActive,\n  chat,\n  topic,\n  editTopicPanel,\n  isCurrentUserPremium,\n  onClose,\n}) => {\n  const { editTopic, openPremiumModal } = getActions();\n  const [title, setTitle] = useState('');\n  const [iconEmojiId, setIconEmojiId] = useState<string | undefined>(undefined);\n  const lang = useOldLang();\n\n  const isLoading = Boolean(editTopicPanel?.isLoading);\n  const isGeneral = topic?.id === GENERAL_TOPIC_ID;\n\n  useHistoryBack({\n    isActive,\n    onBack: onClose,\n  });\n\n  useEffect(() => {\n    if (!isActive) {\n      setTitle('');\n      setIconEmojiId(undefined);\n    }\n  }, [isActive]);\n\n  useEffect(() => {\n    if (topic?.title || topic?.iconEmojiId) {\n      setTitle(topic.title);\n      setIconEmojiId(topic.iconEmojiId);\n    }\n  }, [topic]);\n\n  const isTouched = useMemo(() => {\n    return title !== topic?.title || iconEmojiId !== topic?.iconEmojiId;\n  }, [iconEmojiId, title, topic?.iconEmojiId, topic?.title]);\n\n  const handleTitleChange = useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    const newTitle = e.target.value;\n    setTitle(newTitle);\n  }, []);\n\n  const handleEditTopic = useCallback(() => {\n    editTopic({\n      chatId: chat!.id,\n      title,\n      topicId: topic!.id,\n      iconEmojiId,\n    });\n  }, [chat, editTopic, iconEmojiId, title, topic]);\n\n  const handleCustomEmojiSelect = useCallback((emoji: ApiSticker) => {\n    if (!emoji.isFree && !isCurrentUserPremium && emoji.id !== DEFAULT_TOPIC_ICON_STICKER_ID) {\n      openPremiumModal({ initialSection: 'animated_emoji' });\n      return;\n    }\n\n    if (emoji.id === DEFAULT_TOPIC_ICON_STICKER_ID) {\n      setIconEmojiId(RESET_ICON_ID);\n      return;\n    }\n\n    setIconEmojiId(emoji.id);\n  }, [isCurrentUserPremium, openPremiumModal]);\n\n  const dummyTopic = useMemo(() => {\n    return {\n      ...topic!,\n      title,\n      iconEmojiId,\n    };\n  }, [iconEmojiId, title, topic]);\n\n  if (!chat?.isForum) {\n    return undefined;\n  }\n\n  return (\n    <div className={styles.root}>\n      <div className={buildClassName(styles.content, 'custom-scroll')}>\n        {!topic && <Loading />}\n        {topic && (\n          <>\n            <div className={buildClassName(styles.section, styles.top, isGeneral && styles.general)}>\n              <span className={styles.heading}>{lang(isGeneral ? 'CreateGeneralTopicTitle' : 'CreateTopicTitle')}</span>\n              <Transition\n                name=\"zoomFade\"\n                activeKey={Number(dummyTopic.iconEmojiId) || 0}\n                shouldCleanup\n                direction={1}\n                className={styles.iconWrapper}\n              >\n                <TopicIcon\n                  topic={dummyTopic}\n                  className={styles.icon}\n                  size={ICON_SIZE}\n                  noLoopLimit\n                />\n              </Transition>\n              <InputText\n                value={title}\n                onChange={handleTitleChange}\n                label={lang('lng_forum_topic_title')}\n                disabled={isLoading}\n                teactExperimentControlled\n              />\n            </div>\n            {!isGeneral && (\n              <div className={buildClassName(styles.section, styles.bottom)}>\n                <CustomEmojiPicker\n                  idPrefix=\"edit-topic-icons-set-\"\n                  isHidden={!isActive}\n                  loadAndPlay={isActive}\n                  onCustomEmojiSelect={handleCustomEmojiSelect}\n                  className={styles.iconPicker}\n                  pickerListClassName=\"fab-padding-bottom\"\n                  withDefaultTopicIcons\n                />\n              </div>\n            )}\n          </>\n        )}\n      </div>\n      <FloatingActionButton\n        isShown={isTouched}\n        disabled={isLoading}\n        onClick={handleEditTopic}\n        ariaLabel={lang('Save')}\n      >\n        {isLoading ? (\n          <Spinner color=\"white\" />\n        ) : (\n          <i className=\"icon icon-check\" />\n        )}\n      </FloatingActionButton>\n    </div>\n  );\n};\n\nexport default memo(withGlobal(\n  (global): StateProps => {\n    const { editTopicPanel } = selectTabState(global);\n    const chat = editTopicPanel?.chatId ? selectChat(global, editTopicPanel.chatId) : undefined;\n    const topic = editTopicPanel?.chatId && editTopicPanel?.topicId\n      ? selectTopic(global, editTopicPanel.chatId, editTopicPanel.topicId) : undefined;\n\n    return {\n      chat,\n      topic,\n      editTopicPanel,\n      isCurrentUserPremium: selectIsCurrentUserPremium(global),\n    };\n  },\n)(EditTopic));\n","import type { ChangeEvent } from 'react';\nimport type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo, useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiBotInfo, ApiUser } from '../../../api/types';\nimport { ApiMediaFormat } from '../../../api/types';\nimport { ManagementProgress } from '../../../types';\n\nimport {\n  getChatAvatarHash, getMainUsername, getUserFirstOrLastName,\n} from '../../../global/helpers';\nimport {\n  selectBot,\n  selectTabState,\n  selectUserFullInfo,\n} from '../../../global/selectors';\nimport { selectCurrentLimit } from '../../../global/selectors/limits';\nimport renderText from '../../common/helpers/renderText';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMedia from '../../../hooks/useMedia';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Icon from '../../common/icons/Icon';\nimport AvatarEditable from '../../ui/AvatarEditable';\nimport FloatingActionButton from '../../ui/FloatingActionButton';\nimport InputText from '../../ui/InputText';\nimport ListItem from '../../ui/ListItem';\nimport SelectAvatar from '../../ui/SelectAvatar';\nimport Spinner from '../../ui/Spinner';\nimport TextArea from '../../ui/TextArea';\n\nimport './Management.scss';\n\ntype OwnProps = {\n  userId: string;\n  onClose: NoneToVoidFunction;\n  isActive: boolean;\n};\n\ntype StateProps = {\n  userId?: string;\n  user?: ApiUser;\n  chatBot?: ApiBotInfo;\n  currentBio?: string;\n  progress?: ManagementProgress;\n  isMuted?: boolean;\n  maxBioLength: number;\n};\n\nconst ERROR_NAME_MISSING = 'Please provide name';\n\nconst ManageBot: FC<OwnProps & StateProps> = ({\n  userId,\n  user,\n  progress,\n  onClose,\n  currentBio,\n  isActive,\n  maxBioLength,\n}) => {\n  const {\n    setBotInfo,\n    uploadProfilePhoto,\n    uploadContactProfilePhoto,\n    startBotFatherConversation,\n  } = getActions();\n\n  const [isFieldTouched, markFieldTouched, unmarkProfileTouched] = useFlag(false);\n  const [isAvatarTouched, markAvatarTouched, unmarkAvatarTouched] = useFlag(false);\n  const [error, setError] = useState<string | undefined>();\n  const lang = useOldLang();\n\n  const username = useMemo(() => (user ? getMainUsername(user) : undefined), [user]);\n\n  useHistoryBack({\n    isActive,\n    onBack: onClose,\n  });\n\n  const currentName = user ? getUserFirstOrLastName(user) : '';\n\n  const [photo, setPhoto] = useState<File | undefined>();\n  const [name, setName] = useState(currentName || '');\n  const [bio, setBio] = useState(currentBio || '');\n\n  const currentAvatarHash = user && getChatAvatarHash(user);\n  const currentAvatarBlobUrl = useMedia(currentAvatarHash, false, ApiMediaFormat.BlobUrl);\n\n  useEffect(() => {\n    unmarkProfileTouched();\n    unmarkAvatarTouched();\n  }, [userId]);\n\n  useEffect(() => {\n    setName(currentName || '');\n    setBio(currentBio || '');\n  }, [currentName, currentBio, user]);\n\n  useEffect(() => {\n    setPhoto(undefined);\n  }, [currentAvatarBlobUrl]);\n\n  useEffect(() => {\n    if (progress === ManagementProgress.Complete) {\n      unmarkProfileTouched();\n      unmarkAvatarTouched();\n      setError(undefined);\n    }\n  }, [progress]);\n\n  const handleNameChange = useLastCallback((e: ChangeEvent<HTMLInputElement>) => {\n    setName(e.target.value);\n    markFieldTouched();\n\n    if (error === ERROR_NAME_MISSING) {\n      setError(undefined);\n    }\n  });\n\n  const handleBioChange = useLastCallback((e: ChangeEvent<HTMLTextAreaElement>) => {\n    setBio(e.target.value);\n    markFieldTouched();\n  });\n\n  const handlePhotoChange = useLastCallback((newPhoto: File) => {\n    setPhoto(newPhoto);\n    markAvatarTouched();\n  });\n\n  const handleProfileSave = useLastCallback(() => {\n    const trimmedName = name.trim();\n    const trimmedBio = bio.trim();\n\n    if (!trimmedName.length) {\n      setError(ERROR_NAME_MISSING);\n      return;\n    }\n\n    setBotInfo({\n      ...(isFieldTouched && {\n        bot: user,\n        name: trimmedName,\n        description: trimmedBio,\n      }),\n    });\n\n    if (photo) {\n      uploadProfilePhoto({\n        file: photo,\n        ...(isAvatarTouched && { bot: user }),\n      });\n    }\n  });\n\n  const handleChangeEditIntro = useLastCallback(() => {\n    startBotFatherConversation({ param: `${username}-intro` });\n  });\n\n  const handleChangeEditCommands = useLastCallback(() => {\n    startBotFatherConversation({ param: `${username}-commands` });\n  });\n\n  const handleChangeSettings = useLastCallback(() => {\n    startBotFatherConversation({ param: `${username}` });\n  });\n\n  // eslint-disable-next-line no-null/no-null\n  const inputRef = useRef<HTMLInputElement>(null);\n  const isSuggestRef = useRef(false);\n\n  const handleSelectAvatar = useLastCallback((file: File) => {\n    markAvatarTouched();\n    uploadContactProfilePhoto({ userId, file, isSuggest: isSuggestRef.current });\n  });\n\n  if (!user) {\n    return undefined;\n  }\n\n  const isLoading = progress === ManagementProgress.InProgress;\n\n  return (\n    <div className=\"Management\">\n      <div className=\"custom-scroll\">\n        <div className=\"section\">\n          <AvatarEditable\n            currentAvatarBlobUrl={currentAvatarBlobUrl}\n            onChange={handlePhotoChange}\n            title={lang('ChatSetPhotoOrVideo')}\n            disabled={isLoading}\n          />\n          <InputText\n            id=\"user-name\"\n            label={lang('PaymentCheckoutName')}\n            onChange={handleNameChange}\n            value={name}\n            error={error === ERROR_NAME_MISSING ? error : undefined}\n            teactExperimentControlled\n          />\n          <TextArea\n            value={bio}\n            onChange={handleBioChange}\n            label={lang('DescriptionPlaceholder')}\n            disabled={isLoading}\n            maxLength={maxBioLength}\n            maxLengthIndicator={maxBioLength ? (maxBioLength - bio.length).toString() : undefined}\n          />\n        </div>\n        <div className=\"section\">\n          <div className=\"dialog-buttons\">\n            <ListItem icon=\"bot-commands-filled\" ripple onClick={handleChangeEditIntro}>\n              <span>{lang('BotEditIntro')}</span>\n            </ListItem>\n            <ListItem icon=\"bot-command\" ripple onClick={handleChangeEditCommands}>\n              <span>{lang('BotEditCommands')}</span>\n            </ListItem>\n            <ListItem icon=\"bots\" ripple onClick={handleChangeSettings}>\n              <span>{lang('BotChangeSettings')}</span>\n            </ListItem>\n            <div className=\"section-info section-info_push\">\n              {renderText(lang('BotManageInfo'), ['links'])}\n            </div>\n          </div>\n        </div>\n      </div>\n      <FloatingActionButton\n        isShown={isFieldTouched || isAvatarTouched}\n        onClick={handleProfileSave}\n        disabled={isLoading}\n        ariaLabel={lang('Save')}\n      >\n        {isLoading ? (\n          <Spinner color=\"white\" />\n        ) : (\n          <Icon name=\"check\" />\n        )}\n      </FloatingActionButton>\n      <SelectAvatar\n        onChange={handleSelectAvatar}\n        inputRef={inputRef}\n      />\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { userId }): StateProps => {\n    const user = selectBot(global, userId);\n    const userFullInfo = selectUserFullInfo(global, userId);\n    const { progress } = selectTabState(global).management;\n    const maxBioLength = selectCurrentLimit(global, 'aboutLength');\n\n    return {\n      userId,\n      user,\n      progress,\n      currentBio: userFullInfo?.bio,\n      maxBioLength,\n    };\n  },\n)(ManageBot));\n","import type { ChangeEvent } from 'react';\nimport type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useMemo, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type {\n  ApiAvailableReaction, ApiChat, ApiChatFullInfo, ApiExportedInvite,\n} from '../../../api/types';\nimport { ApiMediaFormat } from '../../../api/types';\nimport { ManagementProgress, ManagementScreens } from '../../../types';\n\nimport { getChatAvatarHash, getHasAdminRight, isChatPublic } from '../../../global/helpers';\nimport { selectChat, selectChatFullInfo, selectTabState } from '../../../global/selectors';\nimport { formatInteger } from '../../../util/textFormat';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useMedia from '../../../hooks/useMedia';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport AvatarEditable from '../../ui/AvatarEditable';\nimport ConfirmDialog from '../../ui/ConfirmDialog';\nimport FloatingActionButton from '../../ui/FloatingActionButton';\nimport InputText from '../../ui/InputText';\nimport ListItem from '../../ui/ListItem';\nimport Spinner from '../../ui/Spinner';\nimport TextArea from '../../ui/TextArea';\n\nimport './Management.scss';\n\ntype OwnProps = {\n  chatId: string;\n  onScreenSelect: (screen: ManagementScreens) => void;\n  onClose: NoneToVoidFunction;\n  isActive: boolean;\n};\n\ntype StateProps = {\n  chat: ApiChat;\n  chatFullInfo?: ApiChatFullInfo;\n  progress?: ManagementProgress;\n  canChangeInfo?: boolean;\n  canInvite?: boolean;\n  exportedInvites?: ApiExportedInvite[];\n  availableReactions?: ApiAvailableReaction[];\n};\n\nconst CHANNEL_TITLE_EMPTY = 'Channel title can\\'t be empty';\nconst CHANNEL_MAX_DESCRIPTION = 255;\n\nconst ManageChannel: FC<OwnProps & StateProps> = ({\n  chatId,\n  chat,\n  chatFullInfo,\n  progress,\n  canChangeInfo,\n  canInvite,\n  exportedInvites,\n  isActive,\n  availableReactions,\n  onScreenSelect,\n  onClose,\n}) => {\n  const {\n    updateChat,\n    closeManagement,\n    leaveChannel,\n    deleteChannel,\n    openChat,\n    loadExportedChatInvites,\n    loadChatJoinRequests,\n  } = getActions();\n\n  const currentTitle = chat?.title || '';\n  const currentAbout = chatFullInfo?.about || '';\n  const hasLinkedChat = Boolean(chatFullInfo?.linkedChatId);\n\n  const [isDeleteDialogOpen, openDeleteDialog, closeDeleteDialog] = useFlag();\n  const [isProfileFieldsTouched, setIsProfileFieldsTouched] = useState(false);\n  const [title, setTitle] = useState(currentTitle);\n  const [about, setAbout] = useState(currentAbout);\n  const [photo, setPhoto] = useState<File | undefined>();\n  const [error, setError] = useState<string | undefined>();\n  const imageHash = chat && getChatAvatarHash(chat);\n  const currentAvatarBlobUrl = useMedia(imageHash, false, ApiMediaFormat.BlobUrl);\n  const lang = useOldLang();\n\n  useHistoryBack({\n    isActive,\n    onBack: onClose,\n  });\n\n  useEffect(() => {\n    if (!canInvite) return;\n    loadExportedChatInvites({ chatId });\n    loadExportedChatInvites({ chatId, isRevoked: true });\n    loadChatJoinRequests({ chatId });\n  }, [chatId, canInvite]);\n\n  useEffect(() => {\n    if (progress === ManagementProgress.Complete) {\n      setIsProfileFieldsTouched(false);\n      setError(undefined);\n    }\n  }, [progress]);\n\n  const adminsCount = useMemo(() => {\n    return Object.keys(chatFullInfo?.adminMembersById || {}).length;\n  }, [chatFullInfo?.adminMembersById]);\n  const removedUsersCount = chatFullInfo?.kickedMembers?.length || 0;\n\n  const handleClickEditType = useCallback(() => {\n    onScreenSelect(ManagementScreens.ChatPrivacyType);\n  }, [onScreenSelect]);\n\n  const handleClickDiscussion = useCallback(() => {\n    onScreenSelect(ManagementScreens.Discussion);\n  }, [onScreenSelect]);\n\n  const handleClickReactions = useCallback(() => {\n    onScreenSelect(ManagementScreens.Reactions);\n  }, [onScreenSelect]);\n\n  const handleClickAdministrators = useCallback(() => {\n    onScreenSelect(ManagementScreens.ChatAdministrators);\n  }, [onScreenSelect]);\n\n  const handleClickInvites = useCallback(() => {\n    onScreenSelect(ManagementScreens.Invites);\n  }, [onScreenSelect]);\n\n  const handleClickRequests = useCallback(() => {\n    onScreenSelect(ManagementScreens.JoinRequests);\n  }, [onScreenSelect]);\n\n  const handleSetPhoto = useCallback((file: File) => {\n    setPhoto(file);\n    setIsProfileFieldsTouched(true);\n  }, []);\n\n  const handleTitleChange = useCallback((e: ChangeEvent<HTMLInputElement>) => {\n    setTitle(e.target.value);\n    setIsProfileFieldsTouched(true);\n  }, []);\n\n  const handleAboutChange = useCallback((e: ChangeEvent<HTMLTextAreaElement>) => {\n    setAbout(e.target.value);\n    setIsProfileFieldsTouched(true);\n  }, []);\n\n  const handleUpdateChannel = useCallback(() => {\n    const trimmedTitle = title.trim();\n    const trimmedAbout = about.trim();\n\n    if (!trimmedTitle.length) {\n      setError(CHANNEL_TITLE_EMPTY);\n      return;\n    }\n\n    updateChat({\n      chatId,\n      title: trimmedTitle,\n      about: trimmedAbout,\n      photo,\n    });\n  }, [about, chatId, photo, title, updateChat]);\n\n  const handleClickSubscribers = useCallback(() => {\n    onScreenSelect(ManagementScreens.ChannelSubscribers);\n  }, [onScreenSelect]);\n\n  const handleRemovedUsersClick = useCallback(() => {\n    onScreenSelect(ManagementScreens.ChannelRemovedUsers);\n  }, [onScreenSelect]);\n\n  const handleDeleteChannel = useCallback(() => {\n    if (chat.isCreator) {\n      deleteChannel({ chatId: chat.id });\n    } else {\n      leaveChannel({ chatId: chat.id });\n    }\n\n    closeDeleteDialog();\n    closeManagement();\n    openChat({ id: undefined });\n  }, [chat.isCreator, chat.id, closeDeleteDialog, closeManagement, leaveChannel, deleteChannel, openChat]);\n\n  const chatReactionsDescription = useMemo(() => {\n    if (!chatFullInfo?.enabledReactions) {\n      return lang('ReactionsOff');\n    }\n\n    if (chatFullInfo.enabledReactions.type === 'all') {\n      return lang('ReactionsAll');\n    }\n\n    const enabledLength = chatFullInfo.enabledReactions.allowed.length;\n    const totalLength = availableReactions?.filter((reaction) => !reaction.isInactive).length || 0;\n\n    return totalLength ? `${enabledLength} / ${totalLength}` : `${enabledLength}`;\n  }, [availableReactions, chatFullInfo?.enabledReactions, lang]);\n  const isChannelPublic = useMemo(() => isChatPublic(chat), [chat]);\n\n  if (chat.isRestricted || chat.isForbidden) {\n    return undefined;\n  }\n\n  const isLoading = progress === ManagementProgress.InProgress;\n\n  return (\n    <div className=\"Management\">\n      <div className=\"custom-scroll\">\n        <div className=\"section\">\n          <AvatarEditable\n            currentAvatarBlobUrl={currentAvatarBlobUrl}\n            onChange={handleSetPhoto}\n            disabled={!canChangeInfo}\n          />\n          <InputText\n            id=\"channel-title\"\n            label={lang('EnterChannelName')}\n            onChange={handleTitleChange}\n            value={title}\n            error={error === CHANNEL_TITLE_EMPTY ? error : undefined}\n            disabled={!canChangeInfo}\n          />\n          <TextArea\n            id=\"channel-about\"\n            className=\"mb-2\"\n            label={lang('DescriptionPlaceholder')}\n            onChange={handleAboutChange}\n            value={about}\n            maxLength={CHANNEL_MAX_DESCRIPTION}\n            maxLengthIndicator={(CHANNEL_MAX_DESCRIPTION - about.length).toString()}\n            disabled={!canChangeInfo}\n            noReplaceNewlines\n          />\n          {chat.isCreator && (\n            <ListItem icon=\"lock\" multiline onClick={handleClickEditType}>\n              <span className=\"title\">{lang('ChannelType')}</span>\n              <span className=\"subtitle\">{isChannelPublic ? lang('TypePublic') : lang('TypePrivate')}</span>\n            </ListItem>\n          )}\n          <ListItem\n            icon=\"message\"\n            multiline\n            onClick={handleClickDiscussion}\n            disabled={!canChangeInfo}\n          >\n            <span className=\"title\">{lang('Discussion')}</span>\n            <span className=\"subtitle\">{hasLinkedChat ? lang('DiscussionUnlink') : lang('Add')}</span>\n          </ListItem>\n          {canInvite && (\n            <ListItem\n              icon=\"link\"\n              onClick={handleClickInvites}\n              multiline\n              disabled={!exportedInvites}\n            >\n              <span className=\"title\">{lang('GroupInfo.InviteLinks')}</span>\n              <span className=\"subtitle\">\n                {exportedInvites ? formatInteger(exportedInvites.length) : lang('Loading')}\n              </span>\n            </ListItem>\n          )}\n          {Boolean(chat.joinRequests?.length) && (\n            <ListItem\n              icon=\"add-user-filled\"\n              onClick={handleClickRequests}\n              multiline\n            >\n              <span className=\"title\">{lang('SubscribeRequests')}</span>\n              <span className=\"subtitle\">\n                {formatInteger(chat.joinRequests!.length)}\n              </span>\n            </ListItem>\n          )}\n          <ListItem\n            icon=\"heart-outline\"\n            multiline\n            onClick={handleClickReactions}\n            disabled={!canChangeInfo}\n          >\n            <span className=\"title\">{lang('Reactions')}</span>\n            <span className=\"subtitle\" dir=\"auto\">\n              {chatReactionsDescription}\n            </span>\n          </ListItem>\n        </div>\n        <div className=\"section\">\n          <ListItem\n            icon=\"admin\"\n            multiline\n            onClick={handleClickAdministrators}\n          >\n            <span className=\"title\">{lang('ChannelAdministrators')}</span>\n            <span className=\"subtitle\">{adminsCount}</span>\n          </ListItem>\n          <ListItem\n            icon=\"group\"\n            multiline\n            onClick={handleClickSubscribers}\n          >\n            <span className=\"title\" dir=\"auto\">{lang('ChannelSubscribers')}</span>\n            <span className=\"subtitle\" dir=\"auto\">{formatInteger(chat.membersCount!)}</span>\n          </ListItem>\n          <ListItem\n            icon=\"delete-user\"\n            multiline\n            onClick={handleRemovedUsersClick}\n          >\n            <span className=\"title\">{lang('ChannelBlockedUsers')}</span>\n            <span className=\"subtitle\">{removedUsersCount}</span>\n          </ListItem>\n        </div>\n        <div className=\"section\">\n          <ListItem icon=\"delete\" ripple destructive onClick={openDeleteDialog}>\n            {chat.isCreator ? lang('ChannelDelete') : lang('LeaveChannel')}\n          </ListItem>\n        </div>\n      </div>\n      <FloatingActionButton\n        isShown={isProfileFieldsTouched}\n        onClick={handleUpdateChannel}\n        disabled={isLoading}\n        ariaLabel={lang('Save')}\n      >\n        {isLoading ? (\n          <Spinner color=\"white\" />\n        ) : (\n          <i className=\"icon icon-check\" />\n        )}\n      </FloatingActionButton>\n      <ConfirmDialog\n        isOpen={isDeleteDialogOpen}\n        onClose={closeDeleteDialog}\n        text={chat.isCreator ? lang('ChannelDeleteAlert') : lang('ChannelLeaveAlert')}\n        confirmLabel={chat.isCreator ? lang('ChannelDelete') : lang('LeaveChannel')}\n        confirmHandler={handleDeleteChannel}\n        confirmIsDestructive\n      />\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const chat = selectChat(global, chatId)!;\n    const { management } = selectTabState(global);\n    const { progress } = management;\n    const { invites } = management.byChatId[chatId] || {};\n\n    return {\n      chat,\n      chatFullInfo: selectChatFullInfo(global, chatId),\n      progress,\n      canChangeInfo: getHasAdminRight(chat, 'changeInfo'),\n      canInvite: getHasAdminRight(chat, 'inviteUsers'),\n      exportedInvites: invites,\n      availableReactions: global.reactions.availableReactions,\n    };\n  },\n  (global, { chatId }) => {\n    return Boolean(selectChat(global, chatId));\n  },\n)(ManageChannel));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useMemo } from '../../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../../global';\n\nimport type { ApiChat, ApiChatMember } from '../../../api/types';\nimport { ManagementScreens } from '../../../types';\n\nimport { getHasAdminRight, getUserFullName, isChatChannel } from '../../../global/helpers';\nimport { selectChat, selectChatFullInfo } from '../../../global/selectors';\nimport { partition } from '../../../util/iteratees';\n\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport PrivateChatInfo from '../../common/PrivateChatInfo';\nimport Checkbox from '../../ui/Checkbox';\nimport FloatingActionButton from '../../ui/FloatingActionButton';\nimport ListItem from '../../ui/ListItem';\n\ntype OwnProps = {\n  chatId: string;\n  isActive: boolean;\n  onScreenSelect: (screen: ManagementScreens) => void;\n  onChatMemberSelect: (memberId: string, isPromotedByCurrentUser?: boolean) => void;\n  onClose: NoneToVoidFunction;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  currentUserId?: string;\n  isChannel?: boolean;\n  adminMembersById?: Record<string, ApiChatMember>;\n};\n\nconst ManageChatAdministrators: FC<OwnProps & StateProps> = ({\n  isActive,\n  chat,\n  isChannel,\n  currentUserId,\n  adminMembersById,\n  onScreenSelect,\n  onChatMemberSelect,\n  onClose,\n}) => {\n  const { toggleSignatures } = getActions();\n  const lang = useOldLang();\n\n  useHistoryBack({\n    isActive,\n    onBack: onClose,\n  });\n\n  const areSignaturesEnabled = Boolean(chat?.areSignaturesShown);\n  const areProfilesEnabled = Boolean(chat?.areProfilesShown);\n\n  const canAddNewAdmins = Boolean(chat?.isCreator || (chat && getHasAdminRight(chat, 'addAdmins')));\n  const canToggleSignatures = isChannel && getHasAdminRight(chat!, 'postMessages');\n\n  const adminMembers = useMemo(() => {\n    if (!adminMembersById) {\n      return [];\n    }\n\n    const [owner, admins] = partition(Object.values(adminMembersById), (member) => member.isOwner);\n\n    return [...owner, ...admins];\n  }, [adminMembersById]);\n\n  const handleAdminMemberClick = useLastCallback((member: ApiChatMember) => {\n    onChatMemberSelect(member.userId, member.promotedByUserId === currentUserId);\n    onScreenSelect(ManagementScreens.ChatAdminRights);\n  });\n\n  const handleToggleSignatures = useLastCallback(() => {\n    toggleSignatures({\n      chatId: chat!.id,\n      areProfilesEnabled,\n      areSignaturesEnabled: !areSignaturesEnabled,\n    });\n  });\n\n  const handleToggleProfiles = useLastCallback(() => {\n    toggleSignatures({\n      chatId: chat!.id,\n      areProfilesEnabled: !areProfilesEnabled,\n      areSignaturesEnabled,\n    });\n  });\n\n  const handleAddAdminClick = useLastCallback(() => {\n    onScreenSelect(ManagementScreens.GroupAddAdmins);\n  });\n\n  const getMemberStatus = useLastCallback((member: ApiChatMember) => {\n    if (member.isOwner) {\n      return lang('ChannelCreator');\n    }\n\n    // No need for expensive global updates on users, so we avoid them\n    const usersById = getGlobal().users.byId;\n    const promotedByUser = member.promotedByUserId ? usersById[member.promotedByUserId] : undefined;\n\n    if (promotedByUser) {\n      return lang('EditAdminPromotedBy', getUserFullName(promotedByUser));\n    }\n\n    return lang('ChannelAdmin');\n  });\n\n  return (\n    <div className=\"Management\">\n      <div className=\"custom-scroll\">\n        <div className=\"section\">\n          <ListItem\n            icon=\"recent\"\n            multiline\n            disabled\n          >\n            <span className=\"title\">{lang('EventLog')}</span>\n            <span className=\"subtitle\">{lang(isChannel ? 'EventLogInfoDetailChannel' : 'EventLogInfoDetail')}</span>\n          </ListItem>\n        </div>\n\n        <div className=\"section\" dir={lang.isRtl ? 'rtl' : undefined}>\n          <p className=\"text-muted\" dir=\"auto\">\n            {lang(isChannel\n              ? 'Channel.Management.AddModeratorHelp'\n              : 'Group.Management.AddModeratorHelp')}\n          </p>\n\n          {adminMembers.map((member) => (\n            <ListItem\n              key={member.userId}\n              className=\"chat-item-clickable\"\n              // eslint-disable-next-line react/jsx-no-bind\n              onClick={() => handleAdminMemberClick(member)}\n            >\n              <PrivateChatInfo\n                userId={member.userId}\n                status={getMemberStatus(member)}\n                forceShowSelf\n              />\n            </ListItem>\n          ))}\n\n          <FloatingActionButton\n            isShown={canAddNewAdmins}\n            onClick={handleAddAdminClick}\n            ariaLabel={lang('Channel.Management.AddModerator')}\n          >\n            <i className=\"icon icon-add-user-filled\" />\n          </FloatingActionButton>\n        </div>\n\n        {canToggleSignatures && (\n          <div className=\"section\">\n            <div className=\"ListItem narrow\">\n              <Checkbox\n                checked={areSignaturesEnabled}\n                label={lang('ChannelSignMessages')}\n                onChange={handleToggleSignatures}\n              />\n            </div>\n            {areSignaturesEnabled && (\n              <>\n                <div className=\"ListItem narrow\">\n                  <Checkbox\n                    checked={areProfilesEnabled}\n                    label={lang('ChannelSignMessagesWithProfile')}\n                    onChange={handleToggleProfiles}\n                  />\n                </div>\n                <p className=\"section-info\">\n                  {lang('ChannelSignProfilesInfo')}\n                </p>\n              </>\n            )}\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const chat = selectChat(global, chatId);\n    return {\n      chat,\n      currentUserId: global.currentUserId,\n      isChannel: chat && isChatChannel(chat),\n      adminMembersById: selectChatFullInfo(global, chatId)?.adminMembersById,\n    };\n  },\n)(ManageChatAdministrators));\n","import type { ChangeEvent } from 'react';\nimport type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useMemo, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../../global';\n\nimport type { ApiChat } from '../../../api/types';\nimport { ManagementProgress } from '../../../types';\n\nimport { PURCHASE_USERNAME, TME_LINK_PREFIX, USERNAME_PURCHASE_ERROR } from '../../../config';\nimport { isChatChannel, isChatPublic } from '../../../global/helpers';\nimport {\n  selectChat, selectChatFullInfo,\n  selectManagement, selectTabState,\n} from '../../../global/selectors';\nimport { selectCurrentLimit } from '../../../global/selectors/limits';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useOldLang from '../../../hooks/useOldLang';\nimport usePreviousDeprecated from '../../../hooks/usePreviousDeprecated';\n\nimport ManageUsernames from '../../common/ManageUsernames';\nimport SafeLink from '../../common/SafeLink';\nimport UsernameInput from '../../common/UsernameInput';\nimport ConfirmDialog from '../../ui/ConfirmDialog';\nimport FloatingActionButton from '../../ui/FloatingActionButton';\nimport ListItem from '../../ui/ListItem';\nimport Loading from '../../ui/Loading';\nimport RadioGroup from '../../ui/RadioGroup';\nimport Spinner from '../../ui/Spinner';\n\ntype PrivacyType = 'private' | 'public';\n\ntype OwnProps = {\n  chatId: string;\n  onClose: NoneToVoidFunction;\n  isActive: boolean;\n};\n\ntype StateProps = {\n  chat: ApiChat;\n  isChannel: boolean;\n  progress?: ManagementProgress;\n  isUsernameAvailable?: boolean;\n  checkedUsername?: string;\n  error?: string;\n  isProtected?: boolean;\n  maxPublicLinks: number;\n  privateInviteLink?: string;\n};\n\nconst ManageChatPrivacyType: FC<OwnProps & StateProps> = ({\n  chat,\n  isActive,\n  isChannel,\n  progress,\n  isUsernameAvailable,\n  checkedUsername,\n  error,\n  isProtected,\n  maxPublicLinks,\n  privateInviteLink,\n  onClose,\n}) => {\n  const {\n    updatePublicLink,\n    updatePrivateLink,\n    toggleIsProtected,\n    openLimitReachedModal,\n    resetManagementError,\n  } = getActions();\n\n  const firstEditableUsername = useMemo(() => chat.usernames?.find(({ isEditable }) => isEditable), [chat.usernames]);\n  const currentUsername = firstEditableUsername?.username || '';\n  const isPublic = useMemo(() => isChatPublic(chat), [chat]);\n\n  const [isProfileFieldsTouched, setIsProfileFieldsTouched] = useState(false);\n  const [privacyType, setPrivacyType] = useState<PrivacyType>(isPublic ? 'public' : 'private');\n  const [editableUsername, setEditableUsername] = useState<string>();\n  const [isRevokeConfirmDialogOpen, openRevokeConfirmDialog, closeRevokeConfirmDialog] = useFlag();\n  const [isUsernameLostDialogOpen, openUsernameLostDialog, closeUsernameLostDialog] = useFlag();\n\n  const previousIsUsernameAvailable = usePreviousDeprecated(isUsernameAvailable);\n  const renderingIsUsernameAvailable = isUsernameAvailable ?? previousIsUsernameAvailable;\n\n  const canUpdate = isProfileFieldsTouched && Boolean(\n    (privacyType === 'public'\n      && (editableUsername || (currentUsername && editableUsername === ''))\n      && renderingIsUsernameAvailable)\n    || (privacyType === 'private' && isPublic),\n  );\n\n  useHistoryBack({\n    isActive,\n    onBack: onClose,\n  });\n\n  useEffect(() => {\n    setIsProfileFieldsTouched(false);\n  }, [currentUsername]);\n\n  useEffect(() => {\n    if (privacyType && !privateInviteLink) {\n      updatePrivateLink();\n    }\n  }, [privacyType, privateInviteLink, updatePrivateLink]);\n\n  const handleUsernameChange = useCallback((value: string) => {\n    setEditableUsername(value);\n    setIsProfileFieldsTouched(true);\n\n    if (error) {\n      resetManagementError({\n        chatId: chat.id,\n      });\n    }\n  }, [chat.id, error]);\n\n  const handleOptionChange = useCallback((value: string, e: ChangeEvent<HTMLInputElement>) => {\n    const myChats = Object.values(getGlobal().chats.byId)\n      .filter(({ isCreator, usernames }) => isCreator && usernames?.some((c) => c.isActive));\n\n    if (myChats.length >= maxPublicLinks && value === 'public') {\n      openLimitReachedModal({ limit: 'channelsPublic' });\n      const radioGroup = e.currentTarget.closest('.radio-group') as HTMLDivElement;\n      // Patch for Teact bug with controlled inputs\n      // TODO Teact support added, this can now be removed\n      (radioGroup.querySelector('[value=public]') as HTMLInputElement).checked = false;\n      (radioGroup.querySelector('[value=private]') as HTMLInputElement).checked = true;\n      return;\n    }\n    setPrivacyType(value as PrivacyType);\n    setIsProfileFieldsTouched(true);\n  }, [maxPublicLinks, openLimitReachedModal]);\n\n  const handleForwardingOptionChange = useCallback((value: string) => {\n    toggleIsProtected({\n      chatId: chat.id,\n      isProtected: value === 'protected',\n    });\n  }, [chat.id, toggleIsProtected]);\n\n  const handleSave = useCallback(() => {\n    if (isPublic && privacyType === 'private') {\n      openUsernameLostDialog();\n    } else {\n      updatePublicLink({ username: privacyType === 'public' ? (editableUsername || '') : '' });\n    }\n  }, [isPublic, openUsernameLostDialog, privacyType, updatePublicLink, editableUsername]);\n\n  const handleMakeChannelPrivateConfirm = useCallback(() => {\n    updatePublicLink({ username: '', shouldDisableUsernames: true });\n    closeUsernameLostDialog();\n  }, [closeUsernameLostDialog, updatePublicLink]);\n\n  const handleRevokePrivateLink = useCallback(() => {\n    closeRevokeConfirmDialog();\n    updatePrivateLink();\n  }, [closeRevokeConfirmDialog, updatePrivateLink]);\n\n  const lang = useOldLang();\n  const langPrefix1 = isChannel ? 'Channel' : 'Mega';\n  const langPrefix2 = isChannel ? 'Channel' : 'Group';\n\n  const options = [\n    { value: 'private', label: lang(`${langPrefix1}Private`), subLabel: lang(`${langPrefix1}PrivateInfo`) },\n    { value: 'public', label: lang(`${langPrefix1}Public`), subLabel: lang(`${langPrefix1}PublicInfo`) },\n  ];\n\n  const forwardingOptions = [{\n    value: 'allowed',\n    label: lang('ChannelVisibility.Forwarding.Enabled'),\n  }, {\n    value: 'protected',\n    label: lang('ChannelVisibility.Forwarding.Disabled'),\n  }];\n\n  const isLoading = progress === ManagementProgress.InProgress;\n  const shouldRenderUsernamesManage = privacyType === 'public' && chat.usernames && chat.usernames.length > 0;\n\n  function renderPurchaseLink() {\n    const purchaseInfoLink = `${TME_LINK_PREFIX}${PURCHASE_USERNAME}`;\n\n    return (\n      <p className=\"section-info\" dir=\"auto\">\n        {(lang('lng_username_purchase_available') as string)\n          .replace('{link}', '%PURCHASE_LINK%')\n          .split('%')\n          .map((s) => {\n            return (s === 'PURCHASE_LINK' ? <SafeLink url={purchaseInfoLink} text={`@${PURCHASE_USERNAME}`} /> : s);\n          })}\n      </p>\n    );\n  }\n\n  return (\n    <div className=\"Management\">\n      <div className=\"custom-scroll\">\n        <div className=\"section\" dir={lang.isRtl ? 'rtl' : undefined}>\n          <h3 className=\"section-heading\">{lang(`${langPrefix2}Type`)}</h3>\n          <RadioGroup\n            selected={privacyType}\n            name=\"channel-type\"\n            options={options}\n            onChange={handleOptionChange}\n          />\n        </div>\n        {privacyType === 'private' ? (\n          <div className=\"section\" dir={lang.isRtl ? 'rtl' : undefined}>\n            {privateInviteLink ? (\n              <>\n                <SafeLink url={privateInviteLink} className=\"group-link\" text={privateInviteLink} />\n                <p className=\"section-info\" dir={lang.isRtl ? 'rtl' : undefined}>\n                  {lang(`${langPrefix1}PrivateLinkHelp`)}\n                </p>\n\n                <ListItem icon=\"delete\" ripple destructive onClick={openRevokeConfirmDialog}>\n                  {lang('RevokeLink')}\n                </ListItem>\n                <ConfirmDialog\n                  isOpen={isRevokeConfirmDialogOpen}\n                  onClose={closeRevokeConfirmDialog}\n                  text={lang('RevokeAlert')}\n                  confirmLabel={lang('RevokeButton')}\n                  confirmHandler={handleRevokePrivateLink}\n                  confirmIsDestructive\n                />\n              </>\n            ) : (\n              <Loading />\n            )}\n          </div>\n        ) : (\n          <div className=\"section no-border\">\n            <UsernameInput\n              asLink\n              currentUsername={currentUsername}\n              isLoading={isLoading}\n              isUsernameAvailable={isUsernameAvailable}\n              checkedUsername={checkedUsername}\n              onChange={handleUsernameChange}\n            />\n            {error === USERNAME_PURCHASE_ERROR && renderPurchaseLink()}\n            <p className=\"section-info\" dir=\"auto\">\n              {lang(`${langPrefix2}.Username.CreatePublicLinkHelp`)}\n            </p>\n          </div>\n        )}\n        {shouldRenderUsernamesManage && (\n          <ManageUsernames\n            chatId={chat.id}\n            usernames={chat.usernames!}\n            onEditUsername={handleUsernameChange}\n          />\n        )}\n        <div className=\"section\" dir={lang.isRtl ? 'rtl' : undefined}>\n          <h3 className=\"section-heading\">\n            {lang(isChannel ? 'ChannelVisibility.Forwarding.ChannelTitle' : 'ChannelVisibility.Forwarding.GroupTitle')}\n          </h3>\n          <RadioGroup\n            selected={isProtected ? 'protected' : 'allowed'}\n            name=\"forwarding-type\"\n            options={forwardingOptions}\n            onChange={handleForwardingOptionChange}\n          />\n          <p className=\"section-info\">\n            {isChannel\n              ? lang('ChannelVisibility.Forwarding.ChannelInfo')\n              : lang('ChannelVisibility.Forwarding.GroupInfo')}\n          </p>\n        </div>\n      </div>\n      <FloatingActionButton\n        isShown={canUpdate}\n        disabled={isLoading}\n        ariaLabel={lang('Save')}\n        onClick={handleSave}\n      >\n        {isLoading ? (\n          <Spinner color=\"white\" />\n        ) : (\n          <i className=\"icon icon-check\" />\n        )}\n      </FloatingActionButton>\n      <ConfirmDialog\n        isOpen={isUsernameLostDialogOpen}\n        onClose={closeUsernameLostDialog}\n        text={lang('ChannelVisibility.Confirm.MakePrivate.Channel', currentUsername)}\n        confirmHandler={handleMakeChannelPrivateConfirm}\n        confirmIsDestructive\n      />\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const chat = selectChat(global, chatId)!;\n    const { isUsernameAvailable, checkedUsername, error } = selectManagement(global, chatId)!;\n\n    return {\n      chat,\n      isChannel: isChatChannel(chat),\n      progress: selectTabState(global).management.progress,\n      error,\n      isUsernameAvailable,\n      checkedUsername,\n      isProtected: chat?.isProtected,\n      maxPublicLinks: selectCurrentLimit(global, 'channelsPublic'),\n      privateInviteLink: selectChatFullInfo(global, chatId)?.inviteLink,\n    };\n  },\n  (global, { chatId }) => {\n    return Boolean(selectChat(global, chatId) && selectManagement(global, chatId));\n  },\n)(ManageChatPrivacyType));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback,\n  useMemo, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../../global';\n\nimport type { ApiChat, ApiChatMember } from '../../../api/types';\n\nimport { filterUsersByName } from '../../../global/helpers';\nimport { selectChatFullInfo } from '../../../global/selectors';\n\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport ChatOrUserPicker from '../../common/pickers/ChatOrUserPicker';\n\nexport type OwnProps = {\n  chat: ApiChat;\n  isOpen: boolean;\n  onClose: NoneToVoidFunction;\n};\n\ntype StateProps = {\n  currentUserId?: string;\n  chatMembers?: ApiChatMember[];\n};\n\nconst RemoveGroupUserModal: FC<OwnProps & StateProps> = ({\n  chat,\n  currentUserId,\n  chatMembers,\n  isOpen,\n  onClose,\n}) => {\n  const {\n    loadMoreMembers,\n    deleteChatMember,\n  } = getActions();\n\n  const lang = useOldLang();\n  const [search, setSearch] = useState('');\n\n  const usersId = useMemo(() => {\n    const availableMemberIds = (chatMembers || [])\n      .reduce((acc: string[], member) => {\n        if (!member.isAdmin && !member.isOwner && member.userId !== currentUserId) {\n          acc.push(member.userId);\n        }\n        return acc;\n      }, []);\n\n    // No need for expensive global updates on users, so we avoid them\n    const usersById = getGlobal().users.byId;\n\n    return filterUsersByName(availableMemberIds, usersById, search);\n  }, [chatMembers, currentUserId, search]);\n\n  const handleRemoveUser = useCallback((userId: string) => {\n    deleteChatMember({ chatId: chat.id, userId });\n    onClose();\n  }, [chat.id, deleteChatMember, onClose]);\n\n  return (\n    <ChatOrUserPicker\n      isOpen={isOpen}\n      chatOrUserIds={usersId}\n      searchPlaceholder={lang('ChannelBlockUser')}\n      search={search}\n      onSearchChange={setSearch}\n      loadMore={loadMoreMembers}\n      onSelectChatOrUser={handleRemoveUser}\n      onClose={onClose}\n    />\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chat }): StateProps => {\n    const { currentUserId } = global;\n\n    return {\n      currentUserId,\n      chatMembers: selectChatFullInfo(global, chat.id)?.members,\n    };\n  },\n)(RemoveGroupUserModal));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiChat, ApiChatMember, ApiUser } from '../../../api/types';\n\nimport { getHasAdminRight, getUserFullName, isChatChannel } from '../../../global/helpers';\nimport { selectChat, selectChatFullInfo } from '../../../global/selectors';\nimport { MEMO_EMPTY_ARRAY } from '../../../util/memo';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport PrivateChatInfo from '../../common/PrivateChatInfo';\nimport FloatingActionButton from '../../ui/FloatingActionButton';\nimport ListItem, { type MenuItemContextAction } from '../../ui/ListItem';\nimport RemoveGroupUserModal from './RemoveGroupUserModal';\n\ntype OwnProps = {\n  chatId: string;\n  onClose: NoneToVoidFunction;\n  isActive: boolean;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  usersById: Record<string, ApiUser>;\n  removedMembers: ApiChatMember[];\n  canDeleteMembers?: boolean;\n  isChannel?: boolean;\n};\n\nconst ManageChatRemovedUsers: FC<OwnProps & StateProps> = ({\n  chat,\n  usersById,\n  canDeleteMembers,\n  removedMembers,\n  isChannel,\n  onClose,\n  isActive,\n}) => {\n  const { updateChatMemberBannedRights } = getActions();\n\n  const lang = useOldLang();\n  const [isRemoveUserModalOpen, openRemoveUserModal, closeRemoveUserModal] = useFlag();\n\n  useHistoryBack({\n    isActive,\n    onBack: onClose,\n  });\n\n  const getRemovedBy = useCallback((member: ApiChatMember) => {\n    if (!member.kickedByUserId) {\n      return undefined;\n    }\n\n    const kickedByUser = usersById[member.kickedByUserId];\n    if (!kickedByUser) {\n      return undefined;\n    }\n\n    return lang('UserRemovedBy', getUserFullName(kickedByUser));\n  }, [lang, usersById]);\n\n  const getContextActions = useCallback((member: ApiChatMember): MenuItemContextAction[] | undefined => {\n    if (!chat) {\n      return undefined;\n    }\n\n    return [{\n      title: lang('Unblock'),\n      icon: 'delete',\n      destructive: true,\n      handler: () => updateChatMemberBannedRights({\n        chatId: chat.id,\n        userId: member.userId,\n        bannedRights: {},\n      }),\n    }];\n  }, [lang, chat, updateChatMemberBannedRights]);\n\n  return (\n    <div className=\"Management\">\n      <div className=\"custom-scroll\">\n        <div className=\"section\" dir={lang.isRtl ? 'rtl' : undefined}>\n          <p className=\"text-muted\">{lang(isChannel ? 'NoBlockedChannel2' : 'NoBlockedGroup2')}</p>\n\n          {removedMembers.map((member) => (\n            <ListItem\n              key={member.userId}\n              className=\"chat-item-clickable\"\n              ripple\n              contextActions={getContextActions(member)}\n            >\n              <PrivateChatInfo\n                userId={member.userId}\n                status={getRemovedBy(member)}\n                forceShowSelf\n              />\n            </ListItem>\n          ))}\n          {canDeleteMembers && (\n            <FloatingActionButton\n              isShown\n              onClick={openRemoveUserModal}\n              ariaLabel={lang('Channel.EditAdmin.Permission.BanUsers')}\n            >\n              <i className=\"icon icon-add-user-filled\" />\n            </FloatingActionButton>\n          )}\n          {chat && canDeleteMembers && (\n            <RemoveGroupUserModal\n              chat={chat}\n              isOpen={isRemoveUserModalOpen}\n              onClose={closeRemoveUserModal}\n            />\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const chat = selectChat(global, chatId);\n    const { byId: usersById } = global.users;\n    const canDeleteMembers = chat && (getHasAdminRight(chat, 'banUsers') || chat.isCreator);\n\n    return {\n      chat,\n      usersById,\n      canDeleteMembers,\n      removedMembers: selectChatFullInfo(global, chatId)?.kickedMembers || MEMO_EMPTY_ARRAY,\n      isChannel: chat && isChatChannel(chat),\n    };\n  },\n)(ManageChatRemovedUsers));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiChat } from '../../../api/types';\nimport { ManagementScreens } from '../../../types';\n\nimport { STICKER_SIZE_DISCUSSION_GROUPS } from '../../../config';\nimport { isChatChannel } from '../../../global/helpers';\nimport { selectChat, selectChatFullInfo } from '../../../global/selectors';\nimport { LOCAL_TGS_URLS } from '../../common/helpers/animatedAssets';\nimport renderText from '../../common/helpers/renderText';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport AnimatedIcon from '../../common/AnimatedIcon';\nimport Avatar from '../../common/Avatar';\nimport GroupChatInfo from '../../common/GroupChatInfo';\nimport NothingFound from '../../common/NothingFound';\nimport Checkbox from '../../ui/Checkbox';\nimport ConfirmDialog from '../../ui/ConfirmDialog';\nimport ListItem from '../../ui/ListItem';\n\ntype OwnProps = {\n  chatId: string;\n  onScreenSelect: (screen: ManagementScreens) => void;\n  onClose: NoneToVoidFunction;\n  isActive: boolean;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  chatsByIds: Record<string, ApiChat>;\n  linkedChat?: ApiChat;\n  forDiscussionIds?: string[];\n  isChannel?: boolean;\n};\n\nconst ManageDiscussion: FC<OwnProps & StateProps> = ({\n  chat,\n  onClose,\n  isActive,\n  chatId,\n  chatsByIds,\n  linkedChat,\n  forDiscussionIds,\n  isChannel,\n  onScreenSelect,\n}) => {\n  const {\n    loadGroupsForDiscussion,\n    linkDiscussionGroup,\n    unlinkDiscussionGroup,\n    toggleJoinRequest,\n    toggleJoinToSend,\n  } = getActions();\n\n  const [linkedGroupId, setLinkedGroupId] = useState<string>();\n  const [isConfirmUnlinkGroupDialogOpen, openConfirmUnlinkGroupDialog, closeConfirmUnlinkGroupDialog] = useFlag();\n  const [isConfirmLinkGroupDialogOpen, openConfirmLinkGroupDialog, closeConfirmLinkGroupDialog] = useFlag();\n  const [isJoinToSend, setIsJoinToSend] = useState(Boolean(linkedChat?.isJoinToSend));\n  const [isJoinRequest, setIsJoinRequest] = useState(Boolean(linkedChat?.isJoinRequest));\n  const lang = useOldLang();\n  const linkedChatId = linkedChat?.id;\n\n  useHistoryBack({\n    isActive,\n    onBack: onClose,\n  });\n\n  useEffect(() => {\n    loadGroupsForDiscussion();\n  }, [loadGroupsForDiscussion]);\n\n  useEffect(() => {\n    if (isActive) {\n      setIsJoinToSend(linkedChat?.isJoinToSend || false);\n      setIsJoinRequest(linkedChat?.isJoinRequest || false);\n    }\n  }, [linkedChat, isActive]);\n\n  const handleUnlinkGroupSessions = useCallback(() => {\n    closeConfirmUnlinkGroupDialog();\n    unlinkDiscussionGroup({ channelId: isChannel ? chatId : linkedChatId! });\n    if (!isChannel) {\n      onScreenSelect(ManagementScreens.Initial);\n    }\n  }, [closeConfirmUnlinkGroupDialog, unlinkDiscussionGroup, isChannel, chatId, linkedChatId, onScreenSelect]);\n\n  const handleLinkGroupSessions = useCallback(() => {\n    closeConfirmLinkGroupDialog();\n    linkDiscussionGroup({ channelId: chatId, chatId: linkedGroupId! });\n  }, [closeConfirmLinkGroupDialog, linkDiscussionGroup, chatId, linkedGroupId]);\n\n  const handleJoinToSendCheck = useCallback((checked: boolean) => {\n    setIsJoinToSend(checked);\n    toggleJoinToSend({ chatId: linkedChatId!, isEnabled: checked });\n    if (!checked) {\n      setIsJoinRequest(false);\n    }\n  }, [linkedChatId, toggleJoinToSend]);\n\n  const handleJoinRequestCheck = useCallback((checked: boolean) => {\n    setIsJoinRequest(checked);\n    toggleJoinRequest({ chatId: linkedChatId!, isEnabled: checked });\n  }, [linkedChatId, toggleJoinRequest]);\n\n  const onDiscussionClick = (groupId: string) => {\n    setLinkedGroupId(groupId);\n    openConfirmLinkGroupDialog();\n  };\n\n  function renderUnlinkGroupHeader() {\n    return (\n      <div className=\"modal-header\">\n        <Avatar\n          size=\"tiny\"\n          peer={linkedChat}\n        />\n        <div className=\"modal-title\">\n          {lang(isChannel ? 'DiscussionUnlinkGroup' : 'DiscussionUnlinkChannel')}\n        </div>\n      </div>\n    );\n  }\n\n  function renderLinkGroupHeader() {\n    if (!linkedGroupId) return undefined;\n    const linkedGroup = chatsByIds[linkedGroupId];\n    if (!linkedGroup) return undefined;\n\n    return (\n      <div className=\"modal-header\">\n        <Avatar\n          size=\"tiny\"\n          peer={linkedGroup}\n        />\n        <div className=\"modal-title\">\n          {lang('Channel.DiscussionGroup.LinkGroup')}\n        </div>\n      </div>\n    );\n  }\n\n  function renderLinkGroupConfirmText() {\n    if (!linkedGroupId) return undefined;\n    const linkedGroup = chatsByIds[linkedGroupId];\n    if (!linkedGroup) return undefined;\n\n    if (linkedGroup.hasPrivateLink) {\n      return renderText(\n        `Do you want to make **${linkedGroup.title}** the discussion board for **${chat!.title}**?`,\n        ['br', 'simple_markdown'],\n      );\n    }\n\n    return renderText(\n      // eslint-disable-next-line max-len\n      `Do you want to make **${linkedGroup.title}** the discussion board for **${chat!.title}**?\\n\\nAnyone from the channel will be able to see messages in this group.`,\n      ['br', 'simple_markdown'],\n    );\n  }\n\n  function renderLinkedGroup() {\n    return (\n      <div>\n        <ListItem\n          className=\"chat-item-clickable\"\n          inactive\n        >\n          <GroupChatInfo chatId={linkedChat!.id} />\n        </ListItem>\n        <ListItem\n          icon=\"delete\"\n          ripple\n          destructive\n          onClick={openConfirmUnlinkGroupDialog}\n        >\n          {lang(isChannel ? 'DiscussionUnlinkGroup' : 'DiscussionUnlinkChannel')}\n        </ListItem>\n        <ConfirmDialog\n          isOpen={isConfirmUnlinkGroupDialogOpen}\n          onClose={closeConfirmUnlinkGroupDialog}\n          header={renderUnlinkGroupHeader()}\n          textParts={renderText(\n            lang(isChannel ? 'DiscussionUnlinkChannelAlert' : 'DiscussionUnlinkGroupAlert', linkedChat!.title),\n            ['br', 'simple_markdown'],\n          )}\n          confirmLabel={lang(isChannel ? 'DiscussionUnlinkGroup' : 'DiscussionUnlinkChannel')}\n          confirmHandler={handleUnlinkGroupSessions}\n          confirmIsDestructive\n        />\n      </div>\n    );\n  }\n\n  function renderDiscussionGroups() {\n    return (\n      <div>\n        <p className=\"section-help\" dir=\"auto\">{lang('DiscussionChannelHelp')}</p>\n\n        <div teactFastList>\n          <ListItem\n            key=\"create-group\"\n            icon=\"group\"\n            ripple\n            teactOrderKey={0}\n            disabled\n          >\n            {lang('DiscussionCreateGroup')}\n          </ListItem>\n          {forDiscussionIds ? (\n            forDiscussionIds.map((id, i) => (\n              <ListItem\n                key={id}\n                teactOrderKey={i + 1}\n                className=\"chat-item-clickable scroll-item\"\n                // eslint-disable-next-line react/jsx-no-bind\n                onClick={() => {\n                  onDiscussionClick(id);\n                }}\n              >\n                <GroupChatInfo chatId={id} />\n              </ListItem>\n            ))\n          ) : (\n            <NothingFound key=\"nothing-found\" teactOrderKey={0} text=\"No discussion groups found\" />\n          )}\n        </div>\n        <p className=\"mt-4 mb-0 section-help\" dir=\"auto\">{lang('DiscussionChannelHelp2')}</p>\n        <ConfirmDialog\n          isOpen={isConfirmLinkGroupDialogOpen}\n          onClose={closeConfirmLinkGroupDialog}\n          header={renderLinkGroupHeader()}\n          textParts={renderLinkGroupConfirmText()}\n          confirmLabel={lang('DiscussionLinkGroup')}\n          confirmHandler={handleLinkGroupSessions}\n        />\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"Management\">\n      <div className=\"custom-scroll\">\n        <div className=\"section\">\n          <AnimatedIcon\n            tgsUrl={LOCAL_TGS_URLS.DiscussionGroups}\n            size={STICKER_SIZE_DISCUSSION_GROUPS}\n            className=\"section-icon\"\n          />\n          {linkedChat && renderLinkedGroup()}\n          {!linkedChat && renderDiscussionGroups()}\n        </div>\n        {linkedChat && (\n          <div className=\"section\">\n            <h3 className=\"section-heading\">{lang('ChannelSettingsJoinTitle')}</h3>\n            <div className=\"ListItem narrow\">\n              <Checkbox\n                checked={isJoinToSend}\n                onCheck={handleJoinToSendCheck}\n                label={lang('ChannelSettingsJoinToSend')}\n              />\n            </div>\n            {isJoinToSend && (\n              <div className=\"ListItem narrow\">\n                <Checkbox\n                  checked={isJoinRequest}\n                  onCheck={handleJoinRequestCheck}\n                  label={lang('ChannelSettingsJoinRequest')}\n                />\n              </div>\n            )}\n            <p className=\"text-muted\">\n              {isJoinToSend ? lang('ChannelSettingsJoinRequestInfo') : lang('ChannelSettingsJoinToSendInfo')}\n            </p>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const chat = selectChat(global, chatId);\n    const { linkedChatId } = selectChatFullInfo(global, chatId) || {};\n    const { forDiscussionIds, byId: chatsByIds } = global.chats;\n    const linkedChat = linkedChatId ? selectChat(global, linkedChatId) : undefined;\n\n    return {\n      chat,\n      chatsByIds,\n      forDiscussionIds,\n      linkedChat,\n      isChannel: chat && isChatChannel(chat),\n    };\n  },\n)(ManageDiscussion));\n","import type { ChangeEvent } from 'react';\nimport type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo, useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type {\n  ApiAvailableReaction, ApiChat, ApiChatBannedRights, ApiChatFullInfo, ApiExportedInvite,\n} from '../../../api/types';\nimport { ApiMediaFormat } from '../../../api/types';\nimport { ManagementProgress, ManagementScreens } from '../../../types';\n\nimport {\n  getChatAvatarHash,\n  getHasAdminRight,\n  isChatBasicGroup,\n  isChatPublic,\n} from '../../../global/helpers';\nimport { selectChat, selectChatFullInfo, selectTabState } from '../../../global/selectors';\nimport { debounce } from '../../../util/schedulers';\nimport { formatInteger } from '../../../util/textFormat';\nimport renderText from '../../common/helpers/renderText';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMedia from '../../../hooks/useMedia';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport AvatarEditable from '../../ui/AvatarEditable';\nimport Checkbox from '../../ui/Checkbox';\nimport ConfirmDialog from '../../ui/ConfirmDialog';\nimport FloatingActionButton from '../../ui/FloatingActionButton';\nimport InputText from '../../ui/InputText';\nimport ListItem from '../../ui/ListItem';\nimport Spinner from '../../ui/Spinner';\nimport Switcher from '../../ui/Switcher';\nimport TextArea from '../../ui/TextArea';\n\nimport './Management.scss';\n\ntype OwnProps = {\n  chatId: string;\n  onScreenSelect: (screen: ManagementScreens) => void;\n  onClose: NoneToVoidFunction;\n  isActive: boolean;\n};\n\ntype StateProps = {\n  chat: ApiChat;\n  chatFullInfo?: ApiChatFullInfo;\n  progress?: ManagementProgress;\n  isBasicGroup: boolean;\n  hasLinkedChannel: boolean;\n  canChangeInfo?: boolean;\n  canBanUsers?: boolean;\n  canInvite?: boolean;\n  canEditForum?: boolean;\n  exportedInvites?: ApiExportedInvite[];\n  isChannelsPremiumLimitReached: boolean;\n  availableReactions?: ApiAvailableReaction[];\n};\n\nconst GROUP_TITLE_EMPTY = 'Group title can\\'t be empty';\nconst GROUP_MAX_DESCRIPTION = 255;\n\nconst ALL_PERMISSIONS: Array<keyof ApiChatBannedRights> = [\n  'sendMessages',\n  'embedLinks',\n  'sendPolls',\n  'changeInfo',\n  'inviteUsers',\n  'pinMessages',\n  'manageTopics',\n  'sendPhotos',\n  'sendVideos',\n  'sendRoundvideos',\n  'sendVoices',\n  'sendAudios',\n  'sendDocs',\n];\n// Some checkboxes control multiple rights, and some rights are not controlled from Permissions screen,\n// so we need to define the amount manually\nconst TOTAL_PERMISSIONS_COUNT = ALL_PERMISSIONS.length + 1;\n\nconst runDebounced = debounce((cb) => cb(), 500, false);\n\nconst ManageGroup: FC<OwnProps & StateProps> = ({\n  chatId,\n  chat,\n  chatFullInfo,\n  progress,\n  isBasicGroup,\n  hasLinkedChannel,\n  canChangeInfo,\n  canBanUsers,\n  canInvite,\n  canEditForum,\n  isActive,\n  exportedInvites,\n  isChannelsPremiumLimitReached,\n  availableReactions,\n  onScreenSelect,\n  onClose,\n}) => {\n  const {\n    togglePreHistoryHidden,\n    updateChat,\n    deleteChat,\n    leaveChannel,\n    deleteChannel,\n    closeManagement,\n    openChat,\n    loadExportedChatInvites,\n    loadChatJoinRequests,\n    toggleForum,\n  } = getActions();\n\n  const [isDeleteDialogOpen, openDeleteDialog, closeDeleteDialog] = useFlag();\n  const currentTitle = chat.title;\n  const currentAbout = chatFullInfo?.about || '';\n\n  const [isProfileFieldsTouched, setIsProfileFieldsTouched] = useState(false);\n  const [title, setTitle] = useState(currentTitle);\n  const [about, setAbout] = useState(currentAbout);\n  const [photo, setPhoto] = useState<File | undefined>();\n  const [error, setError] = useState<string | undefined>();\n  const [isForumEnabled, setIsForumEnabled] = useState(chat.isForum);\n  const imageHash = getChatAvatarHash(chat);\n  const currentAvatarBlobUrl = useMedia(imageHash, false, ApiMediaFormat.BlobUrl);\n  const isPublicGroup = useMemo(() => isChatPublic(chat), [chat]);\n  const lang = useOldLang();\n  // eslint-disable-next-line no-null/no-null\n  const isPreHistoryHiddenCheckboxRef = useRef<HTMLDivElement>(null);\n\n  useHistoryBack({\n    isActive,\n    onBack: onClose,\n  });\n\n  useEffect(() => {\n    if (canInvite) {\n      loadExportedChatInvites({ chatId });\n      loadExportedChatInvites({ chatId, isRevoked: true });\n      loadChatJoinRequests({ chatId });\n    }\n  }, [chatId, canInvite]);\n\n  // Resetting `isForum` switch on flood wait error\n  useEffect(() => {\n    setIsForumEnabled(Boolean(chat.isForum));\n  }, [chat.isForum]);\n\n  useEffect(() => {\n    if (progress === ManagementProgress.Complete) {\n      setIsProfileFieldsTouched(false);\n      setError(undefined);\n    }\n  }, [progress]);\n\n  const handleClickEditType = useLastCallback(() => {\n    onScreenSelect(ManagementScreens.ChatPrivacyType);\n  });\n\n  const handleClickDiscussion = useLastCallback(() => {\n    onScreenSelect(ManagementScreens.Discussion);\n  });\n\n  const handleClickReactions = useLastCallback(() => {\n    onScreenSelect(ManagementScreens.Reactions);\n  });\n\n  const handleClickPermissions = useLastCallback(() => {\n    onScreenSelect(ManagementScreens.GroupPermissions);\n  });\n\n  const handleClickAdministrators = useLastCallback(() => {\n    onScreenSelect(ManagementScreens.ChatAdministrators);\n  });\n\n  const handleClickInvites = useLastCallback(() => {\n    onScreenSelect(ManagementScreens.Invites);\n  });\n\n  const handleClickRequests = useLastCallback(() => {\n    onScreenSelect(ManagementScreens.JoinRequests);\n  });\n\n  const handleSetPhoto = useLastCallback((file: File) => {\n    setPhoto(file);\n    setIsProfileFieldsTouched(true);\n  });\n\n  const handleTitleChange = useLastCallback((e: ChangeEvent<HTMLInputElement>) => {\n    setTitle(e.target.value);\n    setIsProfileFieldsTouched(true);\n  });\n\n  const handleAboutChange = useLastCallback((e: ChangeEvent<HTMLTextAreaElement>) => {\n    setAbout(e.target.value);\n    setIsProfileFieldsTouched(true);\n  });\n\n  const handleUpdateGroup = useLastCallback(() => {\n    const trimmedTitle = title.trim();\n    const trimmedAbout = about.trim();\n\n    if (!trimmedTitle.length) {\n      setError(GROUP_TITLE_EMPTY);\n      return;\n    }\n\n    updateChat({\n      chatId,\n      title: trimmedTitle,\n      about: trimmedAbout,\n      photo,\n    });\n  });\n\n  const handleClickMembers = useLastCallback(() => {\n    onScreenSelect(ManagementScreens.GroupMembers);\n  });\n\n  const handleTogglePreHistory = useLastCallback(() => {\n    if (!chatFullInfo) {\n      return;\n    }\n\n    const { isPreHistoryHidden } = chatFullInfo;\n\n    togglePreHistoryHidden({ chatId: chat.id, isEnabled: !isPreHistoryHidden });\n  });\n\n  const handleForumToggle = useLastCallback(() => {\n    setIsForumEnabled((current) => {\n      const newIsForumEnabled = !current;\n\n      runDebounced(() => {\n        toggleForum({ chatId, isEnabled: newIsForumEnabled });\n      });\n\n      return newIsForumEnabled;\n    });\n  });\n\n  useEffect(() => {\n    if (!isChannelsPremiumLimitReached) {\n      return;\n    }\n\n    // Teact does not have full support of controlled form components, we need to \"disable\" input value change manually\n    // TODO Teact support added, this can now be removed\n    const checkbox = isPreHistoryHiddenCheckboxRef.current?.querySelector('input') as HTMLInputElement;\n    checkbox.checked = !chatFullInfo?.isPreHistoryHidden;\n  }, [isChannelsPremiumLimitReached, chatFullInfo?.isPreHistoryHidden]);\n\n  const chatReactionsDescription = useMemo(() => {\n    if (!chatFullInfo?.enabledReactions) {\n      return lang('ReactionsOff');\n    }\n\n    if (chatFullInfo.enabledReactions.type === 'all') {\n      return lang('ReactionsAll');\n    }\n\n    const enabledLength = chatFullInfo.enabledReactions.allowed.length;\n    const totalLength = availableReactions?.filter((reaction) => !reaction.isInactive).length || 0;\n\n    return totalLength\n      ? `${enabledLength} / ${totalLength}`\n      : `${enabledLength}`;\n  }, [availableReactions, chatFullInfo?.enabledReactions, lang]);\n\n  const enabledPermissionsCount = useMemo(() => {\n    if (!chat.defaultBannedRights) {\n      return 0;\n    }\n\n    let totalCount = ALL_PERMISSIONS.filter(\n      (key) => {\n        if (key === 'manageTopics' && !isForumEnabled) return false;\n        return !chat.defaultBannedRights![key as keyof ApiChatBannedRights];\n      },\n    ).length;\n\n    const { sendStickers, sendGifs } = chat.defaultBannedRights;\n\n    // These two rights are controlled with a single checkbox\n    if (!sendStickers && !sendGifs) {\n      totalCount += 1;\n    }\n\n    return totalCount;\n  }, [chat.defaultBannedRights, isForumEnabled]);\n\n  const adminsCount = useMemo(() => {\n    return Object.keys(chatFullInfo?.adminMembersById || {}).length;\n  }, [chatFullInfo?.adminMembersById]);\n\n  const handleDeleteGroup = useLastCallback(() => {\n    if (isBasicGroup) {\n      deleteChat({ chatId: chat.id });\n    } else if (!chat.isCreator) {\n      leaveChannel({ chatId: chat.id });\n    } else {\n      deleteChannel({ chatId: chat.id });\n    }\n    closeDeleteDialog();\n    closeManagement();\n    openChat({ id: undefined });\n  });\n\n  if (chat.isRestricted || chat.isForbidden) {\n    return undefined;\n  }\n\n  const isLoading = progress === ManagementProgress.InProgress;\n\n  return (\n    <div className=\"Management\">\n      <div className=\"custom-scroll\">\n        <div className=\"section\">\n          <AvatarEditable\n            isForForum={isForumEnabled}\n            currentAvatarBlobUrl={currentAvatarBlobUrl}\n            onChange={handleSetPhoto}\n            disabled={!canChangeInfo}\n          />\n          <InputText\n            id=\"group-title\"\n            label={lang('GroupName')}\n            onChange={handleTitleChange}\n            value={title}\n            error={error === GROUP_TITLE_EMPTY ? error : undefined}\n            disabled={!canChangeInfo}\n          />\n          <TextArea\n            id=\"group-about\"\n            className=\"mb-2\"\n            label={lang('DescriptionPlaceholder')}\n            maxLength={GROUP_MAX_DESCRIPTION}\n            maxLengthIndicator={(GROUP_MAX_DESCRIPTION - about.length).toString()}\n            onChange={handleAboutChange}\n            value={about}\n            disabled={!canChangeInfo}\n            noReplaceNewlines\n          />\n          {chat.isCreator && (\n            <ListItem icon=\"lock\" multiline onClick={handleClickEditType}>\n              <span className=\"title\">{lang('GroupType')}</span>\n              <span className=\"subtitle\">{isPublicGroup ? lang('TypePublic') : lang('TypePrivate')}</span>\n            </ListItem>\n          )}\n          {hasLinkedChannel && (\n            <ListItem\n              icon=\"message\"\n              multiline\n              onClick={handleClickDiscussion}\n            >\n              <span className=\"title\">{lang('LinkedChannel')}</span>\n              <span className=\"subtitle\">{lang('DiscussionUnlink')}</span>\n            </ListItem>\n          )}\n          <ListItem\n            icon=\"permissions\"\n            multiline\n            onClick={handleClickPermissions}\n            disabled={!canBanUsers}\n          >\n            <span className=\"title\">{lang('ChannelPermissions')}</span>\n            <span className=\"subtitle\" dir=\"auto\">\n              {enabledPermissionsCount}/{TOTAL_PERMISSIONS_COUNT - (isForumEnabled ? 0 : 1)}\n            </span>\n          </ListItem>\n          <ListItem\n            icon=\"heart-outline\"\n            multiline\n            onClick={handleClickReactions}\n            disabled={!canChangeInfo}\n          >\n            <span className=\"title\">{lang('Reactions')}</span>\n            <span className=\"subtitle\" dir=\"auto\">\n              {chatReactionsDescription}\n            </span>\n          </ListItem>\n          <ListItem\n            icon=\"admin\"\n            multiline\n            onClick={handleClickAdministrators}\n          >\n            <span className=\"title\">{lang('ChannelAdministrators')}</span>\n            <span className=\"subtitle\">{formatInteger(adminsCount)}</span>\n          </ListItem>\n          {canInvite && (\n            <ListItem\n              icon=\"link\"\n              onClick={handleClickInvites}\n              multiline\n              disabled={!exportedInvites}\n            >\n              <span className=\"title\">{lang('GroupInfo.InviteLinks')}</span>\n              <span className=\"subtitle\">\n                {exportedInvites ? formatInteger(exportedInvites.length) : lang('Loading')}\n              </span>\n            </ListItem>\n          )}\n          {Boolean(chat.joinRequests?.length) && (\n            <ListItem\n              icon=\"add-user-filled\"\n              onClick={handleClickRequests}\n              multiline\n            >\n              <span className=\"title\">{lang('MemberRequests')}</span>\n              <span className=\"subtitle\">\n                {formatInteger(chat.joinRequests!.length)}\n              </span>\n            </ListItem>\n          )}\n          {canEditForum && (\n            <>\n              <ListItem icon=\"forums\" ripple onClick={handleForumToggle}>\n                <span>{lang('ChannelTopics')}</span>\n                <Switcher\n                  id=\"group-notifications\"\n                  label={lang('ChannelTopics')}\n                  checked={isForumEnabled}\n                  inactive\n                />\n              </ListItem>\n              <div className=\"section-info section-info_push\">{lang('ForumToggleDescription')}</div>\n            </>\n          )}\n        </div>\n        <div className=\"section\">\n          <ListItem icon=\"group\" multiline onClick={handleClickMembers}>\n            <span className=\"title\">{lang('GroupMembers')}</span>\n            <span className=\"subtitle\">{formatInteger(chat.membersCount ?? 0)}</span>\n          </ListItem>\n\n          {!isPublicGroup && !hasLinkedChannel && Boolean(chatFullInfo) && (\n            <div className=\"ListItem narrow\" ref={isPreHistoryHiddenCheckboxRef}>\n              <Checkbox\n                checked={!chatFullInfo.isPreHistoryHidden}\n                label={lang('ChatHistory')}\n                onChange={handleTogglePreHistory}\n                disabled={!canBanUsers}\n              />\n            </div>\n          )}\n        </div>\n        <div className=\"section\">\n          <ListItem icon=\"delete\" ripple destructive onClick={openDeleteDialog}>\n            {lang('DeleteMega')}\n          </ListItem>\n        </div>\n      </div>\n      <FloatingActionButton\n        isShown={isProfileFieldsTouched}\n        onClick={handleUpdateGroup}\n        disabled={isLoading}\n        ariaLabel={lang('Save')}\n      >\n        {isLoading ? (\n          <Spinner color=\"white\" />\n        ) : (\n          <i className=\"icon icon-check\" />\n        )}\n      </FloatingActionButton>\n      <ConfirmDialog\n        isOpen={isDeleteDialogOpen}\n        onClose={closeDeleteDialog}\n        textParts={renderText(\n          isBasicGroup || !chat.isCreator\n            ? lang('AreYouSureDeleteAndExit')\n            : lang('AreYouSureDeleteThisChatWithGroup', chat.title),\n          ['br', 'simple_markdown'],\n        )}\n        confirmLabel={isBasicGroup || !chat.isCreator ? lang('DeleteMega') : lang('DeleteGroupForAll')}\n        confirmHandler={handleDeleteGroup}\n        confirmIsDestructive\n      />\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const chat = selectChat(global, chatId)!;\n    const chatFullInfo = selectChatFullInfo(global, chatId);\n    const { management, limitReachedModal } = selectTabState(global);\n    const { progress } = management;\n    const hasLinkedChannel = Boolean(chatFullInfo?.linkedChatId);\n    const isBasicGroup = isChatBasicGroup(chat);\n    const { invites } = management.byChatId[chatId] || {};\n    const canEditForum = !hasLinkedChannel && (getHasAdminRight(chat, 'changeInfo') || chat.isCreator);\n    const canChangeInfo = chat.isCreator || getHasAdminRight(chat, 'changeInfo');\n    const canBanUsers = chat.isCreator || getHasAdminRight(chat, 'banUsers');\n    const canInvite = chat.isCreator || getHasAdminRight(chat, 'inviteUsers');\n\n    return {\n      chat,\n      chatFullInfo,\n      progress,\n      isBasicGroup,\n      hasLinkedChannel,\n      canChangeInfo,\n      canBanUsers,\n      canInvite,\n      exportedInvites: invites,\n      isChannelsPremiumLimitReached: limitReachedModal?.limit === 'channels',\n      availableReactions: global.reactions.availableReactions,\n      canEditForum,\n    };\n  },\n  (global, { chatId }) => {\n    return Boolean(selectChat(global, chatId));\n  },\n)(ManageGroup));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useMemo, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../../global';\n\nimport type {\n  ApiChat, ApiChatAdminRights, ApiChatMember, ApiUser,\n} from '../../../api/types';\nimport { ManagementScreens } from '../../../types';\n\nimport { getUserFullName, isChatBasicGroup, isChatChannel } from '../../../global/helpers';\nimport { selectChat, selectChatFullInfo } from '../../../global/selectors';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport PrivateChatInfo from '../../common/PrivateChatInfo';\nimport Checkbox from '../../ui/Checkbox';\nimport ConfirmDialog from '../../ui/ConfirmDialog';\nimport FloatingActionButton from '../../ui/FloatingActionButton';\nimport InputText from '../../ui/InputText';\nimport ListItem from '../../ui/ListItem';\nimport Spinner from '../../ui/Spinner';\n\ntype OwnProps = {\n  chatId: string;\n  selectedUserId?: string;\n  isPromotedByCurrentUser?: boolean;\n  isNewAdmin?: boolean;\n  isActive: boolean;\n  onScreenSelect: (screen: ManagementScreens) => void;\n  onClose: NoneToVoidFunction;\n};\n\ntype StateProps = {\n  chat: ApiChat;\n  usersById: Record<string, ApiUser>;\n  adminMembersById?: Record<string, ApiChatMember>;\n  hasFullInfo: boolean;\n  currentUserId?: string;\n  isChannel: boolean;\n  isFormFullyDisabled: boolean;\n  isForum?: boolean;\n  defaultRights?: ApiChatAdminRights;\n};\n\nconst CUSTOM_TITLE_MAX_LENGTH = 16;\n\nconst ManageGroupAdminRights: FC<OwnProps & StateProps> = ({\n  isActive,\n  isNewAdmin,\n  selectedUserId,\n  defaultRights,\n  chat,\n  usersById,\n  currentUserId,\n  adminMembersById,\n  hasFullInfo,\n  isChannel,\n  isForum,\n  isFormFullyDisabled,\n  onClose,\n  onScreenSelect,\n}) => {\n  const { updateChatAdmin } = getActions();\n\n  const [permissions, setPermissions] = useState<ApiChatAdminRights>({});\n  const [isTouched, setIsTouched] = useState(Boolean(isNewAdmin));\n  const [isLoading, setIsLoading] = useState(false);\n  const [isDismissConfirmationDialogOpen, openDismissConfirmationDialog, closeDismissConfirmationDialog] = useFlag();\n  const [customTitle, setCustomTitle] = useState('');\n  const lang = useOldLang();\n\n  useHistoryBack({\n    isActive,\n    onBack: onClose,\n  });\n\n  const selectedChatMember = useMemo(() => {\n    const selectedAdminMember = selectedUserId ? adminMembersById?.[selectedUserId] : undefined;\n\n    // If `selectedAdminMember` variable is filled with a value, then we have already saved the administrator,\n    // so now we need to return to the list of administrators\n    if (isNewAdmin && (selectedAdminMember || !selectedUserId)) {\n      return undefined;\n    }\n\n    if (isNewAdmin) {\n      const user = getGlobal().users.byId[selectedUserId!];\n\n      return user ? {\n        userId: user.id,\n        adminRights: defaultRights,\n        customTitle: lang('ChannelAdmin'),\n        isOwner: false,\n        promotedByUserId: undefined,\n      } : undefined;\n    }\n\n    return selectedAdminMember;\n  }, [adminMembersById, defaultRights, isNewAdmin, lang, selectedUserId]);\n\n  useEffect(() => {\n    if (hasFullInfo && selectedUserId && !selectedChatMember) {\n      onScreenSelect(ManagementScreens.ChatAdministrators);\n    }\n  }, [chat, hasFullInfo, onScreenSelect, selectedChatMember, selectedUserId]);\n\n  useEffect(() => {\n    setPermissions(selectedChatMember?.adminRights || {});\n    setCustomTitle((selectedChatMember?.customTitle || '').substr(0, CUSTOM_TITLE_MAX_LENGTH));\n    setIsTouched(Boolean(isNewAdmin));\n    setIsLoading(false);\n  }, [defaultRights, isNewAdmin, selectedChatMember]);\n\n  const handlePermissionChange = useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    const { name } = e.target;\n\n    function getUpdatedPermissionValue(value: true | undefined) {\n      return value ? undefined : true;\n    }\n\n    setPermissions((p) => ({\n      ...p,\n      [name]: getUpdatedPermissionValue(p[name as keyof ApiChatAdminRights]),\n    }));\n    setIsTouched(true);\n  }, []);\n\n  const handleSavePermissions = useCallback(() => {\n    if (!selectedUserId) {\n      return;\n    }\n\n    setIsLoading(true);\n    updateChatAdmin({\n      chatId: chat.id,\n      userId: selectedUserId,\n      adminRights: permissions,\n      customTitle,\n    });\n  }, [selectedUserId, updateChatAdmin, chat.id, permissions, customTitle]);\n\n  const handleDismissAdmin = useCallback(() => {\n    if (!selectedUserId) {\n      return;\n    }\n\n    updateChatAdmin({\n      chatId: chat.id,\n      userId: selectedUserId,\n      adminRights: {},\n    });\n    closeDismissConfirmationDialog();\n  }, [chat.id, closeDismissConfirmationDialog, selectedUserId, updateChatAdmin]);\n\n  const getControlIsDisabled = useCallback((key: keyof ApiChatAdminRights) => {\n    if (isChatBasicGroup(chat)) {\n      return false;\n    }\n\n    if (isFormFullyDisabled || !chat.adminRights) {\n      return true;\n    }\n\n    if (chat.isCreator) {\n      return false;\n    }\n\n    return !chat.adminRights![key];\n  }, [chat, isFormFullyDisabled]);\n\n  const memberStatus = useMemo(() => {\n    if (isNewAdmin || !selectedChatMember) {\n      return undefined;\n    }\n\n    if (selectedChatMember.isOwner) {\n      return lang('ChannelCreator');\n    }\n\n    const promotedByUser = selectedChatMember.promotedByUserId\n      ? usersById[selectedChatMember.promotedByUserId]\n      : undefined;\n\n    if (promotedByUser) {\n      return lang('EditAdminPromotedBy', getUserFullName(promotedByUser));\n    }\n\n    return lang('ChannelAdmin');\n  }, [isNewAdmin, selectedChatMember, usersById, lang]);\n\n  const handleCustomTitleChange = useCallback((e) => {\n    const { value } = e.target;\n    setCustomTitle(value);\n    setIsTouched(true);\n  }, []);\n\n  if (!selectedChatMember) {\n    return undefined;\n  }\n\n  return (\n    <div className=\"Management\">\n      <div className=\"custom-scroll\">\n        <div className=\"section\">\n          <ListItem inactive className=\"chat-item-clickable\">\n            <PrivateChatInfo\n              userId={selectedChatMember.userId}\n              status={memberStatus}\n              forceShowSelf\n            />\n          </ListItem>\n\n          <h3 className=\"section-heading mt-4\" dir=\"auto\">{lang('EditAdminWhatCanDo')}</h3>\n\n          <div className=\"ListItem\">\n            <Checkbox\n              name=\"changeInfo\"\n              checked={Boolean(permissions.changeInfo)}\n              label={lang(isChannel ? 'EditAdminChangeChannelInfo' : 'EditAdminChangeGroupInfo')}\n              blocking\n              disabled={getControlIsDisabled('changeInfo')}\n              onChange={handlePermissionChange}\n            />\n          </div>\n          {isChannel && (\n            <div className=\"ListItem\">\n              <Checkbox\n                name=\"postMessages\"\n                checked={Boolean(permissions.postMessages)}\n                label={lang('EditAdminPostMessages')}\n                blocking\n                disabled={getControlIsDisabled('postMessages')}\n                onChange={handlePermissionChange}\n              />\n            </div>\n          )}\n          {isChannel && (\n            <div className=\"ListItem\">\n              <Checkbox\n                name=\"editMessages\"\n                checked={Boolean(permissions.editMessages)}\n                label={lang('EditAdminEditMessages')}\n                blocking\n                disabled={getControlIsDisabled('editMessages')}\n                onChange={handlePermissionChange}\n              />\n            </div>\n          )}\n          <div className=\"ListItem\">\n            <Checkbox\n              name=\"deleteMessages\"\n              checked={Boolean(permissions.deleteMessages)}\n              label={lang(isChannel ? 'EditAdminDeleteMessages' : 'EditAdminGroupDeleteMessages')}\n              blocking\n              disabled={getControlIsDisabled('deleteMessages')}\n              onChange={handlePermissionChange}\n            />\n          </div>\n          <div className=\"ListItem\">\n            <Checkbox\n              name=\"postStories\"\n              checked={Boolean(permissions.postStories)}\n              label={lang('EditAdminPostStories')}\n              blocking\n              disabled={getControlIsDisabled('postStories')}\n              onChange={handlePermissionChange}\n            />\n          </div>\n          <div className=\"ListItem\">\n            <Checkbox\n              name=\"editStories\"\n              checked={Boolean(permissions.editStories)}\n              label={lang('EditAdminEditStories')}\n              blocking\n              disabled={getControlIsDisabled('editStories')}\n              onChange={handlePermissionChange}\n            />\n          </div>\n          <div className=\"ListItem\">\n            <Checkbox\n              name=\"deleteStories\"\n              checked={Boolean(permissions.deleteStories)}\n              label={lang('EditAdminDeleteStories')}\n              blocking\n              disabled={getControlIsDisabled('deleteStories')}\n              onChange={handlePermissionChange}\n            />\n          </div>\n          {!isChannel && (\n            <div className=\"ListItem\">\n              <Checkbox\n                name=\"banUsers\"\n                checked={Boolean(permissions.banUsers)}\n                label={lang('EditAdminBanUsers')}\n                blocking\n                disabled={getControlIsDisabled('banUsers')}\n                onChange={handlePermissionChange}\n              />\n            </div>\n          )}\n          <div className=\"ListItem\">\n            <Checkbox\n              name=\"inviteUsers\"\n              checked={Boolean(permissions.inviteUsers)}\n              label={lang('EditAdminAddUsers')}\n              blocking\n              disabled={getControlIsDisabled('inviteUsers')}\n              onChange={handlePermissionChange}\n            />\n          </div>\n          {!isChannel && (\n            <div className=\"ListItem\">\n              <Checkbox\n                name=\"pinMessages\"\n                checked={Boolean(permissions.pinMessages)}\n                label={lang('EditAdminPinMessages')}\n                blocking\n                disabled={getControlIsDisabled('pinMessages')}\n                onChange={handlePermissionChange}\n              />\n            </div>\n          )}\n          <div className=\"ListItem\">\n            <Checkbox\n              name=\"addAdmins\"\n              checked={Boolean(permissions.addAdmins)}\n              label={lang('EditAdminAddAdmins')}\n              blocking\n              disabled={getControlIsDisabled('addAdmins')}\n              onChange={handlePermissionChange}\n            />\n          </div>\n          <div className=\"ListItem\">\n            <Checkbox\n              name=\"manageCall\"\n              checked={Boolean(permissions.manageCall)}\n              label={lang('StartVoipChatPermission')}\n              blocking\n              disabled={getControlIsDisabled('manageCall')}\n              onChange={handlePermissionChange}\n            />\n          </div>\n          {isForum && (\n            <div className=\"ListItem\">\n              <Checkbox\n                name=\"manageTopics\"\n                checked={Boolean(permissions.manageTopics)}\n                label={lang('ManageTopicsPermission')}\n                blocking\n                disabled={getControlIsDisabled('manageTopics')}\n                onChange={handlePermissionChange}\n              />\n            </div>\n          )}\n          {!isChannel && (\n            <div className=\"ListItem\">\n              <Checkbox\n                name=\"anonymous\"\n                checked={Boolean(permissions.anonymous)}\n                label={lang('EditAdminSendAnonymously')}\n                blocking\n                disabled={getControlIsDisabled('anonymous')}\n                onChange={handlePermissionChange}\n              />\n            </div>\n          )}\n\n          {isFormFullyDisabled && (\n            <p className=\"section-info mb-4\" dir=\"auto\">\n              {lang('Channel.EditAdmin.CannotEdit')}\n            </p>\n          )}\n\n          {!isChannel && (\n            <InputText\n              id=\"admin-title\"\n              label={lang('EditAdminRank')}\n              onChange={handleCustomTitleChange}\n              value={customTitle}\n              disabled={isFormFullyDisabled}\n              maxLength={CUSTOM_TITLE_MAX_LENGTH}\n            />\n          )}\n\n          {currentUserId !== selectedUserId && !isFormFullyDisabled && !isNewAdmin && (\n            <ListItem icon=\"delete\" ripple destructive onClick={openDismissConfirmationDialog}>\n              {lang('EditAdminRemoveAdmin')}\n            </ListItem>\n          )}\n        </div>\n      </div>\n\n      <FloatingActionButton\n        isShown={isTouched}\n        onClick={handleSavePermissions}\n        ariaLabel={lang('Save')}\n        disabled={isLoading}\n      >\n        {isLoading ? (\n          <Spinner color=\"white\" />\n        ) : (\n          <i className=\"icon icon-check\" />\n        )}\n      </FloatingActionButton>\n\n      {!isNewAdmin && (\n        <ConfirmDialog\n          isOpen={isDismissConfirmationDialogOpen}\n          onClose={closeDismissConfirmationDialog}\n          text=\"Are you sure you want to dismiss this admin?\"\n          confirmLabel={lang('Channel.Admin.Dismiss')}\n          confirmHandler={handleDismissAdmin}\n          confirmIsDestructive\n        />\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId, isPromotedByCurrentUser }): StateProps => {\n    const chat = selectChat(global, chatId)!;\n    const fullInfo = selectChatFullInfo(global, chatId);\n    const { byId: usersById } = global.users;\n    const { currentUserId } = global;\n    const isChannel = isChatChannel(chat);\n    const isFormFullyDisabled = !(chat.isCreator || isPromotedByCurrentUser);\n    const isForum = chat.isForum;\n\n    return {\n      chat,\n      usersById,\n      currentUserId,\n      isChannel,\n      isForum,\n      isFormFullyDisabled,\n      defaultRights: chat.adminRights,\n      hasFullInfo: Boolean(fullInfo),\n      adminMembersById: fullInfo?.adminMembersById,\n    };\n  },\n  (global, { chatId }) => {\n    return Boolean(selectChat(global, chatId));\n  },\n)(ManageGroupAdminRights));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useMemo, useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../../global';\n\nimport type { ApiChatMember, ApiUserStatus } from '../../../api/types';\nimport { ManagementScreens, NewChatMembersProgress } from '../../../types';\n\nimport {\n  filterUsersByName, getHasAdminRight, isChatBasicGroup,\n  isChatChannel, isUserBot, isUserRightBanned, sortUserIds,\n} from '../../../global/helpers';\nimport { selectChat, selectChatFullInfo, selectTabState } from '../../../global/selectors';\nimport { unique } from '../../../util/iteratees';\nimport sortChatIds from '../../common/helpers/sortChatIds';\n\nimport usePeerStoriesPolling from '../../../hooks/polling/usePeerStoriesPolling';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useInfiniteScroll from '../../../hooks/useInfiniteScroll';\nimport useKeyboardListNavigation from '../../../hooks/useKeyboardListNavigation';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Icon from '../../common/icons/Icon';\nimport NothingFound from '../../common/NothingFound';\nimport PrivateChatInfo from '../../common/PrivateChatInfo';\nimport FloatingActionButton from '../../ui/FloatingActionButton';\nimport InfiniteScroll from '../../ui/InfiniteScroll';\nimport InputText from '../../ui/InputText';\nimport ListItem, { type MenuItemContextAction } from '../../ui/ListItem';\nimport Loading from '../../ui/Loading';\nimport Switcher from '../../ui/Switcher';\nimport DeleteMemberModal from '../DeleteMemberModal';\n\ntype OwnProps = {\n  chatId: string;\n  isActive: boolean;\n  noAdmins?: boolean;\n  onClose: NoneToVoidFunction;\n  onScreenSelect?: (screen: ManagementScreens) => void;\n  onChatMemberSelect?: (memberId: string, isPromotedByCurrentUser?: boolean) => void;\n};\n\ntype StateProps = {\n  userStatusesById: Record<string, ApiUserStatus>;\n  members?: ApiChatMember[];\n  canAddMembers?: boolean;\n  adminMembersById?: Record<string, ApiChatMember>;\n  isChannel?: boolean;\n  localContactIds?: string[];\n  searchQuery?: string;\n  isSearching?: boolean;\n  localUserIds?: string[];\n  globalUserIds?: string[];\n  currentUserId?: string;\n  canDeleteMembers?: boolean;\n  areParticipantsHidden?: boolean;\n  canHideParticipants?: boolean;\n};\n\nconst ManageGroupMembers: FC<OwnProps & StateProps> = ({\n  chatId,\n  noAdmins,\n  members,\n  canAddMembers,\n  adminMembersById,\n  userStatusesById,\n  isChannel,\n  isActive,\n  globalUserIds,\n  localContactIds,\n  localUserIds,\n  isSearching,\n  searchQuery,\n  currentUserId,\n  canDeleteMembers,\n  areParticipantsHidden,\n  canHideParticipants,\n  onClose,\n  onScreenSelect,\n  onChatMemberSelect,\n}) => {\n  const {\n    openChat, setUserSearchQuery, closeManagement,\n    toggleParticipantsHidden, setNewChatMembersDialogState, toggleManagement,\n  } = getActions();\n  const lang = useOldLang();\n  // eslint-disable-next-line no-null/no-null\n  const inputRef = useRef<HTMLInputElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n\n  const [deletingUserId, setDeletingUserId] = useState<string | undefined>();\n\n  const adminIds = useMemo(() => {\n    return noAdmins && adminMembersById ? Object.keys(adminMembersById) : [];\n  }, [adminMembersById, noAdmins]);\n\n  const memberIds = useMemo(() => {\n    // No need for expensive global updates on users, so we avoid them\n    const usersById = getGlobal().users.byId;\n    if (!members || !usersById) {\n      return [];\n    }\n\n    const userIds = sortUserIds(\n      members.map(({ userId }) => userId),\n      usersById,\n      userStatusesById,\n    );\n\n    return noAdmins ? userIds.filter((userId) => !adminIds.includes(userId)) : userIds;\n  }, [members, userStatusesById, noAdmins, adminIds]);\n\n  usePeerStoriesPolling(memberIds);\n\n  const displayedIds = useMemo(() => {\n    // No need for expensive global updates on users, so we avoid them\n    const usersById = getGlobal().users.byId;\n    const shouldUseSearchResults = Boolean(searchQuery);\n    const listedIds = !shouldUseSearchResults\n      ? memberIds\n      : (localContactIds ? filterUsersByName(localContactIds, usersById, searchQuery) : []);\n\n    return sortChatIds(\n      unique([\n        ...listedIds,\n        ...(shouldUseSearchResults ? localUserIds || [] : []),\n        ...(shouldUseSearchResults ? globalUserIds || [] : []),\n      ]).filter((contactId) => {\n        const user = usersById[contactId];\n        if (!user) {\n          return true;\n        }\n\n        return (isChannel || user.canBeInvitedToGroup || !isUserBot(user))\n          && (!noAdmins || !adminIds.includes(contactId));\n      }),\n      true,\n    );\n  }, [memberIds, localContactIds, searchQuery, localUserIds, globalUserIds, isChannel, noAdmins, adminIds]);\n\n  const [viewportIds, getMore] = useInfiniteScroll(undefined, displayedIds, Boolean(searchQuery));\n\n  const handleMemberClick = useLastCallback((id: string) => {\n    if (noAdmins) {\n      onChatMemberSelect!(id, true);\n      onScreenSelect!(ManagementScreens.ChatNewAdminRights);\n    } else {\n      closeManagement();\n      openChat({ id });\n    }\n  });\n\n  const handleFilterChange = useLastCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    setUserSearchQuery({ query: e.target.value });\n  });\n\n  const handleKeyDown = useKeyboardListNavigation(containerRef, isActive, (index) => {\n    if (viewportIds && viewportIds.length > 0) {\n      handleMemberClick(viewportIds[index === -1 ? 0 : index]);\n    }\n  }, '.ListItem-button', true);\n\n  const handleDeleteMembersModalClose = useLastCallback(() => {\n    setDeletingUserId(undefined);\n  });\n\n  const handleToggleParticipantsHidden = useLastCallback(() => {\n    toggleParticipantsHidden({ chatId, isEnabled: !areParticipantsHidden });\n  });\n\n  const handleNewMemberDialogOpen = useLastCallback(() => {\n    toggleManagement();\n    setNewChatMembersDialogState({ newChatMembersProgress: NewChatMembersProgress.InProgress });\n  });\n\n  useHistoryBack({\n    isActive,\n    onBack: onClose,\n  });\n\n  function getMemberContextAction(memberId: string): MenuItemContextAction[] | undefined {\n    return memberId === currentUserId || !canDeleteMembers ? undefined : [{\n      title: lang('lng_context_remove_from_group'),\n      icon: 'stop',\n      handler: () => {\n        setDeletingUserId(memberId);\n      },\n    }];\n  }\n\n  function renderSearchField() {\n    return (\n      <div className=\"Management__filter\" dir={lang.isRtl ? 'rtl' : undefined}>\n        <InputText\n          ref={inputRef}\n          value={searchQuery}\n          onChange={handleFilterChange}\n          placeholder={lang('Search')}\n        />\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"Management\">\n      {noAdmins && renderSearchField()}\n      <div className=\"custom-scroll\">\n        {canHideParticipants && (\n          <div className=\"section\">\n            <ListItem icon=\"group\" ripple onClick={handleToggleParticipantsHidden}>\n              <span>{lang('ChannelHideMembers')}</span>\n              <Switcher label={lang('ChannelHideMembers')} checked={areParticipantsHidden} />\n            </ListItem>\n            <p className=\"section-info\">\n              {lang(areParticipantsHidden ? 'GroupMembers.MembersHiddenOn' : 'GroupMembers.MembersHiddenOff')}\n            </p>\n          </div>\n        )}\n        <div className=\"section\">\n          {viewportIds?.length ? (\n            <InfiniteScroll\n              className=\"picker-list custom-scroll\"\n              items={displayedIds}\n              onLoadMore={getMore}\n              noScrollRestore={Boolean(searchQuery)}\n              ref={containerRef}\n              onKeyDown={handleKeyDown}\n            >\n              {viewportIds.map((id) => (\n                <ListItem\n                  key={id}\n                  className=\"chat-item-clickable scroll-item\"\n                  // eslint-disable-next-line react/jsx-no-bind\n                  onClick={() => handleMemberClick(id)}\n                  contextActions={getMemberContextAction(id)}\n                >\n                  <PrivateChatInfo userId={id} forceShowSelf withStory />\n                </ListItem>\n              ))}\n            </InfiniteScroll>\n          ) : !isSearching && viewportIds && !viewportIds.length ? (\n            <NothingFound\n              teactOrderKey={0}\n              key=\"nothing-found\"\n              text={isChannel ? 'No subscribers found' : 'No members found'}\n            />\n          ) : (\n            <Loading />\n          )}\n        </div>\n      </div>\n      {canAddMembers && (\n        <FloatingActionButton\n          isShown\n          onClick={handleNewMemberDialogOpen}\n          ariaLabel={lang('lng_channel_add_users')}\n        >\n          <Icon name=\"add-user-filled\" />\n        </FloatingActionButton>\n      )}\n      {canDeleteMembers && (\n        <DeleteMemberModal\n          isOpen={Boolean(deletingUserId)}\n          userId={deletingUserId}\n          onClose={handleDeleteMembersModalClose}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const chat = selectChat(global, chatId);\n    const { statusesById: userStatusesById } = global.users;\n    const { members, adminMembersById, areParticipantsHidden } = selectChatFullInfo(global, chatId) || {};\n    const isChannel = chat && isChatChannel(chat);\n    const { userIds: localContactIds } = global.contactList || {};\n    const hiddenMembersMinCount = global.appConfig?.hiddenMembersMinCount;\n\n    const canDeleteMembers = chat && (chat.isCreator || getHasAdminRight(chat, 'banUsers'));\n\n    const canHideParticipants = canDeleteMembers && !isChatBasicGroup(chat) && chat.membersCount !== undefined\n    && hiddenMembersMinCount !== undefined && chat.membersCount >= hiddenMembersMinCount;\n\n    const canAddMembers = chat && ((getHasAdminRight(chat, 'inviteUsers')\n        || (!isChannel && !isUserRightBanned(chat, 'inviteUsers')))\n      || chat.isCreator\n    );\n\n    const {\n      query: searchQuery,\n      fetchingStatus,\n      globalUserIds,\n      localUserIds,\n    } = selectTabState(global).userSearch;\n\n    return {\n      areParticipantsHidden: Boolean(chat && areParticipantsHidden),\n      members,\n      canAddMembers,\n      adminMembersById,\n      userStatusesById,\n      isChannel,\n      localContactIds,\n      searchQuery,\n      isSearching: fetchingStatus,\n      globalUserIds,\n      localUserIds,\n      canDeleteMembers,\n      currentUserId: global.currentUserId,\n      canHideParticipants,\n    };\n  },\n)(ManageGroupMembers));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useMemo, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiChat, ApiChatBannedRights, ApiChatMember } from '../../../api/types';\nimport { ManagementScreens } from '../../../types';\n\nimport { selectChat, selectChatFullInfo } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\n\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useManagePermissions from '../hooks/useManagePermissions';\n\nimport PrivateChatInfo from '../../common/PrivateChatInfo';\nimport PermissionCheckboxList from '../../main/PermissionCheckboxList';\nimport FloatingActionButton from '../../ui/FloatingActionButton';\nimport ListItem from '../../ui/ListItem';\nimport Spinner from '../../ui/Spinner';\n\ntype OwnProps = {\n  chatId: string;\n  onScreenSelect: (screen: ManagementScreens) => void;\n  onChatMemberSelect: (memberId: string, isPromotedByCurrentUser?: boolean) => void;\n  onClose: NoneToVoidFunction;\n  isActive: boolean;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  currentUserId?: string;\n  removedUsersCount: number;\n  members?: ApiChatMember[];\n};\n\nconst ITEM_HEIGHT = 24 + 32;\nconst BEFORE_ITEMS_COUNT = 2;\nconst ITEMS_COUNT = 9;\n\nfunction getLangKeyForBannedRightKey(key: keyof ApiChatBannedRights) {\n  switch (key) {\n    case 'sendMessages':\n      return 'UserRestrictionsNoSend';\n    case 'sendMedia':\n      return 'UserRestrictionsNoSendMedia';\n    case 'sendStickers':\n      return 'UserRestrictionsNoSendStickers';\n    case 'embedLinks':\n      return 'UserRestrictionsNoEmbedLinks';\n    case 'sendPolls':\n      return 'UserRestrictionsNoSendPolls';\n    case 'changeInfo':\n      return 'UserRestrictionsNoChangeInfo';\n    case 'inviteUsers':\n      return 'UserRestrictionsInviteUsers';\n    case 'pinMessages':\n      return 'UserRestrictionsPinMessages';\n    case 'manageTopics':\n      return 'GroupPermission.NoManageTopics';\n    case 'sendPlain':\n      return 'UserRestrictionsNoSendText';\n    case 'sendDocs':\n      return 'UserRestrictionsNoSendDocs';\n    case 'sendRoundvideos':\n      return 'UserRestrictionsNoSendRound';\n    case 'sendVoices':\n      return 'UserRestrictionsNoSendVoice';\n    case 'sendAudios':\n      return 'UserRestrictionsNoSendMusic';\n    case 'sendVideos':\n      return 'UserRestrictionsNoSendVideos';\n    case 'sendPhotos':\n      return 'UserRestrictionsNoSendPhotos';\n    default:\n      return undefined;\n  }\n}\n\nconst ManageGroupPermissions: FC<OwnProps & StateProps> = ({\n  onScreenSelect,\n  onChatMemberSelect,\n  chat,\n  currentUserId,\n  removedUsersCount,\n  members,\n  onClose,\n  isActive,\n}) => {\n  const { updateChatDefaultBannedRights } = getActions();\n\n  const {\n    permissions, havePermissionChanged, isLoading, handlePermissionChange, setIsLoading,\n  } = useManagePermissions(chat?.defaultBannedRights);\n  const lang = useOldLang();\n\n  useHistoryBack({\n    isActive,\n    onBack: onClose,\n  });\n\n  const handleRemovedUsersClick = useCallback(() => {\n    onScreenSelect(ManagementScreens.GroupRemovedUsers);\n  }, [onScreenSelect]);\n\n  const handleAddExceptionClick = useCallback(() => {\n    onScreenSelect(ManagementScreens.GroupUserPermissionsCreate);\n  }, [onScreenSelect]);\n\n  const handleExceptionMemberClick = useCallback((member: ApiChatMember) => {\n    onChatMemberSelect(member.userId, member.promotedByUserId === currentUserId);\n    onScreenSelect(ManagementScreens.GroupUserPermissions);\n  }, [currentUserId, onChatMemberSelect, onScreenSelect]);\n\n  const [isMediaDropdownOpen, setIsMediaDropdownOpen] = useState(false);\n\n  const handleSavePermissions = useCallback(() => {\n    if (!chat) {\n      return;\n    }\n\n    setIsLoading(true);\n    updateChatDefaultBannedRights({ chatId: chat.id, bannedRights: permissions });\n  }, [chat, permissions, setIsLoading, updateChatDefaultBannedRights]);\n\n  const exceptionMembers = useMemo(() => {\n    if (!members) {\n      return [];\n    }\n\n    return members.filter(({ bannedRights }) => Boolean(bannedRights));\n  }, [members]);\n\n  const getMemberExceptions = useCallback((member: ApiChatMember) => {\n    const { bannedRights } = member;\n    if (!bannedRights || !chat) {\n      return undefined;\n    }\n\n    const { defaultBannedRights } = chat;\n\n    return Object.keys(bannedRights).reduce((result, k) => {\n      const key = k as keyof ApiChatBannedRights;\n      if (\n        !bannedRights[key]\n        || (defaultBannedRights?.[key])\n        || key === 'sendInline' || key === 'viewMessages' || key === 'sendGames'\n      ) {\n        return result;\n      }\n\n      const langKey = getLangKeyForBannedRightKey(key);\n\n      if (!langKey) {\n        return result;\n      }\n\n      const translatedString = lang(langKey);\n\n      return `${result}${!result.length ? translatedString : `, ${translatedString}`}`;\n    }, '');\n  }, [chat, lang]);\n\n  return (\n    <div\n      className=\"Management with-shifted-dropdown\"\n      style={`--shift-height: ${ITEMS_COUNT * ITEM_HEIGHT}px;`\n        + `--before-shift-height: ${BEFORE_ITEMS_COUNT * ITEM_HEIGHT}px;`}\n    >\n      <div className=\"custom-scroll\">\n        <div className=\"section without-bottom-shadow\">\n          <h3 className=\"section-heading\" dir=\"auto\">{lang('ChannelPermissionsHeader')}</h3>\n          <PermissionCheckboxList\n            chatId={chat?.id}\n            isMediaDropdownOpen={isMediaDropdownOpen}\n            setIsMediaDropdownOpen={setIsMediaDropdownOpen}\n            handlePermissionChange={handlePermissionChange}\n            permissions={permissions}\n            dropdownClassName=\"DropdownListTrap\"\n            className={buildClassName(\n              'DropdownList',\n              isMediaDropdownOpen && 'DropdownList--open',\n            )}\n            shiftedClassName={buildClassName('part', isMediaDropdownOpen && 'shifted')}\n          />\n        </div>\n\n        <div\n          className={buildClassName(\n            'section',\n            isMediaDropdownOpen && 'shifted',\n          )}\n        >\n          <ListItem\n            icon=\"delete-user\"\n            multiline\n            narrow\n            onClick={handleRemovedUsersClick}\n          >\n            <span className=\"title\">{lang('ChannelBlockedUsers')}</span>\n            <span className=\"subtitle\">{removedUsersCount}</span>\n          </ListItem>\n        </div>\n\n        <div\n          className={buildClassName(\n            'section',\n            isMediaDropdownOpen && 'shifted',\n          )}\n        >\n          <h3 className=\"section-heading\" dir=\"auto\">{lang('PrivacyExceptions')}</h3>\n\n          <ListItem\n            icon=\"add-user\"\n            onClick={handleAddExceptionClick}\n          >\n            {lang('ChannelAddException')}\n          </ListItem>\n\n          {exceptionMembers.map((member) => (\n            <ListItem\n              key={member.userId}\n              className=\"chat-item-clickable exceptions-member\"\n              // eslint-disable-next-line react/jsx-no-bind\n              onClick={() => handleExceptionMemberClick(member)}\n            >\n              <PrivateChatInfo\n                userId={member.userId}\n                status={getMemberExceptions(member)}\n                forceShowSelf\n              />\n            </ListItem>\n          ))}\n        </div>\n      </div>\n\n      <FloatingActionButton\n        isShown={havePermissionChanged}\n        onClick={handleSavePermissions}\n        ariaLabel={lang('Save')}\n        disabled={isLoading}\n      >\n        {isLoading ? (\n          <Spinner color=\"white\" />\n        ) : (\n          <i className=\"icon icon-check\" />\n        )}\n      </FloatingActionButton>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const chat = selectChat(global, chatId);\n    const fullInfo = selectChatFullInfo(global, chatId);\n\n    return {\n      chat,\n      currentUserId: global.currentUserId,\n      removedUsersCount: fullInfo?.kickedMembers?.length || 0,\n      members: fullInfo?.members,\n    };\n  },\n)(ManageGroupPermissions));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useMemo, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiChat, ApiChatBannedRights, ApiChatMember } from '../../../api/types';\nimport { ManagementScreens } from '../../../types';\n\nimport { selectChat, selectChatFullInfo } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useLang from '../../../hooks/useLang';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useManagePermissions from '../hooks/useManagePermissions';\n\nimport PrivateChatInfo from '../../common/PrivateChatInfo';\nimport PermissionCheckboxList from '../../main/PermissionCheckboxList';\nimport ConfirmDialog from '../../ui/ConfirmDialog';\nimport FloatingActionButton from '../../ui/FloatingActionButton';\nimport ListItem from '../../ui/ListItem';\nimport Spinner from '../../ui/Spinner';\n\ntype OwnProps = {\n  chatId: string;\n  selectedChatMemberId?: string;\n  isPromotedByCurrentUser?: boolean;\n  onScreenSelect: (screen: ManagementScreens) => void;\n  onClose: NoneToVoidFunction;\n  isActive: boolean;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  hasFullInfo?: boolean;\n  members?: ApiChatMember[];\n  isFormFullyDisabled?: boolean;\n};\n\nconst ITEM_HEIGHT = 24 + 32;\nconst SHIFT_HEIGHT_MINUS = 1;\nconst BEFORE_ITEMS_COUNT = 2;\nconst BEFORE_USER_INFO_HEIGHT = 96;\nconst ITEMS_COUNT = 9;\n\nconst ManageGroupUserPermissions: FC<OwnProps & StateProps> = ({\n  chat,\n  selectedChatMemberId,\n  hasFullInfo,\n  members,\n  onScreenSelect,\n  isFormFullyDisabled,\n  onClose,\n  isActive,\n}) => {\n  const { updateChatMemberBannedRights } = getActions();\n\n  const selectedChatMember = useMemo(() => {\n    if (!members) {\n      return undefined;\n    }\n\n    return members.find(({ userId }) => userId === selectedChatMemberId);\n  }, [members, selectedChatMemberId]);\n\n  const {\n    permissions, havePermissionChanged, isLoading, handlePermissionChange, setIsLoading,\n  } = useManagePermissions(selectedChatMember?.bannedRights || chat?.defaultBannedRights);\n  const [isBanConfirmationDialogOpen, openBanConfirmationDialog, closeBanConfirmationDialog] = useFlag();\n  const lang = useLang();\n  const oldLang = useOldLang();\n\n  useHistoryBack({\n    isActive,\n    onBack: onClose,\n  });\n\n  useEffect(() => {\n    if (hasFullInfo && selectedChatMemberId && !selectedChatMember) {\n      onScreenSelect(ManagementScreens.GroupPermissions);\n    }\n  }, [chat, hasFullInfo, onScreenSelect, selectedChatMember, selectedChatMemberId]);\n\n  const handleSavePermissions = useCallback(() => {\n    if (!chat || !selectedChatMemberId) {\n      return;\n    }\n\n    setIsLoading(true);\n    updateChatMemberBannedRights({\n      chatId: chat.id,\n      userId: selectedChatMemberId,\n      bannedRights: permissions,\n    });\n  }, [chat, selectedChatMemberId, setIsLoading, updateChatMemberBannedRights, permissions]);\n\n  const handleBanFromGroup = useCallback(() => {\n    if (!chat || !selectedChatMemberId) {\n      return;\n    }\n\n    updateChatMemberBannedRights({\n      chatId: chat.id,\n      userId: selectedChatMemberId,\n      bannedRights: {\n        viewMessages: true,\n      },\n    });\n  }, [chat, selectedChatMemberId, updateChatMemberBannedRights]);\n\n  const getControlIsDisabled = useCallback((key: Exclude<keyof ApiChatBannedRights, 'untilDate'>) => {\n    if (isFormFullyDisabled) {\n      return true;\n    }\n\n    if (!chat || !chat.defaultBannedRights) {\n      return false;\n    }\n\n    return chat.defaultBannedRights[key];\n  }, [chat, isFormFullyDisabled]);\n\n  const [isMediaDropdownOpen, setIsMediaDropdownOpen] = useState(false);\n\n  if (!selectedChatMember) {\n    return undefined;\n  }\n\n  return (\n    <div\n      className=\"Management with-shifted-dropdown\"\n      style={`--shift-height: ${ITEMS_COUNT * ITEM_HEIGHT - SHIFT_HEIGHT_MINUS}px;`\n           + `--before-shift-height: ${BEFORE_ITEMS_COUNT * ITEM_HEIGHT + BEFORE_USER_INFO_HEIGHT}px;`}\n    >\n      <div className=\"custom-scroll\">\n        <div className=\"section without-bottom-shadow\">\n          <ListItem inactive className=\"chat-item-clickable\">\n            <PrivateChatInfo userId={selectedChatMember.userId} forceShowSelf />\n          </ListItem>\n\n          <h3 className=\"section-heading mt-4\" dir=\"auto\">{oldLang('UserRestrictionsCanDo')}</h3>\n          <PermissionCheckboxList\n            chatId={chat?.id}\n            isMediaDropdownOpen={isMediaDropdownOpen}\n            setIsMediaDropdownOpen={setIsMediaDropdownOpen}\n            handlePermissionChange={handlePermissionChange}\n            permissions={permissions}\n            className={buildClassName(\n              'DropdownList',\n              isMediaDropdownOpen && 'DropdownList--open',\n            )}\n            dropdownClassName=\"DropdownListTrap\"\n            shiftedClassName={buildClassName('part', isMediaDropdownOpen && 'shifted')}\n            getControlIsDisabled={getControlIsDisabled}\n          />\n        </div>\n\n        {!isFormFullyDisabled && (\n          <div\n            className={buildClassName(\n              'section',\n              isMediaDropdownOpen && 'shifted',\n            )}\n          >\n            <ListItem icon=\"delete-user\" ripple destructive onClick={openBanConfirmationDialog}>\n              {oldLang('UserRestrictionsBlock')}\n            </ListItem>\n          </div>\n        )}\n      </div>\n\n      <FloatingActionButton\n        isShown={havePermissionChanged}\n        onClick={handleSavePermissions}\n        ariaLabel={oldLang('Save')}\n        disabled={isLoading}\n      >\n        {isLoading ? (\n          <Spinner color=\"white\" />\n        ) : (\n          <i className=\"icon icon-check\" />\n        )}\n      </FloatingActionButton>\n\n      <ConfirmDialog\n        isOpen={isBanConfirmationDialogOpen}\n        onClose={closeBanConfirmationDialog}\n        text={lang('GroupManagementBanUserConfirm')}\n        confirmLabel=\"Remove\"\n        confirmHandler={handleBanFromGroup}\n        confirmIsDestructive\n      />\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId, isPromotedByCurrentUser }): StateProps => {\n    const chat = selectChat(global, chatId)!;\n    const fullInfo = selectChatFullInfo(global, chatId);\n    const isFormFullyDisabled = !(chat.isCreator || isPromotedByCurrentUser);\n\n    return {\n      chat,\n      isFormFullyDisabled,\n      hasFullInfo: Boolean(fullInfo),\n      members: fullInfo?.members,\n    };\n  },\n  (global, { chatId }) => {\n    return Boolean(selectChat(global, chatId));\n  },\n)(ManageGroupUserPermissions));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback, useMemo } from '../../../lib/teact/teact';\nimport { withGlobal } from '../../../global';\n\nimport type { ApiChatMember, ApiUser, ApiUserStatus } from '../../../api/types';\nimport { ManagementScreens } from '../../../types';\n\nimport { isChatChannel, sortUserIds } from '../../../global/helpers';\nimport { selectChat, selectChatFullInfo } from '../../../global/selectors';\n\nimport useHistoryBack from '../../../hooks/useHistoryBack';\n\nimport NothingFound from '../../common/NothingFound';\nimport PrivateChatInfo from '../../common/PrivateChatInfo';\nimport ListItem from '../../ui/ListItem';\n\ntype OwnProps = {\n  chatId: string;\n  onScreenSelect: (screen: ManagementScreens) => void;\n  onChatMemberSelect: (memberId: string) => void;\n  onClose: NoneToVoidFunction;\n  isActive: boolean;\n};\n\ntype StateProps = {\n  usersById: Record<string, ApiUser>;\n  userStatusesById: Record<string, ApiUserStatus>;\n  members?: ApiChatMember[];\n  isChannel?: boolean;\n};\n\nconst ManageGroupUserPermissionsCreate: FC<OwnProps & StateProps> = ({\n  usersById,\n  userStatusesById,\n  members,\n  isChannel,\n  onScreenSelect,\n  onChatMemberSelect,\n  onClose,\n  isActive,\n}) => {\n  useHistoryBack({\n    isActive,\n    onBack: onClose,\n  });\n\n  const memberIds = useMemo(() => {\n    if (!members || !usersById) {\n      return undefined;\n    }\n\n    return sortUserIds(\n      members.filter((member) => !member.isOwner).map(({ userId }) => userId),\n      usersById,\n      userStatusesById,\n    );\n  }, [members, usersById, userStatusesById]);\n\n  const handleExceptionMemberClick = useCallback((memberId: string) => {\n    onChatMemberSelect(memberId);\n    onScreenSelect(ManagementScreens.GroupUserPermissions);\n  }, [onChatMemberSelect, onScreenSelect]);\n\n  return (\n    <div className=\"Management\">\n      <div className=\"custom-scroll\">\n        <div className=\"section\" teactFastList>\n          {memberIds ? (\n            memberIds.map((id, i) => (\n              <ListItem\n                key={id}\n                teactOrderKey={i}\n                className=\"chat-item-clickable scroll-item\"\n                // eslint-disable-next-line react/jsx-no-bind\n                onClick={() => handleExceptionMemberClick(id)}\n              >\n                <PrivateChatInfo userId={id} forceShowSelf />\n              </ListItem>\n            ))\n          ) : (\n            <NothingFound\n              teactOrderKey={0}\n              key=\"nothing-found\"\n              text={isChannel ? 'No subscribers found' : 'No members found'}\n            />\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const chat = selectChat(global, chatId);\n    const { byId: usersById, statusesById: userStatusesById } = global.users;\n    const members = selectChatFullInfo(global, chatId)?.members;\n    const isChannel = chat && isChatChannel(chat);\n\n    return {\n      members,\n      usersById,\n      userStatusesById,\n      isChannel,\n    };\n  },\n)(ManageGroupUserPermissionsCreate));\n","import type { ChangeEvent } from 'react';\nimport type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback, useState } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiExportedInvite } from '../../../api/types';\nimport { ManagementScreens } from '../../../types';\n\nimport { selectTabState } from '../../../global/selectors';\nimport { formatFullDate, formatTime } from '../../../util/dates/dateFormat';\nimport { getServerTime } from '../../../util/serverTime';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useSyncEffect from '../../../hooks/useSyncEffect';\n\nimport CalendarModal from '../../common/CalendarModal';\nimport Button from '../../ui/Button';\nimport Checkbox from '../../ui/Checkbox';\nimport FloatingActionButton from '../../ui/FloatingActionButton';\nimport InputText from '../../ui/InputText';\nimport RadioGroup from '../../ui/RadioGroup';\n\nconst DEFAULT_USAGE_LIMITS = [1, 10, 100];\nconst DEFAULT_EXPIRE_DATE = {\n  hour: 3600000,\n  day: 86400000,\n  week: 604800000,\n};\nconst DEFAULT_CUSTOM_EXPIRE_DATE = DEFAULT_EXPIRE_DATE.hour;\n\ntype OwnProps = {\n  chatId: string;\n  onClose: NoneToVoidFunction;\n  onScreenSelect: (screen: ManagementScreens) => void;\n  isActive: boolean;\n};\n\ntype StateProps = {\n  editingInvite?: ApiExportedInvite;\n};\n\nconst ManageInvite: FC<OwnProps & StateProps> = ({\n  chatId,\n  editingInvite,\n  isActive,\n  onClose,\n  onScreenSelect,\n}) => {\n  const { editExportedChatInvite, exportChatInvite } = getActions();\n\n  const lang = useOldLang();\n  const [isCalendarOpened, openCalendar, closeCalendar] = useFlag();\n  const [isRequestNeeded, setIsRequestNeeded] = useState(false);\n  const [title, setTitle] = useState('');\n  const [customExpireDate, setCustomExpireDate] = useState<number>(Date.now() + DEFAULT_CUSTOM_EXPIRE_DATE);\n  const [selectedExpireOption, setSelectedExpireOption] = useState('unlimited');\n  const [customUsageLimit, setCustomUsageLimit] = useState<number | undefined>(10);\n  const [selectedUsageOption, setSelectedUsageOption] = useState('0');\n  const [isSubmitBlocked, setIsSubmitBlocked] = useState(false);\n\n  useHistoryBack({\n    isActive,\n    onBack: onClose,\n  });\n\n  useSyncEffect(([oldEditingInvite]) => {\n    if (oldEditingInvite === editingInvite) return;\n    if (!editingInvite) {\n      setTitle('');\n      setSelectedExpireOption('unlimited');\n      setSelectedUsageOption('0');\n      setCustomExpireDate(getServerTime() * 1000 + DEFAULT_CUSTOM_EXPIRE_DATE);\n      setCustomUsageLimit(10);\n      setIsRequestNeeded(false);\n    } else {\n      const {\n        title: editingTitle, usageLimit, expireDate, isRequestNeeded: editingIsRequestNeeded,\n      } = editingInvite;\n      if (editingTitle) setTitle(editingTitle);\n      if (usageLimit) {\n        setSelectedUsageOption(DEFAULT_USAGE_LIMITS.includes(usageLimit) ? usageLimit.toString() : 'custom');\n        setCustomUsageLimit(usageLimit);\n      }\n      if (expireDate) {\n        const minSafeDate = getServerTime() + DEFAULT_CUSTOM_EXPIRE_DATE;\n        setSelectedExpireOption('custom');\n        setCustomExpireDate(Math.max(expireDate, minSafeDate) * 1000);\n      }\n      if (editingIsRequestNeeded) {\n        setIsRequestNeeded(true);\n      }\n    }\n  }, [editingInvite]);\n\n  const handleIsRequestChange = useCallback((e: ChangeEvent<HTMLInputElement>) => {\n    setIsRequestNeeded(e.target.checked);\n  }, []);\n\n  const handleTitleChange = useCallback((e: ChangeEvent<HTMLInputElement>) => {\n    setTitle(e.target.value);\n  }, []);\n\n  const handleCustomUsageLimitChange = useCallback((e: ChangeEvent<HTMLInputElement>) => {\n    setCustomUsageLimit(Number.parseInt(e.target.value, 10));\n  }, []);\n\n  const handleExpireDateChange = useCallback((date: Date) => {\n    setCustomExpireDate(date.getTime());\n    closeCalendar();\n  }, [closeCalendar]);\n\n  const handleSaveClick = useCallback(() => {\n    setIsSubmitBlocked(true);\n    const usageLimit = selectedUsageOption === 'custom' ? customUsageLimit : Number(selectedUsageOption);\n    let expireDate;\n    switch (selectedExpireOption) {\n      case 'custom':\n        expireDate = getServerTime() + (customExpireDate - Date.now()) / 1000;\n        break;\n      case 'hour':\n      case 'day':\n      case 'week':\n        expireDate = getServerTime() + DEFAULT_EXPIRE_DATE[selectedExpireOption] / 1000;\n        break;\n      case 'unlimited':\n        expireDate = 0;\n        break;\n      default:\n        expireDate = undefined;\n    }\n\n    if (editingInvite) {\n      editExportedChatInvite({\n        link: editingInvite.link,\n        chatId,\n        title,\n        isRequestNeeded,\n        expireDate,\n        usageLimit,\n      });\n    } else {\n      exportChatInvite({\n        chatId,\n        title,\n        isRequestNeeded,\n        expireDate,\n        usageLimit,\n      });\n    }\n    onScreenSelect(ManagementScreens.Invites);\n  }, [\n    chatId, customExpireDate, customUsageLimit, editExportedChatInvite, editingInvite,\n    exportChatInvite, isRequestNeeded, selectedExpireOption, selectedUsageOption, title, onScreenSelect,\n  ]);\n\n  return (\n    <div className=\"Management ManageInvite\">\n      <div className=\"custom-scroll\">\n        <div className=\"section\">\n          <Checkbox\n            label={lang('ApproveNewMembers')}\n            subLabel={lang('ApproveNewMembersDescription')}\n            checked={isRequestNeeded}\n            onChange={handleIsRequestChange}\n          />\n        </div>\n        <div className=\"section\">\n          <InputText\n            className=\"link-name\"\n            placeholder={lang('LinkNameHint')}\n            value={title}\n            onChange={handleTitleChange}\n          />\n          <p className=\"text-muted hint\">{lang('LinkNameHelp')}</p>\n        </div>\n        <div className=\"section\">\n          <div className=\"section-header\">{lang('LimitByPeriod')}</div>\n          <RadioGroup\n            name=\"expireOptions\"\n            options={[\n              {\n                value: 'hour',\n                label: lang('Hours', 1),\n              },\n              {\n                value: 'day',\n                label: lang('Days', 1),\n              },\n              {\n                value: 'week',\n                label: lang('Weeks', 1),\n              },\n              {\n                value: 'unlimited',\n                label: lang('NoLimit'),\n              },\n              {\n                value: 'custom',\n                label: lang('lng_group_invite_expire_custom'),\n              },\n            ]}\n            onChange={setSelectedExpireOption}\n            selected={selectedExpireOption}\n          />\n          {selectedExpireOption === 'custom' && (\n            <Button className=\"expire-limit\" isText onClick={openCalendar}>\n              {formatFullDate(lang, customExpireDate)} {formatTime(lang, customExpireDate)}\n            </Button>\n          )}\n          <p className=\"text-muted hint\">{lang('TimeLimitHelp')}</p>\n        </div>\n        {!isRequestNeeded && (\n          <div className=\"section\">\n            <div className=\"section-header\">{lang('LimitNumberOfUses')}</div>\n            <RadioGroup\n              name=\"usageOptions\"\n              options={[\n                ...DEFAULT_USAGE_LIMITS.map((n) => ({ value: n.toString(), label: n })),\n                {\n                  value: '0',\n                  label: lang('NoLimit'),\n                },\n                {\n                  value: 'custom',\n                  label: lang('lng_group_invite_usage_custom'),\n                },\n              ]}\n              onChange={setSelectedUsageOption}\n              selected={selectedUsageOption}\n            />\n            {selectedUsageOption === 'custom' && (\n              <input\n                className=\"form-control usage-limit\"\n                type=\"number\"\n                min=\"1\"\n                max=\"99999\"\n                value={customUsageLimit}\n                onChange={handleCustomUsageLimitChange}\n              />\n            )}\n            <p className=\"text-muted hint\">{lang('UsesLimitHelp')}</p>\n          </div>\n        )}\n        <FloatingActionButton\n          isShown\n          onClick={handleSaveClick}\n          disabled={isSubmitBlocked}\n          ariaLabel={editingInvite ? lang('SaveLink') : lang('CreateLink')}\n        >\n          <i className=\"icon icon-check\" />\n        </FloatingActionButton>\n      </div>\n      <CalendarModal\n        isOpen={isCalendarOpened}\n        isFutureMode\n        withTimePicker\n        onClose={closeCalendar}\n        onSubmit={handleExpireDateChange}\n        selectedAt={customExpireDate}\n        submitButtonLabel={lang('Save')}\n      />\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const { editingInvite } = selectTabState(global).management.byChatId[chatId] || {};\n\n    return {\n      editingInvite,\n    };\n  },\n)(ManageInvite));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback, useEffect } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiChatInviteImporter, ApiExportedInvite, ApiUser } from '../../../api/types';\n\nimport { isChatChannel } from '../../../global/helpers';\nimport { selectChat, selectTabState } from '../../../global/selectors';\nimport { copyTextToClipboard } from '../../../util/clipboard';\nimport { formatFullDate, formatMediaDateTime, formatTime } from '../../../util/dates/dateFormat';\nimport { getServerTime } from '../../../util/serverTime';\n\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport PrivateChatInfo from '../../common/PrivateChatInfo';\nimport Button from '../../ui/Button';\nimport ListItem from '../../ui/ListItem';\nimport Spinner from '../../ui/Spinner';\n\ntype OwnProps = {\n  chatId: string;\n  onClose: NoneToVoidFunction;\n  isActive: boolean;\n};\n\ntype StateProps = {\n  invite?: ApiExportedInvite;\n  importers?: ApiChatInviteImporter[];\n  requesters?: ApiChatInviteImporter[];\n  admin?: ApiUser;\n  isChannel?: boolean;\n};\n\nconst BULLET = '\\u2022';\n\nconst ManageInviteInfo: FC<OwnProps & StateProps> = ({\n  chatId,\n  invite,\n  importers,\n  requesters,\n  isChannel,\n  isActive,\n  onClose,\n}) => {\n  const {\n    showNotification,\n    loadChatInviteImporters,\n    loadChatInviteRequesters,\n    openChat,\n  } = getActions();\n\n  const lang = useOldLang();\n  const {\n    usage = 0, usageLimit, link, adminId,\n  } = invite || {};\n  const expireDate = invite?.expireDate && (invite.expireDate - getServerTime()) * 1000 + Date.now();\n  const isExpired = ((invite?.expireDate || 0) - getServerTime()) < 0;\n\n  useEffect(() => {\n    if (link) {\n      loadChatInviteImporters({ chatId, link });\n      loadChatInviteRequesters({ chatId, link });\n    }\n  }, [chatId, link, loadChatInviteImporters, loadChatInviteRequesters]);\n\n  const handleCopyClicked = useCallback(() => {\n    copyTextToClipboard(invite!.link);\n    showNotification({\n      message: lang('LinkCopied'),\n    });\n  }, [invite, lang, showNotification]);\n\n  useHistoryBack({\n    isActive,\n    onBack: onClose,\n  });\n\n  const renderImporters = () => {\n    if (!importers?.length && requesters?.length) return undefined;\n    if (!importers) return <Spinner />;\n    return (\n      <div className=\"section\">\n        <p>{importers.length ? lang('PeopleJoined', usage) : lang('NoOneJoined')}</p>\n        <p className=\"text-muted\">\n          {!importers.length && (\n            usageLimit ? lang('PeopleCanJoinViaLinkCount', usageLimit - usage) : lang('NoOneJoinedYet')\n          )}\n          {importers.map((importer) => {\n            const joinTime = formatMediaDateTime(lang, importer.date * 1000, true);\n            const status = importer.isFromChatList ? `${joinTime} ${BULLET} ${lang('JoinedViaFolder')}` : joinTime;\n            return (\n              <ListItem\n                className=\"chat-item-clickable scroll-item small-icon\"\n                // eslint-disable-next-line react/jsx-no-bind\n                onClick={() => openChat({ id: importer.userId })}\n              >\n                <PrivateChatInfo\n                  userId={importer.userId}\n                  status={status}\n                  forceShowSelf\n                />\n              </ListItem>\n            );\n          })}\n        </p>\n      </div>\n    );\n  };\n\n  const renderRequesters = () => {\n    if (invite?.isRevoked) return undefined;\n    if (!requesters && importers) return <Spinner />;\n    if (!requesters?.length) return undefined;\n    return (\n      <div className=\"section\">\n        <p>{isChannel ? lang('SubscribeRequests') : lang('MemberRequests')}</p>\n        <p className=\"text-muted\">\n          {requesters.map((requester) => (\n            <ListItem\n              className=\"chat-item-clickable scroll-item small-icon\"\n              // eslint-disable-next-line react/jsx-no-bind\n              onClick={() => openChat({ id: requester.userId })}\n            >\n              <PrivateChatInfo\n                userId={requester.userId}\n                status={formatMediaDateTime(lang, requester.date * 1000, true)}\n                forceShowSelf\n              />\n            </ListItem>\n          ))}\n        </p>\n      </div>\n    );\n  };\n\n  return (\n    <div className=\"Management ManageInviteInfo\">\n      <div className=\"custom-scroll\">\n        {!invite && (\n          <p className=\"text-muted\">{lang('Loading')}</p>\n        )}\n        {invite && (\n          <>\n            <div className=\"section\">\n              <h3 className=\"link-title\">{invite.title || invite.link}</h3>\n              <input\n                className=\"form-control\"\n                value={invite.link}\n                readOnly\n                onClick={handleCopyClicked}\n              />\n              <Button className=\"copy-link\" onClick={handleCopyClicked}>{lang('CopyLink')}</Button>\n              {Boolean(expireDate) && (\n                <p className=\"text-muted\">\n                  {isExpired\n                    ? lang('ExpiredLink')\n                    : lang('LinkExpiresIn', `${formatFullDate(lang, expireDate)} ${formatTime(lang, expireDate)}`)}\n                </p>\n              )}\n            </div>\n            {adminId && (\n              <div className=\"section\">\n                <p>{lang('LinkCreatedeBy')}</p>\n                <ListItem\n                  className=\"chat-item-clickable scroll-item small-icon\"\n                  // eslint-disable-next-line react/jsx-no-bind\n                  onClick={() => openChat({ id: adminId })}\n                >\n                  <PrivateChatInfo\n                    userId={adminId}\n                    status={formatMediaDateTime(lang, invite.date * 1000, true)}\n                    forceShowSelf\n                  />\n                </ListItem>\n              </div>\n            )}\n            {renderImporters()}\n            {renderRequesters()}\n          </>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const { inviteInfo } = selectTabState(global).management.byChatId[chatId] || {};\n    const { invite, importers, requesters } = inviteInfo || {};\n    const chat = selectChat(global, chatId);\n    const isChannel = chat && isChatChannel(chat);\n\n    return {\n      invite,\n      importers,\n      requesters,\n      isChannel,\n    };\n  },\n)(ManageInviteInfo));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useMemo, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiChat, ApiExportedInvite } from '../../../api/types';\nimport { ManagementScreens } from '../../../types';\n\nimport { STICKER_SIZE_INVITES, TME_LINK_PREFIX } from '../../../config';\nimport { getMainUsername, isChatChannel } from '../../../global/helpers';\nimport { selectChat, selectTabState } from '../../../global/selectors';\nimport { copyTextToClipboard } from '../../../util/clipboard';\nimport { formatCountdown, MILLISECONDS_IN_DAY } from '../../../util/dates/dateFormat';\nimport { getServerTime } from '../../../util/serverTime';\nimport { LOCAL_TGS_URLS } from '../../common/helpers/animatedAssets';\n\nimport useInterval from '../../../hooks/schedulers/useInterval';\nimport useFlag from '../../../hooks/useFlag';\nimport useForceUpdate from '../../../hooks/useForceUpdate';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport AnimatedIcon from '../../common/AnimatedIcon';\nimport LinkField from '../../common/LinkField';\nimport NothingFound from '../../common/NothingFound';\nimport Button from '../../ui/Button';\nimport ConfirmDialog from '../../ui/ConfirmDialog';\nimport ListItem, { type MenuItemContextAction } from '../../ui/ListItem';\n\ntype OwnProps = {\n  chatId: string;\n  onClose: NoneToVoidFunction;\n  onScreenSelect: (screen: ManagementScreens) => void;\n  isActive: boolean;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  isChannel?: boolean;\n  exportedInvites?: ApiExportedInvite[];\n  revokedExportedInvites?: ApiExportedInvite[];\n};\n\nconst BULLET = '\\u2022';\n\nfunction inviteComparator(i1: ApiExportedInvite, i2: ApiExportedInvite) {\n  const { isPermanent: i1IsPermanent, usage: i1Usage = 0, date: i1Date } = i1;\n  const { isPermanent: i2IsPermanent, usage: i2Usage = 0, date: i2Date } = i2;\n  if (i1IsPermanent || i2IsPermanent) return Number(i1IsPermanent) - Number(i2IsPermanent);\n  if (i1Usage || i2Usage) return i2Usage - i1Usage;\n  return i2Date - i1Date;\n}\n\nconst ManageInvites: FC<OwnProps & StateProps> = ({\n  chatId,\n  chat,\n  exportedInvites,\n  revokedExportedInvites,\n  isActive,\n  isChannel,\n  onClose,\n  onScreenSelect,\n}) => {\n  const {\n    setEditingExportedInvite,\n    showNotification,\n    editExportedChatInvite,\n    deleteExportedChatInvite,\n    deleteRevokedExportedChatInvites,\n    setOpenedInviteInfo,\n  } = getActions();\n\n  const lang = useOldLang();\n\n  const [isDeleteRevokeAllDialogOpen, openDeleteRevokeAllDialog, closeDeleteRevokeAllDialog] = useFlag();\n  const [isRevokeDialogOpen, openRevokeDialog, closeRevokeDialog] = useFlag();\n  const [revokingInvite, setRevokingInvite] = useState<ApiExportedInvite | undefined>();\n  const [isDeleteDialogOpen, openDeleteDialog, closeDeleteDialog] = useFlag();\n  const [deletingInvite, setDeletingInvite] = useState<ApiExportedInvite | undefined>();\n\n  useHistoryBack({\n    isActive,\n    onBack: onClose,\n  });\n\n  const hasDetailedCountdown = useMemo(() => {\n    if (!exportedInvites) return undefined;\n    return exportedInvites\n      .some(({ expireDate }) => (\n        expireDate && (expireDate - getServerTime() < MILLISECONDS_IN_DAY / 1000)\n      ));\n  }, [exportedInvites]);\n  const forceUpdate = useForceUpdate();\n  useInterval(forceUpdate, hasDetailedCountdown ? 1000 : undefined);\n\n  const chatMainUsername = useMemo(() => chat && getMainUsername(chat), [chat]);\n  const primaryInvite = exportedInvites?.find(({ isPermanent }) => isPermanent);\n  const primaryInviteLink = chatMainUsername ? `${TME_LINK_PREFIX}${chatMainUsername}` : primaryInvite?.link;\n  const temporalInvites = useMemo(() => {\n    const invites = chat?.usernames ? exportedInvites : exportedInvites?.filter(({ isPermanent }) => !isPermanent);\n    return invites?.sort(inviteComparator);\n  }, [chat?.usernames, exportedInvites]);\n\n  const editInvite = (invite: ApiExportedInvite) => {\n    setEditingExportedInvite({ chatId, invite });\n    onScreenSelect(ManagementScreens.EditInvite);\n  };\n\n  const revokeInvite = useCallback((invite: ApiExportedInvite) => {\n    const {\n      link, title, isRequestNeeded, expireDate, usageLimit,\n    } = invite;\n    editExportedChatInvite({\n      chatId,\n      link,\n      title,\n      isRequestNeeded,\n      expireDate,\n      usageLimit,\n      isRevoked: true,\n    });\n  }, [chatId, editExportedChatInvite]);\n\n  const askToRevoke = useCallback((invite: ApiExportedInvite) => {\n    setRevokingInvite(invite);\n    openRevokeDialog();\n  }, [openRevokeDialog]);\n\n  const handleRevoke = useCallback(() => {\n    if (!revokingInvite) return;\n    revokeInvite(revokingInvite);\n    setRevokingInvite(undefined);\n    closeRevokeDialog();\n  }, [closeRevokeDialog, revokeInvite, revokingInvite]);\n\n  const handleCreateNewClick = useCallback(() => {\n    onScreenSelect(ManagementScreens.EditInvite);\n  }, [onScreenSelect]);\n\n  const handlePrimaryRevoke = useCallback(() => {\n    if (primaryInvite) {\n      askToRevoke(primaryInvite);\n    }\n  }, [askToRevoke, primaryInvite]);\n\n  const handleDeleteAllRevoked = useCallback(() => {\n    deleteRevokedExportedChatInvites({ chatId });\n    closeDeleteRevokeAllDialog();\n  }, [chatId, closeDeleteRevokeAllDialog, deleteRevokedExportedChatInvites]);\n\n  const showInviteInfo = useCallback((invite: ApiExportedInvite) => {\n    setOpenedInviteInfo({ chatId, invite });\n    onScreenSelect(ManagementScreens.InviteInfo);\n  }, [chatId, onScreenSelect, setOpenedInviteInfo]);\n\n  const deleteInvite = useCallback((invite: ApiExportedInvite) => {\n    deleteExportedChatInvite({ chatId, link: invite.link });\n  }, [chatId, deleteExportedChatInvite]);\n\n  const askToDelete = useCallback((invite: ApiExportedInvite) => {\n    setDeletingInvite(invite);\n    openDeleteDialog();\n  }, [openDeleteDialog]);\n\n  const handleDelete = useCallback(() => {\n    if (!deletingInvite) return;\n    deleteInvite(deletingInvite);\n    setDeletingInvite(undefined);\n    closeDeleteDialog();\n  }, [closeDeleteDialog, deleteInvite, deletingInvite]);\n\n  const copyLink = useCallback((link: string) => {\n    copyTextToClipboard(link);\n    showNotification({\n      message: lang('LinkCopied'),\n    });\n  }, [lang, showNotification]);\n\n  const prepareUsageText = (invite: ApiExportedInvite) => {\n    const {\n      usage = 0, usageLimit, expireDate, isPermanent, requested, isRevoked,\n    } = invite;\n    let text = '';\n    if (!isRevoked && usageLimit && usage < usageLimit) {\n      text = lang('CanJoin', usageLimit - usage);\n    } else if (usage) {\n      text = lang('PeopleJoined', usage);\n    } else {\n      text = lang('NoOneJoined');\n    }\n\n    if (isRevoked) {\n      text += ` ${BULLET} ${lang('Revoked')}`;\n      return text;\n    }\n\n    if (requested) {\n      text += ` ${BULLET} ${lang('JoinRequests', requested)}`;\n    }\n\n    if (usageLimit !== undefined && usage === usageLimit) {\n      text += ` ${BULLET} ${lang('LinkLimitReached')}`;\n    } else if (expireDate) {\n      const diff = (expireDate - getServerTime()) * 1000;\n      text += ` ${BULLET} `;\n      if (diff > 0) {\n        text += lang('InviteLink.ExpiresIn', formatCountdown(lang, diff));\n      } else {\n        text += lang('InviteLink.Expired');\n      }\n    } else if (isPermanent) {\n      text += ` ${BULLET} ${lang('Permanent')}`;\n    }\n\n    return text;\n  };\n\n  const getInviteIconClass = (invite: ApiExportedInvite) => {\n    const {\n      usage = 0, usageLimit, isRevoked, expireDate,\n    } = invite;\n    if (isRevoked) {\n      return 'link-status-icon-gray';\n    }\n    if (usageLimit && usage < usageLimit) {\n      return 'link-status-icon-green';\n    }\n    if (expireDate) {\n      const diff = (expireDate - getServerTime()) * 1000;\n      if (diff <= 0) {\n        return 'link-status-icon-red';\n      }\n    }\n    return 'link-status-icon-blue';\n  };\n\n  const prepareContextActions = (invite: ApiExportedInvite) => {\n    const actions: MenuItemContextAction[] = [];\n    actions.push({\n      title: lang('Copy'),\n      icon: 'copy',\n      handler: () => copyLink(invite.link),\n    });\n\n    if (!invite.isPermanent && !invite.isRevoked) {\n      actions.push({\n        title: lang('Edit'),\n        icon: 'edit',\n        handler: () => editInvite(invite),\n      });\n    }\n\n    if (!invite.isRevoked) {\n      actions.push({\n        title: lang('RevokeButton'),\n        icon: 'delete',\n        handler: () => askToRevoke(invite),\n        destructive: true,\n      });\n    } else {\n      actions.push({\n        title: lang('DeleteLink'),\n        icon: 'delete',\n        handler: () => askToDelete(invite),\n        destructive: true,\n      });\n    }\n    return actions;\n  };\n\n  return (\n    <div className=\"Management ManageInvites\">\n      <div className=\"custom-scroll\">\n        <div className=\"section\">\n          <AnimatedIcon\n            tgsUrl={LOCAL_TGS_URLS.Invite}\n            size={STICKER_SIZE_INVITES}\n            className=\"section-icon\"\n          />\n          <p className=\"text-muted\">{isChannel ? lang('PrimaryLinkHelpChannel') : lang('PrimaryLinkHelp')}</p>\n        </div>\n        {primaryInviteLink && (\n          <LinkField\n            className=\"section\"\n            link={primaryInviteLink}\n            withShare\n            onRevoke={!chat?.usernames ? handlePrimaryRevoke : undefined}\n            title={chat?.usernames ? lang('PublicLink') : lang('lng_create_permanent_link_title')}\n          />\n        )}\n        <div className=\"section\" teactFastList>\n          <Button isText key=\"create\" className=\"create-link\" onClick={handleCreateNewClick}>\n            {lang('CreateNewLink')}\n          </Button>\n          {(!temporalInvites || !temporalInvites.length) && <NothingFound text=\"No links found\" key=\"nothing\" />}\n          {temporalInvites?.map((invite) => (\n            <ListItem\n              leftElement={<i className={`icon icon-link link-status-icon ${getInviteIconClass(invite)}`} />}\n              secondaryIcon=\"more\"\n              multiline\n              // eslint-disable-next-line react/jsx-no-bind\n              onClick={() => showInviteInfo(invite)}\n              contextActions={prepareContextActions(invite)}\n              key={invite.link}\n            >\n              <span className=\"title invite-title\">{invite.title || invite.link}</span>\n              <span className=\"subtitle\" dir=\"auto\">\n                {prepareUsageText(invite)}\n              </span>\n            </ListItem>\n          ))}\n          <p className=\"text-muted hint\" key=\"links-hint\">{lang('ManageLinksInfoHelp')}</p>\n        </div>\n        {revokedExportedInvites && Boolean(revokedExportedInvites.length) && (\n          <div className=\"section\" teactFastList>\n            <p className=\"text-muted\" key=\"title\">{lang('RevokedLinks')}</p>\n            <ListItem\n              icon=\"delete\"\n              destructive\n              key=\"delete\"\n              onClick={openDeleteRevokeAllDialog}\n            >\n              <span className=\"title\">{lang('DeleteAllRevokedLinks')}</span>\n            </ListItem>\n            {revokedExportedInvites?.map((invite) => (\n              <ListItem\n                leftElement={<i className={`icon icon-link link-status-icon ${getInviteIconClass(invite)}`} />}\n                secondaryIcon=\"more\"\n                multiline\n                // eslint-disable-next-line react/jsx-no-bind\n                onClick={() => showInviteInfo(invite)}\n                contextActions={prepareContextActions(invite)}\n                key={invite.link}\n              >\n                <span className=\"title\">{invite.title || invite.link}</span>\n                <span className=\"subtitle\" dir=\"auto\">\n                  {prepareUsageText(invite)}\n                </span>\n              </ListItem>\n            ))}\n          </div>\n        )}\n      </div>\n      <ConfirmDialog\n        isOpen={isDeleteRevokeAllDialogOpen}\n        onClose={closeDeleteRevokeAllDialog}\n        title={lang('DeleteAllRevokedLinks')}\n        text={lang('DeleteAllRevokedLinkHelp')}\n        confirmIsDestructive\n        confirmLabel={lang('DeleteAll')}\n        confirmHandler={handleDeleteAllRevoked}\n      />\n      <ConfirmDialog\n        isOpen={isRevokeDialogOpen}\n        onClose={closeRevokeDialog}\n        title={lang('RevokeLink')}\n        text={lang('RevokeAlert')}\n        confirmIsDestructive\n        confirmLabel={lang('RevokeButton')}\n        confirmHandler={handleRevoke}\n      />\n      <ConfirmDialog\n        isOpen={isDeleteDialogOpen}\n        onClose={closeDeleteDialog}\n        title={lang('DeleteLink')}\n        text={lang('DeleteLinkHelp')}\n        confirmIsDestructive\n        confirmLabel={lang('Delete')}\n        confirmHandler={handleDelete}\n      />\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const { invites, revokedInvites } = selectTabState(global).management.byChatId[chatId] || {};\n    const chat = selectChat(global, chatId);\n    const isChannel = chat && isChatChannel(chat);\n\n    return {\n      exportedInvites: invites,\n      revokedExportedInvites: revokedInvites,\n      chat,\n      isChannel,\n    };\n  },\n)(ManageInvites));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiUser } from '../../../api/types';\n\nimport { getUserFullName } from '../../../global/helpers';\nimport { selectUser } from '../../../global/selectors';\nimport { createClassNameBuilder } from '../../../util/buildClassName';\nimport { formatHumanDate, formatTime, isToday } from '../../../util/dates/dateFormat';\nimport { getServerTime } from '../../../util/serverTime';\n\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Avatar from '../../common/Avatar';\nimport Button from '../../ui/Button';\n\nimport './JoinRequest.scss';\n\ntype OwnProps = {\n  userId: string;\n  about?: string;\n  isChannel?: boolean;\n  date: number;\n  chatId: string;\n};\n\ntype StateProps = {\n  user?: ApiUser;\n  isSavedMessages?: boolean;\n};\n\nconst JoinRequest: FC<OwnProps & StateProps> = ({\n  userId,\n  chatId,\n  about,\n  date,\n  isChannel,\n  user,\n}) => {\n  const { openChat, hideChatJoinRequest } = getActions();\n\n  const buildClassName = createClassNameBuilder('JoinRequest');\n  const lang = useOldLang();\n\n  const fullName = getUserFullName(user);\n  const fixedDate = (date - getServerTime()) * 1000 + Date.now();\n\n  const dateString = isToday(new Date(fixedDate))\n    ? formatTime(lang, fixedDate) : formatHumanDate(lang, fixedDate, true, false, true);\n\n  const handleUserClick = () => {\n    openChat({ id: userId });\n  };\n\n  const handleAcceptRequest = useCallback(() => {\n    hideChatJoinRequest({ chatId, userId, isApproved: true });\n  }, [chatId, hideChatJoinRequest, userId]);\n\n  const handleRejectRequest = useCallback(() => {\n    hideChatJoinRequest({ chatId, userId, isApproved: false });\n  }, [chatId, hideChatJoinRequest, userId]);\n\n  return (\n    <div className={buildClassName('&')}>\n      <div className={buildClassName('top')}>\n        <div className={buildClassName('user')} onClick={handleUserClick}>\n          <Avatar\n            key={userId}\n            size=\"medium\"\n            peer={user}\n          />\n          <div className={buildClassName('user-info')}>\n            <div className={buildClassName('user-name')}>{fullName}</div>\n            <div className={buildClassName('user-subtitle')}>{about}</div>\n          </div>\n        </div>\n        <div className={buildClassName('date')}>{dateString}</div>\n      </div>\n      <div className={buildClassName('buttons')}>\n        <Button className={buildClassName('button')} onClick={handleAcceptRequest}>\n          {isChannel ? lang('ChannelAddToChannel') : lang('ChannelAddToGroup')}\n        </Button>\n        <Button className={buildClassName('button')} isText onClick={handleRejectRequest}>\n          {lang('DismissRequest')}\n        </Button>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { userId }): StateProps => {\n    const user = selectUser(global, userId);\n\n    return {\n      user,\n    };\n  },\n)(JoinRequest));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback, useEffect } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiChat } from '../../../api/types';\n\nimport { STICKER_SIZE_JOIN_REQUESTS } from '../../../config';\nimport { isChatChannel, isUserId } from '../../../global/helpers';\nimport { selectChat } from '../../../global/selectors';\nimport { LOCAL_TGS_URLS } from '../../common/helpers/animatedAssets';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport AnimatedIcon from '../../common/AnimatedIcon';\nimport Button from '../../ui/Button';\nimport ConfirmDialog from '../../ui/ConfirmDialog';\nimport Spinner from '../../ui/Spinner';\nimport JoinRequest from './JoinRequest';\n\ntype OwnProps = {\n  chatId: string;\n  onClose: NoneToVoidFunction;\n  isActive: boolean;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  isChannel?: boolean;\n};\n\nconst ManageJoinRequests: FC<OwnProps & StateProps> = ({\n  chat,\n  chatId,\n  isActive,\n  isChannel,\n  onClose,\n}) => {\n  const { hideAllChatJoinRequests, loadChatJoinRequests } = getActions();\n  const [isAcceptAllDialogOpen, openAcceptAllDialog, closeAcceptAllDialog] = useFlag();\n  const [isRejectAllDialogOpen, openRejectAllDialog, closeRejectAllDialog] = useFlag();\n\n  const lang = useOldLang();\n\n  useHistoryBack({\n    isActive,\n    onBack: onClose,\n  });\n\n  useEffect(() => {\n    if (!chat?.joinRequests && !isUserId(chatId)) {\n      loadChatJoinRequests({ chatId });\n    }\n  }, [chat, chatId, loadChatJoinRequests]);\n\n  const handleAcceptAllRequests = useCallback(() => {\n    hideAllChatJoinRequests({ chatId, isApproved: true });\n    closeAcceptAllDialog();\n  }, [hideAllChatJoinRequests, chatId, closeAcceptAllDialog]);\n\n  const handleRejectAllRequests = useCallback(() => {\n    hideAllChatJoinRequests({ chatId, isApproved: false });\n    closeRejectAllDialog();\n  }, [hideAllChatJoinRequests, chatId, closeRejectAllDialog]);\n\n  return (\n    <div className=\"Management ManageJoinRequests\">\n      <div className=\"custom-scroll\">\n        <div className=\"section\">\n          <AnimatedIcon\n            tgsUrl={LOCAL_TGS_URLS.JoinRequest}\n            size={STICKER_SIZE_JOIN_REQUESTS}\n            className=\"section-icon\"\n          />\n          {Boolean(chat?.joinRequests?.length) && (\n            <div className=\"bulk-actions\">\n              <Button className=\"bulk-action-button\" onClick={openAcceptAllDialog}>Accept all</Button>\n              <Button className=\"bulk-action-button\" onClick={openRejectAllDialog} isText>Dismiss all</Button>\n            </div>\n          )}\n        </div>\n        <div className=\"section\" teactFastList>\n          <p key=\"title\">\n            {!chat?.joinRequests ? lang('Loading') : chat.joinRequests.length\n              ? lang('JoinRequests', chat.joinRequests.length) : lang('NoMemberRequests')}\n          </p>\n          {!chat?.joinRequests && (\n            <Spinner key=\"loading\" />\n          )}\n          {chat?.joinRequests?.length === 0 && (\n            <p className=\"text-muted\" key=\"empty\">\n              {isChannel ? lang('NoSubscribeRequestsDescription') : lang('NoMemberRequestsDescription')}\n            </p>\n          )}\n          {chat?.joinRequests?.map(({ userId, about, date }) => (\n            <JoinRequest\n              userId={userId}\n              about={about}\n              date={date}\n              isChannel={isChannel}\n              chatId={chatId}\n              key={userId}\n            />\n          ))}\n        </div>\n      </div>\n      <ConfirmDialog\n        isOpen={isAcceptAllDialogOpen}\n        onClose={closeAcceptAllDialog}\n        title=\"Accept all requests?\"\n        text=\"Are you sure you want to accept all requests?\"\n        confirmHandler={handleAcceptAllRequests}\n      />\n      <ConfirmDialog\n        isOpen={isRejectAllDialogOpen}\n        onClose={closeRejectAllDialog}\n        title=\"Reject all requests?\"\n        text=\"Are you sure you want to reject all requests?\"\n        confirmHandler={handleRejectAllRequests}\n      />\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const chat = selectChat(global, chatId);\n\n    return {\n      chat,\n      isChannel: chat && isChatChannel(chat),\n    };\n  },\n)(ManageJoinRequests));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useMemo,\n  useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type {\n  ApiAvailableReaction, ApiChat, ApiChatReactions, ApiReaction,\n} from '../../../api/types';\n\nimport {\n  MAX_UNIQUE_REACTIONS,\n} from '../../../config';\nimport { isChatChannel, isSameReaction } from '../../../global/helpers';\nimport { selectChat, selectChatFullInfo } from '../../../global/selectors';\n\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport ReactionStaticEmoji from '../../common/ReactionStaticEmoji';\nimport Checkbox from '../../ui/Checkbox';\nimport FloatingActionButton from '../../ui/FloatingActionButton';\nimport RadioGroup from '../../ui/RadioGroup';\nimport RangeSlider from '../../ui/RangeSlider';\nimport Spinner from '../../ui/Spinner';\n\ntype OwnProps = {\n  chatId: string;\n  onClose: NoneToVoidFunction;\n  isActive: boolean;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  availableReactions?: ApiAvailableReaction[];\n  enabledReactions?: ApiChatReactions;\n  maxUniqueReactions: number;\n  reactionsLimit?: number;\n  isChannel?: boolean;\n};\n\nconst ManageReactions: FC<OwnProps & StateProps> = ({\n  availableReactions,\n  enabledReactions,\n  chat,\n  isActive,\n  onClose,\n  maxUniqueReactions,\n  reactionsLimit,\n  isChannel,\n}) => {\n  const { setChatEnabledReactions } = getActions();\n\n  const lang = useOldLang();\n  const [isTouched, setIsTouched] = useState(false);\n  const [isLoading, setIsLoading] = useState(false);\n  const [localEnabledReactions, setLocalEnabledReactions] = useState<ApiChatReactions | undefined>(enabledReactions);\n\n  const [localReactionsLimit, setLocalReactionsLimit] = useState(reactionsLimit);\n\n  useHistoryBack({\n    isActive,\n    onBack: onClose,\n  });\n\n  const reactionsOptions = useMemo(() => [{\n    value: 'all',\n    label: lang('AllReactions'),\n  }, {\n    value: 'some',\n    label: lang('SomeReactions'),\n  }, {\n    value: 'none',\n    label: lang('NoReactions'),\n  }], [lang]);\n\n  const handleSaveReactions = useCallback(() => {\n    if (!chat) return;\n    setIsLoading(true);\n\n    setChatEnabledReactions({\n      chatId: chat.id,\n      enabledReactions: localEnabledReactions,\n      reactionsLimit: localReactionsLimit,\n    });\n  }, [chat, localEnabledReactions, setChatEnabledReactions, localReactionsLimit]);\n\n  useEffect(() => {\n    setIsLoading(false);\n    setIsTouched(false);\n    setLocalEnabledReactions(enabledReactions);\n    setLocalReactionsLimit(reactionsLimit);\n  }, [enabledReactions, reactionsLimit]);\n\n  const availableActiveReactions = useMemo<ApiAvailableReaction[] | undefined>(\n    () => availableReactions?.filter(({ isInactive }) => !isInactive),\n    [availableReactions],\n  );\n\n  useEffect(() => {\n    if (localReactionsLimit !== undefined && localReactionsLimit !== reactionsLimit) {\n      setIsTouched(true);\n      return;\n    }\n\n    if (localEnabledReactions?.type === 'some') {\n      const isReactionsDisabled = enabledReactions?.type !== 'all' && enabledReactions?.type !== 'some';\n\n      if (isReactionsDisabled && localEnabledReactions.allowed.length === 0) {\n        setIsTouched(false);\n        return;\n      }\n    }\n\n    if (localEnabledReactions?.type !== enabledReactions?.type) {\n      setIsTouched(true);\n      return;\n    }\n\n    if (localEnabledReactions?.type === 'some' && enabledReactions?.type === 'some') {\n      const localAllowedReactions = localEnabledReactions.allowed;\n      const enabledAllowedReactions = enabledReactions?.allowed;\n\n      if (localAllowedReactions.length !== enabledAllowedReactions.length\n      || localAllowedReactions.reverse().some(\n        (localReaction) => !enabledAllowedReactions.find(\n          (enabledReaction) => isSameReaction(localReaction, enabledReaction),\n        ),\n      )) {\n        setIsTouched(true);\n        return;\n      }\n    }\n\n    setIsTouched(false);\n  }, [\n    localReactionsLimit,\n    reactionsLimit,\n    localEnabledReactions,\n    enabledReactions,\n  ]);\n\n  const handleReactionsOptionChange = useCallback((value: string) => {\n    if (value === 'all') {\n      setLocalEnabledReactions({ type: 'all' });\n      setLocalReactionsLimit(reactionsLimit);\n    } else if (value === 'some') {\n      setLocalEnabledReactions({\n        type: 'some',\n        allowed: enabledReactions?.type === 'some' ? enabledReactions.allowed : [],\n      });\n      setLocalReactionsLimit(reactionsLimit);\n    } else {\n      setLocalEnabledReactions(undefined);\n      setLocalReactionsLimit(undefined);\n    }\n  }, [enabledReactions, reactionsLimit]);\n\n  const handleReactionChange = useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    if (!chat || !availableActiveReactions) return;\n\n    const { name, checked } = e.currentTarget;\n    if (localEnabledReactions?.type === 'some') {\n      const reaction = { emoticon: name } as ApiReaction;\n      if (checked) {\n        setLocalEnabledReactions({\n          type: 'some',\n          allowed: [...localEnabledReactions.allowed, reaction],\n        });\n      } else {\n        setLocalEnabledReactions({\n          type: 'some',\n          allowed: localEnabledReactions.allowed.filter((local) => !isSameReaction(local, reaction)),\n        });\n      }\n    }\n  }, [availableActiveReactions, chat, localEnabledReactions]);\n\n  const handleReactionsLimitChange = useCallback((value: number) => {\n    setLocalReactionsLimit(value);\n  }, []);\n\n  const renderReactionsMaxCountValue = useCallback((value: number) => {\n    return lang('PeerInfo.AllowedReactions.MaxCountValue', value);\n  }, [lang]);\n\n  const shouldShowReactionsLimit = isChannel\n  && (localEnabledReactions?.type === 'all' || localEnabledReactions?.type === 'some');\n\n  return (\n    <div className=\"Management\">\n      <div className=\"custom-scroll\">\n        { localReactionsLimit && shouldShowReactionsLimit && (\n          <div className=\"section\">\n            <h3 className=\"section-heading\">\n              {lang('MaximumReactionsHeader')}\n            </h3>\n            <RangeSlider\n              min={1}\n              max={maxUniqueReactions}\n              value={localReactionsLimit}\n              onChange={handleReactionsLimitChange}\n              renderValue={renderReactionsMaxCountValue}\n              isCenteredLayout\n            />\n            <p className=\"section-info mt-4\">\n              {lang('ChannelReactions.MaxCount.Info')}\n            </p>\n          </div>\n        )}\n        <div className=\"section\">\n          <h3 className=\"section-heading\">\n            {lang('AvailableReactions')}\n          </h3>\n          <RadioGroup\n            selected={localEnabledReactions?.type || 'none'}\n            name=\"reactions\"\n            options={reactionsOptions}\n            onChange={handleReactionsOptionChange}\n          />\n          <p className=\"section-info mt-4\">\n            {localEnabledReactions?.type === 'all' && lang('EnableAllReactionsInfo')}\n            {localEnabledReactions?.type === 'some' && lang('EnableSomeReactionsInfo')}\n            {!localEnabledReactions && lang('DisableReactionsInfo')}\n          </p>\n        </div>\n        {localEnabledReactions?.type === 'some' && (\n          <div className=\"section section-with-fab\">\n            <h3 className=\"section-heading\">\n              {lang('OnlyAllowThisReactions')}\n            </h3>\n            {availableActiveReactions?.map(({ reaction, title }) => (\n              <div className=\"ListItem\">\n                <Checkbox\n                  name={reaction.emoticon}\n                  checked={localEnabledReactions?.allowed.some((r) => isSameReaction(reaction, r))}\n                  label={(\n                    <div className=\"Reaction\">\n                      <ReactionStaticEmoji reaction={reaction} availableReactions={availableReactions} />\n                      {title}\n                    </div>\n                  )}\n                  withIcon\n                  onChange={handleReactionChange}\n                />\n              </div>\n            ))}\n          </div>\n        )}\n      </div>\n\n      <FloatingActionButton\n        isShown={isTouched}\n        onClick={handleSaveReactions}\n        ariaLabel={lang('Save')}\n        disabled={isLoading}\n      >\n        {isLoading ? (\n          <Spinner color=\"white\" />\n        ) : (\n          <i className=\"icon icon-check\" />\n        )}\n      </FloatingActionButton>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const chat = selectChat(global, chatId)!;\n    const { maxUniqueReactions = MAX_UNIQUE_REACTIONS } = global.appConfig || {};\n\n    const chatFullInfo = selectChatFullInfo(global, chatId);\n    const reactionsLimit = chatFullInfo?.reactionsLimit || maxUniqueReactions;\n    const isChannel = isChatChannel(chat);\n\n    return {\n      enabledReactions: chatFullInfo?.enabledReactions,\n      availableReactions: global.reactions.availableReactions,\n      chat,\n      maxUniqueReactions,\n      reactionsLimit,\n      isChannel,\n    };\n  },\n  (global, { chatId }) => {\n    return Boolean(selectChat(global, chatId));\n  },\n)(ManageReactions));\n","import type { ChangeEvent } from 'react';\nimport type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiPhoto, ApiUser } from '../../../api/types';\nimport { ManagementProgress } from '../../../types';\n\nimport { SERVICE_NOTIFICATIONS_USER_ID } from '../../../config';\nimport { isUserBot, selectIsChatMuted } from '../../../global/helpers';\nimport {\n  selectChat,\n  selectNotifyExceptions,\n  selectNotifySettings,\n  selectTabState,\n  selectUser,\n  selectUserFullInfo,\n} from '../../../global/selectors';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Avatar from '../../common/Avatar';\nimport PrivateChatInfo from '../../common/PrivateChatInfo';\nimport Checkbox from '../../ui/Checkbox';\nimport ConfirmDialog from '../../ui/ConfirmDialog';\nimport FloatingActionButton from '../../ui/FloatingActionButton';\nimport InputText from '../../ui/InputText';\nimport ListItem from '../../ui/ListItem';\nimport SelectAvatar from '../../ui/SelectAvatar';\nimport Spinner from '../../ui/Spinner';\n\nimport './Management.scss';\n\ntype OwnProps = {\n  userId: string;\n  onClose: NoneToVoidFunction;\n  isActive: boolean;\n};\n\ntype StateProps = {\n  user?: ApiUser;\n  progress?: ManagementProgress;\n  isMuted?: boolean;\n  personalPhoto?: ApiPhoto;\n  notPersonalPhoto?: ApiPhoto;\n};\n\nconst ERROR_FIRST_NAME_MISSING = 'Please provide first name';\n\nconst ManageUser: FC<OwnProps & StateProps> = ({\n  userId,\n  user,\n  progress,\n  isMuted,\n  onClose,\n  isActive,\n  personalPhoto,\n  notPersonalPhoto,\n}) => {\n  const {\n    updateContact,\n    deleteContact,\n    closeManagement,\n    uploadContactProfilePhoto,\n  } = getActions();\n\n  const [isDeleteDialogOpen, openDeleteDialog, closeDeleteDialog] = useFlag();\n  const [isResetPersonalPhotoDialogOpen, openResetPersonalPhotoDialog, closeResetPersonalPhotoDialog] = useFlag();\n  const [isProfileFieldsTouched, setIsProfileFieldsTouched] = useState(false);\n  const [error, setError] = useState<string | undefined>();\n  const lang = useOldLang();\n\n  useHistoryBack({\n    isActive,\n    onBack: onClose,\n  });\n\n  const currentFirstName = user ? (user.firstName || '') : '';\n  const currentLastName = user ? (user.lastName || '') : '';\n\n  const [firstName, setFirstName] = useState(currentFirstName);\n  const [lastName, setLastName] = useState(currentLastName);\n  const [isNotificationsEnabled, setIsNotificationsEnabled] = useState(!isMuted);\n\n  useEffect(() => {\n    setIsNotificationsEnabled(!isMuted);\n  }, [isMuted]);\n\n  useEffect(() => {\n    setIsProfileFieldsTouched(false);\n    closeDeleteDialog();\n  }, [closeDeleteDialog, userId]);\n\n  useEffect(() => {\n    setFirstName(currentFirstName);\n    setLastName(currentLastName);\n  }, [currentFirstName, currentLastName, user]);\n\n  useEffect(() => {\n    if (progress === ManagementProgress.Complete) {\n      setIsProfileFieldsTouched(false);\n      setError(undefined);\n      closeDeleteDialog();\n    }\n  }, [closeDeleteDialog, progress]);\n\n  const handleFirstNameChange = useCallback((e: ChangeEvent<HTMLInputElement>) => {\n    setFirstName(e.target.value);\n    setIsProfileFieldsTouched(true);\n\n    if (error === ERROR_FIRST_NAME_MISSING) {\n      setError(undefined);\n    }\n  }, [error]);\n\n  const handleLastNameChange = useCallback((e: ChangeEvent<HTMLInputElement>) => {\n    setLastName(e.target.value);\n    setIsProfileFieldsTouched(true);\n  }, []);\n\n  const handleNotificationChange = useCallback((e: ChangeEvent<HTMLInputElement>) => {\n    setIsNotificationsEnabled(e.target.checked);\n    setIsProfileFieldsTouched(true);\n  }, []);\n\n  const handleProfileSave = useCallback(() => {\n    const trimmedFirstName = firstName.trim();\n    const trimmedLastName = lastName.trim();\n\n    if (!trimmedFirstName.length) {\n      setError(ERROR_FIRST_NAME_MISSING);\n      return;\n    }\n\n    updateContact({\n      userId,\n      isMuted: !isNotificationsEnabled,\n      firstName: trimmedFirstName,\n      lastName: trimmedLastName,\n    });\n  }, [firstName, lastName, updateContact, userId, isNotificationsEnabled]);\n\n  const handleDeleteContact = useCallback(() => {\n    deleteContact({ userId });\n    closeDeleteDialog();\n    closeManagement();\n  }, [closeDeleteDialog, closeManagement, deleteContact, userId]);\n\n  // eslint-disable-next-line no-null/no-null\n  const inputRef = useRef<HTMLInputElement>(null);\n  const isSuggestRef = useRef(false);\n\n  const handleSuggestPhoto = useCallback(() => {\n    inputRef.current?.click();\n    isSuggestRef.current = true;\n  }, []);\n\n  const handleSetPersonalPhoto = useCallback(() => {\n    inputRef.current?.click();\n    isSuggestRef.current = false;\n  }, []);\n\n  const handleResetPersonalAvatar = useCallback(() => {\n    closeResetPersonalPhotoDialog();\n    setIsProfileFieldsTouched(true);\n    uploadContactProfilePhoto({ userId });\n  }, [closeResetPersonalPhotoDialog, uploadContactProfilePhoto, userId]);\n\n  const handleSelectAvatar = useCallback((file: File) => {\n    setIsProfileFieldsTouched(true);\n    uploadContactProfilePhoto({ userId, file, isSuggest: isSuggestRef.current });\n  }, [uploadContactProfilePhoto, userId]);\n\n  if (!user) {\n    return undefined;\n  }\n\n  const canSetPersonalPhoto = !isUserBot(user) && user.id !== SERVICE_NOTIFICATIONS_USER_ID;\n  const isLoading = progress === ManagementProgress.InProgress;\n\n  return (\n    <div className=\"Management\">\n      <div className=\"custom-scroll\">\n        <div className=\"section\">\n          <PrivateChatInfo\n            userId={user.id}\n            avatarSize=\"jumbo\"\n            noStatusOrTyping\n            noEmojiStatus\n            withFullInfo\n          />\n          <InputText\n            id=\"user-first-name\"\n            label={lang('UserInfo.FirstNamePlaceholder')}\n            onChange={handleFirstNameChange}\n            value={firstName}\n            error={error === ERROR_FIRST_NAME_MISSING ? error : undefined}\n          />\n          <InputText\n            id=\"user-last-name\"\n            label={lang('UserInfo.LastNamePlaceholder')}\n            onChange={handleLastNameChange}\n            value={lastName}\n          />\n          <div className=\"ListItem narrow\">\n            <Checkbox\n              checked={isNotificationsEnabled}\n              label={lang('Notifications')}\n              subLabel={lang(isNotificationsEnabled\n                ? 'UserInfo.NotificationsEnabled'\n                : 'UserInfo.NotificationsDisabled')}\n              onChange={handleNotificationChange}\n            />\n          </div>\n        </div>\n        {canSetPersonalPhoto && (\n          <div className=\"section\">\n            <ListItem icon=\"camera-add\" ripple onClick={handleSuggestPhoto}>\n              <span className=\"list-item-ellipsis\">{lang('UserInfo.SuggestPhoto', user.firstName)}</span>\n            </ListItem>\n            <ListItem icon=\"camera-add\" ripple onClick={handleSetPersonalPhoto}>\n              <span className=\"list-item-ellipsis\">{lang('UserInfo.SetCustomPhoto', user.firstName)}</span>\n            </ListItem>\n            {personalPhoto && (\n              <ListItem\n                leftElement={(\n                  <Avatar\n                    photo={notPersonalPhoto}\n                    noPersonalPhoto\n                    peer={user}\n                    size=\"mini\"\n                    className=\"personal-photo\"\n                  />\n                )}\n                ripple\n                onClick={openResetPersonalPhotoDialog}\n              >\n                {lang('UserInfo.ResetCustomPhoto')}\n              </ListItem>\n            )}\n            <p className=\"text-muted\" dir=\"auto\">{lang('UserInfo.CustomPhotoInfo', user.firstName)}</p>\n          </div>\n        )}\n        <div className=\"section\">\n          <ListItem icon=\"delete\" ripple destructive onClick={openDeleteDialog}>\n            {lang('DeleteContact')}\n          </ListItem>\n        </div>\n      </div>\n      <FloatingActionButton\n        isShown={isProfileFieldsTouched}\n        onClick={handleProfileSave}\n        disabled={isLoading}\n        ariaLabel={lang('Save')}\n      >\n        {isLoading ? (\n          <Spinner color=\"white\" />\n        ) : (\n          <i className=\"icon icon-check\" />\n        )}\n      </FloatingActionButton>\n      <ConfirmDialog\n        isOpen={isDeleteDialogOpen}\n        onClose={closeDeleteDialog}\n        text={lang('AreYouSureDeleteContact')}\n        confirmLabel={lang('DeleteContact')}\n        confirmHandler={handleDeleteContact}\n        confirmIsDestructive\n      />\n      <ConfirmDialog\n        isOpen={isResetPersonalPhotoDialogOpen}\n        onClose={closeResetPersonalPhotoDialog}\n        text={lang('UserInfo.ResetToOriginalAlertText', user.firstName)}\n        confirmLabel={lang('Reset')}\n        confirmHandler={handleResetPersonalAvatar}\n        confirmIsDestructive\n      />\n      <SelectAvatar\n        onChange={handleSelectAvatar}\n        inputRef={inputRef}\n      />\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { userId }): StateProps => {\n    const user = selectUser(global, userId);\n    const chat = selectChat(global, userId);\n    const userFullInfo = selectUserFullInfo(global, userId);\n    const { progress } = selectTabState(global).management;\n    const isMuted = chat && selectIsChatMuted(chat, selectNotifySettings(global), selectNotifyExceptions(global));\n    const personalPhoto = userFullInfo?.personalPhoto;\n    const notPersonalPhoto = userFullInfo?.profilePhoto || userFullInfo?.fallbackPhoto;\n\n    return {\n      user, progress, isMuted, personalPhoto, notPersonalPhoto,\n    };\n  },\n)(ManageUser));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo } from '../../../lib/teact/teact';\nimport { withGlobal } from '../../../global';\n\nimport type { ManagementType } from '../../../types';\nimport { ManagementScreens } from '../../../types';\n\nimport { selectCurrentManagementType } from '../../../global/selectors';\n\nimport ManageBot from './ManageBot';\nimport ManageChannel from './ManageChannel';\nimport ManageChatAdministrators from './ManageChatAdministrators';\nimport ManageChatPrivacyType from './ManageChatPrivacyType';\nimport ManageChatRemovedUsers from './ManageChatRemovedUsers';\nimport ManageDiscussion from './ManageDiscussion';\nimport ManageGroup from './ManageGroup';\nimport ManageGroupAdminRights from './ManageGroupAdminRights';\nimport ManageGroupMembers from './ManageGroupMembers';\nimport ManageGroupPermissions from './ManageGroupPermissions';\nimport ManageGroupUserPermissions from './ManageGroupUserPermissions';\nimport ManageGroupUserPermissionsCreate from './ManageGroupUserPermissionsCreate';\nimport ManageInvite from './ManageInvite';\nimport ManageInviteInfo from './ManageInviteInfo';\nimport ManageInvites from './ManageInvites';\nimport ManageJoinRequests from './ManageJoinRequests';\nimport ManageReactions from './ManageReactions';\nimport ManageUser from './ManageUser';\n\nexport type OwnProps = {\n  chatId: string;\n  currentScreen: ManagementScreens;\n  selectedChatMemberId?: string;\n  isPromotedByCurrentUser?: boolean;\n  onScreenSelect: (screen: ManagementScreens) => void;\n  onChatMemberSelect: (memberId: string, isPromotedByCurrentUser?: boolean) => void;\n  onClose: NoneToVoidFunction;\n  isActive: boolean;\n};\n\ntype StateProps = {\n  managementType?: ManagementType;\n};\n\nconst Management: FC<OwnProps & StateProps> = ({\n  chatId,\n  currentScreen,\n  selectedChatMemberId,\n  isPromotedByCurrentUser,\n  onScreenSelect,\n  onChatMemberSelect,\n  onClose,\n  isActive,\n  managementType,\n}) => {\n  switch (currentScreen) {\n    case ManagementScreens.Initial: {\n      switch (managementType) {\n        case 'bot':\n          return (\n            <ManageBot\n              key={chatId}\n              userId={chatId}\n              onClose={onClose}\n              isActive={isActive}\n            />\n          );\n        case 'user':\n          return (\n            <ManageUser\n              key={chatId}\n              userId={chatId}\n              onClose={onClose}\n              isActive={isActive}\n            />\n          );\n        case 'group':\n          return (\n            <ManageGroup\n              key={chatId}\n              chatId={chatId}\n              onScreenSelect={onScreenSelect}\n              onClose={onClose}\n              isActive={isActive || [\n                ManagementScreens.ChatPrivacyType,\n                ManagementScreens.Discussion,\n                ManagementScreens.GroupPermissions,\n                ManagementScreens.ChatAdministrators,\n                ManagementScreens.GroupRemovedUsers,\n                ManagementScreens.GroupUserPermissionsCreate,\n                ManagementScreens.GroupUserPermissions,\n                ManagementScreens.ChatAdminRights,\n                ManagementScreens.ChatNewAdminRights,\n                ManagementScreens.GroupRecentActions,\n              ].includes(currentScreen)}\n            />\n          );\n        case 'channel':\n          return (\n            <ManageChannel\n              key={chatId}\n              chatId={chatId}\n              onScreenSelect={onScreenSelect}\n              onClose={onClose}\n              isActive={isActive || [\n                ManagementScreens.ChannelSubscribers,\n                ManagementScreens.ChatAdministrators,\n                ManagementScreens.ChannelRemovedUsers,\n                ManagementScreens.Discussion,\n                ManagementScreens.ChatPrivacyType,\n                ManagementScreens.ChatAdminRights,\n                ManagementScreens.ChatNewAdminRights,\n                ManagementScreens.GroupRecentActions,\n              ].includes(currentScreen)}\n            />\n          );\n      }\n\n      break;\n    }\n\n    case ManagementScreens.ChatPrivacyType:\n      return (\n        <ManageChatPrivacyType\n          chatId={chatId}\n          isActive={isActive}\n          onClose={onClose}\n        />\n      );\n\n    case ManagementScreens.Discussion:\n      return (\n        <ManageDiscussion\n          chatId={chatId}\n          onScreenSelect={onScreenSelect}\n          isActive={isActive}\n          onClose={onClose}\n        />\n      );\n\n    case ManagementScreens.GroupPermissions:\n      return (\n        <ManageGroupPermissions\n          chatId={chatId}\n          onScreenSelect={onScreenSelect}\n          onChatMemberSelect={onChatMemberSelect}\n          isActive={isActive || [\n            ManagementScreens.GroupRemovedUsers,\n            ManagementScreens.GroupUserPermissionsCreate,\n            ManagementScreens.GroupUserPermissions,\n          ].includes(currentScreen)}\n          onClose={onClose}\n        />\n      );\n\n    case ManagementScreens.ChannelRemovedUsers:\n    case ManagementScreens.GroupRemovedUsers:\n      return (\n        <ManageChatRemovedUsers\n          chatId={chatId}\n          isActive={isActive}\n          onClose={onClose}\n        />\n      );\n\n    case ManagementScreens.GroupUserPermissionsCreate:\n      return (\n        <ManageGroupUserPermissionsCreate\n          chatId={chatId}\n          onChatMemberSelect={onChatMemberSelect}\n          onScreenSelect={onScreenSelect}\n          isActive={isActive || [\n            ManagementScreens.GroupUserPermissions,\n          ].includes(currentScreen)}\n          onClose={onClose}\n        />\n      );\n\n    case ManagementScreens.GroupUserPermissions:\n      return (\n        <ManageGroupUserPermissions\n          chatId={chatId}\n          selectedChatMemberId={selectedChatMemberId}\n          isPromotedByCurrentUser={isPromotedByCurrentUser}\n          onScreenSelect={onScreenSelect}\n          isActive={isActive}\n          onClose={onClose}\n        />\n      );\n\n    case ManagementScreens.ChatAdministrators:\n      return (\n        <ManageChatAdministrators\n          chatId={chatId}\n          onScreenSelect={onScreenSelect}\n          onChatMemberSelect={onChatMemberSelect}\n          isActive={isActive || [\n            ManagementScreens.ChatAdminRights,\n            ManagementScreens.ChatNewAdminRights,\n            ManagementScreens.GroupRecentActions,\n          ].includes(currentScreen)}\n          onClose={onClose}\n        />\n      );\n\n    case ManagementScreens.ChatNewAdminRights:\n    case ManagementScreens.ChatAdminRights:\n      return (\n        <ManageGroupAdminRights\n          chatId={chatId}\n          isNewAdmin={currentScreen === ManagementScreens.ChatNewAdminRights}\n          selectedUserId={selectedChatMemberId}\n          isPromotedByCurrentUser={isPromotedByCurrentUser}\n          onScreenSelect={onScreenSelect}\n          isActive={isActive}\n          onClose={onClose}\n        />\n      );\n\n    case ManagementScreens.ChannelSubscribers:\n    case ManagementScreens.GroupMembers:\n      return (\n        <ManageGroupMembers\n          chatId={chatId}\n          isActive={isActive}\n          onClose={onClose}\n        />\n      );\n    case ManagementScreens.Invites:\n      return (\n        <ManageInvites\n          chatId={chatId}\n          isActive={isActive}\n          onClose={onClose}\n          onScreenSelect={onScreenSelect}\n        />\n      );\n    case ManagementScreens.EditInvite:\n      return (\n        <ManageInvite\n          chatId={chatId}\n          isActive={isActive}\n          onClose={onClose}\n          onScreenSelect={onScreenSelect}\n        />\n      );\n    case ManagementScreens.GroupAddAdmins:\n      return (\n        <ManageGroupMembers\n          chatId={chatId}\n          noAdmins\n          isActive={isActive}\n          onClose={onClose}\n          onScreenSelect={onScreenSelect}\n          onChatMemberSelect={onChatMemberSelect}\n        />\n      );\n\n    case ManagementScreens.Reactions:\n      return (\n        <ManageReactions\n          chatId={chatId}\n          isActive={isActive}\n          onClose={onClose}\n        />\n      );\n    case ManagementScreens.InviteInfo:\n      return (\n        <ManageInviteInfo\n          chatId={chatId}\n          isActive={isActive}\n          onClose={onClose}\n        />\n      );\n    case ManagementScreens.JoinRequests:\n      return (\n        <ManageJoinRequests\n          chatId={chatId}\n          isActive={isActive}\n          onClose={onClose}\n        />\n      );\n  }\n\n  return undefined; // Never reached\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const managementType = selectCurrentManagementType(global);\n\n    return {\n      managementType,\n    };\n  },\n)(Management));\n","const VISA = /^4\\d/;\nconst MASTERCARD1 = /^5[1-5]/;\nconst MASTERCARD2 = /^2[2-7]\\d{2}/;\nconst MIR = /^220[0-4]/;\n\nexport enum CardType {\n  Default,\n  Visa,\n  Mastercard,\n  Mir,\n}\n\nconst cards: Record<number, string> = {\n  [CardType.Default]: '',\n  [CardType.Visa]: 'visa',\n  [CardType.Mastercard]: 'mastercard',\n  [CardType.Mir]: 'mir',\n};\n\nexport function detectCardType(cardNumber: string): number {\n  cardNumber = cardNumber.replace(/\\s/g, '');\n  if (VISA.test(cardNumber)) {\n    return CardType.Visa;\n  }\n  if (MIR.test(cardNumber)) {\n    return CardType.Mir;\n  }\n  if (MASTERCARD1.test(cardNumber) || MASTERCARD2.test(cardNumber)) {\n    return CardType.Mastercard;\n  }\n  return CardType.Default;\n}\n\nexport function detectCardTypeText(cardNumber: string): string {\n  const cardType = detectCardType(cardNumber);\n  return cards[cardType as number] || '';\n}\n","import type { Dispatch, StateReducer } from '../useReducer';\n\nimport useReducer from '../useReducer';\n\nexport type FormState = {\n  streetLine1: string;\n  streetLine2: string;\n  city: string;\n  state: string;\n  countryIso2: string;\n  postCode: string;\n  fullName: string;\n  email: string;\n  phone: string;\n  shipping: string;\n  cardNumber: string;\n  cardholder: string;\n  expiry: string;\n  cvv: string;\n  billingCountry: string;\n  billingZip: string;\n  saveInfo: boolean;\n  saveCredentials: boolean;\n  formErrors: Record<string, string>;\n  tipAmount: number;\n  savedCredentialId: string;\n};\n\nexport type FormActions = (\n  'changeAddress1' | 'changeAddress2' | 'changeCity' | 'changeState' | 'changeCountry' |\n  'changePostCode' | 'changeFullName' | 'changeEmail' | 'changePhone' | 'changeShipping' | 'updateUserInfo' |\n  'changeCardNumber' | 'changeCardholder' | 'changeExpiryDate' | 'changeCvvCode' | 'changeBillingCountry' |\n  'changeBillingZip' | 'changeSaveInfo' | 'changeSaveCredentials' | 'setFormErrors' | 'resetState' | 'setTipAmount' |\n  'changeSavedCredentialId'\n);\nexport type FormEditDispatch = Dispatch<FormState, FormActions>;\n\nconst INITIAL_STATE: FormState = {\n  streetLine1: '',\n  streetLine2: '',\n  city: '',\n  state: '',\n  countryIso2: '',\n  postCode: '',\n  fullName: '',\n  email: '',\n  phone: '',\n  shipping: '',\n  cardNumber: '',\n  cardholder: '',\n  expiry: '',\n  cvv: '',\n  billingCountry: '',\n  billingZip: '',\n  saveInfo: true,\n  saveCredentials: false,\n  formErrors: {},\n  tipAmount: 0,\n  savedCredentialId: '',\n};\n\nconst reducer: StateReducer<FormState, FormActions> = (state, action) => {\n  switch (action.type) {\n    case 'changeAddress1':\n      return {\n        ...state,\n        streetLine1: action.payload,\n        formErrors: {\n          ...state.formErrors,\n          streetLine1: undefined,\n        },\n      };\n    case 'changeAddress2':\n      return {\n        ...state,\n        streetLine2: action.payload,\n        formErrors: {\n          ...state.formErrors,\n          streetLine2: undefined,\n        },\n      };\n    case 'changeCity':\n      return {\n        ...state,\n        city: action.payload,\n        formErrors: {\n          ...state.formErrors,\n          city: undefined,\n        },\n      };\n    case 'changeState':\n      return {\n        ...state,\n        state: action.payload,\n        formErrors: {\n          ...state.formErrors,\n          state: undefined,\n        },\n      };\n    case 'changeCountry':\n      return {\n        ...state,\n        countryIso2: action.payload.iso2,\n        billingCountry: action.payload.defaultName,\n        formErrors: {\n          ...state.formErrors,\n          countryIso2: undefined,\n        },\n      };\n    case 'changePostCode':\n      return {\n        ...state,\n        postCode: action.payload,\n        formErrors: {\n          ...state.formErrors,\n          postCode: undefined,\n        },\n      };\n    case 'changeFullName':\n      return {\n        ...state,\n        fullName: action.payload,\n        formErrors: {\n          ...state.formErrors,\n          fullName: undefined,\n        },\n      };\n    case 'changeEmail':\n      return {\n        ...state,\n        email: action.payload,\n        formErrors: {\n          ...state.formErrors,\n          email: undefined,\n        },\n      };\n    case 'changePhone':\n      return {\n        ...state,\n        phone: action.payload,\n        formErrors: {\n          ...state.formErrors,\n          phone: undefined,\n        },\n      };\n    case 'changeShipping':\n      return { ...state, shipping: action.payload };\n    case 'changeCardNumber':\n      return {\n        ...state,\n        cardNumber: action.payload,\n        formErrors: {\n          ...state.formErrors,\n          cardNumber: undefined,\n        },\n      };\n    case 'changeCardholder':\n      return {\n        ...state,\n        cardholder: action.payload,\n        formErrors: {\n          ...state.formErrors,\n          cardholder: undefined,\n        },\n      };\n    case 'changeExpiryDate':\n      return {\n        ...state,\n        expiry: action.payload,\n        formErrors: {\n          ...state.formErrors,\n          expiry: undefined,\n        },\n      };\n    case 'changeCvvCode':\n      return {\n        ...state,\n        cvv: action.payload,\n        formErrors: {\n          ...state.formErrors,\n          cvv: undefined,\n        },\n      };\n    case 'changeBillingCountry':\n      return {\n        ...state,\n        billingCountry: action.payload,\n        formErrors: {\n          ...state.formErrors,\n          billingCountry: undefined,\n        },\n      };\n    case 'changeBillingZip':\n      return {\n        ...state,\n        billingZip: action.payload,\n        formErrors: {\n          ...state.formErrors,\n          billingZip: undefined,\n        },\n      };\n    case 'changeSaveInfo':\n      return { ...state, saveInfo: action.payload };\n    case 'changeSaveCredentials':\n      return { ...state, saveCredentials: action.payload };\n    case 'updateUserInfo':\n      if (action.payload.country) {\n        return {\n          ...state,\n          ...action.payload,\n          billingCountry: action.payload.country,\n        };\n      }\n      return { ...state, ...action.payload };\n    case 'setFormErrors':\n      return {\n        ...state,\n        formErrors: {\n          ...state.formErrors,\n          ...action.payload,\n        },\n      };\n    case 'setTipAmount':\n      return {\n        ...state,\n        tipAmount: action.payload,\n      };\n    case 'changeSavedCredentialId':\n      return {\n        ...state,\n        savedCredentialId: action.payload,\n      };\n    case 'resetState':\n      return {\n        ...INITIAL_STATE,\n      };\n    default:\n      return state;\n  }\n};\n\nconst usePaymentReducer = () => {\n  return useReducer(reducer, INITIAL_STATE);\n};\n\nexport default usePaymentReducer;\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"maC_9u6e\",\"description\":\"zQ6lEVJ2\",\"checkout-picture\":\"JgWvLdK2\",\"checkoutPicture\":\"JgWvLdK2\",\"text\":\"T2pYH395\",\"checkout-title\":\"HadolzeF\",\"checkoutTitle\":\"HadolzeF\",\"checkout-description\":\"oZW7mUNP\",\"checkoutDescription\":\"oZW7mUNP\",\"price-info\":\"P618Q3yr\",\"priceInfo\":\"P618Q3yr\",\"price-info-item\":\"XNNG_ajy\",\"priceInfoItem\":\"XNNG_ajy\",\"price-info-item-main\":\"D9gYNLVk\",\"priceInfoItemMain\":\"D9gYNLVk\",\"price-info-item-title\":\"NtY5Aah7\",\"priceInfoItemTitle\":\"NtY5Aah7\",\"tipsList\":\"WHO341eB\",\"tipsItem\":\"ksLlzBxw\",\"tipsItem_active\":\"J4yem62L\",\"tipsItemActive\":\"J4yem62L\",\"invoice-info\":\"U2IBOLP1\",\"invoiceInfo\":\"U2IBOLP1\",\"provider\":\"kqWcdro1\",\"stripe\":\"xKztZrna\",\"smartglocal\":\"X_Ge1o4u\",\"checkout-info-item-info-title\":\"ysWuPklS\",\"checkoutInfoItemInfoTitle\":\"ysWuPklS\",\"checkout-info-item-info-data\":\"MpC_P8_c\",\"checkoutInfoItemInfoData\":\"MpC_P8_c\",\"tos-checkbox\":\"OrRb0xG7\",\"tosCheckbox\":\"OrRb0xG7\"};","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport type {\n  ApiInvoice, ApiPaymentCredentials,\n} from '../../api/types';\nimport type { FormEditDispatch } from '../../hooks/reducers/usePaymentReducer';\nimport type { LangCode, Price } from '../../types';\nimport type { IconName } from '../../types/icons';\nimport { PaymentStep } from '../../types';\n\nimport { getWebDocumentHash } from '../../global/helpers';\nimport buildClassName from '../../util/buildClassName';\nimport { formatCurrency } from '../../util/formatCurrency';\nimport renderText from '../common/helpers/renderText';\n\nimport useMedia from '../../hooks/useMedia';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport SafeLink from '../common/SafeLink';\nimport Checkbox from '../ui/Checkbox';\nimport ListItem from '../ui/ListItem';\nimport Skeleton from '../ui/placeholder/Skeleton';\n\nimport styles from './Checkout.module.scss';\n\nexport type OwnProps = {\n  invoice?: ApiInvoice;\n  checkoutInfo?: {\n    paymentMethod?: string;\n    paymentProvider?: string;\n    shippingAddress?: string;\n    name?: string;\n    phone?: string;\n    shippingMethod?: string;\n    botName?: string;\n  };\n  prices?: Price[];\n  totalPrice?: number;\n  needAddress?: boolean;\n  hasShippingOptions?: boolean;\n  tipAmount?: number;\n  shippingPrices?: Price[];\n  currency: string;\n  isTosAccepted?: boolean;\n  dispatch?: FormEditDispatch;\n  onAcceptTos?: (isAccepted: boolean) => void;\n  savedCredentials?: ApiPaymentCredentials[];\n  isPaymentFormUrl?: boolean;\n  botName?: string;\n};\n\nconst Checkout: FC<OwnProps> = ({\n  invoice,\n  prices,\n  shippingPrices,\n  checkoutInfo,\n  currency,\n  totalPrice,\n  isTosAccepted,\n  dispatch,\n  onAcceptTos,\n  tipAmount,\n  needAddress,\n  hasShippingOptions,\n  savedCredentials,\n  isPaymentFormUrl,\n  botName,\n}) => {\n  const { setPaymentStep } = getActions();\n\n  const lang = useOldLang();\n  const isInteractive = Boolean(dispatch);\n\n  const {\n    photo, title, text, termsUrl, suggestedTipAmounts, maxTipAmount,\n  } = invoice || {};\n  const {\n    paymentMethod,\n    paymentProvider,\n    shippingAddress,\n    name,\n    phone,\n    shippingMethod,\n  } = (checkoutInfo || {});\n\n  const photoUrl = useMedia(getWebDocumentHash(photo));\n\n  const handleTipsClick = useCallback((tips: number) => {\n    dispatch!({ type: 'setTipAmount', payload: maxTipAmount ? Math.min(tips, maxTipAmount) : tips });\n  }, [dispatch, maxTipAmount]);\n\n  const handlePaymentMethodClick = useCallback(() => {\n    setPaymentStep({ step: savedCredentials?.length ? PaymentStep.SavedPayments : PaymentStep.PaymentInfo });\n  }, [savedCredentials?.length, setPaymentStep]);\n\n  const handleShippingAddressClick = useCallback(() => {\n    setPaymentStep({ step: PaymentStep.ShippingInfo });\n  }, [setPaymentStep]);\n\n  const handleShippingMethodClick = useCallback(() => {\n    setPaymentStep({ step: PaymentStep.Shipping });\n  }, [setPaymentStep]);\n\n  function renderTips() {\n    return (\n      <>\n        <div className={styles.priceInfoItem}>\n          <div className={styles.priceInfoItemTitle}>\n            {title}\n          </div>\n          <div>\n            {formatCurrency(tipAmount!, currency, lang.code)}\n          </div>\n        </div>\n        <div className={styles.tipsList}>\n          {suggestedTipAmounts!.map((tip) => (\n            <div\n              key={tip}\n              className={buildClassName(styles.tipsItem, tip === tipAmount && styles.tipsItem_active)}\n              onClick={dispatch ? () => handleTipsClick(tip === tipAmount ? 0 : tip) : undefined}\n            >\n              {formatCurrency(tip, currency, lang.code, { shouldOmitFractions: true })}\n            </div>\n          ))}\n        </div>\n      </>\n    );\n  }\n\n  function renderTosLink(url: string, isRtl?: boolean) {\n    const langString = lang('PaymentCheckoutAcceptRecurrent', botName);\n    const langStringSplit = langString.split('*');\n    return (\n      <>\n        {langStringSplit[0]}\n        <SafeLink\n          url={url}\n          text={langStringSplit[1]}\n          isRtl={isRtl}\n        />\n        {langStringSplit.slice(2)}\n      </>\n    );\n  }\n\n  function renderTos(url: string) {\n    return (\n      <Checkbox\n        label={renderTosLink(url, lang.isRtl)}\n        name=\"checkout_tos\"\n        checked={Boolean(isTosAccepted)}\n        className={styles.tosCheckbox}\n        tabIndex={0}\n        onCheck={onAcceptTos}\n      />\n    );\n  }\n\n  return (\n    <div className={styles.root}>\n      <div className={styles.description}>\n        {photoUrl && <img className={styles.checkoutPicture} src={photoUrl} draggable={false} alt=\"\" />}\n        {!photoUrl && photo && (\n          <Skeleton\n            width={photo.dimensions?.width}\n            height={photo.dimensions?.height}\n            className={styles.checkoutPicture}\n            forceAspectRatio\n          />\n        )}\n        <div className={styles.text}>\n          <h5 className={styles.checkoutTitle}>{title}</h5>\n          {text && <div className={styles.checkoutDescription}>{renderText(text, ['br', 'links', 'emoji'])}</div>}\n        </div>\n      </div>\n      <div className={styles.priceInfo}>\n        {prices && prices.map((item) => (\n          renderPaymentItem(lang.code, item.label, item.amount, currency)\n        ))}\n        {shippingPrices && shippingPrices.map((item) => (\n          renderPaymentItem(lang.code, item.label, item.amount, currency)\n        ))}\n        {suggestedTipAmounts && suggestedTipAmounts.length > 0 && renderTips()}\n        {totalPrice !== undefined && (\n          renderPaymentItem(lang.code, lang('Checkout.TotalAmount'), totalPrice, currency, true)\n        )}\n      </div>\n      <div className={styles.invoiceInfo}>\n        {!isPaymentFormUrl && renderCheckoutItem({\n          title: paymentMethod || savedCredentials?.[0].title,\n          label: lang('PaymentCheckoutMethod'),\n          icon: 'card',\n          onClick: isInteractive ? handlePaymentMethodClick : undefined,\n        })}\n        {paymentProvider && renderCheckoutItem({\n          title: paymentProvider,\n          label: lang('PaymentCheckoutProvider'),\n          customIcon: buildClassName(styles.provider, styles[paymentProvider.toLowerCase()]),\n        })}\n        {(needAddress || (!isInteractive && shippingAddress)) && renderCheckoutItem({\n          title: shippingAddress,\n          label: lang('PaymentShippingAddress'),\n          icon: 'location',\n          onClick: isInteractive ? handleShippingAddressClick : undefined,\n        })}\n        {name && renderCheckoutItem({\n          title: name,\n          label: lang('PaymentCheckoutName'),\n          icon: 'user',\n        })}\n        {phone && renderCheckoutItem({\n          title: phone,\n          label: lang('PaymentCheckoutPhoneNumber'),\n          icon: 'phone',\n        })}\n        {(hasShippingOptions || (!isInteractive && shippingMethod)) && renderCheckoutItem({\n          title: shippingMethod,\n          label: lang('PaymentCheckoutShippingMethod'),\n          icon: 'truck',\n          onClick: isInteractive ? handleShippingMethodClick : undefined,\n        })}\n        {termsUrl && renderTos(termsUrl)}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(Checkout);\n\nfunction renderPaymentItem(\n  langCode: LangCode | undefined, title: string, value: number, currency: string, main = false,\n) {\n  return (\n    <div className={buildClassName(styles.priceInfoItem, main && styles.priceInfoItemMain)}>\n      <div className={styles.priceInfoItemTitle}>\n        {title}\n      </div>\n      <div>\n        {formatCurrency(value, currency, langCode)}\n      </div>\n    </div>\n  );\n}\n\nfunction renderCheckoutItem({\n  title,\n  label,\n  icon,\n  customIcon,\n  onClick,\n}: {\n  title : string | undefined;\n  label: string | undefined;\n  icon?: IconName;\n  onClick?: NoneToVoidFunction;\n  customIcon?: string;\n}) {\n  const isMultiline = Boolean(title && label !== title);\n\n  return (\n    <ListItem\n      multiline={isMultiline}\n      narrow={isMultiline}\n      icon={icon}\n      inactive={!onClick}\n      onClick={onClick}\n      leftElement={customIcon && <i className={buildClassName('icon', customIcon)} />}\n    >\n      <div className={styles.checkoutInfoItemInfoTitle}>\n        {title || label}\n      </div>\n      {title && label !== title && (\n        <p className={styles.checkoutInfoItemInfoData}>\n          {label}\n        </p>\n      )}\n    </ListItem>\n  );\n}\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useCallback, useEffect } from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport { TME_LINK_PREFIX } from '../../config';\n\nimport useOldLang from '../../hooks/useOldLang';\n\nimport './ConfirmPayment.scss';\n\nexport type OwnProps = {\n  url: string;\n  noRedirect?: boolean;\n  onClose: NoneToVoidFunction;\n  onPaymentFormSubmit?: (eventData: PaymentFormSubmitEvent['eventData']) => void;\n};\n\nexport interface PaymentFormSubmitEvent {\n  eventType: 'payment_form_submit';\n  eventData: {\n    credentials: {\n      token: string;\n      type: string;\n    };\n    title: string;\n  };\n}\n\ninterface WebAppOpenTgLinkEvent {\n  eventType: 'web_app_open_tg_link';\n  eventData: {\n    path_full?: string;\n  };\n}\n\ntype IframeCallbackEvent = PaymentFormSubmitEvent | WebAppOpenTgLinkEvent;\n\nconst ConfirmPayment: FC<OwnProps> = ({\n  url, noRedirect, onClose, onPaymentFormSubmit,\n}) => {\n  const { openTelegramLink } = getActions();\n\n  const lang = useOldLang();\n\n  const handleMessage = useCallback((event: MessageEvent<string>) => {\n    try {\n      const data = JSON.parse(event.data) as IframeCallbackEvent;\n      const { eventType, eventData } = data;\n      switch (eventType) {\n        case 'web_app_open_tg_link':\n          if (!noRedirect) {\n            const linkUrl = TME_LINK_PREFIX + eventData.path_full!;\n            openTelegramLink({ url: linkUrl });\n          }\n          onClose();\n          break;\n        case 'payment_form_submit':\n          if (onPaymentFormSubmit) {\n            onPaymentFormSubmit(eventData);\n          }\n          break;\n        default:\n          onClose();\n          break;\n      }\n    } catch (err) {\n      // Ignore other messages\n    }\n  }, [onClose, noRedirect, openTelegramLink, onPaymentFormSubmit]);\n\n  useEffect(() => {\n    window.addEventListener('message', handleMessage);\n    return () => window.removeEventListener('message', handleMessage);\n  }, [handleMessage]);\n\n  return (\n    <div className=\"ConfirmPayment\">\n      <iframe\n        src={url}\n        title={lang('Checkout.WebConfirmation.Title')}\n        allow=\"payment\"\n        sandbox=\"allow-modals allow-forms allow-scripts allow-same-origin allow-top-navigation\"\n        className=\"ConfirmPayment__content\"\n      />\n    </div>\n  );\n};\n\nexport default memo(ConfirmPayment);\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useMemo, useState } from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { ApiPaymentCredentials } from '../../api/types';\nimport type { FormState } from '../../hooks/reducers/usePaymentReducer';\n\nimport { selectTabState } from '../../global/selectors';\n\nimport useOldLang from '../../hooks/useOldLang';\n\nimport PasswordForm from '../common/PasswordForm';\nimport PasswordMonkey from '../common/PasswordMonkey';\n\ninterface OwnProps {\n  isActive?: boolean;\n  state: FormState;\n  savedCredentials?: ApiPaymentCredentials[];\n  onPasswordChange: (password: string) => void;\n}\n\ninterface StateProps {\n  error?: string;\n  passwordHint?: string;\n  savedCredentials?: ApiPaymentCredentials[];\n}\n\nconst PasswordConfirm: FC<OwnProps & StateProps> = ({\n  isActive,\n  error,\n  state,\n  savedCredentials,\n  passwordHint,\n  onPasswordChange,\n}) => {\n  const { clearPaymentError } = getActions();\n\n  const lang = useOldLang();\n  const [shouldShowPassword, setShouldShowPassword] = useState(false);\n  const cardName = useMemo(() => {\n    return savedCredentials?.length && state.savedCredentialId\n      ? savedCredentials.find(({ id }) => id === state.savedCredentialId)?.title\n      : undefined;\n  }, [savedCredentials, state.savedCredentialId]);\n\n  return (\n    <div className=\"PaymentInfo\">\n      <PasswordMonkey isBig isPasswordVisible={shouldShowPassword} />\n\n      <PasswordForm\n        error={error ? lang(error) : undefined}\n        hint={passwordHint}\n        description={lang('PaymentConfirmationMessage', cardName)}\n        placeholder={lang('Password')}\n        clearError={clearPaymentError}\n        shouldShowSubmit={false}\n        shouldResetValue={isActive}\n        isPasswordVisible={shouldShowPassword}\n        onChangePasswordVisibility={setShouldShowPassword}\n        onInputChange={onPasswordChange}\n      />\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>((global): StateProps => {\n  const { payment } = selectTabState(global);\n  return {\n    error: payment.error?.message,\n    passwordHint: global.twoFaSettings.hint,\n    savedCredentials: payment.savedCredentials,\n  };\n})(PasswordConfirm));\n","import type { RefObject } from 'react';\nimport { useEffect } from '../lib/teact/teact';\n\nimport { requestMeasure } from '../lib/fasterdom/fasterdom';\nimport { IS_TOUCH_ENV } from '../util/windowEnvironment';\n\nconst DEFAULT_DURATION = 300;\n\nexport default function useFocusAfterAnimation(\n  ref: RefObject<HTMLInputElement>, animationDuration = DEFAULT_DURATION,\n) {\n  useEffect(() => {\n    if (IS_TOUCH_ENV) {\n      return;\n    }\n\n    setTimeout(() => {\n      requestMeasure(() => {\n        ref.current?.focus();\n      });\n    }, animationDuration);\n  }, [ref, animationDuration]);\n}\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect,\n  useRef, useState,\n} from '../../lib/teact/teact';\n\nimport { CardType, detectCardType } from '../common/helpers/detectCardType';\nimport { formatCardNumber } from '../middle/helpers/inputFormatters';\n\nimport useFocusAfterAnimation from '../../hooks/useFocusAfterAnimation';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport InputText from '../ui/InputText';\n\nimport './CardInput.scss';\n\nimport mastercardIconPath from '../../assets/mastercard.svg';\nimport mirIconPath from '../../assets/mir.svg';\nimport visaIconPath from '../../assets/visa.svg';\n\nconst CARD_NUMBER_MAX_LENGTH = 19;\n\nexport type OwnProps = {\n  value: string;\n  error?: string;\n  onChange: (value: string) => void;\n};\n\nconst CardInput : FC<OwnProps> = ({ value, error, onChange }) => {\n  const lang = useOldLang();\n  // eslint-disable-next-line no-null/no-null\n  const cardNumberRef = useRef<HTMLInputElement>(null);\n\n  useFocusAfterAnimation(cardNumberRef);\n\n  const [cardType, setCardType] = useState<number>(CardType.Default);\n  useEffect(() => {\n    const newCardType = detectCardType(value);\n    setCardType(newCardType);\n  // eslint-disable-next-line\n  }, []);\n\n  const handleChange = useCallback((e) => {\n    const newValue = formatCardNumber(e.target.value);\n    const newCardType = detectCardType(e.target.value);\n    setCardType(newCardType);\n    onChange(newValue);\n  }, [onChange]);\n\n  const cardIcon = getCardIcon(cardType);\n\n  return (\n    <div className=\"CardInput\">\n      <InputText\n        ref={cardNumberRef}\n        label={lang('PaymentCardNumber')}\n        onChange={handleChange}\n        value={value}\n        inputMode=\"numeric\"\n        className={cardType ? 'has-right-addon' : ''}\n        error={error}\n        tabIndex={0}\n        maxLength={CARD_NUMBER_MAX_LENGTH}\n        teactExperimentControlled\n      />\n      <span className=\"right-addon\">{cardIcon}</span>\n    </div>\n  );\n};\n\nexport default memo(CardInput);\n\nfunction getCardIcon(cardType: CardType) {\n  switch (cardType) {\n    case CardType.Mastercard:\n      return <img src={mastercardIconPath} draggable={false} alt=\"\" />;\n    case CardType.Visa:\n      return <img src={visaIconPath} draggable={false} alt=\"\" />;\n    case CardType.Mir:\n      return <img src={mirIconPath} draggable={false} alt=\"\" />;\n    default:\n      return undefined;\n  }\n}\n","export function formatCardExpiry(input: string) {\n  input = input.replace(/[^\\d]/g, '').slice(0, 4);\n  const parts = input.match(/.{1,2}/g);\n  if (parts?.[0] && Number(parts[0]) > 12) {\n    parts[0] = '12';\n  }\n  if (parts?.[0] && parts[0].length === 2 && !parts[1]) {\n    parts[1] = '';\n  }\n  return parts ? parts.join('/') : '';\n}\n\nexport function formatCardNumber(input: string) {\n  input = input.replace(/[^\\d]/g, '');\n  const parts = input.match(/.{1,4}/g);\n  return parts ? parts.join(' ') : '';\n}\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../lib/teact/teact';\n\nimport { formatCardExpiry } from '../middle/helpers/inputFormatters';\n\nimport useOldLang from '../../hooks/useOldLang';\n\nimport InputText from '../ui/InputText';\n\nconst MAX_FIELD_LENGTH = 5;\n\nexport type OwnProps = {\n  value: string;\n  error?: string;\n  onChange: (value: string) => void;\n};\n\nconst ExpiryInput : FC<OwnProps> = ({ value, error, onChange }) => {\n  const lang = useOldLang();\n\n  const handleChange = useCallback((e) => {\n    const newValue = e.target.value;\n    // Allow deleting separator\n    if (value.endsWith('/') && value.length > newValue.length) {\n      onChange(newValue);\n    } else {\n      onChange(formatCardExpiry(e.target.value));\n    }\n  }, [onChange, value]);\n\n  return (\n    <InputText\n      label={lang('PaymentCardExpireDate')}\n      onChange={handleChange}\n      value={value}\n      error={error}\n      inputMode=\"numeric\"\n      tabIndex={0}\n      maxLength={MAX_FIELD_LENGTH}\n      teactExperimentControlled\n    />\n  );\n};\n\nexport default memo(ExpiryInput);\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect,\n  useRef,\n} from '../../lib/teact/teact';\n\nimport type { ApiCountry } from '../../api/types';\nimport type { FormEditDispatch, FormState } from '../../hooks/reducers/usePaymentReducer';\n\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Checkbox from '../ui/Checkbox';\nimport InputText from '../ui/InputText';\nimport Select from '../ui/Select';\nimport CardInput from './CardInput';\nimport ExpiryInput from './ExpiryInput';\n\nimport './PaymentInfo.scss';\n\nexport type OwnProps = {\n  state: FormState;\n  canSaveCredentials: boolean;\n  needCardholderName?: boolean;\n  needCountry?: boolean;\n  needZip?: boolean;\n  countryList: ApiCountry[];\n  dispatch: FormEditDispatch;\n};\n\nconst PaymentInfo: FC<OwnProps> = ({\n  state,\n  canSaveCredentials,\n  needCardholderName,\n  needCountry,\n  needZip,\n  countryList,\n  dispatch,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const selectCountryRef = useRef<HTMLSelectElement>(null);\n\n  useEffect(() => {\n    if (selectCountryRef.current\n      && selectCountryRef.current.value !== state.billingCountry) {\n      selectCountryRef.current.value = state.billingCountry;\n    }\n  }, [state.billingCountry]);\n\n  const handleCardNumberChange = useCallback((value) => {\n    dispatch({ type: 'changeCardNumber', payload: value });\n  }, [dispatch]);\n\n  const handleCardholderChange = useCallback((e) => {\n    dispatch({ type: 'changeCardholder', payload: e.target.value.toUpperCase() });\n  }, [dispatch]);\n\n  const handleExpiryChange = useCallback((value) => {\n    dispatch({ type: 'changeExpiryDate', payload: value });\n  }, [dispatch]);\n\n  const handleCvvChange = useCallback((e) => {\n    const newValue = e.target.value.replace(/[^0-9]/g, '');\n    dispatch({ type: 'changeCvvCode', payload: newValue });\n  }, [dispatch]);\n\n  const handleCountryChange = useCallback((e) => {\n    dispatch({ type: 'changeBillingCountry', payload: e.target.value });\n  }, [dispatch]);\n\n  const handleBillingPostCodeChange = useCallback((e) => {\n    dispatch({ type: 'changeBillingZip', payload: e.target.value });\n  }, [dispatch]);\n\n  const handleChangeSaveCredentials = useCallback((e) => {\n    dispatch({ type: 'changeSaveCredentials', payload: e.target.value });\n  }, [dispatch]);\n\n  const lang = useOldLang();\n\n  const { formErrors = {} } = state;\n\n  return (\n    <div className=\"PaymentInfo\">\n      <form>\n        <h5>{lang('PaymentCardTitle')}</h5>\n        <CardInput\n          onChange={handleCardNumberChange}\n          value={state.cardNumber}\n          error={formErrors.cardNumber}\n        />\n        { needCardholderName && (\n          <InputText\n            label={lang('Checkout.NewCard.CardholderNamePlaceholder')}\n            onChange={handleCardholderChange}\n            value={state.cardholder}\n            inputMode=\"text\"\n            tabIndex={0}\n            error={formErrors.cardholder}\n          />\n        )}\n        <section className=\"inline-inputs\">\n          <ExpiryInput\n            value={state.expiry}\n            onChange={handleExpiryChange}\n            error={formErrors.expiry}\n          />\n          <InputText\n            label={lang('lng_payments_card_cvc')}\n            onChange={handleCvvChange}\n            value={state.cvv}\n            inputMode=\"numeric\"\n            maxLength={3}\n            tabIndex={0}\n            error={formErrors.cvv}\n            teactExperimentControlled\n          />\n        </section>\n        { needCountry || needZip ? (\n          <h5>{lang('PaymentBillingAddress')}</h5>\n        ) : undefined }\n        { needCountry && (\n          <Select\n            label={lang('PaymentShippingCountry')}\n            onChange={handleCountryChange}\n            value={state.billingCountry}\n            hasArrow={Boolean(true)}\n            id=\"billing-country\"\n            error={formErrors.billingCountry}\n            tabIndex={0}\n            ref={selectCountryRef}\n          >\n            {\n              countryList.map(({ defaultName, name }) => (\n                <option\n                  value={defaultName}\n                  className=\"county-item\"\n                  selected={defaultName === state.billingCountry}\n                >\n                  {defaultName || name}\n                </option>\n              ))\n            }\n          </Select>\n        ) }\n        { needZip && (\n          <InputText\n            label={lang('PaymentShippingZipPlaceholder')}\n            onChange={handleBillingPostCodeChange}\n            value={state.billingZip}\n            inputMode=\"text\"\n            tabIndex={0}\n            maxLength={12}\n            error={formErrors.billingZip}\n          />\n        )}\n        <Checkbox\n          label={lang('PaymentCardSavePaymentInformation')}\n          checked={canSaveCredentials ? state.saveCredentials : false}\n          tabIndex={0}\n          onChange={handleChangeSaveCredentials}\n          disabled={!canSaveCredentials}\n        />\n        <p className=\"description\">\n          {lang(canSaveCredentials ? 'Checkout.NewCard.SaveInfoHelp' : 'Checkout.2FA.Text')}\n        </p>\n      </form>\n    </div>\n  );\n};\n\nexport default memo(PaymentInfo);\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useCallback, useMemo } from '../../lib/teact/teact';\n\nimport type { ApiPaymentCredentials } from '../../api/types';\nimport type { FormEditDispatch, FormState } from '../../hooks/reducers/usePaymentReducer';\n\nimport { MEMO_EMPTY_ARRAY } from '../../util/memo';\n\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Button from '../ui/Button';\nimport RadioGroup from '../ui/RadioGroup';\n\ninterface OwnProps {\n  state: FormState;\n  savedCredentials?: ApiPaymentCredentials[];\n  dispatch: FormEditDispatch;\n  onNewCardClick: NoneToVoidFunction;\n}\n\nconst SavedPaymentCredentials: FC<OwnProps> = ({\n  state,\n  savedCredentials,\n  dispatch,\n  onNewCardClick,\n}) => {\n  const lang = useOldLang();\n\n  const options = useMemo(() => {\n    return savedCredentials?.length\n      ? savedCredentials.map(({ id, title }) => ({ label: title, value: id }))\n      : MEMO_EMPTY_ARRAY;\n  }, [savedCredentials]);\n\n  const onChange = useCallback((value) => {\n    dispatch({ type: 'changeSavedCredentialId', payload: value });\n  }, [dispatch]);\n\n  return (\n    <div className=\"PaymentInfo\">\n      <form>\n        <h5>{lang('PaymentCardTitle')}</h5>\n\n        <RadioGroup\n          name=\"saved-credentials\"\n          options={options}\n          selected={state.savedCredentialId}\n          onChange={onChange}\n        />\n\n        <Button isText onClick={onNewCardClick}>\n          {lang('PaymentCheckoutMethodNewCard')}\n        </Button>\n      </form>\n    </div>\n  );\n};\n\nexport default memo(SavedPaymentCredentials);\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect,\n  useMemo,\n} from '../../lib/teact/teact';\n\nimport type { FormEditDispatch, FormState } from '../../hooks/reducers/usePaymentReducer';\nimport type { ShippingOption } from '../../types';\n\nimport { formatCurrency } from '../../util/formatCurrency';\n\nimport useOldLang from '../../hooks/useOldLang';\n\nimport RadioGroup from '../ui/RadioGroup';\n\nimport './Shipping.scss';\n\nexport type OwnProps = {\n  state: FormState;\n  shippingOptions: ShippingOption[];\n  currency: string;\n  dispatch: FormEditDispatch;\n};\n\nconst Shipping: FC<OwnProps> = ({\n  state,\n  shippingOptions,\n  currency,\n  dispatch,\n}) => {\n  const lang = useOldLang();\n\n  useEffect(() => {\n    if (!shippingOptions || !shippingOptions.length || state.shipping) {\n      return;\n    }\n    dispatch({ type: 'changeShipping', payload: shippingOptions[0].id });\n  }, [shippingOptions, state.shipping, dispatch]);\n\n  const handleShippingSelect = useCallback((value) => {\n    dispatch({ type: 'changeShipping', payload: value });\n  }, [dispatch]);\n\n  const options = useMemo(() => (shippingOptions.map(({ id: value, title: label, amount }) => ({\n    label,\n    subLabel: formatCurrency(amount, currency, lang.code),\n    value,\n  }))), [shippingOptions, currency, lang.code]);\n\n  return (\n    <div className=\"Shipping\">\n      <form>\n        <p>{lang('PaymentShippingMethod')}</p>\n        <RadioGroup\n          name=\"shipping-options\"\n          options={options}\n          onChange={handleShippingSelect}\n          selected={state.shipping}\n        />\n      </form>\n    </div>\n  );\n};\n\nexport default memo(Shipping);\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo,\n  useCallback, useEffect, useRef,\n} from '../../lib/teact/teact';\n\nimport type { ApiCountry } from '../../api/types';\nimport type { FormEditDispatch, FormState } from '../../hooks/reducers/usePaymentReducer';\n\nimport useFocusAfterAnimation from '../../hooks/useFocusAfterAnimation';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Checkbox from '../ui/Checkbox';\nimport InputText from '../ui/InputText';\nimport Select from '../ui/Select';\n\nimport './ShippingInfo.scss';\n\nexport type OwnProps = {\n  state: FormState;\n  needEmail: boolean;\n  needPhone: boolean;\n  needName: boolean;\n  needAddress: boolean;\n  countryList: ApiCountry[];\n  dispatch: FormEditDispatch;\n};\n\nconst ShippingInfo: FC<OwnProps> = ({\n  state,\n  needEmail,\n  needPhone,\n  needName,\n  needAddress,\n  countryList,\n  dispatch,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const inputRef = useRef<HTMLInputElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const phoneRef = useRef<HTMLInputElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const selectCountryRef = useRef<HTMLSelectElement>(null);\n\n  useEffect(() => {\n    if (selectCountryRef.current\n      && selectCountryRef.current.value !== state.countryIso2) {\n      selectCountryRef.current.value = state.countryIso2;\n    }\n  }, [state.countryIso2]);\n\n  const lang = useOldLang();\n\n  useFocusAfterAnimation(inputRef);\n\n  const handleAddress1Change = useCallback((e) => {\n    dispatch({ type: 'changeAddress1', payload: e.target.value });\n  }, [dispatch]);\n\n  const handleAddress2Change = useCallback((e) => {\n    dispatch({ type: 'changeAddress2', payload: e.target.value });\n  }, [dispatch]);\n\n  const handleCityChange = useCallback((e) => {\n    dispatch({ type: 'changeCity', payload: e.target.value });\n  }, [dispatch]);\n\n  const handleStateChange = useCallback((e) => {\n    dispatch({ type: 'changeState', payload: e.target.value });\n  }, [dispatch]);\n\n  const handleCountryChange = useCallback((e) => {\n    dispatch({ type: 'changeCountry', payload: countryList.find((country) => country.iso2 === e.target.value) });\n  }, [countryList, dispatch]);\n\n  const handlePostCodeChange = useCallback((e) => {\n    dispatch({ type: 'changePostCode', payload: e.target.value });\n  }, [dispatch]);\n\n  const handleFullNameChange = useCallback((e) => {\n    dispatch({ type: 'changeFullName', payload: e.target.value });\n  }, [dispatch]);\n\n  const handleEmailChange = useCallback((e) => {\n    dispatch({ type: 'changeEmail', payload: e.target.value });\n  }, [dispatch]);\n\n  const handlePhoneChange = useCallback((e) => {\n    let { value } = e.target;\n    value = `+${value.replace(/\\D/g, '')}`;\n    if (phoneRef.current) {\n      phoneRef.current.value = value;\n    }\n    dispatch({ type: 'changePhone', payload: value });\n  }, [dispatch]);\n\n  const handleSaveInfoChange = useCallback((e) => {\n    dispatch({ type: 'changeSaveInfo', payload: e.target.value });\n  }, [dispatch]);\n\n  const { formErrors } = state;\n  return (\n    <div className=\"ShippingInfo\">\n      <form>\n        {needAddress ? (\n          <div>\n            <h5>{lang('PaymentShippingAddress')}</h5>\n            <InputText\n              ref={inputRef}\n              label={lang('PaymentShippingAddress1Placeholder')}\n              onChange={handleAddress1Change}\n              value={state.streetLine1}\n              inputMode=\"text\"\n              tabIndex={0}\n              error={formErrors.streetLine1}\n            />\n            <InputText\n              label={lang('PaymentShippingAddress2Placeholder')}\n              onChange={handleAddress2Change}\n              value={state.streetLine2}\n              inputMode=\"text\"\n              tabIndex={0}\n              error={formErrors.streetLine2}\n            />\n            <InputText\n              label={lang('PaymentShippingCityPlaceholder')}\n              onChange={handleCityChange}\n              value={state.city}\n              inputMode=\"text\"\n              tabIndex={0}\n              error={formErrors.city}\n            />\n            <InputText\n              label={lang('PaymentShippingStatePlaceholder')}\n              onChange={handleStateChange}\n              value={state.state}\n              inputMode=\"text\"\n              error={formErrors.state}\n            />\n            <Select\n              label={lang('PaymentShippingCountry')}\n              onChange={handleCountryChange}\n              value={state.countryIso2}\n              hasArrow={Boolean(true)}\n              id=\"shipping-country\"\n              error={formErrors.countryIso2}\n              ref={selectCountryRef}\n              tabIndex={0}\n            >\n              {countryList.map(({ defaultName, name, iso2 }) => (\n                <option\n                  value={iso2}\n                  className=\"county-item\"\n                  selected={iso2 === state.countryIso2}\n                >\n                  {defaultName || name}\n                </option>\n              ))}\n            </Select>\n\n            <InputText\n              label={lang('PaymentShippingZipPlaceholder')}\n              onChange={handlePostCodeChange}\n              value={state.postCode}\n              inputMode=\"text\"\n              tabIndex={0}\n              error={formErrors.postCode}\n            />\n          </div>\n        ) : undefined}\n        { needName || needEmail || needPhone ? (\n          <h5>{lang('PaymentShippingReceiver')}</h5>\n        ) : undefined }\n        { needName && (\n          <InputText\n            label={lang('PaymentShippingName')}\n            onChange={handleFullNameChange}\n            value={state.fullName}\n            inputMode=\"text\"\n            tabIndex={0}\n            error={formErrors.fullName}\n          />\n        ) }\n        { needEmail && (\n          <InputText\n            label={lang('PaymentShippingEmailPlaceholder')}\n            onChange={handleEmailChange}\n            value={state.email}\n            inputMode=\"email\"\n            tabIndex={0}\n            error={formErrors.email}\n          />\n        ) }\n        { needPhone && (\n          <InputText\n            label={lang('PaymentShippingPhoneNumber')}\n            onChange={handlePhoneChange}\n            value={state.phone}\n            inputMode=\"tel\"\n            tabIndex={0}\n            error={formErrors.phone}\n            ref={phoneRef}\n          />\n        ) }\n        <Checkbox\n          label={lang('PaymentShippingSave')}\n          subLabel={lang('PaymentShippingSaveInfo')}\n          checked={Boolean(state.saveInfo)}\n          tabIndex={0}\n          onChange={handleSaveInfoChange}\n        />\n      </form>\n    </div>\n  );\n};\n\nexport default memo(ShippingInfo);\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useMemo, useState,\n} from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { ApiChat, ApiCountry, ApiPaymentCredentials } from '../../api/types';\nimport type { TabState } from '../../global/types';\nimport type { FormState } from '../../hooks/reducers/usePaymentReducer';\nimport type { Price, ShippingOption } from '../../types';\nimport type { PaymentFormSubmitEvent } from './ConfirmPayment';\nimport { PaymentStep } from '../../types';\n\nimport { getUserFullName } from '../../global/helpers';\nimport { selectChat, selectTabState, selectUser } from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport captureKeyboardListeners from '../../util/captureKeyboardListeners';\nimport { formatCurrencyAsString } from '../../util/formatCurrency';\nimport { detectCardTypeText } from '../common/helpers/detectCardType';\n\nimport usePaymentReducer from '../../hooks/reducers/usePaymentReducer';\nimport useFlag from '../../hooks/useFlag';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\nimport usePreviousDeprecated from '../../hooks/usePreviousDeprecated';\n\nimport Button from '../ui/Button';\nimport Modal from '../ui/Modal';\nimport Spinner from '../ui/Spinner';\nimport Transition from '../ui/Transition';\nimport Checkout from './Checkout';\nimport ConfirmPayment from './ConfirmPayment';\nimport PasswordConfirm from './PasswordConfirm';\nimport PaymentInfo from './PaymentInfo';\nimport SavedPaymentCredentials from './SavedPaymentCredentials';\nimport Shipping from './Shipping';\nimport ShippingInfo from './ShippingInfo';\n\nimport './PaymentModal.scss';\n\nconst DEFAULT_PROVIDER = 'stripe';\nconst DONATE_PROVIDER = 'smartglocal';\nconst DONATE_PROVIDER_URL = 'https://payment.smart-glocal.com';\nconst SUPPORTED_PROVIDERS = new Set([DEFAULT_PROVIDER, DONATE_PROVIDER]);\n\nexport type OwnProps = {\n  isOpen?: boolean;\n  onClose: NoneToVoidFunction;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  isNameRequested?: boolean;\n  isShippingAddressRequested?: boolean;\n  isPhoneRequested?: boolean;\n  isEmailRequested?: boolean;\n  shouldSendPhoneToProvider?: boolean;\n  shouldSendEmailToProvider?: boolean;\n  currency?: string;\n  prices?: Price[];\n  isProviderError?: boolean;\n  needCardholderName?: boolean;\n  needCountry?: boolean;\n  needZip?: boolean;\n  confirmPaymentUrl?: string;\n  countryList: ApiCountry[];\n  hasShippingOptions?: boolean;\n  requestId?: string;\n  smartGlocalToken?: string;\n  stripeId?: string;\n  savedCredentials?: ApiPaymentCredentials[];\n  passwordValidUntil?: number;\n  isExtendedMedia?: boolean;\n  isPaymentFormUrl?: boolean;\n  botName?: string;\n};\n\ntype GlobalStateProps = Pick<TabState['payment'], (\n  'step' | 'shippingOptions' |\n  'savedInfo' | 'canSaveCredentials' | 'nativeProvider' | 'passwordMissing' | 'invoice' | 'error'\n)>;\n\nconst NETWORK_REQUEST_TIMEOUT_S = 3;\n\nconst PaymentModal: FC<OwnProps & StateProps & GlobalStateProps> = ({\n  isOpen,\n  onClose,\n  step,\n  shippingOptions,\n  savedInfo,\n  canSaveCredentials,\n  isNameRequested,\n  isShippingAddressRequested,\n  isPhoneRequested,\n  isEmailRequested,\n  shouldSendPhoneToProvider,\n  shouldSendEmailToProvider,\n  currency,\n  passwordMissing,\n  isProviderError,\n  invoice,\n  nativeProvider,\n  prices,\n  needCardholderName,\n  needCountry,\n  needZip,\n  confirmPaymentUrl,\n  error,\n  countryList,\n  hasShippingOptions,\n  requestId,\n  smartGlocalToken,\n  stripeId,\n  savedCredentials,\n  passwordValidUntil,\n  isExtendedMedia,\n  isPaymentFormUrl,\n  botName,\n}) => {\n  const {\n    loadPasswordInfo,\n    validateRequestedInfo,\n    sendPaymentForm,\n    setPaymentStep,\n    sendCredentialsInfo,\n    clearPaymentError,\n    validatePaymentPassword,\n    setSmartGlocalCardInfo,\n  } = getActions();\n\n  const lang = useOldLang();\n\n  const [isModalOpen, openModal, closeModal] = useFlag();\n  const [paymentState, paymentDispatch] = usePaymentReducer();\n  const [isLoading, setIsLoading] = useState(false);\n  const [isTosAccepted, setIsTosAccepted] = useState(false);\n  const [twoFaPassword, setTwoFaPassword] = useState('');\n  const prevStep = usePreviousDeprecated(step, true);\n  const prevRequestId = usePreviousDeprecated(requestId);\n  const canRenderFooter = step !== PaymentStep.ConfirmPayment;\n\n  const setStep = useCallback((nextStep) => {\n    setPaymentStep({ step: nextStep });\n  }, [setPaymentStep]);\n\n  useEffect(() => {\n    if (isOpen) {\n      setTwoFaPassword('');\n      loadPasswordInfo();\n      openModal();\n    }\n  }, [isOpen, loadPasswordInfo, openModal]);\n\n  // Modal window can be closed by an event from the server side\n  useEffect(() => {\n    if (!isOpen && isModalOpen) {\n      closeModal();\n    }\n  }, [closeModal, isModalOpen, isOpen]);\n\n  useEffect(() => {\n    if (step !== undefined || error) {\n      setIsLoading(false);\n    }\n  }, [step, error, requestId]);\n\n  // When payment verification occurs and the `step` does not change, the card details must be requested\n  useEffect(() => {\n    if (\n      step === PaymentStep.Checkout\n      && step === prevStep\n      && requestId !== prevRequestId\n      && !paymentState.savedCredentialId\n      && !paymentState.cardNumber\n    ) {\n      setStep(PaymentStep.PaymentInfo);\n    }\n  }, [paymentState.cardNumber, paymentState.savedCredentialId, prevRequestId, prevStep, requestId, setStep, step]);\n\n  useEffect(() => {\n    if (error?.field) {\n      paymentDispatch({\n        type: 'setFormErrors',\n        payload: {\n          [error.field]: error.message,\n        },\n      });\n    }\n  }, [error, paymentDispatch]);\n\n  useEffect(() => {\n    if (savedInfo) {\n      const {\n        name: fullName, phone, email, shippingAddress,\n      } = savedInfo;\n      const {\n        countryIso2, ...shippingAddressRest\n      } = shippingAddress || {};\n      const shippingCountry = countryIso2 && countryList.find(({ iso2 }) => iso2 === countryIso2)!.defaultName;\n      paymentDispatch({\n        type: 'updateUserInfo',\n        payload: {\n          fullName,\n          phone: phone && phone.charAt(0) !== '+'\n            ? `+${phone}`\n            : phone,\n          email,\n          ...(shippingCountry && {\n            country: shippingCountry,\n            countryIso2,\n            ...shippingAddressRest,\n          }),\n        },\n      });\n    }\n  }, [savedInfo, paymentDispatch, countryList]);\n\n  useEffect(() => {\n    if (savedCredentials?.length) {\n      paymentDispatch({\n        type: 'changeSavedCredentialId',\n        payload: savedCredentials[0].id,\n      });\n    }\n  }, [paymentDispatch, savedCredentials]);\n\n  const handleErrorModalClose = useCallback(() => {\n    clearPaymentError();\n  }, [clearPaymentError]);\n\n  const totalPrice = useMemo(() => {\n    if (step !== PaymentStep.Checkout) {\n      return 0;\n    }\n\n    return getTotalPrice(prices, shippingOptions, paymentState.shipping, paymentState.tipAmount);\n  }, [step, prices, shippingOptions, paymentState.shipping, paymentState.tipAmount]);\n\n  const checkoutInfo = useMemo(() => {\n    if (step !== PaymentStep.Checkout) {\n      return undefined;\n    }\n    return getCheckoutInfo(paymentState, shippingOptions, nativeProvider || '');\n  }, [step, paymentState, shippingOptions, nativeProvider]);\n\n  const handleNewCardClick = useCallback(() => {\n    setStep(PaymentStep.PaymentInfo);\n  }, [setStep]);\n\n  const handleClearPaymentError = useCallback(() => {\n    clearPaymentError();\n  }, [clearPaymentError]);\n\n  function renderError() {\n    if (!error) {\n      return undefined;\n    }\n    return (\n      <Modal\n        className=\"error\"\n        isOpen={Boolean(error)}\n        onClose={handleErrorModalClose}\n      >\n        <h4>{error.description || 'Error'}</h4>\n        <p>{error.description || 'Error'}</p>\n        <div className=\"dialog-buttons mt-2\">\n          <Button\n            isText\n            onClick={handleClearPaymentError}\n          >\n            {lang('OK')}\n          </Button>\n        </div>\n      </Modal>\n    );\n  }\n\n  const sendForm = useCallback(() => {\n    sendPaymentForm({\n      shippingOptionId: paymentState.shipping,\n      saveCredentials: paymentState.saveCredentials,\n      savedCredentialId: paymentState.savedCredentialId,\n      tipAmount: paymentState.tipAmount,\n    });\n  }, [sendPaymentForm, paymentState]);\n\n  const handlePaymentFormSubmit = useCallback((eventData: PaymentFormSubmitEvent['eventData']) => {\n    const { credentials } = eventData;\n    setSmartGlocalCardInfo(credentials);\n    sendForm();\n  }, [sendForm]);\n\n  function renderModalContent(currentStep: PaymentStep) {\n    switch (currentStep) {\n      case PaymentStep.Checkout:\n        return (\n          <Checkout\n            prices={prices}\n            dispatch={paymentDispatch}\n            shippingPrices={paymentState.shipping && shippingOptions\n              ? getShippingPrices(shippingOptions, paymentState.shipping)\n              : undefined}\n            totalPrice={totalPrice}\n            invoice={invoice}\n            checkoutInfo={checkoutInfo}\n            isPaymentFormUrl={isPaymentFormUrl}\n            currency={currency!}\n            hasShippingOptions={hasShippingOptions}\n            tipAmount={paymentState.tipAmount}\n            needAddress={Boolean(isShippingAddressRequested)}\n            savedCredentials={savedCredentials}\n            isTosAccepted={isTosAccepted}\n            onAcceptTos={setIsTosAccepted}\n            botName={botName}\n          />\n        );\n      case PaymentStep.SavedPayments:\n        return (\n          <SavedPaymentCredentials\n            state={paymentState}\n            savedCredentials={savedCredentials}\n            dispatch={paymentDispatch}\n            onNewCardClick={handleNewCardClick}\n          />\n        );\n      case PaymentStep.ConfirmPassword:\n        return (\n          <PasswordConfirm\n            state={paymentState}\n            savedCredentials={savedCredentials}\n            onPasswordChange={setTwoFaPassword}\n            isActive={currentStep === step}\n          />\n        );\n      case PaymentStep.PaymentInfo:\n        return (\n          <PaymentInfo\n            state={paymentState}\n            dispatch={paymentDispatch}\n            canSaveCredentials={Boolean(!passwordMissing && canSaveCredentials)}\n            needCardholderName={needCardholderName}\n            needCountry={needCountry}\n            needZip={needZip}\n            countryList={countryList!}\n          />\n        );\n      case PaymentStep.ShippingInfo:\n        return (\n          <ShippingInfo\n            state={paymentState}\n            dispatch={paymentDispatch}\n            needAddress={Boolean(isShippingAddressRequested)}\n            needEmail={Boolean(isEmailRequested || shouldSendEmailToProvider)}\n            needPhone={Boolean(isPhoneRequested || shouldSendPhoneToProvider)}\n            needName={Boolean(isNameRequested)}\n            countryList={countryList!}\n          />\n        );\n      case PaymentStep.Shipping:\n        return (\n          <Shipping\n            state={paymentState}\n            dispatch={paymentDispatch}\n            shippingOptions={shippingOptions || []}\n            currency={currency!}\n          />\n        );\n      case PaymentStep.ConfirmPayment:\n        return (\n          <ConfirmPayment\n            url={confirmPaymentUrl!}\n            noRedirect={isExtendedMedia}\n            onPaymentFormSubmit={handlePaymentFormSubmit}\n            onClose={closeModal}\n          />\n        );\n      default:\n        return undefined;\n    }\n  }\n\n  const validateRequest = useCallback(() => {\n    const { saveInfo } = paymentState;\n    const requestInfo = getRequestInfo(paymentState);\n    validateRequestedInfo({ requestInfo, saveInfo });\n  }, [validateRequestedInfo, paymentState]);\n\n  const sendCredentials = useCallback(() => {\n    const credentials = getCredentials(paymentState);\n    sendCredentialsInfo({\n      credentials,\n    });\n  }, [sendCredentialsInfo, paymentState]);\n\n  const handleButtonClick = useLastCallback(() => {\n    switch (step) {\n      case PaymentStep.ShippingInfo:\n        setIsLoading(true);\n        validateRequest();\n        break;\n\n      case PaymentStep.Shipping:\n        setStep(PaymentStep.Checkout);\n        break;\n\n      case PaymentStep.SavedPayments:\n        setStep(PaymentStep.ConfirmPassword);\n        break;\n\n      case PaymentStep.ConfirmPassword:\n        if (twoFaPassword === '') {\n          return;\n        }\n\n        setIsLoading(true);\n        validatePaymentPassword({ password: twoFaPassword });\n        break;\n\n      case PaymentStep.PaymentInfo:\n        setIsLoading(true);\n        sendCredentials();\n        paymentDispatch({ type: 'changeSavedCredentialId', payload: '' });\n        break;\n\n      case PaymentStep.Checkout: {\n        if (isPaymentFormUrl) {\n          setIsLoading(true);\n          setStep(PaymentStep.ConfirmPayment);\n          return;\n        }\n\n        if (savedInfo && !requestId && !paymentState.shipping) {\n          setIsLoading(true);\n          validateRequest();\n          return;\n        }\n\n        if (\n          paymentState.savedCredentialId\n          && (!passwordValidUntil || passwordValidUntil <= (Date.now() / 1000 - NETWORK_REQUEST_TIMEOUT_S))\n        ) {\n          setStep(PaymentStep.ConfirmPassword);\n          return;\n        }\n\n        if (\n          !paymentState.savedCredentialId\n          && (\n            (nativeProvider === DEFAULT_PROVIDER && !stripeId)\n            || (nativeProvider === DONATE_PROVIDER && !smartGlocalToken)\n          )\n        ) {\n          setStep(PaymentStep.PaymentInfo);\n          return;\n        }\n\n        const { phone, email, fullName } = paymentState;\n        const shouldFillRequestedData = (isEmailRequested && !email)\n          || (isPhoneRequested && !phone)\n          || (isNameRequested && !fullName);\n\n        if ((isShippingAddressRequested && !requestId) || shouldFillRequestedData) {\n          setStep(PaymentStep.ShippingInfo);\n          return;\n        }\n\n        if (isShippingAddressRequested && !paymentState.shipping && shippingOptions?.length) {\n          setStep(PaymentStep.Shipping);\n          return;\n        }\n\n        setIsLoading(true);\n        sendForm();\n        break;\n      }\n    }\n  });\n\n  useEffect(() => {\n    return step === PaymentStep.ConfirmPassword\n      ? captureKeyboardListeners({ onEnter: handleButtonClick })\n      : undefined;\n  },\n  [handleButtonClick, step]);\n\n  const handleModalClose = useCallback(() => {\n    paymentDispatch({\n      type: 'resetState',\n    });\n    setIsTosAccepted(false);\n    onClose();\n  }, [onClose, paymentDispatch]);\n\n  const handleBackClick = useCallback(() => {\n    setStep(step === PaymentStep.ConfirmPassword ? PaymentStep.SavedPayments : PaymentStep.Checkout);\n  }, [setStep, step]);\n\n  const modalHeader = useMemo(() => {\n    switch (step) {\n      case PaymentStep.Checkout:\n        return lang('PaymentCheckout');\n      case PaymentStep.ShippingInfo:\n        return lang('PaymentShippingInfo');\n      case PaymentStep.Shipping:\n        return lang('PaymentShippingMethod');\n      case PaymentStep.SavedPayments:\n        return lang('PaymentCheckoutMethod');\n      case PaymentStep.ConfirmPassword:\n        return lang('Checkout.PasswordEntry.Title');\n      case PaymentStep.PaymentInfo:\n        return lang('PaymentCardInfo');\n      case PaymentStep.ConfirmPayment:\n        return lang('Checkout.WebConfirmation.Title');\n      default:\n        return '';\n    }\n  }, [step, lang]);\n\n  const buttonText = step === PaymentStep.Checkout\n    ? lang('Checkout.PayPrice', formatCurrencyAsString(totalPrice, currency!, lang.code))\n    : lang('Next');\n\n  function getIsSubmitDisabled() {\n    if (isLoading) {\n      return true;\n    }\n\n    switch (step) {\n      case PaymentStep.Checkout:\n        return Boolean(invoice?.termsUrl) && !isTosAccepted;\n\n      case PaymentStep.PaymentInfo:\n        return Boolean(\n          paymentState.cardNumber === ''\n          || (needCardholderName && paymentState.cardholder === '')\n          || paymentState.cvv === ''\n          || paymentState.expiry === '',\n        );\n\n      default:\n        return false;\n    }\n  }\n\n  if (isProviderError) {\n    return (\n      <Modal\n        className=\"error\"\n        isOpen={isModalOpen}\n        onClose={closeModal}\n        onCloseAnimationEnd={handleModalClose}\n      >\n        <p>\n          Sorry, Telegram Web A doesn&apos;t support payments with this provider yet. <br />\n          Please use one of our mobile apps to do this.\n        </p>\n        <div className=\"dialog-buttons mt-2\">\n          <Button\n            isText\n            onClick={closeModal}\n          >\n            {lang('OK')}\n          </Button>\n        </div>\n      </Modal>\n    );\n  }\n\n  const isSubmitDisabled = getIsSubmitDisabled();\n\n  return (\n    <Modal\n      className={buildClassName('PaymentModal', invoice?.isRecurring && 'recurring')}\n      isOpen={isModalOpen}\n      onClose={closeModal}\n      onCloseAnimationEnd={handleModalClose}\n    >\n      <div className=\"header\" dir={lang.isRtl ? 'rtl' : undefined}>\n        <Button\n          className=\"close-button\"\n          color=\"translucent\"\n          round\n          size=\"smaller\"\n          onClick={step === PaymentStep.Checkout ? closeModal : handleBackClick}\n          ariaLabel=\"Close\"\n        >\n          <i className={buildClassName(\n            'icon', step === PaymentStep.Checkout ? 'icon-close' : 'icon-arrow-left',\n          )}\n          />\n        </Button>\n        <h3>{modalHeader}</h3>\n      </div>\n      {step !== undefined ? (\n        <Transition\n          name=\"slide\"\n          activeKey={step}\n          shouldCleanup\n          cleanupOnlyKey={PaymentStep.ConfirmPayment}\n        >\n          <div className=\"content custom-scroll\">\n            {renderModalContent(step)}\n          </div>\n        </Transition>\n      ) : (\n        <div className=\"empty-content\">\n          <Spinner color=\"gray\" />\n        </div>\n      )}\n      {canRenderFooter && (\n        <div className=\"footer\">\n          <Button\n            type=\"submit\"\n            onClick={handleButtonClick}\n            disabled={isSubmitDisabled}\n            isLoading={isLoading}\n          >\n            {buttonText}\n          </Button>\n        </div>\n      )}\n      {error && !error.field && renderError()}\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps & GlobalStateProps => {\n    const {\n      step,\n      shippingOptions,\n      savedInfo,\n      canSaveCredentials,\n      invoice,\n      invoiceContainer,\n      nativeProvider,\n      nativeParams,\n      passwordMissing,\n      error,\n      confirmPaymentUrl,\n      inputInvoice,\n      requestId,\n      stripeCredentials,\n      smartGlocalCredentials,\n      savedCredentials,\n      temporaryPassword,\n      isExtendedMedia,\n      url,\n      botId,\n      type,\n    } = selectTabState(global).payment;\n\n    const countryList = global.countryList.general;\n\n    // Handled in `StarPaymentModal`\n    if (type === 'stars') {\n      return {\n        countryList,\n      };\n    }\n\n    let providerName = nativeProvider;\n    if (!providerName && url) {\n      providerName = url.startsWith(DONATE_PROVIDER_URL) ? DONATE_PROVIDER : undefined;\n    }\n\n    const chat = inputInvoice && 'chatId' in inputInvoice ? selectChat(global, inputInvoice.chatId!) : undefined;\n    const isProviderError = Boolean(invoice && (!providerName || !SUPPORTED_PROVIDERS.has(providerName)));\n    const { needCardholderName, needCountry, needZip } = (nativeParams || {});\n    const {\n      isNameRequested,\n      isShippingAddressRequested,\n      isPhoneRequested,\n      isEmailRequested,\n      shouldSendPhoneToProvider,\n      shouldSendEmailToProvider,\n      currency,\n      prices,\n    } = (invoiceContainer || {});\n    const bot = botId ? selectUser(global, botId) : undefined;\n    const botName = getUserFullName(bot);\n\n    return {\n      step,\n      chat,\n      shippingOptions,\n      savedInfo,\n      canSaveCredentials,\n      nativeProvider: providerName,\n      passwordMissing,\n      isNameRequested,\n      isShippingAddressRequested,\n      isPhoneRequested,\n      isEmailRequested,\n      shouldSendPhoneToProvider,\n      shouldSendEmailToProvider,\n      currency,\n      prices,\n      isProviderError,\n      invoice,\n      needCardholderName,\n      needCountry,\n      needZip,\n      error,\n      confirmPaymentUrl: confirmPaymentUrl ?? url,\n      isPaymentFormUrl: Boolean(!nativeProvider && url),\n      countryList,\n      requestId,\n      hasShippingOptions: Boolean(shippingOptions?.length),\n      smartGlocalToken: smartGlocalCredentials?.token,\n      stripeId: stripeCredentials?.id,\n      savedCredentials,\n      passwordValidUntil: temporaryPassword?.validUntil,\n      isExtendedMedia,\n      botName,\n    };\n  },\n)(PaymentModal));\n\nfunction findShippingOption(shippingOptions: ShippingOption[], optionId: string) {\n  return shippingOptions.find(({ id }) => id === optionId);\n}\n\nfunction getShippingPrices(shippingOptions: ShippingOption[], shippingOption: string) {\n  const option = findShippingOption(shippingOptions, shippingOption);\n  return option?.prices;\n}\n\nfunction getTotalPrice(\n  prices: Price[] = [],\n  shippingOptions: ShippingOption[] | undefined,\n  shippingOption: string,\n  tipAmount: number,\n) {\n  const shippingPrices = shippingOptions\n    ? getShippingPrices(shippingOptions, shippingOption)\n    : [];\n  let total = tipAmount;\n  const totalPrices = prices.concat(shippingPrices || []);\n  total = totalPrices.reduce((acc, cur) => {\n    return acc + cur.amount;\n  }, total);\n  return total;\n}\n\nfunction getCheckoutInfo(state: FormState, shippingOptions: ShippingOption[] | undefined, paymentProvider: string) {\n  const cardTypeText = detectCardTypeText(state.cardNumber);\n  const paymentMethod = cardTypeText && state.cardNumber ? `${cardTypeText} *${state.cardNumber.slice(-4)}` : undefined;\n  const shippingAddress = state.streetLine1\n    ? `${state.streetLine1}, ${state.city}, ${state.countryIso2}`\n    : undefined;\n  const { phone, fullName: name } = state;\n  const shippingOption = shippingOptions ? findShippingOption(shippingOptions, state.shipping) : undefined;\n  const shippingMethod = shippingOption?.title;\n  return {\n    paymentMethod,\n    paymentProvider,\n    shippingAddress,\n    name,\n    phone,\n    shippingMethod,\n  };\n}\n\nfunction getRequestInfo(paymentState: FormState) {\n  const {\n    streetLine1,\n    streetLine2,\n    city,\n    state,\n    countryIso2,\n    postCode,\n    fullName: name,\n    phone,\n    email,\n  } = paymentState;\n\n  const shippingAddress = {\n    streetLine1,\n    streetLine2,\n    city,\n    state,\n    countryIso2,\n    postCode,\n  };\n\n  return {\n    name,\n    phone,\n    email,\n    shippingAddress,\n  };\n}\n\nexport type ApiCredentials = {\n  data: {\n    cardNumber: string;\n    cardholder: string;\n    expiryMonth: string;\n    expiryYear: string;\n    cvv: string;\n    country: string;\n    zip: string;\n  };\n};\n\nfunction getCredentials(paymentState: FormState): ApiCredentials {\n  const {\n    cardNumber, cardholder, expiry, cvv, billingCountry, billingZip,\n  } = paymentState;\n  const [expiryMonth, expiryYear] = expiry.split('/');\n  const data = {\n    cardNumber,\n    cardholder,\n    expiryMonth,\n    expiryYear,\n    cvv,\n    country: billingCountry,\n    zip: billingZip,\n  };\n\n  return {\n    data,\n  };\n}\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useEffect, useMemo } from '../../lib/teact/teact';\nimport { withGlobal } from '../../global';\n\nimport type { ApiInvoice, ApiShippingAddress, ApiWebDocument } from '../../api/types';\nimport type { Price } from '../../types';\n\nimport { selectTabState } from '../../global/selectors';\n\nimport useFlag from '../../hooks/useFlag';\nimport useLang from '../../hooks/useLang';\n\nimport Button from '../ui/Button';\nimport Modal from '../ui/Modal';\nimport Checkout from './Checkout';\n\nimport './PaymentModal.scss';\n\nexport type OwnProps = {\n  isOpen?: boolean;\n  onClose: () => void;\n};\n\ntype StateProps = {\n  prices?: Price[];\n  shippingPrices: any;\n  tipAmount?: number;\n  totalAmount?: number;\n  currency?: string;\n  info?: {\n    shippingAddress?: ApiShippingAddress;\n    phone?: string;\n    name?: string;\n  };\n  photo?: ApiWebDocument;\n  text?: string;\n  title?: string;\n  credentialsTitle?: string;\n  shippingMethod?: string;\n};\n\nconst ReceiptModal: FC<OwnProps & StateProps> = ({\n  isOpen,\n  onClose,\n  prices,\n  shippingPrices,\n  tipAmount,\n  totalAmount,\n  currency,\n  info,\n  photo,\n  text,\n  title,\n  credentialsTitle,\n  shippingMethod,\n}) => {\n  const lang = useLang();\n\n  const [isModalOpen, openModal, closeModal] = useFlag();\n\n  useEffect(() => {\n    if (isOpen) {\n      openModal();\n    }\n  }, [isOpen, openModal]);\n\n  const checkoutInfo = useMemo(() => {\n    return getCheckoutInfo(credentialsTitle, info, shippingMethod);\n  }, [info, shippingMethod, credentialsTitle]);\n\n  const invoice: ApiInvoice = useMemo(() => {\n    return {\n      mediaType: 'invoice',\n      photo,\n      text: text!,\n      title: title!,\n      amount: totalAmount!,\n      currency: currency!,\n    };\n  }, [currency, photo, text, title, totalAmount]);\n\n  return (\n    <Modal\n      className=\"PaymentModal PaymentModal-receipt\"\n      isOpen={isModalOpen}\n      onClose={closeModal}\n      onCloseAnimationEnd={onClose}\n    >\n      <div>\n        <div className=\"header\" dir={lang.isRtl ? 'rtl' : undefined}>\n          <Button\n            className=\"close-button\"\n            color=\"translucent\"\n            round\n            size=\"smaller\"\n            onClick={closeModal}\n            ariaLabel=\"Close\"\n          >\n            <i className=\"icon icon-close\" />\n          </Button>\n          <h3> {lang('PaymentReceipt')} </h3>\n        </div>\n        <div className=\"receipt-content custom-scroll\">\n          <Checkout\n            prices={prices}\n            shippingPrices={shippingPrices}\n            totalPrice={totalAmount}\n            tipAmount={tipAmount}\n            invoice={invoice}\n            checkoutInfo={checkoutInfo}\n            currency={currency!}\n          />\n        </div>\n      </div>\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const { receipt } = selectTabState(global).payment;\n    const {\n      currency,\n      prices,\n      info,\n      totalAmount,\n      credentialsTitle,\n      shippingPrices,\n      shippingMethod,\n      photo,\n      text,\n      title,\n      tipAmount,\n    } = (receipt || {});\n\n    return {\n      currency,\n      prices,\n      info,\n      tipAmount,\n      totalAmount,\n      credentialsTitle,\n      shippingPrices,\n      shippingMethod,\n      photo,\n      text,\n      title,\n    };\n  },\n)(ReceiptModal));\n\nfunction getCheckoutInfo(paymentMethod?: string,\n  info?:\n  { phone?: string;\n    name?: string;\n    shippingAddress?: ApiShippingAddress;\n  },\n  shippingMethod?: string) {\n  if (!info) {\n    return { paymentMethod };\n  }\n  const { shippingAddress } = info;\n  const fullAddress = shippingAddress?.streetLine1\n    ? `${shippingAddress.streetLine1}, ${shippingAddress.city}, ${shippingAddress.countryIso2}`\n    : undefined;\n  const { phone, name } = info;\n  return {\n    paymentMethod,\n    shippingAddress: fullAddress,\n    name,\n    phone,\n    shippingMethod,\n  };\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"content\":\"n8eENbaR\",\"closeButton\":\"smosGkw9\",\"contentText\":\"Qo4PtFZI\",\"title\":\"wtfpombl\",\"separator\":\"UoMeVIyC\",\"userPicker\":\"nEYyTS_m\",\"sendInvites\":\"Ttkq3nqt\",\"avatarList\":\"Nc3SOtKd\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback,\n  useEffect,\n  useMemo, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../../global';\n\nimport type { ApiChat } from '../../../api/types';\nimport type { TabState } from '../../../global/types';\n\nimport { getUserFullName } from '../../../global/helpers';\nimport { selectChat } from '../../../global/selectors';\nimport { partition } from '../../../util/iteratees';\nimport { MEMO_EMPTY_ARRAY } from '../../../util/memo';\nimport renderText from '../../common/helpers/renderText';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport AvatarList from '../../common/AvatarList';\nimport PeerPicker from '../../common/pickers/PeerPicker';\nimport Button from '../../ui/Button';\nimport Modal from '../../ui/Modal';\nimport Separator from '../../ui/Separator';\n\nimport styles from './InviteViaLinkModal.module.scss';\n\nexport type OwnProps = {\n  modal: TabState['inviteViaLinkModal'];\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n};\n\nconst InviteViaLinkModal: FC<OwnProps & StateProps> = ({\n  modal,\n  chat,\n}) => {\n  const { sendInviteMessages, closeInviteViaLinkModal, openPremiumModal } = getActions();\n  const { missingUsers } = modal || {};\n\n  const lang = useOldLang();\n  const [selectedMemberIds, setSelectedMemberIds] = useState<string[]>([]);\n\n  const userIds = useMemo(() => missingUsers?.map((user) => user.id) || MEMO_EMPTY_ARRAY, [missingUsers]);\n  const [unselectableIds, selectableIds] = useMemo(() => {\n    if (!missingUsers?.length) return [[], []];\n    const [requirePremiumIds, regularIds] = partition(missingUsers, (user) => user.isRequiringPremiumToMessage);\n    return [requirePremiumIds.map((user) => user.id), regularIds.map((user) => user.id)];\n  }, [missingUsers]);\n\n  const invitableWithPremiumIds = useMemo(() => {\n    return missingUsers?.filter((user) => user.isRequiringPremiumToInvite || user.isRequiringPremiumToMessage)\n      .map((user) => user.id);\n  }, [missingUsers]);\n\n  const isEveryPremiumBlocksPm = useMemo(() => {\n    if (!missingUsers) return undefined;\n    return !missingUsers.some((user) => user.isRequiringPremiumToInvite && !user.isRequiringPremiumToMessage);\n  }, [missingUsers]);\n\n  const topListPeers = useMemo(() => {\n    const users = getGlobal().users.byId;\n    return invitableWithPremiumIds?.map((id) => users[id]);\n  }, [invitableWithPremiumIds]);\n\n  useEffect(() => {\n    setSelectedMemberIds(selectableIds);\n  }, [selectableIds]);\n\n  const handleClose = useLastCallback(() => closeInviteViaLinkModal());\n\n  const handleSendInviteLink = useCallback(() => {\n    sendInviteMessages({ chatId: chat!.id, userIds: selectedMemberIds! });\n    closeInviteViaLinkModal();\n  }, [selectedMemberIds, chat]);\n\n  const handleOpenPremiumModal = useCallback(() => {\n    openPremiumModal();\n  }, []);\n\n  const canSendInviteLink = useMemo(() => {\n    if (!chat) return undefined;\n    return Boolean(chat?.isCreator || chat?.adminRights?.inviteUsers);\n  }, [chat]);\n\n  const inviteSectionText = useMemo(() => {\n    return canSendInviteLink\n      ? lang(missingUsers?.length === 1 ? 'InviteBlockedOneMessage' : 'InviteBlockedManyMessage')\n      : lang('InviteRestrictedUsers2', missingUsers?.length);\n  }, [canSendInviteLink, lang, missingUsers?.length]);\n\n  const premiumSectionText = useMemo(() => {\n    if (!invitableWithPremiumIds?.length || !topListPeers?.length) return undefined;\n    const prefix = isEveryPremiumBlocksPm ? 'InviteMessagePremiumBlocked' : 'InvitePremiumBlocked';\n    let langKey = `${prefix}One`;\n    let params = [getUserFullName(topListPeers[0])];\n    if (invitableWithPremiumIds.length === 2) {\n      langKey = `${prefix}Two`;\n      params = [getUserFullName(topListPeers[0]), getUserFullName(topListPeers[1])];\n    } else if (invitableWithPremiumIds.length === 3) {\n      langKey = `${prefix}Three`;\n      params = [getUserFullName(topListPeers[0]), getUserFullName(topListPeers[1]), getUserFullName(topListPeers[2])];\n    } else if (invitableWithPremiumIds.length > 3) {\n      langKey = `${prefix}Many`;\n      params = [\n        getUserFullName(topListPeers[0]),\n        getUserFullName(topListPeers[1]),\n        (invitableWithPremiumIds!.length - 2).toString(),\n      ];\n    }\n\n    return lang(langKey, params, undefined, topListPeers.length);\n  }, [invitableWithPremiumIds, isEveryPremiumBlocksPm, lang, topListPeers]);\n\n  const hasPremiumSection = Boolean(topListPeers?.length);\n  const hasSelectableSection = Boolean(selectableIds?.length);\n\n  return (\n    <Modal\n      isOpen={Boolean(userIds && chat)}\n      contentClassName={styles.content}\n      onClose={handleClose}\n      isSlim\n    >\n      <Button\n        round\n        color=\"translucent\"\n        size=\"smaller\"\n        className={styles.closeButton}\n        ariaLabel={lang('Close')}\n        onClick={handleClose}\n      >\n        <i className=\"icon icon-close\" />\n      </Button>\n      {premiumSectionText && (\n        <>\n          <AvatarList\n            className={styles.avatarList}\n            peers={topListPeers}\n            size=\"large\"\n          />\n          <h3 className={styles.title}>\n            {canSendInviteLink ? lang('InvitePremiumBlockedTitle') : lang('ChannelInviteViaLinkRestricted')}\n          </h3>\n          <p className={styles.contentText}>\n            {renderText(premiumSectionText, ['simple_markdown'])}\n          </p>\n          <Button\n            withPremiumGradient\n            isShiny\n            size=\"smaller\"\n            onClick={handleOpenPremiumModal}\n          >\n            {lang('InvitePremiumBlockedSubscribe')}\n          </Button>\n        </>\n      )}\n      {hasPremiumSection && hasSelectableSection && (\n        <Separator className={styles.separator}>\n          {lang('InvitePremiumBlockedOr')}\n        </Separator>\n      )}\n      {hasSelectableSection && (\n        <>\n          <h3 className={styles.title}>{lang('InviteBlockedTitle')}</h3>\n          <p className={styles.contentText}>\n            {inviteSectionText}\n          </p>\n          <PeerPicker\n            className={styles.userPicker}\n            itemIds={userIds}\n            selectedIds={selectedMemberIds}\n            lockedUnselectedIds={unselectableIds}\n            lockedUnselectedSubtitle={lang('InvitePremiumBlockedUser')}\n            onSelectedIdsChange={setSelectedMemberIds}\n            isViewOnly={!canSendInviteLink}\n            allowMultiple\n            withStatus\n            itemInputType=\"checkbox\"\n          />\n          {canSendInviteLink && (\n            <Button\n              className={styles.sendInvites}\n              size=\"smaller\"\n              onClick={handleSendInviteLink}\n              disabled={!selectedMemberIds.length}\n            >\n              {lang('SendInviteLink.ActionInvite')}\n            </Button>\n          )}\n        </>\n      )}\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { modal }): StateProps => {\n    const chat = modal?.chatId ? selectChat(global, modal.chatId) : undefined;\n\n    return {\n      chat,\n    };\n  },\n)(InviteViaLinkModal));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"c3xMWwzW\",\"fade-in-opacity\":\"cHb04cFv\",\"fadeInOpacity\":\"cHb04cFv\",\"closing\":\"_0HkZ8ITm\",\"voice\":\"VLiJWMs0\",\"video\":\"ML2YEpGq\",\"footer\":\"VWy1qXJL\",\"closeBtn\":\"FfMrCmD9\"};","import React, { memo } from '../../../lib/teact/teact';\nimport { getActions, getGlobal } from '../../../global';\n\nimport type { TabState } from '../../../global/types';\nimport { AudioOrigin } from '../../../types';\n\nimport { isOwnMessage } from '../../../global/helpers';\nimport { selectTheme } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\n\nimport useCurrentOrPrev from '../../../hooks/useCurrentOrPrev';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useShowTransitionDeprecated from '../../../hooks/useShowTransitionDeprecated';\n\nimport Audio from '../../common/Audio';\nimport RoundVideo from '../../middle/message/RoundVideo';\nimport Button from '../../ui/Button';\n\nimport styles from './OneTimeMediaModal.module.scss';\n\nexport type OwnProps = {\n  modal: TabState['oneTimeMediaModal'];\n};\n\nconst OneTimeMediaModal = ({\n  modal,\n}: OwnProps) => {\n  const {\n    closeOneTimeMediaModal,\n  } = getActions();\n\n  const lang = useOldLang();\n  const message = useCurrentOrPrev(modal?.message, true);\n\n  const {\n    shouldRender,\n    transitionClassNames,\n  } = useShowTransitionDeprecated(Boolean(modal));\n\n  const handlePlayVoice = useLastCallback(() => {\n    return undefined;\n  });\n\n  const handleClose = useLastCallback(() => {\n    closeOneTimeMediaModal();\n  });\n\n  if (!shouldRender || !message) {\n    return undefined;\n  }\n\n  const isOwn = isOwnMessage(message);\n  const theme = selectTheme(getGlobal());\n  const closeBtnTitle = isOwn ? lang('Chat.Voice.Single.Close') : lang('Chat.Voice.Single.DeleteAndClose');\n\n  function renderMedia() {\n    if (!message?.content) {\n      return undefined;\n    }\n    const { voice, video } = message.content;\n    if (voice) {\n      return (\n        <Audio\n          className={styles.voice}\n          theme={theme}\n          message={message}\n          origin={AudioOrigin.OneTimeModal}\n          autoPlay\n          onPlay={handlePlayVoice}\n          onPause={handleClose}\n        />\n      );\n    } else if (video?.isRound) {\n      return (\n        <RoundVideo\n          className={styles.video}\n          message={message}\n          origin=\"oneTimeModal\"\n          onStop={handleClose}\n        />\n      );\n    }\n    return undefined;\n  }\n\n  return (\n    <div className={buildClassName(styles.root, transitionClassNames)}>\n      {renderMedia()}\n      <div className={styles.footer}>\n        <Button\n          faded\n          onClick={handleClose}\n          pill\n          size=\"smaller\"\n          color={theme === 'dark' ? 'dark' : 'secondary'}\n          className={styles.closeBtn}\n        >\n          {closeBtnTitle}\n        </Button>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(OneTimeMediaModal);\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../lib/teact/teact';\n\nimport { STICKER_SIZE_AUTH, STICKER_SIZE_AUTH_MOBILE, STICKER_SIZE_TWO_FA } from '../../config';\nimport { LOCAL_TGS_URLS } from './helpers/animatedAssets';\n\nimport useTimeout from '../../hooks/schedulers/useTimeout';\nimport useAppLayout from '../../hooks/useAppLayout';\nimport useFlag from '../../hooks/useFlag';\n\nimport AnimatedSticker from './AnimatedSticker';\n\nimport './PasswordMonkey.scss';\n\ntype OwnProps = {\n  isPasswordVisible: boolean;\n  isBig?: boolean;\n};\n\nconst PEEK_MONKEY_SHOW_DELAY = 2000;\nconst SEGMENT_COVER_EYES: [number, number] = [0, 50];\nconst SEGMENT_UNCOVER_EYE: [number, number] = [0, 20];\nconst SEGMENT_COVER_EYE: [number, number] = [20, 0];\n\nconst PasswordMonkey: FC<OwnProps> = ({ isPasswordVisible, isBig }) => {\n  const [isFirstMonkeyLoaded, markFirstMonkeyLoaded] = useFlag(false);\n  const [isPeekShown, markPeekShown] = useFlag(false);\n  const { isMobile } = useAppLayout();\n\n  const stikerSize = isMobile ? STICKER_SIZE_AUTH_MOBILE : STICKER_SIZE_AUTH;\n\n  useTimeout(markPeekShown, PEEK_MONKEY_SHOW_DELAY);\n  const handleFirstMonkeyLoad = useCallback(markFirstMonkeyLoaded, [markFirstMonkeyLoaded]);\n\n  return (\n    <div id=\"monkey\" className={isBig ? 'big' : ''}>\n      {!isFirstMonkeyLoaded && (\n        <div className=\"monkey-preview\" />\n      )}\n      <AnimatedSticker\n        size={isBig ? STICKER_SIZE_TWO_FA : stikerSize}\n        className={isPeekShown ? 'hidden' : 'shown'}\n        tgsUrl={LOCAL_TGS_URLS.MonkeyClose}\n        playSegment={SEGMENT_COVER_EYES}\n        noLoop\n        onLoad={handleFirstMonkeyLoad}\n      />\n      <AnimatedSticker\n        size={isBig ? STICKER_SIZE_TWO_FA : stikerSize}\n        className={isPeekShown ? 'shown' : 'hidden'}\n        tgsUrl={LOCAL_TGS_URLS.MonkeyPeek}\n        playSegment={isPasswordVisible ? SEGMENT_UNCOVER_EYE : SEGMENT_COVER_EYE}\n        noLoop\n      />\n    </div>\n  );\n};\n\nexport default memo(PasswordMonkey);\n"],"names":["getViewableMedia","params","type","media","mediaIndex","isSingle","length","avatar","profilePhotos","photos","action","document","photo","video","webPage","paidMedia","getMessageContent","message","isDocumentPhoto","isDocumentVideo","webPagePhoto","webPageVideo","extendedMedia","extendedPhoto","extendedVideo","isGif","createGhost","source","origin","ghost","createElement","classList","add","img","Image","draggable","oncontextmenu","stopEvent","src","HTMLVideoElement","poster","appendChild","MediaViewerOrigin","ProfileAvatar","SettingsAvatar","profileInfo","querySelector","cloneNode","isMessageImageFullyVisible","container","imageEl","messageListElement","imgOffsetTop","offsetTop","closest","id","includes","parentElement","scrollTop","offsetHeight","getNodes","index","containerSelector","mediaSelector","Album","ScheduledAlbum","getMessageHtmlId","PreviewMedia","SharedMedia","SearchResult","MiddleHeaderAvatar","SuggestedAvatar","StarsTransaction","undefined","SponsoredMessage","MESSAGE_CONTENT_SELECTOR","ScheduledInline","Inline","mediaEls","querySelectorAll","mediaEl","applyShape","firstChild","style","objectFit","signal","createSignal","setIsPictureInPicture","getSetPresentationMode","webkitSupportsPresentationMode","webkitSetPresentationMode","bind","exitPictureInPictureIfNeeded","pictureInPictureElement","exitPictureInPicture","err","DEBUG","console","log","cache","Map","FALLBACK_DIMENSIONS","AVATAR_FULL_DIMENSIONS","useMediaProps","_ref","isAvatar","delay","isPhotoAvatar","mediaType","isVideo","isVideoAvatar","isDocument","isRound","isPhoto","isFromSharedMedia","isFromSearch","getMediaOrAvatarHash","useMemo","isFull","getVideoProfilePhotoMediaHash","getMediaHash","getProfilePhotoMediaHash","pictogramBlobUrl","useMedia","ApiMediaFormat","BlobUrl","previewMediaHash","previewBlobUrl","mediaData","fullMediaBlobUrl","loadProgress","useMediaWithLoadProgress","getMediaFormat","localBlobUrl","blobUrl","bestImageData","thumbDataUri","dataUri","blurredRef","useRef","isChanged","useSyncEffect","current","width","canvas","imgToCanvas","fastBlur","getContext","height","toDataURL","blurredAsync","isDisabled","arguments","get","timeoutRef","forceUpdate","useForceUpdate","clearTimeout","useEffect","onload","blurredDataUri","size","clear","set","window","setTimeout","useBlur","Boolean","useBlurSync","getMediaThumbUri","bestData","mediaSize","getMediaFileSize","isLocal","dimensions","VIDEO_AVATAR_FULL_DIMENSIONS","getPhotoFullDimensions","getVideoDimensions","getZoomChange","setZoomChange","useZoomChange","useUnmountCleanup","memo","isOpen","profileId","onClose","onConfirm","deleteProfilePhoto","deleteChatPhoto","getActions","handleDeletePhoto","useCallback","isUserId","chatId","lang","useOldLang","React","Modal","onEnter","className","title","Button","color","isText","onClick","withGlobal","global","_ref4","item","canUpdateMedia","tabState","selectTabState","mediaViewer","avatarOwner","avatarPhoto","currentMessageList","selectCurrentMessageList","threadId","isProtected","selectIsMessageProtected","activeDownloads","selectActiveDownloads","isChatProtected","selectIsChatProtected","canDelete","canDeleteMessage","selectAllowedMessageActionsSlow","isCurrentAvatar","avatarPhotoId","canDeleteAvatar","canUpdate","messageListType","canReport","onReport","onCloseMediaViewer","onBeforeDelete","onForward","isDeleteModalOpen","openDeleteModal","closeDeleteModal","useFlag","isMobile","useAppLayout","downloadMedia","cancelMediaDownload","updateProfilePhoto","updateChatPhoto","openMediaViewer","openDeleteMessageModal","isMessage","fileName","getMediaFilename","isDownloading","getIsDownloading","downloadProgress","handleDownloadClick","useLastCallback","originMessage","handleZoomOut","zoomChange","handleZoomIn","handleUpdate","isAvatarView","forceOnHeavyAnimation","MenuButton","_ref2","onTrigger","round","ariaLabel","renderDeleteModal","DeleteProfilePhotoModal","openDeleteModalHandler","isSchedule","menuItems","isForwardingAllowed","content","push","icon","children","Math","href","download","destructive","DropdownMenu","trigger","positionX","map","_ref3","MenuItem","key","ProgressSpinner","progress","noCross","renderDownloadButton","useSignalRef","getValue","ref","useEffectOnce","subscribe","getControlsVisible","setControlsVisible","getIsLocked","setIsLocked","useControlsSignal","useDerivedSignal","text","buttonText","isForVideo","handleSponsoredClick","isForceMobileVersion","isMultiline","setIsMultiline","useState","getIsVisible","isHidden","useDerivedState","IS_TOUCH_ENV","footerContent","checkIsMultiline","clientHeight","REM","handleResize","throttle","addEventListener","removeEventListener","onButtonClick","classNames","buildClassName","e","stopPropagation","dir","isRectangular","getCurrentTime","setCurrentTime","useCurrentTimeSignal","getIsVideoWaiting","setIsVideoWaiting","useVideoWaitingSignal","IS_MOBILE","IS_ANDROID","IS_IOS","PREVIEW_SIZE_RATIO","MAX_FRAMES","PREVIEW_MAX_SIDE","connections","launchMediaWorkers","videoPreview","VideoPreview","constructor","url","_defineProperty","this","forEach","connector","request","name","args","MAX_WORKERS","onFrame","time","frame","frames","currentTime","render","clearCache","close","requestMutation","drawImage","destroy","worker","async","messageId","data","result","callApi","mediaFormat","Progressive","arrayBuffer","postMessage","cancelAnimation","duration","bufferedRanges","isReady","posterSize","playbackRate","isActive","isPlaying","isPreviewDisabled","onSeek","onSeekStart","seekerRef","getCurrentTimeSignal","getIsWaiting","useThrottledSignal","getSelectedTime","setSelectedTime","useSignal","getPreviewOffset","setPreviewOffset","getPreviewTime","setPreviewTime","isLockedRef","isPreviewVisible","setPreviewVisible","isSeeking","setIsSeeking","previewCanvasRef","previewRef","progressRef","previewTimeRef","previewSize","ratio","getPreviewDimensions","setPreview","floor","renderVideoPreview","createVideoPreviews","remaining","animateNumber","from","to","onUpdate","useLayoutEffect","left","innerText","formatMediaDuration","seeker","seekerSize","getBoundingClientRect","offset","getPreviewProps","pageX","MouseEvent","touches","t","clamp","preview","clientWidth","stopAnimation","handleStopSeek","cleanup","captureEvents","onCapture","handleStartSeek","onRelease","onDrag","handleSeekMouseMove","handleSeekMouseLeave","ShowTransition","styles","start","end","PLAYBACK_RATES","bufferedProgress","fileSize","isFullscreenSupported","isFullscreen","isBuffered","volume","isMuted","onChangeFullscreen","onVolumeClick","onVolumeChange","onPlaybackRateChange","isPictureInPictureSupported","onPictureInPictureChange","onPlayPause","isPlaybackMenuOpen","openPlaybackMenu","closePlaybackMenu","trunc","getIsSeeking","setVisibility","isVisible","timeout","body","remove","handleSeek","position","handleSeekStart","volumeIcon","SeekLine","ripple","RangeSlider","bold","value","onChange","renderTime","formatFileSize","Menu","positionY","autoClose","rate","disabled","posterData","isMediaViewerOpen","noPlay","shouldCloseOnClick","isClickDisabled","isSponsoredMessage","setMediaViewerVolume","setMediaViewerMuted","setMediaViewerPlaybackRate","setMediaViewerHidden","videoRef","setIsPlaying","setFullscreen","exitFullscreen","useFullscreen","isLooped","handleEnterFullscreen","IS_YA_BROWSER","handleLeaveFullscreen","enterPictureInPicture","isInPictureInPicture","elRef","onLeave","isSupported","setIsSupported","setIsActive","IS_PWA","setMode","pictureInPictureEnabled","disablePictureInPicture","autoPictureInPicture","onEnterInternal","onLeaveInternal","getIsVideoPlaying","requestPictureInPicture","safePlay","usePictureInPicture","toggleControls","lockControls","handleVideoMove","handleVideoLeave","bounds","clientX","right","clientY","top","bottom","bufferingHandlers","useBuffering","isUnsupported","useUnsupportedMedia","shouldRender","shouldRenderSpinner","transitionClassNames","spinnerClassNames","useShowTransitionDeprecated","shouldRenderPlayButton","playButtonClassNames","pause","togglePlayState","handleClick","useVideoCleanup","handleTimeUpdate","currentTarget","readyState","handleEnded","handleFullscreenChange","handleVolumeChange","newVolume","handleVolumeMuted","muted","handlePlaybackRateChange","newPlaybackRate","rewind","newTime","Number","isFinite","handleKeyDown","preventDefault","wrapperStyle","videoStyle","shouldToggleControls","onMouseMove","onMouseOut","onContextMenu","onDoubleClick","_extends","autoPlay","controlsList","playsInline","loop","onWaiting","onPlay","onEnded","onPause","onTimeUpdate","join","VideoPlayerControls","sponsoredMessage","textMessage","withAnimation","isMoving","onFooterClick","toggleControlsOnMove","VideoPlayer","calculateMediaViewerDimensions","ARE_WEBCODECS_SUPPORTED","renderPhoto","textParts","renderMessageText","forcePlayback","isForMediaViewer","hasFooter","shouldForceMobileVersion","imageSize","canDrag","Spinner","MediaViewerFooter","alt","easeOutCubic","easeOutQuart","timingFunctions","SLIDES_GAP","ANIMATION_DURATION","cancelZoomAnimation","SwipeDirection","isLoadingMoreMedia","isSynced","loadMoreItemsIfNeeded","getNextItem","selectItem","containerRef","activeSlideRef","leftSlideRef","rightSlideRef","lastTransformRef","x","y","scale","swipeDirectionRef","initialContentRectRef","isReleasedRef","prevZoomChangeRef","useFullscreenStatus","isMouseDown","setIsMouseDown","getTransform","setTransform","transformRef","getActiveItem","setActiveItem","activeItemRef","isScaled","activeItem","windowHeight","windowWidth","isResizing","useWindowSize","useHistoryBack","onBack","shouldBeReplaced","selectItemDebounced","useDebouncedCallback","clearSwipeDirectionDebounced","setIsActiveDebounced","shouldCloseOnVideo","clickXThreshold","handleControlsVisibility","isFooter","pageY","useTimeout","transform","getTransformStyle","lastTransform","lastDragOffset","lastZoomCenter","panDelta","lastGestureTime","Date","now","setLastGestureTime","debounce","changeSlide","direction","cActiveItem","nextItem","timing","changeSlideOnClick","target","calculateOffsetBoundaries","initialContentRect","inBoundsX","inBoundsY","centerX","centerY","minOffsetX","max","maxOffsetX","isBetween","minOffsetY","maxOffsetY","absX","abs","absY","s1","min","scaleFactor","x1","y1","k","Vx","Vy","dirX","isNotPassive","withNativeDrag","excludedClosestSelector","minZoom","maxZoom","doubleTapZoom","withWheelDrag","checkIfControlTarget","event","captureEvent","cancelDrag","dragOffsetX","dragOffsetY","IOS_SCREEN_EDGE_THRESHOLD","absOffsetX","absOffsetY","Vertical","Horizontal","SWIPE_DIRECTION_THRESHOLD","SWIPE_DIRECTION_TOLERANCE","limit","SWIPE_X_THRESHOLD","SWIPE_Y_THRESHOLD","onZoom","zoom","zoomFactor","initialCenterX","initialCenterY","currentCenterX","currentCenterY","MIN_ZOOM","MAX_ZOOM","offsetX","offsetY","scaledCenterX","scaledCenterY","scaleOffsetX","scaleOffsetY","isInThreshold","hasNextSlide","checkIfInsideSelector","_ref5","hasZoomChanged","steps","prevValue","delta","wheelEvent","WheelEvent","deltaY","ctrlKey","dispatchEvent","prevItem","hasPrev","hasNext","MediaViewerContent","isRtl","toFixed","element","selector","matches","messageSender","selectSender","owner","closeMediaViewer","focusMessage","toggleChatInfo","handleFocusMessage","force","forceSyncOnIOs","subtitle","isFallbackAvatar","fallbackPhoto","date","formattedDate","formatMediaDateTime","count","countText","parts","chat","isChannel","isChatChannel","isGroup","isChatGroup","senderTitle","getSenderTitle","Avatar","peer","renderText","shouldSkipHistoryAnimations","withDynamicLoading","standaloneMedia","selectPerformanceSettingsValue","currentUserId","isChatWithSelf","selectIsChatWithSelf","selectPeer","isChatAdmin","selectPeerPhotos","isLoading","chatMessages","selectScheduledMessage","selectChatMessage","selectSponsoredMessage","selectChatScheduledMessages","selectChatMessages","isOriginInline","isOriginAlbum","collectedMessageIds","currentSearch","selectCurrentChatMediaSearch","foundIds","currentSegment","selectCurrentSharedMediaSearch","resultsByType","selectOutlyingListByMessageId","selectListedIds","openForwardMenu","searchChatMediaMessages","loadMoreProfilePhotos","clickSponsoredMessage","openUrl","animationKey","senderId","prevSenderId","usePreviousDeprecated","headerAnimation","isGhostAnimation","isReportModalOpen","openReportModal","closeReportModal","currentItem","getMediaViewerItem","messageMediaIds","getChatMediaMessageIds","getIsPictureInPicture","disableDirectTextInput","stopPriorityPlayback","dispatchPriorityPlaybackEvent","enableDirectTextInput","toggle","headerRef","useElectronDrag","mql","matchMedia","MEDIA_VIEWER_MEDIA_QUERY","prevMessage","prevIsHidden","prevOrigin","prevBestImageData","shouldAnimateOpening","beginHeavyAnimation","ANIMATION_END_DELAY","fromImage","windowSize","availableWidth","availableHeight","getMediaViewerAvailableDimensions","toWidth","toHeight","calculateDimensions","toLeft","toTop","topOffsetRem","getTopOffset","fromTop","fromLeft","fromWidth","fromHeight","uncovered","realWidth","realHeight","srcWidth","srcHeight","uncover","fromTranslateX","fromTranslateY","fromScaleX","fromScaleY","applyStyles","clearShape","contains","removeChild","animateOpening","toImage","getElementById","targetTop","isElementInViewport","shouldFadeOut","existingGhost","getElementsByClassName","transition","transformOrigin","opacity","animateClosing","handleClose","handleFooterClick","isFromMedia","isMedia","handleForward","fromChatId","messageIds","captureEscKeyListener","stopCurrentAudio","peerId","currentMediaMessageId","fromMedia","fromMediaIndex","nextIndex","fromAvatarOwner","fromProfilePhotos","fromSponsoredMessage","fromSponsoredMessageIndex","fromMessage","getMessagePaidMedia","indexOf","nextMessageId","nextMessage","openMediaViewerItem","itemChatId","itemMessageId","itemStandaloneMedia","handleBeforeDelete","prevMedia","shouldAnimateFirstRender","noCloseTransition","Transition","activeKey","SenderInfo","MediaViewerActions","ReportModal","subject","MediaViewerSlides","avatarOwnerId","OFFSET_BOTTOM","MOBILE_OFFSET","hasBlur","isGhost2","ctx","alpha","IS_CANVAS_FILTER_SUPPORTED","filter","RADIUS","userId","getPeerStoryHtmlId","StoryViewerOrigin","StoryRibbon","storyRibbonStyles","ChatList","BASE_SCREEN_WIDTH","BASE_SCREEN_HEIGHT","BASE_ACTIVE_SLIDE_WIDTH","BASE_ACTIVE_SLIDE_HEIGHT","BASE_SLIDE_WIDTH","BASE_SLIDE_HEIGHT","calculateOffsetX","slideAmount","isActiveSlideSize","isMoveThroughActiveSlide","isBackward","mainOffset","additionalOffset","totalOffset","roundToNearestEven","useSlideSizes","baseWidth","baseHeight","newWidth","newHeight","widthScale","heightScale","calculateScale","activeSlideWidth","slideWidth","activeSlide","slide","toActiveScale","fromActiveScale","calculateSlideSizes","useStoryProps","story","isCurrentUserPremium","isDropdownMenuOpen","isLoadedStory","isDeletedStory","hasText","hasMessageText","hasForwardInfo","forwardInfo","thumbnail","previewHash","getStoryMediaHash","noSound","fullMediaHash","fullMediaData","altMediaHash","altMediaData","hasFullData","hasThumb","canDownload","noForwards","downloadHash","downloadMediaData","storyViewer","isStealthModalOpen","stealthMode","stories","selectIsCurrentUserPremium","toggleStealthModal","activateStealthMode","showNotification","openPremiumModal","isOnCooldown","setIsOnCooldown","serverTime","getServerTime","cooldownUntil","handleTimerEnds","handleActivate","initialSection","contentClassName","isSlim","ListItem","multiline","inactive","leftElement","isShiny","withPremiumGradient","TextTimer","langKey","endsAt","onEnd","deleteStory","openNextStory","handleDeleteStoryClick","storyId","ConfirmDialog","confirmLabel","confirmHandler","confirmIsDestructive","contactListIds","usersById","selectedIds","lockedIds","onSelect","searchQuery","setSearchQuery","displayedIds","contactIds","unique","filterUsersByName","PeerPicker","itemIds","MEMO_EMPTY_ARRAY","lockedSelectedIds","filterValue","filterPlaceholder","searchInputId","isSearchable","withDefaultPadding","forceShowSelf","onSelectedIdsChange","onFilterChange","allowMultiple","withStatus","itemInputType","saveCloseFriends","isSubmitShown","setIsSubmitShown","newSelectedContactIds","setNewSelectedContactIds","closeFriendIds","isCloseFriend","useEffectWithPrevDeps","prevIsActive","handleSelectedContactIdsChange","handleSubmit","userIds","Fragment","FloatingActionButton","isShown","OPTIONS","actions","Screens","selectPeerStory","visibility","contactList","users","byId","editStoryPrivacy","toggleStoryInProfile","isOpenModal","openModal","closeModal","privacy","setPrivacy","isPinned","setIsPinned","isInProfile","setActiveKey","editingBlockingCategory","setEditingBlockingCategory","isBackButton","allowList","allowUserIds","selectedBlockedIds","blockUserIds","handleAllowUserIdsChange","newIds","handleDenyUserIdsChange","handleCloseButtonClick","handleIsPinnedToggle","renderContent","storyLifeTime","seconds","hours","remainingSeconds","convertSecondsToHours","expireDate","section","list","option","checked","input","handleVisibilityChange","newVisibility","teactExperimentControlled","optionContent","option_name","tabIndex","role","closeFriends","denyList","handleActionClick","actionInner","getUserFullName","Switcher","label","footer","info","submit","renderPrivacyList","CloseFriends","AllowDenyList","modal","noBackdrop","onCloseAnimationEnd","header","closeButton","headerTitle","renderHeaderContent","slideClassName","scrollLockEl","IGNORED_KEYS","Down","ArrowDown","Up","ArrowUp","Left","ArrowLeft","Right","ArrowRight","PageUp","PageDown","End","Home","Tab","changedTouches","getTouchY","scrollHeight","preventDefaultForScrollKeys","HTMLElement","tagName","toLowerCase","getAttribute","isTextBox","disableScrolling","el","_excludedClosestSelector","passive","onkeydown","enableScrolling","PRIMARY_VIDEO_MIME","DEFAULT_PART_SIZE","MAX_END_TO_CACHE","bufferCache","sizeCache","pendingRequests","makeProgressiveLoader","chunkSize","match","cacheKey","finally","delete","fullSize","Promise","reject","checkIfStreamingSupported","mimeType","IS_SAFARI","getMediaSource","isTypeSupported","appendBuffer","sourceBuffer","buffer","error","warn","endOfStream","mediaSource","ManagedMediaSource","MediaSource","preloadedStories","canPreload","aroundStoryId","Array","isArray","getGlobal","byPeerId","orderedIds","mediaHashes","hash","format","isStream","loader","getProgressiveUrl","cachedSize","chunk","byteLength","preloadStream","mediaLoader","then","head","preload","autoplay","disableRemotePlayback","display","load","unloadVideo","preloadProgressive","preloadImage","preloadHashes","peerStories","selectPeerStories","preloadIds","ids","currentId","aroundAmount","currentIndex","PEER_STORIES_FOR_PRELOAD","slice","findIdsAroundCurrentId","currentStoryId","has","altVideo","Set","getPreloadMediaHashes","sender","fromPeerId","openStoryViewer","loadPeerStoriesByIds","openChat","storyIds","fromName","openOriginalStory","isDeleted","isSingleStory","handleMouseDown","useFastClick","getPeerColorClass","onMouseDown","backgroundEmojiId","EmojiIconBackground","emojiDocumentId","renderTextWithEntities","renderTextContent","Icon","renderSender","isExpanded","onExpand","onFold","contentRef","textRef","showMoreButtonRef","renderingStory","useCurrentOrPrev","caption","hasOverflow","setHasOverflow","prevIsExpanded","usePrevDuringAnimation","isInExpandedState","addExtraClass","removeExtraClass","canExpand","shouldRenderShowMore","requestMeasure","button","offsetWidth","setProperty","requestForcedReflow","textContainer","textOffsetTop","lineHeight","totalLines","calcTextLineHeightAndCount","isOverflowing","overflowShift","scrollTo","fullClassName","EmbeddedStoryForward","MessageText","messageOrStory","withTranslucentThumbs","openStoryViewModal","sendStoryReaction","views","isOut","sentReaction","viewsCount","forwardsCount","reactionsCount","isSentStoryReactionHeart","emoticon","HEART_REACTION","canForward","isPublic","containerId","getStoryKey","recentViewers","recentViewerIds","handleOpenStoryViewModal","handleForwardClick","handleLikeStory","reaction","AvatarList","peers","nonInteractive","ReactionAnimatedEmoji","documentId","withEffectOnly","DEFAULT_STORY_DURATION_S","isViewed","isPaused","onImageComplete","handleAnimationEnd","animationName","onAnimationEnd","VIDEO_MIN_READY_STATE","appConfig","user","selectUser","selectChat","viewModal","isPrivacyModalOpen","storyList","forwardMessages","forwardedStoryId","premiumModal","safeLinkModalUrl","mapModal","isPremiumModalOpen","shouldForcePause","reactionPicker","mediaAreas","forwardSenderId","find","area","channelId","forwardSender","withHeaderAnimation","fromPeer","fromId","storyIdsByPeerId","storyChangelogUserId","viewersExpirePeriod","storyExpirePeriod","storyViewersExpirePeriod","isChatExist","areChatSettingsLoaded","settings","isArchivedStories","isPrivateStories","getIsAnimating","onDelete","viewStory","setStoryViewerMuted","openPreviousStory","loadPeerSkippedStories","copyStoryLink","openStoryPrivacyEditor","loadChatSettings","fetchChat","loadStoryViews","isComposerHasFocus","markComposerHasFocus","unmarkComposerHasFocus","isStoryPlaybackRequested","playStory","pauseStory","isStoryPlaying","markStoryPlaying","unmarkStoryPlaying","isAppFocused","markAppFocused","unmarkAppFocused","isCaptionExpanded","expandCaption","foldCaption","isPausedBySpacebar","setIsPausedBySpacebar","isPausedByLongPress","markIsPausedByLongPress","unmarkIsPausedByLongPress","markDropdownMenuOpen","unmarkDropdownMenuOpen","isChangelog","isUserStory","isChatStory","isChannelStory","canPinToProfile","canUnpinFromProfile","areViewsExpired","forwardSenderTitle","canCopyLink","usernames","canShare","canPlayStory","shouldShowComposer","shouldShowFooter","shouldRenderSkeleton","skeletonTransitionClassNames","mediaTransitionClassNames","thumbRef","useCanvasBlur","previewTransitionClassNames","useMediaTransitionDeprecated","shouldRenderComposer","composerAppearanceAnimationClassNames","shouldRenderCaptionBackdrop","captionBackdropTransitionClassNames","appearanceAnimationClassNames","shouldRenderCaption","captionAppearanceAnimationClassNames","isStreamingSupported","MediaSourceClass","onSourceOpen","addSourceBuffer","next","done","once","URL","createObjectURL","revokeObjectURL","useStreaming","useStoryPreloader","canWrite","handlePauseStory","handlePlayStory","handleLongPressStart","handleLongPressEnd","handleDropdownMenuOpen","handleDropdownMenuClose","handleLongPressMouseDown","onMouseUp","handleLongPressMouseUp","onMouseLeave","handleLongPressMouseLeave","onTouchStart","handleLongPressTouchStart","onTouchEnd","handleLongPressTouchEnd","useLongPress","onStart","hasAllData","useBackgroundMode","keyCode","prevIsComposerHasFocus","prevIsCaptionExpanded","prevShouldForcePause","prevIsAppFocused","prevIsPausedByLongPress","handleOpenChat","handleForwardPeerClick","handleFromPeerClick","handleOpenPrevStory","handleOpenNextStory","handleVideoStoryTimeUpdate","captureKeyboardListeners","onRight","onLeft","handleCopyStoryLink","handlePinClick","handleUnpinClick","handleReportStoryClick","handleInfoPrivacyEdit","handleInfoPrivacyClick","isForContacts","isForCloseFriends","myName","handleOpenStealthModal","activeUntil","diff","handleDownload","StoryProgress","formatRelativeTime","isEdited","privacyIcon","gradient","renderStoryPrivacyButton","onOpen","Skeleton","OptimizedVideo","canPlay","isPriority","MediaAreaOverlay","withStory","storyViewerMode","StoryFooter","StoryCaption","Composer","MAIN_THREAD_ID","getIsMobile","editableInputCssSelector","EDITABLE_STORY_INPUT_CSS_SELECTOR","editableInputId","EDITABLE_STORY_INPUT_ID","inputId","inputPlaceholder","onFocus","onBlur","lastViewedByPeerIds","lastViewedId","storyIdsForViewer","lastReadId","hasUnreadStories","previewIndexId","isLoaded","imageHash","thumbUrl","currentPeerId","isSinglePeer","isPrivate","isArchive","orderedPeerIds","active","peerIds","selectIsStoryViewerOpen","stopActiveReaction","renderingPeerId","setRenderingPeerId","renderingStoryId","setRenderingStoryId","prevPeerId","renderingIsArchive","renderingIsPrivate","renderingIsSinglePeer","renderingIsSingleStory","slideSizes","rendersRef","setIsAnimating","setRef","renderingPeerIds","renderingPeerPosition","currentPeerPosition","calculateTransformX","reduce","transformX","getCurrentStoryRef","composer","focusEditableElement","Object","entries","String","handleTransitionEnd","Story","onTransitionEnd","buildStyle","renderStory","StoryPreview","renderStoryPreview","useScrolledState","threshold","isAtBeginning","setIsAtBeginning","isAtEnd","setIsAtEnd","handleScroll","DEFAULT_REACTION_SIZE","storyView","availableReactions","reactions","closeStoryViewer","unblockUser","blockUser","deleteContact","updateStoryView","closeStoryViewModal","contextActions","areStoriesBlocked","isUserBlocked","isContact","fullName","handler","isOnlyStories","statusIcon","shouldColorStatus","status","isModified","formatDateAtTime","opacityFadeIn","blocked","rightElement","ReactionStaticEmoji","viewReaction","withIconHeart","withPortalForMenu","menuBubbleClassName","menuBubble","PrivateChatInfo","withColoredStatus","noStatusOrTyping","GroupChatInfo","nextOffset","loadStoryViewList","clearStoryViews","areJustContacts","markJustContacts","unmarkJustContacts","areReactionsFirst","markReactionsFirst","unmarkReactionsFirst","query","setQuery","isExpired","shouldShowJustContacts","STORY_VIEWS_MIN_CONTACTS_FILTER","shouldShowSortByReactions","STORY_MIN_REACTIONS_SORT","shouldShowSearch","STORY_VIEWS_MIN_SEARCH","hasHeader","refetchViews","sortedViews","sort","a","b","reactionA","reactionB","prepareComparator","placeholderCount","notAllAvailable","handleLoadMore","MoreMenuButton","isMenuOpen","fluid","sortButton","topButton","faded","iconSort","iconDown","viewsList","contactFilter","selected","check","SearchInput","search","topScrolled","onScroll","centeredInfo","InfiniteScroll","items","onLoadMore","view","additionalKeyId","StoryView","_","i","PlaceholderChatInfo","bottomInfo","closeStoryPrivacyEditor","storyToDelete","setStoryToDelete","isPrevOpen","handleOpenDeleteModal","s","handleCloseDeleteModal","thumb","safeAreaBottom","getComputedStyle","documentElement","getPropertyValue","parseFloat","toTranslateX","toTranslateY","toScaleX","toScaleY","ghost2","ghost2Top","StorySlides","StoryDeleteConfirmModal","StoryViewModal","StealthModeModal","StorySettings","TOPIC_ICON_SIZE","ITEM_CLASS_NAME","chatOrUserIds","searchPlaceholder","loadMore","onSearchChange","onSelectChatOrUser","loadTopics","topicContainerRef","searchRef","topicSearchRef","viewportIds","getMore","useInfiniteScroll","forumId","setForumId","topicSearch","setTopicSearch","viewportOffset","resetSearch","useInputFocusOnOpen","selectTopicsById","selectTopics","forumTopicsById","useSelector","topicIds","topics","chatsById","chats","chatFullInfoById","fullInfoById","searchTitle","values","acc","topic","getCanPostInChat","keys","handleHeaderBackClick","handleSearchChange","handleTopicSearchChange","useKeyboardListNavigation","isForum","handleTopicKeyDown","renderChatItem","isSelf","isApiPeerChat","subtitleClassName","getGroupStatus","userStatus","selectUserStatus","getUserStatus","isUserOnline","getSubtitle","PickerItem","FullNameTitle","isSavedMessages","avatarElement","PEER_PICKER_ITEM_HEIGHT_PX","InputText","onKeyDown","placeholder","withAbsolutePositioning","maxHeight","Loading","topicId","TopicIcon","letterClassName","itemSelector","listIds","orderedPinnedIds","activeListIds","archivedListIds","archived","pinnedIds","API_CHAT_TYPES","onSelectRecipient","setSearch","priorityIds","chatIds","isDeletedUser","sorted","sortChatIds","filterChatsByName","filterChatIdsByType","renderingIds","ChatOrUserPicker","isForwarding","isManyMessages","isStory","openChatOrTopicWithReplyInDraft","setForwardChatOrTopic","exitForwardMode","forwardToSavedMessages","forwardStory","renderingIsStory","markIsShown","unmarkIsShown","handleSelectRecipient","recipientId","toChatId","getUserFirstOrLastName","getChatTitle","RecipientPicker","requestedDraft","openChatWithDraft","resetOpenChatWithDraft","files","requestedAttachBotInChat","cancelAttachBotInChat","callAttachBot","bot","startParam","handlePeerRecipient","getErrorHeader","isSlowMode","hasErrorKey","dialogs","dismissDialog","acceptInviteConfirmation","sendMessage","isModalOpen","dialog","contactRequest","invite","about","participantsCount","isRequestNeeded","participantsText","joinText","requestToJoinText","renderInviteHeader","handleJoinClick","renderInvite","handleConfirm","contact","pick","messageList","getReadableErrorText","withVideo","notifications","dismissNotification","localId","actionText","Notification","onDismiss","toggleSafeLinkModal","handleOpen","open","ensureProtocol","handleDismiss","renderingUrl","closeMapModal","point","geoPoint","googleUrl","bingUrl","appleUrl","osmUrl","google","prepareMapUrl","bing","osm","handleGoogleClick","handleBingClick","handleAppleClick","handleOsmClick","IS_MAC_OS","currentUser","closeUrlAuthModal","acceptBotUrlAuth","acceptLinkUrlAuth","isLoginChecked","setLoginChecked","isWriteAccessChecked","setWriteAccessChecked","currentAuth","domain","botId","shouldRequestWriteAccess","isWriteAllowed","handleLoginChecked","Checkbox","onCheck","MAX_SAFE_DATE","MAX_INT_32","WEEKDAY_LETTERS","isDisabledDay","year","month","day","minDate","maxDate","selectedDay","fixedMinDate","getDayStart","fixedMaxDate","formatInputTime","padStart","formatDay","selectedAt","minAt","maxAt","isFutureMode","isPastMode","withTimePicker","submitButtonLabel","secondButtonLabel","onSubmit","onSecondButtonClick","passedSelectedDate","prevIsOpen","isTimeInputFocused","markTimeInputAsFocused","selectedDate","setSelectedDate","currentMonthAndYear","setCurrentMonthAndYear","getFullYear","getMonth","selectedHours","setSelectedHours","getHours","selectedMinutes","setSelectedMinutes","getMinutes","getDate","currentYear","currentMonth","getTime","newSelectedDate","shouldDisableNextMonth","shouldDisablePrevMonth","prevMonthGrid","currentMonthGrid","nextMonthGrid","setDate","setMonth","setFullYear","firstDay","getDay","totalDaysInPrevMonth","gridDate","lastRowDaysCount","buildCalendarGrid","submitLabel","formatDateToString","code","formatTime","formatSubmitLabel","handleChangeHours","replace","setHours","hoursStr","handleChangeMinutes","minutes","setMinutes","minutesStr","d","dateCopy","handleDateSelect","inputMode","historyCalendarSelectedAt","searchMessagesByDate","closeHistoryCalendar","handleJumpToDate","timestamp","CalendarModal","phoneCodeList","countryList","phoneCodes","isByPhoneNumber","updateContact","importContact","closeNewContactDialog","renderingUser","renderingIsByPhoneNumber","inputRef","firstName","setFirstName","lastName","setLastName","phone","setPhone","phoneNumber","shouldSharePhoneNumber","setShouldSharePhoneNumber","canBeSubmitted","focus","handleFirstNameChange","handlePhoneChange","formatPhoneNumberWithCode","handleLastNameChange","resizeTimeout","webApps","activeWebApp","modalState","openedWebApps","isMinimizedState","activeTabBot","changeWebAppModalState","closeWebAppModal","oldLang","useLang","openedWebAppsValues","openedTabsCount","activeTabBotId","app","handleCloseClick","handleExpandClick","activeTabName","botName","renderTitle","SANDBOX_ATTRIBUTES","DEFAULT_BUTTON_TEXT","ok","cancel","activeBotId","isMaximizedState","attachBot","attachMenu","bots","selectCurrentChat","theme","selectTheme","isPaymentModalOpen","payment","isStarPaymentModalOpen","paymentStatus","webApp","registerSendEventCallback","registerReloadFrameCallback","isDragging","frameSize","isMultiTabSupported","closeActiveWebApp","sendWebViewData","toggleAttachBot","openTelegramLink","setWebAppPaymentSlug","switchBotInline","sharePhoneWithBot","updateWebApp","mainButton","setMainButton","markLoaded","markUnloaded","popupParameters","setPopupParameters","isRequestingPhone","setIsRequestingPhone","isRequestingWriteAccess","setIsRequestingWriteAccess","unlockPopupsAt","handlePopupOpened","handlePopupClosed","sequentialLimit","resetAfter","setUnlockPopupsAt","sequentialCalls","lastClosedDate","usePopupLimit","headerColor","serverHeaderColorKey","serverHeaderColor","isCloseModalOpen","isRemoveModalOpen","webAppKey","getWebAppKey","activeWebAppKey","updateCurrentWebApp","updatedPartialWebApp","updatedWebApp","themeParams","extractCurrentThemeParams","bg_color","backgroundColor","frameRef","isSimple","reloadFrame","sendEvent","sendViewport","sendTheme","useWebAppFrame","isSimpleView","onEvent","onLoad","openInvoice","closeWebApp","isReloadSupported","reloadTimeout","ignoreEventsRef","lastFrameSizeRef","handleLoad","contentWindow","JSON","stringify","forceReloadFrame","eventType","isNonStable","eventData","is_expanded","is_state_stable","theme_params","sendCustomStyle","handleMessage","parse","skipClosingConfirmation","scrollbarColor","reload_supported","req_id","slug","linkUrl","available","TME_LINK_PREFIX","path_full","isBackButtonVisible","is_visible","isSettingsButtonVisible","validateHexColor","calculateHeaderColor","color_key","button_color","textColor","text_color","trim","is_active","isProgressVisible","is_progress_visible","shouldConfirmClosing","buttons","handleAppPopupClose","chat_types","convertToApiChatType","isSamePeer","handleRejectPhone","handleRejectWriteAccess","handleRequestWriteAccess","method","requestId","parameters","customMethod","handleInvokeCustomMethod","shouldShowMainButton","handleHideCloseModal","handleConfirmCloseModal","handleHideRemoveModal","handleMainButtonClick","buttonId","button_id","handleAppPopupModalClose","serverColorKey","serverColor","newColor","updateHeaderColor","sendThemeCallback","prevIsPaymentModalOpen","handleRemoveAttachBot","isEnabled","handleAcceptPhone","handleAcceptWriteAccess","prevMainButtonColor","prevMainButtonTextColor","prevMainButtonIsActive","prevMainButtonText","mainButtonCurrentColor","mainButtonCurrentTextColor","mainButtonCurrentIsActive","mainButtonCurrentText","shouldDecreaseWebFrameSize","setShouldDecreaseWebFrameSize","shouldHideButton","setShouldHideButton","buttonChangeTimeout","frameWidth","frameHeight","frameStyle","sandbox","allow","allowFullScreen","hasCloseButton","prolongWebView","openWebAppTab","maximizedStateSize","minimizedStateSize","getFrameSize","setFrameSize","getSize","openedOrderedKeys","sessionKeys","tabs","supportMultiTabMode","menuRef","getTriggerElement","getRootElement","getMenuElement","isContextMenuOpen","contextMenuAnchor","handleContextMenu","handleContextMenuClose","handleContextMenuHide","useContextMenuHandlers","isDraggingEnabled","setIsDraggingEnabled","headerElement","containerElement","draggableStyle","dragHandleElementRef","originalSize","elementCurrentPosition","setElementCurrentPosition","elementCurrentSize","setElementCurrentSize","getElementPositionOnStartDrag","setElementPositionOnStartDrag","getDragStartPoint","setDragStartPoint","elementPositionOnStartDrag","dragStartPoint","dragHandleElement","isInitiated","setIsInitiated","wasElementShown","setWasElementShown","startDragging","stopDragging","isWindowsResizing","startWindowResizing","stopWindowResizing","getVisibleArea","innerWidth","innerHeight","getCenteredPosition","visibleArea","centeredPosition","handleStartDrag","handleRelease","ensurePositionInVisibleArea","visibleAreaWidth","visibleAreaHeight","componentWidth","componentHeight","newX","newY","adjustPositionWithinBounds","newPosition","ensureSizeInVisibleArea","sizeForCheck","newSize","adjustSizeWithinBounds","handleDrag","cursorStyle","useDraggable","currentSize","currentWidth","currentHeight","queryId","openTabsCount","useInterval","replyInfo","sendEventCallback","reloadFrameCallback","callback","handleSettingsButtonClick","handleRefreshClick","handleModalClose","handleTabClose","handleToggleClick","handleBackClick","handleCollapseClick","handleTabClick","tab","openBotChat","renderMenuItems","isAttachBot","backButtonClassName","headerTextVar","r","g","hexToRgb","luma","getColorLuma","renderTabCurveBorder","viewBox","fill","useHorizontalScroll","dialogRef","dialogStyle","isLowStackPriority","shortName","renderActiveTab","anchor","MinimizedWebAppModal","noBackdropClose","WebAppModalTabContent","cancelBotTrustRequest","markBotTrusted","setIsWriteAllowed","handleBotTrustAccept","handleBotTrustDecline","confirmAttachBotInstall","cancelAttachBotInstall","isTosAccepted","setIsTosAccepted","tosLabel","split","linkText","MINI_APP_TOS_URL","rel","isConfirmDisabled","folder","closeDeleteChatFolderModal","deleteChatFolder","openDeleteChatFolderModal","renderingFolder","isMyChatlist","hasMyInvites","handleDeleteFolderMessage","folderId","isConfirmedForChatlist","COLORS","isFontIcon","newIndex","colorA","colorB","ceil","lerpRgb","buttonClassName","root","fontIcon","description","onSelectSlide","startFrom","isPreLastBatch","isLastBatch","isFirstBatch","isPreFirstBatch","shownDotsCount","handleGoForward","handleGoBack","isLast","isPreLast","isFirst","isPreFirst","isInvisible","leftValue","rightValue","floatingBadgeIcon","rightStyle","COLOR_START","COLOR_END","colorStepProgress","lerp","PremiumLimitsCompare","AnimatedCircleSticker","realIndex","sticker","maxLength","mediaDataAround","isActivated","isAnimated","animate","inanimate","circleSize","angle","PI","cos","sin","AnimatedSticker","tgsUrl","play","isLowPriority","noLoop","stickers","premium","setOffset","setSize","renderedStickers","cycleRestrict","STORY_FEATURE_TITLES","stories_order","stories_stealth","stories_views","stories_timer","stories_save","stories_caption","stories_link","STORY_FEATURE_DESCRIPTIONS","STORY_FEATURE_ICONS","STORY_FEATURE_ORDER","CIRCLE_SIZE","circleRef","dpr","useDevicePixelRatio","drawGradientCircle","segmentsCount","readSegmentsCount","readSegmentColor","maxSize","forPremiumPromo","PremiumFeatureItem","videoId","isReverseAnimation","isDown","videoThumbnail","thumbnailRef","wrapper","reverse","down","DeviceFrame","PREMIUM_FEATURE_TITLES","double_limits","infinite_reactions","premium_stickers","animated_emoji","no_ads","voice_to_text","profile_badge","faster_download","more_upload","advanced_chat_management","animated_userpics","emoji_status","translations","saved_tags","last_seen","message_privacy","effects","PREMIUM_FEATURE_DESCRIPTIONS","LIMITS_TITLES","channels","dialogFolderPinned","channelsPublic","savedGifs","stickersFaved","aboutLength","captionLength","dialogFilters","dialogFiltersChats","recommendedChannels","LIMITS_DESCRIPTIONS","promo","isPremium","limits","premiumPromoOrder","subscriptionOption","onClickSubscribe","scrollContainerRef","currentSlideIndex","setCurrentSlideIndex","PREMIUM_FEATURE_SECTIONS","reverseAnimationSlideIndex","setReverseAnimationSlideIndex","isScrolling","startScrolling","stopScrolling","isScrolledToTop","setIsScrolledToTop","isScrolledToBottom","setIsScrolledToBottom","prevInitialSection","filteredSections","subscriptionButtonText","amount","months","currency","perMonthPrice","formatCurrency","handleLimitsScroll","scrollContainer","animateHorizontalScroll","handleSelectSlide","scrollLeft","scrollLeftOriginal","reverseIndex","prevElement","reverseElement","toString","toggleExtraClass","PREMIUM_LIMITS_ORDER","defaultLimit","premiumLimit","PremiumLimitPreview","PremiumFeaturePreviewStickers","PremiumFeaturePreviewStories","videoSections","PremiumFeaturePreviewVideo","videos","PREMIUM_BOTTOM_VIDEOS","SliderDots","fullMonthlyAmount","isGiveaway","perMonth","isUserCountPlural","discount","handleChange","STATUS_EMOJI_SIZE","PREMIUM_FEATURE_COLOR_ICONS","PremiumStatus","PremiumLimits","PremiumReactions","PremiumStickers","PremiumEmoji","PremiumAds","PremiumVoice","PremiumBadge","PremiumSpeed","PremiumFile","PremiumChats","PremiumVideo","PremiumTranslate","PremiumTags","PremiumLastSeen","PremiumMessagePrivacy","PremiumEffects","fromUser","fromUserId","fromUserStatusEmoji","emojiStatus","customEmojis","fromUserStatusSet","selectStickerSet","stickerSetInfo","isSuccess","isGift","monthsAmount","toUser","toUserId","limitChannels","selectPremiumLimit","limitFolders","limitPins","limitLinks","premiumSlug","premiumInvoiceSlug","premiumBotUsername","closePremiumModal","requestConfetti","loadStickers","openStickerSet","isHeaderHidden","setHeaderHidden","currentSection","setCurrentSection","selectedSubscriptionOption","setSubscriptionOption","handleOpenSection","handleResetSection","handleClickWithStartParam","handleChangeSubscriptionOption","foundOption","options","showConfetti","withStars","prevIsPremium","defaultOption","handleOpenStatusSet","stickerSetTitle","template","first","second","emoji","thumbCustomEmojiId","CustomEmoji","link","monthOption","subscribeButtonText","PremiumFeatureModal","isBig","PremiumLogo","PremiumSubscriptionOption","statusText","entities","statusEntities","renderFooterText","gifts","forUserIds","isCompleted","giftModal","boostPerSentGift","boostsPerSentGift","BOOST_PER_SENT_GIFT","closePremiumGiftModal","selectedMonthOption","setSelectedMonthOption","selectedUserQuantity","giftingUserList","selectedGift","gift","filteredGifts","fullMonthlyGiftAmount","basicGift","handlePremiumClick","userNameList","modalDialog","main","avatars","headerText","center","part","subpart","boostIcon","giftSection","subscriptionOptions","premiumFeatures","Link","isPrimary","renderPremiumFeaturesLink","selectedStarOption","selectedStarCount","starsNeeded","areOptionsExtended","markOptionsExtended","unmarkOptionsExtended","renderingOptions","canExtend","maxOption","stars","forceShowAll","currentStackedStarsCount","canExtendOptions","isExtended","starsCount","isWide","isOdd","isActiveOption","perUserStarCount","winner","winners","opt","perUserStars","wideOption","optionTop","formatInteger","stackedStars","StarIcon","stackedStar","optionBottom","moreOptions","noForcedUpperCase","starsGiftOptions","forUserId","starsGiftModal","closeStarsGiftModal","selectedOption","setSelectedOption","bottomText","SafeLink","hiddenHeader","starHeaderText","headerInfo","logoBackground","StarsBackground","logo","StarLogo","formatCurrencyAsString","StarTopupOptionList","secondaryInfo","notFoundText","noScrollRestore","isViewOnly","itemClassName","onDisabledClick","optionalProps","lockedSelectedValues","lockedUnselectedValues","timeoutId","selectedValues","selectedValue","lockedSelectedValuesSet","lockedUnselectedValuesSet","sortedItemValuesList","lockedSelectedBucket","unlockedBucket","lockedUnselectableBucket","concat","handleItemClick","newSelectedValues","splice","onSelectedValuesChange","onSelectedValueChange","viewportValuesList","handleFilterChange","renderItem","itemOption","subLabel","isItemLoading","isAlwaysUnselected","isAlwaysSelected","isLocked","isChecked","inputElement","Radio","onlyInput","pickerList","padded","noResults","selectionLimit","selectedCountryIds","setSelectedCountryIds","noPickerScrollRestore","country","iso2","defaultName","handleSelectedIdsChange","newSelectedIds","pickerSelector","pickerTitle","ItemPicker","picker","confirmButtonText","shouldAdaptToSearch","withFixedHeight","modalProps","hasOnClickHandler","headerClassName","giveawayChatId","initialSelectedIds","onSelectedIdsConfirmed","pendingChannelId","setPendingChannelId","isConfirmModalOpen","openConfirmModal","closeConfirmModal","setSelectedIds","channelIds","isChatSuperGroup","displayedChannelIds","foundChannelIds","handleSelectedChannelIdsChange","privateLinkChannelId","isChatPublic","confirmPrivateLinkChannelSelection","handleModalConfirm","PickerModal","isLink","onClickAction","userNames","selectedMemberIds","displayText","chatFullInfo","selectChatFullInfo","members","adminMembersById","memberIds","statusesById","adminIdsSet","sortUserIds","displayedMemberIds","filteredContactIds","isUserBot","handleSelectedMemberIdsChange","GIVEAWAY_IMG_LIST","GiftGreenRound","GiftBlueRound","GiftRedRound","giveawayModal","selectedMemberList","selectedChannelList","selectedChannelIds","giveawayBoostPerPremiumLimit","giveawayBoostsPerPremium","isStarsGiftsEnabled","userSelectionLimit","giveawayAddPeersMax","countrySelectionLimit","giveawayCountriesMax","general","prepaidGiveaway","starOptions","GIVEAWAY_BOOST_PER_PREMIUM","GIVEAWAY_MAX_ADDITIONAL_COUNTRIES","GIVEAWAY_MAX_ADDITIONAL_USERS","closeGiveawayModal","launchPrepaidGiveaway","launchPrepaidStarsGiveaway","isCalendarOpened","openCalendar","closeCalendar","isCountryPickerModalOpen","openCountryPickerModal","closeCountryPickerModal","isUserPickerModalOpen","openUserPickerModal","closeUserPickerModal","isChannelPickerModalOpen","openChannelPickerModal","closeChannelPickerModal","TYPE_OPTIONS","GiftStar","customExpireDate","setCustomExpireDate","selectedRandomUserCount","setSelectedRandomUserCount","selectedGiveawayOption","setGiveawayOption","setSelectedStarOption","selectedSubscriberOption","setSelectedSubscriberOption","selectedUserIds","setSelectedUserIds","setSelectedChannelIds","shouldShowWinners","setShouldShowWinners","shouldShowPrizes","setShouldShowPrizes","prizeDescription","setPrizeDescription","dataPrepaidGiveaway","setDataPrepaidGiveaway","dataStarsPrepaidGiveaway","setDataStarsPrepaidGiveaway","isPremiumGiveaway","isStarsGiveaway","selectedUserCount","boostQuantity","boostStarsQuantity","yearlyBoosts","SUBSCRIBER_OPTIONS","monthQuantity","isStarsPrepaidGiveaway","isPremiumPrepaidGiveaway","selectedStarsGift","userCountOptions","winnerCountOptions","quantity","boostChannelId","additionalChannelIds","isOnlyForNewSubscribers","countries","areWinnersVisible","untilDate","confirmLaunchPrepaidGiveaway","giveawayId","paymentPurpose","handleRandomUserCountChange","newValue","handleWinnerCountChange","handlePrizeDescriptionChange","handleChangeSubscriberOption","handleChangeTypeOption","handleExpireDateChange","handleSetCountriesListChange","handleSelectedUserIdsChange","handleShouldShowWinnersChange","handleShouldShowPrizesChange","onClickActionHandler","handleStarClick","renderGiveawayOptionList","filteredChannelIds","deleteParticipantsHandler","iconClassName","RadioGroup","subLabelClassName","formatDateTimeToString","boosts","GiveawayTypeOption","RangeSliderWithMarks","rangeCount","marks","CountryPickerModal","GiveawayUserPickerModal","GiveawayChannelPickerModal","GIVEAWAY_MAX_ADDITIONAL_CHANNELS","closePremiumGiftingModal","openPremiumGiftModal","displayedUserIds","handleSendIdList","closeStarsGiftingModal","openStarsGiftModal","combinedIds","isSupport","SERVICE_NOTIFICATIONS_USER_ID","newSelectedId","onSelectedIdChange","LIMIT_DESCRIPTION","uploadMaxFileparts","chatlistInvites","chatlistJoined","savedDialogsPinned","LIMIT_DESCRIPTION_BLOCKED","LIMIT_DESCRIPTION_PREMIUM","LIMIT_ICON","LIMIT_VALUE_FORMATTER","MAX_UPLOAD_FILEPART_SIZE","defaultValue","premiumValue","canBuyPremium","selectIsPremiumPurchaseBlocked","closeLimitReachedModal","isClosing","startClosing","stopClosing","valueFormatter","limitType","defaultValueFormatted","premiumValueFormatted","getLimiterDescription","canUpgrade","SLIDE_TRANSITION_DURATION","FOCUS_MARGIN","useStickerPickerObservers","idPrefix","stickerSetIntersectionsRef","activeSetIndex","setActiveSetIndex","observe","observeIntersectionForSet","freeze","freezeForSet","unfreeze","unfreezeForSet","useIntersectionObserver","rootRef","stickerSetIntersections","entry","isIntersecting","minIntersectingIndex","lowestIndex","Infinity","observeIntersectionForShowingItems","freezeForShowingItems","unfreezeForShowingItems","throttleMs","margin","observeIntersectionForPlayingItems","observeIntersectionForCovers","stickerSetEl","isClose","animateScroll","stickerSet","STICKER_SIZE_PICKER_HEADER","observeIntersection","sharedCanvasRef","hasThumbnail","hasVideoThumb","hasAnimatedThumb","hasStaticThumb","customEmoji","useCustomEmoji","hasCustomColor","shouldUseTextColor","customColor","useDynamicColorListener","colorFilter","useColorFilter","useIsIntersecting","shouldPlay","shouldFallbackToStatic","IS_WEBM_SUPPORTED","staticHash","getStickerMediaHash","staticMediaData","mediaHash","coords","useCoordsInSharedCanvas","observeIntersectionForPlaying","selectIsAlwaysHighPriorityEmoji","sharedCanvas","sharedCanvasCoords","forceAlways","getFirstLetters","contentForStatusMenuContext","arg","noContextMenu","isStatusPicker","canViewSet","observeIntersectionForShowing","isSelected","shouldIgnorePremium","noShowPremium","withTranslucentThumb","clickArg","onFaveClick","onUnfaveClick","onRemoveRecentClick","onContextMenuOpen","onContextMenuClose","onContextMenuClick","isEffectEmoji","setEmojiStatus","isFree","hasEffect","isCustomEmoji","shouldLoad","isIntesectingForShowing","handleBeforeContextMenu","shouldRenderContextMenu","getLayout","withPortal","shouldAvoidNegativePosition","handleRemoveClick","handleContextRemoveRecent","handleContextUnfave","handleContextFave","handleSendQuiet","handleSendScheduled","handleOpenSet","handleEmojiStatusExpiresClick","expires","getServerTimeOffset","shouldShowCloseButton","contextMenuItems","preventMessageInputBlurWithBubbling","StickerView","isSmall","shouldLoop","shouldPreloadPreview","noLoad","noVideoOnMobile","withSharedAnimation","noFastClick","loadAndPlay","sharedCanvasHqRef","isCustom","availableReaction","isSameReaction","staticIcon","animationId","selectAnimation","getDocumentMediaHash","EMOJI_SIZE_PICKER","AnimatedIconWithPreview","isNearActive","favoriteStickers","isReactionPicker","shouldHideHeader","withDefaultTopicIcon","selectedReactionIds","withDefaultStatusIcon","isChatEmojiSet","isChatStickerSet","isTranslucent","noContextMenus","onReactionSelect","onStickerSelect","onStickerUnfave","onStickerFave","onStickerRemoveRecent","clearRecentStickers","clearRecentCustomEmoji","clearRecentReactions","toggleStickerSet","itemsPerRow","setItemsPerRow","getItemsPerRowFallback","stickerMarginPx","emojiMarginPx","emojiVerticalMarginPx","isRecent","RECENT_SYMBOL_SET_ID","isFavorite","FAVORITE_SYMBOL_SET_ID","isPopular","POPULAR_SYMBOL_SET_ID","isEmoji","isPremiumSet","selectIsSetPremium","handleClearRecent","handleAddClick","stickerSetId","handleDefaultTopicIconClick","DEFAULT_TOPIC_ICON_STICKER_ID","isLottie","handleDefaultStatusIconClick","DEFAULT_STATUS_ICON_ID","itemSize","STICKER_SIZE_PICKER","verticalMargin","calculateItemsPerRow","contentRect","useResizeObserver","accessHash","isInstalled","installedDate","isArchived","canCut","EFFECT_EMOJIS_SET_ID","EFFECT_STICKERS_SET_ID","isCut","expand","itemsBeforeCutout","totalItemsCount","itemHeight","heightWhenCut","favoriteStickerIdsSet","withAddSetButton","addSetButtonText","pill","grey","reactionId","getReactionKey","ReactionEmoji","isHqEmoji","canvasRef","StickerButton","HEADER_BUTTON_WIDTH","DEFAULT_ID_PREFIX","FADED_BUTTON_SET_IDS","STICKER_SET_IDS_WITH_COVER","setsById","stickerSetsById","customEmojisById","featuredIds","customEmojiFeaturedIds","statusRecent","emojis","recentStatusEmojis","recentCustomEmojis","recentCustomEmojiIds","recentReactions","topReactions","defaultTags","addedCustomEmojiIds","added","setIds","canAnimate","selectCanPlayAnimatedEmojis","defaultTopicIconsId","defaultStatusIconsId","chatEmojiSetId","emojiSet","defaultTagReactions","pickerListClassName","withDefaultTopicIcons","onCustomEmojiSelect","handleContentScroll","shouldHideTopBorder","pickTruthy","prefix","areAddedLoaded","allSets","defaultSets","TOP_SYMBOL_SET_ID","topReactionsSlice","cleanRecentReactions","some","topReaction","cleanAvailableReactions","isInactive","allRecentReactions","defaultStatusIconsPack","defaultTopicIconsPack","userSetIds","unshift","setIdsToDisplay","setsToDisplay","noPopulatedSets","canRenderContent","useAsyncRendering","shouldRenderContent","newLeft","handleEmojiSelect","handleReactionSelect","pickerStyles","listClassName","firstSticker","withSharedCanvas","STICKER_PICKER_MAX_SHARED_COVERS","isHq","isFaded","StickerSetCover","StickerSet","areFeaturedStickersLoaded","selectIsContextMenuTranslucent","statusButtonRef","onEmojiStatusSelect","loadFeaturedEmojiStickers","transformOriginX","isContextMenuShown","markContextMenuShown","unmarkContextMenuShown","Portal","noCompact","bubbleClassName","noCloseOnBackdrop","CustomEmojiPicker","getFirstAvailableBoost","myBoosts","boost","firstBoost","prevBoostedChat","applyBoost","closeBoostModal","loadFullChat","isReplaceModalOpen","openReplaceModal","closeReplaceModal","isWaitDialogOpen","openWaitDialog","closeWaitDialog","isPremiumDialogOpen","openPremiumDialog","closePremiumDialog","chatTitle","boostedChatTitle","isStatusLoaded","isBoosted","leftText","rightText","descriptionText","canBoostMore","boostStatus","hasMyBoost","areBoostsInDifferentChannels","every","currentLevel","hasNextLevel","levelProgress","remainingBoosts","isMaxLevel","getBoostProgressInfo","hasBoost","moreBoosts","modalTitle","boostsLeftToUnrestrict","boostsToUnrestrict","boostsApplied","boostTimes","isBoostDisabled","isReplacingBoost","handleApplyBoost","slots","slot","handleProceedPremium","handleButtonClick","PremiumProgress","floatingBadgeText","isOnlyConfirm","formatDateInFuture","tableData","headerImageUrl","headerAvatarPeer","headerAvatarWebPhoto","noHeaderImage","isPrizeStars","withAvatar","hasAbsoluteCloseButton","webPhoto","PickerSelectedItem","chatMessage","closeGiftCodeModal","applyGiftCode","canUse","toId","usedAt","handleOpenGiveaway","giveawayMessageId","modalData","LinkField","isFromGiveaway","TableInfoModal","closeChatlistModal","joinChatlistInvite","selectedPeerIds","setSelectedPeerIds","missingPeerIds","hasChatsToAdd","newChatsCount","badgeText","handleSelectionToggle","areAllSelected","pickerWrapper","pickerHeader","pickerHeaderInfo","selectionToggle","alreadyPeerIds","Badge","buttonBadge","isAlternateColor","suggestedPeerIds","leaveChatlist","joinedIds","isNotJoined","selectedCount","removal","selectChatFolder","renderingInfo","renderingFolderTitle","folderTabNumber","ChatlistAlready","ChatlistNew","ChatlistDelete","folderTitle","foldersWrapper","folders","badgeCount","isBadgeActive","balance","smallerText","balanceBottom","SingleMediaThumb","boughtMedia","mediaBlob","blurry","full","isTransactionPreview","arr","MediaSpoiler","noOutline","transaction","openStarsTransactionModal","transactionPeer","selectOptionalPeer","avatarPeer","CUSTOM_PEER_PREMIUM","customPeer","buildStarsTransactionCustomPeer","titleKey","subtitleKey","isRefund","hasFailed","isPending","PaidMediaThumb","formatStarsTransactionAmount","TRANSACTION_TYPES","TRANSACTION_TABS","originPayment","starsBalanceState","originPaymentBot","closeStarsBalanceModal","loadStarsTransactions","openStarsGiftingModal","history","selectedTabIndex","setSelectedTabIndex","productStarsPrice","invoice","originBotName","shouldShowTransactions","all","transactions","tosText","openStarsGiftingModalHandler","openStarsInfoModalHandler","BalanceBlock","modalBalance","starButton","renderCount","shouldRestoreHeight","noFastList","TransactionItem","TabList","activeTab","onSwitchTab","messageInputInvoice","inputInvoice","isPaidMedia","paidMediaMessage","paidMediaChat","closePaymentModal","openStarsBalanceModal","sendStarPaymentForm","markLoading","unmarkLoading","starsText","areAllPhotos","areAllVideos","mediaText","channelTitle","handlePayment","price","paymentContent","paymentImages","paymentPhoto","paymentImageBackground","paymentButton","paymentAmount","paymentButtonStar","starCount","starGiftSticker","selectGiftStickerForStars","canPlayAnimatedEmojis","closeStarsTransactionModal","handleOpenMedia","flatMap","animatedStickerData","AnimatedIconFromSticker","giftEntryAboutText","subtitleTextParts","giftOutAboutText","withNodes","starModalData","toName","getStarsPeerTitleKey","messageLink","getMessageLink","mediaAmount","m","isMyGift","copyTextToClipboard","footerTextParts","renderingModalData","listItemData","headerIconName","isStatic","Separator","isMonetizationSharing","minLevelSignal","useSelectorSignal","channelRestrictAdsLevelMin","minLevelToRestrictAds","regularAdContent","TableAboutModal","blockchainText","monetizationTitle","specialReplacement","passwordHint","clearMonetizationInfo","loadMonetizationRevenueWithdrawalUrl","shouldShowPassword","setShouldShowPassword","password","currentPassword","onSuccess","handleClearError","PasswordForm","shouldShowSubmit","clearError","hint","isPasswordVisible","shouldResetValue","onChangePasswordVisibility","reportSponsoredMessage","closeReportAdModal","openPreviousReportAdModal","transitionRef","handleOptionClick","randomId","renderingSection","renderingDepth","sectionDepth","sections","hasSubtitle","ACTIVE_SLIDE_CLASS_NAME","handleAnimationStart","TO_SLIDE_CLASS_NAME","narrow","secondaryIcon","MEDIA_PERMISSIONS","MESSAGE_PERMISSIONS","useManagePermissions","defaultPermissions","permissions","setPermissions","havePermissionChanged","setHavePermissionChanged","setIsLoading","handlePermissionChange","targetName","getUpdatedPermissionValue","oldPermissions","newPermissions","sendGifs","checkMedia","mediaPermissions","v","sendMedia","assign","embedLinks","sendPlain","sendMessages","resetPermissions","permissionKeyList","fullInfo","hasLinkedChat","linkedChatId","isMediaDropdownOpen","setIsMediaDropdownOpen","shiftedClassName","dropdownClassName","withCheckbox","getControlIsDisabled","permissionGroup","shouldDisablePermissionForPublicGroup","countCheckedPermissions","handleOpenMediaDropdown","handleDisabledClick","blocking","labelText","rightIcon","onClickLabel","sendPhotos","sendVideos","sendStickers","sendAudios","sendDocs","sendVoices","sendRoundvideos","sendPolls","inviteUsers","pinMessages","changeInfo","manageTopics","deleteMessageModal","canDeleteForAll","messageIdList","selectCurrentMessageIds","isChatBasicGroup","isSuperGroup","contactName","getPrivateChatUserId","isChatWithBot","selectBot","chatBot","REPLIES_USER_ID","canBanUsers","isCreator","getHasAdminRight","isOwn","isOwnMessage","willDeleteForCurrentUserOnly","willDeleteForAll","album","deleteMessages","deleteScheduledMessages","reportMessages","deleteChatMember","updateChatMemberBannedRights","closeDeleteMessageModal","defaultBannedRights","chosenDeleteOption","setChosenDeleteOption","chosenBanOption","setChosenBanOptions","chosenSpanOption","setChosenSpanOptions","isAdditionalOptionsVisible","setIsAdditionalOptionsVisible","isSenderOwner","isOwner","shouldShowAdditionalOptions","shouldShowOptions","userName","ACTION_SPAM_OPTION","ACTION_DELETE_OPTION","ACTION_BAN_OPTION","toggleAdditionalOptions","filterMessageIdByUserId","selectedMessageIdList","msgId","senderPeer","selectSenderFromMessage","handleDeleteMessages","filteredMessageIdList","shouldDeleteForAll","handleDeleteMember","filteredUserIdList","handleUpdateChatMemberBannedRights","bannedRights","handleDeleteMessageForAll","messages","handleDeleteMessageForSelf","reason","handleDeleteOptionChange","handleBanOptionChange","handleSpanOptionChange","mainContainer","singleTitle","actionTitle","CheckboxGroup","restrictionContainer","restrictionContainerOpen","restrictionTitle","PermissionCheckboxList","dropdownList","dropdownListOpen","listItemButton","dialogButtons","isPrivateChat","canPinForAll","pinMessage","handlePinMessageForAll","isUnpin","handlePinMessage","isOneSide","isSilent","pinnedMessagesCount","onUnpin","selectedMessageIds","selectedMessages","selectCanDeleteSelectedMessages","exitMessageSelectMode","senderList","senderArray","getSendersFromSelectedMessages","userList","uniqueUserIds","nestedOptionsWithAvatarList","showAdditionalOptions","buildCollectionByCallback","nestedOptions","prev","userIdList","isNaN","onCloseHandler","nestedCheckbox","selectCanReportSelectedMessages","selectCanDownloadSelectedMessages","hasProtectedMessage","selectHasProtectedMessage","selectCanForwardMessages","isShareMessageModalOpen","isShareMessageModalShown","isAnyModalOpen","requestedAttachBotInstall","selectedMessagesCount","selectSelectedMessagesCount","canDeleteMessages","canReportMessages","canDownloadMessages","canForwardMessages","canPost","openForwardMenuForSelectedMessages","downloadSelectedMessages","copySelectedMessages","handleCopy","useHotkeys","useCopySelectedMessages","handleExitMessageSelectMode","onBackspace","onEsc","prevSelectedMessagesCount","formattedMessagesCount","renderButton","DeleteSelectedMessageModal","seenByModal","seenByDates","closeSeenByModal","renderingSeenByDates","leftId","rightId","handleCloseSeenByModal","CLOSE_ANIMATION_DURATION","isReadDate","privacySettingsNoticeModal","updateGlobalPrivacySettings","closePrivacySettingsNoticeModal","setPrivacyVisibility","loadUser","handleShowReadTime","shouldHideReadMarks","handleShowLastSeen","privacyKey","handleOpenPremium","LOCAL_TGS_URLS","ReadTime","LastSeen","reactorModal","reactors","loadReactors","closeReactorListModal","chosenTab","setChosenTab","canShowFilters","results","chatIdRef","handleCloseAnimationEnd","allReactions","uniqueReactions","seenByUserIds","LoadMoreDirection","Backwards","formatIntegerCompact","peerReactions","reactor","seenByUser","withEmojiStatus","addedDate","avatarSize","activeEmojiInteraction","animatedEffect","selectAnimatedEmojiEffect","effectAnimationId","stopActiveEmojiInteraction","isHiding","startHiding","startPlaying","stop","handleCancelAnimation","endHeavyAnimation","effectHash","effectTgsUrl","startSize","isReversed","quality","chatLanguageModal","currentLanguageCode","selectLanguageCode","activeTranslationLanguage","selectRequestedMessageTranslationLanguage","selectRequestedChatTranslationLanguage","requestMessageTranslation","closeChatLanguageModal","setSettingOption","requestChatTranslation","handleSelect","langCode","toLanguageCode","translationLanguage","handleSearch","translateLanguages","SUPPORTED_TRANSLATION_LANGUAGES","translatedName","Intl","DisplayNames","of","originalName","filteredDisplayedLanguages","highlight","closeCollectibleInfoModal","isUsername","handleOpenUrl","shouldSkipModal","formatUsername","collectible","formattedCollectible","purchaseDate","cryptoCurrency","cryptoAmount","Mention","chip","createMapStateToProps","props","fetchingStatus","globalSearch","currentType","isVoice","byChatId","globalMessagesByChatId","searchChatId","shouldWarnAboutSvg","byKey","runThrottled","cb","searchMessagesGlobal","openAudioPlayer","foundMessages","parseSearchResultKey","handleMessageFocus","handlePlayAudio","canRenderContents","NothingFound","shouldDrawDateDivider","toYearMonth","getMessageDownloadableMedia","formatMonthAndYear","Audio","AudioOrigin","Search","getSenderName","onDateClick","buttonRef","activeElement","selectIsChatPinned","selectIsChatMuted","selectNotifySettings","selectNotifyExceptions","canChangeFolder","chatFolders","withUsername","isMuteModalOpen","openMuteModal","closeMuteModal","isChatFolderModalOpen","openChatFolderModal","closeChatFolderModal","shouldRenderChatFolderModal","markRenderChatFolderModal","unmarkRenderChatFolderModal","shouldRenderMuteModal","markRenderMuteModal","unmarkRenderMuteModal","handleChatFolderChange","handleMute","useChatContextActions","useSelectWithEnter","storyViewerOrigin","MuteChatModal","ChatFolderModal","popularBotApps","botApps","recentBotIds","topBotApps","searchPopularBotApps","openChatWithInfo","shouldShowMoreMine","setShouldShowMoreMine","filteredFoundIds","recentSet","withoutRecent","handleChatClick","shouldReplaceHistory","handleToggleShowMoreMine","LeftSearchResultChat","privateChatUserId","privateChatUser","mediaThumbnail","getMessageSticker","getMessageMediaThumbDataUri","mediaBlobUrl","getMessageMediaHash","isRoundVideo","getMessageRoundVideo","formatPastTimeShort","renderMessageSummary","isSpoiler","getMessageIsSpoiler","getMessageVideo","renderSummary","searchDate","suggestions","suggestion","currentDate","latestYear","getSuggestionsFromDate","selectTopic","foundTopicIds","dateSearchQuery","onSearchDateSelect","onReset","openThread","handleTopicClick","nothingFound","DateSuggest","LeftSearchResultTopic","ChatMessage","topUserIds","topPeers","recentlyFoundChatIds","loadTopUsers","addRecentlyFoundChatId","clearRecentlyFoundChats","topUsersRef","handleClearRecentlyFoundChats","isChannelList","globalResults","localResults","globalPeerIds","accountPeerIds","similarChannelIds","selectSimilarChannelIds","GLOBAL_SUGGESTED_CHANNELS_ID","suggestedChannelIds","setGlobalSearchChatId","loadChannelRecommendations","chatSelectionRef","shouldShowMoreLocal","setShouldShowMoreLocal","shouldShowMoreGlobal","setShouldShowMoreGlobal","handlePickerItemClick","startsWith","filteredChatIds","getOrderedIds","ALL_FOLDER_ID","localChatIds","contactIdsWithMe","localPeerIds","filteredIds","handleClickShowMoreLocal","handleClickShowMoreGlobal","noScrollRestoreOnTop","RecentContacts","CURRENT_TYPE","observeIntersectionForMedia","getMessageDocument","Document","withDate","datetime","smaller","WebLink","onMessageClick","handleSelectMedia","isMediaGrid","isMessageList","Media","TABS","GlobalSearchContent","ChannelList","BotApps","Links","Files","Music","Voice","CHAT_TABS","currentContent","setGlobalSearchContent","setGlobalSearchDate","setActiveTab","parseDateString","handleSwitchTab","handleSearchDateSelect","ChatMessageResults","ChatResults","MediaResults","LinkResults","FileResults","AudioResults","BotAppResults","INITIAL_STATE","email","twoFaReducer","state","payload","maxChats","selectCurrentLimit","mode","dispatch","onSaveFilter","openLimitReachedModal","chatFilter","selectedChatIds","selectedChatTypes","selectChatFilters","chatTypes","CUSTOM_PEER_INCLUDED_CHAT_TYPES","CUSTOM_PEER_EXCLUDED_CHAT_TYPES","isTouched","setIsTouched","folderAllOrderedIds","useFolderManagerForOrderedIds","folderArchivedOrderedIds","ARCHIVED_FOLDER_ID","shouldHideChatTypes","isChatList","newFilter","includeFilters","includedChatIds","excludeFilters","excludedChatIds","handleSelectedChatTypesChange","newFilters","categories","selectedCategories","categoryPlaceholderKey","withPeerTypes","onSelectedCategoriesChange","ERROR_NO_TITLE","ERROR_NO_CHATS","invites","chatListCount","loadedActiveChatIds","loadedArchivedChatIds","isRemoved","maxInviteLinks","maxChatLists","onAddIncludedChats","onAddExcludedChats","onShareFolder","onOpenInvite","isOnlyInvites","onSaveFolder","loadChatlistInvites","isCreating","isEditingChatList","isIncludedChatsListExpanded","setIsIncludedChatsListExpanded","isExcludedChatsListExpanded","setIsExcludedChatsListExpanded","includedChatTypes","excludedChatTypes","visibleIncludedChatIds","visibleExcludedChatIds","allLoadedChatsSet","loadedIncludedChatIds","findIntersectionWithSet","loadedExcludedChatIds","handleCreateInviteClick","selectCanShareFolder","handleEditInviteClick","renderChats","visibleChatIds","leftChatsCount","clickHandler","chatType","typeKey","renderChatType","AnimatedIcon","STICKER_SIZE_FOLDER_SETTINGS","FoldersNew","runThrottledForLoadRecommended","folderIds","foldersById","recommended","recommendedChatFolders","maxFolders","onCreateFolder","onEditFolder","loadRecommendedChatFolders","addChatFolder","sortChatFolders","setState","orderedFolderIds","dragOrderIds","draggedIndex","prevFolderIds","handleCreateFolder","chatsCountByFolderId","useFolderManagerForChatsCount","userFolders","getFolderDescriptionText","handleCreateFolderFromRecommended","translation","handleDragEnd","canCreateNewFolder","FoldersAll","isBlocked","isDragged","draggedTop","Draggable","onDragEnd","knobStyle","allowSelection","shareFolderScreen","pinnedChatIds","createChatlistInvite","deleteChatlistInvite","editChatlistInvite","handleRevoke","unlockedIds","partition","selectCanInviteToChat","isFirstRenderRef","prevUrl","handleClickDisabled","chatsCount","FoldersShare","withShare","onRevoke","lockedUnselectedIds","currentScreen","shownScreen","onScreenSelect","openShareChatFolderModal","editChatFolder","handleReset","SettingsScreens","FoldersCreateFolder","FoldersEditFolder","FoldersEditFolderFromChatList","FoldersEditFolderInvites","FoldersIncludedChats","FoldersExcludedChats","saveState","newState","folderUpdate","handleSaveFolder","handleSaveFilter","handleEditFolder","handleAddIncludedChats","FoldersIncludedChatsFromChatList","handleAddExcludedChats","FoldersExcludedChatsFromChatList","handleShareFolder","noRequestNextScreen","handleOpenInvite","Folders","SettingsFoldersMain","SettingsFoldersEdit","SettingsFoldersChatFilters","SettingsShareChatlist","shouldDisablePasswordManager","expectedPassword","validationError","setValidationError","newPassword","PasswordMonkey","fullReset","STICKER_SIZE_PASSCODE","Congratulations","Lock","previewUrl","lockPreviewUrl","PasscodeChangePasscodeCurrent","PasscodeTurnOff","passcode","onSetPasscode","setPasscode","clearPasscode","setPasscodeError","clearPasscodeError","handleStartWizard","PasscodeNewPasscode","handleNewPassword","PasscodeNewPasscodeConfirm","handleNewPasswordConfirm","PasscodeCongratulations","handleChangePasswordCurrent","currentPasscode","decryptSession","PasscodeChangePasscodeNew","handleChangePasswordNew","PasscodeChangePasscodeConfirm","handleTurnOff","Privacy","PasscodeDisabled","SettingsPasscodeStart","SettingsPasscodeForm","SettingsPasscodeCongratulations","PasscodeEnabled","SettingsPasscodeEnabled","premiumSection","handleOpenPremiumModal","shouldNewNonContactPeersRequirePremium","selectNewNoncontactPeersRequirePremium","canLimitNewMessagesWithoutPremium","canChange","PrivacyLockedOption","hidden","PremiumStatusItem","getSessionIcon","session","platform","device","deviceModel","systemVersion","activeSessions","byHash","changeSessionSettings","terminateAuthorization","renderingSession","handleSecretChatsStateChange","areSecretChatsEnabled","handleCallsStateChange","areCallsEnabled","handleTerminateSessionClick","headerButton","SettingsActiveSession","iconDevice","dateActive","box","appName","appVersion","ip","region","getLocation","note","actionHeader","actionName","orderedHashes","ttlDays","terminateAllAuthorizations","changeSessionTtl","isConfirmTerminateAllDialogOpen","openConfirmTerminateAllDialog","closeConfirmTerminateAllDialog","openedSessionHash","setOpenedSessionHash","autoTerminateValue","AUTO_TERMINATE_OPTIONS","handleTerminateAllSessions","handleOpenSessionModal","handleCloseSessionModal","handleChangeSessionTtl","days","currentSession","currentSessionHash","isCurrent","otherSessionHashes","hasOtherSessions","sessionHashes","sessionHash","areButtonsInColumn","activeWebSessions","terminateWebAuthorization","renderingBot","browser","terminateAllWebAuthorizations","openedWebsiteHash","setOpenedWebsiteHash","handleTerminateAuthClick","handleTerminateAllAuth","handleCloseWebsiteModal","clearHelp","SettingsActiveWebsite","handleCardClick","CHAT_HEIGHT_PX","STICKER_SIZE_GENERAL_SETTINGS","renderPreview","customEmojiSetIds","shouldSuggestCustomEmoji","stickerSettingsRef","handleStickerSetClick","handleSuggestCustomEmojiChange","customEmojiSets","StickerSetCard","canAutoLoadPhotoFromContacts","canAutoLoadPhotoInPrivateChats","canAutoLoadPhotoInGroups","canAutoLoadPhotoInChannels","canAutoLoadVideoFromContacts","canAutoLoadVideoInPrivateChats","canAutoLoadVideoInGroups","canAutoLoadVideoInChannels","canAutoLoadFileFromContacts","canAutoLoadFileInPrivateChats","canAutoLoadFileInGroups","canAutoLoadFileInChannels","autoLoadFileMaxSizeMb","renderFileSizeCallback","AUTODOWNLOAD_FILESIZE_MB_LIMITS","handleFileSizeChange","renderAutoDownloadBlock","canAutoLoadFromContacts","canAutoLoadInPrivateChats","canAutoLoadInGroups","canAutoLoadInChannels","renderValue","renderContentSizeSlider","LOCAL_SUPPORTED_DETECTION_LANGUAGES","SUPPORTED_LANGUAGES","doNotTranslate","language","displayedOptions","setDisplayedOptions","displayedOptionList","currentLanguageOption","otherOptionList","prevLanguage","onEditUsername","toggleUsername","toggleChatUsername","sortUsernames","sortChatUsernames","usernameForConfirm","setUsernameForConfirm","usernameList","username","prevUsernameList","orderedUsernames","dragOrderUsernames","handleCopyUsername","handleUsernameClick","isEditable","closeConfirmUsernameDialog","handleUsernameToggle","usernameData","LINK_PREFIX_REGEX","runDebouncedForCheckUsername","currentUsername","asLink","isUsernameAvailable","checkedUsername","checkUsername","checkPublicLink","setUsername","langPrefix","previousIsUsernameAvailable","renderingIsUsernameAvailable","isChecking","usernameSuccess","usernameError","MIN_UPDATE_USERNAME_LENGTH","MAX_USERNAME_LENGTH","USERNAME_REGEX","test","handleUsernameChange","newUsername","isUsernameValid","success","readOnly","ERROR_FIRST_NAME_MISSING","editUsernameError","profileEdit","maxBioLength","currentFirstName","currentLastName","currentUserFullInfo","selectUserFullInfo","currentAvatarHash","getChatAvatarHash","currentBio","bio","loadCurrentUser","updateProfile","firstEditableUsername","isUsernameTouched","setIsUsernameTouched","isProfileFieldsTouched","setIsProfileFieldsTouched","setError","setPhoto","setBio","editableUsername","setEditableUsername","currentAvatarBlobUrl","ProfileEditProgress","InProgress","isUsernameError","shouldRenderUsernamesManage","isSaveButtonShown","Complete","handlePhotoChange","newPhoto","handleBioChange","handleProfileSave","trimmedFirstName","trimmedLastName","trimmedBio","AvatarEditable","TextArea","maxLengthIndicator","UsernameInput","USERNAME_PURCHASE_ERROR","purchaseInfoLink","PURCHASE_USERNAME","renderPurchaseLink","ManageUsernames","shouldShowLoginCodeInChatList","shouldForceHttpTransport","shouldAllowHttpTransport","shouldCollectDebugLogs","shouldDebugExportedSenders","isAutoUpdateEnabled","setIsAutoUpdateEnabled","electron","getIsAutoUpdateEnabled","handleDownloadLog","file","File","getDebugLogs","DEBUG_LOG_FILENAME","handleIsAutoUpdateEnabledChange","Experimental","IS_ELECTRON","TIME_FORMAT_OPTIONS","shouldUseSystemTheme","messageTextSize","messageSendKeyCombo","timeFormat","isMobileDevice","appearanceThemeOptions","keyboardSendOptions","handleMessageTextSizeChange","setAttribute","handleAppearanceThemeChange","newTheme","getSystemTheme","handleTimeFormatChange","newTimeFormat","wasTimeFormatSetManually","setTimeFormat","handleMessageSendComboChange","newCombo","isTrayIconEnabled","setIsTrayIconEnabled","getIsTrayIconEnabled","handleIsTrayIconEnabledChange","GeneralChatBackground","IS_WINDOWS","wallpaper","localMediaHash","isLoadingRef","isLoadAllowed","setIsLoadAllowed","fullMedia","wasLoadDisabled","UPLOADING_WALLPAPER_SLUG","cacheKeyRef","blob","fetchBlob","cacheApi","save","CUSTOM_BG_CACHE_NAME","isAllowed","background","isBlurred","themes","loadedWallpapers","loadWallpapers","uploadWallpaper","setThemeSettings","themeRef","handleFileSelect","validatedFiles","validateFiles","handleUploadWallpaper","openSystemFilesDialog","handleSetColor","GeneralChatBackgroundColor","handleResetToDefault","patternColor","DARK_THEME_PATTERN_COLOR","DEFAULT_PATTERN_COLOR","handleWallPaperSelect","currentWallpaper","getAverageColor","getPatternColor","rgbColor","rgb2hex","handleWallPaperBlurChange","isUploading","WallpaperTile","DEFAULT_HSB","rgb2hsb","hex2rgb","PREDEFINED_COLORS","hsb2positions","hsb","rects","colorPosition","colorRect","huePosition","hueRect","positions2hsb","colorPickerRef","huePickerRef","isFirstRunRef","setHsb","getInitialHsb","hsbRef","markIsDragging","unmarkIsDragging","rgbInput","setRgbInput","hexInput","setHexInput","rectsRef","colorCtxRef","offsetLeft","handleColorDrag","handleHueDrag","selectorToPreventScroll","withCursor","hex","hsb2rgb","hue","hueHex","rgb","w","h","imgData","createImageData","pixels","col","perY","st","ed","perX","putImageData","drawColor","drawHue","handleRgbChange","rgbValue","channel","handleHexChange","hexValue","handlePredefinedColorClick","dataset","editedFolderId","signOut","isSignOutDialogOpen","setIsSignOutDialogOpen","handleMultiClick","currentAmountRef","useMultiClick","openSignOutConfirmation","closeSignOutConfirmation","openDeleteFolderConfirmation","handleSignOutMessage","forceInitApi","SettingsMenuButton","EditProfile","General","QuickReaction","Notifications","DataStorage","Language","DoNotTranslate","Stickers","PrivacyPhoneNumber","PrivacyLastSeen","PrivacyProfilePhoto","PrivacyBio","PrivacyBirthday","PrivacyForwarding","PrivacyVoiceMessages","PrivacyMessages","PrivacyGroupChats","PrivacyPhoneCall","PrivacyPhoneNumberAllowedContacts","PrivacyLastSeenAllowedContacts","PrivacyProfilePhotoAllowedContacts","PrivacyBioAllowedContacts","PrivacyBirthdayAllowedContacts","PrivacyForwardingAllowedContacts","PrivacyVoiceMessagesAllowedContacts","PrivacyGroupChatsAllowedContacts","PrivacyPhoneCallAllowedContacts","PrivacyPhoneP2PAllowedContacts","PrivacyPhoneNumberDeniedContacts","PrivacyLastSeenDeniedContacts","PrivacyProfilePhotoDeniedContacts","PrivacyBioDeniedContacts","PrivacyBirthdayDeniedContacts","PrivacyForwardingDeniedContacts","PrivacyVoiceMessagesDeniedContacts","PrivacyGroupChatsDeniedContacts","PrivacyPhoneCallDeniedContacts","PrivacyPhoneP2PDeniedContacts","Performance","ActiveSessions","ActiveWebsites","PrivacyBlockedUsers","TwoFaDisabled","TwoFaEnabled","TwoFaNewPassword","TwoFaChangePasswordNew","TwoFaChangePasswordConfirm","TwoFaNewPasswordConfirm","TwoFaNewPasswordHint","TwoFaChangePasswordHint","TwoFaNewPasswordEmail","TwoFaRecoveryEmail","TwoFaNewPasswordEmailCode","TwoFaRecoveryEmailCode","TwoFaCongratulations","TwoFaChangePasswordCurrent","TwoFaTurnOff","TwoFaRecoveryEmailCurrentPassword","languages","canTranslate","canTranslateChats","loadLanguages","loadAttachBots","selectedLanguage","setSelectedLanguage","markIsLoading","unmarkIsLoading","canTranslateChatsEnabled","oldSetLanguage","currentLangCode","navigator","shortLangCode","substr","nativeName","handleShouldTranslateChange","handleShouldTranslateChatsChange","handleShouldTranslateChatsClick","doNotTranslateText","IS_TRANSLATION_SUPPORTED","handleDoNotSelectOpen","isGiveawayAvailable","selectIsGiveawayGiftsPurchaseAvailable","starsBalance","shouldDisplayStars","sessionCount","openSupportChat","openPremiumGiftingModal","isSupportDialogOpen","openSupportDialog","closeSupportDialog","isPreload","handleOpenSupport","ProfileInfo","canPlayVideo","ChatExtra","chatOrUserId","isInSettings","langName","FAQ_URL","PRIVACY_URL","hasPrivateChatsNotifications","hasPrivateChatsMessagePreview","hasGroupNotifications","hasGroupMessagePreview","hasBroadcastNotifications","hasBroadcastMessagePreview","hasContactJoinedNotifications","hasWebNotifications","hasPushNotifications","notificationSoundVolume","loadNotificationSettings","updateContactSignUpNotification","updateNotificationSettings","updateWebNotificationSettings","runDebounced","useRunDebounced","areNotificationsSupported","checkIfNotificationsSupported","areOfflineNotificationsSupported","checkIfOfflinePushFailed","handleSettingsChange","peerType","setting","currentIsSilent","currentShouldShowPreviews","shouldShowPreviews","handleWebNotificationsChange","handlePushNotificationsChange","handlePrivateChatsNotificationsChange","handlePrivateChatsPreviewChange","handleGroupsNotificationsChange","handleGroupsPreviewChange","handleChannelsNotificationsChange","handleChannelsPreviewChange","handleContactNotificationChange","playNotifySound","ANIMATION_LEVEL_OPTIONS","ANIMATION_LEVEL_CUSTOM_OPTIONS","PERFORMANCE_OPTIONS","IS_BACKDROP_BLUR_SUPPORTED","performanceSettings","selectPerformanceSettings","updatePerformanceSettings","sectionExpandedStates","setSectionExpandedStates","sectionCheckedStates","animationLevelState","areDeepEqual","INITIAL_PERFORMANCE_STATE_MAX","ANIMATION_LEVEL_MAX","INITIAL_PERFORMANCE_STATE_MIN","ANIMATION_LEVEL_MIN","INITIAL_PERFORMANCE_STATE_MID","ANIMATION_LEVEL_MED","ANIMATION_LEVEL_CUSTOM","animationLevelOptions","handleToggleSection","sectionIndex","handleAnimationLevelChange","newLevel","performance","animationLevel","handlePropertyGroupChange","perfomanceSection","sectionName","newSettings","handlePropertyChange","_ref6","_ref7","hasPassword","isSensitiveEnabled","canChangeSensitive","shouldArchiveAndMuteNewNonContact","canDisplayChatInTitle","hasPasscode","blockedCount","totalCount","webAuthCount","canDisplayAutoarchiveSetting","canSetPasscode","selectCanSetPasscode","loadPrivacySettings","loadBlockedUsers","loadContentSettings","updateContentSettings","loadGlobalPrivacySettings","loadWebAuthorizations","handleArchiveAndMuteChange","handleChatInTitleChange","handleUpdateContentSettings","getVisibilityValue","shouldAllowPremium","blockCount","blockChatIds","allowCount","allowChatIds","total","exceptionString","lastSeen","profilePhoto","birthday","forwards","phoneCall","allowDisabledClick","voiceMessages","chatInvite","blockedIds","localContactIds","userSearch","localUserIds","setUserSearchQuery","availableContactIds","contactId","firstId","secondId","secondName","localeCompare","handleRemoveUser","chatsByIds","usersByIds","isBlockUserModalOpen","openBlockUserModal","closeBlockUserModal","handleUnblockClick","blockedUsernamesById","mainUsername","getMainUsername","userMainUsername","renderContact","BlockUserModal","getPrivacyKey","screen","PrivacyPhoneP2P","PrivacyAddByPhone","selectShouldHideReadMarks","canShowHideReadTime","handleChangeShouldHideReadMarks","hasCurrentUserFullInfo","currentUserFallbackPhoto","loadFullUser","uploadProfilePhoto","isDeleteFallbackPhotoModalOpen","openDeleteFallbackPhotoModal","closeDeleteFallbackPhotoModal","handleSelectFile","isFallback","handleConfirmDelete","handleOpenFileSelector","click","SelectAvatar","PrivacySubsection","isPremiumRequired","visibilityOptions","hasNobody","primaryExceptionLists","shouldShowDenied","shouldShowAllowed","prepareSubtitle","userIdsCount","chatIdsCount","allowedString","blockString","allowedContactsScreen","deniedContactsScreen","primaryPrivacy","secondaryPrivacy","addByPhone","phoneP2P","secondaryScreen","SettingsPrivacyPublicProfilePhoto","SettingsPrivacyLastSeen","PREMIUM_CATEGORY","getCurrentPrivacySettings","isAllowList","withPremiumCategory","setPrivacySettings","selectedContactIds","selectedCategoryTypes","newSelectedCategoryTypes","setNewSelectedCategoryTypes","filteredChats","handleSelectedCategoriesChange","updatedIds","isPremiumAllowed","config","selectedReaction","defaultReaction","setDefaultReaction","withIcon","addedSetIds","shouldSuggestStickers","shouldUpdateStickerSetOrder","handleSuggestStickerSetOrderChange","handleSuggestStickersChange","stickerSets","STICKER_SIZE_TWO_FA","animatedEmoji","selectAnimatedEmoji","codeLength","twoFaSettings","waitingEmailCodeLength","focusDelayTimeoutMs","setValue","handleInputChange","shouldConfirm","isConfirmShown","markIsConfirmShown","unmarkIsConfirmShown","handleSkip","handleSkipConfirm","updatePassword","checkPassword","clearTwoFaError","updateRecoveryEmail","provideTwoFaEmailCode","clearPassword","handleNewPasswordHint","handleNewPasswordEmail","handleChangePasswordConfirm","handleChangePasswordHint","handleRecoveryEmailCurrentPassword","handleRecoveryEmail","handleEmailCode","SettingsTwoFaStart","SettingsTwoFaPassword","SettingsTwoFaSkippableForm","SettingsTwoFaEmailCode","SettingsTwoFaCongratulations","SettingsTwoFaEnabled","TRANSITION_RENDER_COUNT","TWO_FA_SCREENS","PASSCODE_SCREENS","FOLDERS_SCREENS","PRIVACY_SCREENS","PRIVACY_PHONE_NUMBER_SCREENS","PRIVACY_LAST_SEEN_PHONE_SCREENS","PRIVACY_PROFILE_PHOTO_SCREENS","PRIVACY_BIO_SCREENS","PRIVACY_BIRTHDAY_SCREENS","PRIVACY_PHONE_CALL_SCREENS","PRIVACY_PHONE_P2P_SCREENS","PRIVACY_FORWARDING_SCREENS","PRIVACY_VOICE_MESSAGES_SCREENS","PRIVACY_GROUP_CHATS_SCREENS","foldersState","foldersDispatch","shouldSkipTransition","closeShareChatFolderModal","twoFaState","twoFaDispatch","useReducer","privacyPasscode","setPrivacyPasscode","forceReturnToChatList","isFromSettings","renderCurrentSection","isScreenActive","_isFrom","_currentKey","SettingsHeader","activeScreen","privacyAllowScreens","isTwoFaScreen","isPasscodeScreen","isFoldersScreen","isPrivacyScreen","Main","SettingsMain","SettingsEditProfile","SettingsGeneral","SettingsQuickReaction","SettingsCustomEmoji","SettingsNotifications","SettingsDataStorage","SettingsPrivacy","SettingsLanguage","SettingsDoNotTranslate","SettingsStickers","SettingsExperimental","SettingsGeneralBackground","SettingsGeneralBackgroundColor","SettingsActiveSessions","SettingsActiveWebsites","SettingsPrivacyBlockedUsers","SettingsPrivacyVisibility","SettingsPrivacyVisibilityExceptionList","SettingsFolders","SettingsTwoFa","SettingsPasscode","SettingsPerformance","renderCurrentSectionContent","LAYERS_ANIMATION_NAME","shouldWrap","withSwipeControl","userStatusesById","openNewContactDialog","isSearching","onSelectedMemberIdsChange","onNextStep","setGlobalSearchQuery","foundContactIds","canBeInvitedToGroup","handleNextStep","creationProgress","creationError","chatCreation","maxGroupSize","createGroupChat","createChannel","setTitle","setAbout","chatTitleEmptyError","channelTitleEmptyError","ChatCreationProgress","memberFirstNames","generatedChatName","handleTitleChange","handleDescriptionChange","handleCreateGroup","handleCreateChannel","renderedError","RENDER_COUNT","LeftColumnContent","onContentChange","newChatMemberIds","setNewChatMemberIds","NewChannelStep2","NewGroupStep2","isStepActive","NewChannelStep1","NewGroupStep1","NewChatStep1","NewChatStep2","RIBBON_OFFSET","RIBBON_Z_INDEX","STROKE_OFFSET","CANVAS_OFFSET","callbacks","getHTMLElements","toggler","ribbon","leftMainHeader","ribbonPeers","ribbonStyles","toggleAvatars","sourceEl","togglerStyles","sourceCanvas","getPeerId","selectByPeerId","createDelayedCallback","ms","cancelDelayedCallbacks","toggleStoriesHidden","isDense","handleSavedStories","profileTab","handleArchivedStories","handleOpenProfile","handleArchivePeer","StoryRibbonButton","isRibbonShown","isArchivedRibbonShown","isForumPanelOpen","selectIsForumPanelOpen","canShow","toggleStoryRibbon","PREVIEW_AVATAR_COUNT","isRead","preloadPeerIds","useShowTransition","withShouldRender","headerRight","lastToggleAvatar","firstToggleAvatar","lastId","toggleAvatar","zIndex","toScale","fromScale","headerBottom","withStorySolid","forceFriendStorySolid","archiveSettings","isStoryRibbonShown","onTopicSearch","onSettingsScreenSelect","onLeftColumnContentChange","updateArchiveSettings","handleDisplayArchiveInChats","shouldDisableDropdownMenuTransitionRef","handleDropdownMenuTransitionEnd","useLeftHeaderButtonRtlForumTransition","shouldRenderTitle","titleClassNames","shouldRenderForumPanel","handleForumPanelAnimationEnd","handleForumPanelAnimationStart","isAnimationStarted","useForumPanelRender","isForumPanelVisible","shouldRenderStoryRibbon","storyRibbonClassNames","isStoryRibbonClosing","StoryToggler","folderType","ForumPanel","onOpenAnimationStart","folderOrderedIds","editChatFolders","initialSelectedFolderIds","selectedFolderIds","setSelectedFolderIds","idsToRemove","idsToAdd","MuteDuration","muteUntilOption","setMuteUntilOption","Forever","updateChatMutedState","updateTopicMutedState","muteForOptions","OneHour","FourHours","EightHours","OneDay","ThreeDays","muteUntil","div","ALLOWED_QUOTE_ENTITIES","ApiMessageEntityTypes","Bold","Italic","Underline","Strike","Spoiler","getSelectionAsFormattedText","range","html","clonedSelection","cloneContents","commonAncestorContainer","nodeType","Node","ELEMENT_NODE","currentElement","tag","entityType","wrapHtmlWithMarkupTags","innerHTML","getSelectionAsHtml","entity","stripEntitiesForQuote","parseHtmlAsFormattedText","PinMessageModal","useModuleLoader","Bundles","Extra","getCopyLabel","hasSelection","shouldRenderShowWhen","canLoadReadDate","closeContextMenu","menuSeparatorSize","openPrivacySettingsNoticeModal","readDate","MenuSeparator","handleOpenModal","isReactionPickerOpen","enabledReactions","reactionsLimit","targetHref","canSendNow","canReschedule","canReply","canQuote","canEdit","noReplies","canPin","canUnpin","canFaveSticker","canUnfaveSticker","canCopy","canSelect","canSaveGif","canRevote","canClosePoll","canShowOriginal","canSelectLanguage","repliesThreadInfo","canShowSeenBy","canShowReactionsCount","canShowReactionList","seenByRecentPeers","hasCustomEmoji","isInSavedMessages","onReply","onOpenThread","onEdit","onPin","onFaveSticker","onUnfaveSticker","onSend","onReschedule","onCopyLink","onCopyNumber","onDownload","onSaveGif","onCancelVote","onClosePoll","onShowSeenBy","onShowReactors","onToggleReaction","onCopyMessages","onAboutAdsClick","onSponsoredHide","onSponsorInfo","onSponsoredReport","onReactionPickerOpen","onTranslate","onShowOriginal","onSelectLanguage","openCustomEmojiSets","scrollableRef","withReactions","areItemsHidden","hideItems","markIsReady","unmarkIsReady","isDesktop","seenByDatesCount","handleAfterCopy","customEmojiSet","handleOpenCustomEmojiSets","copyOptions","afterEffect","getMessageText","getMessagePhoto","getMessageWebPageVideo","getMessageWebPagePhoto","getMessageContact","getPhotoMediaHash","canImageBeCopied","hasMediaLocalBlobUrl","CLIPBOARD_ITEM_SUPPORTED","selection","getSelection","resolve","copyImageToClipboard","anchorNode","parentNode","selectionParentNode","selectedMessageElement","checkMessageHasSelection","getMessageIdsForSelectedText","execCommand","clipboardText","shouldRenderAsHtml","copyHtmlToClipboard","getMessageTextWithSpoilers","getMessageCopyOptions","extraHeightAudioPlayer","pinnedElement","extraHeightPinned","extraPaddingX","extraTopPadding","extraMarginTop","menuElMinWidth","handleOpenMessageReactionPicker","withMaxHeight","ReactionSelector","allAvailableReactions","currentReactions","onShowMore","messagesCount","withPreventDefaultOnMouseDown","inline","withWrap","sponsorInfo","ReadTimeMenuItem","detectedLanguage","seenByExpiresAt","seenByMaxChatMembers","maxUniqueReactions","readDateExpiresAt","noOptions","canReplyGlobally","isMessageUnread","selectIsMessageUnread","isReadDateRestricted","isReadDateRestrictedByMe","isScheduled","threadInfo","selectThreadInfo","isMessageThread","isCommentsInfo","fromChannelId","canSendText","isUserRightBanned","canReplyInChat","isMessageLocal","hasTtl","hasMessageTtl","membersCount","isAction","isActionMessage","areReactionsEmpty","canSeeList","canCopyNumber","customEmojiSetsInfo","selectMessageCustomEmojiSets","customEmojiSetsNotFiltered","translationRequestLanguage","hasTranslation","selectMessageTranslations","selectCanTranslateMessage","isChatTranslated","isForbidden","hasFullInfo","canScheduleUntilOnline","selectCanScheduleUntilOnline","isMessageTranslated","selectIsReactionPickerOpen","updateDraftReplyInfo","setEditingId","openReplyMenu","faveSticker","unfaveSticker","toggleMessageSelection","sendScheduledMessages","rescheduleMessage","loadSeenBy","openSeenByModal","openReactorListModal","copyMessagesByIds","saveGif","cancelPollVote","closePoll","toggleReaction","showOriginalMessage","openChatLanguageModal","openMessageReactionPicker","loadOutboxReadDate","copyMessageLink","setIsMenuOpen","setIsReportModalOpen","isPinModalOpen","setIsPinModalOpen","isClosePollDialogOpen","openClosePollDialog","closeClosePollDialog","canQuoteSelection","setCanQuoteSelection","requestCalendar","calendar","useSchedule","uniqueReactors","msg","downloadableMedia","selectionRange","getRangeAt","collapsed","ancestor","TEXT_NODE","isSelectionRangeInsideMessage","selectionText","startOffset","endOffset","closeMenu","handleDelete","handleReport","closePinModal","handleReply","quoteText","replyToMsgId","replyToPeerId","handleOpenThread","handleEdit","handlePin","handleUnpin","handleFaveSticker","handleUnfaveSticker","handleCancelVote","handlePollClose","handleSelectMessage","childMessageIds","withShift","handleScheduledMessageSend","handleRescheduleMessage","scheduledAt","handleOpenCalendar","handleOpenSeenByModal","handleOpenReactorListModal","handleCopyMessages","handleCopyLink","shouldIncludeThread","shouldIncludeGrouped","handleCopyNumber","handleSaveGif","gif","handleToggleReaction","shouldAddToRecent","handleReactionPickerOpen","handleTranslate","handleShowOriginal","handleSelectLanguage","reportMessageIds","scheduledMaxDate","MessageContextMenu","onReportAd","showDialog","handleAboutAdsOpen","handleSponsoredHide","handleSponsorInfo","additionalInfo","handleReportSponsoredMessage","fromSticker","stickerSetShortName","sendOptions","getAllowedAttachmentOptions","canSendStickers","shouldSchedule","selectShouldSchedule","prevStickerSet","renderingStickerSet","isAdded","isScheduleRequested","isPreloadedGlobally","suffix","renderHeader","EMOJI_SIZE_MODAL","STICKER_SIZE_MODAL","renderButtonText","customEmojiModalRef","prevCustomEmojiSets","renderingCustomEmojiSets","handleSetClick","sets","teactFastList","setCard","BOT_BUTTONS","help","isRestricted","canAddContact","getCanAddContact","isMainThread","canReportChat","currentChatId","currentThreadId","userFullInfo","canGiftPremium","premiumGifts","canCreateTopic","canEditTopic","getCanManageTopic","canManage","selectCanManage","selectCanTranslateChat","isTranslationDisabled","savedDialog","getIsSavedDialog","isTopic","isForumAsMessages","canDeleteChat","getCanDeleteChat","botCommands","botInfo","commands","botPrivacyPolicyUrl","privacyPolicyUrl","isChatInfoShown","isRightColumnShown","selectIsRightColumnShown","isBot","withExtraActions","withForumActions","canStartBot","canSubscribe","canSearch","canCall","canMute","canViewStatistics","canViewMonetization","canViewBoosts","pendingJoinRequests","canLeave","canEnterVoiceChat","canCreateVoiceChat","canShowBoostModal","onJoinRequestsClick","onSubscribeChannel","onSearchClick","onAsMessagesClick","enterMessageSelectMode","sendBotCommand","restartBot","requestMasterAndJoinGroupCall","createGroupCall","openLinkedChat","openAddContactDialog","requestMasterAndRequestCall","toggleStatistics","openMonetizationStatistics","openBoostStatistics","openThreadWithInfo","openCreateTopicPanel","openEditTopicPanel","toggleManagement","togglePeerTranslations","setViewForumAsMessages","openBoostModal","shouldCloseFast","setShouldCloseFast","setIsDeleteModalOpen","setIsMuteModalOpen","isViewGroupInfoShown","handleViewGroupInfo","handleStartBot","command","handleRestartBot","handleUnmuteClick","handleMuteClick","handleCreateTopicClick","handleEditClick","handleEditTopicClick","handleViewAsTopicsClick","handleEnterVoiceChatClick","handleLinkedChatClick","handleGiftPremiumClick","handleAddContactClick","handleSubscribe","handleVideoCall","handleCall","handleStatisticsClick","handleMonetizationClick","handleBoostClick","handleEnableTranslations","handleSelectMessages","handleOpenAsMessages","handleBlock","handleUnblock","botButtons","commandButtons","cmd","hasPrivacyCommand","deleteTitle","DeleteChatModal","isSavedDialog","messageChat","shouldShowChat","hiddenForwardTitle","hiddenUserName","senderName","getMessageSenderName","topRow","LastMessageMeta","meta","MessageSummary","truncateLength","CHANNELS_PEER","isCustomPeer","avatarIcon","RESULT_ITEM_CLASS_NAME","runDebouncedForSearch","requestedQuery","savedTag","fetchingQuery","isHashtag","selectCurrentMiddleSearch","lastSearchQuery","savedTags","savedReactionTags","isHistoryCalendarOpen","isHashtagQuery","searchType","updateMiddleSearch","resetMiddleSearch","performMiddleSearch","closeMiddleSearch","openHistoryCalendar","loadSavedReactionTags","focusedIndex","setFocusedIndex","canFocusNewer","canFocusOlder","isFullyHidden","setIsFullyHidden","hiddenTimerRef","maybeLongPressActiveRef","isFocused","markFocused","markBlurred","isViewAsList","setIsViewAsList","refs","handleClickOutside","useClickOutside","hasResultsContainer","isOnlyHash","areResultsEmpty","hasResultsDropdown","hasQueryData","hasNavigationButtons","focusInput","blurInput","blur","visualViewport","mainEl","pageTop","update","requestNextMutation","prevIsCalendarOpen","savedTagsArray","hasSavedTags","areSavedTagsDisabled","handleQueryChange","newQuery","removeListeners","fastRaf","viewportResults","searchResultKey","originalSender","ANONYMOUS_USER_ID","selectForwardedSender","handleMessageClick","getSearchResultKey","handleTriggerViewStyle","foundResult","updateSearchParams","activateSearchTag","removeSearchSavedTag","handleDeleteTag","handleChangeSearchType","handleFocusOlder","newFocusIndex","handleFocusNewer","renderTypeTag","isForTag","selectedType","renderDropdown","dropdown","dropdownHidden","separator","wrap","isChosen","SavedTagButton","withCount","searchTypes","preloadBackwards","MiddleSearchResult","teactOrderKey","focused","mobile","withDropdown","adaptSearchBorders","canClose","resultsItemSelector","hasUpButton","hasDownButton","onStartBackspace","withBackIcon","onUpClick","onDownClick","searchTags","savedSearchTag","icons","getDayStartAt","counter","viewStyle","mobileNavigation","navigationButton","navigationDisabled","recent","favorite","effect","chatStickerSetId","effectStickers","effectEmojis","recentStickers","selectShouldLoopStickers","isForEffects","loadRecentStickers","addRecentSticker","removeRecentSticker","sendMessageAction","useSendMessageAction","effectSets","existingAddedSetIds","shouldRenderContents","handleStickerSelect","handleStickerUnfave","handleStickerFave","handleMouseMove","handleRemoveRecentSticker","CHAT_STICKER_SET_ID","isTouchScreen","shouldUseCurrentReactions","sortReactions","allowed","pickerHeight","pickerWidth","gapWidth","itemsInRow","rowsCount","pickerMaxHeight","REACTION_SELECTOR_WIDTH","availableEffectById","storyPeerId","sendAsMessage","areSomeReactionsAllowed","areAllReactionsAllowed","areCustomAllowed","shouldUseFullPicker","closeReactionPicker","saveEffectInDraft","requestEffectInComposer","renderedMessageId","renderedChatId","renderedStoryPeerId","renderedStoryId","storedPosition","renderingPosition","deltaX","FULL_PICKER_SHIFT_DELTA","handleToggleCustomReaction","handleStoryReactionSelect","customEmojiMessage","buildCustomEmojiHtml","isReaction","availableEffects","effectId","effectStickerId","chosenOrder","backdropExcludedSelector","StickerPicker","ReactionPickerLimited","BLUR_CANVAS_SIZE","attachment","shouldDisplayCompressed","shouldDisplayGrouped","onToggleSpoiler","displayType","quick","SUPPORTED_PHOTO_CONTENT_TYPES","SUPPORTED_VIDEO_CONTENT_TYPES","getDisplayType","handleSpoilerClick","filename","extension","getFileExtension","previewData","shouldSkipGrouping","shouldDisplaySpoiler","shouldSendAsSpoiler","shouldRenderOverlay","rootClassName","findInViewport","selectorOrElements","shouldContainBottom","isHorizontal","viewportY1","viewportY2","allElements","visibleIndexes","isFound","y2","setTooltipItemVisible","isFullyVisible","useKeyboardNavigation","shouldSaveSelectionOnUpdateItems","shouldRemoveSelectionOnReset","noArrowNavigation","shouldSelectOnTab","selectedItemIndex","setSelectedItemIndex","getSelectedIndex","handleArrowKey","handleItemSelect","altKey","metaKey","shiftKey","isSelectionOutOfRange","onUp","onDown","onTab","onInsertUserName","filteredUsers","handleUserSelect","forceFocus","handleSelectMention","member","selectedMentionIndex","prevChatMembers","renderedChatMembers","ATTACHMENT_MODAL_INPUT_ID","recentEmojis","attachmentSettings","baseEmojiKeywords","emojiKeywords","BASE_EMOJI_KEYWORD_LANG","groupChatMembers","keywords","customEmojiForEmoji","forEmoji","captionLimit","attachments","getHtml","editingMessage","canShowCustomSendMenu","isForMessage","shouldSuggestCompression","shouldForceCompression","shouldForceAsFile","isForCurrentMessageList","forceDarkTheme","onAttachmentsUpdate","onCaptionUpdate","onFileAppend","onClear","onSendSilent","onSendScheduled","onRemoveSymbol","onEmojiSelect","addRecentCustomEmoji","addRecentEmoji","updateAttachmentSettings","mainButtonRef","hideTimeoutRef","prevAttachments","renderingAttachments","isEditing","isInAlbum","groupedId","notEditingFile","getAttachmentMediaType","isSymbolMenuOpen","openSymbolMenu","closeSymbolMenu","shouldSendCompressed","setShouldSendCompressed","shouldCompress","isSendingCompressed","shouldSendGrouped","setShouldSendGrouped","isInvertedMedia","handleAttachmentsScroll","areAttachmentsNotScrolled","areAttachmentsScrolledToBottom","handleCaptionScroll","isCaptionNotScrolled","renderingIsOpen","isHovered","markHovered","unmarkHovered","hasMedia","hasOnlyMedia","audio","hasSpoiler","isEverySpoiler","getSelectionRange","useGetSelectionRange","EDITABLE_INPUT_MODAL_ID","isEmojiTooltipOpen","filteredEmojis","filteredCustomEmojis","insertEmoji","closeEmojiTooltip","useEmojiTooltip","isCustomEmojiTooltipOpen","insertCustomEmoji","closeCustomEmojiTooltip","useCustomEmojiTooltip","isMentionTooltipOpen","closeMentionTooltip","insertMention","mentionFilteredUsers","useMentionTooltip","setIsInvertedMedia","removeAllSelections","isCustomSendMenuOpen","sendAttachments","shouldSendScheduled","handleSendSilent","handleSendClick","handleScheduleClick","handleFilesDrop","dataTransfer","getFilesFromDataTransferItems","handleDocumentSelect","handleEnableSpoilers","handleDisableSpoilers","handleToggleSpoiler","leftChars","leftCharsBeforeLimit","fixImageContent","br","replaceWith","textContent","isQuickGallery","areAllAudios","SUPPORTED_AUDIO_CONTENT_TYPES","hasAnySpoilerable","isMultiple","canInvertMedia","isBottomDividerShown","onDragEnter","onDrop","onDragOver","onDragLeave","relatedTarget","toTarget","fromTarget","AttachmentModalItem","uniqueId","MentionTooltip","EmojiTooltip","CustomEmojiTooltip","SymbolMenuButton","isAttachmentModal","canSendPlainText","MessageInput","isAttachmentModalInput","customEmojiPrefix","canAutoFocus","shouldSuppressFocus","onSuppressedFocus","CustomSendMenu","canSchedule","onSendSchedule","isQuiz","shouldBeAnonymous","questionInputRef","optionsListRef","question","setQuestion","setOptions","isAnonymous","setIsAnonymous","isMultipleAnswers","setIsMultipleAnswers","isQuizMode","setIsQuizMode","solution","setSolution","correctOption","setCorrectOption","hasErrors","setHasErrors","handleSolutionChange","addNewOption","behavior","handleCreate","isNoCorrectOptionError","answers","correct","questionTrimmed","substring","optionsTrimmed","o","summary","multipleChoice","quiz","correctAnswers","solutionEntities","updateOption","newOptions","removeOption","handleCorrectOptionChange","handleIsAnonymousChange","handleMultipleAnswersChange","handleQuizModeChange","handleKeyPress","handleQuestionChange","getQuestionError","getOptionsError","renderOptions","onKeyPress","renderQuizNoOptionError","noReplaceNewlines","native","IS_PACKAGED_ELECTRON","BASE_URL","image","LOADED_EMOJIS","names","IS_EMOJI_SUPPORTED","loading","handleEmojiLoad","EMOJI_MARGIN","EMOJI_VERTICAL_MARGIN","EMOJI_VERTICAL_MARGIN_MOBILE","MOBILE_CONTAINER_PADDING","category","allEmojis","useOnIntersect","emojisPerRow","displayedEmoji","EmojiButton","ICONS_BY_CATEGORY","people","nature","foods","activity","places","objects","symbols","flags","categoryIntersections","emojiDataPromise","emojiRawData","emojiData","setCategories","setEmojis","activeCategoryIndex","setActiveCategoryIndex","MENU_TRANSITION_DURATION","allCategories","themeCategories","exec","default","uncompressEmoji","ensureEmojiData","selectCategory","categoryEl","containerClassName","EmojiCategory","onUnsaveClick","hasVideoPreview","getVideoMediaHash","withThumb","videoHash","getVideoPreviewMediaHash","videoData","shouldRenderVideo","isVideoReady","handleUnsaveClick","handleContextDelete","gifs","saved","canSendGifs","onGifSelect","loadSavedGifs","debounceMs","shouldUnsave","GifButton","SymbolMenuTabs","SYMBOL_MENU_TAB_TITLES","Emoji","GIFs","SYMBOL_MENU_TAB_ICONS","onSearchOpen","renderTabButton","handleSearchOpen","isLeftColumnShown","isBackgroundTranslucent","isMessageComposer","menuPositionOptions","setRecentEmojis","setRecentCustomEmojis","handleMouseEnter","handleMouseLeave","useMouseInside","recentEmojisRef","recentCustomEmojisRef","handleCustomEmojiSelect","canUpdateStickerSetsOrder","isFrom","EmojiPicker","GifPicker","SymbolMenuFooter","mobileClassName","onMouseEnter","freezeWhenClosed","quickReplies","quickReplyMessages","self","sendQuickReply","handleSendCommand","handleSendQuickReply","quickReplyId","quickRepliesWithDescription","reply","topMessageId","shortcut","handleKeyboardSelect","selectedCommandIndex","isEmpty","ChatCommand","botCommand","prevStickers","displayedStickers","clearCustomEmojiForEmoji","ce","emojiButton","COMPOSER_EMOJI_SIZE_PICKER","isOpenToBottom","onSendWhenOnline","onRemoveEffect","withEffects","hasCurrentEffect","effectReactions","isInStoryViewer","openEffectPicker","displayScheduleUntilOnline","setDisplayScheduleUntilOnline","showItems","handleOpenMessageEffectsPicker","TEXT_FORMAT_BY_TAG_NAME","B","STRONG","I","EM","U","DEL","CODE","SPAN","fragmentEl","anchorPosition","selectedRange","setSelectedRange","linkUrlInputRef","isLinkControlOpen","openLinkControl","closeLinkControl","setLinkUrl","isEditingLink","setIsEditingLink","inputClassName","setInputClassName","selectedTextFormats","setSelectedTextFormats","useVirtualBackdrop","selectedFormats","EDITABLE_INPUT_ID","textFormat","restoreSelection","removeAllRanges","addRange","updateSelectedRange","getSelectedText","shouldDropCustomEmoji","replaceChildren","INPUT_CUSTOM_EMOJI_SELECTOR","getSelectedElement","updateInputStyles","scrollWidth","getFormatButtonClassName","fKey","monospace","strikethrough","handleSpoilerText","spoiler","handleBoldText","handleItalicText","italic","handleUnderlineText","underline","handleStrikethroughText","handleMonospaceText","handleLinkUrlConfirm","formattedLinkUrl","encodeURI","u","p","getKeyFromEvent","linkUrlConfirmClassName","autoComplete","listEmojis","handleSelectEmoji","handleCustomEmojiClick","selectedIndex","prevSelectedIndex","setItemVisible","CustomEmojiButton","thumbnailDataUrl","getWebDocumentHash","decoding","inlineResult","webThumbnail","BaseResult","_gif","isForGallery","thumbnailBlobUrl","STICKER_SIZE_INLINE_BOT_RESULT","isGallery","inlineBotResults","switchPm","switchWebview","onSelectResult","startBot","requestSimpleWebView","renderedIsGallery","handleSendPm","param","handleOpenWebview","isFromSwitchWebView","prevInlineBotResults","renderedInlineBotResults","sensitiveArea","inlineBotResult","GifResult","MediaResult","StickerResult","ArticleResult","selectedSendAsId","sendAsPeerIds","saveDefaultSendAs","markMouseInside","sendAsId","selectedSendAsIndex","avatarClassName","noFake","areStickersLoaded","premiumStickerIds","coverStickerIds","covers","otherStickers","handleStickerClick","canRenderStickers","STICKER_SIZE_SEARCH","selectCurrentStickerSearch","resultIds","featured","openedStickerSetShortName","loadFeaturedStickers","StickerSetResult","selectCurrentGifSearch","selectIsChatWithBot","canPostInChat","searchMoreGifs","setGifSearchQuery","handleGifClick","handleSearchMoreGifs","hasResults","postStatistic","toggleMessageStatistics","StatisticsRecentPostMeta","toggleStoryStatistics","imgBlobUrl","forceUnreadStorySolid","lovelyChartPromise","LovelyChart","CHANNEL_GRAPHS_TITLES","growthGraph","followersGraph","muteGraph","topHoursGraph","viewsBySourceGraph","newFollowersBySourceGraph","languagesGraph","interactionsGraph","reactionsByEmotionGraph","storyInteractionsGraph","storyReactionsByEmotionGraph","CHANNEL_GRAPHS","GROUP_GRAPHS_TITLES","membersGraph","messagesGraph","actionsGraph","GROUP_GRAPHS","statistics","selectStatistics","dcId","statisticsDcId","messagesById","storiesById","setIsReady","loadedCharts","loadStatistics","loadStatisticsAsyncGraph","graphs","graphTitles","graph","token","isPercentage","ensureLovelyChart","zoomToken","create","zoomOutLabel","StatisticsOverview","recentPosts","StatisticsRecentMessage","StatisticsRecentStory","openChatByUsername","GRAPH_TITLES","viewsGraph","reactionsGraph","GRAPHS","currentMessage","currentMessageId","loadMessageStatistics","loadMessagePublicForwards","publicForwards","publicForwardsData","STATISTICS_PUBLIC_FORWARDS_LIMIT","StatisticsMessagePublicForward","currentStory","loadStoryStatistics","loadStoryPublicForwards","StatisticsStoryPublicForward","answer","voters","offsets","pollResults","answerVote","totalVoters","loadPollOptionResults","closePollResults","prevVotersCount","votersCount","areVotersLoaded","shouldResetVoters","handleViewMoreClick","handleMemberClick","leftVotersCount","ShowMoreButton","itemName","renderViewMoreButton","getMessagePoll","resultsByOption","buildCollectionByKey","PollAnswerResults","ICON_SIZE","createTopicPanel","createTopic","iconColorIndex","setIconColorIndex","iconEmojiId","setIconEmojiId","handleIconClick","getTopicColors","handleCreateTopic","iconColor","dummyTopic","shouldCleanup","noLoopLimit","editTopicPanel","editTopic","isGeneral","GENERAL_TOPIC_ID","newTitle","handleEditTopic","ERROR_NAME_MISSING","management","setBotInfo","uploadContactProfilePhoto","startBotFatherConversation","isFieldTouched","markFieldTouched","unmarkProfileTouched","isAvatarTouched","markAvatarTouched","unmarkAvatarTouched","currentName","setName","ManagementProgress","handleNameChange","trimmedName","handleChangeEditIntro","handleChangeEditCommands","handleChangeSettings","isSuggestRef","handleSelectAvatar","isSuggest","CHANNEL_TITLE_EMPTY","canChangeInfo","canInvite","exportedInvites","updateChat","closeManagement","leaveChannel","deleteChannel","loadExportedChatInvites","loadChatJoinRequests","currentTitle","currentAbout","isDeleteDialogOpen","openDeleteDialog","closeDeleteDialog","isRevoked","adminsCount","removedUsersCount","kickedMembers","handleClickEditType","ManagementScreens","ChatPrivacyType","handleClickDiscussion","Discussion","handleClickReactions","Reactions","handleClickAdministrators","ChatAdministrators","handleClickInvites","Invites","handleClickRequests","JoinRequests","handleSetPhoto","handleAboutChange","handleUpdateChannel","trimmedTitle","trimmedAbout","handleClickSubscribers","ChannelSubscribers","handleRemovedUsersClick","ChannelRemovedUsers","handleDeleteChannel","chatReactionsDescription","enabledLength","totalLength","isChannelPublic","joinRequests","onChatMemberSelect","toggleSignatures","areSignaturesEnabled","areSignaturesShown","areProfilesEnabled","areProfilesShown","canAddNewAdmins","canToggleSignatures","adminMembers","admins","handleAdminMemberClick","promotedByUserId","ChatAdminRights","handleToggleSignatures","handleToggleProfiles","handleAddAdminClick","GroupAddAdmins","getMemberStatus","promotedByUser","selectManagement","maxPublicLinks","privateInviteLink","inviteLink","updatePublicLink","updatePrivateLink","toggleIsProtected","resetManagementError","privacyType","setPrivacyType","isRevokeConfirmDialogOpen","openRevokeConfirmDialog","closeRevokeConfirmDialog","isUsernameLostDialogOpen","openUsernameLostDialog","closeUsernameLostDialog","handleOptionChange","c","radioGroup","handleForwardingOptionChange","handleSave","handleMakeChannelPrivateConfirm","shouldDisableUsernames","handleRevokePrivateLink","langPrefix1","langPrefix2","forwardingOptions","chatMembers","loadMoreMembers","usersId","availableMemberIds","isAdmin","canDeleteMembers","removedMembers","isRemoveUserModalOpen","openRemoveUserModal","closeRemoveUserModal","getRemovedBy","kickedByUserId","kickedByUser","getContextActions","RemoveGroupUserModal","forDiscussionIds","linkedChat","loadGroupsForDiscussion","linkDiscussionGroup","unlinkDiscussionGroup","toggleJoinRequest","toggleJoinToSend","linkedGroupId","setLinkedGroupId","isConfirmUnlinkGroupDialogOpen","openConfirmUnlinkGroupDialog","closeConfirmUnlinkGroupDialog","isConfirmLinkGroupDialogOpen","openConfirmLinkGroupDialog","closeConfirmLinkGroupDialog","isJoinToSend","setIsJoinToSend","isJoinRequest","setIsJoinRequest","handleUnlinkGroupSessions","Initial","handleLinkGroupSessions","handleJoinToSendCheck","handleJoinRequestCheck","DiscussionGroups","STICKER_SIZE_DISCUSSION_GROUPS","linkedGroup","renderLinkGroupHeader","hasPrivateLink","renderLinkGroupConfirmText","GROUP_TITLE_EMPTY","ALL_PERMISSIONS","TOTAL_PERMISSIONS_COUNT","limitReachedModal","hasLinkedChannel","isBasicGroup","canEditForum","isChannelsPremiumLimitReached","togglePreHistoryHidden","deleteChat","toggleForum","isForumEnabled","setIsForumEnabled","isPublicGroup","isPreHistoryHiddenCheckboxRef","handleClickPermissions","GroupPermissions","handleUpdateGroup","handleClickMembers","GroupMembers","handleTogglePreHistory","isPreHistoryHidden","handleForumToggle","newIsForumEnabled","checkbox","enabledPermissionsCount","handleDeleteGroup","isForForum","isPromotedByCurrentUser","isFormFullyDisabled","defaultRights","adminRights","isNewAdmin","selectedUserId","updateChatAdmin","isDismissConfirmationDialogOpen","openDismissConfirmationDialog","closeDismissConfirmationDialog","customTitle","setCustomTitle","selectedChatMember","selectedAdminMember","handleSavePermissions","handleDismissAdmin","memberStatus","handleCustomTitleChange","postMessages","editMessages","postStories","editStories","deleteStories","banUsers","addAdmins","manageCall","anonymous","areParticipantsHidden","hiddenMembersMinCount","canHideParticipants","canAddMembers","globalUserIds","noAdmins","toggleParticipantsHidden","setNewChatMembersDialogState","deletingUserId","setDeletingUserId","adminIds","usePeerStoriesPolling","shouldUseSearchResults","listedIds","ChatNewAdminRights","handleDeleteMembersModalClose","handleToggleParticipantsHidden","handleNewMemberDialogOpen","newChatMembersProgress","NewChatMembersProgress","memberId","DeleteMemberModal","updateChatDefaultBannedRights","GroupRemovedUsers","handleAddExceptionClick","GroupUserPermissionsCreate","handleExceptionMemberClick","GroupUserPermissions","exceptionMembers","getMemberExceptions","getLangKeyForBannedRightKey","translatedString","selectedChatMemberId","isBanConfirmationDialogOpen","openBanConfirmationDialog","closeBanConfirmationDialog","handleBanFromGroup","viewMessages","DEFAULT_USAGE_LIMITS","DEFAULT_EXPIRE_DATE","hour","week","DEFAULT_CUSTOM_EXPIRE_DATE","editingInvite","editExportedChatInvite","exportChatInvite","setIsRequestNeeded","selectedExpireOption","setSelectedExpireOption","customUsageLimit","setCustomUsageLimit","selectedUsageOption","setSelectedUsageOption","isSubmitBlocked","setIsSubmitBlocked","oldEditingInvite","editingTitle","usageLimit","editingIsRequestNeeded","minSafeDate","handleIsRequestChange","handleCustomUsageLimitChange","parseInt","handleSaveClick","formatFullDate","n","inviteInfo","importers","requesters","loadChatInviteImporters","loadChatInviteRequesters","usage","adminId","handleCopyClicked","renderImporters","importer","joinTime","isFromChatList","renderRequesters","requester","BULLET","inviteComparator","i1","i2","isPermanent","i1IsPermanent","i1Usage","i1Date","i2IsPermanent","i2Usage","i2Date","revokedInvites","revokedExportedInvites","setEditingExportedInvite","deleteExportedChatInvite","deleteRevokedExportedChatInvites","setOpenedInviteInfo","isDeleteRevokeAllDialogOpen","openDeleteRevokeAllDialog","closeDeleteRevokeAllDialog","isRevokeDialogOpen","openRevokeDialog","closeRevokeDialog","revokingInvite","setRevokingInvite","deletingInvite","setDeletingInvite","hasDetailedCountdown","MILLISECONDS_IN_DAY","chatMainUsername","primaryInvite","primaryInviteLink","temporalInvites","revokeInvite","askToRevoke","handleCreateNewClick","EditInvite","handlePrimaryRevoke","handleDeleteAllRevoked","showInviteInfo","InviteInfo","deleteInvite","askToDelete","copyLink","prepareUsageText","requested","formatCountdown","getInviteIconClass","prepareContextActions","editInvite","Invite","STICKER_SIZE_INVITES","hideChatJoinRequest","createClassNameBuilder","fixedDate","dateString","isToday","formatHumanDate","handleAcceptRequest","isApproved","handleRejectRequest","handleUserClick","hideAllChatJoinRequests","isAcceptAllDialogOpen","openAcceptAllDialog","closeAcceptAllDialog","isRejectAllDialogOpen","openRejectAllDialog","closeRejectAllDialog","handleAcceptAllRequests","handleRejectAllRequests","JoinRequest","STICKER_SIZE_JOIN_REQUESTS","MAX_UNIQUE_REACTIONS","setChatEnabledReactions","localEnabledReactions","setLocalEnabledReactions","localReactionsLimit","setLocalReactionsLimit","reactionsOptions","handleSaveReactions","availableActiveReactions","localAllowedReactions","enabledAllowedReactions","localReaction","enabledReaction","handleReactionsOptionChange","handleReactionChange","local","handleReactionsLimitChange","renderReactionsMaxCountValue","shouldShowReactionsLimit","isCenteredLayout","personalPhoto","notPersonalPhoto","isResetPersonalPhotoDialogOpen","openResetPersonalPhotoDialog","closeResetPersonalPhotoDialog","isNotificationsEnabled","setIsNotificationsEnabled","handleNotificationChange","handleDeleteContact","handleSuggestPhoto","handleSetPersonalPhoto","handleResetPersonalAvatar","canSetPersonalPhoto","noEmojiStatus","withFullInfo","noPersonalPhoto","managementType","selectCurrentManagementType","ManageBot","ManageUser","ManageGroup","GroupRecentActions","ManageChannel","ManageChatPrivacyType","ManageDiscussion","ManageGroupPermissions","ManageChatRemovedUsers","ManageGroupUserPermissionsCreate","ManageGroupUserPermissions","ManageChatAdministrators","ManageGroupAdminRights","ManageGroupMembers","ManageInvites","ManageInvite","ManageReactions","ManageInviteInfo","ManageJoinRequests","VISA","MASTERCARD1","MASTERCARD2","MIR","CardType","cards","Default","Visa","Mastercard","Mir","detectCardType","cardNumber","streetLine1","streetLine2","city","countryIso2","postCode","shipping","cardholder","expiry","cvv","billingCountry","billingZip","saveInfo","saveCredentials","formErrors","tipAmount","savedCredentialId","reducer","prices","shippingPrices","checkoutInfo","totalPrice","onAcceptTos","needAddress","hasShippingOptions","savedCredentials","isPaymentFormUrl","setPaymentStep","isInteractive","termsUrl","suggestedTipAmounts","maxTipAmount","paymentMethod","paymentProvider","shippingAddress","shippingMethod","photoUrl","handleTipsClick","tips","handlePaymentMethodClick","step","PaymentStep","SavedPayments","PaymentInfo","handleShippingAddressClick","ShippingInfo","handleShippingMethodClick","Shipping","checkoutPicture","forceAspectRatio","checkoutTitle","checkoutDescription","priceInfo","renderPaymentItem","priceInfoItem","priceInfoItemTitle","tipsList","tip","tipsItem","tipsItem_active","shouldOmitFractions","invoiceInfo","renderCheckoutItem","customIcon","provider","langStringSplit","renderTosLink","tosCheckbox","priceInfoItemMain","checkoutInfoItemInfoTitle","checkoutInfoItemInfoData","noRedirect","onPaymentFormSubmit","onPasswordChange","clearPaymentError","cardName","onInputChange","useFocusAfterAnimation","animationDuration","cardNumberRef","cardType","setCardType","newCardType","formatCardNumber","cardIcon","mastercardIconPath","visaIconPath","mirIconPath","getCardIcon","endsWith","formatCardExpiry","canSaveCredentials","needCardholderName","needCountry","needZip","selectCountryRef","handleCardNumberChange","handleCardholderChange","toUpperCase","handleExpiryChange","handleCvvChange","handleCountryChange","handleBillingPostCodeChange","handleChangeSaveCredentials","CardInput","ExpiryInput","Select","hasArrow","onNewCardClick","shippingOptions","handleShippingSelect","needEmail","needPhone","needName","phoneRef","handleAddress1Change","handleAddress2Change","handleCityChange","handleStateChange","handlePostCodeChange","handleFullNameChange","handleEmailChange","handleSaveInfoChange","DEFAULT_PROVIDER","DONATE_PROVIDER","SUPPORTED_PROVIDERS","savedInfo","invoiceContainer","nativeProvider","nativeParams","passwordMissing","confirmPaymentUrl","stripeCredentials","smartGlocalCredentials","temporaryPassword","isExtendedMedia","providerName","isProviderError","isNameRequested","isShippingAddressRequested","isPhoneRequested","isEmailRequested","shouldSendPhoneToProvider","shouldSendEmailToProvider","smartGlocalToken","stripeId","passwordValidUntil","validUntil","loadPasswordInfo","validateRequestedInfo","sendPaymentForm","sendCredentialsInfo","validatePaymentPassword","setSmartGlocalCardInfo","paymentState","paymentDispatch","twoFaPassword","setTwoFaPassword","prevStep","prevRequestId","canRenderFooter","ConfirmPayment","setStep","nextStep","Checkout","field","shippingAddressRest","shippingCountry","charAt","handleErrorModalClose","getShippingPrices","cur","getTotalPrice","cardTypeText","detectCardTypeText","shippingOption","findShippingOption","getCheckoutInfo","handleNewCardClick","handleClearPaymentError","sendForm","shippingOptionId","handlePaymentFormSubmit","credentials","validateRequest","requestInfo","getRequestInfo","sendCredentials","expiryMonth","expiryYear","zip","getCredentials","ConfirmPassword","modalHeader","isSubmitDisabled","getIsSubmitDisabled","isRecurring","cleanupOnlyKey","currentStep","SavedPaymentCredentials","PasswordConfirm","renderModalContent","renderError","optionId","receipt","totalAmount","credentialsTitle","fullAddress","sendInviteMessages","closeInviteViaLinkModal","missingUsers","setSelectedMemberIds","unselectableIds","selectableIds","requirePremiumIds","regularIds","isRequiringPremiumToMessage","invitableWithPremiumIds","isRequiringPremiumToInvite","isEveryPremiumBlocksPm","topListPeers","handleSendInviteLink","canSendInviteLink","inviteSectionText","premiumSectionText","hasPremiumSection","hasSelectableSection","lockedUnselectedSubtitle","closeOneTimeMediaModal","handlePlayVoice","closeBtnTitle","voice","OneTimeModal","RoundVideo","onStop","renderMedia","SEGMENT_COVER_EYES","SEGMENT_UNCOVER_EYE","SEGMENT_COVER_EYE","isFirstMonkeyLoaded","markFirstMonkeyLoaded","isPeekShown","markPeekShown","stikerSize","STICKER_SIZE_AUTH_MOBILE","STICKER_SIZE_AUTH","handleFirstMonkeyLoad","MonkeyClose","playSegment","MonkeyPeek"],"sourceRoot":""}