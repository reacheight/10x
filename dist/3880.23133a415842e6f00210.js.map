{"version":3,"file":"3880.23133a415842e6f00210.js","mappings":"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","sources":["webpack://telegram-t/./src/components/calls/group/GroupCallTopPane.tsx","webpack://telegram-t/./src/components/common/AnimatedCounter.tsx","webpack://telegram-t/./src/components/common/AnimatedCounter.module.scss?3640","webpack://telegram-t/./src/components/common/AnimatedIconFromSticker.tsx","webpack://telegram-t/./src/components/common/AnimatedIconWithPreview.module.scss?eca8","webpack://telegram-t/./src/components/common/AnimatedIconWithPreview.tsx","webpack://telegram-t/./src/components/common/Audio.tsx","webpack://telegram-t/./src/components/common/helpers/waveform.ts","webpack://telegram-t/./src/util/waveform.ts","webpack://telegram-t/./src/components/common/AvatarList.module.scss?00d4","webpack://telegram-t/./src/components/common/AvatarList.tsx","webpack://telegram-t/./src/components/middle/composer/helpers/applyIosAutoCapitalizationFix.ts","webpack://telegram-t/./src/components/middle/composer/hooks/useChatCommandTooltip.ts","webpack://telegram-t/./src/lib/cleanDocsHtml.ts","webpack://telegram-t/./src/components/middle/composer/helpers/cleanHtml.ts","webpack://telegram-t/./src/components/middle/composer/hooks/useClipboardPaste.ts","webpack://telegram-t/./src/components/middle/composer/hooks/useDraft.ts","webpack://telegram-t/./src/components/middle/composer/hooks/useEditing.ts","webpack://telegram-t/./src/components/middle/composer/hooks/useInlineBotTooltip.ts","webpack://telegram-t/./src/components/middle/composer/hooks/useStickerTooltip.ts","webpack://telegram-t/./src/util/voiceRecording.ts","webpack://telegram-t/./src/components/middle/composer/AttachmentModal.async.tsx","webpack://telegram-t/./src/components/middle/composer/AttachMenu.tsx","webpack://telegram-t/./src/components/middle/composer/BotCommandMenu.async.tsx","webpack://telegram-t/./src/components/middle/composer/BotKeyboardMenu.tsx","webpack://telegram-t/./src/components/middle/composer/BotMenuButton.tsx","webpack://telegram-t/./src/components/middle/composer/ChatCommandTooltip.async.tsx","webpack://telegram-t/./src/components/middle/composer/ComposerEmbeddedMessage.tsx","webpack://telegram-t/./src/components/middle/composer/DropArea.async.tsx","webpack://telegram-t/./src/components/middle/composer/InlineBotTooltip.async.tsx","webpack://telegram-t/./src/components/middle/composer/MentionTooltip.async.tsx","webpack://telegram-t/./src/components/middle/composer/PollModal.async.tsx","webpack://telegram-t/./src/components/middle/composer/SendAsMenu.async.tsx","webpack://telegram-t/./src/components/middle/composer/StickerTooltip.async.tsx","webpack://telegram-t/./src/components/middle/composer/WebPagePreview.tsx","webpack://telegram-t/./src/components/common/Composer.tsx","webpack://telegram-t/./src/components/middle/composer/hooks/useAttachmentModal.ts","webpack://telegram-t/./src/components/middle/composer/hooks/useVoiceRecording.ts","webpack://telegram-t/./src/util/deleteLastCharacterOutsideSelection.ts","webpack://telegram-t/./src/components/common/DeleteChatModal.tsx","webpack://telegram-t/./src/components/common/Document.tsx","webpack://telegram-t/./src/components/common/DotAnimation.tsx","webpack://telegram-t/./src/components/common/File.tsx","webpack://telegram-t/./src/components/common/GroupChatInfo.tsx","webpack://telegram-t/./src/components/common/LastMessageMeta.tsx","webpack://telegram-t/./src/components/common/LinkField.module.scss?fa18","webpack://telegram-t/./src/components/common/LinkField.tsx","webpack://telegram-t/./src/components/common/Media.tsx","webpack://telegram-t/./src/components/common/MediaSpoiler.module.scss?4929","webpack://telegram-t/./src/components/common/MediaSpoiler.tsx","webpack://telegram-t/./src/components/common/MessageOutgoingStatus.tsx","webpack://telegram-t/./src/components/common/NothingFound.tsx","webpack://telegram-t/./src/components/common/PasswordForm.tsx","webpack://telegram-t/./src/components/common/PremiumProgress.module.scss?8969","webpack://telegram-t/./src/components/common/PremiumProgress.tsx","webpack://telegram-t/./src/components/common/PrivateChatInfo.tsx","webpack://telegram-t/./src/components/common/ProfilePhoto.tsx","webpack://telegram-t/./src/components/common/ProfileInfo.module.scss?701a","webpack://telegram-t/./src/components/common/ProfileInfo.tsx","webpack://telegram-t/./src/components/common/hooks/usePhotosPreload.ts","webpack://telegram-t/./src/components/common/ReactionStaticEmoji.tsx","webpack://telegram-t/./src/components/common/ReportModal.tsx","webpack://telegram-t/./src/components/common/TopicIcon.tsx","webpack://telegram-t/./src/components/common/TypingStatus.tsx","webpack://telegram-t/./src/components/common/WebLink.tsx","webpack://telegram-t/./src/components/common/embedded/EmbeddedMessage.tsx","webpack://telegram-t/./src/components/common/embedded/EmojiIconBackground.module.scss?aa76","webpack://telegram-t/./src/components/common/embedded/EmojiIconBackground.tsx","webpack://telegram-t/./src/components/common/helpers/boostInfo.ts","webpack://telegram-t/./src/components/common/helpers/formatUsername.ts","webpack://telegram-t/./src/components/common/helpers/renderMessageText.ts","webpack://telegram-t/./src/components/common/helpers/sortChatIds.ts","webpack://telegram-t/./src/components/common/pickers/PeerPicker.tsx","webpack://telegram-t/./src/components/common/pickers/PickerItem.module.scss?49ce","webpack://telegram-t/./src/components/common/pickers/PickerItem.tsx","webpack://telegram-t/./src/components/common/pickers/PickerSelectedItem.tsx","webpack://telegram-t/./src/util/dates/workHours.ts","webpack://telegram-t/./src/components/common/profile/BusinessHours.module.scss?06fd","webpack://telegram-t/./src/components/common/profile/BusinessHours.tsx","webpack://telegram-t/./src/components/common/profile/UserBirthday.module.scss?dc99","webpack://telegram-t/./src/components/common/profile/UserBirthday.tsx","webpack://telegram-t/./src/components/common/profile/ChatExtra.module.scss?9412","webpack://telegram-t/./src/components/common/profile/ChatExtra.tsx","webpack://telegram-t/./src/components/common/reactions/CustomEmojiEffect.module.scss?b4fe","webpack://telegram-t/./src/components/common/reactions/CustomEmojiEffect.tsx","webpack://telegram-t/./src/components/common/reactions/ReactionAnimatedEmoji.module.scss?3a3d","webpack://telegram-t/./src/components/common/reactions/ReactionAnimatedEmoji.tsx","webpack://telegram-t/./src/components/left/ChatFolderModal.async.tsx","webpack://telegram-t/./src/components/left/MuteChatModal.async.tsx","webpack://telegram-t/./src/components/left/main/ChatCallStatus.module.scss?f06e","webpack://telegram-t/./src/components/left/main/ChatCallStatus.tsx","webpack://telegram-t/./src/components/left/main/Chat.tsx","webpack://telegram-t/./src/components/left/main/ChatBadge.tsx","webpack://telegram-t/./src/components/left/main/Archive.module.scss?6d2a","webpack://telegram-t/./src/components/left/main/Archive.tsx","webpack://telegram-t/./src/components/left/main/EmptyFolder.module.scss?0952","webpack://telegram-t/./src/components/left/main/EmptyFolder.tsx","webpack://telegram-t/./src/components/left/main/UnconfirmedSession.module.scss?bd2b","webpack://telegram-t/./src/components/left/main/UnconfirmedSession.tsx","webpack://telegram-t/./src/components/left/main/ChatList.tsx","webpack://telegram-t/./src/components/left/main/EmptyForum.module.scss?0a02","webpack://telegram-t/./src/components/left/main/EmptyForum.tsx","webpack://telegram-t/./src/components/left/main/Topic.module.scss?d97e","webpack://telegram-t/./src/components/left/main/Topic.tsx","webpack://telegram-t/./src/components/left/main/hooks/useTopicContextActions.ts","webpack://telegram-t/./src/components/left/main/ForumPanel.tsx","webpack://telegram-t/./src/components/left/main/ForumPanel.module.scss?d1a9","webpack://telegram-t/./src/components/left/main/hooks/useChatAnimationType.ts","webpack://telegram-t/./src/components/common/ChatForumLastMessage.module.scss?cb0b","webpack://telegram-t/./src/components/common/ChatForumLastMessage.tsx","webpack://telegram-t/./src/components/left/main/hooks/useChatListEntry.tsx","webpack://telegram-t/./src/components/left/main/hooks/useLeftHeaderButtonRtlForumTransition.ts","webpack://telegram-t/./src/components/left/main/hooks/useOrderDiff.ts","webpack://telegram-t/./src/components/left/search/helpers/getSenderName.ts","webpack://telegram-t/./src/hooks/useStorage.react.ts","webpack://telegram-t/./src/components/main/workspace/WorkspaceSettingsPage.react.tsx","webpack://telegram-t/./src/components/main/workspace/WorkspaceSettingsPage.module.scss?11b1","webpack://telegram-t/./src/components/main/workspace/WorkspaceSettingsPageRoot.react.tsx","webpack://telegram-t/./src/components/middle/ActionMessageSuggestedAvatar.tsx","webpack://telegram-t/./src/components/middle/message/SimilarChannels.module.scss?86cb","webpack://telegram-t/./src/components/middle/message/SimilarChannels.tsx","webpack://telegram-t/./src/hooks/useAverageColor.ts","webpack://telegram-t/./src/components/middle/ActionMessage.tsx","webpack://telegram-t/./src/components/middle/HeaderMenuContainer.async.tsx","webpack://telegram-t/./src/components/middle/HeaderActions.tsx","webpack://telegram-t/./src/components/middle/composer/AttachBotIcon.module.scss?7e9f","webpack://telegram-t/./src/components/middle/composer/AttachBotIcon.tsx","webpack://telegram-t/./src/components/middle/composer/AttachBotItem.tsx","webpack://telegram-t/./src/components/middle/composer/CustomEmojiTooltip.async.tsx","webpack://telegram-t/./src/components/middle/composer/CustomSendMenu.async.tsx","webpack://telegram-t/./src/components/middle/composer/DropTarget.tsx","webpack://telegram-t/./src/components/middle/composer/DropArea.tsx","webpack://telegram-t/./src/components/middle/composer/EmojiTooltip.async.tsx","webpack://telegram-t/./src/util/AbsoluteVideo.ts","webpack://telegram-t/./src/components/middle/composer/hooks/useInputCustomEmojis.ts","webpack://telegram-t/./src/components/middle/composer/TextFormatter.async.tsx","webpack://telegram-t/./src/components/middle/composer/MessageInput.tsx","webpack://telegram-t/./src/components/middle/composer/SymbolMenu.async.tsx","webpack://telegram-t/./src/components/middle/composer/SymbolMenuButton.tsx","webpack://telegram-t/./src/components/middle/composer/helpers/buildAttachment.ts","webpack://telegram-t/./src/util/audio.ts","webpack://telegram-t/./src/components/middle/composer/helpers/getFilesFromDataTransferItems.ts","webpack://telegram-t/./src/components/middle/composer/helpers/prepareForRegExp.ts","webpack://telegram-t/./src/components/middle/composer/helpers/renderKeyboardButtonText.tsx","webpack://telegram-t/./src/components/middle/composer/helpers/selection.ts","webpack://telegram-t/./src/components/middle/composer/hooks/useCustomEmojiTooltip.ts","webpack://telegram-t/./src/components/middle/composer/hooks/useEmojiTooltip.ts","webpack://telegram-t/./src/components/middle/composer/hooks/useMentionTooltip.ts","webpack://telegram-t/./src/components/middle/message/BaseStory.module.scss?d118","webpack://telegram-t/./src/components/middle/message/BaseStory.tsx","webpack://telegram-t/./src/components/middle/message/ContextMenuContainer.async.tsx","webpack://telegram-t/./src/components/middle/message/MessageEffect.module.scss?d23f","webpack://telegram-t/./src/components/middle/message/MessageEffect.tsx","webpack://telegram-t/./src/components/middle/message/Photo.tsx","webpack://telegram-t/./src/components/middle/message/RoundVideo.tsx","webpack://telegram-t/./src/components/middle/message/Video.tsx","webpack://telegram-t/./src/components/middle/message/WebPage.tsx","webpack://telegram-t/./src/components/middle/message/helpers/webpageType.ts","webpack://telegram-t/./src/components/middle/message/helpers/getCustomAppendixBg.ts","webpack://telegram-t/./src/components/middle/message/helpers/mediaDimensions.ts","webpack://telegram-t/./src/hooks/useOffscreenCanvasBlur.ts","webpack://telegram-t/./src/components/middle/message/hooks/useBlurredMediaThumbRef.ts","webpack://telegram-t/./src/components/middle/message/hooks/useFocusMessage.ts","webpack://telegram-t/./src/components/middle/message/hooks/useMessageTranslation.ts","webpack://telegram-t/./src/components/middle/message/hooks/useOverlayPosition.ts","webpack://telegram-t/./src/components/middle/message/reactions/ReactionSelectorReaction.module.scss?c7b9","webpack://telegram-t/./src/components/middle/message/reactions/ReactionSelectorCustomReaction.tsx","webpack://telegram-t/./src/components/middle/message/reactions/ReactionSelectorReaction.tsx","webpack://telegram-t/./src/components/middle/message/reactions/ReactionSelector.tsx","webpack://telegram-t/./src/components/modals/prompt/PromptDialog.module.scss?c2fd","webpack://telegram-t/./src/components/modals/prompt/PromptDialog.tsx","webpack://telegram-t/./src/components/middle/message/reactions/SavedTagButton.tsx","webpack://telegram-t/./src/components/right/hooks/useAsyncRendering.ts","webpack://telegram-t/./src/components/right/statistics/StatisticsOverview.module.scss?5334","webpack://telegram-t/./src/components/right/statistics/StatisticsOverview.tsx","webpack://telegram-t/./src/components/story/mediaArea/MediaArea.module.scss?fe60","webpack://telegram-t/./src/components/story/mediaArea/MediaAreaSuggestedReaction.tsx","webpack://telegram-t/./src/components/story/mediaArea/MediaAreaOverlay.tsx","webpack://telegram-t/./src/global/helpers/payments.ts","webpack://telegram-t/./src/global/helpers/peers.ts","webpack://telegram-t/./src/hooks/media/useUnsupportedMedia.ts","webpack://telegram-t/./src/hooks/polling/usePeerStoriesPolling.ts","webpack://telegram-t/./src/hooks/reducers/useFoldersReducer.ts","webpack://telegram-t/./src/hooks/schedulers/useTimeout.ts","webpack://telegram-t/./src/hooks/useAsyncResolvers.ts","webpack://telegram-t/./src/hooks/useAudioPlayer.ts","webpack://telegram-t/./src/hooks/useCanvasBlur.ts","webpack://telegram-t/./src/hooks/useChatContextActions.ts","webpack://telegram-t/./src/hooks/useEnsureMessage.ts","webpack://telegram-t/./src/hooks/useEnsureStory.ts","webpack://telegram-t/./src/hooks/useFolderManager.ts","webpack://telegram-t/./src/hooks/useForumPanelRender.ts","webpack://telegram-t/./src/hooks/useGetSelectionRange.ts","webpack://telegram-t/./src/hooks/useHorizontalScroll.ts","webpack://telegram-t/./src/hooks/useHotkeys.ts","webpack://telegram-t/./src/util/parseHotkey.ts","webpack://telegram-t/./src/hooks/useInputFocusOnOpen.ts","webpack://telegram-t/./src/hooks/useLang.ts","webpack://telegram-t/./src/hooks/useLongPress.ts","webpack://telegram-t/./src/hooks/useMediaWithLoadProgress.ts","webpack://telegram-t/./src/hooks/useMouseInside.ts","webpack://telegram-t/./src/hooks/usePrevDuringAnimation.ts","webpack://telegram-t/./src/hooks/useReducer.ts","webpack://telegram-t/./src/hooks/useRunDebounced.ts","webpack://telegram-t/./src/components/common/CalendarModal.async.tsx","webpack://telegram-t/./src/hooks/useSchedule.tsx","webpack://telegram-t/./src/hooks/useSendMessageAction.ts","webpack://telegram-t/./src/hooks/window/useBeforeUnload.ts","webpack://telegram-t/./src/util/PostMessageConnector.ts","webpack://telegram-t/./src/util/animateHorizontalScroll.ts","webpack://telegram-t/./src/util/animateScroll.ts","webpack://telegram-t/./src/util/audioPlayer.ts","webpack://telegram-t/./src/util/colors.ts","webpack://telegram-t/./src/util/cycleRestrict.ts","webpack://telegram-t/./src/util/download.ts","webpack://telegram-t/./src/util/emoji/parseEmojiOnlyString.ts","webpack://telegram-t/./src/util/focusEditableElement.ts","webpack://telegram-t/./src/util/getMessageIdsForSelectedText.ts","webpack://telegram-t/./src/util/imageResize.ts","webpack://telegram-t/./src/util/isElementInViewport.ts","webpack://telegram-t/./src/util/launchMediaWorkers.ts","webpack://telegram-t/./src/util/map.ts","webpack://telegram-t/./src/util/mediaSession.ts","webpack://telegram-t/./src/util/memoized.ts","webpack://telegram-t/./src/util/objects/customPeer.ts","webpack://telegram-t/./src/util/parseHtmlAsFormattedText.ts","webpack://telegram-t/./src/util/selection.ts","webpack://telegram-t/./src/util/systemFilesDialog.ts","webpack://telegram-t/./src/components/common/pickers/PickerStyles.module.scss?c0e4","webpack://telegram-t/./src/components/middle/message/reactions/ReactionButton.module.scss?4249"],"sourcesContent":["import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useMemo,\n} from '../../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../../global';\n\nimport type { ApiGroupCall } from '../../../api/types';\n\nimport { selectChat, selectTabState } from '../../../global/selectors';\nimport { selectChatGroupCall } from '../../../global/selectors/calls';\nimport buildClassName from '../../../util/buildClassName';\n\nimport useCurrentOrPrev from '../../../hooks/useCurrentOrPrev';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useShowTransitionDeprecated from '../../../hooks/useShowTransitionDeprecated';\n\nimport AvatarList from '../../common/AvatarList';\nimport Button from '../../ui/Button';\n\nimport './GroupCallTopPane.scss';\n\ntype OwnProps = {\n  chatId: string;\n  hasPinnedOffset: boolean;\n  className?: string;\n};\n\ntype StateProps = {\n  groupCall?: ApiGroupCall;\n  isActive: boolean;\n};\n\nconst PREVIEW_AVATARS_COUNT = 3;\n\nconst GroupCallTopPane: FC<OwnProps & StateProps> = ({\n  chatId,\n  isActive,\n  className,\n  groupCall,\n  hasPinnedOffset,\n}) => {\n  const {\n    requestMasterAndJoinGroupCall,\n    subscribeToGroupCallUpdates,\n  } = getActions();\n\n  const lang = useOldLang();\n\n  const handleJoinGroupCall = useCallback(() => {\n    requestMasterAndJoinGroupCall({\n      chatId,\n    });\n  }, [requestMasterAndJoinGroupCall, chatId]);\n\n  const participants = groupCall?.participants;\n\n  const fetchedParticipants = useMemo(() => {\n    if (!participants) {\n      return [];\n    }\n\n    // No need for expensive global updates on users and chats, so we avoid them\n    const usersById = getGlobal().users.byId;\n    const chatsById = getGlobal().chats.byId;\n\n    return Object.values(participants)\n      .slice(0, PREVIEW_AVATARS_COUNT)\n      .map(({ id }) => usersById[id] || chatsById[id])\n      .filter(Boolean);\n  }, [participants]);\n\n  useEffect(() => {\n    if (!groupCall?.id) return undefined;\n    if (!isActive && groupCall.isLoaded) return undefined;\n\n    subscribeToGroupCallUpdates({\n      id: groupCall.id,\n      subscribed: true,\n    });\n\n    return () => {\n      subscribeToGroupCallUpdates({\n        id: groupCall.id,\n        subscribed: false,\n      });\n    };\n  }, [groupCall?.id, groupCall?.isLoaded, isActive, subscribeToGroupCallUpdates]);\n\n  const {\n    shouldRender,\n    transitionClassNames,\n  } = useShowTransitionDeprecated(Boolean(groupCall && isActive));\n\n  const renderingParticipantCount = useCurrentOrPrev(groupCall?.participantsCount, true);\n  const renderingFetchedParticipants = useCurrentOrPrev(fetchedParticipants, true);\n\n  if (!shouldRender) return undefined;\n\n  return (\n    <div\n      className={buildClassName(\n        'GroupCallTopPane',\n        hasPinnedOffset && 'has-pinned-offset',\n        className,\n        transitionClassNames,\n      )}\n      onClick={handleJoinGroupCall}\n    >\n      <div className=\"info\">\n        <span className=\"title\">{lang('VoipGroupVoiceChat')}</span>\n        <span className=\"participants\">{lang('Participants', renderingParticipantCount ?? 0, 'i')}</span>\n      </div>\n      {Boolean(renderingFetchedParticipants?.length) && (\n        <AvatarList size=\"small\" peers={renderingFetchedParticipants} className=\"avatars\" />\n      )}\n      <Button round className=\"join\">\n        {lang('VoipChatJoin')}\n      </Button>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const chat = selectChat(global, chatId)!;\n    const groupCall = selectChatGroupCall(global, chatId);\n    const activeGroupCallId = selectTabState(global).isMasterTab ? global.groupCalls.activeGroupCallId : undefined;\n\n    return {\n      groupCall,\n      isActive: activeGroupCallId !== groupCall?.id && Boolean(\n        groupCall\n          ? groupCall.participantsCount > 0 && groupCall.isLoaded\n          : chat && chat.isCallNotEmpty && chat.isCallActive,\n      ),\n    };\n  },\n)(GroupCallTopPane));\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useEffect, useMemo } from '../../lib/teact/teact';\nimport { getGlobal } from '../../global';\n\nimport { selectCanAnimateInterface } from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport { throttleWithTickEnd } from '../../util/schedulers';\n\nimport useForceUpdate from '../../hooks/useForceUpdate';\nimport useLang from '../../hooks/useLang';\nimport usePreviousDeprecated from '../../hooks/usePreviousDeprecated';\n\nimport styles from './AnimatedCounter.module.scss';\n\ntype OwnProps = {\n  text: string;\n  className?: string;\n  isDisabled?: boolean;\n};\n\nconst ANIMATION_TIME = 200;\nconst MAX_SIMULTANEOUS_ANIMATIONS = 10;\n\nlet scheduledAnimationsCounter = 0;\n\nconst resetCounterOnTickEnd = throttleWithTickEnd(() => {\n  scheduledAnimationsCounter = 0;\n});\n\nconst AnimatedCounter: FC<OwnProps> = ({\n  text,\n  className,\n  isDisabled,\n}) => {\n  const { isRtl } = useLang();\n\n  const prevText = usePreviousDeprecated(text);\n  const forceUpdate = useForceUpdate();\n\n  const shouldAnimate = scheduleAnimation(\n    !isDisabled && selectCanAnimateInterface(getGlobal()) && prevText !== undefined && prevText !== text,\n  );\n\n  const characters = useMemo(() => {\n    return shouldAnimate ? renderAnimatedCharacters(text, prevText) : text;\n  }, [shouldAnimate, prevText, text]);\n\n  useEffect(() => {\n    if (!shouldAnimate) return undefined;\n\n    const timeoutId = window.setTimeout(() => {\n      forceUpdate();\n    }, ANIMATION_TIME);\n\n    return () => {\n      window.clearTimeout(timeoutId);\n    };\n  }, [shouldAnimate, text]);\n\n  return (\n    <span className={buildClassName(className, !isDisabled && styles.root)} dir={isRtl ? 'rtl' : undefined}>\n      {characters}\n    </span>\n  );\n};\n\nexport default memo(AnimatedCounter);\n\nfunction scheduleAnimation(condition: boolean) {\n  if (!condition || scheduledAnimationsCounter >= MAX_SIMULTANEOUS_ANIMATIONS) return false;\n\n  if (scheduledAnimationsCounter === 0) {\n    resetCounterOnTickEnd();\n  }\n\n  scheduledAnimationsCounter++;\n\n  return true;\n}\n\nfunction renderAnimatedCharacters(text: string, prevText?: string) {\n  const elements: React.ReactNode[] = [];\n  const textLength = text.length;\n  const prevTextLength = prevText?.length ?? 0;\n\n  for (let i = 0; i <= textLength; i++) {\n    const charIndex = textLength - i;\n    const prevTextCharIndex = prevTextLength - i;\n\n    if (prevText && prevTextCharIndex >= 0 && text[charIndex] !== prevText[prevTextCharIndex]) {\n      elements.unshift(\n        <div className={styles.characterContainer}>\n          <div className={styles.character}>{text[charIndex] ?? ''}</div>\n          <div className={styles.characterOld}>{prevText[prevTextCharIndex]}</div>\n          <div className={styles.characterNew}>{text[charIndex] ?? ''}</div>\n        </div>,\n      );\n    } else {\n      elements.unshift(<span>{text[charIndex] ?? ''}</span>);\n    }\n  }\n\n  return elements;\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"tgKbsVmz\",\"character-container\":\"IYTzbS8o\",\"characterContainer\":\"IYTzbS8o\",\"character\":\"Jw1oQFdk\",\"character-old\":\"TZfEz3sc\",\"characterOld\":\"TZfEz3sc\",\"character-disappear\":\"ORlhAlOv\",\"characterDisappear\":\"ORlhAlOv\",\"character-new\":\"Y9ied8_t\",\"characterNew\":\"Y9ied8_t\",\"character-appear\":\"s_g6bwRZ\",\"characterAppear\":\"s_g6bwRZ\"};","import React, { memo } from '../../lib/teact/teact';\n\nimport type { ApiSticker } from '../../api/types';\nimport type { OwnProps as AnimatedIconProps } from './AnimatedIcon';\nimport { ApiMediaFormat } from '../../api/types';\n\nimport { getStickerMediaHash } from '../../global/helpers';\n\nimport useMedia from '../../hooks/useMedia';\n\nimport AnimatedIconWithPreview from './AnimatedIconWithPreview';\n\ntype OwnProps =\n  Partial<AnimatedIconProps>\n  & { sticker?: ApiSticker; noLoad?: boolean; forcePreview?: boolean };\n\nfunction AnimatedIconFromSticker(props: OwnProps) {\n  const {\n    sticker, noLoad, forcePreview, ...otherProps\n  } = props;\n\n  const thumbDataUri = sticker?.thumbnail?.dataUri;\n  const localMediaHash = sticker && `sticker${sticker.id}`;\n  const previewBlobUrl = useMedia(\n    sticker ? getStickerMediaHash(sticker, 'preview') : undefined,\n    noLoad && !forcePreview,\n    ApiMediaFormat.BlobUrl,\n  );\n  const tgsUrl = useMedia(localMediaHash, noLoad);\n\n  return (\n    <AnimatedIconWithPreview\n      tgsUrl={tgsUrl}\n      previewUrl={previewBlobUrl}\n      thumbDataUri={thumbDataUri}\n      // eslint-disable-next-line react/jsx-props-no-spreading\n      {...otherProps}\n    />\n  );\n}\n\nexport default memo(AnimatedIconFromSticker);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"xCi2f0YH\",\"preview\":\"lM2usrZU\"};","import React, { memo } from '../../lib/teact/teact';\n\nimport type { OwnProps as AnimatedIconProps } from './AnimatedIcon';\n\nimport buildClassName from '../../util/buildClassName';\nimport buildStyle from '../../util/buildStyle';\n\nimport useFlag from '../../hooks/useFlag';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useMediaTransitionDeprecated from '../../hooks/useMediaTransitionDeprecated';\n\nimport AnimatedIcon from './AnimatedIcon';\n\nimport styles from './AnimatedIconWithPreview.module.scss';\n\ntype OwnProps =\n  Partial<AnimatedIconProps>\n  & { previewUrl?: string; thumbDataUri?: string; noPreviewTransition?: boolean };\n\nconst ANIMATION_DURATION = 300;\n\nconst loadedPreviewUrls = new Set();\n\nfunction AnimatedIconWithPreview(props: OwnProps) {\n  const {\n    previewUrl, thumbDataUri, className, ...otherProps\n  } = props;\n\n  const [isThumbOpen, , unmarkThumbOpen] = useFlag(Boolean(thumbDataUri));\n  const thumbClassNames = useMediaTransitionDeprecated(isThumbOpen);\n\n  const [isPreviewOpen, markPreviewOpen, unmarkPreviewOpen] = useFlag(loadedPreviewUrls.has(previewUrl));\n  const previewClassNames = useMediaTransitionDeprecated(isPreviewOpen);\n\n  const [isAnimationReady, markAnimationReady] = useFlag(false);\n\n  const handlePreviewLoad = useLastCallback(() => {\n    markPreviewOpen();\n    loadedPreviewUrls.add(previewUrl);\n  });\n\n  const handleAnimationReady = useLastCallback(() => {\n    unmarkThumbOpen();\n    unmarkPreviewOpen();\n    setTimeout(markAnimationReady, ANIMATION_DURATION);\n  });\n\n  const { size } = props;\n\n  return (\n    <div\n      className={buildClassName(className, styles.root)}\n      style={buildStyle(size !== undefined && `width: ${size}px; height: ${size}px;`)}\n    >\n      {thumbDataUri && !isAnimationReady && (\n        // eslint-disable-next-line jsx-a11y/alt-text\n        <img src={thumbDataUri} className={buildClassName(styles.preview, thumbClassNames)} draggable={false} />\n      )}\n      {previewUrl && !isAnimationReady && (\n        // eslint-disable-next-line jsx-a11y/alt-text\n        <img\n          src={previewUrl}\n          className={buildClassName(styles.preview, previewClassNames)}\n          draggable={false}\n          onLoad={handlePreviewLoad}\n        />\n      )}\n      {/* eslint-disable-next-line react/jsx-props-no-spreading */}\n      <AnimatedIcon {...otherProps} onLoad={handleAnimationReady} />\n    </div>\n  );\n}\n\nexport default memo(AnimatedIconWithPreview);\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useLayoutEffect, useMemo, useRef, useState,\n} from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport type { ApiAudio, ApiMessage, ApiVoice } from '../../api/types';\nimport type { BufferedRange } from '../../hooks/useBuffering';\nimport type { LangFn } from '../../hooks/useOldLang';\nimport type { ISettings } from '../../types';\nimport { ApiMediaFormat } from '../../api/types';\nimport { AudioOrigin } from '../../types';\n\nimport {\n  getMediaDuration,\n  getMediaFormat,\n  getMediaHash,\n  getMediaTransferState,\n  getMessageWebPageAudio,\n  hasMessageTtl,\n  isMessageLocal,\n  isOwnMessage,\n} from '../../global/helpers';\nimport { makeTrackId } from '../../util/audioPlayer';\nimport buildClassName from '../../util/buildClassName';\nimport { captureEvents } from '../../util/captureEvents';\nimport { formatMediaDateTime, formatMediaDuration, formatPastTimeShort } from '../../util/dates/dateFormat';\nimport { decodeWaveform, interpolateArray } from '../../util/waveform';\nimport { LOCAL_TGS_URLS } from './helpers/animatedAssets';\nimport { getFileSizeString } from './helpers/documentInfo';\nimport renderText from './helpers/renderText';\nimport { MAX_EMPTY_WAVEFORM_POINTS, renderWaveform } from './helpers/waveform';\n\nimport useAppLayout from '../../hooks/useAppLayout';\nimport useAudioPlayer from '../../hooks/useAudioPlayer';\nimport useBuffering from '../../hooks/useBuffering';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useMedia from '../../hooks/useMedia';\nimport useMediaWithLoadProgress from '../../hooks/useMediaWithLoadProgress';\nimport useOldLang from '../../hooks/useOldLang';\nimport useShowTransitionDeprecated from '../../hooks/useShowTransitionDeprecated';\n\nimport Button from '../ui/Button';\nimport Link from '../ui/Link';\nimport ProgressSpinner from '../ui/ProgressSpinner';\nimport AnimatedIcon from './AnimatedIcon';\nimport Icon from './icons/Icon';\n\nimport './Audio.scss';\n\ntype OwnProps = {\n  theme: ISettings['theme'];\n  message: ApiMessage;\n  senderTitle?: string;\n  uploadProgress?: number;\n  origin: AudioOrigin;\n  date?: number;\n  noAvatars?: boolean;\n  className?: string;\n  isSelectable?: boolean;\n  isSelected?: boolean;\n  isDownloading?: boolean;\n  isTranscribing?: boolean;\n  isTranscribed?: boolean;\n  canDownload?: boolean;\n  canTranscribe?: boolean;\n  isTranscriptionHidden?: boolean;\n  isTranscriptionError?: boolean;\n  autoPlay?: boolean;\n  onHideTranscription?: (isHidden: boolean) => void;\n  onPlay?: (messageId: number, chatId: string) => void;\n  onPause?: NoneToVoidFunction;\n  onReadMedia?: () => void;\n  onCancelUpload?: () => void;\n  onDateClick?: (arg: ApiMessage) => void;\n};\n\nexport const TINY_SCREEN_WIDTH_MQL = window.matchMedia('(max-width: 375px)');\nexport const WITH_AVATAR_TINY_SCREEN_WIDTH_MQL = window.matchMedia('(max-width: 410px)');\nconst AVG_VOICE_DURATION = 10;\n// This is needed for browsers requiring user interaction before playing.\nconst PRELOAD = true;\n\nconst Audio: FC<OwnProps> = ({\n  theme,\n  message,\n  senderTitle,\n  uploadProgress,\n  origin,\n  date,\n  noAvatars,\n  className,\n  isSelectable,\n  isSelected,\n  isDownloading,\n  isTranscribing,\n  isTranscriptionHidden,\n  isTranscribed,\n  isTranscriptionError,\n  canDownload,\n  canTranscribe,\n  autoPlay,\n  onHideTranscription,\n  onPlay,\n  onPause,\n  onReadMedia,\n  onCancelUpload,\n  onDateClick,\n}) => {\n  const {\n    cancelMediaDownload, downloadMedia, transcribeAudio, openOneTimeMediaModal,\n  } = getActions();\n\n  const {\n    content: {\n      audio: contentAudio, voice, video,\n    }, isMediaUnread,\n  } = message;\n  const audio = contentAudio || getMessageWebPageAudio(message);\n  const media = (voice || video || audio)!;\n  const isVoice = Boolean(voice || video);\n  const isSeeking = useRef<boolean>(false);\n  // eslint-disable-next-line no-null/no-null\n  const seekerRef = useRef<HTMLDivElement>(null);\n  const lang = useOldLang();\n  const { isRtl } = lang;\n\n  const { isMobile } = useAppLayout();\n  const [isActivated, setIsActivated] = useState(false);\n  const shouldLoad = isActivated || PRELOAD;\n  const coverHash = getMediaHash(media, 'pictogram');\n  const coverBlobUrl = useMedia(coverHash, false, ApiMediaFormat.BlobUrl);\n  const hasTtl = hasMessageTtl(message);\n  const isInOneTimeModal = origin === AudioOrigin.OneTimeModal;\n  const trackType = isVoice ? (hasTtl ? 'oneTimeVoice' : 'voice') : 'audio';\n\n  const mediaData = useMedia(\n    getMediaHash(media, 'inline'),\n    !shouldLoad,\n    getMediaFormat(media, 'inline'),\n  );\n\n  const { loadProgress: downloadProgress } = useMediaWithLoadProgress(\n    getMediaHash(media, 'download'),\n    !isDownloading,\n    getMediaFormat(media, 'download'),\n  );\n\n  const handleForcePlay = useLastCallback(() => {\n    setIsActivated(true);\n    onPlay?.(message.id, message.chatId);\n  });\n\n  const handleTrackChange = useLastCallback(() => {\n    setIsActivated(false);\n  });\n\n  const {\n    isBuffered, bufferedRanges, bufferingHandlers, checkBuffering,\n  } = useBuffering();\n\n  const noReset = isInOneTimeModal;\n  const {\n    isPlaying, playProgress, playPause, setCurrentTime, duration,\n  } = useAudioPlayer(\n    makeTrackId(message),\n    getMediaDuration(message)!,\n    trackType,\n    mediaData,\n    bufferingHandlers,\n    undefined,\n    checkBuffering,\n    Boolean(isActivated || autoPlay),\n    handleForcePlay,\n    handleTrackChange,\n    isMessageLocal(message) || hasTtl,\n    undefined,\n    onPause,\n    noReset,\n    hasTtl && !isInOneTimeModal,\n  );\n\n  const reversePlayProgress = 1 - playProgress;\n  const isOwn = isOwnMessage(message);\n  const isReverse = hasTtl && isInOneTimeModal;\n\n  const waveformCanvasRef = useWaveformCanvas(\n    theme,\n    voice,\n    (isMediaUnread && !isOwn && !isReverse) ? 1 : playProgress,\n    isOwn,\n    !noAvatars,\n    isMobile,\n    isReverse,\n  );\n\n  const withSeekline = isPlaying || (playProgress > 0 && playProgress < 1);\n\n  useEffect(() => {\n    setIsActivated(isPlaying);\n  }, [isPlaying]);\n\n  const isLoadingForPlaying = isActivated && !isBuffered;\n\n  const {\n    isUploading, isTransferring, transferProgress,\n  } = getMediaTransferState(\n    uploadProgress || downloadProgress,\n    isLoadingForPlaying || isDownloading,\n    uploadProgress !== undefined,\n  );\n\n  const {\n    shouldRender: shouldRenderSpinner,\n    transitionClassNames: spinnerClassNames,\n  } = useShowTransitionDeprecated(isTransferring);\n\n  const shouldRenderCross = shouldRenderSpinner && (isLoadingForPlaying || isUploading);\n\n  const handleButtonClick = useLastCallback(() => {\n    if (isUploading) {\n      onCancelUpload?.();\n      return;\n    }\n\n    if (hasTtl) {\n      openOneTimeMediaModal({ message });\n      onReadMedia?.();\n      return;\n    }\n\n    if (!isPlaying) {\n      onPlay?.(message.id, message.chatId);\n    }\n\n    getActions().setAudioPlayerOrigin({ origin });\n    setIsActivated(!isActivated);\n    playPause();\n  });\n\n  useEffect(() => {\n    if (onReadMedia && isMediaUnread && (isPlaying || isDownloading)) {\n      onReadMedia();\n    }\n  }, [isPlaying, isMediaUnread, onReadMedia, isDownloading]);\n\n  const handleDownloadClick = useLastCallback(() => {\n    if (isDownloading) {\n      cancelMediaDownload({ media });\n    } else {\n      downloadMedia({ media, originMessage: message });\n    }\n  });\n\n  const handleSeek = useLastCallback((e: MouseEvent | TouchEvent) => {\n    if (isSeeking.current && seekerRef.current) {\n      const { width, left } = seekerRef.current.getBoundingClientRect();\n      const clientX = e instanceof MouseEvent ? e.clientX : e.targetTouches[0].clientX;\n      e.stopPropagation(); // Prevent Slide-to-Reply activation\n      // Prevent track skipping while seeking near end\n      setCurrentTime(Math.max(Math.min(duration * ((clientX - left) / width), duration - 0.1), 0.001));\n    }\n  });\n\n  const handleStartSeek = useLastCallback((e: MouseEvent | TouchEvent) => {\n    if (e instanceof MouseEvent && e.button === 2) return;\n    isSeeking.current = true;\n    handleSeek(e);\n  });\n\n  const handleStopSeek = useLastCallback(() => {\n    isSeeking.current = false;\n  });\n\n  const handleDateClick = useLastCallback(() => {\n    onDateClick!(message);\n  });\n\n  const handleTranscribe = useLastCallback(() => {\n    transcribeAudio({ chatId: message.chatId, messageId: message.id });\n  });\n\n  useEffect(() => {\n    if (!seekerRef.current || !withSeekline || isInOneTimeModal) return undefined;\n    return captureEvents(seekerRef.current, {\n      onCapture: handleStartSeek,\n      onRelease: handleStopSeek,\n      onClick: handleStopSeek,\n      onDrag: handleSeek,\n    });\n  }, [withSeekline, handleStartSeek, handleSeek, handleStopSeek, isInOneTimeModal]);\n\n  function renderFirstLine() {\n    if (isVoice) {\n      return senderTitle || 'Voice';\n    }\n\n    const { title, fileName } = audio!;\n\n    return title || fileName;\n  }\n\n  function renderSecondLine() {\n    if (isVoice) {\n      return (\n        <div className=\"meta\" dir={isRtl ? 'rtl' : undefined}>\n          {formatMediaDuration((voice || video)!.duration)}\n        </div>\n      );\n    }\n\n    const { performer } = audio!;\n\n    return (\n      <div className=\"meta\" dir={isRtl ? 'rtl' : undefined}>\n        {formatMediaDuration(duration)}\n        <span className=\"bullet\">&bull;</span>\n        {performer && <span className=\"performer\" title={performer}>{renderText(performer)}</span>}\n        {performer && senderTitle && <span className=\"bullet\">&bull;</span>}\n        {senderTitle && <span title={senderTitle}>{renderText(senderTitle)}</span>}\n      </div>\n    );\n  }\n\n  const fullClassName = buildClassName(\n    'Audio',\n    className,\n    isInOneTimeModal && 'non-interactive',\n    origin === AudioOrigin.Inline && 'inline',\n    isOwn && origin === AudioOrigin.Inline && 'own',\n    (origin === AudioOrigin.Search || origin === AudioOrigin.SharedMedia) && 'bigger',\n    isSelected && 'audio-is-selected',\n  );\n\n  const buttonClassNames = ['toogle-play-wrapper'];\n  if (shouldRenderCross) {\n    buttonClassNames.push('loading');\n  } else {\n    buttonClassNames.push(isPlaying ? 'pause' : 'play');\n  }\n\n  const contentClassName = buildClassName('content', withSeekline && 'with-seekline');\n\n  function renderWithTitle() {\n    return (\n      <div className={contentClassName}>\n        <div className=\"content-row\">\n          <p className=\"title\" dir=\"auto\" title={renderFirstLine()}>{renderText(renderFirstLine())}</p>\n\n          <div className=\"message-date\">\n            {Boolean(date) && (\n              <Link\n                className=\"date\"\n                onClick={handleDateClick}\n              >\n                {formatPastTimeShort(lang, date * 1000)}\n              </Link>\n            )}\n          </div>\n        </div>\n\n        {withSeekline && (\n          <div className=\"meta search-result\" dir={isRtl ? 'rtl' : undefined}>\n            <span className=\"duration with-seekline\" dir=\"auto\">\n              {playProgress < 1 && `${formatMediaDuration(duration * playProgress, duration)}`}\n            </span>\n            {renderSeekline(playProgress, bufferedRanges, seekerRef)}\n          </div>\n        )}\n        {!withSeekline && renderSecondLine()}\n      </div>\n    );\n  }\n\n  function renderTooglePlayWrapper() {\n    return (\n      <div className={buildClassName(...buttonClassNames)}>\n        <Button\n          round\n          ripple={!isMobile}\n          size=\"smaller\"\n          className=\"toggle-play\"\n          color={coverBlobUrl ? 'translucent-white' : 'primary'}\n          ariaLabel={isPlaying ? 'Pause audio' : 'Play audio'}\n          onClick={handleButtonClick}\n          isRtl={lang.isRtl}\n          backgroundImage={coverBlobUrl}\n          nonInteractive={isInOneTimeModal}\n        >\n          {!isInOneTimeModal && <Icon name=\"play\" />}\n          {!isInOneTimeModal && <Icon name=\"pause\" />}\n          {isInOneTimeModal && (\n            <AnimatedIcon\n              className=\"flame\"\n              tgsUrl={LOCAL_TGS_URLS.Flame}\n              nonInteractive\n              noLoop={false}\n              size={40}\n            />\n          )}\n        </Button>\n        {hasTtl && !isInOneTimeModal && (\n          <Icon name=\"view-once\" />\n        )}\n      </div>\n    );\n  }\n\n  return (\n    <div className={fullClassName} dir={lang.isRtl ? 'rtl' : 'ltr'}>\n      {isSelectable && (\n        <div className=\"message-select-control\">\n          {isSelected && <i className=\"icon icon-select\" />}\n        </div>\n      )}\n      {renderTooglePlayWrapper()}\n      {shouldRenderSpinner && (\n        <div className={buildClassName('media-loading', spinnerClassNames, shouldRenderCross && 'interactive')}>\n          <ProgressSpinner\n            progress={transferProgress}\n            transparent\n            withColor\n            size=\"m\"\n            onClick={shouldRenderCross ? handleButtonClick : undefined}\n            noCross={!shouldRenderCross}\n          />\n        </div>\n      )}\n      {isInOneTimeModal && !shouldRenderSpinner && (\n        <div className={buildClassName('media-loading')}>\n          <ProgressSpinner\n            progress={playProgress}\n            transparent\n            size=\"m\"\n            noCross\n            rotationOffset={3 / 4}\n          />\n        </div>\n      )}\n      {audio && canDownload && !isUploading && (\n        <Button\n          round\n          size=\"tiny\"\n          className=\"download-button\"\n          ariaLabel={isDownloading ? 'Cancel download' : 'Download'}\n          onClick={handleDownloadClick}\n        >\n          <i className={buildClassName('icon', isDownloading ? 'icon-close' : 'icon-arrow-down')} />\n        </Button>\n      )}\n      {origin === AudioOrigin.Search && renderWithTitle()}\n      {origin !== AudioOrigin.Search && audio && renderAudio(\n        lang,\n        audio,\n        duration,\n        isPlaying,\n        playProgress,\n        bufferedRanges,\n        seekerRef,\n        (isDownloading || isUploading),\n        date,\n        transferProgress,\n        onDateClick ? handleDateClick : undefined,\n      )}\n      {origin === AudioOrigin.SharedMedia && (voice || video) && renderWithTitle()}\n      {(origin === AudioOrigin.Inline || isInOneTimeModal) && voice && (\n        renderVoice(\n          voice,\n          seekerRef,\n          waveformCanvasRef,\n          hasTtl ? reversePlayProgress : playProgress,\n          isMediaUnread,\n          isTranscribing,\n          isTranscriptionHidden,\n          isTranscribed,\n          isTranscriptionError,\n          canTranscribe ? handleTranscribe : undefined,\n          onHideTranscription,\n          origin,\n        )\n      )}\n    </div>\n  );\n};\n\nfunction getSeeklineSpikeAmounts(isMobile?: boolean, withAvatar?: boolean) {\n  return {\n    MIN_SPIKES: isMobile ? (TINY_SCREEN_WIDTH_MQL.matches ? 16 : 20) : 25,\n    MAX_SPIKES: isMobile\n      ? (TINY_SCREEN_WIDTH_MQL.matches\n        ? 35\n        : (withAvatar && WITH_AVATAR_TINY_SCREEN_WIDTH_MQL.matches ? 40 : 45))\n      : 75,\n  };\n}\n\nfunction renderAudio(\n  lang: LangFn,\n  audio: ApiAudio,\n  duration: number,\n  isPlaying: boolean,\n  playProgress: number,\n  bufferedRanges: BufferedRange[],\n  seekerRef: React.Ref<HTMLElement>,\n  showProgress?: boolean,\n  date?: number,\n  progress?: number,\n  handleDateClick?: NoneToVoidFunction,\n) {\n  const {\n    title, performer, fileName,\n  } = audio;\n  const showSeekline = isPlaying || (playProgress > 0 && playProgress < 1);\n  const { isRtl } = lang;\n\n  return (\n    <div className=\"content\">\n      <p className=\"title\" dir=\"auto\" title={title}>{renderText(title || fileName)}</p>\n      {showSeekline && (\n        <div className=\"meta\" dir={isRtl ? 'rtl' : undefined}>\n          <span className=\"duration with-seekline\" dir=\"auto\">\n            {formatMediaDuration(duration * playProgress, duration)}\n          </span>\n          {renderSeekline(playProgress, bufferedRanges, seekerRef)}\n        </div>\n      )}\n      {!showSeekline && showProgress && (\n        <div className=\"meta\" dir={isRtl ? 'rtl' : undefined}>\n          {progress ? `${getFileSizeString(audio!.size * progress)} / ` : undefined}{getFileSizeString(audio!.size)}\n        </div>\n      )}\n      {!showSeekline && !showProgress && (\n        <div className=\"meta\" dir={isRtl ? 'rtl' : undefined}>\n          <span className=\"duration\" dir=\"auto\">{formatMediaDuration(duration)}</span>\n          {performer && (\n            <>\n              <span className=\"bullet\">&bull;</span>\n              <span className=\"performer\" dir=\"auto\" title={performer}>{renderText(performer)}</span>\n            </>\n          )}\n          {Boolean(date) && (\n            <>\n              <span className=\"bullet\">&bull;</span>\n              <Link className=\"date\" onClick={handleDateClick}>\n                {formatMediaDateTime(lang, date * 1000, true)}\n              </Link>\n            </>\n          )}\n        </div>\n      )}\n    </div>\n  );\n}\n\nfunction renderVoice(\n  voice: ApiVoice,\n  seekerRef: React.Ref<HTMLDivElement>,\n  waveformCanvasRef: React.Ref<HTMLCanvasElement>,\n  playProgress: number,\n  isMediaUnread?: boolean,\n  isTranscribing?: boolean,\n  isTranscriptionHidden?: boolean,\n  isTranscribed?: boolean,\n  isTranscriptionError?: boolean,\n  onClickTranscribe?: VoidFunction,\n  onHideTranscription?: (isHidden: boolean) => void,\n  origin?: AudioOrigin,\n) {\n  return (\n    <div className=\"content\">\n      <div className=\"waveform-wrapper\">\n        <div\n          className=\"waveform\"\n          draggable={false}\n          ref={seekerRef}\n        >\n          <canvas ref={waveformCanvasRef} />\n        </div>\n        {onClickTranscribe && (\n          // eslint-disable-next-line react/jsx-no-bind\n          <Button onClick={() => {\n            if ((isTranscribed || isTranscriptionError) && onHideTranscription) {\n              onHideTranscription(!isTranscriptionHidden);\n            } else if (!isTranscribing) {\n              onClickTranscribe();\n            }\n          }}\n          >\n            <i className={buildClassName(\n              'transcribe-icon',\n              'icon',\n              (isTranscribed || isTranscriptionError) ? 'icon-down' : 'icon-transcribe',\n              (isTranscribed || isTranscriptionError) && !isTranscriptionHidden && 'transcribe-shown',\n            )}\n            />\n            {isTranscribing && (\n              <svg viewBox=\"0 0 32 24\" className=\"loading-svg\">\n                <rect\n                  className=\"loading-rect\"\n                  fill=\"transparent\"\n                  width=\"32\"\n                  height=\"24\"\n                  stroke-width=\"3\"\n                  stroke-linejoin=\"round\"\n                  rx=\"6\"\n                  ry=\"6\"\n                  stroke=\"var(--accent-color)\"\n                  stroke-dashoffset=\"1\"\n                  stroke-dasharray=\"32,68\"\n                />\n              </svg>\n            )}\n          </Button>\n        )}\n      </div>\n      <p\n        className={buildClassName('voice-duration', origin !== AudioOrigin.OneTimeModal && isMediaUnread && 'unread')}\n        dir=\"auto\"\n      >\n        {playProgress === 0 || playProgress === 1\n          ? formatMediaDuration(voice.duration) : formatMediaDuration(voice.duration * playProgress)}\n      </p>\n    </div>\n  );\n}\n\nfunction useWaveformCanvas(\n  theme: ISettings['theme'],\n  voice?: ApiVoice,\n  playProgress = 0,\n  isOwn = false,\n  withAvatar = false,\n  isMobile = false,\n  isReverse = false,\n) {\n  // eslint-disable-next-line no-null/no-null\n  const canvasRef = useRef<HTMLCanvasElement>(null);\n\n  const { data: spikes, peak } = useMemo(() => {\n    if (!voice) {\n      return undefined;\n    }\n\n    const { waveform, duration } = voice;\n    if (!waveform) {\n      return {\n        data: new Array(Math.min(duration, MAX_EMPTY_WAVEFORM_POINTS)).fill(0),\n        peak: 0,\n      };\n    }\n\n    const { MIN_SPIKES, MAX_SPIKES } = getSeeklineSpikeAmounts(isMobile, withAvatar);\n    const durationFactor = Math.min(duration / AVG_VOICE_DURATION, 1);\n    const spikesCount = Math.round(MIN_SPIKES + (MAX_SPIKES - MIN_SPIKES) * durationFactor);\n    const decodedWaveform = decodeWaveform(new Uint8Array(waveform));\n\n    return interpolateArray(decodedWaveform, spikesCount);\n  }, [isMobile, voice, withAvatar]) || {};\n\n  useLayoutEffect(() => {\n    const canvas = canvasRef.current;\n\n    if (!canvas || !spikes || peak === undefined) {\n      return;\n    }\n\n    const fillColor = theme === 'dark' ? '#494A78' : '#ADD3F7';\n    const fillOwnColor = theme === 'dark' ? '#B7ABED' : '#AEDFA4';\n    const progressFillColor = theme === 'dark' ? '#8774E1' : '#3390EC';\n    const progressFillOwnColor = theme === 'dark' ? '#FFFFFF' : '#4FAE4E';\n\n    const fillStyle = isOwn ? fillOwnColor : fillColor;\n    const progressFillStyle = isOwn ? progressFillOwnColor : progressFillColor;\n\n    renderWaveform(canvas, spikes, isReverse ? 1 - playProgress : playProgress, {\n      peak,\n      fillStyle,\n      progressFillStyle,\n    });\n  }, [isOwn, peak, playProgress, spikes, theme, isReverse]);\n\n  return canvasRef;\n}\n\nfunction renderSeekline(\n  playProgress: number,\n  bufferedRanges: BufferedRange[],\n  seekerRef: React.Ref<HTMLElement>,\n) {\n  return (\n    <div\n      className=\"seekline\"\n      ref={seekerRef as React.Ref<HTMLDivElement>}\n    >\n      {bufferedRanges.map(({ start, end }) => (\n        <div\n          className=\"seekline-buffered-progress\"\n          style={`left: ${start * 100}%; right: ${100 - end * 100}%`}\n        />\n      ))}\n      <span className=\"seekline-play-progress\">\n        <i\n          className=\"seekline-play-progress-inner\"\n          style={`transform: translateX(${playProgress * 100}%)`}\n        />\n      </span>\n      <span className=\"seekline-thumb\">\n        <i\n          className=\"seekline-thumb-inner\"\n          style={`transform: translateX(${playProgress * 100}%)`}\n        />\n      </span>\n    </div>\n  );\n}\n\nexport default memo(Audio);\n","type IWaveformProps = {\n  peak: number;\n  fillStyle: string;\n  progressFillStyle: string;\n};\n\nexport const MAX_EMPTY_WAVEFORM_POINTS = 30;\nconst SPIKE_WIDTH = 2;\nconst SPIKE_STEP = 4;\nconst SPIKE_RADIUS = 1;\nconst HEIGHT = 23;\n\nexport function renderWaveform(\n  canvas: HTMLCanvasElement,\n  spikes: number[],\n  progress: number,\n  {\n    peak, fillStyle, progressFillStyle,\n  }: IWaveformProps,\n) {\n  const width = spikes.length * SPIKE_STEP;\n  const height = HEIGHT;\n\n  canvas.width = width * 2;\n  canvas.height = height * 2;\n  canvas.style.width = `${width}px`;\n  canvas.style.height = `${height}px`;\n\n  const ctx = canvas.getContext('2d')!;\n  ctx.scale(2, 2);\n\n  spikes.forEach((item, i) => {\n    ctx.globalAlpha = (i / spikes.length >= progress) ? 0.5 : 1;\n    ctx.fillStyle = progress > i / spikes.length ? progressFillStyle : fillStyle;\n    const spikeHeight = Math.max(2, HEIGHT * (item / Math.max(1, peak)));\n    roundedRectangle(ctx, i * SPIKE_STEP, (height + spikeHeight) / 2, SPIKE_WIDTH, spikeHeight, SPIKE_RADIUS);\n    ctx.fill();\n  });\n}\n\nfunction roundedRectangle(\n  ctx: CanvasRenderingContext2D, x: number, y: number, width: number, height: number, radius: number,\n) {\n  if (width < 2 * radius) {\n    radius = width / 2;\n  }\n  if (height < 2 * radius) {\n    radius = height / 2;\n  }\n\n  ctx.beginPath();\n  ctx.moveTo(x + radius, y);\n  ctx.arcTo(x + width, y, x + width, y - height, radius);\n  ctx.arcTo(x + width, y - height, x, y - height, radius);\n  ctx.arcTo(x, y - height, x, y, radius);\n  ctx.arcTo(x, y, x + width, y, radius);\n  ctx.closePath();\n}\n","/* eslint-disable no-bitwise */\n\n// Ref: https://github.com/telegramdesktop/tdesktop/blob/0743e71ab6b928d2ee5bae1aed991849b1e2b291/Telegram/SourceFiles/data/data_document.cpp#L1018\nexport function decodeWaveform(encoded5bit: Uint8Array) {\n  const bitsCount = encoded5bit.length * 8;\n  const valuesCount = Math.floor(bitsCount / 5);\n  if (!valuesCount) {\n    return [];\n  }\n\n  // Read each 5 bit of encoded5bit as 0-31 unsigned char.\n  // We count the index of the byte in which the desired 5-bit sequence starts.\n  // And then we read a uint16 starting from that byte to guarantee to get all of those 5 bits.\n  //\n  // BUT! if it is the last byte we have, we're not allowed to read a uint16 starting with it.\n  // Because it will be an overflow (we'll access one byte after the available memory).\n  // We see, that only the last 5 bits could start in the last available byte and be problematic.\n  // So we read in a general way all the entries in a general way except the last one.\n  const result = Array(valuesCount);\n  const bitsData = encoded5bit;\n  for (let i = 0, l = valuesCount - 1; i !== l; ++i) {\n    const byteIndex = Math.floor((i * 5) / 8);\n    const bitShift = Math.floor((i * 5) % 8);\n    const value = bitsData[byteIndex] + (bitsData[byteIndex + 1] << 8);\n    result[i] = ((value >> bitShift) & 0x1F);\n  }\n  const lastByteIndex = Math.floor(((valuesCount - 1) * 5) / 8);\n  const lastBitShift = Math.floor(((valuesCount - 1) * 5) % 8);\n  const lastValue = bitsData[lastByteIndex] + (bitsData[lastByteIndex + 1] << 8);\n  result[valuesCount - 1] = (lastValue >> lastBitShift) & 0x1F;\n\n  return result;\n}\n\nexport function interpolateArray(data: number[], fitCount: number) {\n  let peak = 0;\n  const newData = new Array(fitCount);\n  const springFactor = data.length / fitCount;\n  const leftFiller = data[0];\n  const rightFiller = data[data.length - 1];\n  for (let i = 0; i < fitCount; i++) {\n    const idx = Math.floor(i * springFactor);\n    const val = ((data[idx - 1] ?? leftFiller) + (data[idx] ?? leftFiller) + (data[idx + 1] ?? rightFiller)) / 3;\n    newData[i] = val;\n    if (peak < val) {\n      peak = val;\n    }\n  }\n  return { data: newData, peak };\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"kXs18Nmi\",\"size-micro\":\"bnYA0Wm9\",\"sizeMicro\":\"bnYA0Wm9\",\"size-mini\":\"ZGpPX4Wb\",\"sizeMini\":\"ZGpPX4Wb\",\"size-tiny\":\"ufyZRVf5\",\"sizeTiny\":\"ufyZRVf5\",\"size-small\":\"UA2exR6e\",\"sizeSmall\":\"UA2exR6e\",\"size-small-mobile\":\"PTbjjZjF\",\"sizeSmallMobile\":\"PTbjjZjF\",\"size-medium\":\"jncPG8PA\",\"sizeMedium\":\"jncPG8PA\",\"size-large\":\"pd70AQAO\",\"sizeLarge\":\"pd70AQAO\",\"size-huge\":\"ceLzD19m\",\"sizeHuge\":\"ceLzD19m\",\"size-jumbo\":\"KpwfP5mr\",\"sizeJumbo\":\"KpwfP5mr\",\"avatar\":\"XND8fhC1\",\"badge\":\"SHyAyGFO\"};","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useMemo } from '../../lib/teact/teact';\n\nimport type { ApiPeer } from '../../api/types';\nimport type { AvatarSize } from './Avatar';\n\nimport buildClassName from '../../util/buildClassName';\n\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Avatar from './Avatar';\n\nimport styles from './AvatarList.module.scss';\n\nconst DEFAULT_LIMIT = 3;\n\ntype OwnProps = {\n  size: AvatarSize;\n  peers?: ApiPeer[];\n  className?: string;\n  limit?: number;\n  badgeText?: string;\n};\n\nconst AvatarList: FC<OwnProps> = ({\n  peers,\n  size,\n  className,\n  limit = DEFAULT_LIMIT,\n  badgeText,\n}) => {\n  const lang = useOldLang();\n  const renderingBadgeText = useMemo(() => {\n    if (badgeText) return badgeText;\n    if (!peers?.length || peers.length <= limit) return undefined;\n    return `+${peers.length - limit}`;\n  }, [badgeText, peers, limit]);\n\n  return (\n    <div\n      className={buildClassName(className, styles.root, styles[`size-${size}`])}\n      dir={lang.isRtl ? 'rtl' : 'ltr'}\n    >\n      {peers?.slice(0, limit).map((peer) => <Avatar size={size} peer={peer} className={styles.avatar} />)}\n      {renderingBadgeText && (\n        <div className={styles.badge}>\n          {renderingBadgeText}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default memo(AvatarList);\n","import { IS_IOS } from '../../../../util/windowEnvironment';\n\nlet resetInput: HTMLInputElement;\n\nif (IS_IOS) {\n  resetInput = document.createElement('input');\n  resetInput.classList.add('for-ios-autocapitalization-fix');\n  document.body.appendChild(resetInput);\n}\n\n// https://stackoverflow.com/a/55652503\nexport default function applyIosAutoCapitalizationFix(inputEl: HTMLElement) {\n  resetInput.focus();\n  inputEl.focus();\n}\n","import { useEffect, useState } from '../../../../lib/teact/teact';\n\nimport type { ApiBotCommand, ApiQuickReply } from '../../../../api/types';\nimport type { Signal } from '../../../../util/signals';\n\nimport { prepareForRegExp } from '../helpers/prepareForRegExp';\n\nimport { useThrottledResolver } from '../../../../hooks/useAsyncResolvers';\nimport useDerivedSignal from '../../../../hooks/useDerivedSignal';\nimport useFlag from '../../../../hooks/useFlag';\n\nconst RE_COMMAND = /^\\/([\\w@]{1,32})?$/i;\n\nconst THROTTLE = 300;\n\nexport default function useChatCommandTooltip(\n  isEnabled: boolean,\n  getHtml: Signal<string>,\n  botCommands?: ApiBotCommand[] | false,\n  chatBotCommands?: ApiBotCommand[],\n  quickReplies?: Record<number, ApiQuickReply>,\n) {\n  const [filteredBotCommands, setFilteredBotCommands] = useState<ApiBotCommand[] | undefined>();\n  const [filteredQuickReplies, setFilteredQuickReplies] = useState<ApiQuickReply[] | undefined>();\n  const [isManuallyClosed, markManuallyClosed, unmarkManuallyClosed] = useFlag(false);\n\n  const detectCommandThrottled = useThrottledResolver(() => {\n    const html = getHtml();\n    return isEnabled && html.startsWith('/') ? prepareForRegExp(html).match(RE_COMMAND)?.[0].trim() : undefined;\n  }, [getHtml, isEnabled], THROTTLE);\n\n  const getCommand = useDerivedSignal(\n    detectCommandThrottled, [detectCommandThrottled, getHtml], true,\n  );\n\n  useEffect(() => {\n    const command = getCommand();\n    const commands = botCommands || chatBotCommands;\n    if (!command || (!commands && !quickReplies)) {\n      setFilteredBotCommands(undefined);\n      setFilteredQuickReplies(undefined);\n      return;\n    }\n\n    const filter = command.substring(1);\n    const nextFilteredBotCommands = commands?.filter((c) => !filter || c.command.startsWith(filter));\n\n    setFilteredBotCommands(\n      nextFilteredBotCommands?.length ? nextFilteredBotCommands : undefined,\n    );\n\n    const newFilteredQuickReplies = Object.values(quickReplies || {}).filter((quickReply) => (\n      !filter || quickReply.shortcut.startsWith(filter)\n    ));\n\n    setFilteredQuickReplies(\n      newFilteredQuickReplies?.length ? newFilteredQuickReplies : undefined,\n    );\n  }, [getCommand, botCommands, chatBotCommands, quickReplies]);\n\n  useEffect(unmarkManuallyClosed, [unmarkManuallyClosed, getHtml]);\n\n  return {\n    isOpen: Boolean((filteredBotCommands?.length || filteredQuickReplies?.length) && !isManuallyClosed),\n    close: markManuallyClosed,\n    filteredBotCommands,\n    filteredQuickReplies,\n  };\n}\n","// Utility for cleaning html code from Google Docs.\n// Original source from DocsSoap:\n// https://www.npmjs.com/package/docs-soap\n\nconst GDOCS_ELEMENT_ID_REGEXP = /id=\"docs-internal-guid/i;\n\nconst GDOCS_STYLES = {\n  BOLD: '700',\n  ITALIC: 'italic',\n  UNDERLINE: 'underline',\n  STRIKETHROUGH: 'line-through',\n  SUPERSCRIPT: 'super',\n  SUBSCRIPT: 'sub',\n};\n\nconst ELEMENTS = {\n  ANCHOR: 'a',\n  BOLD: 'strong',\n  ITALIC: 'em',\n  UNDERLINE: 'u',\n  BLOCKQUOTE: 'blockquote',\n  STRIKETHROUGH: 'del',\n  SUPERSCRIPT: 'sup',\n  SUBSCRIPT: 'sub',\n};\n\nconst headers = [\n  'H1',\n  'H2',\n  'H3',\n  'H4',\n  'H5',\n  'H6',\n];\n\nfunction parseHtml(html: string): HTMLElement {\n  const parser = new DOMParser();\n  const doc = parser.parseFromString(html, 'text/html');\n\n  return doc.body;\n}\n\nfunction wrapNodeAnchor(node: Node, href: string): HTMLAnchorElement {\n  const anchor = document.createElement(ELEMENTS.ANCHOR) as HTMLAnchorElement;\n  anchor.href = href;\n  anchor.appendChild(node.cloneNode(true));\n\n  return anchor;\n}\n\nfunction wrapNodeInline(node: Node, style: string): Node {\n  const el = document.createElement(style);\n  el.appendChild(node.cloneNode(true));\n\n  return el;\n}\n\nfunction wrapNode(inner: HTMLElement, result: Node): Node {\n  let newNode = result.cloneNode(true);\n  if (!inner) {\n    return newNode;\n  }\n  if (inner.style && inner.style.fontWeight === GDOCS_STYLES.BOLD) {\n    newNode = wrapNodeInline(newNode, ELEMENTS.BOLD);\n  }\n  if (inner.style && inner.style.fontStyle === GDOCS_STYLES.ITALIC) {\n    newNode = wrapNodeInline(newNode, ELEMENTS.ITALIC);\n  }\n  if (inner.style && inner.style.textDecoration === GDOCS_STYLES.UNDERLINE) {\n    newNode = wrapNodeInline(newNode, ELEMENTS.UNDERLINE);\n  }\n  if (inner.style && inner.style.textDecoration === GDOCS_STYLES.STRIKETHROUGH) {\n    newNode = wrapNodeInline(newNode, ELEMENTS.STRIKETHROUGH);\n  }\n  if (inner.style && inner.style.verticalAlign === GDOCS_STYLES.SUPERSCRIPT) {\n    newNode = wrapNodeInline(newNode, ELEMENTS.SUPERSCRIPT);\n  }\n  if (inner.style && inner.style.verticalAlign === GDOCS_STYLES.SUBSCRIPT) {\n    newNode = wrapNodeInline(newNode, ELEMENTS.SUBSCRIPT);\n  }\n\n  return newNode;\n}\n\nfunction applyBlockStyles(dirty: Node): Node {\n  const node = dirty.cloneNode(true);\n  let newNode = document.createTextNode(node.textContent || '') as Node;\n  let styledNode = document.createTextNode('') as Node;\n  if ('style' in node.childNodes[0] && Boolean(node.childNodes[0].style)) {\n    styledNode = node.childNodes[0];\n  }\n  if (node.childNodes[0] && node.childNodes[0].nodeName === 'A') {\n    newNode = wrapNodeAnchor(newNode.cloneNode(true), (node.childNodes[0] as HTMLAnchorElement).href);\n    styledNode = node.childNodes[0].childNodes[0];\n  }\n  newNode = wrapNode(styledNode as HTMLElement, newNode);\n  return newNode;\n}\n\nfunction applyInlineStyles(dirty: Node): Node {\n  const node = dirty.cloneNode(true);\n  let newNode = document.createTextNode(node.textContent || '') as Node;\n  let styledNode = node;\n  if (node.nodeName === 'A') {\n    newNode = wrapNodeAnchor(newNode, (node as HTMLAnchorElement).href);\n    if ('style' in node.childNodes[0] && Boolean(node.childNodes[0].style)) {\n      styledNode = node.childNodes[0];\n    }\n  }\n  newNode = wrapNode(styledNode as HTMLElement, newNode);\n  return newNode;\n}\n\nfunction getCleanNode(node: Node): Node[] {\n  if (node.childNodes && (node.childNodes.length <= 1 || node.nodeName === 'OL' || node.nodeName === 'UL')) {\n    let newWrapper: Node | undefined;\n    let newNode = document.createTextNode(node.textContent || '') as Node;\n    if (node.nodeName === 'UL' || node.nodeName === 'OL' || node.nodeName === 'LI') {\n      newWrapper = document.createElement(node.nodeName);\n      newNode = document.createDocumentFragment();\n      const items = [];\n      for (let i = 0; i < node.childNodes.length; i++) {\n        items.push(...getCleanNode(node.childNodes[i]));\n      }\n      items.map((i: Node): Node => newNode.appendChild(i));\n    } else if (headers.indexOf(node.nodeName) !== -1) {\n      newWrapper = document.createElement(node.nodeName);\n      newNode = applyInlineStyles(node.childNodes[0]);\n    } else if (node.nodeName === 'P') {\n      newWrapper = document.createElement('p');\n      newNode = applyBlockStyles(node);\n    } else if (node.nodeName === 'BR') {\n      newNode = node;\n    } else {\n      newWrapper = document.createElement('span');\n      newNode = applyInlineStyles(node);\n    }\n    if (newWrapper) {\n      newWrapper.appendChild(newNode);\n      return [newWrapper];\n    }\n\n    return [node.cloneNode(true)];\n  }\n\n  if (node.childNodes) {\n    const nodes = [];\n    for (let i = 0; i < node.childNodes.length; i++) {\n      nodes.push(...getCleanNode(node.childNodes[i]));\n    }\n    return nodes;\n  }\n\n  return [node];\n}\n\nfunction filterNode(node: Node): boolean {\n  return node.nodeType !== 8; // Node.COMMENT_NODE = 8\n}\n\nfunction getCleanDocument(dirty: HTMLElement): HTMLElement {\n  const body = document.createElement('body');\n  const nodes = dirty.childNodes;\n  const filteredNodes = Array.from(nodes).filter(filterNode);\n  const cleanNodes = [];\n\n  for (const node of filteredNodes) {\n    cleanNodes.push(...getCleanNode(node));\n  }\n\n  for (let i = 0; i < cleanNodes.length; i++) {\n    body.appendChild(cleanNodes[i].cloneNode(true));\n  }\n\n  return body;\n}\n\nexport default function cleanDocsHtml(clipboardContent: string): string {\n  if (!clipboardContent.match(GDOCS_ELEMENT_ID_REGEXP)) {\n    return parseHtml(clipboardContent.replace(/(\\r\\n|\\n|\\r)/, '')).innerHTML;\n  }\n\n  return getCleanDocument(parseHtml(clipboardContent.replace(/(\\r\\n|\\n|\\r)/, ''))).innerHTML;\n}\n","import { ApiMessageEntityTypes } from '../../../../api/types';\n\nimport { DEBUG } from '../../../../config';\nimport cleanDocsHtml from '../../../../lib/cleanDocsHtml';\nimport { ENTITY_CLASS_BY_NODE_NAME } from '../../../../util/parseHtmlAsFormattedText';\n\nconst STYLE_TAG_REGEX = /<style>(.*?)<\\/style>/gs;\n\nexport function preparePastedHtml(html: string) {\n  let fragment = document.createElement('div');\n  try {\n    html = cleanDocsHtml(html);\n  } catch (err) {\n    if (DEBUG) {\n      // eslint-disable-next-line no-console\n      console.error(err);\n    }\n  }\n  fragment.innerHTML = html.replace(/\\u00a0/g, ' ').replace(STYLE_TAG_REGEX, ''); // Strip &nbsp and styles\n\n  const textContents = fragment.querySelectorAll<HTMLDivElement>('.text-content');\n  if (textContents.length) {\n    fragment = textContents[textContents.length - 1]; // Replace with the last copied message\n  }\n\n  Array.from(fragment.getElementsByTagName('*')).forEach((node) => {\n    if (!(node instanceof HTMLElement)) {\n      node.remove();\n      return;\n    }\n    node.removeAttribute('style');\n\n    // Fix newlines\n    if (node.tagName === 'BR') node.replaceWith('\\n');\n    if (node.tagName === 'P') node.appendChild(document.createTextNode('\\n'));\n    if (node.tagName === 'IMG' && !node.dataset.entityType) node.replaceWith(node.getAttribute('alt') || '');\n    // We do not intercept copy logic, so we remove some nodes here\n    if (node.dataset.ignoreOnPaste) node.remove();\n\n    if (ENTITY_CLASS_BY_NODE_NAME[node.tagName]) {\n      node.setAttribute('data-entity-type', ENTITY_CLASS_BY_NODE_NAME[node.tagName]);\n    }\n    // Strip non-entity tags\n    if (!node.dataset.entityType && node.textContent === node.innerText) node.replaceWith(node.textContent);\n    // Append entity parameters for parsing\n    if (node.dataset.alt) node.setAttribute('alt', node.dataset.alt);\n    switch (node.dataset.entityType) {\n      case ApiMessageEntityTypes.MentionName:\n        node.replaceWith(node.textContent || '');\n        break;\n      case ApiMessageEntityTypes.CustomEmoji:\n        node.textContent = node.dataset.alt || '';\n        break;\n    }\n  });\n\n  return fragment.innerHTML.trimEnd();\n}\n\nexport function escapeHtml(html: string) {\n  const fragment = document.createElement('div');\n  const text = document.createTextNode(html);\n  fragment.appendChild(text);\n  return fragment.innerHTML;\n}\n","import type { StateHookSetter } from '../../../../lib/teact/teact';\nimport { useEffect } from '../../../../lib/teact/teact';\nimport { getActions } from '../../../../global';\n\nimport type { ApiAttachment, ApiFormattedText, ApiMessage } from '../../../../api/types';\n\nimport {\n  EDITABLE_INPUT_ID, EDITABLE_INPUT_MODAL_ID, EDITABLE_STORY_INPUT_ID,\n} from '../../../../config';\nimport { canReplaceMessageMedia, isUploadingFileSticker } from '../../../../global/helpers';\nimport { containsCustomEmoji, stripCustomEmoji } from '../../../../global/helpers/symbols';\nimport parseHtmlAsFormattedText from '../../../../util/parseHtmlAsFormattedText';\nimport buildAttachment from '../helpers/buildAttachment';\nimport { preparePastedHtml } from '../helpers/cleanHtml';\nimport getFilesFromDataTransferItems from '../helpers/getFilesFromDataTransferItems';\n\nimport useOldLang from '../../../../hooks/useOldLang';\n\nconst MAX_MESSAGE_LENGTH = 4096;\n\nconst TYPE_HTML = 'text/html';\nconst DOCUMENT_TYPE_WORD = 'urn:schemas-microsoft-com:office:word';\nconst NAMESPACE_PREFIX_WORD = 'xmlns:w';\n\nconst useClipboardPaste = (\n  isActive: boolean,\n  insertTextAndUpdateCursor: (text: ApiFormattedText, inputId?: string) => void,\n  setAttachments: StateHookSetter<ApiAttachment[]>,\n  setNextText: StateHookSetter<ApiFormattedText | undefined>,\n  editedMessage: ApiMessage | undefined,\n  shouldStripCustomEmoji?: boolean,\n  onCustomEmojiStripped?: VoidFunction,\n) => {\n  const { showNotification } = getActions();\n  const lang = useOldLang();\n\n  useEffect(() => {\n    if (!isActive) {\n      return undefined;\n    }\n\n    async function handlePaste(e: ClipboardEvent) {\n      if (!e.clipboardData) {\n        return;\n      }\n\n      const input = document.activeElement;\n      if (input && ![EDITABLE_INPUT_ID, EDITABLE_INPUT_MODAL_ID, EDITABLE_STORY_INPUT_ID].includes(input.id)) {\n        return;\n      }\n\n      const pastedText = e.clipboardData.getData('text').substring(0, MAX_MESSAGE_LENGTH);\n      const html = e.clipboardData.getData('text/html');\n\n      let pastedFormattedText = html ? parseHtmlAsFormattedText(\n        preparePastedHtml(html), undefined, true,\n      ) : undefined;\n\n      if (pastedFormattedText && containsCustomEmoji(pastedFormattedText) && shouldStripCustomEmoji) {\n        pastedFormattedText = stripCustomEmoji(pastedFormattedText);\n        onCustomEmojiStripped?.();\n      }\n\n      const { items } = e.clipboardData;\n      let files: File[] | undefined = [];\n\n      e.preventDefault();\n      if (items.length > 0) {\n        files = await getFilesFromDataTransferItems(items);\n        if (editedMessage) {\n          files = files?.slice(0, 1);\n        }\n      }\n\n      if (!files?.length && !pastedText) {\n        return;\n      }\n\n      const textToPaste = pastedFormattedText?.entities?.length ? pastedFormattedText : { text: pastedText };\n\n      let isWordDocument = false;\n      try {\n        const parser = new DOMParser();\n        const parsedDocument = parser.parseFromString(html, TYPE_HTML);\n        isWordDocument = parsedDocument.documentElement\n          .getAttribute(NAMESPACE_PREFIX_WORD) === DOCUMENT_TYPE_WORD;\n      } catch (err: any) {\n        // Ignore\n      }\n\n      const hasText = textToPaste && textToPaste.text;\n      let shouldSetAttachments = files?.length && !isWordDocument;\n\n      const newAttachments = files ? await Promise.all(files.map((file) => buildAttachment(file.name, file))) : [];\n      const canReplace = (editedMessage && newAttachments?.length\n        && canReplaceMessageMedia(editedMessage, newAttachments[0])) || Boolean(hasText);\n      const isUploadingDocumentSticker = isUploadingFileSticker(newAttachments[0]);\n      const isInAlbum = editedMessage && editedMessage?.groupedId;\n\n      if (editedMessage && isUploadingDocumentSticker) {\n        showNotification({ message: lang(isInAlbum ? 'lng_edit_media_album_error' : 'lng_edit_media_invalid_file') });\n        return;\n      }\n\n      if (isInAlbum) {\n        shouldSetAttachments = canReplace;\n        if (!shouldSetAttachments) {\n          showNotification({ message: lang('lng_edit_media_album_error') });\n          return;\n        }\n      }\n\n      if (shouldSetAttachments) {\n        setAttachments(editedMessage ? newAttachments : (attachments) => attachments.concat(newAttachments));\n      }\n\n      if (hasText) {\n        if (shouldSetAttachments) {\n          setNextText(textToPaste);\n        } else {\n          insertTextAndUpdateCursor(textToPaste, input?.id);\n        }\n      }\n    }\n\n    document.addEventListener('paste', handlePaste, false);\n\n    return () => {\n      document.removeEventListener('paste', handlePaste, false);\n    };\n  }, [\n    insertTextAndUpdateCursor, editedMessage, setAttachments, isActive, shouldStripCustomEmoji,\n    onCustomEmojiStripped, setNextText, lang,\n  ]);\n};\n\nexport default useClipboardPaste;\n","import { useEffect, useLayoutEffect, useRef } from '../../../../lib/teact/teact';\nimport { getActions } from '../../../../global';\n\nimport type { ApiMessage } from '../../../../api/types';\nimport type { ApiDraft } from '../../../../global/types';\nimport type { ThreadId } from '../../../../types';\nimport type { Signal } from '../../../../util/signals';\nimport { ApiMessageEntityTypes } from '../../../../api/types';\n\nimport { DRAFT_DEBOUNCE } from '../../../../config';\nimport {\n  requestMeasure,\n} from '../../../../lib/fasterdom/fasterdom';\nimport parseHtmlAsFormattedText from '../../../../util/parseHtmlAsFormattedText';\nimport { getTextWithEntitiesAsHtml } from '../../../common/helpers/renderTextWithEntities';\n\nimport useLastCallback from '../../../../hooks/useLastCallback';\nimport useLayoutEffectWithPrevDeps from '../../../../hooks/useLayoutEffectWithPrevDeps';\nimport useRunDebounced from '../../../../hooks/useRunDebounced';\nimport { useStateRef } from '../../../../hooks/useStateRef';\nimport useBackgroundMode from '../../../../hooks/window/useBackgroundMode';\nimport useBeforeUnload from '../../../../hooks/window/useBeforeUnload';\n\nlet isFrozen = false;\n\nfunction freeze() {\n  isFrozen = true;\n\n  requestMeasure(() => {\n    isFrozen = false;\n  });\n}\n\nconst useDraft = ({\n  draft,\n  chatId,\n  threadId,\n  getHtml,\n  setHtml,\n  editedMessage,\n  isDisabled,\n} : {\n  draft?: ApiDraft;\n  chatId: string;\n  threadId: ThreadId;\n  getHtml: Signal<string>;\n  setHtml: (html: string) => void;\n  editedMessage?: ApiMessage;\n  isDisabled?: boolean;\n}) => {\n  const { saveDraft, clearDraft, loadCustomEmojis } = getActions();\n\n  const isTouchedRef = useRef(false);\n\n  useEffect(() => {\n    const html = getHtml();\n    const isLocalDraft = draft?.isLocal !== undefined;\n    if (getTextWithEntitiesAsHtml(draft?.text) === html && !isLocalDraft) {\n      isTouchedRef.current = false;\n    } else {\n      isTouchedRef.current = true;\n    }\n  }, [draft, getHtml]);\n  useEffect(() => {\n    isTouchedRef.current = false;\n  }, [chatId, threadId]);\n\n  const isEditing = Boolean(editedMessage);\n\n  const updateDraft = useLastCallback((prevState: { chatId?: string; threadId?: ThreadId } = {}) => {\n    if (isDisabled || isEditing || !isTouchedRef.current) return;\n\n    const html = getHtml();\n\n    if (html) {\n      requestMeasure(() => {\n        saveDraft({\n          chatId: prevState.chatId ?? chatId,\n          threadId: prevState.threadId ?? threadId,\n          text: parseHtmlAsFormattedText(html),\n        });\n      });\n    } else {\n      clearDraft({\n        chatId: prevState.chatId ?? chatId,\n        threadId: prevState.threadId ?? threadId,\n        shouldKeepReply: true,\n      });\n    }\n  });\n\n  const runDebouncedForSaveDraft = useRunDebounced(DRAFT_DEBOUNCE, true, undefined, [chatId, threadId]);\n\n  // Restore draft on chat change\n  useLayoutEffectWithPrevDeps(([prevChatId, prevThreadId, prevDraft]) => {\n    if (isDisabled) {\n      return;\n    }\n    const isTouched = isTouchedRef.current;\n\n    if (chatId === prevChatId && threadId === prevThreadId) {\n      if (isTouched && !draft) return; // Prevent reset from other client if we have local edits\n      if (!draft && prevDraft) {\n        setHtml('');\n      }\n\n      if (isTouched) return;\n    }\n\n    if (editedMessage || !draft) {\n      return;\n    }\n\n    setHtml(getTextWithEntitiesAsHtml(draft.text));\n\n    const customEmojiIds = draft.text?.entities\n      ?.map((entity) => entity.type === ApiMessageEntityTypes.CustomEmoji && entity.documentId)\n      .filter(Boolean) || [];\n    if (customEmojiIds.length) loadCustomEmojis({ ids: customEmojiIds });\n  }, [chatId, threadId, draft, getHtml, setHtml, editedMessage, isDisabled]);\n\n  // Save draft on chat change. Should be layout effect to read correct html on cleanup\n  useLayoutEffect(() => {\n    if (isDisabled) {\n      return undefined;\n    }\n\n    return () => {\n      if (!isEditing) {\n        updateDraft({ chatId, threadId });\n      }\n\n      freeze();\n    };\n  }, [chatId, threadId, isEditing, updateDraft, isDisabled]);\n\n  const chatIdRef = useStateRef(chatId);\n  const threadIdRef = useStateRef(threadId);\n  useEffect(() => {\n    if (isDisabled || isFrozen) {\n      return;\n    }\n\n    if (!getHtml()) {\n      updateDraft();\n\n      return;\n    }\n\n    const scopedСhatId = chatIdRef.current;\n    const scopedThreadId = threadIdRef.current;\n\n    runDebouncedForSaveDraft(() => {\n      if (chatIdRef.current === scopedСhatId && threadIdRef.current === scopedThreadId) {\n        updateDraft();\n      }\n    });\n  }, [chatIdRef, getHtml, isDisabled, runDebouncedForSaveDraft, threadIdRef, updateDraft]);\n\n  useBackgroundMode(updateDraft);\n  useBeforeUnload(updateDraft);\n};\n\nexport default useDraft;\n","import { useEffect, useState } from '../../../../lib/teact/teact';\nimport { getActions } from '../../../../global';\n\nimport type { ApiFormattedText, ApiMessage } from '../../../../api/types';\nimport type { ApiDraft, MessageListType } from '../../../../global/types';\nimport type { ThreadId } from '../../../../types';\nimport type { Signal } from '../../../../util/signals';\nimport { ApiMessageEntityTypes } from '../../../../api/types';\n\nimport { EDITABLE_INPUT_CSS_SELECTOR } from '../../../../config';\nimport { requestMeasure, requestNextMutation } from '../../../../lib/fasterdom/fasterdom';\nimport { hasMessageMedia } from '../../../../global/helpers';\nimport focusEditableElement from '../../../../util/focusEditableElement';\nimport parseHtmlAsFormattedText from '../../../../util/parseHtmlAsFormattedText';\nimport { getTextWithEntitiesAsHtml } from '../../../common/helpers/renderTextWithEntities';\n\nimport { useDebouncedResolver } from '../../../../hooks/useAsyncResolvers';\nimport useDerivedSignal from '../../../../hooks/useDerivedSignal';\nimport useEffectWithPrevDeps from '../../../../hooks/useEffectWithPrevDeps';\nimport useLastCallback from '../../../../hooks/useLastCallback';\nimport useBackgroundMode from '../../../../hooks/window/useBackgroundMode';\nimport useBeforeUnload from '../../../../hooks/window/useBeforeUnload';\n\nconst URL_ENTITIES = new Set<string>([ApiMessageEntityTypes.TextUrl, ApiMessageEntityTypes.Url]);\nconst DEBOUNCE_MS = 300;\n\nconst useEditing = (\n  getHtml: Signal<string>,\n  setHtml: (html: string) => void,\n  editedMessage: ApiMessage | undefined,\n  resetComposer: (shouldPreserveInput?: boolean) => void,\n  chatId: string,\n  threadId: ThreadId,\n  type: MessageListType,\n  draft?: ApiDraft,\n  editingDraft?: ApiFormattedText,\n): [VoidFunction, VoidFunction, boolean] => {\n  const {\n    editMessage, setEditingDraft, toggleMessageWebPage, openDeleteMessageModal,\n  } = getActions();\n  const [shouldForceShowEditing, setShouldForceShowEditing] = useState(false);\n\n  const replyingToId = draft?.replyInfo?.replyToMsgId;\n\n  useEffectWithPrevDeps(([prevEditedMessage, prevReplyingToId]) => {\n    if (!editedMessage) {\n      return;\n    }\n\n    if (replyingToId && prevReplyingToId !== replyingToId) {\n      setHtml('');\n      setShouldForceShowEditing(false);\n      return;\n    }\n\n    if (prevEditedMessage?.id === editedMessage.id && replyingToId === prevReplyingToId) {\n      return;\n    }\n\n    const text = !prevEditedMessage && editingDraft?.text.length ? editingDraft : editedMessage.content.text;\n    const html = getTextWithEntitiesAsHtml(text);\n\n    setHtml(html);\n    setShouldForceShowEditing(true);\n\n    requestNextMutation(() => {\n      const messageInput = document.querySelector<HTMLDivElement>(EDITABLE_INPUT_CSS_SELECTOR);\n      if (messageInput) {\n        focusEditableElement(messageInput, true);\n      }\n    });\n  }, [editedMessage, replyingToId, editingDraft, setHtml]);\n\n  useEffect(() => {\n    if (!editedMessage) {\n      return;\n    }\n\n    const shouldSetNoWebPage = !('webPage' in editedMessage.content)\n      && editedMessage.content.text?.entities?.some((entity) => URL_ENTITIES.has(entity.type));\n\n    toggleMessageWebPage({\n      chatId,\n      threadId,\n      noWebPage: shouldSetNoWebPage,\n    });\n  }, [chatId, threadId, editedMessage]);\n\n  useEffect(() => {\n    if (!editedMessage) return undefined;\n    return () => {\n      const edited = parseHtmlAsFormattedText(getHtml());\n      const update = edited.text.length ? edited : undefined;\n\n      setEditingDraft({\n        chatId, threadId, type, text: update,\n      });\n    };\n  }, [chatId, editedMessage, getHtml, setEditingDraft, threadId, type]);\n\n  const detectLinkDebounced = useDebouncedResolver(() => {\n    if (!editedMessage) return false;\n\n    const edited = parseHtmlAsFormattedText(getHtml());\n    return !('webPage' in editedMessage.content)\n      && editedMessage.content.text?.entities?.some((entity) => URL_ENTITIES.has(entity.type))\n      && !(edited.entities?.some((entity) => URL_ENTITIES.has(entity.type)));\n  }, [editedMessage, getHtml], DEBOUNCE_MS, true);\n\n  const getShouldResetNoWebPageDebounced = useDerivedSignal(detectLinkDebounced, [detectLinkDebounced, getHtml], true);\n\n  useEffectWithPrevDeps(([prevEditedMessage]) => {\n    if (!editedMessage || prevEditedMessage?.id !== editedMessage.id) {\n      return;\n    }\n\n    if (getShouldResetNoWebPageDebounced()) {\n      toggleMessageWebPage({\n        chatId,\n        threadId,\n        noWebPage: false,\n      });\n    }\n  }, [editedMessage, chatId, getHtml, threadId, getShouldResetNoWebPageDebounced]);\n\n  const restoreNewDraftAfterEditing = useLastCallback(() => {\n    if (!draft) return;\n\n    // Run one frame after editing draft reset\n    requestMeasure(() => {\n      setHtml(getTextWithEntitiesAsHtml(draft.text));\n\n      // Wait one more frame until new HTML is rendered\n      requestNextMutation(() => {\n        const messageInput = document.querySelector<HTMLDivElement>(EDITABLE_INPUT_CSS_SELECTOR);\n        if (messageInput) {\n          focusEditableElement(messageInput, true);\n        }\n      });\n    });\n  });\n\n  const handleEditCancel = useLastCallback(() => {\n    resetComposer();\n    restoreNewDraftAfterEditing();\n  });\n\n  const handleEditComplete = useLastCallback(() => {\n    const { text, entities } = parseHtmlAsFormattedText(getHtml());\n\n    if (!editedMessage) {\n      return;\n    }\n\n    if (!text && !hasMessageMedia(editedMessage)) {\n      openDeleteMessageModal({ isSchedule: type === 'scheduled', message: editedMessage });\n      return;\n    }\n\n    editMessage({\n      messageList: { chatId, threadId, type },\n      text,\n      entities,\n    });\n\n    resetComposer();\n    restoreNewDraftAfterEditing();\n  });\n\n  const handleBlur = useLastCallback(() => {\n    if (!editedMessage) return;\n    const edited = parseHtmlAsFormattedText(getHtml());\n    const update = edited.text.length ? edited : undefined;\n\n    setEditingDraft({\n      chatId, threadId, type, text: update,\n    });\n  });\n\n  useBackgroundMode(handleBlur);\n  useBeforeUnload(handleBlur);\n\n  return [handleEditComplete, handleEditCancel, shouldForceShowEditing];\n};\n\nexport default useEditing;\n","import { useEffect } from '../../../../lib/teact/teact';\nimport { getActions } from '../../../../global';\n\nimport type { InlineBotSettings } from '../../../../types';\nimport type { Signal } from '../../../../util/signals';\n\nimport memoized from '../../../../util/memoized';\n\nimport { useThrottledResolver } from '../../../../hooks/useAsyncResolvers';\nimport useDerivedState from '../../../../hooks/useDerivedState';\nimport useFlag from '../../../../hooks/useFlag';\nimport useLastCallback from '../../../../hooks/useLastCallback';\nimport useSyncEffect from '../../../../hooks/useSyncEffect';\n\nconst THROTTLE = 300;\nconst INLINE_BOT_QUERY_REGEXP = /^@([a-z0-9_]{1,32})[\\u00A0\\u0020]+(.*)/is;\nconst HAS_NEW_LINE = /^@([a-z0-9_]{1,32})[\\u00A0\\u0020]+\\n{2,}/i;\nconst MEMO_NO_RESULT = {\n  username: '',\n  query: '',\n  canShowHelp: false,\n  usernameLowered: '',\n};\n\nconst tempEl = document.createElement('div');\n\nexport default function useInlineBotTooltip(\n  isEnabled: boolean,\n  chatId: string,\n  getHtml: Signal<string>,\n  inlineBots?: Record<string, false | InlineBotSettings>,\n) {\n  const { queryInlineBot, resetInlineBot, resetAllInlineBots } = getActions();\n\n  const [isManuallyClosed, markManuallyClosed, unmarkManuallyClosed] = useFlag(false);\n\n  const extractBotQueryThrottled = useThrottledResolver(() => {\n    const html = getHtml();\n    return isEnabled && html.startsWith('@') ? parseBotQuery(html) : MEMO_NO_RESULT;\n  }, [getHtml, isEnabled], THROTTLE);\n  const {\n    username, query, canShowHelp, usernameLowered,\n  } = useDerivedState(extractBotQueryThrottled, [extractBotQueryThrottled, getHtml], true);\n\n  useSyncEffect(([prevUsername]) => {\n    if (prevUsername) {\n      resetInlineBot({ username: prevUsername });\n    }\n  }, [username, resetInlineBot]);\n\n  useEffect(() => {\n    if (!usernameLowered) return;\n\n    queryInlineBot({\n      chatId, username: usernameLowered, query,\n    });\n  }, [chatId, query, queryInlineBot, usernameLowered]);\n\n  useEffect(unmarkManuallyClosed, [unmarkManuallyClosed, getHtml]);\n\n  const {\n    id: botId,\n    switchPm,\n    switchWebview,\n    offset,\n    results,\n    isGallery,\n    help,\n  } = (usernameLowered && inlineBots?.[usernameLowered]) || {};\n\n  const isOpen = Boolean((results?.length || switchPm) && !isManuallyClosed);\n\n  useEffect(() => {\n    if (!isOpen && !username) {\n      resetAllInlineBots();\n    }\n  }, [isOpen, resetAllInlineBots, username]);\n\n  const loadMore = useLastCallback(() => {\n    if (!usernameLowered) return;\n\n    queryInlineBot({\n      chatId, username: usernameLowered, query, offset,\n    });\n  });\n\n  return {\n    isOpen,\n    botId,\n    isGallery,\n    switchPm,\n    switchWebview,\n    results,\n    closeTooltip: markManuallyClosed,\n    help: canShowHelp && help ? `@${username} ${help}` : undefined,\n    loadMore,\n  };\n}\n\nconst buildQueryStateMemo = memoized((username: string, query: string, canShowHelp: boolean) => ({\n  username,\n  query,\n  canShowHelp,\n  usernameLowered: username.toLowerCase(),\n}));\n\nfunction parseBotQuery(html: string) {\n  if (!html.startsWith('@')) {\n    return MEMO_NO_RESULT;\n  }\n\n  const text = getPlainText(html);\n  const result = text.match(INLINE_BOT_QUERY_REGEXP);\n  if (!result) {\n    return MEMO_NO_RESULT;\n  }\n\n  return buildQueryStateMemo(result[1], result[2], result[2] === '' && !text.match(HAS_NEW_LINE));\n}\n\nfunction getPlainText(html: string) {\n  tempEl.innerHTML = html.replace(/<br>/g, '\\n');\n\n  tempEl.querySelectorAll<HTMLElement>('[alt]').forEach((el) => {\n    if (!el.innerText) {\n      el.innerText = el.getAttribute('alt')!;\n    }\n  });\n\n  return tempEl.innerText;\n}\n","import { useEffect } from '../../../../lib/teact/teact';\nimport { getActions } from '../../../../global';\n\nimport type { ApiSticker } from '../../../../api/types';\nimport type { Signal } from '../../../../util/signals';\n\nimport { EMOJI_IMG_REGEX } from '../../../../config';\nimport twemojiRegex from '../../../../lib/twemojiRegex';\nimport parseEmojiOnlyString from '../../../../util/emoji/parseEmojiOnlyString';\nimport { IS_EMOJI_SUPPORTED } from '../../../../util/windowEnvironment';\nimport { prepareForRegExp } from '../helpers/prepareForRegExp';\n\nimport useDerivedSignal from '../../../../hooks/useDerivedSignal';\nimport useDerivedState from '../../../../hooks/useDerivedState';\nimport useFlag from '../../../../hooks/useFlag';\n\nconst MAX_LENGTH = 8;\nconst STARTS_ENDS_ON_EMOJI_IMG_REGEX = new RegExp(`^${EMOJI_IMG_REGEX.source}$`, 'g');\n\nexport default function useStickerTooltip(\n  isEnabled: boolean,\n  getHtml: Signal<string>,\n  stickers?: ApiSticker[],\n) {\n  const { loadStickersForEmoji, clearStickersForEmoji } = getActions();\n\n  const [isManuallyClosed, markManuallyClosed, unmarkManuallyClosed] = useFlag(false);\n\n  const getSingleEmoji = useDerivedSignal(() => {\n    const html = getHtml();\n    if (!isEnabled || !html || (IS_EMOJI_SUPPORTED && html.length > MAX_LENGTH)) return undefined;\n\n    const hasEmoji = html.match(IS_EMOJI_SUPPORTED ? twemojiRegex : EMOJI_IMG_REGEX);\n    if (!hasEmoji) return undefined;\n\n    const cleanHtml = prepareForRegExp(html);\n    const isSingleEmoji = cleanHtml && (\n      (IS_EMOJI_SUPPORTED && parseEmojiOnlyString(cleanHtml) === 1)\n      || (!IS_EMOJI_SUPPORTED && Boolean(html.match(STARTS_ENDS_ON_EMOJI_IMG_REGEX)))\n    );\n\n    return isSingleEmoji\n      ? (IS_EMOJI_SUPPORTED ? cleanHtml : cleanHtml.match(/alt=\"(.+)\"/)?.[1]!)\n      : undefined;\n  }, [getHtml, isEnabled]);\n\n  const isActive = useDerivedState(() => Boolean(getSingleEmoji()), [getSingleEmoji]);\n  const hasStickers = Boolean(stickers?.length);\n\n  useEffect(() => {\n    if (!isEnabled || !isActive) return;\n\n    const singleEmoji = getSingleEmoji();\n    if (singleEmoji) {\n      if (!hasStickers) {\n        loadStickersForEmoji({ emoji: singleEmoji });\n      }\n    } else {\n      clearStickersForEmoji();\n    }\n  }, [isEnabled, isActive, getSingleEmoji, hasStickers, loadStickersForEmoji, clearStickersForEmoji]);\n\n  useEffect(unmarkManuallyClosed, [unmarkManuallyClosed, getHtml]);\n\n  return {\n    isStickerTooltipOpen: Boolean(isActive && hasStickers && !isManuallyClosed),\n    closeStickerTooltip: markManuallyClosed,\n  };\n}\n","import type { IOpusRecorder } from 'opus-recorder';\n\nimport { requestMeasure } from '../lib/fasterdom/fasterdom';\n\nexport type Result = { blob: Blob; duration: number; waveform: number[] };\n\nconst encoderPath = new URL('opus-recorder/dist/encoderWorker.min', import.meta.url).href;\nconst MIN_RECORDING_TIME = 1000;\nconst POLYFILL_OPTIONS = { encoderPath, reuseWorker: true };\nconst BLOB_PARAMS = { type: 'audio/ogg' };\nconst FFT_SIZE = 64;\nconst MIN_VOLUME = 0.1;\n\nlet opusRecorderPromise: Promise<{ default: IOpusRecorder }>;\nlet OpusRecorder: IOpusRecorder;\nlet mediaRecorder: IOpusRecorder;\n\nexport async function init() {\n  if (!opusRecorderPromise) {\n    opusRecorderPromise = import('opus-recorder');\n    OpusRecorder = (await opusRecorderPromise).default;\n    mediaRecorder = new OpusRecorder(POLYFILL_OPTIONS);\n  }\n\n  return opusRecorderPromise;\n}\n\nexport async function start(analyzerCallback: Function) {\n  await startMediaRecorder();\n\n  const startedAt = Date.now();\n  let pausedAt: number;\n  const chunks: Uint8Array[] = [];\n  const waveform: number[] = [];\n\n  mediaRecorder.ondataavailable = (typedArray) => {\n    chunks.push(typedArray);\n  };\n\n  const releaseAnalyzer = subscribeToAnalyzer(mediaRecorder, (volume: number) => {\n    waveform.push(volume * 255);\n    analyzerCallback(volume);\n  });\n\n  return {\n    stop: () => new Promise<Result>((resolve, reject) => {\n      mediaRecorder.onstop = () => {\n        resolve({\n          blob: new Blob(chunks, BLOB_PARAMS),\n          duration: Math.round(((pausedAt || Date.now()) - startedAt) / 1000),\n          waveform,\n        });\n      };\n      mediaRecorder.onerror = reject;\n\n      const delayStop = Math.max(0, startedAt + MIN_RECORDING_TIME - Date.now());\n      setTimeout(() => {\n        mediaRecorder.stop();\n        releaseAnalyzer();\n      }, delayStop);\n    }),\n    pause: () => {\n      const delayStop = Math.max(0, startedAt + MIN_RECORDING_TIME - Date.now());\n      setTimeout(() => {\n        mediaRecorder.pause();\n        pausedAt = Date.now();\n        releaseAnalyzer();\n      }, delayStop);\n    },\n  };\n}\n\nasync function startMediaRecorder() {\n  await init();\n  await mediaRecorder.start();\n}\n\nfunction subscribeToAnalyzer(recorder: IOpusRecorder, cb: Function) {\n  const source = recorder.sourceNode;\n  const analyser = source.context.createAnalyser();\n  analyser.fftSize = FFT_SIZE;\n  source.connect(analyser);\n\n  const dataLength = analyser.frequencyBinCount;\n  const dataArray = new Uint8Array(dataLength);\n  let isDestroyed = false;\n\n  function tick() {\n    if (isDestroyed) {\n      return;\n    }\n\n    analyser.getByteFrequencyData(dataArray);\n\n    const sum = dataArray.reduce((acc, current) => acc + current, 0);\n    const mean = (sum / dataLength);\n    const volume = mean / 255;\n\n    cb(volume < MIN_VOLUME ? 0 : volume);\n\n    requestMeasure(tick);\n  }\n\n  tick();\n\n  return () => {\n    isDestroyed = true;\n  };\n}\n","import type { FC } from '../../../lib/teact/teact';\nimport React from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './AttachmentModal';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst AttachmentModalAsync: FC<OwnProps> = (props) => {\n  const { attachments } = props;\n  const AttachmentModal = useModuleLoader(Bundles.Extra, 'AttachmentModal', !attachments.length);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return AttachmentModal ? <AttachmentModal {...props} /> : undefined;\n};\n\nexport default AttachmentModalAsync;\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect,\n  useMemo,\n} from '../../../lib/teact/teact';\n\nimport type { ApiAttachMenuPeerType, ApiMessage } from '../../../api/types';\nimport type { GlobalState } from '../../../global/types';\nimport type { ISettings, ThreadId } from '../../../types';\n\nimport {\n  CONTENT_TYPES_WITH_PREVIEW, DEBUG_LOG_FILENAME, SUPPORTED_AUDIO_CONTENT_TYPES,\n  SUPPORTED_PHOTO_CONTENT_TYPES,\n  SUPPORTED_VIDEO_CONTENT_TYPES,\n} from '../../../config';\nimport {\n  getMessageAudio, getMessageDocument,\n  getMessagePhoto,\n  getMessageVideo, getMessageVoice,\n  getMessageWebPagePhoto,\n  getMessageWebPageVideo,\n} from '../../../global/helpers';\nimport { getDebugLogs } from '../../../util/debugConsole';\nimport { validateFiles } from '../../../util/files';\nimport { openSystemFilesDialog } from '../../../util/systemFilesDialog';\nimport { IS_TOUCH_ENV } from '../../../util/windowEnvironment';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMouseInside from '../../../hooks/useMouseInside';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Icon from '../../common/icons/Icon';\nimport Menu from '../../ui/Menu';\nimport MenuItem from '../../ui/MenuItem';\nimport ResponsiveHoverButton from '../../ui/ResponsiveHoverButton';\nimport AttachBotItem from './AttachBotItem';\n\nimport './AttachMenu.scss';\n\nexport type OwnProps = {\n  chatId: string;\n  threadId?: ThreadId;\n  isButtonVisible: boolean;\n  canAttachMedia: boolean;\n  canAttachPolls: boolean;\n  canSendPhotos: boolean;\n  canSendVideos: boolean;\n  canSendDocuments: boolean;\n  canSendAudios: boolean;\n  isScheduled?: boolean;\n  attachBots?: GlobalState['attachMenu']['bots'];\n  peerType?: ApiAttachMenuPeerType;\n  shouldCollectDebugLogs?: boolean;\n  theme: ISettings['theme'];\n  onFileSelect: (files: File[], shouldSuggestCompression?: boolean) => void;\n  onPollCreate: NoneToVoidFunction;\n  onMenuOpen: NoneToVoidFunction;\n  onMenuClose: NoneToVoidFunction;\n  hasReplaceableMedia?: boolean;\n  editingMessage?: ApiMessage;\n};\n\nconst AttachMenu: FC<OwnProps> = ({\n  chatId,\n  threadId,\n  isButtonVisible,\n  canAttachMedia,\n  canAttachPolls,\n  canSendPhotos,\n  canSendVideos,\n  canSendDocuments,\n  canSendAudios,\n  attachBots,\n  peerType,\n  isScheduled,\n  theme,\n  shouldCollectDebugLogs,\n  onFileSelect,\n  onMenuOpen,\n  onMenuClose,\n  onPollCreate,\n  hasReplaceableMedia,\n  editingMessage,\n}) => {\n  const [isAttachMenuOpen, openAttachMenu, closeAttachMenu] = useFlag();\n  const [handleMouseEnter, handleMouseLeave, markMouseInside] = useMouseInside(isAttachMenuOpen, closeAttachMenu);\n\n  const canSendVideoAndPhoto = canSendPhotos && canSendVideos;\n  const canSendVideoOrPhoto = canSendPhotos || canSendVideos;\n\n  const [isAttachmentBotMenuOpen, markAttachmentBotMenuOpen, unmarkAttachmentBotMenuOpen] = useFlag();\n  const isMenuOpen = isAttachMenuOpen || isAttachmentBotMenuOpen;\n\n  const isPhotoOrVideo = editingMessage && editingMessage?.groupedId\n    && Boolean(getMessagePhoto(editingMessage) || getMessageWebPagePhoto(editingMessage)\n      || Boolean(getMessageVideo(editingMessage) || getMessageWebPageVideo(editingMessage)));\n  const isFile = editingMessage && editingMessage?.groupedId && Boolean(getMessageAudio(editingMessage)\n    || getMessageVoice(editingMessage) || getMessageDocument(editingMessage));\n\n  useEffect(() => {\n    if (isAttachMenuOpen) {\n      markMouseInside();\n    }\n  }, [isAttachMenuOpen, markMouseInside]);\n\n  useEffect(() => {\n    if (isMenuOpen) {\n      onMenuOpen();\n    } else {\n      onMenuClose();\n    }\n  }, [isMenuOpen, onMenuClose, onMenuOpen]);\n\n  const handleToggleAttachMenu = useLastCallback(() => {\n    if (isAttachMenuOpen) {\n      closeAttachMenu();\n    } else {\n      openAttachMenu();\n    }\n  });\n\n  const handleFileSelect = useLastCallback((e: Event, shouldSuggestCompression?: boolean) => {\n    const { files } = e.target as HTMLInputElement;\n    const validatedFiles = validateFiles(files);\n\n    if (validatedFiles?.length) {\n      onFileSelect(validatedFiles, shouldSuggestCompression);\n    }\n  });\n\n  const handleQuickSelect = useLastCallback(() => {\n    openSystemFilesDialog(\n      Array.from(canSendVideoAndPhoto ? CONTENT_TYPES_WITH_PREVIEW : (\n        canSendPhotos ? SUPPORTED_PHOTO_CONTENT_TYPES : SUPPORTED_VIDEO_CONTENT_TYPES\n      )).join(','),\n      (e) => handleFileSelect(e, true),\n    );\n  });\n\n  const handleDocumentSelect = useLastCallback(() => {\n    openSystemFilesDialog(!canSendDocuments && canSendAudios\n      ? Array.from(SUPPORTED_AUDIO_CONTENT_TYPES).join(',') : (\n        '*'\n      ), (e) => handleFileSelect(e, false));\n  });\n\n  const handleSendLogs = useLastCallback(() => {\n    const file = new File([getDebugLogs()], DEBUG_LOG_FILENAME, { type: 'text/plain' });\n    onFileSelect([file]);\n  });\n\n  const bots = useMemo(() => {\n    return attachBots\n      ? Object.values(attachBots).filter((bot) => {\n        if (!peerType || !bot.isForAttachMenu) return false;\n        if (peerType === 'bots' && bot.id === chatId && bot.attachMenuPeerTypes.includes('self')) {\n          return true;\n        }\n        return bot.attachMenuPeerTypes!.includes(peerType);\n      })\n      : undefined;\n  }, [attachBots, chatId, peerType]);\n\n  const lang = useOldLang();\n\n  if (!isButtonVisible) {\n    return undefined;\n  }\n\n  return (\n    <div className=\"AttachMenu\">\n      {\n        editingMessage && hasReplaceableMedia ? (\n          <ResponsiveHoverButton\n            id=\"replace-menu-button\"\n            className={isAttachMenuOpen ? 'AttachMenu--button activated' : 'AttachMenu--button'}\n            round\n            color=\"translucent\"\n            onActivate={handleToggleAttachMenu}\n            ariaLabel=\"Replace an attachment\"\n            ariaControls=\"replace-menu-controls\"\n            hasPopup\n          >\n            <Icon name=\"replace\" />\n          </ResponsiveHoverButton>\n        ) : (\n          <ResponsiveHoverButton\n            id=\"attach-menu-button\"\n            disabled={Boolean(editingMessage)}\n            className={isAttachMenuOpen ? 'AttachMenu--button activated' : 'AttachMenu--button'}\n            round\n            color=\"translucent\"\n            onActivate={handleToggleAttachMenu}\n            ariaLabel=\"Add an attachment\"\n            ariaControls=\"attach-menu-controls\"\n            hasPopup\n          >\n            <Icon name=\"attach\" />\n          </ResponsiveHoverButton>\n        )\n      }\n      <Menu\n        id=\"attach-menu-controls\"\n        isOpen={isMenuOpen}\n        autoClose\n        positionX=\"right\"\n        positionY=\"bottom\"\n        onClose={closeAttachMenu}\n        className=\"AttachMenu--menu fluid\"\n        onCloseAnimationEnd={closeAttachMenu}\n        onMouseEnter={!IS_TOUCH_ENV ? handleMouseEnter : undefined}\n        onMouseLeave={!IS_TOUCH_ENV ? handleMouseLeave : undefined}\n        noCloseOnBackdrop={!IS_TOUCH_ENV}\n        ariaLabelledBy=\"attach-menu-button\"\n      >\n        {/*\n       ** Using ternary operator here causes some attributes from first clause\n       ** transferring to the fragment content in the second clause\n       */}\n        {!canAttachMedia && (\n          <MenuItem className=\"media-disabled\" disabled>Posting media content is not allowed in this group.</MenuItem>\n        )}\n        {canAttachMedia && (\n          <>\n            {canSendVideoOrPhoto && !isFile && (\n              <MenuItem icon=\"photo\" onClick={handleQuickSelect}>\n                {lang(canSendVideoAndPhoto ? 'AttachmentMenu.PhotoOrVideo'\n                  : (canSendPhotos ? 'InputAttach.Popover.Photo' : 'InputAttach.Popover.Video'))}\n              </MenuItem>\n            )}\n            {((canSendDocuments || canSendAudios) && !isPhotoOrVideo)\n              && (\n                <MenuItem icon=\"document\" onClick={handleDocumentSelect}>\n                  {lang(!canSendDocuments && canSendAudios ? 'InputAttach.Popover.Music' : 'AttachDocument')}\n                </MenuItem>\n              )}\n            {canSendDocuments && shouldCollectDebugLogs && (\n              <MenuItem icon=\"bug\" onClick={handleSendLogs}>\n                {lang('DebugSendLogs')}\n              </MenuItem>\n            )}\n          </>\n        )}\n        {canAttachPolls && !editingMessage && (\n          <MenuItem icon=\"poll\" onClick={onPollCreate}>{lang('Poll')}</MenuItem>\n        )}\n\n        {!editingMessage && !hasReplaceableMedia && !isScheduled && bots?.map((bot) => (\n          <AttachBotItem\n            bot={bot}\n            chatId={chatId}\n            threadId={threadId}\n            theme={theme}\n            onMenuOpened={markAttachmentBotMenuOpen}\n            onMenuClosed={unmarkAttachmentBotMenuOpen}\n          />\n        ))}\n      </Menu>\n    </div>\n  );\n};\n\nexport default memo(AttachMenu);\n","import type { FC } from '../../../lib/teact/teact';\nimport React from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './BotCommandMenu';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst BotCommandMenuAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const BotCommandMenu = useModuleLoader(Bundles.Extra, 'BotCommandMenu', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return BotCommandMenu ? <BotCommandMenu {...props} /> : undefined;\n};\n\nexport default BotCommandMenuAsync;\n","import type { FC, TeactNode } from '../../../lib/teact/teact';\nimport React, { memo, useMemo } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiMessage } from '../../../api/types';\n\nimport { selectChatMessage, selectCurrentMessageList } from '../../../global/selectors';\nimport { IS_TOUCH_ENV } from '../../../util/windowEnvironment';\nimport renderKeyboardButtonText from './helpers/renderKeyboardButtonText';\n\nimport useMouseInside from '../../../hooks/useMouseInside';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Button from '../../ui/Button';\nimport Menu from '../../ui/Menu';\n\nimport './BotKeyboardMenu.scss';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  messageId: number;\n  onClose: NoneToVoidFunction;\n};\n\ntype StateProps = {\n  message?: ApiMessage;\n};\n\nconst BotKeyboardMenu: FC<OwnProps & StateProps> = ({\n  isOpen, message, onClose,\n}) => {\n  const { clickBotInlineButton } = getActions();\n\n  const lang = useOldLang();\n\n  const [handleMouseEnter, handleMouseLeave] = useMouseInside(isOpen, onClose);\n  const { isKeyboardSingleUse } = message || {};\n\n  const buttonTexts = useMemo(() => {\n    const texts: TeactNode[][] = [];\n    message?.keyboardButtons!.forEach((row) => {\n      texts.push(row.map((button) => renderKeyboardButtonText(lang, button)));\n    });\n\n    return texts;\n  }, [lang, message?.keyboardButtons]);\n\n  if (!message || !message.keyboardButtons) {\n    return undefined;\n  }\n\n  return (\n    <Menu\n      isOpen={isOpen}\n      autoClose={isKeyboardSingleUse}\n      positionX=\"right\"\n      positionY=\"bottom\"\n      onClose={onClose}\n      className=\"BotKeyboardMenu\"\n      onCloseAnimationEnd={onClose}\n      onMouseEnter={!IS_TOUCH_ENV ? handleMouseEnter : undefined}\n      onMouseLeave={!IS_TOUCH_ENV ? handleMouseLeave : undefined}\n      noCompact\n    >\n      <div className=\"content custom-scroll\">\n        {message.keyboardButtons.map((row, i) => (\n          <div className=\"row\">\n            {row.map((button, j) => (\n              <Button\n                ripple\n                disabled={button.type === 'unsupported'}\n                // eslint-disable-next-line react/jsx-no-bind\n                onClick={() => clickBotInlineButton({ chatId: message.chatId, messageId: message.id, button })}\n              >\n                {buttonTexts?.[i][j]}\n              </Button>\n            ))}\n          </div>\n        ))}\n      </div>\n    </Menu>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { messageId }): StateProps => {\n    const { chatId } = selectCurrentMessageList(global) || {};\n    if (!chatId) {\n      return {};\n    }\n\n    return { message: selectChatMessage(global, chatId, messageId) };\n  },\n)(BotKeyboardMenu));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useEffect, useRef } from '../../../lib/teact/teact';\n\nimport buildClassName from '../../../util/buildClassName';\nimport renderText from '../../common/helpers/renderText';\n\nimport Button from '../../ui/Button';\n\ntype OwnProps = {\n  isOpen?: boolean;\n  onClick: VoidFunction;\n  text: string;\n  isDisabled?: boolean;\n};\n\nconst BotMenuButton: FC<OwnProps> = ({\n  isOpen,\n  onClick,\n  text,\n  isDisabled,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const textRef = useRef<HTMLSpanElement>(null);\n\n  useEffect(() => {\n    const textEl = textRef.current;\n    if (!textEl) return;\n\n    const width = textEl.scrollWidth + 1; // Make width slightly bigger prevent ellipsis in some cases\n\n    const composerEl = textEl.closest('.Composer') as HTMLElement;\n    composerEl.style.setProperty('--bot-menu-text-width', `${width}px`);\n  }, [isOpen, text]);\n\n  useEffect(() => {\n    const textEl = textRef.current;\n    if (!textEl) return undefined;\n\n    const composerEl = textEl.closest('.Composer') as HTMLElement;\n\n    return () => {\n      composerEl.style.removeProperty('--bot-menu-text-width');\n    };\n  }, []);\n\n  return (\n    <Button\n      className={buildClassName('bot-menu', isOpen && 'open')}\n      round\n      color=\"translucent\"\n      disabled={isDisabled}\n      onClick={onClick}\n      ariaLabel=\"Open bot command keyboard\"\n    >\n      <i className={buildClassName('bot-menu-icon', 'icon', 'icon-webapp', isOpen && 'open')} />\n      <span ref={textRef} className=\"bot-menu-text\">{renderText(text)}</span>\n    </Button>\n  );\n};\n\nexport default memo(BotMenuButton);\n","import type { FC } from '../../../lib/teact/teact';\nimport React from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './ChatCommandTooltip';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst ChatCommandTooltipAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const ChatCommandTooltip = useModuleLoader(Bundles.Extra, 'ChatCommandTooltip', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return ChatCommandTooltip ? <ChatCommandTooltip {...props} /> : undefined;\n};\n\nexport default ChatCommandTooltipAsync;\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo, useRef,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type {\n  ApiChat, ApiInputMessageReplyInfo, ApiMessage, ApiPeer,\n} from '../../../api/types';\nimport type { MessageListType } from '../../../global/types';\nimport type { ThreadId } from '../../../types/index';\n\nimport { isChatChannel, stripCustomEmoji } from '../../../global/helpers';\nimport {\n  selectCanAnimateInterface,\n  selectChat,\n  selectChatMessage,\n  selectDraft,\n  selectEditingId,\n  selectEditingMessage,\n  selectEditingScheduledId,\n  selectForwardedSender,\n  selectIsChatWithSelf,\n  selectIsCurrentUserPremium,\n  selectPeer,\n  selectSender,\n  selectTabState,\n} from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport captureEscKeyListener from '../../../util/captureEscKeyListener';\nimport { getPeerColorClass } from '../../common/helpers/peerColor';\n\nimport useContextMenuHandlers from '../../../hooks/useContextMenuHandlers';\nimport useCurrentOrPrev from '../../../hooks/useCurrentOrPrev';\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useShowTransitionDeprecated from '../../../hooks/useShowTransitionDeprecated';\n\nimport { ClosableEmbeddedMessage } from '../../common/embedded/EmbeddedMessage';\nimport Icon from '../../common/icons/Icon';\nimport Button from '../../ui/Button';\nimport Menu from '../../ui/Menu';\nimport MenuItem from '../../ui/MenuItem';\nimport MenuSeparator from '../../ui/MenuSeparator';\n\nimport './ComposerEmbeddedMessage.scss';\n\ntype StateProps = {\n  replyInfo?: ApiInputMessageReplyInfo;\n  editingId?: number;\n  message?: ApiMessage;\n  sender?: ApiPeer;\n  shouldAnimate?: boolean;\n  forwardedMessagesCount?: number;\n  noAuthors?: boolean;\n  noCaptions?: boolean;\n  forwardsHaveCaptions?: boolean;\n  isCurrentUserPremium?: boolean;\n  isContextMenuDisabled?: boolean;\n  isReplyToDiscussion?: boolean;\n  isInChangingRecipientMode?: boolean;\n  shouldPreventComposerAnimation?: boolean;\n  senderChat?: ApiChat;\n  isSenderChannel?: boolean;\n  currentUserId?: string;\n};\n\ntype OwnProps = {\n  onClear?: () => void;\n  shouldForceShowEditing?: boolean;\n  chatId: string;\n  threadId: ThreadId;\n  messageListType: MessageListType;\n};\n\nconst CLOSE_DURATION = 350;\n\nconst ComposerEmbeddedMessage: FC<OwnProps & StateProps> = ({\n  replyInfo,\n  editingId,\n  message,\n  sender,\n  shouldAnimate,\n  forwardedMessagesCount,\n  noAuthors,\n  noCaptions,\n  forwardsHaveCaptions,\n  shouldForceShowEditing,\n  isCurrentUserPremium,\n  isContextMenuDisabled,\n  isReplyToDiscussion,\n  onClear,\n  isInChangingRecipientMode,\n  shouldPreventComposerAnimation,\n  senderChat,\n  chatId,\n  currentUserId,\n  isSenderChannel,\n}) => {\n  const {\n    resetDraftReplyInfo,\n    updateDraftReplyInfo,\n    setEditingId,\n    focusMessage,\n    changeRecipient,\n    openChatOrTopicWithReplyInDraft,\n    setForwardNoAuthors,\n    setForwardNoCaptions,\n    exitForwardMode,\n    setShouldPreventComposerAnimation,\n  } = getActions();\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n  const oldLang = useOldLang();\n  const lang = useLang();\n\n  const isReplyToTopicStart = message?.content.action?.type === 'topicCreate';\n  const isShowingReply = replyInfo && !shouldForceShowEditing;\n  const isReplyWithQuote = Boolean(replyInfo?.quoteText);\n\n  const isForwarding = Boolean(forwardedMessagesCount);\n\n  const isShown = (() => {\n    if (isInChangingRecipientMode) return false;\n    if (message && (replyInfo || editingId)) return true;\n    if (sender && isForwarding) return true;\n    return false;\n  })();\n\n  const {\n    shouldRender, transitionClassNames,\n  } = useShowTransitionDeprecated(\n    isShown && !isReplyToTopicStart && !isReplyToDiscussion,\n    undefined,\n    !shouldAnimate,\n    undefined,\n    !shouldAnimate,\n    CLOSE_DURATION,\n    !shouldAnimate,\n  );\n  useEffect(() => {\n    if (shouldPreventComposerAnimation) {\n      setShouldPreventComposerAnimation({ shouldPreventComposerAnimation: false });\n    }\n  });\n\n  const clearEmbedded = useLastCallback(() => {\n    if (editingId) {\n      setEditingId({ messageId: undefined });\n    } else if (forwardedMessagesCount) {\n      exitForwardMode();\n    } else if (replyInfo && !shouldForceShowEditing) {\n      resetDraftReplyInfo();\n    }\n    onClear?.();\n  });\n\n  useEffect(() => (isShown ? captureEscKeyListener(clearEmbedded) : undefined), [isShown, clearEmbedded]);\n\n  const {\n    isContextMenuOpen, contextMenuAnchor, handleContextMenu,\n    handleContextMenuClose, handleContextMenuHide,\n  } = useContextMenuHandlers(ref);\n\n  const focusMessageFromDraft = () => {\n    focusMessage({ chatId: message!.chatId, messageId: message!.id, noForumTopicPanel: true });\n  };\n  const handleMessageClick = useLastCallback((e: React.MouseEvent): void => {\n    handleContextMenu(e);\n  });\n\n  const handleClearClick = useLastCallback((e: React.MouseEvent<HTMLButtonElement, MouseEvent>): void => {\n    e.stopPropagation();\n    clearEmbedded();\n    handleContextMenuHide();\n  });\n  const buildAutoCloseMenuItemHandler = (action: NoneToVoidFunction) => {\n    return () => {\n      handleContextMenuClose();\n      action();\n    };\n  };\n  const handleForwardToAnotherChatClick = useLastCallback(buildAutoCloseMenuItemHandler(changeRecipient));\n  const handleShowMessageClick = useLastCallback(buildAutoCloseMenuItemHandler(focusMessageFromDraft));\n  const handleRemoveQuoteClick = useLastCallback(buildAutoCloseMenuItemHandler(\n    () => updateDraftReplyInfo({ quoteText: undefined }),\n  ));\n  const handleChangeReplyRecipientClick = useLastCallback(buildAutoCloseMenuItemHandler(changeRecipient));\n  const handleReplyInSenderChat = useLastCallback(() => {\n    handleContextMenuClose();\n    if (!sender) return;\n    openChatOrTopicWithReplyInDraft({ chatId: sender.id });\n  });\n  const handleDoNotReplyClick = useLastCallback(buildAutoCloseMenuItemHandler(clearEmbedded));\n\n  const getTriggerElement = useLastCallback(() => ref.current);\n  const getRootElement = useLastCallback(() => ref.current!);\n  const getMenuElement = useLastCallback(() => ref.current!.querySelector('.forward-context-menu .bubble'));\n\n  useEffect(() => {\n    if (!shouldRender) {\n      handleContextMenuClose();\n      handleContextMenuHide();\n    }\n  }, [handleContextMenuClose, handleContextMenuHide, shouldRender]);\n\n  const className = buildClassName('ComposerEmbeddedMessage', transitionClassNames);\n  const renderingSender = useCurrentOrPrev(sender, true);\n  const innerClassName = buildClassName(\n    'ComposerEmbeddedMessage_inner',\n    getPeerColorClass(renderingSender),\n  );\n\n  const leftIcon = useMemo(() => {\n    if (editingId) {\n      return 'edit';\n    }\n    if (isForwarding) {\n      return 'forward';\n    }\n    if (isShowingReply) {\n      return 'reply';\n    }\n\n    return undefined;\n  }, [editingId, isForwarding, isShowingReply]);\n\n  const customText = forwardedMessagesCount && forwardedMessagesCount > 1\n    ? oldLang('ForwardedMessageCount', forwardedMessagesCount)\n    : undefined;\n\n  const strippedMessage = useMemo(() => {\n    if (!message || !isForwarding || !message.content.text || !noAuthors || isCurrentUserPremium) return message;\n\n    const strippedText = stripCustomEmoji(message.content.text);\n    return {\n      ...message,\n      content: {\n        ...message.content,\n        text: strippedText,\n      },\n    };\n  }, [isCurrentUserPremium, isForwarding, message, noAuthors]);\n\n  const renderingLeftIcon = useCurrentOrPrev(leftIcon, true);\n\n  if (!shouldRender) {\n    return undefined;\n  }\n\n  const canReplyInSenderChat = sender && !isSenderChannel && chatId !== sender.id && sender.id !== currentUserId;\n\n  return (\n    <div className={className} ref={ref} onContextMenu={handleContextMenu}>\n      <div className={innerClassName}>\n        <div className=\"embedded-left-icon\" onClick={handleContextMenu}>\n          {renderingLeftIcon && <Icon name={renderingLeftIcon} />}\n          {Boolean(replyInfo?.quoteText) && (\n            <Icon name=\"quote\" className=\"quote-reply\" />\n          )}\n        </div>\n        <ClosableEmbeddedMessage\n          isOpen={isShown}\n          className=\"inside-input\"\n          replyInfo={replyInfo}\n          isInComposer\n          message={strippedMessage}\n          sender={!noAuthors ? sender : undefined}\n          customText={customText}\n          title={(editingId && !isShowingReply) ? oldLang('EditMessage')\n            : noAuthors ? oldLang('HiddenSendersNameDescription') : undefined}\n          onClick={handleMessageClick}\n          senderChat={senderChat}\n        />\n        <Button\n          className=\"embedded-cancel\"\n          round\n          faded\n          color=\"translucent\"\n          ariaLabel={oldLang('Cancel')}\n          onClick={handleClearClick}\n        >\n          <i className=\"icon icon-close\" />\n        </Button>\n        {(isShowingReply || isForwarding) && !isContextMenuDisabled && (\n          <Menu\n            isOpen={isContextMenuOpen}\n            anchor={contextMenuAnchor}\n            getTriggerElement={getTriggerElement}\n            getRootElement={getRootElement}\n            getMenuElement={getMenuElement}\n            className=\"forward-context-menu\"\n            onClose={handleContextMenuClose}\n            onCloseAnimationEnd={handleContextMenuHide}\n          >\n            {isForwarding && (\n              <>\n                <MenuItem\n                  icon={!noAuthors ? 'message-succeeded' : undefined}\n                  customIcon={noAuthors ? <i className=\"icon icon-placeholder\" /> : undefined}\n                  // eslint-disable-next-line react/jsx-no-bind\n                  onClick={() => setForwardNoAuthors({\n                    noAuthors: false,\n                  })}\n                >\n                  {oldLang(forwardedMessagesCount > 1 ? 'ShowSenderNames' : 'ShowSendersName')}\n                </MenuItem>\n                <MenuItem\n                  icon={noAuthors ? 'message-succeeded' : undefined}\n                  customIcon={!noAuthors ? <i className=\"icon icon-placeholder\" /> : undefined}\n                  // eslint-disable-next-line react/jsx-no-bind\n                  onClick={() => setForwardNoAuthors({\n                    noAuthors: true,\n                  })}\n                >\n                  {oldLang(forwardedMessagesCount > 1 ? 'HideSenderNames' : 'HideSendersName')}\n                </MenuItem>\n                {forwardsHaveCaptions && (\n                  <>\n                    <MenuSeparator />\n                    <MenuItem\n                      icon={!noCaptions ? 'message-succeeded' : undefined}\n                      customIcon={noCaptions ? <i className=\"icon icon-placeholder\" /> : undefined}\n                      // eslint-disable-next-line react/jsx-no-bind\n                      onClick={() => setForwardNoCaptions({\n                        noCaptions: false,\n                      })}\n                    >\n                      {oldLang(forwardedMessagesCount > 1 ? 'Conversation.ForwardOptions.ShowCaption' : 'ShowCaption')}\n                    </MenuItem>\n                    <MenuItem\n                      icon={noCaptions ? 'message-succeeded' : undefined}\n                      customIcon={!noCaptions ? <i className=\"icon icon-placeholder\" /> : undefined}\n                      // eslint-disable-next-line react/jsx-no-bind\n                      onClick={() => setForwardNoCaptions({\n                        noCaptions: true,\n                      })}\n                    >\n                      {oldLang(forwardedMessagesCount > 1 ? 'Conversation.ForwardOptions.HideCaption' : 'HideCaption')}\n                    </MenuItem>\n                  </>\n                )}\n                <MenuSeparator />\n                <MenuItem icon=\"replace\" onClick={handleForwardToAnotherChatClick}>\n                  {oldLang('ForwardAnotherChat')}\n                </MenuItem>\n              </>\n            )}\n            {isShowingReply && (\n              <>\n                <MenuItem\n                  icon=\"show-message\"\n                  onClick={handleShowMessageClick}\n                >\n                  {oldLang('Message.Context.Goto')}\n                </MenuItem>\n                {isReplyWithQuote && (\n                  <MenuItem\n                    icon=\"remove-quote\"\n                    onClick={handleRemoveQuoteClick}\n                  >\n                    {oldLang('RemoveQuote')}\n                  </MenuItem>\n                )}\n                {canReplyInSenderChat && (\n                  <MenuItem icon=\"user\" onClick={handleReplyInSenderChat}>\n                    {lang('ReplyInPrivateMessage')}\n                  </MenuItem>\n                )}\n                <MenuItem icon=\"replace\" onClick={handleChangeReplyRecipientClick}>\n                  {oldLang('ReplyToAnotherChat')}\n                </MenuItem>\n                <MenuItem icon=\"delete\" onClick={handleDoNotReplyClick}>\n                  {oldLang('DoNotReply')}\n                </MenuItem>\n              </>\n            )}\n          </Menu>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, {\n    shouldForceShowEditing, chatId, threadId, messageListType,\n  }): StateProps => {\n    const {\n      forwardMessages: {\n        fromChatId, toChatId, messageIds: forwardMessageIds, noAuthors, noCaptions,\n      },\n      isShareMessageModalShown: isModalShown,\n      shouldPreventComposerAnimation,\n    } = selectTabState(global);\n\n    const editingId = messageListType === 'scheduled'\n      ? selectEditingScheduledId(global, chatId)\n      : selectEditingId(global, chatId, threadId);\n    const shouldAnimate = selectCanAnimateInterface(global) && !shouldPreventComposerAnimation;\n    const isForwarding = toChatId === chatId;\n    const forwardedMessages = forwardMessageIds?.map((id) => selectChatMessage(global, fromChatId!, id)!);\n\n    const draft = selectDraft(global, chatId, threadId);\n    const replyInfo = draft?.replyInfo;\n    const replyToPeerId = replyInfo?.replyToPeerId;\n    const senderChat = replyToPeerId ? selectChat(global, replyToPeerId) : undefined;\n\n    let message: ApiMessage | undefined;\n    if (editingId) {\n      message = selectEditingMessage(global, chatId, threadId, messageListType);\n    } else if (isForwarding && forwardMessageIds!.length === 1) {\n      message = forwardedMessages?.[0];\n    } else if (replyInfo && !shouldForceShowEditing) {\n      message = selectChatMessage(global, replyInfo.replyToPeerId || chatId, replyInfo.replyToMsgId);\n    }\n\n    let sender: ApiPeer | undefined;\n\n    if (editingId && message) {\n      sender = selectSender(global, message);\n    } else if (isForwarding) {\n      if (message) {\n        sender = selectForwardedSender(global, message);\n        if (!sender) {\n          sender = selectSender(global, message);\n        }\n      }\n      if (!sender) {\n        sender = selectPeer(global, fromChatId!);\n      }\n    } else if (replyInfo && message && !shouldForceShowEditing) {\n      const { forwardInfo } = message;\n      const isChatWithSelf = selectIsChatWithSelf(global, chatId);\n      if (forwardInfo && (forwardInfo.isChannelPost || isChatWithSelf)) {\n        sender = selectForwardedSender(global, message);\n      }\n\n      if (!sender && (!forwardInfo?.hiddenUserName || Boolean(replyInfo.quoteText))) {\n        sender = selectSender(global, message);\n      }\n    }\n\n    const chat = sender && selectChat(global, sender.id);\n    const isSenderChannel = chat && isChatChannel(chat);\n\n    const forwardsHaveCaptions = forwardedMessages?.some((forward) => (\n      forward?.content.text && Object.keys(forward.content).length > 1\n    ));\n\n    const isContextMenuDisabled = isForwarding && forwardMessageIds!.length === 1\n      && Boolean(message?.content.storyData);\n\n    const isReplyToDiscussion = replyInfo?.replyToMsgId === threadId && !replyInfo.replyToPeerId;\n\n    return {\n      replyInfo,\n      editingId,\n      message,\n      sender,\n      shouldAnimate,\n      forwardedMessagesCount: isForwarding ? forwardMessageIds!.length : undefined,\n      noAuthors,\n      noCaptions,\n      forwardsHaveCaptions,\n      isCurrentUserPremium: selectIsCurrentUserPremium(global),\n      isContextMenuDisabled,\n      isReplyToDiscussion,\n      isInChangingRecipientMode: isModalShown,\n      shouldPreventComposerAnimation,\n      senderChat,\n      currentUserId: global.currentUserId,\n      isSenderChannel,\n    };\n  },\n)(ComposerEmbeddedMessage));\n","import type { FC } from '../../../lib/teact/teact';\nimport React from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './DropArea';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst DropAreaAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const DropArea = useModuleLoader(Bundles.Extra, 'DropArea', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return DropArea ? <DropArea {...props} /> : undefined;\n};\n\nexport default DropAreaAsync;\nexport { DropAreaState } from './DropArea';\n","import type { FC } from '../../../lib/teact/teact';\nimport React from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './InlineBotTooltip';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst InlineBotTooltipAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const InlineBotTooltip = useModuleLoader(Bundles.Extra, 'InlineBotTooltip', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return InlineBotTooltip ? <InlineBotTooltip {...props} /> : undefined;\n};\n\nexport default InlineBotTooltipAsync;\n","import type { FC } from '../../../lib/teact/teact';\nimport React from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './MentionTooltip';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst MentionTooltipAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const MentionTooltip = useModuleLoader(Bundles.Extra, 'MentionTooltip', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return MentionTooltip ? <MentionTooltip {...props} /> : undefined;\n};\n\nexport default MentionTooltipAsync;\n","import type { FC } from '../../../lib/teact/teact';\nimport React from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './PollModal';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst PollModalAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const PollModal = useModuleLoader(Bundles.Extra, 'PollModal', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return PollModal ? <PollModal {...props} /> : undefined;\n};\n\nexport default PollModalAsync;\n","import type { FC } from '../../../lib/teact/teact';\nimport React from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './SendAsMenu';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst SendAsMenuAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const SendAsMenu = useModuleLoader(Bundles.Extra, 'SendAsMenu', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return SendAsMenu ? <SendAsMenu {...props} /> : undefined;\n};\n\nexport default SendAsMenuAsync;\n","import type { FC } from '../../../lib/teact/teact';\nimport React from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './StickerTooltip';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst StickerTooltipAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const StickerTooltip = useModuleLoader(Bundles.Extra, 'StickerTooltip', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return StickerTooltip ? <StickerTooltip {...props} /> : undefined;\n};\n\nexport default StickerTooltipAsync;\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useEffect, useRef } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type {\n  ApiFormattedText, ApiMessage, ApiMessageEntityTextUrl, ApiWebPage,\n} from '../../../api/types';\nimport type { GlobalState } from '../../../global/types';\nimport type { ISettings, ThreadId } from '../../../types';\nimport type { Signal } from '../../../util/signals';\nimport { ApiMessageEntityTypes } from '../../../api/types';\n\nimport { RE_LINK_TEMPLATE } from '../../../config';\nimport { selectNoWebPage, selectTabState, selectTheme } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport parseHtmlAsFormattedText from '../../../util/parseHtmlAsFormattedText';\n\nimport { useDebouncedResolver } from '../../../hooks/useAsyncResolvers';\nimport useContextMenuHandlers from '../../../hooks/useContextMenuHandlers';\nimport useCurrentOrPrev from '../../../hooks/useCurrentOrPrev';\nimport useDerivedSignal from '../../../hooks/useDerivedSignal';\nimport useDerivedState from '../../../hooks/useDerivedState';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useShowTransitionDeprecated from '../../../hooks/useShowTransitionDeprecated';\nimport useSyncEffect from '../../../hooks/useSyncEffect';\n\nimport Button from '../../ui/Button';\nimport Menu from '../../ui/Menu';\nimport MenuItem from '../../ui/MenuItem';\nimport WebPage from '../message/WebPage';\n\nimport './WebPagePreview.scss';\n\ntype OwnProps = {\n  chatId: string;\n  threadId: ThreadId;\n  getHtml: Signal<string>;\n  isEditing: boolean;\n  isDisabled?: boolean;\n};\n\ntype StateProps = {\n  webPagePreview?: ApiWebPage;\n  noWebPage?: boolean;\n  theme: ISettings['theme'];\n  attachmentSettings: GlobalState['attachmentSettings'];\n};\n\nconst DEBOUNCE_MS = 300;\nconst RE_LINK = new RegExp(RE_LINK_TEMPLATE, 'i');\n\nconst WebPagePreview: FC<OwnProps & StateProps> = ({\n  chatId,\n  threadId,\n  getHtml,\n  isDisabled,\n  webPagePreview,\n  noWebPage,\n  theme,\n  attachmentSettings,\n  isEditing,\n}) => {\n  const {\n    loadWebPagePreview,\n    clearWebPagePreview,\n    toggleMessageWebPage,\n    updateAttachmentSettings,\n  } = getActions();\n\n  const lang = useOldLang();\n\n  const formattedTextWithLinkRef = useRef<ApiFormattedText>();\n\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n\n  const isInvertedMedia = attachmentSettings.isInvertedMedia;\n\n  const detectLinkDebounced = useDebouncedResolver(() => {\n    const formattedText = parseHtmlAsFormattedText(getHtml());\n    const linkEntity = formattedText.entities?.find((entity): entity is ApiMessageEntityTextUrl => (\n      entity.type === ApiMessageEntityTypes.TextUrl\n    ));\n\n    formattedTextWithLinkRef.current = formattedText;\n\n    return linkEntity?.url || formattedText.text.match(RE_LINK)?.[0];\n  }, [getHtml], DEBOUNCE_MS, true);\n\n  const getLink = useDerivedSignal(detectLinkDebounced, [detectLinkDebounced, getHtml], true);\n\n  useEffect(() => {\n    const link = getLink();\n    const formattedText = formattedTextWithLinkRef.current;\n\n    if (link) {\n      loadWebPagePreview({ text: formattedText! });\n    } else {\n      clearWebPagePreview();\n      toggleMessageWebPage({ chatId, threadId });\n    }\n  }, [getLink, chatId, threadId]);\n\n  useSyncEffect(() => {\n    clearWebPagePreview();\n    toggleMessageWebPage({ chatId, threadId });\n  }, [chatId, clearWebPagePreview, threadId, toggleMessageWebPage]);\n\n  const isShown = useDerivedState(() => {\n    return Boolean(webPagePreview && getHtml() && !noWebPage && !isDisabled);\n  }, [isDisabled, getHtml, noWebPage, webPagePreview]);\n  const { shouldRender, transitionClassNames } = useShowTransitionDeprecated(isShown);\n\n  const renderingWebPage = useCurrentOrPrev(webPagePreview, true);\n\n  const handleClearWebpagePreview = useLastCallback(() => {\n    toggleMessageWebPage({ chatId, threadId, noWebPage: true });\n  });\n\n  const {\n    isContextMenuOpen, contextMenuAnchor, handleContextMenu,\n    handleContextMenuClose, handleContextMenuHide,\n  } = useContextMenuHandlers(ref, isEditing, true);\n\n  const getTriggerElement = useLastCallback(() => ref.current);\n  const getRootElement = useLastCallback(() => ref.current!);\n  const getMenuElement = useLastCallback(\n    () => ref.current!.querySelector('.web-page-preview-context-menu .bubble'),\n  );\n\n  const handlePreviewClick = useLastCallback((e: React.MouseEvent): void => {\n    handleContextMenu(e);\n  });\n\n  useEffect(() => {\n    if (!shouldRender || !renderingWebPage) {\n      handleContextMenuClose();\n      handleContextMenuHide();\n    }\n  }, [handleContextMenuClose, handleContextMenuHide, shouldRender, renderingWebPage]);\n\n  function updateIsInvertedMedia(value?: true) {\n    updateAttachmentSettings({ isInvertedMedia: value });\n  }\n\n  if (!shouldRender || !renderingWebPage) {\n    return undefined;\n  }\n\n  // TODO Refactor so `WebPage` can be used without message\n  const { photo, ...webPageWithoutPhoto } = renderingWebPage;\n  const messageStub = {\n    content: {\n      webPage: webPageWithoutPhoto,\n    },\n  } as ApiMessage;\n\n  function renderContextMenu() {\n    return (\n      <Menu\n        isOpen={isContextMenuOpen}\n        anchor={contextMenuAnchor}\n        getTriggerElement={getTriggerElement}\n        getRootElement={getRootElement}\n        getMenuElement={getMenuElement}\n        className=\"web-page-preview-context-menu\"\n        onClose={handleContextMenuClose}\n        onCloseAnimationEnd={handleContextMenuHide}\n        autoClose\n      >\n        <>\n          {\n            isInvertedMedia ? (\n              // eslint-disable-next-line react/jsx-no-bind\n              <MenuItem icon=\"move-caption-up\" onClick={() => updateIsInvertedMedia(undefined)}>\n                {lang('PreviewSender.MoveTextUp')}\n              </MenuItem>\n            ) : (\n            // eslint-disable-next-line react/jsx-no-bind\n              <MenuItem icon=\"move-caption-down\" onClick={() => updateIsInvertedMedia(true)}>\n                {lang(('PreviewSender.MoveTextDown'))}\n              </MenuItem>\n            )\n          }\n          <MenuItem\n            icon=\"delete\"\n            // eslint-disable-next-line react/jsx-no-bind\n            onClick={handleClearWebpagePreview}\n          >\n            {lang('ChatInput.EditLink.RemovePreview')}\n          </MenuItem>\n        </>\n      </Menu>\n    );\n  }\n\n  return (\n    <div className={buildClassName('WebPagePreview', transitionClassNames)} ref={ref}>\n      <div className=\"WebPagePreview_inner\">\n        <div className=\"WebPagePreview-left-icon\" onClick={handlePreviewClick}>\n          <i className=\"icon icon-link\" />\n        </div>\n        <WebPage\n          message={messageStub}\n          inPreview\n          theme={theme}\n          onContainerClick={handlePreviewClick}\n          isEditing={isEditing}\n        />\n        <Button\n          className=\"WebPagePreview-clear\"\n          round\n          faded\n          color=\"translucent\"\n          ariaLabel=\"Clear Webpage Preview\"\n          onClick={handleClearWebpagePreview}\n        >\n          <i className=\"icon icon-close\" />\n        </Button>\n        {!isEditing && renderContextMenu()}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId, threadId }): StateProps => {\n    const noWebPage = selectNoWebPage(global, chatId, threadId);\n    const {\n      attachmentSettings,\n    } = global;\n    return {\n      theme: selectTheme(global),\n      webPagePreview: selectTabState(global).webPagePreview,\n      noWebPage,\n      attachmentSettings,\n    };\n  },\n)(WebPagePreview));\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo, useRef, useSignal, useState,\n} from '../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../global';\n\nimport type {\n  ApiAttachment,\n  ApiAttachMenuPeerType,\n  ApiAvailableEffect,\n  ApiAvailableReaction,\n  ApiBotCommand,\n  ApiBotInlineMediaResult,\n  ApiBotInlineResult,\n  ApiBotMenuButton,\n  ApiChat,\n  ApiChatFullInfo,\n  ApiFormattedText,\n  ApiMessage,\n  ApiMessageEntity,\n  ApiNewPoll,\n  ApiQuickReply,\n  ApiReaction,\n  ApiStealthMode,\n  ApiSticker,\n  ApiTopic,\n  ApiUser,\n  ApiVideo,\n  ApiWebPage,\n} from '../../api/types';\nimport type {\n  ApiDraft, GlobalState, MessageList, MessageListType, TabState,\n} from '../../global/types';\nimport type {\n  IAnchorPosition, InlineBotSettings, ISettings, ThreadId,\n} from '../../types';\nimport { MAIN_THREAD_ID } from '../../api/types';\n\nimport {\n  BASE_EMOJI_KEYWORD_LANG,\n  EDITABLE_INPUT_MODAL_ID,\n  HEART_REACTION,\n  MAX_UPLOAD_FILEPART_SIZE,\n  ONE_TIME_MEDIA_TTL_SECONDS,\n  REPLIES_USER_ID,\n  SCHEDULED_WHEN_ONLINE,\n  SEND_MESSAGE_ACTION_INTERVAL,\n  SERVICE_NOTIFICATIONS_USER_ID,\n} from '../../config';\nimport { requestMeasure, requestNextMutation } from '../../lib/fasterdom/fasterdom';\nimport {\n  getAllowedAttachmentOptions,\n  getStoryKey,\n  hasReplaceableMedia,\n  isChatAdmin,\n  isChatChannel,\n  isChatSuperGroup,\n  isUserId,\n} from '../../global/helpers';\nimport {\n  selectBot,\n  selectCanPlayAnimatedEmojis,\n  selectCanScheduleUntilOnline,\n  selectChat,\n  selectChatFullInfo,\n  selectChatMessage,\n  selectChatType,\n  selectCurrentMessageList,\n  selectDraft,\n  selectEditingDraft,\n  selectEditingMessage,\n  selectEditingScheduledDraft,\n  selectIsChatWithSelf,\n  selectIsCurrentUserPremium,\n  selectIsInSelectMode,\n  selectIsPremiumPurchaseBlocked,\n  selectIsReactionPickerOpen,\n  selectIsRightColumnShown,\n  selectNewestMessageWithBotKeyboardButtons,\n  selectNoWebPage,\n  selectPeerStory,\n  selectPerformanceSettingsValue,\n  selectRequestedDraft,\n  selectRequestedDraftFiles,\n  selectScheduledIds,\n  selectTabState,\n  selectTheme,\n  selectTopicFromMessage,\n  selectUser,\n  selectUserFullInfo,\n} from '../../global/selectors';\nimport { selectCurrentLimit } from '../../global/selectors/limits';\nimport buildClassName from '../../util/buildClassName';\nimport { formatMediaDuration, formatVoiceRecordDuration } from '../../util/dates/dateFormat';\nimport { processDeepLink } from '../../util/deeplink';\nimport { tryParseDeepLink } from '../../util/deepLinkParser';\nimport deleteLastCharacterOutsideSelection from '../../util/deleteLastCharacterOutsideSelection';\nimport { processMessageInputForCustomEmoji } from '../../util/emoji/customEmojiManager';\nimport focusEditableElement from '../../util/focusEditableElement';\nimport { MEMO_EMPTY_ARRAY } from '../../util/memo';\nimport parseHtmlAsFormattedText from '../../util/parseHtmlAsFormattedText';\nimport { insertHtmlInSelection } from '../../util/selection';\nimport { getServerTime } from '../../util/serverTime';\nimport { IS_IOS, IS_VOICE_RECORDING_SUPPORTED } from '../../util/windowEnvironment';\nimport windowSize from '../../util/windowSize';\nimport applyIosAutoCapitalizationFix from '../middle/composer/helpers/applyIosAutoCapitalizationFix';\nimport buildAttachment, { prepareAttachmentsToSend } from '../middle/composer/helpers/buildAttachment';\nimport { buildCustomEmojiHtml } from '../middle/composer/helpers/customEmoji';\nimport { isSelectionInsideInput } from '../middle/composer/helpers/selection';\nimport { getPeerColorClass } from './helpers/peerColor';\nimport renderText from './helpers/renderText';\nimport { getTextWithEntitiesAsHtml } from './helpers/renderTextWithEntities';\n\nimport useInterval from '../../hooks/schedulers/useInterval';\nimport useTimeout from '../../hooks/schedulers/useTimeout';\nimport useContextMenuHandlers from '../../hooks/useContextMenuHandlers';\nimport useDerivedState from '../../hooks/useDerivedState';\nimport useEffectWithPrevDeps from '../../hooks/useEffectWithPrevDeps';\nimport useFlag from '../../hooks/useFlag';\nimport useGetSelectionRange from '../../hooks/useGetSelectionRange';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\nimport usePreviousDeprecated from '../../hooks/usePreviousDeprecated';\nimport useSchedule from '../../hooks/useSchedule';\nimport useSendMessageAction from '../../hooks/useSendMessageAction';\nimport useShowTransitionDeprecated from '../../hooks/useShowTransitionDeprecated';\nimport { useStateRef } from '../../hooks/useStateRef';\nimport useSyncEffect from '../../hooks/useSyncEffect';\nimport useAttachmentModal from '../middle/composer/hooks/useAttachmentModal';\nimport useChatCommandTooltip from '../middle/composer/hooks/useChatCommandTooltip';\nimport useClipboardPaste from '../middle/composer/hooks/useClipboardPaste';\nimport useCustomEmojiTooltip from '../middle/composer/hooks/useCustomEmojiTooltip';\nimport useDraft from '../middle/composer/hooks/useDraft';\nimport useEditing from '../middle/composer/hooks/useEditing';\nimport useEmojiTooltip from '../middle/composer/hooks/useEmojiTooltip';\nimport useInlineBotTooltip from '../middle/composer/hooks/useInlineBotTooltip';\nimport useMentionTooltip from '../middle/composer/hooks/useMentionTooltip';\nimport useStickerTooltip from '../middle/composer/hooks/useStickerTooltip';\nimport useVoiceRecording from '../middle/composer/hooks/useVoiceRecording';\n\nimport AttachmentModal from '../middle/composer/AttachmentModal.async';\nimport AttachMenu from '../middle/composer/AttachMenu';\nimport BotCommandMenu from '../middle/composer/BotCommandMenu.async';\nimport BotKeyboardMenu from '../middle/composer/BotKeyboardMenu';\nimport BotMenuButton from '../middle/composer/BotMenuButton';\nimport ChatCommandTooltip from '../middle/composer/ChatCommandTooltip.async';\nimport ComposerEmbeddedMessage from '../middle/composer/ComposerEmbeddedMessage';\nimport CustomEmojiTooltip from '../middle/composer/CustomEmojiTooltip.async';\nimport CustomSendMenu from '../middle/composer/CustomSendMenu.async';\nimport DropArea, { DropAreaState } from '../middle/composer/DropArea.async';\nimport EmojiTooltip from '../middle/composer/EmojiTooltip.async';\nimport InlineBotTooltip from '../middle/composer/InlineBotTooltip.async';\nimport MentionTooltip from '../middle/composer/MentionTooltip.async';\nimport MessageInput from '../middle/composer/MessageInput';\nimport PollModal from '../middle/composer/PollModal.async';\nimport SendAsMenu from '../middle/composer/SendAsMenu.async';\nimport StickerTooltip from '../middle/composer/StickerTooltip.async';\nimport SymbolMenuButton from '../middle/composer/SymbolMenuButton';\nimport WebPagePreview from '../middle/composer/WebPagePreview';\nimport MessageEffect from '../middle/message/MessageEffect';\nimport ReactionSelector from '../middle/message/reactions/ReactionSelector';\nimport Button from '../ui/Button';\nimport ResponsiveHoverButton from '../ui/ResponsiveHoverButton';\nimport Spinner from '../ui/Spinner';\nimport Avatar from './Avatar';\nimport Icon from './icons/Icon';\nimport ReactionAnimatedEmoji from './reactions/ReactionAnimatedEmoji';\n\nimport './Composer.scss';\n\ntype ComposerType = 'messageList' | 'story';\n\ntype OwnProps = {\n  type: ComposerType;\n  chatId: string;\n  threadId: ThreadId;\n  storyId?: number;\n  messageListType: MessageListType;\n  dropAreaState?: string;\n  isReady: boolean;\n  isMobile?: boolean;\n  inputId: string;\n  editableInputCssSelector: string;\n  editableInputId: string;\n  className?: string;\n  inputPlaceholder?: string;\n  onDropHide?: NoneToVoidFunction;\n  onForward?: NoneToVoidFunction;\n  onFocus?: NoneToVoidFunction;\n  onBlur?: NoneToVoidFunction;\n};\n\ntype StateProps =\n  {\n    isOnActiveTab: boolean;\n    editingMessage?: ApiMessage;\n    chat?: ApiChat;\n    chatFullInfo?: ApiChatFullInfo;\n    draft?: ApiDraft;\n    replyToTopic?: ApiTopic;\n    currentMessageList?: MessageList;\n    isChatWithBot?: boolean;\n    isChatWithSelf?: boolean;\n    isChannel?: boolean;\n    isForCurrentMessageList: boolean;\n    isRightColumnShown?: boolean;\n    isSelectModeActive?: boolean;\n    isReactionPickerOpen?: boolean;\n    isForwarding?: boolean;\n    pollModal: TabState['pollModal'];\n    botKeyboardMessageId?: number;\n    botKeyboardPlaceholder?: string;\n    withScheduledButton?: boolean;\n    isInScheduledList?: boolean;\n    canScheduleUntilOnline?: boolean;\n    stickersForEmoji?: ApiSticker[];\n    customEmojiForEmoji?: ApiSticker[];\n    currentUserId?: string;\n    currentUser?: ApiUser;\n    recentEmojis: string[];\n    contentToBeScheduled?: TabState['contentToBeScheduled'];\n    shouldSuggestStickers?: boolean;\n    shouldSuggestCustomEmoji?: boolean;\n    baseEmojiKeywords?: Record<string, string[]>;\n    emojiKeywords?: Record<string, string[]>;\n    topInlineBotIds?: string[];\n    isInlineBotLoading: boolean;\n    inlineBots?: Record<string, false | InlineBotSettings>;\n    botCommands?: ApiBotCommand[] | false;\n    botMenuButton?: ApiBotMenuButton;\n    sendAsUser?: ApiUser;\n    sendAsChat?: ApiChat;\n    sendAsId?: string;\n    editingDraft?: ApiFormattedText;\n    requestedDraft?: ApiFormattedText;\n    requestedDraftFiles?: File[];\n    attachBots: GlobalState['attachMenu']['bots'];\n    attachMenuPeerType?: ApiAttachMenuPeerType;\n    theme: ISettings['theme'];\n    fileSizeLimit: number;\n    captionLimit: number;\n    isCurrentUserPremium?: boolean;\n    canSendVoiceByPrivacy?: boolean;\n    attachmentSettings: GlobalState['attachmentSettings'];\n    slowMode?: ApiChatFullInfo['slowMode'];\n    shouldUpdateStickerSetOrder?: boolean;\n    availableReactions?: ApiAvailableReaction[];\n    topReactions?: ApiReaction[];\n    canPlayAnimatedEmojis?: boolean;\n    canBuyPremium?: boolean;\n    shouldCollectDebugLogs?: boolean;\n    sentStoryReaction?: ApiReaction;\n    stealthMode?: ApiStealthMode;\n    canSendOneTimeMedia?: boolean;\n    quickReplyMessages?: Record<number, ApiMessage>;\n    quickReplies?: Record<number, ApiQuickReply>;\n    canSendQuickReplies?: boolean;\n    webPagePreview?: ApiWebPage;\n    noWebPage?: boolean;\n    isContactRequirePremium?: boolean;\n    effect?: ApiAvailableEffect;\n    effectReactions?: ApiReaction[];\n    areEffectsSupported?: boolean;\n    canPlayEffect?: boolean;\n    shouldPlayEffect?: boolean;\n  };\n\nenum MainButtonState {\n  Send = 'send',\n  Record = 'record',\n  Edit = 'edit',\n  Schedule = 'schedule',\n  Forward = 'forward',\n  SendOneTime = 'sendOneTime',\n}\n\ntype ScheduledMessageArgs = TabState['contentToBeScheduled'] | {\n  id: string; queryId: string; isSilent?: boolean;\n};\n\nconst VOICE_RECORDING_FILENAME = 'wonderful-voice-message.ogg';\n// When voice recording is active, composer placeholder will hide to prevent overlapping\nconst SCREEN_WIDTH_TO_HIDE_PLACEHOLDER = 600; // px\n\nconst MOBILE_KEYBOARD_HIDE_DELAY_MS = 100;\nconst SELECT_MODE_TRANSITION_MS = 200;\nconst MESSAGE_MAX_LENGTH = 4096;\nconst SENDING_ANIMATION_DURATION = 350;\nconst MOUNT_ANIMATION_DURATION = 430;\n\nconst Composer: FC<OwnProps & StateProps> = ({\n  type,\n  isOnActiveTab,\n  dropAreaState,\n  isInScheduledList,\n  canScheduleUntilOnline,\n  isReady,\n  isMobile,\n  onDropHide,\n  onFocus,\n  onBlur,\n  editingMessage,\n  chatId,\n  threadId,\n  storyId,\n  currentMessageList,\n  messageListType,\n  draft,\n  chat,\n  chatFullInfo,\n  replyToTopic,\n  isForCurrentMessageList,\n  isCurrentUserPremium,\n  canSendVoiceByPrivacy,\n  isChatWithBot,\n  isChatWithSelf,\n  isChannel,\n  fileSizeLimit,\n  isRightColumnShown,\n  isSelectModeActive,\n  isReactionPickerOpen,\n  isForwarding,\n  pollModal,\n  botKeyboardMessageId,\n  botKeyboardPlaceholder,\n  inputPlaceholder,\n  withScheduledButton,\n  stickersForEmoji,\n  customEmojiForEmoji,\n  topInlineBotIds,\n  currentUserId,\n  currentUser,\n  captionLimit,\n  contentToBeScheduled,\n  shouldSuggestStickers,\n  shouldSuggestCustomEmoji,\n  baseEmojiKeywords,\n  emojiKeywords,\n  recentEmojis,\n  inlineBots,\n  isInlineBotLoading,\n  botCommands,\n  sendAsUser,\n  sendAsChat,\n  sendAsId,\n  editingDraft,\n  requestedDraft,\n  requestedDraftFiles,\n  botMenuButton,\n  attachBots,\n  attachMenuPeerType,\n  attachmentSettings,\n  theme,\n  slowMode,\n  shouldUpdateStickerSetOrder,\n  editableInputCssSelector,\n  editableInputId,\n  inputId,\n  className,\n  availableReactions,\n  topReactions,\n  canBuyPremium,\n  canPlayAnimatedEmojis,\n  shouldCollectDebugLogs,\n  sentStoryReaction,\n  stealthMode,\n  canSendOneTimeMedia,\n  quickReplyMessages,\n  quickReplies,\n  canSendQuickReplies,\n  onForward,\n  webPagePreview,\n  noWebPage,\n  isContactRequirePremium,\n  effect,\n  effectReactions,\n  areEffectsSupported,\n  canPlayEffect,\n  shouldPlayEffect,\n}) => {\n  const {\n    sendMessage,\n    clearDraft,\n    showDialog,\n    forwardMessages,\n    openPollModal,\n    closePollModal,\n    loadScheduledHistory,\n    openThread,\n    addRecentEmoji,\n    sendInlineBotResult,\n    loadSendAs,\n    resetOpenChatWithDraft,\n    callAttachBot,\n    addRecentCustomEmoji,\n    showNotification,\n    showAllowedMessageTypesNotification,\n    openStoryReactionPicker,\n    closeReactionPicker,\n    sendStoryReaction,\n    editMessage,\n    updateAttachmentSettings,\n    saveEffectInDraft,\n    setReactionEffect,\n    hideEffectInComposer,\n  } = getActions();\n\n  const lang = useOldLang();\n\n  // eslint-disable-next-line no-null/no-null\n  const inputRef = useRef<HTMLDivElement>(null);\n\n  // eslint-disable-next-line no-null/no-null\n  const storyReactionRef = useRef<HTMLButtonElement>(null);\n\n  const [getHtml, setHtml] = useSignal('');\n  const [isMounted, setIsMounted] = useState(false);\n  const getSelectionRange = useGetSelectionRange(editableInputCssSelector);\n  const lastMessageSendTimeSeconds = useRef<number>();\n  const prevDropAreaState = usePreviousDeprecated(dropAreaState);\n  const { width: windowWidth } = windowSize.get();\n\n  const isInMessageList = type === 'messageList';\n  const isInStoryViewer = type === 'story';\n  const sendAsPeerIds = isInMessageList ? chat?.sendAsPeerIds : undefined;\n  const canShowSendAs = sendAsPeerIds\n    && (sendAsPeerIds.length > 1 || !sendAsPeerIds.some((peer) => peer.id === currentUserId!));\n  // Prevent Symbol Menu from closing when calendar is open\n  const [isSymbolMenuForced, forceShowSymbolMenu, cancelForceShowSymbolMenu] = useFlag();\n  const sendMessageAction = useSendMessageAction(chatId, threadId);\n  const [isInputHasFocus, markInputHasFocus, unmarkInputHasFocus] = useFlag();\n  const [isAttachMenuOpen, onAttachMenuOpen, onAttachMenuClose] = useFlag();\n\n  const canMediaBeReplaced = editingMessage && hasReplaceableMedia(editingMessage);\n\n  const { emojiSet, members: groupChatMembers, botCommands: chatBotCommands } = chatFullInfo || {};\n  const chatEmojiSetId = emojiSet?.id;\n\n  const isSentStoryReactionHeart = sentStoryReaction && 'emoticon' in sentStoryReaction\n    ? sentStoryReaction.emoticon === HEART_REACTION.emoticon : false;\n\n  useEffect(processMessageInputForCustomEmoji, [getHtml]);\n\n  const customEmojiNotificationNumber = useRef(0);\n\n  const [requestCalendar, calendar] = useSchedule(\n    isInMessageList && canScheduleUntilOnline,\n    cancelForceShowSymbolMenu,\n  );\n\n  useTimeout(() => {\n    setIsMounted(true);\n  }, MOUNT_ANIMATION_DURATION);\n\n  useEffect(() => {\n    if (isInMessageList) return;\n\n    closeReactionPicker();\n  }, [isInMessageList, storyId]);\n\n  useEffect(() => {\n    lastMessageSendTimeSeconds.current = undefined;\n  }, [chatId]);\n\n  useEffect(() => {\n    if (chatId && isReady && !isInStoryViewer) {\n      loadScheduledHistory({ chatId });\n    }\n  }, [isReady, chatId, threadId, isInStoryViewer]);\n\n  useEffect(() => {\n    const isChannelWithProfiles = isChannel && chat?.areProfilesShown;\n    if (chatId && chat && !sendAsPeerIds && isReady && (isChatSuperGroup(chat) || isChannelWithProfiles)) {\n      loadSendAs({ chatId });\n    }\n  }, [chat, chatId, isChannel, isReady, loadSendAs, sendAsPeerIds]);\n\n  const shouldAnimateSendAsButtonRef = useRef(false);\n  useSyncEffect(([prevChatId, prevSendAsPeerIds]) => {\n    // We only animate send-as button if `sendAsPeerIds` was missing when opening the chat\n    shouldAnimateSendAsButtonRef.current = Boolean(chatId === prevChatId && sendAsPeerIds && !prevSendAsPeerIds);\n  }, [chatId, sendAsPeerIds]);\n\n  const [attachments, setAttachments] = useState<ApiAttachment[]>([]);\n  const hasAttachments = Boolean(attachments.length);\n  const [nextText, setNextText] = useState<ApiFormattedText | undefined>(undefined);\n\n  const {\n    canSendStickers, canSendGifs, canAttachMedia, canAttachPolls, canAttachEmbedLinks,\n    canSendVoices, canSendPlainText, canSendAudios, canSendVideos, canSendPhotos, canSendDocuments,\n  } = useMemo(\n    () => getAllowedAttachmentOptions(chat, chatFullInfo, isChatWithBot, isInStoryViewer),\n    [chat, chatFullInfo, isChatWithBot, isInStoryViewer],\n  );\n\n  const isNeedPremium = isContactRequirePremium && isInStoryViewer;\n  const isSendTextBlocked = isNeedPremium || !canSendPlainText;\n\n  const hasWebPagePreview = !hasAttachments && canAttachEmbedLinks && !noWebPage && Boolean(webPagePreview);\n  const isComposerBlocked = isSendTextBlocked && !editingMessage;\n\n  useEffect(() => {\n    if (!hasWebPagePreview) {\n      updateAttachmentSettings({ isInvertedMedia: undefined });\n    }\n  }, [hasWebPagePreview]);\n\n  const insertHtmlAndUpdateCursor = useLastCallback((newHtml: string, inInputId: string = editableInputId) => {\n    if (inInputId === editableInputId && isComposerBlocked) return;\n    const selection = window.getSelection()!;\n    let messageInput: HTMLDivElement;\n    if (inInputId === editableInputId) {\n      messageInput = document.querySelector<HTMLDivElement>(editableInputCssSelector)!;\n    } else {\n      messageInput = document.getElementById(inInputId) as HTMLDivElement;\n    }\n\n    if (selection.rangeCount) {\n      const selectionRange = selection.getRangeAt(0);\n      if (isSelectionInsideInput(selectionRange, inInputId)) {\n        insertHtmlInSelection(newHtml);\n        messageInput.dispatchEvent(new Event('input', { bubbles: true }));\n        return;\n      }\n    }\n\n    setHtml(`${getHtml()}${newHtml}`);\n\n    // If selection is outside of input, set cursor at the end of input\n    requestNextMutation(() => {\n      focusEditableElement(messageInput);\n    });\n  });\n\n  const insertTextAndUpdateCursor = useLastCallback((\n    text: string, inInputId: string = editableInputId,\n  ) => {\n    const newHtml = renderText(text, ['escape_html', 'emoji_html', 'br_html'])\n      .join('')\n      .replace(/\\u200b+/g, '\\u200b');\n    insertHtmlAndUpdateCursor(newHtml, inInputId);\n  });\n\n  const insertFormattedTextAndUpdateCursor = useLastCallback((\n    text: ApiFormattedText, inInputId: string = editableInputId,\n  ) => {\n    const newHtml = getTextWithEntitiesAsHtml(text);\n    insertHtmlAndUpdateCursor(newHtml, inInputId);\n  });\n\n  const insertCustomEmojiAndUpdateCursor = useLastCallback((emoji: ApiSticker, inInputId: string = editableInputId) => {\n    insertHtmlAndUpdateCursor(buildCustomEmojiHtml(emoji), inInputId);\n  });\n\n  const insertNextText = useLastCallback(() => {\n    if (!nextText) return;\n    insertFormattedTextAndUpdateCursor(nextText, editableInputId);\n    setNextText(undefined);\n  });\n\n  const {\n    shouldSuggestCompression,\n    shouldForceCompression,\n    shouldForceAsFile,\n    handleAppendFiles,\n    handleFileSelect,\n    onCaptionUpdate,\n    handleClearAttachments,\n    handleSetAttachments,\n  } = useAttachmentModal({\n    attachments,\n    setHtml,\n    setAttachments,\n    fileSizeLimit,\n    chatId,\n    canSendAudios,\n    canSendVideos,\n    canSendPhotos,\n    canSendDocuments,\n    insertNextText,\n    editedMessage: editingMessage,\n  });\n\n  const [isBotKeyboardOpen, openBotKeyboard, closeBotKeyboard] = useFlag();\n  const [isBotCommandMenuOpen, openBotCommandMenu, closeBotCommandMenu] = useFlag();\n  const [isSymbolMenuOpen, openSymbolMenu, closeSymbolMenu] = useFlag();\n  const [isSendAsMenuOpen, openSendAsMenu, closeSendAsMenu] = useFlag();\n  const [isHoverDisabled, disableHover, enableHover] = useFlag();\n\n  const {\n    startRecordingVoice,\n    stopRecordingVoice,\n    pauseRecordingVoice,\n    activeVoiceRecording,\n    currentRecordTime,\n    recordButtonRef: mainButtonRef,\n    startRecordTimeRef,\n    isViewOnceEnabled,\n    setIsViewOnceEnabled,\n    toogleViewOnceEnabled,\n  } = useVoiceRecording();\n\n  const shouldSendRecordingStatus = isForCurrentMessageList && !isInStoryViewer;\n  useInterval(() => {\n    sendMessageAction({ type: 'recordAudio' });\n  }, shouldSendRecordingStatus ? activeVoiceRecording && SEND_MESSAGE_ACTION_INTERVAL : undefined);\n\n  useEffect(() => {\n    if (!isForCurrentMessageList || isInStoryViewer) return;\n    if (!activeVoiceRecording) {\n      sendMessageAction({ type: 'cancel' });\n    }\n  }, [activeVoiceRecording, isForCurrentMessageList, isInStoryViewer, sendMessageAction]);\n\n  const isEditingRef = useStateRef(Boolean(editingMessage));\n  useEffect(() => {\n    if (!isForCurrentMessageList || isInStoryViewer) return;\n    if (getHtml() && !isEditingRef.current) {\n      sendMessageAction({ type: 'typing' });\n    }\n  }, [getHtml, isEditingRef, isForCurrentMessageList, isInStoryViewer, sendMessageAction]);\n\n  const isAdmin = chat && isChatAdmin(chat);\n\n  const {\n    isEmojiTooltipOpen,\n    closeEmojiTooltip,\n    filteredEmojis,\n    filteredCustomEmojis,\n    insertEmoji,\n  } = useEmojiTooltip(\n    Boolean(isReady && isOnActiveTab && (isInStoryViewer || isForCurrentMessageList)\n      && shouldSuggestStickers && !hasAttachments),\n    getHtml,\n    setHtml,\n    undefined,\n    recentEmojis,\n    baseEmojiKeywords,\n    emojiKeywords,\n  );\n\n  const {\n    isCustomEmojiTooltipOpen,\n    closeCustomEmojiTooltip,\n    insertCustomEmoji,\n  } = useCustomEmojiTooltip(\n    Boolean(isReady && isOnActiveTab && (isInStoryViewer || isForCurrentMessageList)\n      && shouldSuggestCustomEmoji && !hasAttachments),\n    getHtml,\n    setHtml,\n    getSelectionRange,\n    inputRef,\n    customEmojiForEmoji,\n  );\n\n  const {\n    isStickerTooltipOpen,\n    closeStickerTooltip,\n  } = useStickerTooltip(\n    Boolean(isReady\n      && isOnActiveTab\n      && (isInStoryViewer || isForCurrentMessageList)\n      && shouldSuggestStickers\n      && canSendStickers\n      && !hasAttachments),\n    getHtml,\n    stickersForEmoji,\n  );\n\n  const {\n    isMentionTooltipOpen,\n    closeMentionTooltip,\n    insertMention,\n    mentionFilteredUsers,\n  } = useMentionTooltip(\n    Boolean(isInMessageList && isReady && isForCurrentMessageList && !hasAttachments),\n    getHtml,\n    setHtml,\n    getSelectionRange,\n    inputRef,\n    groupChatMembers,\n    topInlineBotIds,\n    currentUserId,\n  );\n\n  const {\n    isOpen: isInlineBotTooltipOpen,\n    botId: inlineBotId,\n    isGallery: isInlineBotTooltipGallery,\n    switchPm: inlineBotSwitchPm,\n    switchWebview: inlineBotSwitchWebview,\n    results: inlineBotResults,\n    closeTooltip: closeInlineBotTooltip,\n    help: inlineBotHelp,\n    loadMore: loadMoreForInlineBot,\n  } = useInlineBotTooltip(\n    Boolean(isInMessageList && isReady && isForCurrentMessageList && !hasAttachments),\n    chatId,\n    getHtml,\n    inlineBots,\n  );\n\n  const hasQuickReplies = Boolean(quickReplies && Object.keys(quickReplies).length);\n\n  const {\n    isOpen: isChatCommandTooltipOpen,\n    close: closeChatCommandTooltip,\n    filteredBotCommands: botTooltipCommands,\n    filteredQuickReplies: quickReplyCommands,\n  } = useChatCommandTooltip(\n    Boolean(isInMessageList\n      && isReady\n      && isForCurrentMessageList\n      && ((botCommands && botCommands?.length) || chatBotCommands?.length || (hasQuickReplies && canSendQuickReplies))),\n    getHtml,\n    botCommands,\n    chatBotCommands,\n    canSendQuickReplies ? quickReplies : undefined,\n  );\n\n  useDraft({\n    draft,\n    chatId,\n    threadId,\n    getHtml,\n    setHtml,\n    editedMessage: editingMessage,\n    isDisabled: isInStoryViewer || Boolean(requestedDraft),\n  });\n\n  const resetComposer = useLastCallback((shouldPreserveInput = false) => {\n    if (!shouldPreserveInput) {\n      setHtml('');\n    }\n\n    setAttachments(MEMO_EMPTY_ARRAY);\n    setNextText(undefined);\n\n    closeEmojiTooltip();\n    closeCustomEmojiTooltip();\n    closeStickerTooltip();\n    closeMentionTooltip();\n\n    if (isMobile) {\n      // @optimization\n      setTimeout(() => closeSymbolMenu(), SENDING_ANIMATION_DURATION);\n    } else {\n      closeSymbolMenu();\n    }\n  });\n\n  const [handleEditComplete, handleEditCancel, shouldForceShowEditing] = useEditing(\n    getHtml,\n    setHtml,\n    editingMessage,\n    resetComposer,\n    chatId,\n    threadId,\n    messageListType,\n    draft,\n    editingDraft,\n  );\n\n  // Handle chat change (should be placed after `useDraft` and `useEditing`)\n  const resetComposerRef = useStateRef(resetComposer);\n  const stopRecordingVoiceRef = useStateRef(stopRecordingVoice);\n  useEffect(() => {\n    return () => {\n      // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n      stopRecordingVoiceRef.current();\n      // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n      resetComposerRef.current();\n    };\n  }, [chatId, threadId, resetComposerRef, stopRecordingVoiceRef]);\n\n  const showCustomEmojiPremiumNotification = useLastCallback(() => {\n    const notificationNumber = customEmojiNotificationNumber.current;\n    if (!notificationNumber) {\n      showNotification({\n        message: lang('UnlockPremiumEmojiHint'),\n        action: {\n          action: 'openPremiumModal',\n          payload: { initialSection: 'animated_emoji' },\n        },\n        actionText: lang('PremiumMore'),\n      });\n    } else {\n      showNotification({\n        message: lang('UnlockPremiumEmojiHint2'),\n        action: {\n          action: 'openChat',\n          payload: { id: currentUserId, shouldReplaceHistory: true },\n        },\n        actionText: lang('Open'),\n      });\n    }\n    customEmojiNotificationNumber.current = Number(!notificationNumber);\n  });\n\n  const mainButtonState = useDerivedState(() => {\n    if (!isInputHasFocus && onForward && !(getHtml() && !hasAttachments)) {\n      return MainButtonState.Forward;\n    }\n\n    if (editingMessage && shouldForceShowEditing) {\n      return MainButtonState.Edit;\n    }\n\n    if (IS_VOICE_RECORDING_SUPPORTED && !activeVoiceRecording && !isForwarding && !(getHtml() && !hasAttachments)) {\n      return MainButtonState.Record;\n    }\n\n    if (isInScheduledList) {\n      return MainButtonState.Schedule;\n    }\n\n    return MainButtonState.Send;\n  }, [\n    activeVoiceRecording, editingMessage, getHtml, hasAttachments, isForwarding, isInputHasFocus, onForward,\n    shouldForceShowEditing, isInScheduledList,\n  ]);\n  const canShowCustomSendMenu = !isInScheduledList;\n\n  const {\n    isContextMenuOpen: isCustomSendMenuOpen,\n    handleContextMenu,\n    handleContextMenuClose,\n    handleContextMenuHide,\n  } = useContextMenuHandlers(mainButtonRef, !(mainButtonState === MainButtonState.Send && canShowCustomSendMenu));\n\n  const {\n    contextMenuAnchor: storyReactionPickerAnchor,\n    handleContextMenu: handleStoryPickerContextMenu,\n    handleBeforeContextMenu: handleBeforeStoryPickerContextMenu,\n    handleContextMenuHide: handleStoryPickerContextMenuHide,\n  } = useContextMenuHandlers(storyReactionRef, !isInStoryViewer);\n\n  useEffect(() => {\n    if (isReactionPickerOpen) return;\n\n    if (storyReactionPickerAnchor) {\n      openStoryReactionPicker({\n        peerId: chatId,\n        storyId: storyId!,\n        position: storyReactionPickerAnchor,\n      });\n      handleStoryPickerContextMenuHide();\n    }\n  }, [chatId, handleStoryPickerContextMenuHide, isReactionPickerOpen, storyId, storyReactionPickerAnchor]);\n\n  useClipboardPaste(\n    isForCurrentMessageList || isInStoryViewer,\n    insertFormattedTextAndUpdateCursor,\n    handleSetAttachments,\n    setNextText,\n    editingMessage,\n    !isCurrentUserPremium && !isChatWithSelf,\n    showCustomEmojiPremiumNotification,\n  );\n\n  const handleEmbeddedClear = useLastCallback(() => {\n    if (editingMessage) {\n      handleEditCancel();\n    }\n  });\n\n  const validateTextLength = useLastCallback((text: string, isAttachmentModal?: boolean) => {\n    const maxLength = isAttachmentModal ? captionLimit : MESSAGE_MAX_LENGTH;\n    if (text?.length > maxLength) {\n      const extraLength = text.length - maxLength;\n      showDialog({\n        data: {\n          message: 'MESSAGE_TOO_LONG_PLEASE_REMOVE_CHARACTERS',\n          textParams: {\n            '{EXTRA_CHARS_COUNT}': extraLength.toString(),\n            '{PLURAL_S}': extraLength > 1 ? 's' : '',\n          },\n          hasErrorKey: true,\n        },\n      });\n\n      return false;\n    }\n    return true;\n  });\n\n  const checkSlowMode = useLastCallback(() => {\n    if (slowMode && !isAdmin) {\n      const messageInput = document.querySelector<HTMLDivElement>(editableInputCssSelector);\n\n      const nowSeconds = getServerTime();\n      const secondsSinceLastMessage = lastMessageSendTimeSeconds.current\n        && Math.floor(nowSeconds - lastMessageSendTimeSeconds.current);\n      const nextSendDateNotReached = slowMode.nextSendDate && slowMode.nextSendDate > nowSeconds;\n\n      if (\n        (secondsSinceLastMessage && secondsSinceLastMessage < slowMode.seconds)\n        || nextSendDateNotReached\n      ) {\n        const secondsRemaining = nextSendDateNotReached\n          ? slowMode.nextSendDate! - nowSeconds\n          : slowMode.seconds - secondsSinceLastMessage!;\n        showDialog({\n          data: {\n            message: lang('SlowModeHint', formatMediaDuration(secondsRemaining)),\n            isSlowMode: true,\n            hasErrorKey: false,\n          },\n        });\n\n        messageInput?.blur();\n\n        return false;\n      }\n    }\n    return true;\n  });\n\n  const sendAttachments = useLastCallback(({\n    attachments: attachmentsToSend,\n    sendCompressed = attachmentSettings.shouldCompress,\n    sendGrouped = attachmentSettings.shouldSendGrouped,\n    isSilent,\n    scheduledAt,\n    isInvertedMedia,\n  }: {\n    attachments: ApiAttachment[];\n    sendCompressed?: boolean;\n    sendGrouped?: boolean;\n    isSilent?: boolean;\n    scheduledAt?: number;\n    isInvertedMedia?: true;\n  }) => {\n    if (!currentMessageList && !storyId) {\n      return;\n    }\n\n    const { text, entities } = parseHtmlAsFormattedText(getHtml());\n    if (!text && !attachmentsToSend.length) {\n      return;\n    }\n    if (!validateTextLength(text, true)) return;\n    if (!checkSlowMode()) return;\n\n    isInvertedMedia = text && sendCompressed && sendGrouped ? isInvertedMedia : undefined;\n\n    if (editingMessage) {\n      editMessage({\n        messageList: currentMessageList,\n        text,\n        entities,\n        attachments: prepareAttachmentsToSend(attachmentsToSend, sendCompressed),\n      });\n    } else {\n      sendMessage({\n        messageList: currentMessageList,\n        text,\n        entities,\n        scheduledAt,\n        isSilent,\n        shouldUpdateStickerSetOrder,\n        attachments: prepareAttachmentsToSend(attachmentsToSend, sendCompressed),\n        shouldGroupMessages: sendGrouped,\n        isInvertedMedia,\n      });\n    }\n\n    lastMessageSendTimeSeconds.current = getServerTime();\n\n    clearDraft({ chatId, isLocalOnly: true });\n\n    // Wait until message animation starts\n    requestMeasure(() => {\n      resetComposer();\n    });\n  });\n\n  const handleSendAttachmentsFromModal = useLastCallback((\n    sendCompressed: boolean,\n    sendGrouped: boolean,\n    isInvertedMedia?: true,\n  ) => {\n    sendAttachments({\n      attachments,\n      sendCompressed,\n      sendGrouped,\n      isInvertedMedia,\n    });\n  });\n\n  const handleSendAttachments = useLastCallback((\n    sendCompressed: boolean,\n    sendGrouped: boolean,\n    isSilent?: boolean,\n    scheduledAt?: number,\n    isInvertedMedia?: true,\n  ) => {\n    sendAttachments({\n      attachments,\n      sendCompressed,\n      sendGrouped,\n      isSilent,\n      scheduledAt,\n      isInvertedMedia,\n    });\n  });\n\n  const handleSend = useLastCallback(async (isSilent = false, scheduledAt?: number) => {\n    if (!currentMessageList && !storyId) {\n      return;\n    }\n\n    let currentAttachments = attachments;\n\n    if (activeVoiceRecording) {\n      const record = await stopRecordingVoice();\n      const ttlSeconds = isViewOnceEnabled ? ONE_TIME_MEDIA_TTL_SECONDS : undefined;\n      if (record) {\n        const { blob, duration, waveform } = record;\n        currentAttachments = [await buildAttachment(\n          VOICE_RECORDING_FILENAME,\n          blob,\n          { voice: { duration, waveform }, ttlSeconds },\n        )];\n      }\n    }\n\n    const { text, entities } = parseHtmlAsFormattedText(getHtml());\n\n    if (currentAttachments.length) {\n      sendAttachments({\n        attachments: currentAttachments,\n        scheduledAt,\n        isSilent,\n      });\n      return;\n    }\n\n    if (!text && !isForwarding) {\n      return;\n    }\n\n    if (!validateTextLength(text)) return;\n\n    const messageInput = document.querySelector<HTMLDivElement>(editableInputCssSelector);\n\n    const effectId = effect?.id;\n\n    if (text) {\n      if (!checkSlowMode()) return;\n\n      const isInvertedMedia = hasWebPagePreview ? attachmentSettings.isInvertedMedia : undefined;\n\n      if (areEffectsSupported) saveEffectInDraft({ chatId, threadId, effectId: undefined });\n\n      sendMessage({\n        messageList: currentMessageList,\n        text,\n        entities,\n        scheduledAt,\n        isSilent,\n        shouldUpdateStickerSetOrder,\n        isInvertedMedia,\n        effectId,\n      });\n    }\n\n    if (isForwarding) {\n      forwardMessages({\n        scheduledAt,\n        isSilent,\n      });\n    }\n\n    lastMessageSendTimeSeconds.current = getServerTime();\n    clearDraft({\n      chatId, threadId, isLocalOnly: true, shouldKeepReply: isForwarding,\n    });\n\n    if (IS_IOS && messageInput && messageInput === document.activeElement) {\n      applyIosAutoCapitalizationFix(messageInput);\n    }\n\n    // Wait until message animation starts\n    requestMeasure(() => {\n      resetComposer();\n    });\n  });\n\n  const handleClickBotMenu = useLastCallback(() => {\n    if (botMenuButton?.type !== 'webApp') {\n      return;\n    }\n\n    const parsedLink = tryParseDeepLink(botMenuButton.url);\n\n    if (parsedLink?.type === 'publicUsernameOrBotLink' && parsedLink.appName) {\n      processDeepLink(botMenuButton.url);\n    } else {\n      callAttachBot({\n        chatId, url: botMenuButton.url, threadId,\n      });\n    }\n  });\n\n  const handleActivateBotCommandMenu = useLastCallback(() => {\n    closeSymbolMenu();\n    openBotCommandMenu();\n  });\n\n  const handleMessageSchedule = useLastCallback((\n    args: ScheduledMessageArgs, scheduledAt: number, messageList: MessageList, effectId?: string,\n  ) => {\n    if (args && 'queryId' in args) {\n      const { id, queryId, isSilent } = args;\n      sendInlineBotResult({\n        id,\n        queryId,\n        scheduledAt,\n        isSilent,\n        messageList,\n      });\n      return;\n    }\n\n    const { isSilent, ...restArgs } = args || {};\n\n    if (!args || Object.keys(restArgs).length === 0) {\n      void handleSend(Boolean(isSilent), scheduledAt);\n    } else if (args.sendCompressed !== undefined || args.sendGrouped !== undefined) {\n      const { sendCompressed = false, sendGrouped = false, isInvertedMedia } = args;\n      void handleSendAttachments(sendCompressed, sendGrouped, isSilent, scheduledAt, isInvertedMedia);\n    } else {\n      sendMessage({\n        ...args,\n        messageList,\n        scheduledAt,\n        effectId,\n      });\n    }\n  });\n\n  useEffectWithPrevDeps(([prevContentToBeScheduled]) => {\n    if (currentMessageList && contentToBeScheduled && contentToBeScheduled !== prevContentToBeScheduled) {\n      requestCalendar((scheduledAt) => {\n        handleMessageSchedule(contentToBeScheduled, scheduledAt, currentMessageList);\n      });\n    }\n  }, [contentToBeScheduled, currentMessageList, handleMessageSchedule, requestCalendar]);\n\n  useEffect(() => {\n    if (requestedDraft) {\n      insertFormattedTextAndUpdateCursor(requestedDraft);\n      resetOpenChatWithDraft();\n\n      requestNextMutation(() => {\n        const messageInput = document.getElementById(editableInputId)!;\n        focusEditableElement(messageInput, true);\n      });\n    }\n  }, [editableInputId, requestedDraft, resetOpenChatWithDraft, setHtml]);\n\n  useEffect(() => {\n    if (requestedDraftFiles?.length) {\n      void handleFileSelect(requestedDraftFiles);\n      resetOpenChatWithDraft();\n    }\n  }, [handleFileSelect, requestedDraftFiles, resetOpenChatWithDraft]);\n\n  const handleCustomEmojiSelect = useLastCallback((emoji: ApiSticker, inInputId?: string) => {\n    const emojiSetId = 'id' in emoji.stickerSetInfo && emoji.stickerSetInfo.id;\n    if (!emoji.isFree && !isCurrentUserPremium && !isChatWithSelf && emojiSetId !== chatEmojiSetId) {\n      showCustomEmojiPremiumNotification();\n      return;\n    }\n\n    insertCustomEmojiAndUpdateCursor(emoji, inInputId);\n  });\n\n  const handleCustomEmojiSelectAttachmentModal = useLastCallback((emoji: ApiSticker) => {\n    handleCustomEmojiSelect(emoji, EDITABLE_INPUT_MODAL_ID);\n  });\n\n  const handleGifSelect = useLastCallback((gif: ApiVideo, isSilent?: boolean, isScheduleRequested?: boolean) => {\n    if (!currentMessageList && !storyId) {\n      return;\n    }\n\n    if (isInScheduledList || isScheduleRequested) {\n      forceShowSymbolMenu();\n      requestCalendar((scheduledAt) => {\n        cancelForceShowSymbolMenu();\n        handleMessageSchedule({ gif, isSilent }, scheduledAt, currentMessageList!);\n        requestMeasure(() => {\n          resetComposer(true);\n        });\n      });\n    } else {\n      sendMessage({ messageList: currentMessageList, gif, isSilent });\n      requestMeasure(() => {\n        resetComposer(true);\n      });\n    }\n  });\n\n  const handleStickerSelect = useLastCallback((\n    sticker: ApiSticker,\n    isSilent?: boolean,\n    isScheduleRequested?: boolean,\n    shouldPreserveInput = false,\n    canUpdateStickerSetsOrder?: boolean,\n  ) => {\n    if (!currentMessageList && !storyId) {\n      return;\n    }\n\n    sticker = {\n      ...sticker,\n      isPreloadedGlobally: true,\n    };\n\n    if (isInScheduledList || isScheduleRequested) {\n      forceShowSymbolMenu();\n      requestCalendar((scheduledAt) => {\n        cancelForceShowSymbolMenu();\n        handleMessageSchedule({ sticker, isSilent }, scheduledAt, currentMessageList!);\n        requestMeasure(() => {\n          resetComposer(shouldPreserveInput);\n        });\n      });\n    } else {\n      sendMessage({\n        messageList: currentMessageList,\n        sticker,\n        isSilent,\n        shouldUpdateStickerSetOrder: shouldUpdateStickerSetOrder && canUpdateStickerSetsOrder,\n      });\n      clearDraft({ chatId, threadId, isLocalOnly: true });\n\n      requestMeasure(() => {\n        resetComposer(shouldPreserveInput);\n      });\n    }\n  });\n\n  const handleInlineBotSelect = useLastCallback((\n    inlineResult: ApiBotInlineResult | ApiBotInlineMediaResult, isSilent?: boolean, isScheduleRequested?: boolean,\n  ) => {\n    if (!currentMessageList && !storyId) {\n      return;\n    }\n\n    if (isInScheduledList || isScheduleRequested) {\n      requestCalendar((scheduledAt) => {\n        handleMessageSchedule({\n          id: inlineResult.id,\n          queryId: inlineResult.queryId,\n          isSilent,\n        }, scheduledAt, currentMessageList!);\n      });\n    } else {\n      sendInlineBotResult({\n        id: inlineResult.id,\n        queryId: inlineResult.queryId,\n        isSilent,\n        messageList: currentMessageList!,\n      });\n    }\n\n    const messageInput = document.querySelector<HTMLDivElement>(editableInputCssSelector);\n    if (IS_IOS && messageInput && messageInput === document.activeElement) {\n      applyIosAutoCapitalizationFix(messageInput);\n    }\n\n    clearDraft({ chatId, isLocalOnly: true });\n    requestMeasure(() => {\n      resetComposer();\n    });\n  });\n\n  const handleBotCommandSelect = useLastCallback(() => {\n    clearDraft({ chatId, isLocalOnly: true });\n    requestMeasure(() => {\n      resetComposer();\n    });\n  });\n\n  const handlePollSend = useLastCallback((poll: ApiNewPoll) => {\n    if (!currentMessageList) {\n      return;\n    }\n\n    if (isInScheduledList) {\n      requestCalendar((scheduledAt) => {\n        handleMessageSchedule({ poll }, scheduledAt, currentMessageList);\n      });\n      closePollModal();\n    } else {\n      sendMessage({ messageList: currentMessageList, poll });\n      closePollModal();\n    }\n  });\n\n  const sendSilent = useLastCallback((additionalArgs?: ScheduledMessageArgs) => {\n    if (isInScheduledList) {\n      requestCalendar((scheduledAt) => {\n        handleMessageSchedule({ ...additionalArgs, isSilent: true }, scheduledAt, currentMessageList!);\n      });\n    } else if (additionalArgs && ('sendCompressed' in additionalArgs || 'sendGrouped' in additionalArgs)) {\n      const { sendCompressed = false, sendGrouped = false, isInvertedMedia } = additionalArgs;\n      void handleSendAttachments(sendCompressed, sendGrouped, true, undefined, isInvertedMedia);\n    } else {\n      void handleSend(true);\n    }\n  });\n\n  const handleSendAsMenuOpen = useLastCallback(() => {\n    const messageInput = document.querySelector<HTMLDivElement>(editableInputCssSelector);\n\n    if (!isMobile || messageInput !== document.activeElement) {\n      closeBotCommandMenu();\n      closeSymbolMenu();\n      openSendAsMenu();\n      return;\n    }\n\n    messageInput?.blur();\n    setTimeout(() => {\n      closeBotCommandMenu();\n      closeSymbolMenu();\n      openSendAsMenu();\n    }, MOBILE_KEYBOARD_HIDE_DELAY_MS);\n  });\n\n  useEffect(() => {\n    if (!isComposerBlocked) return;\n\n    setHtml('');\n  }, [isComposerBlocked, setHtml, attachments]);\n\n  const insertTextAndUpdateCursorAttachmentModal = useLastCallback((text: string) => {\n    insertTextAndUpdateCursor(text, EDITABLE_INPUT_MODAL_ID);\n  });\n\n  const removeSymbol = useLastCallback((inInputId = editableInputId) => {\n    const selection = window.getSelection()!;\n\n    if (selection.rangeCount) {\n      const selectionRange = selection.getRangeAt(0);\n      if (isSelectionInsideInput(selectionRange, inInputId)) {\n        document.execCommand('delete', false);\n        return;\n      }\n    }\n\n    setHtml(deleteLastCharacterOutsideSelection(getHtml()));\n  });\n\n  const removeSymbolAttachmentModal = useLastCallback(() => {\n    removeSymbol(EDITABLE_INPUT_MODAL_ID);\n  });\n\n  const handleAllScheduledClick = useLastCallback(() => {\n    openThread({\n      chatId, threadId, type: 'scheduled', noForumTopicPanel: true,\n    });\n  });\n\n  useEffect(() => {\n    if (isRightColumnShown && isMobile) {\n      closeSymbolMenu();\n    }\n  }, [isRightColumnShown, closeSymbolMenu, isMobile]);\n\n  useEffect(() => {\n    if (!isReady) return;\n\n    if (isSelectModeActive) {\n      disableHover();\n    } else {\n      setTimeout(() => {\n        enableHover();\n      }, SELECT_MODE_TRANSITION_MS);\n    }\n  }, [isSelectModeActive, enableHover, disableHover, isReady]);\n\n  const withBotMenuButton = isChatWithBot && botMenuButton?.type === 'webApp' && !editingMessage;\n  const isBotMenuButtonOpen = useDerivedState(() => {\n    return withBotMenuButton && !getHtml() && !activeVoiceRecording;\n  }, [withBotMenuButton, getHtml, activeVoiceRecording]);\n\n  const [timedPlaceholderLangKey, timedPlaceholderDate] = useMemo(() => {\n    if (slowMode?.nextSendDate) {\n      return ['SlowModeWait', slowMode.nextSendDate];\n    }\n\n    if (stealthMode?.activeUntil && isInStoryViewer) {\n      return ['StealthModeActiveHint', stealthMode.activeUntil];\n    }\n\n    return [];\n  }, [isInStoryViewer, slowMode?.nextSendDate, stealthMode?.activeUntil]);\n\n  const isComposerHasFocus = isBotKeyboardOpen || isSymbolMenuOpen || isEmojiTooltipOpen || isSendAsMenuOpen\n    || isMentionTooltipOpen || isInlineBotTooltipOpen || isBotCommandMenuOpen || isAttachMenuOpen\n    || isStickerTooltipOpen || isChatCommandTooltipOpen || isCustomEmojiTooltipOpen || isBotMenuButtonOpen\n  || isCustomSendMenuOpen || Boolean(activeVoiceRecording) || attachments.length > 0 || isInputHasFocus;\n  const isReactionSelectorOpen = isComposerHasFocus && !isReactionPickerOpen && isInStoryViewer && !isAttachMenuOpen\n    && !isSymbolMenuOpen;\n  const placeholderForForumAsMessages = chat?.isForum && chat?.isForumAsMessages && threadId === MAIN_THREAD_ID\n    ? (replyToTopic\n      ? lang('Chat.InputPlaceholderReplyInTopic', replyToTopic.title)\n      : lang('Message.Placeholder.MessageInGeneral'))\n    : undefined;\n\n  useEffect(() => {\n    if (isComposerHasFocus) {\n      onFocus?.();\n    } else {\n      onBlur?.();\n    }\n  }, [isComposerHasFocus, onBlur, onFocus]);\n\n  const {\n    shouldRender: shouldRenderReactionSelector,\n    transitionClassNames: reactionSelectorTransitonClassNames,\n  } = useShowTransitionDeprecated(isReactionSelectorOpen);\n  const areVoiceMessagesNotAllowed = mainButtonState === MainButtonState.Record\n    && (!canAttachMedia || !canSendVoiceByPrivacy || !canSendVoices);\n\n  const mainButtonHandler = useLastCallback(() => {\n    switch (mainButtonState) {\n      case MainButtonState.Forward:\n        onForward?.();\n        break;\n      case MainButtonState.Send:\n        void handleSend();\n        break;\n      case MainButtonState.Record: {\n        if (areVoiceMessagesNotAllowed) {\n          if (!canSendVoiceByPrivacy) {\n            showNotification({\n              message: lang('VoiceMessagesRestrictedByPrivacy', chat?.title),\n            });\n          } else if (!canSendVoices) {\n            showAllowedMessageTypesNotification({ chatId });\n          }\n        } else {\n          setIsViewOnceEnabled(false);\n          void startRecordingVoice();\n        }\n        break;\n      }\n      case MainButtonState.Edit:\n        handleEditComplete();\n        break;\n      case MainButtonState.Schedule:\n        if (activeVoiceRecording) {\n          pauseRecordingVoice();\n        }\n        if (!currentMessageList) {\n          return;\n        }\n        requestCalendar((scheduledAt) => {\n          handleMessageSchedule({}, scheduledAt, currentMessageList, effect?.id);\n        });\n        break;\n      default:\n        break;\n    }\n  });\n\n  const scheduledDefaultDate = new Date();\n  scheduledDefaultDate.setSeconds(0);\n  scheduledDefaultDate.setMilliseconds(0);\n\n  const scheduledMaxDate = new Date();\n  scheduledMaxDate.setFullYear(scheduledMaxDate.getFullYear() + 1);\n\n  let sendButtonAriaLabel = 'SendMessage';\n  switch (mainButtonState) {\n    case MainButtonState.Forward:\n      sendButtonAriaLabel = 'Forward';\n      break;\n    case MainButtonState.Edit:\n      sendButtonAriaLabel = 'Save edited message';\n      break;\n    case MainButtonState.Record:\n      sendButtonAriaLabel = !canAttachMedia\n        ? 'Conversation.DefaultRestrictedMedia'\n        : 'AccDescrVoiceMessage';\n  }\n\n  const fullClassName = buildClassName(\n    'Composer',\n    !isSelectModeActive && 'shown',\n    isHoverDisabled && 'hover-disabled',\n    isMounted && 'mounted',\n    className,\n  );\n\n  const handleToggleReaction = useLastCallback((reaction: ApiReaction) => {\n    let text: string | undefined;\n    let entities: ApiMessageEntity[] | undefined;\n\n    if ('emoticon' in reaction) {\n      text = reaction.emoticon;\n    } else {\n      const sticker = getGlobal().customEmojis.byId[reaction.documentId];\n      if (!sticker) {\n        return;\n      }\n\n      if (!sticker.isFree && !isCurrentUserPremium && !isChatWithSelf) {\n        showCustomEmojiPremiumNotification();\n        return;\n      }\n      const customEmojiMessage = parseHtmlAsFormattedText(buildCustomEmojiHtml(sticker));\n      text = customEmojiMessage.text;\n      entities = customEmojiMessage.entities;\n    }\n\n    sendMessage({ text, entities, isReaction: true });\n    closeReactionPicker();\n  });\n\n  const handleToggleEffectReaction = useLastCallback((reaction: ApiReaction) => {\n    setReactionEffect({ chatId, threadId, reaction });\n\n    closeReactionPicker();\n  });\n\n  const handleReactionPickerOpen = useLastCallback((position: IAnchorPosition) => {\n    openStoryReactionPicker({\n      peerId: chatId,\n      storyId: storyId!,\n      position,\n      sendAsMessage: true,\n    });\n  });\n\n  const handleLikeStory = useLastCallback(() => {\n    const reaction = sentStoryReaction ? undefined : HEART_REACTION;\n    sendStoryReaction({\n      peerId: chatId,\n      storyId: storyId!,\n      containerId: getStoryKey(chatId, storyId!),\n      reaction,\n    });\n  });\n\n  const handleSendScheduled = useLastCallback(() => {\n    requestCalendar((scheduledAt) => {\n      handleMessageSchedule({}, scheduledAt, currentMessageList!);\n    });\n  });\n\n  const handleSendSilent = useLastCallback(() => {\n    sendSilent();\n  });\n\n  const handleSendWhenOnline = useLastCallback(() => {\n    handleMessageSchedule({}, SCHEDULED_WHEN_ONLINE, currentMessageList!, effect?.id);\n  });\n\n  const handleSendScheduledAttachments = useLastCallback(\n    (sendCompressed: boolean, sendGrouped: boolean, isInvertedMedia?: true) => {\n      requestCalendar((scheduledAt) => {\n        handleMessageSchedule({ sendCompressed, sendGrouped, isInvertedMedia }, scheduledAt, currentMessageList!);\n      });\n    },\n  );\n\n  const handleSendSilentAttachments = useLastCallback(\n    (sendCompressed: boolean, sendGrouped: boolean, isInvertedMedia?: true) => {\n      sendSilent({ sendCompressed, sendGrouped, isInvertedMedia });\n    },\n  );\n\n  const handleRemoveEffect = useLastCallback(() => { saveEffectInDraft({ chatId, threadId, effectId: undefined }); });\n\n  const handleStopEffect = useLastCallback(() => { hideEffectInComposer({ }); });\n\n  const onSend = useMemo(() => {\n    switch (mainButtonState) {\n      case MainButtonState.Edit:\n        return handleEditComplete;\n      case MainButtonState.Schedule:\n        return handleSendScheduled;\n      default:\n        return handleSend;\n    }\n  }, [mainButtonState, handleEditComplete]);\n\n  const withBotCommands = isChatWithBot && botMenuButton?.type === 'commands' && !editingMessage\n    && botCommands !== false && !activeVoiceRecording;\n\n  const effectEmoji = areEffectsSupported && effect?.emoticon;\n\n  return (\n    <div className={fullClassName}>\n      {isInMessageList && canAttachMedia && isReady && (\n        <DropArea\n          isOpen={dropAreaState !== DropAreaState.None}\n          withQuick={dropAreaState === DropAreaState.QuickFile || prevDropAreaState === DropAreaState.QuickFile}\n          onHide={onDropHide!}\n          onFileSelect={handleFileSelect}\n          editingMessage={editingMessage}\n        />\n      )}\n      {shouldRenderReactionSelector && !isNeedPremium && (\n        <ReactionSelector\n          topReactions={topReactions}\n          allAvailableReactions={availableReactions}\n          onToggleReaction={handleToggleReaction}\n          isPrivate\n          isReady={isReady}\n          canBuyPremium={canBuyPremium}\n          isCurrentUserPremium={isCurrentUserPremium}\n          isInSavedMessages={isChatWithSelf}\n          isInStoryViewer={isInStoryViewer}\n          canPlayAnimatedEmojis={canPlayAnimatedEmojis}\n          onShowMore={handleReactionPickerOpen}\n          className={reactionSelectorTransitonClassNames}\n        />\n      )}\n      <AttachmentModal\n        chatId={chatId}\n        threadId={threadId}\n        canShowCustomSendMenu={canShowCustomSendMenu}\n        attachments={attachments}\n        getHtml={getHtml}\n        isReady={isReady}\n        shouldSuggestCompression={shouldSuggestCompression}\n        shouldForceCompression={shouldForceCompression}\n        shouldForceAsFile={shouldForceAsFile}\n        isForCurrentMessageList={isForCurrentMessageList}\n        isForMessage={isInMessageList}\n        shouldSchedule={isInScheduledList}\n        forceDarkTheme={isInStoryViewer}\n        onCaptionUpdate={onCaptionUpdate}\n        onSendSilent={handleSendSilentAttachments}\n        onSend={handleSendAttachmentsFromModal}\n        onSendScheduled={handleSendScheduledAttachments}\n        onFileAppend={handleAppendFiles}\n        onClear={handleClearAttachments}\n        onAttachmentsUpdate={handleSetAttachments}\n        onCustomEmojiSelect={handleCustomEmojiSelectAttachmentModal}\n        onRemoveSymbol={removeSymbolAttachmentModal}\n        onEmojiSelect={insertTextAndUpdateCursorAttachmentModal}\n        editingMessage={editingMessage}\n      />\n      <PollModal\n        isOpen={pollModal.isOpen}\n        isQuiz={pollModal.isQuiz}\n        shouldBeAnonymous={isChannel}\n        onClear={closePollModal}\n        onSend={handlePollSend}\n      />\n      <SendAsMenu\n        isOpen={isSendAsMenuOpen}\n        onClose={closeSendAsMenu}\n        chatId={chatId}\n        selectedSendAsId={sendAsId}\n        sendAsPeerIds={sendAsPeerIds}\n        isCurrentUserPremium={isCurrentUserPremium}\n      />\n      <MentionTooltip\n        isOpen={isMentionTooltipOpen}\n        filteredUsers={mentionFilteredUsers}\n        onInsertUserName={insertMention}\n        onClose={closeMentionTooltip}\n      />\n      <ChatCommandTooltip\n        isOpen={isChatCommandTooltipOpen}\n        chatId={chatId}\n        withUsername={Boolean(chatBotCommands)}\n        botCommands={botTooltipCommands}\n        quickReplies={quickReplyCommands}\n        getHtml={getHtml}\n        self={currentUser!}\n        quickReplyMessages={quickReplyMessages}\n        onClick={handleBotCommandSelect}\n        onClose={closeChatCommandTooltip}\n      />\n      <div className={\n        buildClassName('composer-wrapper', isInStoryViewer && 'with-story-tweaks', isNeedPremium && 'is-need-premium')\n      }\n      >\n        {!isNeedPremium && (\n          <svg className=\"svg-appendix\" width=\"9\" height=\"20\">\n            <defs>\n              <filter\n                x=\"-50%\"\n                y=\"-14.7%\"\n                width=\"200%\"\n                height=\"141.2%\"\n                filterUnits=\"objectBoundingBox\"\n                id=\"composerAppendix\"\n              >\n                <feOffset dy=\"1\" in=\"SourceAlpha\" result=\"shadowOffsetOuter1\" />\n                <feGaussianBlur stdDeviation=\"1\" in=\"shadowOffsetOuter1\" result=\"shadowBlurOuter1\" />\n                <feColorMatrix\n                  values=\"0 0 0 0 0.0621962482 0 0 0 0 0.138574144 0 0 0 0 0.185037364 0 0 0 0.15 0\"\n                  in=\"shadowBlurOuter1\"\n                />\n              </filter>\n            </defs>\n            <g fill=\"none\" fill-rule=\"evenodd\">\n              <path d=\"M6 17H0V0c.193 2.84.876 5.767 2.05 8.782.904 2.325 2.446 4.485 4.625 6.48A1 1 0 016 17z\" fill=\"#000\" filter=\"url(#composerAppendix)\" />\n              <path d=\"M6 17H0V0c.193 2.84.876 5.767 2.05 8.782.904 2.325 2.446 4.485 4.625 6.48A1 1 0 016 17z\" fill=\"#FFF\" className=\"corner\" />\n            </g>\n          </svg>\n        )}\n        {isInMessageList && (\n          <>\n            <InlineBotTooltip\n              isOpen={isInlineBotTooltipOpen}\n              botId={inlineBotId}\n              isGallery={isInlineBotTooltipGallery}\n              inlineBotResults={inlineBotResults}\n              switchPm={inlineBotSwitchPm}\n              switchWebview={inlineBotSwitchWebview}\n              loadMore={loadMoreForInlineBot}\n              isSavedMessages={isChatWithSelf}\n              canSendGifs={canSendGifs}\n              isCurrentUserPremium={isCurrentUserPremium}\n              onSelectResult={handleInlineBotSelect}\n              onClose={closeInlineBotTooltip}\n            />\n            <ComposerEmbeddedMessage\n              onClear={handleEmbeddedClear}\n              shouldForceShowEditing={Boolean(shouldForceShowEditing && editingMessage)}\n              chatId={chatId}\n              threadId={threadId}\n              messageListType={messageListType}\n            />\n            <WebPagePreview\n              chatId={chatId}\n              threadId={threadId}\n              getHtml={getHtml}\n              isDisabled={!canAttachEmbedLinks || hasAttachments}\n              isEditing={Boolean(editingMessage)}\n            />\n          </>\n        )}\n        <div className={buildClassName('message-input-wrapper', getPeerColorClass(currentUser))}>\n          {isInMessageList && (\n            <>\n              {withBotMenuButton && (\n                <BotMenuButton\n                  isOpen={isBotMenuButtonOpen}\n                  text={botMenuButton.text}\n                  isDisabled={Boolean(activeVoiceRecording)}\n                  onClick={handleClickBotMenu}\n                />\n              )}\n              {withBotCommands && (\n                <ResponsiveHoverButton\n                  className={buildClassName('bot-commands', isBotCommandMenuOpen && 'activated')}\n                  round\n                  disabled={botCommands === undefined}\n                  color=\"translucent\"\n                  onActivate={handleActivateBotCommandMenu}\n                  ariaLabel=\"Open bot command keyboard\"\n                >\n                  <i className=\"icon icon-bot-commands-filled\" />\n                </ResponsiveHoverButton>\n              )}\n              {canShowSendAs && (sendAsUser || sendAsChat) && (\n                <Button\n                  round\n                  color=\"translucent\"\n                  onClick={isSendAsMenuOpen ? closeSendAsMenu : handleSendAsMenuOpen}\n                  ariaLabel={lang('SendMessageAsTitle')}\n                  className={buildClassName(\n                    'send-as-button',\n                    shouldAnimateSendAsButtonRef.current && 'appear-animation',\n                  )}\n                >\n                  <Avatar\n                    peer={sendAsUser || sendAsChat}\n                    size=\"tiny\"\n                  />\n                </Button>\n              )}\n            </>\n          )}\n          {((!isComposerBlocked || canSendGifs || canSendStickers) && !isNeedPremium) && (\n            <SymbolMenuButton\n              chatId={chatId}\n              threadId={threadId}\n              isMobile={isMobile}\n              isReady={isReady}\n              isSymbolMenuOpen={isSymbolMenuOpen}\n              openSymbolMenu={openSymbolMenu}\n              closeSymbolMenu={closeSymbolMenu}\n              canSendStickers={canSendStickers}\n              canSendGifs={canSendGifs}\n              isMessageComposer={isInMessageList}\n              onGifSelect={handleGifSelect}\n              onStickerSelect={handleStickerSelect}\n              onCustomEmojiSelect={handleCustomEmojiSelect}\n              onRemoveSymbol={removeSymbol}\n              onEmojiSelect={insertTextAndUpdateCursor}\n              closeBotCommandMenu={closeBotCommandMenu}\n              closeSendAsMenu={closeSendAsMenu}\n              isSymbolMenuForced={isSymbolMenuForced}\n              canSendPlainText={!isComposerBlocked}\n              inputCssSelector={editableInputCssSelector}\n              idPrefix={type}\n              forceDarkTheme={isInStoryViewer}\n            />\n          )}\n          <MessageInput\n            ref={inputRef}\n            id={inputId}\n            editableInputId={editableInputId}\n            customEmojiPrefix={type}\n            isStoryInput={isInStoryViewer}\n            chatId={chatId}\n            canSendPlainText={!isComposerBlocked}\n            threadId={threadId}\n            isReady={isReady}\n            isActive={!hasAttachments}\n            getHtml={getHtml}\n            placeholder={\n              activeVoiceRecording && windowWidth <= SCREEN_WIDTH_TO_HIDE_PLACEHOLDER\n                ? ''\n                : (!isComposerBlocked\n                  ? (botKeyboardPlaceholder || inputPlaceholder || lang(placeholderForForumAsMessages || 'Message'))\n                  : isInStoryViewer ? lang('StoryRepliesLocked') : lang('Chat.PlaceholderTextNotAllowed'))\n            }\n            timedPlaceholderDate={timedPlaceholderDate}\n            timedPlaceholderLangKey={timedPlaceholderLangKey}\n            forcedPlaceholder={inlineBotHelp}\n            canAutoFocus={isReady && isForCurrentMessageList && !hasAttachments && isInMessageList}\n            noFocusInterception={hasAttachments}\n            shouldSuppressFocus={isMobile && isSymbolMenuOpen}\n            shouldSuppressTextFormatter={isEmojiTooltipOpen || isMentionTooltipOpen || isInlineBotTooltipOpen}\n            onUpdate={setHtml}\n            onSend={onSend}\n            onSuppressedFocus={closeSymbolMenu}\n            onFocus={markInputHasFocus}\n            onBlur={unmarkInputHasFocus}\n            isNeedPremium={isNeedPremium}\n          />\n          {isInMessageList && (\n            <>\n              {isInlineBotLoading && Boolean(inlineBotId) && (\n                <Spinner color=\"gray\" />\n              )}\n              {withScheduledButton && (\n                <Button\n                  round\n                  faded\n                  className=\"scheduled-button\"\n                  color=\"translucent\"\n                  onClick={handleAllScheduledClick}\n                  ariaLabel=\"Open scheduled messages\"\n                >\n                  <i className=\"icon icon-schedule\" />\n                </Button>\n              )}\n              {Boolean(botKeyboardMessageId) && !activeVoiceRecording && !editingMessage && (\n                <ResponsiveHoverButton\n                  className={isBotKeyboardOpen ? 'activated' : ''}\n                  round\n                  color=\"translucent\"\n                  onActivate={openBotKeyboard}\n                  ariaLabel=\"Open bot command keyboard\"\n                >\n                  <i className=\"icon icon-bot-command\" />\n                </ResponsiveHoverButton>\n              )}\n            </>\n          )}\n          {activeVoiceRecording && Boolean(currentRecordTime) && (\n            <span className=\"recording-state\">\n              {formatVoiceRecordDuration(currentRecordTime - startRecordTimeRef.current!)}\n            </span>\n          )}\n          {!isNeedPremium && (\n            <AttachMenu\n              chatId={chatId}\n              threadId={threadId}\n              editingMessage={editingMessage}\n              hasReplaceableMedia={canMediaBeReplaced}\n              isButtonVisible={!activeVoiceRecording}\n              canAttachMedia={canAttachMedia}\n              canAttachPolls={canAttachPolls}\n              canSendPhotos={canSendPhotos}\n              canSendVideos={canSendVideos}\n              canSendDocuments={canSendDocuments}\n              canSendAudios={canSendAudios}\n              onFileSelect={handleFileSelect}\n              onPollCreate={openPollModal}\n              isScheduled={isInScheduledList}\n              attachBots={isInMessageList ? attachBots : undefined}\n              peerType={attachMenuPeerType}\n              shouldCollectDebugLogs={shouldCollectDebugLogs}\n              theme={theme}\n              onMenuOpen={onAttachMenuOpen}\n              onMenuClose={onAttachMenuClose}\n            />\n          )}\n          {isInMessageList && Boolean(botKeyboardMessageId) && (\n            <BotKeyboardMenu\n              messageId={botKeyboardMessageId}\n              isOpen={isBotKeyboardOpen}\n              onClose={closeBotKeyboard}\n            />\n          )}\n          {isInMessageList && botCommands && (\n            <BotCommandMenu\n              isOpen={isBotCommandMenuOpen}\n              botCommands={botCommands}\n              onClose={closeBotCommandMenu}\n            />\n          )}\n          <CustomEmojiTooltip\n            key={`custom-emoji-tooltip-${editableInputId}`}\n            chatId={chatId}\n            isOpen={isCustomEmojiTooltipOpen}\n            onCustomEmojiSelect={insertCustomEmoji}\n            addRecentCustomEmoji={addRecentCustomEmoji}\n            onClose={closeCustomEmojiTooltip}\n          />\n          <StickerTooltip\n            key={`sticker-tooltip-${editableInputId}`}\n            chatId={chatId}\n            threadId={threadId}\n            isOpen={isStickerTooltipOpen}\n            onStickerSelect={handleStickerSelect}\n            onClose={closeStickerTooltip}\n          />\n          <EmojiTooltip\n            key={`emoji-tooltip-${editableInputId}`}\n            isOpen={isEmojiTooltipOpen}\n            emojis={filteredEmojis}\n            customEmojis={filteredCustomEmojis}\n            addRecentEmoji={addRecentEmoji}\n            addRecentCustomEmoji={addRecentCustomEmoji}\n            onEmojiSelect={insertEmoji}\n            onCustomEmojiSelect={insertEmoji}\n            onClose={closeEmojiTooltip}\n          />\n        </div>\n      </div>\n      {canSendOneTimeMedia && activeVoiceRecording && (\n        <Button\n          className={buildClassName('view-once', isViewOnceEnabled && 'active')}\n          round\n          color=\"secondary\"\n          ariaLabel={lang('Chat.PlayOnceVoiceMessageTooltip')}\n          onClick={toogleViewOnceEnabled}\n        >\n          <Icon name=\"view-once\" />\n          <Icon name=\"one-filled\" />\n        </Button>\n      )}\n      {activeVoiceRecording && (\n        <Button\n          round\n          color=\"danger\"\n          className=\"cancel\"\n          onClick={stopRecordingVoice}\n          ariaLabel=\"Cancel voice recording\"\n        >\n          <i className=\"icon icon-delete\" />\n        </Button>\n      )}\n      {isInStoryViewer && !activeVoiceRecording && (\n        <Button\n          round\n          className=\"story-reaction-button\"\n          color=\"secondary\"\n          onClick={handleLikeStory}\n          onContextMenu={handleStoryPickerContextMenu}\n          onMouseDown={handleBeforeStoryPickerContextMenu}\n          ariaLabel={lang('AccDescrLike')}\n          ref={storyReactionRef}\n        >\n          {sentStoryReaction && (\n            <ReactionAnimatedEmoji\n              key={'documentId' in sentStoryReaction ? sentStoryReaction.documentId : sentStoryReaction.emoticon}\n              containerId={getStoryKey(chatId, storyId!)}\n              reaction={sentStoryReaction}\n              withEffectOnly={isSentStoryReactionHeart}\n            />\n          )}\n          {(!sentStoryReaction || isSentStoryReactionHeart) && (\n            <i\n              className={buildClassName(\n                'icon',\n                'icon-heart',\n                isSentStoryReactionHeart && 'story-reaction-heart',\n              )}\n              aria-hidden\n            />\n          )}\n        </Button>\n      )}\n      <Button\n        ref={mainButtonRef}\n        round\n        color=\"secondary\"\n        className={buildClassName(\n          mainButtonState,\n          'main-button',\n          !isReady && 'not-ready',\n          activeVoiceRecording && 'recording',\n        )}\n        disabled={areVoiceMessagesNotAllowed}\n        allowDisabledClick\n        noFastClick\n        ariaLabel={lang(sendButtonAriaLabel)}\n        onClick={mainButtonHandler}\n        onContextMenu={\n          mainButtonState === MainButtonState.Send && canShowCustomSendMenu ? handleContextMenu : undefined\n        }\n      >\n        <i className=\"icon icon-send\" />\n        <i className=\"icon icon-microphone-alt\" />\n        {onForward && <i className=\"icon icon-forward\" />}\n        {isInMessageList && <i className=\"icon icon-schedule\" />}\n        {isInMessageList && <i className=\"icon icon-check\" />}\n      </Button>\n      {effectEmoji && (\n        <span className=\"effect-icon\" onClick={handleRemoveEffect}>\n          {renderText(effectEmoji)}\n        </span>\n      )}\n      {effect && canPlayEffect && (\n        <MessageEffect\n          shouldPlay={shouldPlayEffect}\n          effect={effect}\n          onStop={handleStopEffect}\n        />\n      )}\n      {canShowCustomSendMenu && (\n        <CustomSendMenu\n          isOpen={isCustomSendMenuOpen}\n          canSchedule={isInMessageList && !isViewOnceEnabled}\n          canScheduleUntilOnline={canScheduleUntilOnline && !isViewOnceEnabled}\n          onSendSilent={!isChatWithSelf ? handleSendSilent : undefined}\n          onSendSchedule={!isInScheduledList ? handleSendScheduled : undefined}\n          onSendWhenOnline={handleSendWhenOnline}\n          onRemoveEffect={handleRemoveEffect}\n          onClose={handleContextMenuClose}\n          onCloseAnimationEnd={handleContextMenuHide}\n          isSavedMessages={isChatWithSelf}\n          chatId={chatId}\n          withEffects={areEffectsSupported}\n          hasCurrentEffect={Boolean(effect)}\n          effectReactions={effectReactions}\n          allAvailableReactions={availableReactions}\n          onToggleReaction={handleToggleEffectReaction}\n          isCurrentUserPremium={isCurrentUserPremium}\n          isInSavedMessages={isChatWithSelf}\n          isInStoryViewer={isInStoryViewer}\n          canPlayAnimatedEmojis={canPlayAnimatedEmojis}\n        />\n      )}\n      {calendar}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, {\n    chatId, threadId, storyId, messageListType, isMobile, type,\n  }): StateProps => {\n    const chat = selectChat(global, chatId);\n    const chatBot = chatId !== REPLIES_USER_ID ? selectBot(global, chatId) : undefined;\n    const isChatWithBot = Boolean(chatBot);\n    const isChatWithSelf = selectIsChatWithSelf(global, chatId);\n    const isChatWithUser = isUserId(chatId);\n    const chatBotFullInfo = isChatWithBot ? selectUserFullInfo(global, chatBot.id) : undefined;\n    const chatFullInfo = !isChatWithUser ? selectChatFullInfo(global, chatId) : undefined;\n    const messageWithActualBotKeyboard = (isChatWithBot || !isChatWithUser)\n      && selectNewestMessageWithBotKeyboardButtons(global, chatId, threadId);\n    const scheduledIds = selectScheduledIds(global, chatId, threadId);\n    const {\n      language, shouldSuggestStickers, shouldSuggestCustomEmoji, shouldUpdateStickerSetOrder,\n    } = global.settings.byKey;\n    const baseEmojiKeywords = global.emojiKeywords[BASE_EMOJI_KEYWORD_LANG];\n    const emojiKeywords = language !== BASE_EMOJI_KEYWORD_LANG ? global.emojiKeywords[language] : undefined;\n    const botKeyboardMessageId = messageWithActualBotKeyboard ? messageWithActualBotKeyboard.id : undefined;\n    const keyboardMessage = botKeyboardMessageId ? selectChatMessage(global, chatId, botKeyboardMessageId) : undefined;\n    const { currentUserId } = global;\n    const currentUser = selectUser(global, currentUserId!)!;\n    const defaultSendAsId = chatFullInfo ? chatFullInfo?.sendAsId || currentUserId : undefined;\n    const sendAsId = chat?.sendAsPeerIds && defaultSendAsId && (\n      chat.sendAsPeerIds.some((peer) => peer.id === defaultSendAsId)\n        ? defaultSendAsId\n        : (chat?.adminRights?.anonymous ? chat?.id : undefined)\n    );\n    const sendAsUser = sendAsId ? selectUser(global, sendAsId) : undefined;\n    const sendAsChat = !sendAsUser && sendAsId ? selectChat(global, sendAsId) : undefined;\n    const requestedDraft = selectRequestedDraft(global, chatId);\n    const requestedDraftFiles = selectRequestedDraftFiles(global, chatId);\n\n    const tabState = selectTabState(global);\n    const isStoryViewerOpen = Boolean(tabState.storyViewer.storyId);\n\n    const currentMessageList = selectCurrentMessageList(global);\n    const isForCurrentMessageList = chatId === currentMessageList?.chatId\n      && threadId === currentMessageList?.threadId\n      && messageListType === currentMessageList?.type\n      && !isStoryViewerOpen;\n    const user = selectUser(global, chatId);\n    const canSendVoiceByPrivacy = (user && !selectUserFullInfo(global, user.id)?.noVoiceMessages) ?? true;\n    const slowMode = chatFullInfo?.slowMode;\n    const isCurrentUserPremium = selectIsCurrentUserPremium(global);\n\n    const editingDraft = messageListType === 'scheduled'\n      ? selectEditingScheduledDraft(global, chatId)\n      : selectEditingDraft(global, chatId, threadId);\n\n    const story = storyId && selectPeerStory(global, chatId, storyId);\n    const sentStoryReaction = story && 'sentReaction' in story ? story.sentReaction : undefined;\n    const draft = selectDraft(global, chatId, threadId);\n    const replyToMessage = draft?.replyInfo\n      ? selectChatMessage(global, chatId, draft.replyInfo.replyToMsgId)\n      : undefined;\n    const replyToTopic = chat?.isForum && chat.isForumAsMessages && threadId === MAIN_THREAD_ID && replyToMessage\n      ? selectTopicFromMessage(global, replyToMessage)\n      : undefined;\n    const isInScheduledList = messageListType === 'scheduled';\n\n    const canSendQuickReplies = isChatWithUser && !isChatWithBot && !isInScheduledList && !isChatWithSelf;\n\n    const noWebPage = selectNoWebPage(global, chatId, threadId);\n\n    const isContactRequirePremium = selectUserFullInfo(global, chatId)?.isContactRequirePremium;\n    const areEffectsSupported = isChatWithUser && !isChatWithBot\n    && !isInScheduledList && !isChatWithSelf && type !== 'story' && chatId !== SERVICE_NOTIFICATIONS_USER_ID;\n    const canPlayEffect = selectPerformanceSettingsValue(global, 'stickerEffects');\n    const shouldPlayEffect = tabState.shouldPlayEffectInComposer;\n    const effectId = areEffectsSupported && draft?.effectId;\n    const effect = effectId ? global.availableEffectById[effectId] : undefined;\n    const effectReactions = global.reactions.effectReactions;\n\n    return {\n      availableReactions: global.reactions.availableReactions,\n      topReactions: type === 'story' ? global.reactions.topReactions : undefined,\n      isOnActiveTab: !tabState.isBlurred,\n      editingMessage: selectEditingMessage(global, chatId, threadId, messageListType),\n      draft,\n      chat,\n      isChatWithBot,\n      isChatWithSelf,\n      isForCurrentMessageList,\n      canScheduleUntilOnline: selectCanScheduleUntilOnline(global, chatId),\n      isChannel: chat ? isChatChannel(chat) : undefined,\n      isRightColumnShown: selectIsRightColumnShown(global, isMobile),\n      isSelectModeActive: selectIsInSelectMode(global),\n      withScheduledButton: (\n        messageListType === 'thread'\n        && Boolean(scheduledIds?.length)\n      ),\n      isInScheduledList,\n      botKeyboardMessageId,\n      botKeyboardPlaceholder: keyboardMessage?.keyboardPlaceholder,\n      isForwarding: chatId === tabState.forwardMessages.toChatId,\n      pollModal: tabState.pollModal,\n      stickersForEmoji: global.stickers.forEmoji.stickers,\n      customEmojiForEmoji: global.customEmojis.forEmoji.stickers,\n      chatFullInfo,\n      topInlineBotIds: global.topInlineBots?.userIds,\n      currentUserId,\n      currentUser,\n      contentToBeScheduled: tabState.contentToBeScheduled,\n      shouldSuggestStickers,\n      shouldSuggestCustomEmoji,\n      shouldUpdateStickerSetOrder,\n      recentEmojis: global.recentEmojis,\n      baseEmojiKeywords: baseEmojiKeywords?.keywords,\n      emojiKeywords: emojiKeywords?.keywords,\n      inlineBots: tabState.inlineBots.byUsername,\n      isInlineBotLoading: tabState.inlineBots.isLoading,\n      botCommands: chatBotFullInfo ? (chatBotFullInfo.botInfo?.commands || false) : undefined,\n      botMenuButton: chatBotFullInfo?.botInfo?.menuButton,\n      sendAsUser,\n      sendAsChat,\n      sendAsId,\n      editingDraft,\n      requestedDraft,\n      requestedDraftFiles,\n      attachBots: global.attachMenu.bots,\n      attachMenuPeerType: selectChatType(global, chatId),\n      theme: selectTheme(global),\n      fileSizeLimit: selectCurrentLimit(global, 'uploadMaxFileparts') * MAX_UPLOAD_FILEPART_SIZE,\n      captionLimit: selectCurrentLimit(global, 'captionLength'),\n      isCurrentUserPremium,\n      canSendVoiceByPrivacy,\n      attachmentSettings: global.attachmentSettings,\n      slowMode,\n      currentMessageList,\n      isReactionPickerOpen: selectIsReactionPickerOpen(global),\n      canBuyPremium: !isCurrentUserPremium && !selectIsPremiumPurchaseBlocked(global),\n      canPlayAnimatedEmojis: selectCanPlayAnimatedEmojis(global),\n      canSendOneTimeMedia: !isChatWithSelf && isChatWithUser && !isChatWithBot && !isInScheduledList,\n      shouldCollectDebugLogs: global.settings.byKey.shouldCollectDebugLogs,\n      sentStoryReaction,\n      stealthMode: global.stories.stealthMode,\n      replyToTopic,\n      quickReplyMessages: global.quickReplies.messagesById,\n      quickReplies: global.quickReplies.byId,\n      canSendQuickReplies,\n      noWebPage,\n      webPagePreview: selectTabState(global).webPagePreview,\n      isContactRequirePremium,\n      effect,\n      effectReactions,\n      areEffectsSupported,\n      canPlayEffect,\n      shouldPlayEffect,\n    };\n  },\n)(Composer));\n","import { useState } from '../../../../lib/teact/teact';\nimport { getActions } from '../../../../global';\n\nimport type { ApiAttachment, ApiMessage } from '../../../../api/types';\n\nimport { canReplaceMessageMedia, getAttachmentMediaType } from '../../../../global/helpers';\nimport { MEMO_EMPTY_ARRAY } from '../../../../util/memo';\nimport buildAttachment from '../helpers/buildAttachment';\n\nimport useLastCallback from '../../../../hooks/useLastCallback';\nimport useOldLang from '../../../../hooks/useOldLang';\n\nexport default function useAttachmentModal({\n  attachments,\n  fileSizeLimit,\n  setHtml,\n  setAttachments,\n  chatId,\n  canSendAudios,\n  canSendVideos,\n  canSendPhotos,\n  canSendDocuments,\n  insertNextText,\n  editedMessage,\n}: {\n  attachments: ApiAttachment[];\n  fileSizeLimit: number;\n  setHtml: (html: string) => void;\n  setAttachments: (attachments: ApiAttachment[]) => void;\n  chatId: string;\n  canSendAudios?: boolean;\n  canSendVideos?: boolean;\n  canSendPhotos?: boolean;\n  canSendDocuments?: boolean;\n  insertNextText: VoidFunction;\n  editedMessage: ApiMessage | undefined;\n}) {\n  const lang = useOldLang();\n  const { openLimitReachedModal, showAllowedMessageTypesNotification, showNotification } = getActions();\n  const [shouldForceAsFile, setShouldForceAsFile] = useState<boolean>(false);\n  const [shouldForceCompression, setShouldForceCompression] = useState<boolean>(false);\n  const [shouldSuggestCompression, setShouldSuggestCompression] = useState<boolean | undefined>(undefined);\n\n  const handleClearAttachments = useLastCallback(() => {\n    setAttachments(MEMO_EMPTY_ARRAY);\n    insertNextText();\n  });\n\n  const handleSetAttachments = useLastCallback(\n    (newValue: ApiAttachment[] | ((current: ApiAttachment[]) => ApiAttachment[])) => {\n      const newAttachments = typeof newValue === 'function' ? newValue(attachments) : newValue;\n      if (!newAttachments.length) {\n        handleClearAttachments();\n        return;\n      }\n\n      if (newAttachments.some((attachment) => {\n        const type = getAttachmentMediaType(attachment);\n\n        return (type === 'audio' && !canSendAudios && !canSendDocuments)\n          || (type === 'video' && !canSendVideos && !canSendDocuments)\n          || (type === 'photo' && !canSendPhotos && !canSendDocuments)\n          || (type === 'file' && !canSendDocuments);\n      })) {\n        showAllowedMessageTypesNotification({ chatId });\n      } else if (newAttachments.some(({ size }) => size > fileSizeLimit)) {\n        openLimitReachedModal({\n          limit: 'uploadMaxFileparts',\n        });\n      } else {\n        setAttachments(newAttachments);\n        const shouldForce = newAttachments.some((attachment) => {\n          const type = getAttachmentMediaType(attachment);\n\n          return (type === 'audio' && !canSendAudios)\n            || (type === 'video' && !canSendVideos)\n            || (type === 'photo' && !canSendPhotos);\n        });\n\n        setShouldForceAsFile(Boolean(shouldForce && canSendDocuments));\n        setShouldForceCompression(!canSendDocuments);\n      }\n    },\n  );\n\n  const handleAppendFiles = useLastCallback(async (files: File[], isSpoiler?: boolean) => {\n    if (editedMessage) {\n      const newAttachment = await buildAttachment(files[0].name, files[0]);\n      const canReplace = editedMessage && canReplaceMessageMedia(editedMessage, newAttachment);\n\n      if (editedMessage?.groupedId) {\n        if (canReplace) {\n          handleSetAttachments([newAttachment]);\n        } else {\n          showNotification({ message: lang('lng_edit_media_album_error') });\n        }\n      } else {\n        handleSetAttachments([newAttachment]);\n      }\n    } else {\n      const newAttachments = await Promise.all(files.map((file) => (\n        buildAttachment(file.name, file, { shouldSendAsSpoiler: isSpoiler || undefined })\n      )));\n      handleSetAttachments([...attachments, ...newAttachments]);\n    }\n  });\n\n  const handleFileSelect = useLastCallback(async (files: File[], suggestCompression?: boolean) => {\n    if (editedMessage) {\n      const newAttachment = await buildAttachment(files[0].name, files[0]);\n      const canReplace = editedMessage && canReplaceMessageMedia(editedMessage, newAttachment);\n\n      if (editedMessage?.groupedId) {\n        if (canReplace) {\n          handleSetAttachments([newAttachment]);\n        } else {\n          showNotification({ message: lang('lng_edit_media_album_error') });\n        }\n      } else {\n        handleSetAttachments([newAttachment]);\n      }\n    } else {\n      const newAttachments = await Promise.all(files.map((file) => buildAttachment(file.name, file)));\n      handleSetAttachments(newAttachments);\n    }\n    setShouldSuggestCompression(suggestCompression);\n  });\n\n  return {\n    shouldSuggestCompression,\n    handleAppendFiles,\n    handleFileSelect,\n    onCaptionUpdate: setHtml,\n    handleClearAttachments,\n    handleSetAttachments,\n    shouldForceCompression,\n    shouldForceAsFile,\n  };\n}\n","import { useEffect, useRef, useState } from '../../../../lib/teact/teact';\n\nimport { requestMutation } from '../../../../lib/fasterdom/fasterdom';\nimport captureEscKeyListener from '../../../../util/captureEscKeyListener';\nimport * as voiceRecording from '../../../../util/voiceRecording';\nimport { IS_SAFARI, IS_VOICE_RECORDING_SUPPORTED } from '../../../../util/windowEnvironment';\n\nimport useLastCallback from '../../../../hooks/useLastCallback';\n\ntype ActiveVoiceRecording =\n  { stop: () => Promise<voiceRecording.Result>; pause: NoneToVoidFunction }\n  | undefined;\n\nconst useVoiceRecording = () => {\n  // eslint-disable-next-line no-null/no-null\n  const recordButtonRef = useRef<HTMLButtonElement>(null);\n  const [activeVoiceRecording, setActiveVoiceRecording] = useState<ActiveVoiceRecording>();\n  const startRecordTimeRef = useRef<number>();\n  const [currentRecordTime, setCurrentRecordTime] = useState<number | undefined>();\n  const [isViewOnceEnabled, setIsViewOnceEnabled] = useState(false);\n\n  useEffect(() => {\n    // Preloading worker fixes silent first record on iOS\n    if (IS_SAFARI && IS_VOICE_RECORDING_SUPPORTED) {\n      void voiceRecording.init();\n    }\n  }, []);\n\n  const startRecordingVoice = useLastCallback(async () => {\n    try {\n      const { stop, pause } = await voiceRecording.start((tickVolume: number) => {\n        if (recordButtonRef.current) {\n          if (startRecordTimeRef.current && Date.now() % 4 === 0) {\n            requestMutation(() => {\n              if (!recordButtonRef.current) return;\n              recordButtonRef.current.style.boxShadow = `0 0 0 ${(tickVolume || 0) * 50}px rgba(0,0,0,.15)`;\n            });\n          }\n          setCurrentRecordTime(Date.now());\n        }\n      });\n      startRecordTimeRef.current = Date.now();\n      setCurrentRecordTime(Date.now());\n\n      setActiveVoiceRecording({ stop, pause });\n    } catch (err) {\n      // eslint-disable-next-line no-console\n      console.error(err);\n    }\n  });\n\n  const pauseRecordingVoice = useLastCallback(() => {\n    if (!activeVoiceRecording) {\n      return undefined;\n    }\n\n    requestMutation(() => {\n      if (recordButtonRef.current) {\n        recordButtonRef.current!.style.boxShadow = 'none';\n      }\n    });\n\n    try {\n      return activeVoiceRecording!.pause();\n    } catch (err) {\n      // eslint-disable-next-line no-console\n      console.error(err);\n      return undefined;\n    }\n  });\n\n  const stopRecordingVoice = useLastCallback(() => {\n    if (!activeVoiceRecording) {\n      return undefined;\n    }\n\n    setActiveVoiceRecording(undefined);\n    startRecordTimeRef.current = undefined;\n    setCurrentRecordTime(undefined);\n\n    requestMutation(() => {\n      if (recordButtonRef.current) {\n        recordButtonRef.current.style.boxShadow = 'none';\n      }\n    });\n\n    try {\n      return activeVoiceRecording!.stop();\n    } catch (err) {\n      // eslint-disable-next-line no-console\n      console.error(err);\n      return undefined;\n    }\n  });\n\n  useEffect(() => {\n    return activeVoiceRecording ? captureEscKeyListener(stopRecordingVoice) : undefined;\n  }, [activeVoiceRecording, stopRecordingVoice]);\n\n  const toogleViewOnceEnabled = useLastCallback(() => {\n    setIsViewOnceEnabled(!isViewOnceEnabled);\n  });\n\n  return {\n    startRecordingVoice,\n    pauseRecordingVoice,\n    stopRecordingVoice,\n    activeVoiceRecording,\n    currentRecordTime,\n    recordButtonRef,\n    startRecordTimeRef,\n    isViewOnceEnabled,\n    setIsViewOnceEnabled,\n    toogleViewOnceEnabled,\n  };\n};\n\nexport default useVoiceRecording;\n","export default function deleteLastCharacterOutsideSelection(html: string) {\n  const tempInput = document.createElement('div');\n  tempInput.contentEditable = 'true';\n  tempInput.style.position = 'absolute';\n  tempInput.style.left = '-10000px';\n  tempInput.style.top = '-10000px';\n  tempInput.innerHTML = html;\n  tempInput.className = 'allow-selection'; // Patch for Safari\n  document.body.appendChild(tempInput);\n  let element = tempInput.lastChild!;\n\n  if (element.lastChild) {\n    // Selects the last and the deepest child of the element.\n    while (element.lastChild) {\n      element = element.lastChild;\n    }\n  }\n\n  // Gets length of the element's content.\n  const textLength = element.textContent!.length;\n  const range = document.createRange();\n  const selection = window.getSelection()!;\n\n  // Sets selection position to the end of the element.\n  range.setStart(element, textLength);\n  range.setEnd(element, textLength);\n  selection.removeAllRanges();\n  selection.addRange(range);\n  document.execCommand('delete', false);\n\n  const result = tempInput.innerHTML;\n  document.body.removeChild(tempInput);\n\n  return result;\n}\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { ApiChat } from '../../api/types';\n\nimport {\n  getChatTitle,\n  getPrivateChatUserId,\n  getUserFirstOrLastName,\n  isChatBasicGroup,\n  isChatChannel,\n  isChatSuperGroup,\n  isUserBot,\n  isUserId,\n} from '../../global/helpers';\nimport { selectIsChatWithSelf, selectUser } from '../../global/selectors';\nimport renderText from './helpers/renderText';\n\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Button from '../ui/Button';\nimport Modal from '../ui/Modal';\nimport Avatar from './Avatar';\n\nimport './DeleteChatModal.scss';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  chat: ApiChat;\n  isSavedDialog?: boolean;\n  onClose: () => void;\n  onCloseAnimationEnd?: () => void;\n};\n\ntype StateProps = {\n  isChannel: boolean;\n  isChatWithSelf?: boolean;\n  isBot?: boolean;\n  isPrivateChat: boolean;\n  isBasicGroup: boolean;\n  isSuperGroup: boolean;\n  currentUserId: string | undefined;\n  canDeleteForAll?: boolean;\n  contactName?: string;\n};\n\nconst DeleteChatModal: FC<OwnProps & StateProps> = ({\n  isOpen,\n  chat,\n  isSavedDialog,\n  isChannel,\n  isPrivateChat,\n  isChatWithSelf,\n  isBot,\n  isBasicGroup,\n  isSuperGroup,\n  currentUserId,\n  canDeleteForAll,\n  contactName,\n  onClose,\n  onCloseAnimationEnd,\n}) => {\n  const {\n    leaveChannel,\n    deleteHistory,\n    deleteSavedHistory,\n    deleteChannel,\n    deleteChatUser,\n    blockUser,\n  } = getActions();\n\n  const lang = useOldLang();\n  const chatTitle = getChatTitle(lang, chat);\n\n  const handleDeleteForAll = useCallback(() => {\n    deleteHistory({ chatId: chat.id, shouldDeleteForAll: true });\n\n    onClose();\n  }, [chat.id, onClose]);\n\n  const handleDeleteAndStop = useCallback(() => {\n    deleteHistory({ chatId: chat.id, shouldDeleteForAll: true });\n    blockUser({ userId: chat.id });\n\n    onClose();\n  }, [chat.id, onClose]);\n\n  const handleDeleteChat = useCallback(() => {\n    if (isSavedDialog) {\n      deleteSavedHistory({ chatId: chat.id });\n    } else if (isPrivateChat) {\n      deleteHistory({ chatId: chat.id, shouldDeleteForAll: false });\n    } else if (isBasicGroup) {\n      deleteChatUser({ chatId: chat.id, userId: currentUserId! });\n      deleteHistory({ chatId: chat.id, shouldDeleteForAll: false });\n    } else if ((isChannel || isSuperGroup) && !chat.isCreator) {\n      leaveChannel({ chatId: chat.id });\n    } else if ((isChannel || isSuperGroup) && chat.isCreator) {\n      deleteChannel({ chatId: chat.id });\n    }\n    onClose();\n  }, [\n    isPrivateChat,\n    isBasicGroup,\n    isChannel,\n    isSuperGroup,\n    currentUserId,\n    chat.isCreator,\n    chat.id,\n    isSavedDialog,\n    onClose,\n  ]);\n\n  const handleLeaveChat = useCallback(() => {\n    if (isChannel || isSuperGroup) {\n      leaveChannel({ chatId: chat.id });\n      onClose();\n    } else {\n      handleDeleteChat();\n    }\n  }, [chat.id, handleDeleteChat, isChannel, isSuperGroup, leaveChannel, onClose]);\n\n  function renderHeader() {\n    return (\n      <div className=\"modal-header\" dir={lang.isRtl ? 'rtl' : undefined}>\n        <Avatar\n          size=\"tiny\"\n          peer={chat}\n          isSavedMessages={isChatWithSelf}\n        />\n        <h3 className=\"modal-title\">{lang(renderTitle())}</h3>\n      </div>\n    );\n  }\n\n  function renderTitle() {\n    if (isSavedDialog) {\n      return isChatWithSelf ? 'ClearHistoryMyNotesTitle' : 'ClearHistoryTitleSingle2';\n    }\n\n    if (isChannel && !chat.isCreator) {\n      return 'LeaveChannel';\n    }\n\n    if (isChannel && chat.isCreator) {\n      return 'ChannelDelete';\n    }\n\n    if (isBasicGroup || isSuperGroup) {\n      return 'Group.LeaveGroup';\n    }\n\n    return 'DeleteChatUser';\n  }\n\n  function renderContent() {\n    if (isSavedDialog) {\n      return (\n        <p>\n          {renderText(\n            isChatWithSelf ? lang('ClearHistoryMyNotesMessage') : lang('ClearHistoryMessageSingle', chatTitle),\n            ['simple_markdown', 'emoji'],\n          )}\n        </p>\n      );\n    }\n    if (isChannel && chat.isCreator) {\n      return (\n        <p>\n          {renderText(lang('ChatList.DeleteAndLeaveGroupConfirmation', chatTitle), ['simple_markdown', 'emoji'])}\n        </p>\n      );\n    }\n\n    if ((isChannel && !chat.isCreator) || isBasicGroup || isSuperGroup) {\n      return <p>{renderText(lang('ChannelLeaveAlertWithName', chatTitle), ['simple_markdown', 'emoji'])}</p>;\n    }\n\n    return <p>{renderText(lang('ChatList.DeleteChatConfirmation', contactName), ['simple_markdown', 'emoji'])}</p>;\n  }\n\n  function renderActionText() {\n    if (isSavedDialog) {\n      return 'Delete';\n    }\n\n    if (isChannel && !chat.isCreator) {\n      return 'LeaveChannel';\n    }\n    if (isChannel && chat.isCreator) {\n      return 'Chat.Input.Delete';\n    }\n\n    if (isBasicGroup || isSuperGroup) {\n      return 'Group.LeaveGroup';\n    }\n\n    return canDeleteForAll ? 'ChatList.DeleteForCurrentUser' : 'Delete';\n  }\n\n  return (\n    <Modal\n      isOpen={isOpen}\n      className=\"DeleteChatModal\"\n      header={renderHeader()}\n      onClose={onClose}\n      onCloseAnimationEnd={onCloseAnimationEnd}\n    >\n      {renderContent()}\n      <div className=\"dialog-buttons-column\">\n        {isBot && !isSavedDialog && (\n          <Button color=\"danger\" className=\"confirm-dialog-button\" isText onClick={handleDeleteAndStop}>\n            {lang('DeleteAndStop')}\n          </Button>\n        )}\n        {canDeleteForAll && (\n          <Button color=\"danger\" className=\"confirm-dialog-button\" isText onClick={handleDeleteForAll}>\n            {contactName ? renderText(lang('ChatList.DeleteForEveryone', contactName)) : lang('DeleteForAll')}\n          </Button>\n        )}\n        {!isPrivateChat && chat.isCreator && !isSavedDialog && (\n          <Button color=\"danger\" className=\"confirm-dialog-button\" isText onClick={handleDeleteChat}>\n            {lang('DeleteForAll')}\n          </Button>\n        )}\n        <Button\n          color=\"danger\"\n          className=\"confirm-dialog-button\"\n          isText\n          onClick={(isPrivateChat || isSavedDialog) ? handleDeleteChat : handleLeaveChat}\n        >\n          {lang(renderActionText())}\n        </Button>\n        <Button className=\"confirm-dialog-button\" isText onClick={onClose}>{lang('Cancel')}</Button>\n      </div>\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chat, isSavedDialog }): StateProps => {\n    const isPrivateChat = isUserId(chat.id);\n    const isChatWithSelf = selectIsChatWithSelf(global, chat.id);\n    const user = isPrivateChat && selectUser(global, getPrivateChatUserId(chat)!);\n    const isBot = user && isUserBot(user) && !chat.isSupport;\n    const canDeleteForAll = (isPrivateChat && !isChatWithSelf && !isBot && !isSavedDialog);\n    const contactName = isPrivateChat\n      ? getUserFirstOrLastName(selectUser(global, getPrivateChatUserId(chat)!))\n      : undefined;\n\n    return {\n      isPrivateChat,\n      isChatWithSelf,\n      isBot,\n      isChannel: isChatChannel(chat),\n      isBasicGroup: isChatBasicGroup(chat),\n      isSuperGroup: isChatSuperGroup(chat),\n      currentUserId: global.currentUserId,\n      canDeleteForAll,\n      contactName,\n    };\n  },\n)(DeleteChatModal));\n","import React, {\n  memo, useEffect, useRef, useState,\n} from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport type { ApiDocument, ApiMessage } from '../../api/types';\nimport type { ObserveFn } from '../../hooks/useIntersectionObserver';\n\nimport {\n  getDocumentMediaHash,\n  getMediaFormat,\n  getMediaThumbUri,\n  getMediaTransferState,\n  isDocumentVideo,\n} from '../../global/helpers';\nimport { getDocumentExtension, getDocumentHasPreview } from './helpers/documentInfo';\n\nimport useFlag from '../../hooks/useFlag';\nimport { useIsIntersecting } from '../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useMedia from '../../hooks/useMedia';\nimport useMediaWithLoadProgress from '../../hooks/useMediaWithLoadProgress';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Checkbox from '../ui/Checkbox';\nimport ConfirmDialog from '../ui/ConfirmDialog';\nimport File from './File';\n\ntype OwnProps = {\n  document: ApiDocument;\n  observeIntersection?: ObserveFn;\n  smaller?: boolean;\n  isSelected?: boolean;\n  isSelectable?: boolean;\n  canAutoLoad?: boolean;\n  uploadProgress?: number;\n  withDate?: boolean;\n  datetime?: number;\n  className?: string;\n  sender?: string;\n  autoLoadFileMaxSizeMb?: number;\n  isDownloading?: boolean;\n  shouldWarnAboutSvg?: boolean;\n  onCancelUpload?: () => void;\n  onMediaClick?: () => void;\n} & ({\n  message: ApiMessage;\n  onDateClick: (arg: ApiMessage) => void;\n} | {\n  message?: ApiMessage;\n  onDateClick?: never;\n});\n\nconst BYTES_PER_MB = 1024 * 1024;\nconst SVG_EXTENSIONS = new Set(['svg', 'svgz']);\n\nconst Document = ({\n  document,\n  observeIntersection,\n  smaller,\n  canAutoLoad,\n  autoLoadFileMaxSizeMb,\n  uploadProgress,\n  withDate,\n  datetime,\n  className,\n  sender,\n  isSelected,\n  isSelectable,\n  shouldWarnAboutSvg,\n  isDownloading,\n  message,\n  onCancelUpload,\n  onMediaClick,\n  onDateClick,\n}: OwnProps) => {\n  const { cancelMediaDownload, downloadMedia, setSettingOption } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n\n  const lang = useOldLang();\n  const [isSvgDialogOpen, openSvgDialog, closeSvgDialog] = useFlag();\n  const [shouldNotWarnAboutSvg, setShouldNotWarnAboutSvg] = useState(false);\n\n  const { fileName, size, timestamp } = document;\n  const extension = getDocumentExtension(document) || '';\n\n  const isIntersecting = useIsIntersecting(ref, observeIntersection);\n  const [wasIntersected, markIntersected] = useFlag();\n  useEffect(() => {\n    if (isIntersecting) {\n      markIntersected();\n    }\n  }, [isIntersecting, markIntersected]);\n\n  // Auto-loading does not use global download manager because requires additional click to save files locally\n  const [isLoadAllowed, setIsLoadAllowed] = useState(\n    canAutoLoad && (!autoLoadFileMaxSizeMb || size <= autoLoadFileMaxSizeMb * BYTES_PER_MB),\n  );\n\n  const shouldDownload = Boolean(isDownloading || (isLoadAllowed && wasIntersected));\n\n  const documentHash = getDocumentMediaHash(document, 'download');\n  const { loadProgress: downloadProgress, mediaData } = useMediaWithLoadProgress(\n    documentHash, !shouldDownload, getMediaFormat(document, 'download'), undefined, true,\n  );\n  const isLoaded = Boolean(mediaData);\n\n  const {\n    isUploading, isTransferring, transferProgress,\n  } = getMediaTransferState(\n    uploadProgress || downloadProgress,\n    shouldDownload && !isLoaded,\n    uploadProgress !== undefined,\n  );\n\n  const hasPreview = getDocumentHasPreview(document);\n  const thumbDataUri = hasPreview ? getMediaThumbUri(document) : undefined;\n  const localBlobUrl = hasPreview ? document.previewBlobUrl : undefined;\n  const previewData = useMedia(getDocumentMediaHash(document, 'pictogram'), !isIntersecting);\n\n  const withMediaViewer = onMediaClick && document.innerMediaType;\n\n  const handleDownload = useLastCallback(() => {\n    downloadMedia({ media: document, originMessage: message });\n  });\n\n  const handleClick = useLastCallback(() => {\n    if (isUploading) {\n      if (onCancelUpload) {\n        onCancelUpload();\n      }\n      return;\n    }\n\n    if (isDownloading) {\n      cancelMediaDownload({ media: document });\n      return;\n    }\n\n    if (isTransferring) {\n      setIsLoadAllowed(false);\n      return;\n    }\n\n    if (withMediaViewer) {\n      onMediaClick!();\n      return;\n    }\n\n    if (SVG_EXTENSIONS.has(extension) && shouldWarnAboutSvg) {\n      openSvgDialog();\n      return;\n    }\n\n    handleDownload();\n  });\n\n  const handleSvgConfirm = useLastCallback(() => {\n    setSettingOption({ shouldWarnAboutSvg: !shouldNotWarnAboutSvg });\n    closeSvgDialog();\n    handleDownload();\n  });\n\n  const handleDateClick = useLastCallback(() => {\n    onDateClick?.(message);\n  });\n\n  return (\n    <>\n      <File\n        ref={ref}\n        name={fileName}\n        extension={extension}\n        size={size}\n        timestamp={withDate ? datetime || timestamp : undefined}\n        thumbnailDataUri={thumbDataUri}\n        previewData={localBlobUrl || previewData}\n        smaller={smaller}\n        isTransferring={isTransferring}\n        isUploading={isUploading}\n        transferProgress={transferProgress}\n        className={className}\n        sender={sender}\n        isSelectable={isSelectable}\n        isSelected={isSelected}\n        actionIcon={withMediaViewer ? (isDocumentVideo(document) ? 'play' : 'eye') : 'download'}\n        onClick={handleClick}\n        onDateClick={onDateClick ? handleDateClick : undefined}\n      />\n      <ConfirmDialog\n        isOpen={isSvgDialogOpen}\n        onClose={closeSvgDialog}\n        confirmHandler={handleSvgConfirm}\n      >\n        {lang('lng_launch_svg_warning')}\n        <Checkbox\n          className=\"dialog-checkbox\"\n          checked={shouldNotWarnAboutSvg}\n          label={lang('lng_launch_exe_dont_ask')}\n          onCheck={setShouldNotWarnAboutSvg}\n        />\n      </ConfirmDialog>\n    </>\n  );\n};\n\nexport default memo(Document);\n","import type { FC } from '../../lib/teact/teact';\nimport React from '../../lib/teact/teact';\n\nimport buildClassName from '../../util/buildClassName';\nimport renderText from './helpers/renderText';\n\nimport useOldLang from '../../hooks/useOldLang';\n\nimport './DotAnimation.scss';\n\ntype OwnProps = {\n  content: string;\n  className?: string;\n};\n\nconst DotAnimation: FC<OwnProps> = ({ content, className }) => {\n  const lang = useOldLang();\n  return (\n    <span className={buildClassName('DotAnimation', className)} dir={lang.isRtl ? 'rtl' : 'auto'}>\n      {renderText(content)}\n      <span className=\"ellipsis\" />\n    </span>\n  );\n};\n\nexport default DotAnimation;\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useMemo, useRef, useState,\n} from '../../lib/teact/teact';\n\nimport type { IconName } from '../../types/icons';\n\nimport buildClassName from '../../util/buildClassName';\nimport { formatMediaDateTime, formatPastTimeShort } from '../../util/dates/dateFormat';\nimport { IS_CANVAS_FILTER_SUPPORTED } from '../../util/windowEnvironment';\nimport { getColorFromExtension, getFileSizeString } from './helpers/documentInfo';\nimport { getDocumentThumbnailDimensions } from './helpers/mediaDimensions';\nimport renderText from './helpers/renderText';\n\nimport useAppLayout from '../../hooks/useAppLayout';\nimport useCanvasBlur from '../../hooks/useCanvasBlur';\nimport useMediaTransitionDeprecated from '../../hooks/useMediaTransitionDeprecated';\nimport useOldLang from '../../hooks/useOldLang';\nimport useShowTransitionDeprecated from '../../hooks/useShowTransitionDeprecated';\n\nimport Link from '../ui/Link';\nimport ProgressSpinner from '../ui/ProgressSpinner';\n\nimport './File.scss';\n\ntype OwnProps = {\n  ref?: React.RefObject<HTMLDivElement>;\n  name: string;\n  extension?: string;\n  size: number;\n  timestamp?: number;\n  sender?: string;\n  thumbnailDataUri?: string;\n  previewData?: string;\n  className?: string;\n  smaller?: boolean;\n  isTransferring?: boolean;\n  isUploading?: boolean;\n  isSelectable?: boolean;\n  isSelected?: boolean;\n  transferProgress?: number;\n  actionIcon?: IconName;\n  onClick?: () => void;\n  onDateClick?: (e: React.MouseEvent<HTMLAnchorElement>) => void;\n};\n\nconst File: FC<OwnProps> = ({\n  ref,\n  name,\n  size,\n  extension = '',\n  timestamp,\n  sender,\n  thumbnailDataUri,\n  previewData,\n  className,\n  smaller,\n  isTransferring,\n  isUploading,\n  isSelectable,\n  isSelected,\n  transferProgress,\n  actionIcon,\n  onClick,\n  onDateClick,\n}) => {\n  const lang = useOldLang();\n  // eslint-disable-next-line no-null/no-null\n  let elementRef = useRef<HTMLDivElement>(null);\n  if (ref) {\n    elementRef = ref;\n  }\n\n  const { isMobile } = useAppLayout();\n  const [withThumb] = useState(!previewData);\n  const noThumb = Boolean(previewData);\n  const thumbRef = useCanvasBlur(thumbnailDataUri, noThumb, isMobile && !IS_CANVAS_FILTER_SUPPORTED);\n  const thumbClassNames = useMediaTransitionDeprecated(!noThumb);\n\n  const {\n    shouldRender: shouldSpinnerRender,\n    transitionClassNames: spinnerClassNames,\n  } = useShowTransitionDeprecated(isTransferring, undefined, true);\n\n  const color = getColorFromExtension(extension);\n  const sizeString = getFileSizeString(size);\n  const subtitle = useMemo(() => {\n    if (!isTransferring || !transferProgress) return sizeString;\n    return `${getFileSizeString(size * transferProgress)} / ${sizeString}`;\n  }, [isTransferring, size, sizeString, transferProgress]);\n\n  const { width, height } = getDocumentThumbnailDimensions(smaller);\n\n  const fullClassName = buildClassName(\n    'File',\n    className,\n    smaller && 'smaller',\n    onClick && !isUploading && 'interactive',\n    isSelected && 'file-is-selected',\n  );\n\n  return (\n    <div ref={elementRef} className={fullClassName} dir={lang.isRtl ? 'rtl' : undefined}>\n      {isSelectable && (\n        <div className=\"message-select-control\">\n          {isSelected && <i className=\"icon icon-select\" />}\n        </div>\n      )}\n      <div className=\"file-icon-container\" onClick={isUploading ? undefined : onClick}>\n        {thumbnailDataUri || previewData ? (\n          <div className=\"file-preview media-inner\">\n            <img\n              src={previewData}\n              className=\"full-media\"\n              width={width}\n              height={height}\n              draggable={false}\n              alt=\"\"\n            />\n            {withThumb && (\n              <canvas\n                ref={thumbRef}\n                className={buildClassName('thumbnail', thumbClassNames)}\n              />\n            )}\n          </div>\n        ) : (\n          <div className={`file-icon ${color}`}>\n            {extension.length <= 4 && (\n              <span className=\"file-ext\" dir=\"auto\">{extension}</span>\n            )}\n          </div>\n        )}\n        {shouldSpinnerRender && (\n          <div className={buildClassName('file-progress', color, spinnerClassNames)}>\n            <ProgressSpinner\n              progress={transferProgress}\n              size={smaller ? 's' : 'm'}\n              onClick={isUploading ? onClick : undefined}\n            />\n          </div>\n        )}\n        {onClick && (\n          <i\n            className={buildClassName(\n              'action-icon',\n              'icon',\n              actionIcon ? `icon-${actionIcon}` : 'icon-download',\n              shouldSpinnerRender && 'hidden',\n            )}\n          />\n        )}\n      </div>\n      <div className=\"file-info\">\n        <div className=\"file-title\" dir=\"auto\" title={name}>{renderText(name)}</div>\n        <div className=\"file-subtitle\" dir=\"auto\">\n          <span>\n            {subtitle}\n          </span>\n          {sender && <span className=\"file-sender\">{renderText(sender)}</span>}\n          {!sender && Boolean(timestamp) && (\n            <>\n              <span className=\"bullet\" />\n              <Link onClick={onDateClick}>{formatMediaDateTime(lang, timestamp * 1000, true)}</Link>\n            </>\n          )}\n        </div>\n      </div>\n      {sender && Boolean(timestamp) && (\n        <Link onClick={onDateClick}>{formatPastTimeShort(lang, timestamp * 1000)}</Link>\n      )}\n    </div>\n  );\n};\n\nexport default memo(File);\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useEffect, useMemo } from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type {\n  ApiChat, ApiThreadInfo, ApiTopic, ApiTypingStatus, ApiUser,\n} from '../../api/types';\nimport type { IconName } from '../../types/icons';\nimport { MediaViewerOrigin, type StoryViewerOrigin, type ThreadId } from '../../types';\n\nimport {\n  getChatTypeString,\n  getGroupStatus,\n  getMainUsername,\n  isChatSuperGroup,\n} from '../../global/helpers';\nimport {\n  selectChat,\n  selectChatMessages,\n  selectChatOnlineCount,\n  selectThreadInfo,\n  selectThreadMessagesCount,\n  selectTopic,\n  selectUser,\n} from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport { REM } from './helpers/mediaDimensions';\nimport renderText from './helpers/renderText';\n\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Transition from '../ui/Transition';\nimport Avatar from './Avatar';\nimport DotAnimation from './DotAnimation';\nimport FullNameTitle from './FullNameTitle';\nimport Icon from './icons/Icon';\nimport TopicIcon from './TopicIcon';\nimport TypingStatus from './TypingStatus';\n\nconst TOPIC_ICON_SIZE = 2.5 * REM;\n\ntype OwnProps = {\n  chatId: string;\n  threadId?: ThreadId;\n  className?: string;\n  statusIcon?: IconName;\n  typingStatus?: ApiTypingStatus;\n  avatarSize?: 'tiny' | 'small' | 'medium' | 'large' | 'jumbo';\n  status?: string;\n  withDots?: boolean;\n  withMediaViewer?: boolean;\n  withUsername?: boolean;\n  withFullInfo?: boolean;\n  withUpdatingStatus?: boolean;\n  withChatType?: boolean;\n  noEmojiStatus?: boolean;\n  emojiStatusSize?: number;\n  noRtl?: boolean;\n  noAvatar?: boolean;\n  noStatusOrTyping?: boolean;\n  withStory?: boolean;\n  storyViewerOrigin?: StoryViewerOrigin;\n  isSavedDialog?: boolean;\n  onClick?: VoidFunction;\n  onEmojiStatusClick?: NoneToVoidFunction;\n};\n\ntype StateProps =\n  {\n    chat?: ApiChat;\n    threadInfo?: ApiThreadInfo;\n    topic?: ApiTopic;\n    onlineCount?: number;\n    areMessagesLoaded: boolean;\n    messagesCount?: number;\n    self?: ApiUser;\n  };\n\nconst GroupChatInfo: FC<OwnProps & StateProps> = ({\n  typingStatus,\n  className,\n  statusIcon,\n  avatarSize = 'medium',\n  noAvatar,\n  status,\n  withDots,\n  withMediaViewer,\n  withUsername,\n  withFullInfo,\n  withUpdatingStatus,\n  withChatType,\n  threadInfo,\n  noRtl,\n  chat,\n  onlineCount,\n  areMessagesLoaded,\n  topic,\n  messagesCount,\n  noStatusOrTyping,\n  withStory,\n  storyViewerOrigin,\n  noEmojiStatus,\n  emojiStatusSize,\n  isSavedDialog,\n  self,\n  onClick,\n  onEmojiStatusClick,\n}) => {\n  const {\n    loadFullChat,\n    openMediaViewer,\n    loadMoreProfilePhotos,\n  } = getActions();\n\n  const lang = useOldLang();\n\n  const isSuperGroup = chat && isChatSuperGroup(chat);\n  const isTopic = Boolean(chat?.isForum && threadInfo && topic);\n  const { id: chatId, isMin, isRestricted } = chat || {};\n\n  useEffect(() => {\n    if (chatId && !isMin) {\n      if (withFullInfo) loadFullChat({ chatId });\n      if (withMediaViewer) loadMoreProfilePhotos({ peerId: chatId, isPreload: true });\n    }\n  }, [chatId, isMin, withFullInfo, isSuperGroup, withMediaViewer]);\n\n  const handleAvatarViewerOpen = useLastCallback(\n    (e: React.MouseEvent<HTMLDivElement, MouseEvent>, hasMedia: boolean) => {\n      if (chat && hasMedia) {\n        e.stopPropagation();\n        openMediaViewer({\n          isAvatarView: true,\n          chatId: chat.id,\n          mediaIndex: 0,\n          origin: avatarSize === 'jumbo' ? MediaViewerOrigin.ProfileAvatar : MediaViewerOrigin.MiddleHeaderAvatar,\n        });\n      }\n    },\n  );\n\n  const mainUsername = useMemo(() => chat && withUsername && getMainUsername(chat), [chat, withUsername]);\n\n  if (!chat) {\n    return undefined;\n  }\n\n  function renderStatusOrTyping() {\n    if (status) {\n      return withDots ? (\n        <DotAnimation className=\"status\" content={status} />\n      ) : (\n        <span className=\"status\" dir=\"auto\">\n          {statusIcon && <Icon className=\"status-icon\" name={statusIcon} />}\n          {renderText(status)}\n        </span>\n      );\n    }\n\n    if (withUpdatingStatus && !areMessagesLoaded && !isRestricted) {\n      return (\n        <DotAnimation className=\"status\" content={lang('Updating')} />\n      );\n    }\n\n    if (!chat) {\n      return undefined;\n    }\n\n    if (typingStatus) {\n      return <TypingStatus typingStatus={typingStatus} />;\n    }\n\n    if (isTopic) {\n      return (\n        <span className=\"status\" dir=\"auto\">\n          <Transition\n            name=\"fade\"\n            shouldRestoreHeight\n            activeKey={messagesCount !== undefined ? 1 : 2}\n            className=\"message-count-transition\"\n          >\n            {messagesCount !== undefined && lang('messages', messagesCount, 'i')}\n          </Transition>\n        </span>\n      );\n    }\n\n    if (withChatType) {\n      return (\n        <span className=\"status\" dir=\"auto\">{lang(getChatTypeString(chat))}</span>\n      );\n    }\n\n    const groupStatus = getGroupStatus(lang, chat);\n    const onlineStatus = onlineCount ? `, ${lang('OnlineCount', onlineCount, 'i')}` : undefined;\n\n    return (\n      <span className=\"status\">\n        {mainUsername && <span className=\"handle withStatus\">{mainUsername}</span>}\n        <span className=\"group-status\">{groupStatus}</span>\n        {onlineStatus && <span className=\"online-status\">{onlineStatus}</span>}\n      </span>\n    );\n  }\n\n  return (\n    <div\n      className={\n        buildClassName('ChatInfo', className)\n      }\n      dir={!noRtl && lang.isRtl ? 'rtl' : undefined}\n      onClick={onClick}\n    >\n      {!noAvatar && !isTopic && (\n        <>\n          {isSavedDialog && self && (\n            <Avatar\n              key=\"saved-messages\"\n              size={avatarSize}\n              peer={self}\n              isSavedMessages\n              className=\"saved-dialog-avatar\"\n            />\n          )}\n          <Avatar\n            key={chat.id}\n            className={buildClassName(isSavedDialog && 'overlay-avatar')}\n            size={avatarSize}\n            peer={chat}\n            withStory={withStory}\n            storyViewerOrigin={storyViewerOrigin}\n            storyViewerMode=\"single-peer\"\n            isSavedDialog={isSavedDialog}\n            onClick={withMediaViewer ? handleAvatarViewerOpen : undefined}\n          />\n        </>\n      )}\n      {isTopic && (\n        <TopicIcon\n          topic={topic!}\n          className=\"topic-header-icon\"\n          size={TOPIC_ICON_SIZE}\n        />\n      )}\n      <div className=\"info\">\n        {topic\n          ? <h3 dir=\"auto\" className=\"fullName\">{renderText(topic.title)}</h3>\n          : (\n            <FullNameTitle\n              peer={chat}\n              emojiStatusSize={emojiStatusSize}\n              withEmojiStatus={!noEmojiStatus}\n              isSavedDialog={isSavedDialog}\n              onEmojiStatusClick={onEmojiStatusClick}\n            />\n          )}\n        {!noStatusOrTyping && renderStatusOrTyping()}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId, threadId }): StateProps => {\n    const chat = selectChat(global, chatId);\n    const threadInfo = threadId ? selectThreadInfo(global, chatId, threadId) : undefined;\n    const onlineCount = chat ? selectChatOnlineCount(global, chat) : undefined;\n    const areMessagesLoaded = Boolean(selectChatMessages(global, chatId));\n    const topic = threadId ? selectTopic(global, chatId, threadId) : undefined;\n    const messagesCount = topic && selectThreadMessagesCount(global, chatId, threadId!);\n    const self = selectUser(global, global.currentUserId!);\n\n    return {\n      chat,\n      threadInfo,\n      onlineCount,\n      topic,\n      areMessagesLoaded,\n      messagesCount,\n      self,\n    };\n  },\n)(GroupChatInfo));\n","import React, { memo } from '../../lib/teact/teact';\n\nimport type { ApiMessage, ApiMessageOutgoingStatus } from '../../api/types';\n\nimport buildClassName from '../../util/buildClassName';\nimport { formatPastTimeShort } from '../../util/dates/dateFormat';\n\nimport useOldLang from '../../hooks/useOldLang';\n\nimport MessageOutgoingStatus from './MessageOutgoingStatus';\n\nimport './LastMessageMeta.scss';\n\ntype OwnProps = {\n  className?: string;\n  message: ApiMessage;\n  outgoingStatus?: ApiMessageOutgoingStatus;\n  draftDate?: number;\n};\n\nconst LastMessageMeta = ({\n  className, message, outgoingStatus, draftDate,\n}: OwnProps) => {\n  const lang = useOldLang();\n\n  const shouldUseDraft = draftDate && draftDate > message.date;\n  return (\n    <div className={buildClassName('LastMessageMeta', className)}>\n      {outgoingStatus && !shouldUseDraft && (\n        <MessageOutgoingStatus status={outgoingStatus} />\n      )}\n      <span className=\"time\">\n        {formatPastTimeShort(lang, (shouldUseDraft ? draftDate : message.date) * 1000)}\n      </span>\n    </div>\n  );\n};\n\nexport default memo(LastMessageMeta);\n","// extracted by mini-css-extract-plugin\nexport default {\"primaryLink\":\"xNjJHI7j\",\"input\":\"Ag6k_p7b\",\"moreMenu\":\"p7t3macG\",\"copy\":\"obuPXobw\",\"title\":\"vCMpiQTJ\"};","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useMemo } from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport buildClassName from '../../util/buildClassName';\nimport { copyTextToClipboard } from '../../util/clipboard';\n\nimport useAppLayout from '../../hooks/useAppLayout';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Button from '../ui/Button';\nimport DropdownMenu from '../ui/DropdownMenu';\nimport MenuItem from '../ui/MenuItem';\nimport Icon from './icons/Icon';\n\nimport styles from './LinkField.module.scss';\n\ntype OwnProps = {\n  title?: string;\n  link: string;\n  isDisabled?: boolean;\n  className?: string;\n  withShare?: boolean;\n  onRevoke?: VoidFunction;\n};\n\nconst InviteLink: FC<OwnProps> = ({\n  title,\n  link,\n  isDisabled,\n  className,\n  withShare,\n  onRevoke,\n}) => {\n  const lang = useOldLang();\n  const { showNotification, openChatWithDraft } = getActions();\n\n  const { isMobile } = useAppLayout();\n\n  const isOnlyCopy = !onRevoke;\n\n  const copyLink = useLastCallback(() => {\n    copyTextToClipboard(link);\n    showNotification({\n      message: lang('LinkCopied'),\n    });\n  });\n\n  const handleCopyClick = useLastCallback(() => {\n    if (isDisabled) return;\n    copyLink();\n  });\n\n  const handleShare = useLastCallback(() => {\n    openChatWithDraft({ text: { text: link } });\n  });\n\n  const PrimaryLinkMenuButton: FC<{ onTrigger: () => void; isOpen?: boolean }> = useMemo(() => {\n    return ({ onTrigger, isOpen }) => (\n      <Button\n        round\n        ripple={!isMobile}\n        size=\"smaller\"\n        color=\"translucent\"\n        className={isOpen ? 'active' : ''}\n        onClick={onTrigger}\n        ariaLabel={lang('AccDescrOpenMenu2')}\n      >\n        <i className=\"icon icon-more\" />\n      </Button>\n    );\n  }, [isMobile, lang]);\n\n  return (\n    <div className={className}>\n      <p className={styles.title}>\n        {lang(title || 'InviteLink.InviteLink')}\n      </p>\n      <div className={styles.primaryLink}>\n        <input\n          className={buildClassName('form-control', styles.input)}\n          value={link}\n          readOnly\n          onClick={handleCopyClick}\n        />\n        {isOnlyCopy ? (\n          <Button\n            color=\"translucent\"\n            className={styles.copy}\n            size=\"smaller\"\n            round\n            disabled={isDisabled}\n            onClick={handleCopyClick}\n          >\n            <Icon name=\"copy\" />\n          </Button>\n        ) : (\n          <DropdownMenu\n            className={styles.moreMenu}\n            trigger={PrimaryLinkMenuButton}\n            positionX=\"right\"\n          >\n            <MenuItem icon=\"copy\" onClick={handleCopyClick} disabled={isDisabled}>{lang('Copy')}</MenuItem>\n            {onRevoke && (\n              <MenuItem icon=\"delete\" onClick={onRevoke} destructive>{lang('RevokeButton')}</MenuItem>\n            )}\n          </DropdownMenu>\n        )}\n      </div>\n      {withShare && (\n        <Button\n          size=\"smaller\"\n          disabled={isDisabled}\n          onClick={handleShare}\n        >\n          {lang('FolderLinkScreen.LinkActionShare')}\n        </Button>\n      )}\n    </div>\n  );\n};\n\nexport default memo(InviteLink);\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useRef } from '../../lib/teact/teact';\n\nimport type { ApiMessage } from '../../api/types';\nimport type { ObserveFn } from '../../hooks/useIntersectionObserver';\n\nimport {\n  getMessageHtmlId,\n  getMessageIsSpoiler,\n  getMessageMediaHash,\n  getMessageMediaThumbDataUri,\n  getMessageVideo,\n} from '../../global/helpers';\nimport buildClassName from '../../util/buildClassName';\nimport { formatMediaDuration } from '../../util/dates/dateFormat';\nimport stopEvent from '../../util/stopEvent';\n\nimport useFlag from '../../hooks/useFlag';\nimport { useIsIntersecting } from '../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useMedia from '../../hooks/useMedia';\nimport useMediaTransitionDeprecated from '../../hooks/useMediaTransitionDeprecated';\n\nimport MediaSpoiler from './MediaSpoiler';\n\nimport './Media.scss';\n\ntype OwnProps = {\n  message: ApiMessage;\n  idPrefix?: string;\n  isProtected?: boolean;\n  observeIntersection?: ObserveFn;\n  onClick?: (messageId: number, chatId: string) => void;\n};\n\nconst Media: FC<OwnProps> = ({\n  message,\n  idPrefix = 'shared-media',\n  isProtected,\n  observeIntersection,\n  onClick,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n\n  const isIntersecting = useIsIntersecting(ref, observeIntersection);\n  const thumbDataUri = getMessageMediaThumbDataUri(message);\n  const mediaBlobUrl = useMedia(getMessageMediaHash(message, 'pictogram'), !isIntersecting);\n  const transitionClassNames = useMediaTransitionDeprecated(mediaBlobUrl);\n\n  const video = getMessageVideo(message);\n\n  const hasSpoiler = getMessageIsSpoiler(message);\n  const [isSpoilerShown, , hideSpoiler] = useFlag(hasSpoiler);\n\n  const handleClick = useLastCallback(() => {\n    hideSpoiler();\n    onClick!(message.id, message.chatId);\n  });\n\n  return (\n    <div\n      ref={ref}\n      id={`${idPrefix}${getMessageHtmlId(message.id)}`}\n      className=\"Media scroll-item\"\n      onClick={onClick ? handleClick : undefined}\n    >\n      <img\n        src={thumbDataUri}\n        className=\"media-miniature\"\n        alt=\"\"\n        draggable={!isProtected}\n        decoding=\"async\"\n        onContextMenu={isProtected ? stopEvent : undefined}\n      />\n      <img\n        src={mediaBlobUrl}\n        className={buildClassName('full-media', 'media-miniature', transitionClassNames)}\n        alt=\"\"\n        draggable={!isProtected}\n        decoding=\"async\"\n        onContextMenu={isProtected ? stopEvent : undefined}\n      />\n      {hasSpoiler && (\n        <MediaSpoiler\n          thumbDataUri={mediaBlobUrl || thumbDataUri}\n          isVisible={isSpoilerShown}\n          className=\"media-spoiler\"\n        />\n      )}\n      {video && <span className=\"video-duration\">{video.isGif ? 'GIF' : formatMediaDuration(video.duration)}</span>}\n      {isProtected && <span className=\"protector\" />}\n    </div>\n  );\n};\n\nexport default memo(Media);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"qF2WgYVg\",\"mask-animation\":\"pNM3cgkY\",\"maskAnimation\":\"pNM3cgkY\",\"circle-cut\":\"WiW38HGg\",\"circleCut\":\"WiW38HGg\",\"dots\":\"XBor45hE\",\"canvas\":\"eULqS2yR\",\"opacity-breath\":\"sW9ega1D\",\"opacityBreath\":\"sW9ega1D\",\"dots-animation\":\"mAAEjSPE\",\"dotsAnimation\":\"mAAEjSPE\"};","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useRef } from '../../lib/teact/teact';\n\nimport { requestMutation } from '../../lib/fasterdom/fasterdom';\nimport buildClassName from '../../util/buildClassName';\n\nimport useCanvasBlur from '../../hooks/useCanvasBlur';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useShowTransitionDeprecated from '../../hooks/useShowTransitionDeprecated';\n\nimport styles from './MediaSpoiler.module.scss';\n\ntype OwnProps = {\n  isVisible: boolean;\n  withAnimation?: boolean;\n  thumbDataUri?: string;\n  width?: number;\n  height?: number;\n  className?: string;\n};\n\nconst BLUR_RADIUS = 25;\nconst ANIMATION_DURATION = 500;\n\nconst MediaSpoiler: FC<OwnProps> = ({\n  isVisible,\n  withAnimation,\n  thumbDataUri,\n  className,\n  width,\n  height,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n\n  const { shouldRender, transitionClassNames } = useShowTransitionDeprecated(\n    isVisible, undefined, true, withAnimation ? false : undefined, undefined, ANIMATION_DURATION,\n  );\n  const canvasRef = useCanvasBlur(thumbDataUri, !shouldRender, undefined, BLUR_RADIUS, width, height);\n\n  const handleClick = useLastCallback((e: React.MouseEvent<HTMLDivElement>) => {\n    if (!ref.current) return;\n    const el = ref.current;\n    const rect = e.currentTarget.getBoundingClientRect();\n    const x = e.clientX - rect.left;\n    const y = e.clientY - rect.top;\n    const shiftX = x - (rect.width / 2);\n    const shiftY = y - (rect.height / 2);\n    requestMutation(() => {\n      el.setAttribute('style', `--click-shift-x: ${shiftX}px; --click-shift-y: ${shiftY}px`);\n    });\n  });\n\n  if (!shouldRender) {\n    return undefined;\n  }\n\n  return (\n    <div\n      className={buildClassName(styles.root, transitionClassNames, className, withAnimation && styles.maskAnimation)}\n      ref={ref}\n      onClick={withAnimation ? handleClick : undefined}\n    >\n      <canvas\n        ref={canvasRef}\n        className={styles.canvas}\n        width={width}\n        height={height}\n      />\n      <div className={styles.dots} />\n    </div>\n  );\n};\n\nexport default memo(MediaSpoiler);\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo } from '../../lib/teact/teact';\n\nimport type { ApiMessageOutgoingStatus } from '../../api/types';\n\nimport Transition from '../ui/Transition';\nimport Icon from './icons/Icon';\n\nimport './MessageOutgoingStatus.scss';\n\ntype OwnProps = {\n  status: ApiMessageOutgoingStatus;\n};\n\nenum Keys {\n  failed, pending, succeeded, read,\n}\n\nconst MessageOutgoingStatus: FC<OwnProps> = ({ status }) => {\n  return (\n    <div className=\"MessageOutgoingStatus\">\n      <Transition name=\"reveal\" activeKey={Keys[status]}>\n        {status === 'failed' ? (\n          <div className=\"MessageOutgoingStatus--failed\">\n            <Icon name=\"message-failed\" />\n          </div>\n        ) : <Icon name={`message-${status}`} />}\n      </Transition>\n    </div>\n  );\n};\n\nexport default memo(MessageOutgoingStatus);\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo } from '../../lib/teact/teact';\n\nimport buildClassName from '../../util/buildClassName';\nimport renderText from './helpers/renderText';\n\nimport useOldLang from '../../hooks/useOldLang';\nimport useShowTransitionDeprecated from '../../hooks/useShowTransitionDeprecated';\n\nimport './NothingFound.scss';\n\ninterface OwnProps {\n  text?: string;\n  description?: string;\n}\n\nconst DEFAULT_TEXT = 'Nothing found.';\n\nconst NothingFound: FC<OwnProps> = ({ text = DEFAULT_TEXT, description }) => {\n  const lang = useOldLang();\n  const { transitionClassNames } = useShowTransitionDeprecated(true);\n\n  return (\n    <div className={buildClassName('NothingFound', transitionClassNames, description && 'with-description')}>\n      {text}\n      {description && <p className=\"description\">{renderText(lang(description), ['br'])}</p>}\n    </div>\n  );\n};\n\nexport default memo(NothingFound);\n","import type { ChangeEvent } from 'react';\nimport type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useRef, useState,\n} from '../../lib/teact/teact';\n\nimport { MIN_PASSWORD_LENGTH } from '../../config';\nimport { requestMutation } from '../../lib/fasterdom/fasterdom';\nimport buildClassName from '../../util/buildClassName';\nimport stopEvent from '../../util/stopEvent';\nimport { IS_TOUCH_ENV } from '../../util/windowEnvironment';\n\nimport useTimeout from '../../hooks/schedulers/useTimeout';\nimport useAppLayout from '../../hooks/useAppLayout';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Button from '../ui/Button';\n\ntype OwnProps = {\n  submitLabel?: string;\n  error?: string;\n  hint?: string;\n  placeholder?: string;\n  description?: string;\n  isLoading?: boolean;\n  shouldDisablePasswordManager?: boolean;\n  shouldShowSubmit?: boolean;\n  shouldResetValue?: boolean;\n  isPasswordVisible?: boolean;\n  clearError: NoneToVoidFunction;\n  noRipple?: boolean;\n  onChangePasswordVisibility: (state: boolean) => void;\n  onInputChange?: (password: string) => void;\n  onSubmit?: (password: string) => void;\n};\n\nconst PasswordForm: FC<OwnProps> = ({\n  isLoading = false,\n  isPasswordVisible,\n  error,\n  hint,\n  placeholder = 'Password',\n  submitLabel = 'Next',\n  description,\n  shouldShowSubmit,\n  shouldResetValue,\n  shouldDisablePasswordManager = false,\n  noRipple = false,\n  clearError,\n  onChangePasswordVisibility,\n  onInputChange,\n  onSubmit,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const inputRef = useRef<HTMLInputElement>(null);\n  const lang = useOldLang();\n\n  const { isMobile } = useAppLayout();\n  const [password, setPassword] = useState('');\n  const [canSubmit, setCanSubmit] = useState(false);\n  const focusDelayTimeoutMs = isMobile ? 550 : 400;\n\n  useEffect(() => {\n    if (shouldResetValue) {\n      setPassword('');\n    }\n  }, [shouldResetValue]);\n\n  useTimeout(() => {\n    if (!IS_TOUCH_ENV) {\n      inputRef.current!.focus();\n    }\n  }, focusDelayTimeoutMs);\n\n  useEffect(() => {\n    if (error) {\n      requestMutation(() => {\n        inputRef.current!.focus();\n        inputRef.current!.select();\n      });\n    }\n  }, [error]);\n\n  function onPasswordChange(e: ChangeEvent<HTMLInputElement>) {\n    if (error) {\n      clearError();\n    }\n\n    const { target } = e;\n    setPassword(target.value);\n    setCanSubmit(target.value.length >= MIN_PASSWORD_LENGTH);\n    if (onInputChange) {\n      onInputChange(target.value);\n    }\n  }\n\n  function togglePasswordVisibility() {\n    onChangePasswordVisibility(!isPasswordVisible);\n  }\n\n  function handleSubmit(event: React.FormEvent<HTMLFormElement>) {\n    event.preventDefault();\n\n    if (isLoading) {\n      return;\n    }\n\n    if (canSubmit) {\n      onSubmit!(password);\n    }\n  }\n\n  function renderFakeInput() {\n    return (\n      <input\n        type=\"password\"\n        id=\"prevent_autofill\"\n        autoComplete=\"off\"\n        className=\"visually-hidden\"\n        tabIndex={-2}\n      />\n    );\n  }\n\n  return (\n    <form action=\"\" onSubmit={onSubmit ? handleSubmit : stopEvent} autoComplete=\"off\">\n      <div\n        className={buildClassName('input-group password-input', password && 'touched', error && 'error')}\n        dir={lang.isRtl ? 'rtl' : undefined}\n      >\n        {shouldDisablePasswordManager && renderFakeInput()}\n        <input\n          ref={inputRef}\n          className=\"form-control\"\n          type={isPasswordVisible ? 'text' : 'password'}\n          id=\"sign-in-password\"\n          value={password || ''}\n          autoComplete={shouldDisablePasswordManager ? 'one-time-code' : 'current-password'}\n          onChange={onPasswordChange}\n          maxLength={256}\n          dir=\"auto\"\n        />\n        <label>{error || hint || placeholder}</label>\n        <div\n          className=\"div-button toggle-password\"\n          onClick={togglePasswordVisibility}\n          role=\"button\"\n          tabIndex={0}\n          title=\"Toggle password visibility\"\n          aria-label=\"Toggle password visibility\"\n        >\n          <i className={buildClassName('icon', isPasswordVisible ? 'icon-eye' : 'icon-eye-closed')} />\n        </div>\n      </div>\n      {description && <p className=\"description\">{description}</p>}\n      {onSubmit && (canSubmit || shouldShowSubmit) && (\n        <Button type=\"submit\" ripple={!noRipple} isLoading={isLoading} disabled={!canSubmit}>\n          {submitLabel}\n        </Button>\n      )}\n    </form>\n  );\n};\n\nexport default memo(PasswordForm);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"nY2ggBsF\",\"withBadge\":\"RYtVQAjM\",\"badgeContainer\":\"dhigNjAq\",\"slide-in\":\"YfcP52Ym\",\"slideIn\":\"YfcP52Ym\",\"floating-badge-wrapper\":\"cOpfCGPh\",\"floatingBadgeWrapper\":\"cOpfCGPh\",\"rotate-in\":\"AgMPRKbT\",\"rotateIn\":\"AgMPRKbT\",\"floating-badge\":\"uNwBLNOy\",\"floatingBadge\":\"uNwBLNOy\",\"floating-badge-triangle\":\"qRwO7SZm\",\"floatingBadgeTriangle\":\"qRwO7SZm\",\"floating-badge-icon\":\"MJ7MTmxi\",\"floatingBadgeIcon\":\"MJ7MTmxi\",\"floating-badge-value\":\"MwzZt3Qo\",\"floatingBadgeValue\":\"MwzZt3Qo\",\"left\":\"_b5HgBXr\",\"right\":\"P6mch4bB\",\"progress\":\"sZZV0yoe\",\"fullProgress\":\"m8ie8IxL\"};","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useRef, useState,\n} from '../../lib/teact/teact';\n\nimport type { IconName } from '../../types/icons';\n\nimport buildClassName from '../../util/buildClassName';\nimport buildStyle from '../../util/buildStyle';\n\nimport useOldLang from '../../hooks/useOldLang';\nimport useResizeObserver from '../../hooks/useResizeObserver';\n\nimport Icon from './icons/Icon';\n\nimport styles from './PremiumProgress.module.scss';\n\ntype OwnProps = {\n  leftText?: string;\n  rightText?: string;\n  floatingBadgeIcon?: IconName;\n  floatingBadgeText?: string;\n  progress?: number;\n  className?: string;\n};\n\nconst LimitPreview: FC<OwnProps> = ({\n  leftText,\n  rightText,\n  floatingBadgeText,\n  floatingBadgeIcon,\n  progress,\n  className,\n}) => {\n  const lang = useOldLang();\n  // eslint-disable-next-line no-null/no-null\n  const floatingBadgeRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const parentContainerRef = useRef<HTMLDivElement>(null);\n\n  const [shiftX, setShiftX] = useState(0);\n  const [tailPosition, setTailPosition] = useState(0);\n\n  const updateBadgePosition = () => {\n    if (floatingBadgeRef.current && parentContainerRef.current && progress !== undefined) {\n      const badgeWidth = floatingBadgeRef.current.offsetWidth;\n      const parentWidth = parentContainerRef.current.offsetWidth;\n      const minShift = badgeWidth / 2;\n      const maxShift = parentWidth - badgeWidth / 2;\n      const currentShift = progress * parentWidth;\n      const safeShift = Math.max(minShift, Math.min(currentShift, maxShift));\n\n      setShiftX(safeShift / parentWidth);\n\n      let newTailPosition;\n      if (currentShift < minShift) {\n        newTailPosition = (progress * parentWidth) / (minShift * 2);\n      } else if (currentShift > maxShift) {\n        const progressMapped = (progress - (maxShift / parentWidth)) / (1 - maxShift / parentWidth);\n        newTailPosition = 0.5 + (progressMapped * 0.4);\n      } else {\n        newTailPosition = 0.5;\n      }\n      setTailPosition(newTailPosition);\n    }\n  };\n\n  useEffect(updateBadgePosition, [progress]);\n\n  useResizeObserver(parentContainerRef, updateBadgePosition);\n\n  const hasFloatingBadge = Boolean(floatingBadgeIcon || floatingBadgeText);\n  const isProgressFull = Boolean(progress) && progress > 0.99;\n\n  return (\n    <div\n      ref={parentContainerRef}\n      className={buildClassName(\n        styles.root,\n        hasFloatingBadge && styles.withBadge,\n        className,\n      )}\n      style={buildStyle(\n        progress !== undefined && `--progress: ${progress}`,\n        tailPosition !== undefined && `--tail-position: ${tailPosition}`,\n        `--shift-x: ${shiftX}`,\n      )}\n    >\n      {hasFloatingBadge && (\n        <div className={styles.badgeContainer}>\n          <div className={styles.floatingBadgeWrapper}>\n            <div className={styles.floatingBadge} ref={floatingBadgeRef}>\n              {floatingBadgeIcon && <Icon name={floatingBadgeIcon} className={styles.floatingBadgeIcon} />}\n              {floatingBadgeText && (\n                <div className={styles.floatingBadgeValue} dir={lang.isRtl ? 'rtl' : undefined}>\n                  {floatingBadgeText}\n                </div>\n              )}\n            </div>\n            <div className={styles.floatingBadgeTriangle}>\n              <svg width=\"28\" height=\"28\" viewBox=\"0 0 28 28\" fill=\"none\">\n                <path d=\"m 28,4 v 9 c 0.0089,7.283278 -3.302215,5.319646 -6.750951,8.589815 l -5.8284,5.82843 c -0.781,0.78105 -2.0474,0.78104 -2.8284,0 L 6.7638083,21.589815 C 2.8288652,17.959047 0.04527024,20.332086 0,13 V 4 C 0,4 0.00150581,0.97697493 3,1 5.3786658,1.018266 22.594519,0.9142007 25,1 c 2.992326,0.1067311 3,3 3,3 z\" fill=\"#7E85FF\" />\n              </svg>\n            </div>\n          </div>\n        </div>\n      )}\n      <div className={styles.left}>\n        <span>{leftText}</span>\n      </div>\n      <div className={styles.right}>\n        <span>{rightText}</span>\n      </div>\n      <div className={buildClassName(styles.progress, isProgressFull && styles.fullProgress)}>\n        <div className={styles.left}>\n          <span>{leftText}</span>\n        </div>\n        <div className={styles.right}>\n          <span>{rightText}</span>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(LimitPreview);\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useEffect, useMemo } from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type {\n  ApiChatMember, ApiTypingStatus, ApiUser, ApiUserStatus,\n} from '../../api/types';\nimport type { CustomPeer, StoryViewerOrigin } from '../../types';\nimport type { IconName } from '../../types/icons';\nimport { MediaViewerOrigin } from '../../types';\n\nimport {\n  getMainUsername, getUserStatus, isUserOnline,\n} from '../../global/helpers';\nimport { selectChatMessages, selectUser, selectUserStatus } from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport renderText from './helpers/renderText';\n\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport RippleEffect from '../ui/RippleEffect';\nimport Avatar from './Avatar';\nimport DotAnimation from './DotAnimation';\nimport FullNameTitle from './FullNameTitle';\nimport Icon from './icons/Icon';\nimport TypingStatus from './TypingStatus';\n\ntype OwnProps = {\n  userId?: string;\n  customPeer?: CustomPeer;\n  typingStatus?: ApiTypingStatus;\n  avatarSize?: 'tiny' | 'small' | 'medium' | 'large' | 'jumbo';\n  forceShowSelf?: boolean;\n  status?: string;\n  statusIcon?: IconName;\n  ripple?: boolean;\n  withDots?: boolean;\n  withMediaViewer?: boolean;\n  withUsername?: boolean;\n  withStory?: boolean;\n  withFullInfo?: boolean;\n  withUpdatingStatus?: boolean;\n  storyViewerOrigin?: StoryViewerOrigin;\n  noEmojiStatus?: boolean;\n  noFake?: boolean;\n  noVerified?: boolean;\n  emojiStatusSize?: number;\n  noStatusOrTyping?: boolean;\n  noRtl?: boolean;\n  adminMember?: ApiChatMember;\n  isSavedDialog?: boolean;\n  className?: string;\n  onEmojiStatusClick?: NoneToVoidFunction;\n  iconElement?: React.ReactNode;\n  rightElement?: React.ReactNode;\n};\n\ntype StateProps =\n  {\n    user?: ApiUser;\n    userStatus?: ApiUserStatus;\n    self?: ApiUser;\n    isSavedMessages?: boolean;\n    areMessagesLoaded: boolean;\n    isSynced?: boolean;\n  };\n\nconst PrivateChatInfo: FC<OwnProps & StateProps> = ({\n  customPeer,\n  typingStatus,\n  avatarSize = 'medium',\n  status,\n  statusIcon,\n  withDots,\n  withMediaViewer,\n  withUsername,\n  withStory,\n  withFullInfo,\n  withUpdatingStatus,\n  emojiStatusSize,\n  noStatusOrTyping,\n  noEmojiStatus,\n  noFake,\n  noVerified,\n  noRtl,\n  user,\n  userStatus,\n  self,\n  isSavedMessages,\n  isSavedDialog,\n  areMessagesLoaded,\n  adminMember,\n  ripple,\n  className,\n  storyViewerOrigin,\n  isSynced,\n  onEmojiStatusClick,\n  iconElement,\n  rightElement,\n}) => {\n  const {\n    loadFullUser,\n    openMediaViewer,\n    loadMoreProfilePhotos,\n  } = getActions();\n\n  const lang = useOldLang();\n\n  const { id: userId } = user || {};\n\n  useEffect(() => {\n    if (userId) {\n      if (withFullInfo && isSynced) loadFullUser({ userId });\n      if (withMediaViewer) loadMoreProfilePhotos({ peerId: userId, isPreload: true });\n    }\n  }, [userId, withFullInfo, withMediaViewer, isSynced]);\n\n  const handleAvatarViewerOpen = useLastCallback(\n    (e: React.MouseEvent<HTMLDivElement, MouseEvent>, hasMedia: boolean) => {\n      if (user && hasMedia) {\n        e.stopPropagation();\n        openMediaViewer({\n          isAvatarView: true,\n          chatId: user.id,\n          mediaIndex: 0,\n          origin: avatarSize === 'jumbo' ? MediaViewerOrigin.ProfileAvatar : MediaViewerOrigin.MiddleHeaderAvatar,\n        });\n      }\n    },\n  );\n\n  const mainUsername = useMemo(() => user && withUsername && getMainUsername(user), [user, withUsername]);\n\n  if (!user && !customPeer) {\n    return undefined;\n  }\n\n  function renderStatusOrTyping() {\n    if (status) {\n      return withDots ? (\n        <DotAnimation className=\"status\" content={status} />\n      ) : (\n        <span className=\"status\" dir=\"auto\">\n          {statusIcon && <Icon className=\"status-icon\" name={statusIcon} />}\n          {renderText(status)}\n        </span>\n      );\n    }\n\n    if (withUpdatingStatus && !areMessagesLoaded) {\n      return (\n        <DotAnimation className=\"status\" content={lang('Updating')} />\n      );\n    }\n\n    if (customPeer?.subtitleKey) {\n      return (\n        <span className=\"status\" dir=\"auto\">\n          <span className=\"user-status\" dir=\"auto\">{lang(customPeer.subtitleKey)}</span>\n        </span>\n      );\n    }\n\n    if (!user) {\n      return undefined;\n    }\n\n    if (typingStatus) {\n      return <TypingStatus typingStatus={typingStatus} />;\n    }\n\n    const translatedStatus = getUserStatus(lang, user, userStatus);\n    const mainUserNameClassName = buildClassName('handle', translatedStatus && 'withStatus');\n    return (\n      <span className={buildClassName('status', isUserOnline(user, userStatus, true) && 'online')}>\n        {mainUsername && <span className={mainUserNameClassName}>{mainUsername}</span>}\n        {translatedStatus && <span className=\"user-status\" dir=\"auto\">{translatedStatus}</span>}\n      </span>\n    );\n  }\n\n  const customTitle = adminMember\n    ? adminMember.customTitle || lang(adminMember.isOwner ? 'GroupInfo.LabelOwner' : 'GroupInfo.LabelAdmin')\n    : undefined;\n\n  function renderNameTitle() {\n    if (customTitle) {\n      return (\n        <div className=\"info-name-title\">\n          <FullNameTitle\n            peer={user!}\n            withEmojiStatus={!noEmojiStatus}\n            emojiStatusSize={emojiStatusSize}\n            isSavedMessages={isSavedMessages}\n            isSavedDialog={isSavedDialog}\n            onEmojiStatusClick={onEmojiStatusClick}\n          />\n          {customTitle && <span className=\"custom-title\">{customTitle}</span>}\n        </div>\n      );\n    }\n\n    return (\n      <FullNameTitle\n        peer={customPeer || user!}\n        noFake={noFake}\n        noVerified={noVerified}\n        withEmojiStatus={!noEmojiStatus}\n        emojiStatusSize={emojiStatusSize}\n        isSavedMessages={isSavedMessages}\n        isSavedDialog={isSavedDialog}\n        onEmojiStatusClick={onEmojiStatusClick}\n        iconElement={iconElement}\n      />\n    );\n  }\n\n  return (\n    <div className={buildClassName('ChatInfo', className)} dir={!noRtl && lang.isRtl ? 'rtl' : undefined}>\n      {isSavedDialog && self && (\n        <Avatar\n          key=\"saved-messages\"\n          size={avatarSize}\n          peer={self}\n          isSavedMessages\n          className=\"saved-dialog-avatar\"\n        />\n      )}\n      <Avatar\n        key={user?.id}\n        size={avatarSize}\n        peer={customPeer || user}\n        className={buildClassName(isSavedDialog && 'overlay-avatar')}\n        isSavedMessages={isSavedMessages}\n        isSavedDialog={isSavedDialog}\n        withStory={withStory}\n        storyViewerOrigin={storyViewerOrigin}\n        storyViewerMode=\"single-peer\"\n        onClick={withMediaViewer ? handleAvatarViewerOpen : undefined}\n      />\n      <div className=\"info\">\n        {renderNameTitle()}\n        {(status || (!isSavedMessages && !noStatusOrTyping)) && renderStatusOrTyping()}\n      </div>\n      {ripple && <RippleEffect />}\n      {rightElement}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { userId, forceShowSelf }): StateProps => {\n    const { isSynced } = global;\n    const user = userId ? selectUser(global, userId) : undefined;\n    const userStatus = userId ? selectUserStatus(global, userId) : undefined;\n    const isSavedMessages = !forceShowSelf && user && user.isSelf;\n    const self = isSavedMessages ? user : selectUser(global, global.currentUserId!);\n    const areMessagesLoaded = Boolean(userId && selectChatMessages(global, userId));\n\n    return {\n      user,\n      userStatus,\n      isSavedMessages,\n      areMessagesLoaded,\n      self,\n      isSynced,\n    };\n  },\n)(PrivateChatInfo));\n","import type { FC, TeactNode } from '../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo, useRef,\n} from '../../lib/teact/teact';\n\nimport type { ApiChat, ApiPhoto, ApiUser } from '../../api/types';\n\nimport {\n  getChatAvatarHash,\n  getChatTitle,\n  getPhotoMediaHash,\n  getProfilePhotoMediaHash,\n  getUserFullName,\n  getVideoProfilePhotoMediaHash,\n  isAnonymousForwardsChat,\n  isChatWithRepliesBot,\n  isDeletedUser,\n  isUserId,\n} from '../../global/helpers';\nimport buildClassName from '../../util/buildClassName';\nimport { getFirstLetters } from '../../util/textFormat';\nimport { IS_CANVAS_FILTER_SUPPORTED } from '../../util/windowEnvironment';\nimport { getPeerColorClass } from './helpers/peerColor';\nimport renderText from './helpers/renderText';\n\nimport useAppLayout from '../../hooks/useAppLayout';\nimport useCanvasBlur from '../../hooks/useCanvasBlur';\nimport useFlag from '../../hooks/useFlag';\nimport useMedia from '../../hooks/useMedia';\nimport useMediaTransitionDeprecated from '../../hooks/useMediaTransitionDeprecated';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport OptimizedVideo from '../ui/OptimizedVideo';\nimport Spinner from '../ui/Spinner';\nimport Icon from './icons/Icon';\n\nimport './ProfilePhoto.scss';\n\ntype OwnProps = {\n  chat?: ApiChat;\n  user?: ApiUser;\n  isSavedMessages?: boolean;\n  isSavedDialog?: boolean;\n  photo?: ApiPhoto;\n  canPlayVideo: boolean;\n  onClick: NoneToVoidFunction;\n};\n\nconst ProfilePhoto: FC<OwnProps> = ({\n  chat,\n  user,\n  photo,\n  isSavedMessages,\n  isSavedDialog,\n  canPlayVideo,\n  onClick,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const videoRef = useRef<HTMLVideoElement>(null);\n\n  const lang = useOldLang();\n  const { isMobile } = useAppLayout();\n\n  const isDeleted = user && isDeletedUser(user);\n  const isRepliesChat = chat && isChatWithRepliesBot(chat.id);\n  const isAnonymousForwards = chat && isAnonymousForwardsChat(chat.id);\n  const peer = (user || chat)!;\n  const canHaveMedia = peer && !isSavedMessages && !isDeleted && !isRepliesChat && !isAnonymousForwards;\n  const { isVideo } = photo || {};\n\n  const avatarHash = (!photo || photo.id === peer.avatarPhotoId) && getChatAvatarHash(peer, 'normal');\n\n  const previewHash = canHaveMedia && photo && !avatarHash && getPhotoMediaHash(photo, 'pictogram');\n  const previewBlobUrl = useMedia(previewHash || avatarHash);\n\n  const photoHash = canHaveMedia && photo && !isVideo && getProfilePhotoMediaHash(photo);\n  const photoBlobUrl = useMedia(photoHash);\n\n  const videoHash = canHaveMedia && photo && isVideo && getVideoProfilePhotoMediaHash(photo);\n  const videoBlobUrl = useMedia(videoHash);\n\n  const fullMediaData = videoBlobUrl || photoBlobUrl;\n  const [isVideoReady, markVideoReady] = useFlag();\n  const isFullMediaReady = Boolean(fullMediaData && (!isVideo || isVideoReady));\n  const transitionClassNames = useMediaTransitionDeprecated(isFullMediaReady);\n  const isBlurredThumb = canHaveMedia && !isFullMediaReady && !previewBlobUrl && photo?.thumbnail?.dataUri;\n  const blurredThumbCanvasRef = useCanvasBlur(\n    photo?.thumbnail?.dataUri, !isBlurredThumb, isMobile && !IS_CANVAS_FILTER_SUPPORTED,\n  );\n  const hasMedia = photo || previewBlobUrl || isBlurredThumb;\n\n  useEffect(() => {\n    if (videoRef.current && !canPlayVideo) {\n      videoRef.current.currentTime = 0;\n    }\n  }, [canPlayVideo]);\n\n  const specialIcon = useMemo(() => {\n    if (isSavedMessages) {\n      return isSavedDialog ? 'my-notes' : 'avatar-saved-messages';\n    }\n\n    if (isDeleted) {\n      return 'avatar-deleted-account';\n    }\n\n    if (isRepliesChat) {\n      return 'reply-filled';\n    }\n\n    if (isAnonymousForwards) {\n      return 'author-hidden';\n    }\n\n    return undefined;\n  }, [isAnonymousForwards, isDeleted, isSavedDialog, isRepliesChat, isSavedMessages]);\n\n  let content: TeactNode | undefined;\n\n  if (specialIcon) {\n    content = <Icon name={specialIcon} role=\"img\" />;\n  } else if (hasMedia) {\n    content = (\n      <>\n        {isBlurredThumb ? (\n          <canvas ref={blurredThumbCanvasRef} className=\"thumb\" />\n        ) : (\n          <img src={previewBlobUrl} draggable={false} className=\"thumb\" alt=\"\" />\n        )}\n        {photo && (\n          isVideo ? (\n            <OptimizedVideo\n              canPlay={canPlayVideo}\n              ref={videoRef}\n              src={fullMediaData}\n              className={buildClassName('avatar-media', transitionClassNames)}\n              muted\n              disablePictureInPicture\n              loop\n              playsInline\n              onReady={markVideoReady}\n            />\n          ) : (\n            <img\n              src={fullMediaData}\n              className={buildClassName('avatar-media', transitionClassNames)}\n              alt=\"\"\n            />\n          )\n        )}\n      </>\n    );\n  } else if (user) {\n    const userFullName = getUserFullName(user);\n    content = userFullName ? getFirstLetters(userFullName, 2) : undefined;\n  } else if (chat) {\n    const title = getChatTitle(lang, chat);\n    content = title && getFirstLetters(title, isUserId(chat.id) ? 2 : 1);\n  } else {\n    content = (\n      <div className=\"spinner-wrapper\">\n        <Spinner color=\"white\" />\n      </div>\n    );\n  }\n\n  const fullClassName = buildClassName(\n    'ProfilePhoto',\n    getPeerColorClass(peer),\n    isSavedMessages && 'saved-messages',\n    isAnonymousForwards && 'anonymous-forwards',\n    isDeleted && 'deleted-account',\n    isRepliesChat && 'replies-bot-account',\n    (!isSavedMessages && !hasMedia) && 'no-photo',\n  );\n\n  return (\n    <div className={fullClassName} onClick={hasMedia ? onClick : undefined}>\n      {typeof content === 'string' ? renderText(content, ['hq_emoji']) : content}\n    </div>\n  );\n};\n\nexport default memo(ProfilePhoto);\n","// extracted by mini-css-extract-plugin\nexport default {\"self\":\"DnvLcTfv\",\"info\":\"UcyW7tVh\",\"status\":\"cpyXyZDl\",\"fallbackPhoto\":\"Wm9Ygb23\",\"fallbackPhotoContents\":\"nflKKT3R\",\"fallbackPhotoVisible\":\"tFkRrvxe\",\"fallbackPhotoAvatar\":\"R7w3H5eC\",\"photoWrapper\":\"GBGLnrA7\",\"photoDashes\":\"uyvKpR3B\",\"photoDash\":\"wB4yjvei\",\"photoDash_current\":\"aZmp9FLh\",\"photoDashCurrent\":\"aZmp9FLh\",\"navigation\":\"ZZRcBh8v\",\"navigation_prev\":\"RQITz4WQ\",\"navigationPrev\":\"RQITz4WQ\",\"navigation_next\":\"_0F1Txru\",\"navigationNext\":\"_0F1Txru\",\"user-status\":\"_HDVUj4P\",\"userStatus\":\"_HDVUj4P\",\"get-status\":\"Qga38M20\",\"getStatus\":\"Qga38M20\",\"topicContainer\":\"yzg267rr\",\"topicTitle\":\"umOuiu3K\",\"topicIcon\":\"ZCxp0_t4\",\"topicIconTitle\":\"lkfZNWOm\",\"topicMessagesCounter\":\"tLTzQ2ks\"};","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useEffect, useState } from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type {\n  ApiChat, ApiPeerPhotos, ApiSticker, ApiTopic, ApiUser, ApiUserStatus,\n} from '../../api/types';\nimport { MediaViewerOrigin } from '../../types';\n\nimport {\n  getUserStatus, isAnonymousForwardsChat, isChatChannel, isUserOnline,\n} from '../../global/helpers';\nimport {\n  selectChat,\n  selectCurrentMessageList,\n  selectPeerPhotos,\n  selectTabState,\n  selectThreadMessagesCount,\n  selectTopic,\n  selectUser,\n  selectUserStatus,\n} from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport { captureEvents, SwipeDirection } from '../../util/captureEvents';\nimport { MEMO_EMPTY_ARRAY } from '../../util/memo';\nimport { IS_TOUCH_ENV } from '../../util/windowEnvironment';\nimport renderText from './helpers/renderText';\n\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\nimport usePreviousDeprecated from '../../hooks/usePreviousDeprecated';\nimport usePhotosPreload from './hooks/usePhotosPreload';\n\nimport Transition from '../ui/Transition';\nimport Avatar from './Avatar';\nimport FullNameTitle from './FullNameTitle';\nimport ProfilePhoto from './ProfilePhoto';\nimport TopicIcon from './TopicIcon';\n\nimport './ProfileInfo.scss';\nimport styles from './ProfileInfo.module.scss';\n\ntype OwnProps = {\n  peerId: string;\n  forceShowSelf?: boolean;\n  canPlayVideo: boolean;\n};\n\ntype StateProps =\n  {\n    user?: ApiUser;\n    userStatus?: ApiUserStatus;\n    chat?: ApiChat;\n    mediaIndex?: number;\n    avatarOwnerId?: string;\n    topic?: ApiTopic;\n    messagesCount?: number;\n    emojiStatusSticker?: ApiSticker;\n    profilePhotos?: ApiPeerPhotos;\n  };\n\nconst EMOJI_STATUS_SIZE = 24;\nconst EMOJI_TOPIC_SIZE = 120;\nconst LOAD_MORE_THRESHOLD = 3;\nconst MAX_PHOTO_DASH_COUNT = 30;\n\nconst ProfileInfo: FC<OwnProps & StateProps> = ({\n  forceShowSelf,\n  canPlayVideo,\n  user,\n  userStatus,\n  chat,\n  mediaIndex,\n  avatarOwnerId,\n  topic,\n  messagesCount,\n  emojiStatusSticker,\n  profilePhotos,\n  peerId,\n}) => {\n  const {\n    openMediaViewer,\n    openPremiumModal,\n    openStickerSet,\n    openPrivacySettingsNoticeModal,\n    loadMoreProfilePhotos,\n  } = getActions();\n\n  const lang = useOldLang();\n\n  const photos = profilePhotos?.photos || MEMO_EMPTY_ARRAY;\n  const prevMediaIndex = usePreviousDeprecated(mediaIndex);\n  const prevAvatarOwnerId = usePreviousDeprecated(avatarOwnerId);\n  const [hasSlideAnimation, setHasSlideAnimation] = useState(true);\n  // slideOptimized doesn't work well when animation is dynamically disabled\n  const slideAnimation = hasSlideAnimation ? (lang.isRtl ? 'slideRtl' : 'slide') : 'none';\n\n  const [currentPhotoIndex, setCurrentPhotoIndex] = useState(0);\n  const isFirst = photos.length <= 1 || currentPhotoIndex === 0;\n  const isLast = photos.length <= 1 || currentPhotoIndex === photos.length - 1;\n\n  useEffect(() => {\n    if (photos.length - currentPhotoIndex <= LOAD_MORE_THRESHOLD) {\n      loadMoreProfilePhotos({ peerId });\n    }\n  }, [currentPhotoIndex, peerId, photos.length]);\n\n  // Set the current avatar photo to the last selected photo in Media Viewer after it is closed\n  useEffect(() => {\n    if (prevAvatarOwnerId && prevMediaIndex !== undefined && mediaIndex === undefined) {\n      setHasSlideAnimation(false);\n      setCurrentPhotoIndex(prevMediaIndex);\n    }\n  }, [mediaIndex, prevMediaIndex, prevAvatarOwnerId]);\n\n  // Deleting the last profile photo may result in an error\n  useEffect(() => {\n    if (currentPhotoIndex > photos.length) {\n      setHasSlideAnimation(false);\n      setCurrentPhotoIndex(Math.max(0, photos.length - 1));\n    }\n  }, [currentPhotoIndex, photos.length]);\n\n  usePhotosPreload(photos, currentPhotoIndex);\n\n  const handleProfilePhotoClick = useLastCallback(() => {\n    openMediaViewer({\n      isAvatarView: true,\n      chatId: peerId,\n      mediaIndex: currentPhotoIndex,\n      origin: forceShowSelf ? MediaViewerOrigin.SettingsAvatar : MediaViewerOrigin.ProfileAvatar,\n    });\n  });\n\n  const handleStatusClick = useLastCallback(() => {\n    if (!peerId) {\n      openStickerSet({\n        stickerSetInfo: emojiStatusSticker!.stickerSetInfo,\n      });\n      return;\n    }\n\n    openPremiumModal({ fromUserId: peerId });\n  });\n\n  const selectPreviousMedia = useLastCallback(() => {\n    if (isFirst) {\n      return;\n    }\n    setHasSlideAnimation(true);\n    setCurrentPhotoIndex(currentPhotoIndex - 1);\n  });\n\n  const selectNextMedia = useLastCallback(() => {\n    if (isLast) {\n      return;\n    }\n    setHasSlideAnimation(true);\n    setCurrentPhotoIndex(currentPhotoIndex + 1);\n  });\n\n  const handleOpenGetReadDateModal = useLastCallback(() => {\n    openPrivacySettingsNoticeModal({ chatId: chat!.id, isReadDate: false });\n  });\n\n  function handleSelectFallbackPhoto() {\n    if (!isFirst) return;\n    setHasSlideAnimation(true);\n    setCurrentPhotoIndex(photos.length - 1);\n  }\n\n  // Swipe gestures\n  useEffect(() => {\n    const element = document.querySelector<HTMLDivElement>(`.${styles.photoWrapper}`);\n    if (!element) {\n      return undefined;\n    }\n\n    return captureEvents(element, {\n      selectorToPreventScroll: '.Profile, .settings-content',\n      onSwipe: IS_TOUCH_ENV ? (e, direction) => {\n        if (direction === SwipeDirection.Right) {\n          selectPreviousMedia();\n          return true;\n        } else if (direction === SwipeDirection.Left) {\n          selectNextMedia();\n          return true;\n        }\n\n        return false;\n      } : undefined,\n    });\n  }, [selectNextMedia, selectPreviousMedia]);\n\n  if (!user && !chat) {\n    return undefined;\n  }\n\n  function renderTopic() {\n    return (\n      <div className={styles.topicContainer}>\n        <TopicIcon\n          topic={topic!}\n          size={EMOJI_TOPIC_SIZE}\n          className={styles.topicIcon}\n          letterClassName={styles.topicIconTitle}\n          noLoopLimit\n        />\n        <h3 className={styles.topicTitle} dir={lang.isRtl ? 'rtl' : undefined}>{renderText(topic!.title)}</h3>\n        <p className={styles.topicMessagesCounter}>\n          {messagesCount ? lang('Chat.Title.Topic', messagesCount, 'i') : lang('lng_forum_no_messages')}\n        </p>\n      </div>\n    );\n  }\n\n  function renderPhotoTabs() {\n    const totalPhotosLength = Math.max(photos.length, profilePhotos?.count || 0);\n    if (!photos || totalPhotosLength <= 1) {\n      return undefined;\n    }\n\n    const enumerator = Array.from({ length: Math.min(totalPhotosLength, MAX_PHOTO_DASH_COUNT) });\n    const activeDashIndex = currentPhotoIndex >= MAX_PHOTO_DASH_COUNT ? MAX_PHOTO_DASH_COUNT - 1 : currentPhotoIndex;\n\n    return (\n      <div className={styles.photoDashes}>\n        {enumerator.map((_, i) => (\n          <span className={buildClassName(styles.photoDash, i === activeDashIndex && styles.photoDash_current)} />\n        ))}\n      </div>\n    );\n  }\n\n  function renderPhoto(isActive?: boolean) {\n    const photo = photos.length > 0\n      ? photos[currentPhotoIndex]\n      : undefined;\n\n    return (\n      <ProfilePhoto\n        key={currentPhotoIndex}\n        user={user}\n        chat={chat}\n        photo={photo}\n        canPlayVideo={Boolean(isActive && canPlayVideo)}\n        onClick={handleProfilePhotoClick}\n      />\n    );\n  }\n\n  function renderStatus() {\n    const isAnonymousForwards = isAnonymousForwardsChat(peerId);\n    if (isAnonymousForwards) return undefined;\n\n    if (user) {\n      return (\n        <div\n          className={buildClassName(\n            styles.status,\n            'status',\n            isUserOnline(user, userStatus) && 'online',\n          )}\n        >\n          <span className={styles.userStatus} dir=\"auto\">\n            {getUserStatus(lang, user, userStatus)}\n          </span>\n          {userStatus?.isReadDateRestrictedByMe && (\n            <span className={styles.getStatus} onClick={handleOpenGetReadDateModal}>\n              <span>{lang('StatusHiddenShow')}</span>\n            </span>\n          )}\n        </div>\n      );\n    }\n\n    return (\n      <span className={buildClassName(styles.status, 'status')} dir=\"auto\">{\n        isChatChannel(chat!)\n          ? lang('Subscribers', chat!.membersCount ?? 0, 'i')\n          : lang('Members', chat!.membersCount ?? 0, 'i')\n      }\n      </span>\n    );\n  }\n\n  if (topic) {\n    return renderTopic();\n  }\n\n  return (\n    <div\n      className={buildClassName('ProfileInfo', forceShowSelf && styles.self)}\n      dir={lang.isRtl ? 'rtl' : undefined}\n    >\n      <div className={styles.photoWrapper}>\n        {renderPhotoTabs()}\n        {!forceShowSelf && profilePhotos?.personalPhoto && (\n          <div className={buildClassName(\n            styles.fallbackPhoto,\n            isFirst && styles.fallbackPhotoVisible,\n          )}\n          >\n            <div className={styles.fallbackPhotoContents}>\n              {lang(profilePhotos.personalPhoto.isVideo ? 'UserInfo.CustomVideo' : 'UserInfo.CustomPhoto')}\n            </div>\n          </div>\n        )}\n        {forceShowSelf && profilePhotos?.fallbackPhoto && (\n          <div className={buildClassName(\n            styles.fallbackPhoto,\n            (isFirst || isLast) && styles.fallbackPhotoVisible,\n          )}\n          >\n            <div className={styles.fallbackPhotoContents} onClick={handleSelectFallbackPhoto}>\n              {!isLast && (\n                <Avatar\n                  photo={profilePhotos.fallbackPhoto}\n                  className={styles.fallbackPhotoAvatar}\n                  size=\"mini\"\n                />\n              )}\n              {lang(profilePhotos.fallbackPhoto.isVideo ? 'UserInfo.PublicVideo' : 'UserInfo.PublicPhoto')}\n            </div>\n          </div>\n        )}\n        <Transition activeKey={currentPhotoIndex} name={slideAnimation}>\n          {renderPhoto}\n        </Transition>\n\n        {!isFirst && (\n          <button\n            type=\"button\"\n            dir={lang.isRtl ? 'rtl' : undefined}\n            className={buildClassName(styles.navigation, styles.navigation_prev)}\n            aria-label={lang('AccDescrPrevious')}\n            onClick={selectPreviousMedia}\n          />\n        )}\n        {!isLast && (\n          <button\n            type=\"button\"\n            dir={lang.isRtl ? 'rtl' : undefined}\n            className={buildClassName(styles.navigation, styles.navigation_next)}\n            aria-label={lang('Next')}\n            onClick={selectNextMedia}\n          />\n        )}\n      </div>\n\n      <div className={styles.info} dir={lang.isRtl ? 'rtl' : 'auto'}>\n        {(user || chat) && (\n          <FullNameTitle\n            peer={(user || chat)!}\n            withEmojiStatus\n            emojiStatusSize={EMOJI_STATUS_SIZE}\n            onEmojiStatusClick={handleStatusClick}\n            noLoopLimit\n            canCopyTitle\n          />\n        )}\n        {renderStatus()}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { peerId }): StateProps => {\n    const user = selectUser(global, peerId);\n    const userStatus = selectUserStatus(global, peerId);\n    const chat = selectChat(global, peerId);\n    const profilePhotos = selectPeerPhotos(global, peerId);\n    const { mediaIndex, chatId: avatarOwnerId } = selectTabState(global).mediaViewer;\n    const isForum = chat?.isForum;\n    const { threadId: currentTopicId } = selectCurrentMessageList(global) || {};\n    const topic = isForum && currentTopicId ? selectTopic(global, peerId, currentTopicId) : undefined;\n\n    const emojiStatus = (user || chat)?.emojiStatus;\n    const emojiStatusSticker = emojiStatus ? global.customEmojis.byId[emojiStatus.documentId] : undefined;\n\n    return {\n      user,\n      userStatus,\n      chat,\n      mediaIndex,\n      avatarOwnerId,\n      emojiStatusSticker,\n      profilePhotos,\n      ...(topic && {\n        topic,\n        messagesCount: selectThreadMessagesCount(global, peerId, currentTopicId!),\n      }),\n    };\n  },\n)(ProfileInfo));\n","import { useEffect } from '../../../lib/teact/teact';\n\nimport type { ApiPhoto } from '../../../api/types';\nimport { ApiMediaFormat } from '../../../api/types';\n\nimport { getProfilePhotoMediaHash } from '../../../global/helpers';\nimport * as mediaLoader from '../../../util/mediaLoader';\n\nconst PHOTOS_TO_PRELOAD = 4;\n\nexport default function usePhotosPreload(\n  photos: ApiPhoto[],\n  currentIndex: number,\n) {\n  useEffect(() => {\n    photos.slice(currentIndex, currentIndex + PHOTOS_TO_PRELOAD).forEach((photo) => {\n      const mediaHash = getProfilePhotoMediaHash(photo);\n      const mediaData = mediaLoader.getFromMemory(mediaHash);\n      if (!mediaData) {\n        mediaLoader.fetch(mediaHash, ApiMediaFormat.BlobUrl);\n      }\n    });\n  }, [currentIndex, photos]);\n}\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useMemo } from '../../lib/teact/teact';\n\nimport type { ApiAvailableReaction, ApiReaction } from '../../api/types';\nimport type { ObserveFn } from '../../hooks/useIntersectionObserver';\nimport { ApiMediaFormat } from '../../api/types';\n\nimport { isSameReaction } from '../../global/helpers';\nimport buildClassName from '../../util/buildClassName';\n\nimport useMedia from '../../hooks/useMedia';\nimport useMediaTransitionDeprecated from '../../hooks/useMediaTransitionDeprecated';\n\nimport CustomEmoji from './CustomEmoji';\n\nimport './ReactionStaticEmoji.scss';\n\nimport blankUrl from '../../assets/blank.png';\n\ntype OwnProps = {\n  reaction: ApiReaction;\n  availableReactions?: ApiAvailableReaction[];\n  className?: string;\n  size?: number;\n  withIconHeart?: boolean;\n  observeIntersection?: ObserveFn;\n};\n\nconst ReactionStaticEmoji: FC<OwnProps> = ({\n  reaction,\n  availableReactions,\n  className,\n  size,\n  withIconHeart,\n  observeIntersection,\n}) => {\n  const isCustom = 'documentId' in reaction;\n  const availableReaction = useMemo(() => (\n    availableReactions?.find((available) => isSameReaction(available.reaction, reaction))\n  ), [availableReactions, reaction]);\n  const staticIconId = availableReaction?.staticIcon?.id;\n  const mediaData = useMedia(`document${staticIconId}`, !staticIconId, ApiMediaFormat.BlobUrl);\n\n  const transitionClassNames = useMediaTransitionDeprecated(mediaData);\n\n  const shouldApplySizeFix = 'emoticon' in reaction && reaction.emoticon === '🦄';\n  const shouldReplaceWithHeartIcon = withIconHeart && 'emoticon' in reaction && reaction.emoticon === '❤';\n\n  if (isCustom) {\n    return (\n      <CustomEmoji\n        documentId={reaction.documentId}\n        className={buildClassName('ReactionStaticEmoji', className)}\n        size={size}\n        observeIntersectionForPlaying={observeIntersection}\n      />\n    );\n  }\n\n  if (shouldReplaceWithHeartIcon) {\n    return (\n      <i className=\"ReactionStaticEmoji icon icon-heart\" style={`font-size: ${size}px; width: ${size}px`} />\n    );\n  }\n\n  return (\n    <img\n      className={buildClassName(\n        'ReactionStaticEmoji',\n        shouldApplySizeFix && 'with-unicorn-fix',\n        transitionClassNames,\n        className,\n      )}\n      style={size ? `width: ${size}px; height: ${size}px` : undefined}\n      src={mediaData || blankUrl}\n      alt={availableReaction?.title}\n      draggable={false}\n    />\n  );\n};\n\nexport default memo(ReactionStaticEmoji);\n","import type { ChangeEvent } from 'react';\nimport type { FC } from '../../lib/teact/teact';\nimport React, { memo, useMemo, useState } from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport type { ApiPhoto, ApiReportReason } from '../../api/types';\n\nimport buildClassName from '../../util/buildClassName';\n\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Button from '../ui/Button';\nimport InputText from '../ui/InputText';\nimport Modal from '../ui/Modal';\nimport RadioGroup from '../ui/RadioGroup';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  subject?: 'peer' | 'messages' | 'media' | 'story';\n  peerId?: string;\n  photo?: ApiPhoto;\n  messageIds?: number[];\n  storyId?: number;\n  onClose: () => void;\n  onCloseAnimationEnd?: () => void;\n};\n\nconst ReportModal: FC<OwnProps> = ({\n  isOpen,\n  subject = 'messages',\n  peerId,\n  photo,\n  messageIds,\n  storyId,\n  onClose,\n  onCloseAnimationEnd,\n}) => {\n  const {\n    reportMessages,\n    reportPeer,\n    reportProfilePhoto,\n    reportStory,\n    exitMessageSelectMode,\n  } = getActions();\n\n  const [selectedReason, setSelectedReason] = useState<ApiReportReason>('spam');\n  const [description, setDescription] = useState('');\n\n  const handleReport = useLastCallback(() => {\n    switch (subject) {\n      case 'messages':\n        reportMessages({ messageIds: messageIds!, reason: selectedReason, description });\n        exitMessageSelectMode();\n        break;\n      case 'peer':\n        reportPeer({ chatId: peerId, reason: selectedReason, description });\n        break;\n      case 'media':\n        reportProfilePhoto({\n          chatId: peerId, photo, reason: selectedReason, description,\n        });\n        break;\n      case 'story':\n        reportStory({\n          peerId: peerId!, storyId: storyId!, reason: selectedReason, description,\n        });\n    }\n    onClose();\n  });\n\n  const handleSelectReason = useLastCallback((value: string) => {\n    setSelectedReason(value as ApiReportReason);\n  });\n\n  const handleDescriptionChange = useLastCallback((e: ChangeEvent<HTMLInputElement>) => {\n    setDescription(e.target.value);\n  });\n\n  const lang = useOldLang();\n\n  const REPORT_OPTIONS: { value: ApiReportReason; label: string }[] = useMemo(() => [\n    { value: 'spam', label: lang('lng_report_reason_spam') },\n    { value: 'violence', label: lang('lng_report_reason_violence') },\n    { value: 'pornography', label: lang('lng_report_reason_pornography') },\n    { value: 'childAbuse', label: lang('lng_report_reason_child_abuse') },\n    { value: 'copyright', label: lang('ReportPeer.ReasonCopyright') },\n    { value: 'illegalDrugs', label: 'Illegal Drugs' },\n    { value: 'personalDetails', label: 'Personal Details' },\n    { value: 'other', label: lang('lng_report_reason_other') },\n  ], [lang]);\n\n  if (\n    (subject === 'messages' && !messageIds)\n    || (subject === 'peer' && !peerId)\n    || (subject === 'media' && (!peerId || !photo))\n    || (subject === 'story' && (!storyId || !peerId))\n  ) {\n    return undefined;\n  }\n\n  const title = subject === 'messages'\n    ? lang('lng_report_message_title')\n    : lang('ReportPeer.Report');\n\n  return (\n    <Modal\n      isOpen={isOpen}\n      onClose={onClose}\n      onEnter={isOpen ? handleReport : undefined}\n      onCloseAnimationEnd={onCloseAnimationEnd}\n      className={buildClassName('narrow', subject === 'story' && 'component-theme-dark')}\n      title={title}\n    >\n      <RadioGroup\n        name=\"report-message\"\n        options={REPORT_OPTIONS}\n        onChange={handleSelectReason}\n        selected={selectedReason}\n      />\n      <InputText\n        label={lang('lng_report_reason_description')}\n        value={description}\n        onChange={handleDescriptionChange}\n      />\n      <div className=\"dialog-buttons\">\n        <Button color=\"danger\" className=\"confirm-dialog-button\" isText onClick={handleReport}>\n          {lang('lng_report_button')}\n        </Button>\n        <Button className=\"confirm-dialog-button\" isText onClick={onClose}>{lang('Cancel')}</Button>\n      </div>\n    </Modal>\n  );\n};\n\nexport default memo(ReportModal);\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo } from '../../lib/teact/teact';\n\nimport type { ApiTopic } from '../../api/types';\nimport type { ObserveFn } from '../../hooks/useIntersectionObserver';\n\nimport CustomEmoji from './CustomEmoji';\nimport TopicDefaultIcon from './TopicDefaultIcon';\n\ntype OwnProps = {\n  topic: Pick<ApiTopic, 'iconEmojiId' | 'iconColor' | 'title' | 'id'>;\n  className?: string;\n  letterClassName?: string;\n  size?: number;\n  noLoopLimit?: true;\n  observeIntersection?: ObserveFn;\n  onClick?: NoneToVoidFunction;\n};\n\nconst LOOP_LIMIT = 2;\nconst DEFAULT_ICON_ID = '0';\n\nconst TopicIcon: FC<OwnProps> = ({\n  topic,\n  className,\n  letterClassName,\n  size,\n  noLoopLimit,\n  observeIntersection,\n  onClick,\n}) => {\n  if (topic.iconEmojiId && topic.iconEmojiId !== DEFAULT_ICON_ID) {\n    return (\n      <CustomEmoji\n        documentId={topic.iconEmojiId}\n        className={className}\n        size={size}\n        observeIntersectionForPlaying={observeIntersection}\n        loopLimit={!noLoopLimit ? LOOP_LIMIT : undefined}\n        onClick={onClick}\n      />\n    );\n  }\n\n  return (\n    <TopicDefaultIcon\n      iconColor={topic.iconColor}\n      title={topic.title}\n      topicId={topic.id}\n      className={className}\n      letterClassName={letterClassName}\n      onClick={onClick}\n    />\n  );\n};\n\nexport default memo(TopicIcon);\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo } from '../../lib/teact/teact';\nimport { withGlobal } from '../../global';\n\nimport type { ApiTypingStatus, ApiUser } from '../../api/types';\n\nimport { getUserFirstOrLastName } from '../../global/helpers';\nimport { selectUser } from '../../global/selectors';\nimport renderText from './helpers/renderText';\n\nimport useOldLang from '../../hooks/useOldLang';\n\nimport DotAnimation from './DotAnimation';\n\nimport './TypingStatus.scss';\n\ntype OwnProps = {\n  typingStatus: ApiTypingStatus;\n};\n\ntype StateProps = {\n  typingUser?: ApiUser;\n};\n\nconst TypingStatus: FC<OwnProps & StateProps> = ({ typingStatus, typingUser }) => {\n  const lang = useOldLang();\n  const typingUserName = typingUser && !typingUser.isSelf && getUserFirstOrLastName(typingUser);\n  const content = lang(typingStatus.action)\n    // Fix for translation \"{user} is typing\"\n    .replace('{user}', '')\n    .replace('{emoji}', typingStatus.emoji || '').trim();\n\n  return (\n    <p className=\"typing-status\" dir={lang.isRtl ? 'rtl' : 'auto'}>\n      {typingUserName && (\n        <span className=\"sender-name\" dir=\"auto\">{renderText(typingUserName)}</span>\n      )}\n      <DotAnimation content={content} />\n    </p>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { typingStatus }): StateProps => {\n    if (!typingStatus.userId) {\n      return {};\n    }\n\n    const typingUser = selectUser(global, typingStatus.userId);\n\n    return { typingUser };\n  },\n)(TypingStatus));\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo } from '../../lib/teact/teact';\n\nimport type { ApiMessage, ApiWebPage } from '../../api/types';\nimport type { ObserveFn } from '../../hooks/useIntersectionObserver';\nimport type { TextPart } from '../../types';\n\nimport {\n  getFirstLinkInMessage, getMessageText,\n  getMessageWebPage,\n} from '../../global/helpers';\nimport buildClassName from '../../util/buildClassName';\nimport { formatPastTimeShort } from '../../util/dates/dateFormat';\nimport trimText from '../../util/trimText';\nimport { renderMessageSummary } from './helpers/renderMessageText';\nimport renderText from './helpers/renderText';\n\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Link from '../ui/Link';\nimport Media from './Media';\nimport SafeLink from './SafeLink';\n\nimport './WebLink.scss';\n\nconst MAX_TEXT_LENGTH = 170; // symbols\n\ntype OwnProps = {\n  message: ApiMessage;\n  senderTitle?: string;\n  isProtected?: boolean;\n  observeIntersection?: ObserveFn;\n  onMessageClick: (message: ApiMessage) => void;\n};\n\ntype ApiWebPageWithFormatted =\n  ApiWebPage\n  & { formattedDescription?: TextPart[] };\n\nconst WebLink: FC<OwnProps> = ({\n  message, senderTitle, isProtected, observeIntersection, onMessageClick,\n}) => {\n  const lang = useOldLang();\n\n  let linkData: ApiWebPageWithFormatted | undefined = getMessageWebPage(message);\n\n  if (!linkData) {\n    const link = getFirstLinkInMessage(message);\n    if (link) {\n      const { url, domain } = link;\n\n      linkData = {\n        siteName: domain.replace(/^www./, ''),\n        url: url.includes('://') ? url : url.includes('@') ? `mailto:${url}` : `http://${url}`,\n        formattedDescription: getMessageText(message) !== url\n          ? renderMessageSummary(lang, message, undefined, undefined, MAX_TEXT_LENGTH)\n          : undefined,\n      } as ApiWebPageWithFormatted;\n    }\n  }\n\n  const handleMessageClick = useLastCallback(() => {\n    onMessageClick(message);\n  });\n\n  if (!linkData) {\n    return undefined;\n  }\n\n  const {\n    siteName,\n    url,\n    displayUrl,\n    title,\n    description,\n    formattedDescription,\n    photo,\n    video,\n  } = linkData;\n\n  const truncatedDescription = !senderTitle && description && trimText(description, MAX_TEXT_LENGTH);\n\n  const className = buildClassName(\n    'WebLink scroll-item',\n    (!photo && !video) && 'without-media',\n  );\n\n  const safeLinkContent = url.replace('mailto:', '') || displayUrl;\n\n  return (\n    <div\n      className={className}\n      data-initial={(siteName || displayUrl)[0]}\n      dir={lang.isRtl ? 'rtl' : undefined}\n    >\n      {photo && (\n        <Media message={message} isProtected={isProtected} observeIntersection={observeIntersection} />\n      )}\n      <div className=\"content\">\n        <Link isRtl={lang.isRtl} className=\"site-title\" onClick={handleMessageClick}>\n          {renderText(title || siteName || displayUrl)}\n        </Link>\n        {(truncatedDescription || formattedDescription) && (\n          <Link isRtl={lang.isRtl} className=\"site-description\" onClick={handleMessageClick}>\n            {formattedDescription || (truncatedDescription && renderText(truncatedDescription))}\n          </Link>\n        )}\n        <SafeLink\n          url={url}\n          className=\"site-name\"\n          text={safeLinkContent}\n          isRtl={lang.isRtl}\n        />\n        {senderTitle && <div className=\"sender-name\">{renderText(senderTitle)}</div>}\n      </div>\n      {senderTitle && (\n        <div className=\"message-date\">\n          <Link\n            className=\"date\"\n            onClick={handleMessageClick}\n            isRtl={lang.isRtl}\n          >\n            {formatPastTimeShort(lang, message.date * 1000)}\n          </Link>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default memo(WebLink);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { useMemo, useRef } from '../../../lib/teact/teact';\n\nimport type {\n  ApiChat,\n  ApiMessage, ApiPeer, ApiReplyInfo, MediaContainer,\n} from '../../../api/types';\nimport type { ChatTranslatedMessages } from '../../../global/types';\nimport type { ObserveFn } from '../../../hooks/useIntersectionObserver';\nimport type { IconName } from '../../../types/icons';\n\nimport { CONTENT_NOT_SUPPORTED } from '../../../config';\nimport {\n  getMessageIsSpoiler,\n  getMessageMediaHash,\n  getMessageRoundVideo,\n  getSenderTitle,\n  isActionMessage,\n  isChatChannel,\n  isChatGroup,\n  isMessageTranslatable,\n  isUserId,\n} from '../../../global/helpers';\nimport { getMediaContentTypeDescription } from '../../../global/helpers/messageSummary';\nimport buildClassName from '../../../util/buildClassName';\nimport freezeWhenClosed from '../../../util/hoc/freezeWhenClosed';\nimport { getPictogramDimensions } from '../helpers/mediaDimensions';\nimport { getPeerColorClass } from '../helpers/peerColor';\nimport renderText from '../helpers/renderText';\nimport { renderTextWithEntities } from '../helpers/renderTextWithEntities';\n\nimport { useFastClick } from '../../../hooks/useFastClick';\nimport { useIsIntersecting } from '../../../hooks/useIntersectionObserver';\nimport useMedia from '../../../hooks/useMedia';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useThumbnail from '../../../hooks/useThumbnail';\nimport useMessageTranslation from '../../middle/message/hooks/useMessageTranslation';\n\nimport ActionMessage from '../../middle/ActionMessage';\nimport RippleEffect from '../../ui/RippleEffect';\nimport Icon from '../icons/Icon';\nimport MediaSpoiler from '../MediaSpoiler';\nimport MessageSummary from '../MessageSummary';\nimport EmojiIconBackground from './EmojiIconBackground';\n\nimport './EmbeddedMessage.scss';\n\ntype OwnProps = {\n  className?: string;\n  replyInfo?: ApiReplyInfo;\n  message?: ApiMessage;\n  sender?: ApiPeer;\n  senderChat?: ApiChat;\n  forwardSender?: ApiPeer;\n  title?: string;\n  customText?: string;\n  noUserColors?: boolean;\n  isProtected?: boolean;\n  isInComposer?: boolean;\n  chatTranslations?: ChatTranslatedMessages;\n  requestedChatTranslationLanguage?: string;\n  isOpen?: boolean;\n  observeIntersectionForLoading?: ObserveFn;\n  observeIntersectionForPlaying?: ObserveFn;\n  onClick: ((e: React.MouseEvent) => void);\n};\n\nconst NBSP = '\\u00A0';\nconst EMOJI_SIZE = 17;\n\nconst EmbeddedMessage: FC<OwnProps> = ({\n  className,\n  message,\n  replyInfo,\n  sender,\n  senderChat,\n  forwardSender,\n  title,\n  customText,\n  isProtected,\n  isInComposer,\n  noUserColors,\n  chatTranslations,\n  requestedChatTranslationLanguage,\n  observeIntersectionForLoading,\n  observeIntersectionForPlaying,\n  onClick,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n  const isIntersecting = useIsIntersecting(ref, observeIntersectionForLoading);\n\n  const containedMedia: MediaContainer | undefined = useMemo(() => {\n    const media = (replyInfo?.type === 'message' && replyInfo.replyMedia) || message?.content;\n    if (!media) {\n      return undefined;\n    }\n\n    return {\n      content: media,\n    };\n  }, [message, replyInfo]);\n\n  const mediaHash = containedMedia && getMessageMediaHash(containedMedia, 'pictogram');\n  const mediaBlobUrl = useMedia(mediaHash, !isIntersecting);\n  const mediaThumbnail = useThumbnail(containedMedia);\n  const isRoundVideo = Boolean(message && getMessageRoundVideo(message));\n  const isSpoiler = Boolean(message && getMessageIsSpoiler(message));\n  const isQuote = Boolean(replyInfo?.type === 'message' && replyInfo.isQuote);\n  const replyForwardInfo = replyInfo?.type === 'message' ? replyInfo.replyFrom : undefined;\n\n  const shouldTranslate = message && isMessageTranslatable(message);\n  const { translatedText } = useMessageTranslation(\n    chatTranslations, message?.chatId, shouldTranslate ? message?.id : undefined, requestedChatTranslationLanguage,\n  );\n\n  const lang = useOldLang();\n\n  const senderTitle = sender ? getSenderTitle(lang, sender)\n    : (replyForwardInfo?.hiddenUserName || message?.forwardInfo?.hiddenUserName);\n  const senderChatTitle = senderChat ? getSenderTitle(lang, senderChat) : undefined;\n  const forwardSenderTitle = forwardSender ? getSenderTitle(lang, forwardSender)\n    : message?.forwardInfo?.hiddenUserName;\n  const areSendersSame = sender && sender.id === forwardSender?.id;\n\n  const { handleClick, handleMouseDown } = useFastClick(onClick);\n\n  function renderTextContent() {\n    if (replyInfo?.type === 'message' && replyInfo.quoteText) {\n      return renderTextWithEntities({\n        text: replyInfo.quoteText.text,\n        entities: replyInfo.quoteText.entities,\n        noLineBreaks: isInComposer,\n        emojiSize: EMOJI_SIZE,\n      });\n    }\n\n    if (!message) {\n      return customText || renderMediaContentType(containedMedia) || NBSP;\n    }\n\n    if (isActionMessage(message)) {\n      return (\n        <ActionMessage\n          message={message}\n          isEmbedded\n          observeIntersectionForLoading={observeIntersectionForLoading}\n          observeIntersectionForPlaying={observeIntersectionForPlaying}\n        />\n      );\n    }\n\n    return (\n      <MessageSummary\n        message={message}\n        noEmoji={Boolean(mediaThumbnail)}\n        translatedText={translatedText}\n        observeIntersectionForLoading={observeIntersectionForLoading}\n        observeIntersectionForPlaying={observeIntersectionForPlaying}\n        emojiSize={EMOJI_SIZE}\n      />\n    );\n  }\n\n  function renderMediaContentType(media?: MediaContainer) {\n    if (!media || media.content.text) return NBSP;\n    const description = getMediaContentTypeDescription(lang, media.content);\n    if (!description || description === CONTENT_NOT_SUPPORTED) return NBSP;\n    return (\n      <span>\n        {renderText(description)}\n      </span>\n    );\n  }\n\n  function checkShouldRenderSenderTitle() {\n    if (!senderChat) return true;\n    if (isUserId(senderChat?.id)) return true;\n    if (senderChat.id === sender?.id) return false;\n    return true;\n  }\n  function renderSender() {\n    if (title) {\n      return renderText(title);\n    }\n\n    if (!senderTitle) {\n      return NBSP;\n    }\n\n    let icon: IconName | undefined;\n    if (senderChat) {\n      if (isChatChannel(senderChat)) {\n        icon = 'channel-filled';\n      }\n\n      if (isChatGroup(senderChat)) {\n        icon = 'group-filled';\n      }\n    }\n\n    const isReplyToQuote = isInComposer && Boolean(replyInfo && 'quoteText' in replyInfo && replyInfo?.quoteText);\n\n    return (\n      <>\n        {checkShouldRenderSenderTitle() && (\n          <span className=\"embedded-sender\">\n            {renderText(isReplyToQuote ? lang('ReplyToQuote', senderTitle) : senderTitle)}\n          </span>\n        )}\n        {icon && <Icon name={icon} className=\"embedded-chat-icon\" />}\n        {icon && senderChatTitle && (\n          <span className=\"embedded-sender-chat\">\n            {renderText(senderChatTitle)}\n          </span>\n        )}\n      </>\n    );\n  }\n\n  return (\n    <div\n      ref={ref}\n      className={buildClassName(\n        'EmbeddedMessage',\n        className,\n        getPeerColorClass(sender, noUserColors, true),\n        isQuote && 'is-quote',\n        mediaThumbnail && 'with-thumb',\n      )}\n      dir={lang.isRtl ? 'rtl' : undefined}\n      onClick={handleClick}\n      onMouseDown={handleMouseDown}\n    >\n      <div className=\"hover-effect\" />\n      <RippleEffect />\n      {mediaThumbnail && renderPictogram(mediaThumbnail, mediaBlobUrl, isRoundVideo, isProtected, isSpoiler)}\n      {sender?.color?.backgroundEmojiId && (\n        <EmojiIconBackground\n          emojiDocumentId={sender.color.backgroundEmojiId}\n          className=\"EmbeddedMessage--background-icons\"\n        />\n      )}\n      <div className=\"message-text\">\n        <p className={buildClassName('embedded-text-wrapper', isQuote && 'multiline')}>\n          {renderTextContent()}\n        </p>\n        <div className=\"message-title\">\n          {renderSender()}\n          {forwardSenderTitle && !areSendersSame && (\n            <>\n              <Icon name={forwardSender ? 'share-filled' : 'forward'} className=\"embedded-origin-icon\" />\n              {renderText(forwardSenderTitle)}\n            </>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nfunction renderPictogram(\n  thumbDataUri: string,\n  blobUrl?: string,\n  isRoundVideo?: boolean,\n  isProtected?: boolean,\n  isSpoiler?: boolean,\n) {\n  const { width, height } = getPictogramDimensions();\n\n  const srcUrl = blobUrl || thumbDataUri;\n\n  return (\n    <div className={buildClassName('embedded-thumb', isRoundVideo && 'round')}>\n      {!isSpoiler && (\n        <img\n          src={srcUrl}\n          width={width}\n          height={height}\n          alt=\"\"\n          className=\"pictogram\"\n          draggable={false}\n        />\n      )}\n      <MediaSpoiler thumbDataUri={srcUrl} isVisible={Boolean(isSpoiler)} width={width} height={height} />\n      {isProtected && <span className=\"protector\" />}\n    </div>\n  );\n}\n\nexport const ClosableEmbeddedMessage = freezeWhenClosed(EmbeddedMessage);\n\nexport default EmbeddedMessage;\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"pTWe_CYU\"};","import React, {\n  memo, useEffect, useRef, useState,\n} from '../../../lib/teact/teact';\n\nimport { requestMutation } from '../../../lib/fasterdom/fasterdom';\nimport { getStickerMediaHash } from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\nimport { preloadImage } from '../../../util/files';\nimport { REM } from '../helpers/mediaDimensions';\n\nimport useDynamicColorListener from '../../../hooks/stickers/useDynamicColorListener';\nimport { useThrottleForHeavyAnimation } from '../../../hooks/useHeavyAnimation';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMedia from '../../../hooks/useMedia';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useResizeObserver from '../../../hooks/useResizeObserver';\nimport useDevicePixelRatio from '../../../hooks/window/useDevicePixelRatio';\nimport useCustomEmoji from '../hooks/useCustomEmoji';\n\nimport styles from './EmojiIconBackground.module.scss';\n\ntype IconPosition = {\n  inline: number;\n  block: number;\n  opacity: number;\n  scale: number;\n};\n\nconst ICON_POSITIONS: IconPosition[] = [\n  {\n    inline: 22, block: 38, opacity: 0.35, scale: 0.75,\n  },\n  {\n    inline: 32, block: 12, opacity: 0.3, scale: 1,\n  },\n  {\n    inline: 60, block: 22, opacity: 0.25, scale: 0.75,\n  },\n  {\n    inline: 75, block: 44, opacity: 0.25, scale: 1,\n  },\n  {\n    inline: 75, block: 2, opacity: 0.2, scale: 0.625,\n  },\n  {\n    inline: 95, block: 18, opacity: 0.2, scale: 1,\n  },\n  {\n    inline: 115, block: 38, opacity: 0.2, scale: 0.625,\n  },\n  {\n    inline: 125, block: 12, opacity: 0.1, scale: 0.75,\n  },\n];\n\nconst EMOJI_SIZE = REM;\nconst LOTTIE_TINT_OPACITY = 'ff';\nconst NON_LOTTIE_TINT_OPACITY = 'bb';\n\ntype OwnProps = {\n  emojiDocumentId: string;\n  className?: string;\n};\n\nconst EmojiIconBackground = ({\n  emojiDocumentId,\n  className,\n}: OwnProps) => {\n  // eslint-disable-next-line no-null/no-null\n  const canvasRef = useRef<HTMLCanvasElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n\n  const [emojiImage, setEmojiImage] = useState<HTMLImageElement | undefined>();\n\n  const dpr = useDevicePixelRatio();\n\n  const lang = useOldLang();\n\n  const { customEmoji } = useCustomEmoji(emojiDocumentId);\n  const previewMediaHash = customEmoji ? getStickerMediaHash(customEmoji, 'preview') : undefined;\n  const previewUrl = useMedia(previewMediaHash);\n\n  const customColor = useDynamicColorListener(containerRef);\n\n  const preloadAfterHeavyAnimation = useThrottleForHeavyAnimation(() => {\n    if (!previewUrl) return;\n    preloadImage(previewUrl).then(setEmojiImage);\n  }, [previewUrl]);\n\n  useEffect(() => {\n    preloadAfterHeavyAnimation();\n  }, [preloadAfterHeavyAnimation]);\n\n  const updateCanvas = useLastCallback(() => {\n    const canvas = canvasRef.current;\n    if (!canvas || !emojiImage || !customColor) return;\n\n    const context = canvas.getContext('2d')!;\n    const { width, height } = canvas;\n\n    context.clearRect(0, 0, width, height);\n\n    ICON_POSITIONS.forEach(({\n      inline, block, opacity, scale,\n    }) => {\n      const x = (lang.isRtl ? inline : width / dpr - inline) * dpr;\n      const y = block * dpr;\n\n      const emojiSize = EMOJI_SIZE * dpr;\n\n      context.save();\n      context.globalAlpha = opacity;\n      context.translate(x, y);\n      context.scale(scale, scale);\n      context.drawImage(emojiImage, -emojiSize / 2, -emojiSize / 2, emojiSize, emojiSize);\n      context.restore();\n    });\n\n    const tintColor = `${customColor}${customEmoji!.isLottie ? LOTTIE_TINT_OPACITY : NON_LOTTIE_TINT_OPACITY}`;\n\n    context.save();\n    context.fillStyle = tintColor;\n    context.globalCompositeOperation = 'source-atop';\n    context.fillRect(0, 0, width, height);\n    context.restore();\n  });\n\n  const updateCanvasAfterHeavyAnimation = useThrottleForHeavyAnimation(updateCanvas, [updateCanvas]);\n\n  useEffect(() => {\n    updateCanvasAfterHeavyAnimation();\n  }, [emojiImage, lang.isRtl, customColor, updateCanvasAfterHeavyAnimation]);\n\n  const updateCanvasSize = useThrottleForHeavyAnimation((parentWidth: number, parentHeight: number) => {\n    requestMutation(() => {\n      const canvas = canvasRef.current;\n      if (!canvas) return;\n\n      canvas.width = parentWidth * dpr;\n      canvas.height = parentHeight * dpr;\n\n      canvas.style.width = `${parentWidth}px`;\n      canvas.style.height = `${parentHeight}px`;\n\n      updateCanvas();\n    });\n  }, [dpr]);\n\n  const handleResize = useThrottleForHeavyAnimation((entry: ResizeObserverEntry) => {\n    const { width, height } = entry.contentRect;\n\n    updateCanvasSize(width, height);\n  }, [updateCanvasSize]);\n\n  useResizeObserver(containerRef, handleResize);\n\n  useEffect(() => {\n    const container = containerRef.current;\n    if (!container) return;\n\n    const { width, height } = container.getBoundingClientRect();\n\n    updateCanvasSize(width, height);\n  }, [updateCanvasSize]);\n\n  return (\n    <div className={buildClassName(styles.root, className)} ref={containerRef}>\n      <canvas ref={canvasRef} />\n    </div>\n  );\n};\n\nexport default memo(EmojiIconBackground);\n","import type { ApiBoostsStatus } from '../../../api/types';\n\nexport function getBoostProgressInfo(boostInfo: ApiBoostsStatus, freezeOnLevelUp?: boolean) {\n  const {\n    level, boosts, currentLevelBoosts, nextLevelBoosts, hasMyBoost, prepaidGiveaways,\n  } = boostInfo;\n\n  const isJustUpgraded = freezeOnLevelUp && boosts === currentLevelBoosts && hasMyBoost;\n\n  const currentLevel = isJustUpgraded ? level - 1 : level;\n  const hasNextLevel = Boolean(nextLevelBoosts);\n\n  const levelProgress = (!nextLevelBoosts || isJustUpgraded) ? 1\n    : (boosts - currentLevelBoosts) / (nextLevelBoosts - currentLevelBoosts);\n  const remainingBoosts = nextLevelBoosts ? nextLevelBoosts - boosts : 0;\n\n  const isMaxLevel = nextLevelBoosts === undefined;\n\n  return {\n    currentLevel,\n    hasNextLevel,\n    boosts,\n    levelProgress,\n    remainingBoosts,\n    isMaxLevel,\n    prepaidGiveaways,\n  };\n}\n","import { TME_LINK_PREFIX } from '../../../config';\n\nexport default function formatUsername(username: string, asAbsoluteLink?: boolean) {\n  return asAbsoluteLink ? `${TME_LINK_PREFIX}${username}` : `@${username}`;\n}\n","import type { ApiMessage, ApiSponsoredMessage } from '../../../api/types';\nimport type { LangFn } from '../../../hooks/useOldLang';\nimport type { TextPart } from '../../../types';\nimport { ApiMessageEntityTypes } from '../../../api/types';\n\nimport {\n  getMessageText,\n} from '../../../global/helpers';\nimport {\n  getMessageSummaryDescription,\n  getMessageSummaryEmoji,\n  getMessageSummaryText,\n  TRUNCATED_SUMMARY_LENGTH,\n} from '../../../global/helpers/messageSummary';\nimport { getMessageKey } from '../../../util/keys/messageKey';\nimport trimText from '../../../util/trimText';\nimport renderText from './renderText';\nimport { renderTextWithEntities } from './renderTextWithEntities';\n\nexport function renderMessageText({\n  message,\n  highlight,\n  emojiSize,\n  isSimple,\n  truncateLength,\n  isProtected,\n  forcePlayback,\n  shouldRenderAsHtml,\n  isForMediaViewer,\n} : {\n  message: ApiMessage | ApiSponsoredMessage;\n  highlight?: string;\n  emojiSize?: number;\n  isSimple?: boolean;\n  truncateLength?: number;\n  isProtected?: boolean;\n  forcePlayback?: boolean;\n  shouldRenderAsHtml?: boolean;\n  isForMediaViewer?: boolean;\n}) {\n  const { text, entities } = message.content.text || {};\n\n  if (!text) {\n    const contentNotSupportedText = getMessageText(message);\n    return contentNotSupportedText ? [trimText(contentNotSupportedText, truncateLength)] : undefined;\n  }\n\n  const messageKey = getMessageKey(message);\n\n  return renderTextWithEntities({\n    text: trimText(text, truncateLength),\n    entities,\n    highlight,\n    emojiSize,\n    shouldRenderAsHtml,\n    containerId: `${isForMediaViewer ? 'mv-' : ''}${messageKey}`,\n    isSimple,\n    isProtected,\n    forcePlayback,\n  });\n}\n\n// TODO Use Message Summary component instead\nexport function renderMessageSummary(\n  lang: LangFn,\n  message: ApiMessage,\n  noEmoji = false,\n  highlight?: string,\n  truncateLength = TRUNCATED_SUMMARY_LENGTH,\n): TextPart[] {\n  const { entities } = message.content.text || {};\n\n  const hasSpoilers = entities?.some((e) => e.type === ApiMessageEntityTypes.Spoiler);\n  const hasCustomEmoji = entities?.some((e) => e.type === ApiMessageEntityTypes.CustomEmoji);\n  if (!hasSpoilers && !hasCustomEmoji) {\n    const text = trimText(getMessageSummaryText(lang, message, noEmoji), truncateLength);\n\n    if (highlight) {\n      return renderText(text, ['emoji', 'highlight'], { highlight });\n    } else {\n      return renderText(text);\n    }\n  }\n\n  const emoji = !noEmoji && getMessageSummaryEmoji(message);\n  const emojiWithSpace = emoji ? `${emoji} ` : '';\n\n  const text = renderMessageText({\n    message, highlight, isSimple: true, truncateLength,\n  });\n  const description = getMessageSummaryDescription(lang, message, text);\n\n  return [\n    ...renderText(emojiWithSpace),\n    ...(Array.isArray(description) ? description : [description]),\n  ].filter(Boolean);\n}\n","import { getGlobal } from '../../../global';\n\nimport { selectChat, selectChatLastMessage } from '../../../global/selectors';\nimport { orderBy } from '../../../util/iteratees';\n\nconst VERIFIED_PRIORITY_BASE = 3e9;\nconst PINNED_PRIORITY_BASE = 3e8;\n\nexport default function sortChatIds(\n  chatIds: string[],\n  shouldPrioritizeVerified = false,\n  priorityIds?: string[],\n  currentUserId?: string,\n) {\n  // Avoid calling sort on every global change\n  const global = getGlobal();\n\n  return orderBy(chatIds, (id) => {\n    if (id === currentUserId) {\n      return Infinity;\n    }\n\n    const chat = selectChat(global, id);\n    if (!chat) {\n      return 0;\n    }\n\n    let priority = 0;\n\n    const lastMessage = selectChatLastMessage(global, id);\n    if (lastMessage) {\n      priority += lastMessage.date;\n    }\n\n    if (shouldPrioritizeVerified && chat.isVerified) {\n      priority += VERIFIED_PRIORITY_BASE; // ~100 years in seconds\n    }\n\n    if (priorityIds && priorityIds.includes(id)) {\n      priority = Date.now() + PINNED_PRIORITY_BASE + (priorityIds.length - priorityIds.indexOf(id));\n    }\n\n    return priority;\n  }, 'desc');\n}\n","import React, {\n  memo, useCallback, useEffect, useMemo, useRef,\n} from '../../../lib/teact/teact';\nimport { getGlobal } from '../../../global';\n\nimport type { CustomPeerType, UniqueCustomPeer } from '../../../types';\n\nimport { DEBUG } from '../../../config';\nimport { requestMeasure } from '../../../lib/fasterdom/fasterdom';\nimport { getGroupStatus, getUserStatus, isUserOnline } from '../../../global/helpers';\nimport { getPeerTypeKey, isApiPeerChat } from '../../../global/helpers/peers';\nimport { selectPeer, selectUserStatus } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { buildCollectionByKey } from '../../../util/iteratees';\nimport { MEMO_EMPTY_ARRAY } from '../../../util/memo';\n\nimport useInfiniteScroll from '../../../hooks/useInfiniteScroll';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Checkbox from '../../ui/Checkbox';\nimport InfiniteScroll from '../../ui/InfiniteScroll';\nimport InputText from '../../ui/InputText';\nimport Loading from '../../ui/Loading';\nimport Radio from '../../ui/Radio';\nimport Avatar from '../Avatar';\nimport FullNameTitle from '../FullNameTitle';\nimport Icon from '../icons/Icon';\nimport PickerItem from './PickerItem';\nimport PickerSelectedItem from './PickerSelectedItem';\n\nimport styles from './PickerStyles.module.scss';\n\ntype SingleModeProps = {\n  allowMultiple?: false;\n  itemInputType?: 'radio';\n  selectedId?: string;\n  selectedIds?: never; // Help TS to throw an error if this is passed\n  selectedCategory?: CustomPeerType;\n  selectedCategories?: never;\n  onSelectedCategoryChange?: (category: CustomPeerType) => void;\n  onSelectedIdChange?: (id: string) => void;\n};\n\ntype MultipleModeProps = {\n  allowMultiple: true;\n  itemInputType: 'checkbox';\n  selectedId?: never;\n  selectedIds: string[];\n  lockedSelectedIds?: string[];\n  lockedUnselectedIds?: string[];\n  selectedCategory?: never;\n  selectedCategories?: CustomPeerType[];\n  onSelectedCategoriesChange?: (categories: CustomPeerType[]) => void;\n  onSelectedIdsChange?: (Ids: string[]) => void;\n};\n\ntype OwnProps = {\n  className?: string;\n  categories?: UniqueCustomPeer[];\n  itemIds: string[];\n  lockedUnselectedSubtitle?: string;\n  filterValue?: string;\n  filterPlaceholder?: string;\n  categoryPlaceholderKey?: string;\n  notFoundText?: string;\n  searchInputId?: string;\n  itemClassName?: string;\n  isLoading?: boolean;\n  noScrollRestore?: boolean;\n  isSearchable?: boolean;\n  forceShowSelf?: boolean;\n  isViewOnly?: boolean;\n  withStatus?: boolean;\n  withPeerTypes?: boolean;\n  withDefaultPadding?: boolean;\n  onFilterChange?: (value: string) => void;\n  onDisabledClick?: (id: string, isSelected: boolean) => void;\n  onLoadMore?: () => void;\n} & (SingleModeProps | MultipleModeProps);\n\n// Focus slows down animation, also it breaks transition layout in Chrome\nconst FOCUS_DELAY_MS = 500;\n\nconst MAX_FULL_ITEMS = 10;\nconst ALWAYS_FULL_ITEMS_COUNT = 5;\n\nconst ITEM_CLASS_NAME = 'PeerPickerItem';\n\nconst PeerPicker = ({\n  className,\n  categories,\n  itemIds,\n  categoryPlaceholderKey,\n  filterValue,\n  filterPlaceholder,\n  notFoundText,\n  searchInputId,\n  itemClassName,\n  isLoading,\n  noScrollRestore,\n  isSearchable,\n  lockedUnselectedSubtitle,\n  forceShowSelf,\n  isViewOnly,\n  itemInputType,\n  withStatus,\n  withPeerTypes,\n  withDefaultPadding,\n  onFilterChange,\n  onDisabledClick,\n  onLoadMore,\n  ...optionalProps\n}: OwnProps) => {\n  const lang = useOldLang();\n\n  const allowMultiple = optionalProps.allowMultiple;\n  const lockedSelectedIds = allowMultiple ? optionalProps.lockedSelectedIds : undefined;\n  const lockedUnselectedIds = allowMultiple ? optionalProps.lockedUnselectedIds : undefined;\n  const selectedCategories = useMemo(() => {\n    if (allowMultiple) {\n      return optionalProps.selectedCategories;\n    }\n\n    return optionalProps.selectedCategory ? [optionalProps.selectedCategory] : MEMO_EMPTY_ARRAY;\n  }, [allowMultiple, optionalProps.selectedCategory, optionalProps.selectedCategories]);\n\n  const selectedIds = useMemo(() => {\n    if (allowMultiple) {\n      return optionalProps.selectedIds;\n    }\n\n    return optionalProps.selectedId ? [optionalProps.selectedId] : MEMO_EMPTY_ARRAY;\n  }, [allowMultiple, optionalProps.selectedId, optionalProps.selectedIds]);\n\n  // eslint-disable-next-line no-null/no-null\n  const inputRef = useRef<HTMLInputElement>(null);\n  const shouldMinimize = selectedIds.length > MAX_FULL_ITEMS;\n\n  useEffect(() => {\n    if (!isSearchable) return undefined;\n    const timeoutId = window.setTimeout(() => {\n      requestMeasure(() => {\n        inputRef.current?.focus();\n      });\n    }, FOCUS_DELAY_MS);\n\n    return () => {\n      window.clearTimeout(timeoutId);\n    };\n  }, [isSearchable]);\n\n  const lockedSelectedIdsSet = useMemo(() => new Set(lockedSelectedIds), [lockedSelectedIds]);\n  const lockedUnselectedIdsSet = useMemo(() => new Set(lockedUnselectedIds), [lockedUnselectedIds]);\n\n  const unlockedSelectedIds = useMemo(() => {\n    return selectedIds.filter((id) => !lockedSelectedIdsSet.has(id));\n  }, [lockedSelectedIdsSet, selectedIds]);\n\n  const categoriesByType = useMemo(() => {\n    if (!categories) return {};\n    return buildCollectionByKey(categories, 'type');\n  }, [categories]);\n\n  const sortedItemIds = useMemo(() => {\n    if (filterValue) {\n      return itemIds;\n    }\n\n    const lockedSelectedBucket: string[] = [];\n    const unlockedBucket: string[] = [];\n    const lockedUnselectableBucket: string[] = [];\n\n    itemIds.forEach((id) => {\n      if (lockedSelectedIdsSet.has(id)) {\n        lockedSelectedBucket.push(id);\n      } else if (lockedUnselectedIdsSet.has(id)) {\n        lockedUnselectableBucket.push(id);\n      } else {\n        unlockedBucket.push(id);\n      }\n    });\n\n    return lockedSelectedBucket.concat(unlockedBucket, lockedUnselectableBucket);\n  }, [filterValue, itemIds, lockedSelectedIdsSet, lockedUnselectedIdsSet]);\n\n  const handleItemClick = useLastCallback((id: string) => {\n    if (lockedSelectedIdsSet.has(id)) {\n      onDisabledClick?.(id, true);\n      return;\n    }\n\n    if (lockedUnselectedIdsSet.has(id)) {\n      onDisabledClick?.(id, false);\n      return;\n    }\n\n    if (allowMultiple && categoriesByType[id]) {\n      const categoryType = categoriesByType[id].type;\n      const newSelectedCategories = selectedCategories?.slice() || [];\n      if (newSelectedCategories.includes(categoryType)) {\n        newSelectedCategories.splice(newSelectedCategories.indexOf(categoryType), 1);\n      } else {\n        newSelectedCategories.push(categoryType);\n      }\n      optionalProps.onSelectedCategoriesChange?.(newSelectedCategories);\n\n      return;\n    }\n\n    if (allowMultiple) {\n      const newSelectedIds = selectedIds.slice();\n      if (newSelectedIds.includes(id)) {\n        newSelectedIds.splice(newSelectedIds.indexOf(id), 1);\n      } else {\n        newSelectedIds.push(id);\n      }\n      optionalProps.onSelectedIdsChange?.(newSelectedIds);\n\n      return;\n    }\n\n    if (categoriesByType[id]) {\n      optionalProps.onSelectedCategoryChange?.(categoriesByType[id].type);\n      return;\n    }\n\n    optionalProps.onSelectedIdChange?.(id);\n  });\n\n  const handleFilterChange = useLastCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    const { value } = e.currentTarget;\n    onFilterChange?.(value);\n  });\n\n  const [viewportIds, getMore] = useInfiniteScroll(\n    onLoadMore, sortedItemIds, Boolean(filterValue),\n  );\n\n  const renderItem = useCallback((id: string, isCategory?: boolean) => {\n    const global = getGlobal();\n    const category = isCategory ? categoriesByType[id] : undefined;\n    const peer = !isCategory ? selectPeer(global, id) : undefined;\n\n    const peerOrCategory = peer || category;\n    if (!peerOrCategory) {\n      if (DEBUG) return <div key={id}>No peer or category with ID {id}</div>;\n      return undefined;\n    }\n\n    const isSelf = peer && !isApiPeerChat(peer) ? (peer.isSelf && !forceShowSelf) : undefined;\n\n    const isAlwaysUnselected = lockedUnselectedIdsSet.has(id);\n    const isAlwaysSelected = lockedSelectedIdsSet.has(id);\n    const isLocked = isAlwaysUnselected || isAlwaysSelected;\n    const isChecked = category ? selectedCategories?.includes(category.type) : selectedIds.includes(id);\n\n    function getInputElement() {\n      if (isLocked) return <Icon name=\"lock-badge\" />;\n      if (itemInputType === 'radio') {\n        return <Radio checked={isChecked} disabled={isLocked} onlyInput />;\n      }\n      if (itemInputType === 'checkbox') {\n        return <Checkbox checked={isChecked} disabled={isLocked} onlyInput />;\n      }\n      return undefined;\n    }\n\n    function getSubtitle() {\n      if (isAlwaysUnselected) return [lockedUnselectedSubtitle];\n      if (withStatus && peer) {\n        if (isApiPeerChat(peer)) {\n          return [getGroupStatus(lang, peer)];\n        }\n\n        const userStatus = selectUserStatus(global, peer.id);\n        return [\n          getUserStatus(lang, peer, userStatus),\n          buildClassName(isUserOnline(peer, userStatus, true) && styles.onlineStatus),\n        ];\n      }\n      if (withPeerTypes && peer) {\n        const langKey = getPeerTypeKey(peer);\n        return langKey && [lang(langKey)];\n      }\n      return undefined;\n    }\n\n    const [subtitle, subtitleClassName] = getSubtitle() || [];\n\n    return (\n      <PickerItem\n        key={id}\n        className={buildClassName(ITEM_CLASS_NAME, itemClassName)}\n        title={<FullNameTitle peer={peerOrCategory} />}\n        avatarElement={(\n          <Avatar\n            peer={peer || category}\n            isSavedMessages={isSelf}\n            size=\"medium\"\n          />\n        )}\n        subtitle={subtitle}\n        subtitleClassName={subtitleClassName}\n        disabled={isLocked}\n        inactive={isViewOnly}\n        ripple\n        inputElement={getInputElement()}\n        inputPosition=\"end\"\n        // eslint-disable-next-line react/jsx-no-bind\n        onClick={() => handleItemClick(id)}\n        // eslint-disable-next-line react/jsx-no-bind\n        onDisabledClick={onDisabledClick && (() => onDisabledClick(id, isAlwaysSelected))}\n      />\n    );\n  }, [\n    categoriesByType, forceShowSelf, isViewOnly, itemClassName, itemInputType, lang, lockedSelectedIdsSet,\n    lockedUnselectedIdsSet, lockedUnselectedSubtitle, onDisabledClick, selectedCategories, selectedIds,\n    withPeerTypes, withStatus,\n  ]);\n\n  const beforeChildren = useMemo(() => {\n    if (!categories?.length) return undefined;\n    return (\n      <div key=\"categories\">\n        {categoryPlaceholderKey && <div className={styles.pickerCategoryTitle}>{lang(categoryPlaceholderKey)}</div>}\n        {categories?.map((category) => renderItem(category.type, true))}\n        <div className={styles.pickerCategoryTitle}>{lang('FilterChats')}</div>\n      </div>\n    );\n  }, [categories, categoryPlaceholderKey, lang, renderItem]);\n\n  return (\n    <div className={buildClassName(styles.container, className)}>\n      {isSearchable && (\n        <div className={buildClassName(styles.header, 'custom-scroll')} dir={lang.isRtl ? 'rtl' : undefined}>\n          {selectedCategories?.map((category) => (\n            <PickerSelectedItem\n              customPeer={categoriesByType[category]}\n              onClick={handleItemClick}\n              clickArg={category}\n              canClose\n            />\n          ))}\n          {lockedSelectedIds?.map((id, i) => (\n            <PickerSelectedItem\n              peerId={id}\n              isMinimized={shouldMinimize && i < selectedIds.length - ALWAYS_FULL_ITEMS_COUNT}\n              forceShowSelf={forceShowSelf}\n              onClick={handleItemClick}\n              clickArg={id}\n            />\n          ))}\n          {unlockedSelectedIds.map((id, i) => (\n            <PickerSelectedItem\n              peerId={id}\n              isMinimized={\n                shouldMinimize && i + (lockedSelectedIds?.length || 0) < selectedIds.length - ALWAYS_FULL_ITEMS_COUNT\n              }\n              canClose\n              onClick={handleItemClick}\n              clickArg={id}\n            />\n          ))}\n          <InputText\n            id={searchInputId}\n            ref={inputRef}\n            value={filterValue}\n            onChange={handleFilterChange}\n            placeholder={filterPlaceholder || lang('SelectChat')}\n          />\n        </div>\n      )}\n\n      {viewportIds?.length ? (\n        <InfiniteScroll\n          className={buildClassName(styles.pickerList, withDefaultPadding && styles.padded, 'custom-scroll')}\n          items={viewportIds}\n          itemSelector={`.${ITEM_CLASS_NAME}`}\n          beforeChildren={beforeChildren}\n          onLoadMore={getMore}\n          noScrollRestore={noScrollRestore}\n        >\n          {viewportIds.map((id) => renderItem(id))}\n        </InfiniteScroll>\n      ) : !isLoading && viewportIds && !viewportIds.length ? (\n        <p className={styles.noResults}>{notFoundText || 'Sorry, nothing found.'}</p>\n      ) : (\n        <Loading />\n      )}\n    </div>\n  );\n};\n\nexport default memo(PeerPicker);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"OHkx_W75\",\"clickable\":\"VUSwo4t5\",\"separator\":\"P53DrbWA\",\"disabled\":\"tvZeVJPh\",\"title\":\"JSSC0N8V\",\"subtitle\":\"OYmzCSp2\",\"withAvatar\":\"dMT9byM6\",\"multiline\":\"neXqB2_A\",\"input\":\"kmjqObdP\",\"startInput\":\"F0Hv3EQm\",\"endInput\":\"iqGhSQGm\",\"avatarElement\":\"dnAaRPCo\"};","import React, { type TeactNode } from '../../../lib/teact/teact';\n\nimport buildClassName from '../../../util/buildClassName';\nimport { IS_IOS } from '../../../util/windowEnvironment';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport RippleEffect from '../../ui/RippleEffect';\n\nimport styles from './PickerItem.module.scss';\n\ntype OwnProps = {\n  title: TeactNode;\n  subtitle?: TeactNode;\n  avatarElement?: TeactNode;\n  inputElement?: TeactNode;\n  inputPosition?: 'start' | 'end';\n  disabled?: boolean;\n  inactive?: boolean;\n  ripple?: boolean;\n  className?: string;\n  titleClassName?: string;\n  subtitleClassName?: string;\n  style?: string;\n  onClick?: NoneToVoidFunction;\n  onDisabledClick?: NoneToVoidFunction;\n};\n\nconst PickerItem = ({\n  title,\n  subtitle,\n  avatarElement,\n  inputElement,\n  inputPosition = 'start',\n  disabled,\n  inactive,\n  ripple,\n  className,\n  titleClassName,\n  subtitleClassName,\n  style,\n  onClick,\n  onDisabledClick,\n}: OwnProps) => {\n  const lang = useOldLang();\n\n  const isClickable = !inactive && !disabled;\n  const handleClick = useLastCallback(() => {\n    if (inactive) return;\n\n    if (disabled) {\n      onDisabledClick?.();\n      return;\n    }\n\n    onClick?.();\n  });\n\n  return (\n    <div\n      className={buildClassName(\n        styles.root,\n        subtitle && styles.multiline,\n        disabled && styles.disabled,\n        isClickable && styles.clickable,\n        avatarElement && styles.withAvatar,\n        className,\n      )}\n      onClick={handleClick}\n      style={style}\n      dir={lang.isRtl ? 'rtl' : undefined}\n      role={isClickable ? 'button' : undefined}\n      // eslint-disable-next-line jsx-a11y/no-noninteractive-tabindex\n      tabIndex={isClickable ? 0 : undefined}\n    >\n      {!disabled && !inactive && ripple && <RippleEffect />}\n      {inputElement && (\n        <div className={buildClassName(\n          styles.input,\n          inputPosition === 'end' ? styles.endInput : styles.startInput,\n        )}\n        >\n          {inputElement}\n        </div>\n      )}\n      {avatarElement && (\n        <div className={styles.avatarElement}>\n          {avatarElement}\n        </div>\n      )}\n      <div className={buildClassName(styles.title, titleClassName)}>\n        {title}\n      </div>\n      {subtitle && (\n        <div className={buildClassName(styles.subtitle, subtitleClassName)}>\n          {subtitle}\n        </div>\n      )}\n      {!inputElement && IS_IOS && (\n        <div className={styles.separator} />\n      )}\n    </div>\n  );\n};\n\nexport default PickerItem;\n","import type { TeactNode } from '../../../lib/teact/teact';\nimport React, { memo } from '../../../lib/teact/teact';\nimport { withGlobal } from '../../../global';\n\nimport type { ApiChat, ApiUser } from '../../../api/types';\nimport type { CustomPeer } from '../../../types';\nimport type { IconName } from '../../../types/icons';\n\nimport { getChatTitle, getUserFirstOrLastName } from '../../../global/helpers';\nimport { selectChat, selectUser } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { getPeerColorClass } from '../helpers/peerColor';\nimport renderText from '../helpers/renderText';\n\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Avatar from '../Avatar';\nimport Icon from '../icons/Icon';\n\nimport './PickerSelectedItem.scss';\n\ntype OwnProps<T = undefined> = {\n  // eslint-disable-next-line react/no-unused-prop-types\n  peerId?: string;\n  // eslint-disable-next-line react/no-unused-prop-types\n  forceShowSelf?: boolean;\n  customPeer?: CustomPeer;\n  icon?: IconName;\n  title?: string;\n  isMinimized?: boolean;\n  canClose?: boolean;\n  className?: string;\n  fluid?: boolean;\n  withPeerColors?: boolean;\n  clickArg: T;\n  onClick: (arg: T) => void;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  user?: ApiUser;\n  isSavedMessages?: boolean;\n};\n\n// eslint-disable-next-line @typescript-eslint/comma-dangle\nconst PickerSelectedItem = <T,>({\n  icon,\n  title,\n  isMinimized,\n  canClose,\n  clickArg,\n  chat,\n  user,\n  customPeer,\n  className,\n  fluid,\n  isSavedMessages,\n  withPeerColors,\n  onClick,\n}: OwnProps<T> & StateProps) => {\n  const lang = useOldLang();\n\n  let iconElement: TeactNode | undefined;\n  let titleText: any;\n\n  if (icon && title) {\n    iconElement = (\n      <div className=\"item-icon\">\n        <Icon name={icon} />\n      </div>\n    );\n\n    titleText = title;\n  } else if (customPeer || user || chat) {\n    iconElement = (\n      <Avatar\n        peer={customPeer || user || chat}\n        size=\"small\"\n        isSavedMessages={isSavedMessages}\n      />\n    );\n\n    const name = (customPeer && lang(customPeer.titleKey))\n      || (!chat || (user && !isSavedMessages)\n        ? getUserFirstOrLastName(user)\n        : getChatTitle(lang, chat, isSavedMessages));\n\n    titleText = title || (name ? renderText(name) : undefined);\n  }\n\n  const fullClassName = buildClassName(\n    'PickerSelectedItem',\n    className,\n    (chat?.isForum || customPeer?.isAvatarSquare) && 'square-avatar',\n    isMinimized && 'minimized',\n    canClose && 'closeable',\n    fluid && 'fluid',\n    withPeerColors && getPeerColorClass(customPeer || chat || user),\n  );\n\n  return (\n    <div\n      className={fullClassName}\n      onClick={() => onClick(clickArg)}\n      title={isMinimized ? titleText : undefined}\n      dir={lang.isRtl ? 'rtl' : undefined}\n    >\n      {iconElement}\n      {!isMinimized && (\n        <div className=\"item-name\" dir=\"auto\">\n          {titleText}\n        </div>\n      )}\n      {canClose && (\n        <div className=\"item-remove\">\n          <Icon name=\"close\" />\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { peerId, forceShowSelf }): StateProps => {\n    if (!peerId) {\n      return {};\n    }\n\n    const chat = selectChat(global, peerId);\n    const user = selectUser(global, peerId);\n    const isSavedMessages = !forceShowSelf && user && user.isSelf;\n\n    return {\n      chat,\n      user,\n      isSavedMessages,\n    };\n  },\n)(PickerSelectedItem)) as typeof PickerSelectedItem;\n","import type { ApiBusinessTimetableSegment } from '../../api/types';\n\nconst DAY_MINUTES = 1440;\nconst WEEK_MINUTES = 10080;\n\n/**\n * @returns Monday 00:00 of the current week for the local timezone\n */\nexport function getWeekStart(): number {\n  const now = new Date();\n  now.setHours(0, 0, 0, 0);\n  const day = now.getDay();\n  const diff = now.getDate() - day + (day === 0 ? -6 : 1);\n  return new Date(now.setDate(diff)).getTime();\n}\n\n/**\n * @returns UTC offset in seconds\n */\nexport function getUtcOffset() {\n  return new Date().getTimezoneOffset() * -60;\n}\n\nexport function shiftTimeRanges(ranges: ApiBusinessTimetableSegment[], shift: number): ApiBusinessTimetableSegment[] {\n  if (shift === 0) return ranges;\n\n  const shiftedRanges: ApiBusinessTimetableSegment[] = [];\n\n  for (const range of ranges) {\n    let start = (range.startMinute + shift) % WEEK_MINUTES;\n    let end = (range.endMinute + shift) % WEEK_MINUTES;\n\n    if (start < 0) start += WEEK_MINUTES;\n    if (end <= 0) end += WEEK_MINUTES;\n\n    if (start > end) {\n      shiftedRanges.push({ startMinute: start, endMinute: WEEK_MINUTES - 1 });\n      shiftedRanges.push({ startMinute: 0, endMinute: end });\n    } else {\n      shiftedRanges.push({ startMinute: start, endMinute: end });\n    }\n  }\n\n  shiftedRanges.sort((a, b) => a.startMinute - b.startMinute);\n\n  // Combine overlapping ranges\n  return shiftedRanges.reduce<ApiBusinessTimetableSegment[]>((acc, range) => {\n    const last = acc[acc.length - 1];\n    if (last && last.endMinute >= range.startMinute) {\n      last.endMinute = Math.max(last.endMinute, range.endMinute);\n    } else {\n      acc.push(range);\n    }\n    return acc;\n  }, []);\n}\n\nexport function splitDays(ranges: ApiBusinessTimetableSegment[]): Record<number, ApiBusinessTimetableSegment[]> {\n  const days: Record<number, ApiBusinessTimetableSegment[]> = {};\n\n  for (const range of ranges) {\n    const start = range.startMinute;\n    const end = range.endMinute;\n\n    const dayStart = Math.floor(start / DAY_MINUTES);\n    const dayEnd = Math.floor((end - 1) / DAY_MINUTES); // 00:00 is counted as same day\n\n    for (let day = dayStart; day <= dayEnd; day++) {\n      if (!days[day]) {\n        days[day] = [];\n      }\n\n      days[day].push({\n        startMinute: Math.max(0, start - day * DAY_MINUTES),\n        endMinute: Math.min(DAY_MINUTES, end - day * DAY_MINUTES),\n      });\n    }\n  }\n\n  return days;\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"Ef_0p5Qm\",\"top\":\"nHSmCUNs\",\"icon\":\"rlM4Mbnn\",\"left\":\"JTZ8UnnP\",\"bottom\":\"lp9VIV1o\",\"status\":\"JVL7ZnnJ\",\"status-open\":\"segAfYXs\",\"statusOpen\":\"segAfYXs\",\"arrow\":\"dYxw2cFn\",\"offset-trigger\":\"gVwflFhz\",\"offsetTrigger\":\"gVwflFhz\",\"transition\":\"WKgL_XiP\",\"timetable\":\"MPBKHdZL\",\"schedule\":\"Rs0VPgpq\",\"weekday\":\"cmxPqAof\",\"current-day\":\"YZVvP_56\",\"currentDay\":\"YZVvP_56\"};","import React, {\n  memo, useEffect, useMemo, useRef,\n} from '../../../lib/teact/teact';\n\nimport type { ApiBusinessWorkHours } from '../../../api/types';\n\nimport { requestMeasure, requestMutation } from '../../../lib/fasterdom/fasterdom';\nimport buildClassName from '../../../util/buildClassName';\nimport { formatTime, formatWeekday } from '../../../util/dates/dateFormat';\nimport {\n  getUtcOffset, getWeekStart, shiftTimeRanges, splitDays,\n} from '../../../util/dates/workHours';\nimport { IS_TOUCH_ENV } from '../../../util/windowEnvironment';\n\nimport useSelectorSignal from '../../../hooks/data/useSelectorSignal';\nimport useInterval from '../../../hooks/schedulers/useInterval';\nimport useDerivedState from '../../../hooks/useDerivedState';\nimport useFlag from '../../../hooks/useFlag';\nimport useForceUpdate from '../../../hooks/useForceUpdate';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport ListItem from '../../ui/ListItem';\nimport Transition, { ACTIVE_SLIDE_CLASS_NAME, TO_SLIDE_CLASS_NAME } from '../../ui/Transition';\nimport Icon from '../icons/Icon';\n\nimport styles from './BusinessHours.module.scss';\n\nconst DAYS = Array.from({ length: 7 }, (_, i) => i);\n\ntype OwnProps = {\n  businessHours: ApiBusinessWorkHours;\n};\n\nconst BusinessHours = ({\n  businessHours,\n}: OwnProps) => {\n  // eslint-disable-next-line no-null/no-null\n  const transitionRef = useRef<HTMLDivElement>(null);\n  const [isExpanded, expand, collapse] = useFlag(false);\n  const [isMyTime, showInMyTime, showInLocalTime] = useFlag(false);\n  const lang = useOldLang();\n  const forceUpdate = useForceUpdate();\n\n  useInterval(forceUpdate, 60 * 1000);\n\n  const timezoneSignal = useSelectorSignal((global) => global.timezones?.byId);\n  const timezones = useDerivedState(timezoneSignal, [timezoneSignal]);\n  const timezoneMinuteDifference = useMemo(() => {\n    if (!timezones) return 0;\n    const timezone = timezones[businessHours.timezoneId];\n    const myOffset = getUtcOffset();\n    return (myOffset - timezone.utcOffset) / 60;\n  }, [businessHours.timezoneId, timezones]);\n\n  const workHours = useMemo(() => {\n    const weekStart = getWeekStart();\n    const shiftedHours = shiftTimeRanges(businessHours.workHours, isMyTime ? timezoneMinuteDifference : 0);\n    const days = splitDays(shiftedHours);\n    const result: Record<number, string[]> = {};\n\n    DAYS.forEach((day) => {\n      const segments = days[day];\n      if (!segments) {\n        result[day] = [lang('BusinessHoursDayClosed')];\n        return;\n      }\n\n      result[day] = segments.map(({ startMinute, endMinute }) => {\n        if (endMinute - startMinute === 24 * 60) return lang('BusinessHoursDayFullOpened');\n        const start = formatTime(lang, weekStart + startMinute * 60 * 1000);\n        const end = formatTime(lang, weekStart + endMinute * 60 * 1000);\n        return `${start} – ${end}`;\n      });\n    });\n\n    return result;\n  }, [businessHours.workHours, isMyTime, lang, timezoneMinuteDifference]);\n\n  const isBusinessOpen = useMemo(() => {\n    const localTimeHours = shiftTimeRanges(businessHours.workHours, timezoneMinuteDifference);\n\n    const weekStart = getWeekStart();\n    const now = new Date().getTime();\n    const minutesSinceWeekStart = (now - weekStart) / 1000 / 60;\n\n    return localTimeHours.some(({ startMinute, endMinute }) => (\n      startMinute <= minutesSinceWeekStart && minutesSinceWeekStart <= endMinute\n    ));\n  }, [businessHours.workHours, timezoneMinuteDifference]);\n\n  const currentDay = useMemo(() => {\n    const now = new Date(Date.now() - (isMyTime ? 0 : timezoneMinuteDifference * 60 * 1000));\n    return (now.getDay() + 6) % 7;\n  }, [isMyTime, timezoneMinuteDifference]);\n\n  const handleClick = useLastCallback(() => {\n    if (isExpanded) {\n      collapse();\n    } else {\n      expand();\n    }\n  });\n\n  const handleTriggerOffset = useLastCallback((e: React.MouseEvent) => {\n    e.stopPropagation();\n\n    if (isMyTime) {\n      showInLocalTime();\n    } else {\n      showInMyTime();\n    }\n  });\n\n  useEffect(() => {\n    if (!isExpanded) return;\n    const slide = document.querySelector<HTMLElement>(`.${ACTIVE_SLIDE_CLASS_NAME} > .${styles.timetable}`);\n    if (!slide) return;\n\n    const height = slide.offsetHeight;\n    requestMutation(() => {\n      transitionRef.current!.style.height = `${height}px`;\n    });\n  }, [isExpanded]);\n\n  const handleAnimationStart = useLastCallback(() => {\n    const slide = document.querySelector<HTMLElement>(`.${TO_SLIDE_CLASS_NAME} > .${styles.timetable}`)!;\n\n    requestMeasure(() => {\n      const height = slide.offsetHeight;\n      requestMutation(() => {\n        transitionRef.current!.style.height = `${height}px`;\n      });\n    });\n  });\n\n  return (\n    <ListItem\n      icon=\"clock\"\n      iconClassName={styles.icon}\n      multiline\n      className={styles.root}\n      isStatic={isExpanded}\n      ripple\n      narrow\n      withColorTransition\n      onClick={handleClick}\n    >\n      <div className={styles.top}>\n        <div className={styles.left}>\n          <div>{lang('BusinessHoursProfile')}</div>\n          <div className={buildClassName(styles.status, isBusinessOpen && styles.statusOpen)}>\n            {isBusinessOpen ? lang('BusinessHoursProfileNowOpen') : lang('BusinessHoursProfileNowClosed')}\n          </div>\n        </div>\n        <Icon className={styles.arrow} name={isExpanded ? 'up' : 'down'} />\n      </div>\n      {isExpanded && (\n        <div className={styles.bottom}>\n          {Boolean(timezoneMinuteDifference) && (\n            <div\n              className={styles.offsetTrigger}\n              role=\"button\"\n              tabIndex={0}\n              onMouseDown={!IS_TOUCH_ENV ? handleTriggerOffset : undefined}\n              onClick={IS_TOUCH_ENV ? handleTriggerOffset : undefined}\n            >\n              {lang(isMyTime ? 'BusinessHoursProfileSwitchMy' : 'BusinessHoursProfileSwitchLocal')}\n            </div>\n          )}\n          <Transition\n            className={styles.transition}\n            ref={transitionRef}\n            name=\"fade\"\n            activeKey={Number(isMyTime)}\n            onStart={handleAnimationStart}\n          >\n            <dl className={styles.timetable}>\n              {DAYS.map((day) => (\n                <>\n                  <dt className={buildClassName(styles.weekday, day === currentDay && styles.currentDay)}>\n                    {formatWeekday(lang, day === 6 ? 0 : day + 1)}\n                  </dt>\n                  <dd className={styles.schedule}>\n                    {workHours[day].map((segment) => (\n                      <div>{segment}</div>\n                    ))}\n                  </dd>\n                </>\n              ))}\n            </dl>\n          </Transition>\n        </div>\n      )}\n    </ListItem>\n  );\n};\n\nexport default memo(BusinessHours);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"wCp6TBYF\",\"number\":\"lQeU96Fj\",\"float\":\"nKt3QDc_\",\"show-up\":\"ZaSLCV2k\",\"showUp\":\"ZaSLCV2k\",\"dissapear\":\"jA50ot3v\",\"shiftOrigin\":\"e1ezfWJb\",\"effect\":\"cFEXGUih\",\"giftIcon\":\"c4HDQNGJ\"};","import React, {\n  memo, useEffect, useMemo, useRef,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport {\n  type ApiBirthday, ApiMediaFormat, type ApiStickerSet, type ApiUser,\n} from '../../../api/types';\n\nimport { requestMeasure } from '../../../lib/fasterdom/fasterdom';\nimport { getStickerMediaHash } from '../../../global/helpers';\nimport { selectIsPremiumPurchaseBlocked } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { formatDateToString } from '../../../util/dates/dateFormat';\nimport { buildCollectionByKey } from '../../../util/iteratees';\nimport * as mediaLoader from '../../../util/mediaLoader';\nimport { IS_OFFSET_PATH_SUPPORTED } from '../../../util/windowEnvironment';\nimport renderText from '../helpers/renderText';\n\nimport useTimeout from '../../../hooks/schedulers/useTimeout';\nimport useFlag from '../../../hooks/useFlag';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport ListItem from '../../ui/ListItem';\nimport StickerView from '../StickerView';\n\nimport styles from './UserBirthday.module.scss';\n\nconst NUMBER_EMOJI_SUFFIX = '\\uFE0F\\u20E3';\nconst NUMBER_STICKER_SIZE = 128;\nconst EFFECT_EMOJIS = ['🎉', '🎆', '🎈'];\nconst EFFECT_SIZE = 288;\nconst ANIMATION_DURATION = 3000;\n\ntype OwnProps = {\n  user: ApiUser;\n  birthday: ApiBirthday;\n  isInSettings?: boolean;\n};\n\ntype StateProps = {\n  isPremiumPurchaseBlocked?: boolean;\n  birthdayNumbers?: ApiStickerSet;\n  animatedEmojiEffects?: ApiStickerSet;\n};\n\nconst UserBirthday = ({\n  user,\n  birthday,\n  isPremiumPurchaseBlocked,\n  birthdayNumbers,\n  animatedEmojiEffects,\n  isInSettings,\n}: OwnProps & StateProps) => {\n  const { openPremiumGiftModal, requestConfetti } = getActions();\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n  const animationPlayedRef = useRef(false);\n  const [isPlayingAnimation, playAnimation, stopAnimation] = useFlag();\n\n  const lang = useOldLang();\n\n  const {\n    formattedDate,\n    isToday,\n    age,\n  } = useMemo(() => {\n    const today = new Date();\n    const date = new Date();\n    if (birthday.year) {\n      date.setFullYear(birthday.year);\n    }\n    date.setMonth(birthday.month - 1);\n    date.setDate(birthday.day);\n    date.setHours(0, 0, 0, 0);\n\n    const formatted = formatDateToString(date, lang.code, true, 'long');\n    const isBirthdayToday = date.getDate() === today.getDate() && date.getMonth() === today.getMonth();\n    return {\n      formattedDate: formatted,\n      isToday: isBirthdayToday,\n      age: birthday.year && getAge(date),\n    };\n  }, [birthday, lang]);\n\n  const numbersForAge = useMemo(() => {\n    if (!age || !isToday) return undefined;\n    const numbers = birthdayNumbers?.stickers?.filter(({ emoji }) => emoji?.endsWith(NUMBER_EMOJI_SUFFIX));\n    if (!numbers) return undefined;\n    const byEmoji = buildCollectionByKey(numbers, 'emoji');\n\n    const ageDigits = age.toString().split('');\n    return ageDigits.map((digit) => byEmoji[digit + NUMBER_EMOJI_SUFFIX]);\n  }, [age, birthdayNumbers?.stickers, isToday]);\n\n  const effectSticker = useMemo(() => {\n    if (!isToday) return undefined;\n    const randomEffect = EFFECT_EMOJIS[Math.floor(Math.random() * EFFECT_EMOJIS.length)];\n    return animatedEmojiEffects?.stickers?.find(({ emoji }) => emoji === randomEffect);\n  }, [animatedEmojiEffects?.stickers, isToday]);\n\n  // Preload stickers\n  useEffect(() => {\n    if (!isToday || !numbersForAge) return;\n\n    numbersForAge.forEach((sticker) => {\n      const hash = getStickerMediaHash(sticker, 'preview');\n      mediaLoader.fetch(hash, ApiMediaFormat.BlobUrl);\n    });\n\n    if (effectSticker) {\n      const effectHash = getStickerMediaHash(effectSticker, 'preview');\n      mediaLoader.fetch(effectHash, ApiMediaFormat.BlobUrl);\n    }\n  }, [effectSticker, isToday, numbersForAge]);\n\n  useTimeout(stopAnimation, isPlayingAnimation ? ANIMATION_DURATION : undefined);\n\n  useEffect(() => {\n    if (isPlayingAnimation) {\n      animationPlayedRef.current = true;\n\n      const column = document.getElementById(isInSettings ? 'LeftColumn' : 'RightColumn');\n      if (!column) return;\n\n      requestMeasure(() => {\n        const {\n          top, left, width, height,\n        } = column.getBoundingClientRect();\n\n        requestConfetti({\n          top,\n          left,\n          width,\n          height,\n          style: 'top-down',\n        });\n      });\n    }\n  }, [isInSettings, isPlayingAnimation]);\n\n  const valueKey = `ProfileBirthday${isToday ? 'Today' : ''}Value${age ? 'Year' : ''}`;\n\n  const canGiftPremium = isToday && !user.isPremium && !user.isSelf && !isPremiumPurchaseBlocked;\n\n  const handleOpenPremiumGiftModal = useLastCallback(() => {\n    openPremiumGiftModal({ forUserIds: [user.id] });\n  });\n\n  const handleClick = useLastCallback(() => {\n    if (!isToday) return;\n\n    if (canGiftPremium && animationPlayedRef.current) {\n      handleOpenPremiumGiftModal();\n      return;\n    }\n\n    playAnimation();\n  });\n\n  const isStatic = !isToday && !canGiftPremium;\n\n  return (\n    <div className={styles.root}>\n      <ListItem\n        icon=\"calendar\"\n        secondaryIcon={canGiftPremium ? 'gift' : undefined}\n        secondaryIconClassName={styles.giftIcon}\n        multiline\n        narrow\n        ref={ref}\n        ripple={!isStatic}\n        onClick={handleClick}\n        isStatic={isStatic}\n        onSecondaryIconClick={handleOpenPremiumGiftModal}\n      >\n        <div className=\"title\" dir={lang.isRtl ? 'rtl' : undefined}>\n          {renderText(lang(valueKey, [formattedDate, age], undefined, age))}\n        </div>\n        <span className=\"subtitle\">{lang(isToday ? 'ProfileBirthdayToday' : 'ProfileBirthday')}</span>\n      </ListItem>\n      {isPlayingAnimation && IS_OFFSET_PATH_SUPPORTED && numbersForAge?.map((sticker, index) => (\n        <div\n          className={buildClassName(styles.number, index > 0 && styles.shiftOrigin)}\n          style={`--digit-offset: ${index}`}\n        >\n          <StickerView\n            containerRef={ref}\n            sticker={sticker}\n            size={NUMBER_STICKER_SIZE}\n            forceAlways\n          />\n        </div>\n      ))}\n      {isPlayingAnimation && effectSticker && (\n        <div className={styles.effect}>\n          <StickerView\n            containerRef={ref}\n            sticker={effectSticker}\n            size={EFFECT_SIZE}\n            shouldLoop\n            forceAlways\n          />\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const { birthdayNumbers, animatedEmojiEffects } = global;\n    return {\n      birthdayNumbers,\n      animatedEmojiEffects,\n      isPremiumPurchaseBlocked: selectIsPremiumPurchaseBlocked(global),\n    };\n  },\n)(UserBirthday));\n\n// https://stackoverflow.com/a/7091965\nfunction getAge(birthdate: Date) {\n  const today = new Date();\n  let age = today.getFullYear() - birthdate.getFullYear();\n  const m = today.getMonth() - birthdate.getMonth();\n  if (m < 0 || (m === 0 && today.getDate() < birthdate.getDate())) {\n    age--;\n  }\n\n  return age;\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"businessLocation\":\"UZbkeFDB\",\"personalChannel\":\"HP5EJx7s\",\"personalChannelTitle\":\"cHyTGri2\",\"sectionInfo\":\"IrqRJFxm\",\"personalChannelSubscribers\":\"kYd2GrmU\",\"personalChannelItem\":\"qOJwhXMC\",\"openAppButton\":\"x925YeS3\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type {\n  ApiChat, ApiCountryCode, ApiUser, ApiUserFullInfo, ApiUsername,\n} from '../../../api/types';\nimport { MAIN_THREAD_ID } from '../../../api/types';\n\nimport { FRAGMENT_PHONE_CODE, FRAGMENT_PHONE_LENGTH } from '../../../config';\nimport {\n  buildStaticMapHash,\n  getChatLink,\n  getHasAdminRight,\n  isChatChannel,\n  isUserRightBanned,\n  selectIsChatMuted,\n} from '../../../global/helpers';\nimport {\n  selectChat,\n  selectChatFullInfo,\n  selectCurrentMessageList,\n  selectNotifyExceptions,\n  selectNotifySettings,\n  selectTopicLink,\n  selectUser,\n  selectUserFullInfo,\n} from '../../../global/selectors';\nimport { copyTextToClipboard } from '../../../util/clipboard';\nimport { formatPhoneNumberWithCode } from '../../../util/phoneNumber';\nimport { debounce } from '../../../util/schedulers';\nimport stopEvent from '../../../util/stopEvent';\nimport { extractCurrentThemeParams } from '../../../util/themeStyle';\nimport { ChatAnimationTypes } from '../../left/main/hooks';\nimport formatUsername from '../helpers/formatUsername';\nimport renderText from '../helpers/renderText';\n\nimport useEffectWithPrevDeps from '../../../hooks/useEffectWithPrevDeps';\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMedia from '../../../hooks/useMedia';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useDevicePixelRatio from '../../../hooks/window/useDevicePixelRatio';\n\nimport Chat from '../../left/main/Chat';\nimport Button from '../../ui/Button';\nimport ListItem from '../../ui/ListItem';\nimport Skeleton from '../../ui/placeholder/Skeleton';\nimport Switcher from '../../ui/Switcher';\nimport SafeLink from '../SafeLink';\nimport BusinessHours from './BusinessHours';\nimport UserBirthday from './UserBirthday';\n\nimport styles from './ChatExtra.module.scss';\n\ntype OwnProps = {\n  chatOrUserId: string;\n  isSavedDialog?: boolean;\n  isInSettings?: boolean;\n};\n\ntype StateProps = {\n  user?: ApiUser;\n  chat?: ApiChat;\n  userFullInfo?: ApiUserFullInfo;\n  canInviteUsers?: boolean;\n  isMuted?: boolean;\n  phoneCodeList: ApiCountryCode[];\n  topicId?: number;\n  description?: string;\n  chatInviteLink?: string;\n  topicLink?: string;\n  hasSavedMessages?: boolean;\n  personalChannel?: ApiChat;\n  hasMainMiniApp?: boolean;\n};\n\nconst DEFAULT_MAP_CONFIG = {\n  width: 64,\n  height: 64,\n  zoom: 15,\n};\n\nconst runDebounced = debounce((cb) => cb(), 500, false);\n\nconst ChatExtra: FC<OwnProps & StateProps> = ({\n  chatOrUserId,\n  user,\n  chat,\n  userFullInfo,\n  isInSettings,\n  canInviteUsers,\n  isMuted,\n  phoneCodeList,\n  topicId,\n  description,\n  chatInviteLink,\n  topicLink,\n  hasSavedMessages,\n  personalChannel,\n  hasMainMiniApp,\n}) => {\n  const {\n    showNotification,\n    updateChatMutedState,\n    updateTopicMutedState,\n    loadPeerStories,\n    openSavedDialog,\n    openMapModal,\n    requestCollectibleInfo,\n    requestMainWebView,\n  } = getActions();\n\n  const {\n    id: userId,\n    usernames,\n    phoneNumber,\n    isSelf,\n  } = user || {};\n  const { id: chatId, usernames: chatUsernames } = chat || {};\n  const peerId = userId || chatId;\n  const {\n    businessLocation,\n    businessWorkHours,\n    personalChannelMessageId,\n    birthday,\n  } = userFullInfo || {};\n  const oldLang = useOldLang();\n  const lang = useLang();\n\n  const [areNotificationsEnabled, setAreNotificationsEnabled] = useState(!isMuted);\n\n  useEffect(() => {\n    setAreNotificationsEnabled(!isMuted);\n  }, [isMuted]);\n\n  useEffectWithPrevDeps(([prevPeerId]) => {\n    if (!peerId || prevPeerId === peerId) return;\n    if (user || (chat && isChatChannel(chat))) {\n      loadPeerStories({ peerId });\n    }\n  }, [peerId, chat, user]);\n\n  const { width, height, zoom } = DEFAULT_MAP_CONFIG;\n  const dpr = useDevicePixelRatio();\n  const locationMediaHash = businessLocation?.geo\n    && buildStaticMapHash(businessLocation.geo, width, height, zoom, dpr);\n  const locationBlobUrl = useMedia(locationMediaHash);\n\n  const locationRightComponent = useMemo(() => {\n    if (!businessLocation?.geo) return undefined;\n    if (locationBlobUrl) {\n      return <img src={locationBlobUrl} alt=\"\" className={styles.businessLocation} />;\n    }\n\n    return <Skeleton className={styles.businessLocation} />;\n  }, [businessLocation, locationBlobUrl]);\n\n  const isTopicInfo = Boolean(topicId && topicId !== MAIN_THREAD_ID);\n  const shouldRenderAllLinks = (chat && isChatChannel(chat)) || user?.isPremium;\n\n  const activeUsernames = useMemo(() => {\n    const result = usernames?.filter((u) => u.isActive);\n\n    return result?.length ? result : undefined;\n  }, [usernames]);\n\n  const activeChatUsernames = useMemo(() => {\n    const result = !user ? chatUsernames?.filter((u) => u.isActive) : undefined;\n\n    return result?.length ? result : undefined;\n  }, [chatUsernames, user]);\n\n  const link = useMemo(() => {\n    if (!chat) {\n      return undefined;\n    }\n\n    return isTopicInfo ? topicLink! : getChatLink(chat) || chatInviteLink;\n  }, [chat, isTopicInfo, topicLink, chatInviteLink]);\n\n  const handleClickLocation = useLastCallback(() => {\n    const { address, geo } = businessLocation!;\n    if (!geo) {\n      copyTextToClipboard(address);\n      showNotification({ message: oldLang('BusinessLocationCopied') });\n      return;\n    }\n\n    openMapModal({ geoPoint: geo, zoom });\n  });\n\n  const handleNotificationChange = useLastCallback(() => {\n    setAreNotificationsEnabled((current) => {\n      const newAreNotificationsEnabled = !current;\n\n      runDebounced(() => {\n        if (isTopicInfo) {\n          updateTopicMutedState({\n            chatId: chatId!,\n            topicId: topicId!,\n            isMuted: !newAreNotificationsEnabled,\n          });\n        } else {\n          updateChatMutedState({ chatId: chatId!, isMuted: !newAreNotificationsEnabled });\n        }\n      });\n\n      return newAreNotificationsEnabled;\n    });\n  });\n\n  const handleOpenSavedDialog = useLastCallback(() => {\n    openSavedDialog({ chatId: chatOrUserId });\n  });\n\n  function copy(text: string, entity: string) {\n    copyTextToClipboard(text);\n    showNotification({ message: `${entity} was copied` });\n  }\n\n  const formattedNumber = phoneNumber && formatPhoneNumberWithCode(phoneCodeList, phoneNumber);\n\n  const handlePhoneClick = useLastCallback(() => {\n    if (phoneNumber?.length === FRAGMENT_PHONE_LENGTH && phoneNumber.startsWith(FRAGMENT_PHONE_CODE)) {\n      requestCollectibleInfo({ collectible: phoneNumber, peerId: peerId!, type: 'phone' });\n      return;\n    }\n    copy(formattedNumber!, oldLang('Phone'));\n  });\n\n  const handleUsernameClick = useLastCallback((username: ApiUsername, isChat?: boolean) => {\n    if (!username.isEditable) {\n      requestCollectibleInfo({ collectible: username.username, peerId: peerId!, type: 'username' });\n      return;\n    }\n    copy(formatUsername(username.username, isChat), oldLang(isChat ? 'Link' : 'Username'));\n  });\n\n  const handleOpenApp = useLastCallback(() => {\n    if (!chat) {\n      return;\n    }\n    const botId = user?.id;\n    if (!botId) {\n      return;\n    }\n    const theme = extractCurrentThemeParams();\n    requestMainWebView({\n      botId,\n      peerId: botId,\n      theme,\n      shouldMarkBotTrusted: true,\n    });\n  });\n\n  const appTermsInfo = lang('ProfileOpenAppAbout', {\n    terms: (\n      <SafeLink\n        text={lang('ProfileOpenAppTerms')}\n        url={lang('ProfileBotOpenAppInfoLink')}\n      />\n    ),\n  }, { withNodes: true });\n\n  if (!chat || chat.isRestricted || (isSelf && !isInSettings)) {\n    return undefined;\n  }\n\n  function renderUsernames(usernameList: ApiUsername[], isChat?: boolean) {\n    const [mainUsername, ...otherUsernames] = usernameList;\n\n    const usernameLinks = otherUsernames.length\n      ? (oldLang('UsernameAlso', '%USERNAMES%') as string)\n        .split('%')\n        .map((s) => {\n          return (s === 'USERNAMES' ? (\n            <>\n              {otherUsernames.map((username, idx) => {\n                return (\n                  <>\n                    {idx > 0 ? ', ' : ''}\n                    <a\n                      key={username.username}\n                      href={formatUsername(username.username, true)}\n                      onMouseDown={stopEvent}\n                      onClick={(e) => {\n                        stopEvent(e);\n                        handleUsernameClick(username, isChat);\n                      }}\n                      className=\"text-entity-link username-link\"\n                    >\n                      {formatUsername(username.username)}\n                    </a>\n                  </>\n                );\n              })}\n            </>\n          ) : s);\n        })\n      : undefined;\n\n    return (\n      <ListItem\n        icon={isChat ? 'link' : 'mention'}\n        multiline\n        narrow\n        ripple\n        // eslint-disable-next-line react/jsx-no-bind\n        onClick={() => {\n          handleUsernameClick(mainUsername, isChat);\n        }}\n      >\n        <span className=\"title\" dir={lang.isRtl ? 'rtl' : undefined}>\n          {formatUsername(mainUsername.username, isChat)}\n        </span>\n        <span className=\"subtitle\">\n          {usernameLinks && <span className=\"other-usernames\">{usernameLinks}</span>}\n          {oldLang(isChat ? 'Link' : 'Username')}\n        </span>\n      </ListItem>\n    );\n  }\n\n  return (\n    <div className=\"ChatExtra\">\n      {personalChannel && (\n        <div className={styles.personalChannel}>\n          <h3 className={styles.personalChannelTitle}>{oldLang('ProfileChannel')}</h3>\n          <span className={styles.personalChannelSubscribers}>\n            {oldLang('Subscribers', personalChannel.membersCount, 'i')}\n          </span>\n          <Chat\n            chatId={personalChannel.id}\n            orderDiff={0}\n            animationType={ChatAnimationTypes.None}\n            isPreview\n            previewMessageId={personalChannelMessageId}\n            className={styles.personalChannelItem}\n          />\n        </div>\n      )}\n      {Boolean(formattedNumber?.length) && (\n        // eslint-disable-next-line react/jsx-no-bind\n        <ListItem icon=\"phone\" multiline narrow ripple onClick={handlePhoneClick}>\n          <span className=\"title\" dir={lang.isRtl ? 'rtl' : undefined}>{formattedNumber}</span>\n          <span className=\"subtitle\">{oldLang('Phone')}</span>\n        </ListItem>\n      )}\n      {activeUsernames && renderUsernames(activeUsernames)}\n      {description && Boolean(description.length) && (\n        <ListItem\n          icon=\"info\"\n          multiline\n          narrow\n          isStatic\n          allowSelection\n        >\n          <span className=\"title word-break allow-selection\" dir={lang.isRtl ? 'rtl' : undefined}>\n            {\n              renderText(description, [\n                'br',\n                shouldRenderAllLinks ? 'links' : 'tg_links',\n                'emoji',\n              ])\n            }\n          </span>\n          <span className=\"subtitle\">{oldLang(userId ? 'UserBio' : 'Info')}</span>\n        </ListItem>\n      )}\n      {activeChatUsernames && !isTopicInfo && renderUsernames(activeChatUsernames, true)}\n      {((!activeChatUsernames && canInviteUsers) || isTopicInfo) && link && (\n        <ListItem\n          icon=\"link\"\n          multiline\n          narrow\n          ripple\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => copy(link, oldLang('SetUrlPlaceholder'))}\n        >\n          <div className=\"title\">{link}</div>\n          <span className=\"subtitle\">{oldLang('SetUrlPlaceholder')}</span>\n        </ListItem>\n      )}\n      {birthday && (\n        <UserBirthday key={peerId} birthday={birthday} user={user!} isInSettings={isInSettings} />\n      )}\n      { hasMainMiniApp && (\n        <ListItem\n          multiline\n          isStatic\n          narrow\n        >\n          <Button\n            className={styles.openAppButton}\n            size=\"smaller\"\n            onClick={handleOpenApp}\n          >\n            {oldLang('ProfileBotOpenApp')}\n          </Button>\n          <div className={styles.sectionInfo}>\n            {appTermsInfo}\n          </div>\n        </ListItem>\n      )}\n      {!isInSettings && (\n        <ListItem icon=\"unmute\" narrow ripple onClick={handleNotificationChange}>\n          <span>{oldLang('Notifications')}</span>\n          <Switcher\n            id=\"group-notifications\"\n            label={userId ? 'Toggle User Notifications' : 'Toggle Chat Notifications'}\n            checked={areNotificationsEnabled}\n            inactive\n          />\n        </ListItem>\n      )}\n      {businessWorkHours && (\n        <BusinessHours businessHours={businessWorkHours} />\n      )}\n      {businessLocation && (\n        <ListItem\n          icon=\"location\"\n          ripple\n          multiline\n          narrow\n          rightElement={locationRightComponent}\n          onClick={handleClickLocation}\n        >\n          <div className=\"title\">{businessLocation.address}</div>\n          <span className=\"subtitle\">{oldLang('BusinessProfileLocation')}</span>\n        </ListItem>\n      )}\n      {hasSavedMessages && !isInSettings && (\n        <ListItem icon=\"saved-messages\" narrow ripple onClick={handleOpenSavedDialog}>\n          <span>{oldLang('SavedMessagesTab')}</span>\n        </ListItem>\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatOrUserId, isSavedDialog }): StateProps => {\n    const { countryList: { phoneCodes: phoneCodeList } } = global;\n\n    const chat = chatOrUserId ? selectChat(global, chatOrUserId) : undefined;\n    const user = chatOrUserId ? selectUser(global, chatOrUserId) : undefined;\n    const isForum = chat?.isForum;\n    const isMuted = chat && selectIsChatMuted(chat, selectNotifySettings(global), selectNotifyExceptions(global));\n    const { threadId } = selectCurrentMessageList(global) || {};\n    const topicId = isForum && threadId ? Number(threadId) : undefined;\n\n    const chatFullInfo = chat && selectChatFullInfo(global, chat.id);\n    const userFullInfo = user && selectUserFullInfo(global, user.id);\n\n    const chatInviteLink = chatFullInfo?.inviteLink;\n\n    const description = userFullInfo?.bio || chatFullInfo?.about;\n\n    const canInviteUsers = chat && !user && (\n      (!isChatChannel(chat) && !isUserRightBanned(chat, 'inviteUsers'))\n      || getHasAdminRight(chat, 'inviteUsers')\n    );\n\n    const topicLink = topicId ? selectTopicLink(global, chatOrUserId, topicId) : undefined;\n\n    const hasSavedMessages = !isSavedDialog && global.chats.listIds.saved?.includes(chatOrUserId);\n\n    const personalChannel = userFullInfo?.personalChannelId\n      ? selectChat(global, userFullInfo.personalChannelId)\n      : undefined;\n\n    const hasMainMiniApp = user?.hasMainMiniApp;\n\n    return {\n      phoneCodeList,\n      chat,\n      user,\n      userFullInfo,\n      canInviteUsers,\n      isMuted,\n      topicId,\n      chatInviteLink,\n      description,\n      topicLink,\n      hasSavedMessages,\n      personalChannel,\n      hasMainMiniApp,\n    };\n  },\n)(ChatExtra));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"aInga6VW\",\"particle\":\"PZAuNVZH\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useMemo } from '../../../lib/teact/teact';\n\nimport type { ApiEmojiStatus, ApiReactionCustomEmoji } from '../../../api/types';\n\nimport { getStickerHashById } from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\nimport buildStyle from '../../../util/buildStyle';\nimport { IS_OFFSET_PATH_SUPPORTED } from '../../../util/windowEnvironment';\n\nimport useMedia from '../../../hooks/useMedia';\n\nimport CustomEmoji from '../CustomEmoji';\n\nimport styles from './CustomEmojiEffect.module.scss';\n\ntype OwnProps = {\n  reaction: ApiReactionCustomEmoji | ApiEmojiStatus;\n  className?: string;\n  isLottie?: boolean;\n  particleSize?: number;\n  onEnded?: NoneToVoidFunction;\n};\n\nconst EFFECT_AMOUNT = 7;\n\nconst CustomEmojiEffect: FC<OwnProps> = ({\n  reaction,\n  isLottie,\n  className,\n  particleSize,\n  onEnded,\n}) => {\n  const stickerHash = getStickerHashById(reaction.documentId);\n\n  const previewMediaData = useMedia(!isLottie ? stickerHash : undefined);\n\n  const paths: string[] = useMemo(() => {\n    if (!IS_OFFSET_PATH_SUPPORTED) return [];\n    return Array.from({ length: EFFECT_AMOUNT }).map(() => generateRandomDropPath(particleSize));\n  }, [particleSize]);\n\n  if (!previewMediaData && !isLottie) {\n    return undefined;\n  }\n\n  return (\n    <div\n      className={buildClassName(styles.root, className)}\n      style={buildStyle(Boolean(particleSize) && `--particle-size: ${particleSize}px`)}\n    >\n      {paths.map((path, i) => {\n        const style = `--offset-path: path('${path}');`;\n        if (isLottie) {\n          return (\n            <CustomEmoji\n              documentId={reaction.documentId}\n              className={styles.particle}\n              style={style}\n              withSharedAnimation\n              size={particleSize}\n              onAnimationEnd={i === 0 ? onEnded : undefined}\n            />\n          );\n        }\n\n        return (\n          <img\n            src={previewMediaData}\n            alt=\"\"\n            className={styles.particle}\n            style={style}\n            draggable={false}\n            onAnimationEnd={i === 0 ? onEnded : undefined}\n          />\n        );\n      })}\n    </div>\n  );\n};\n\nexport default memo(CustomEmojiEffect);\n\nfunction generateRandomDropPath(particleSize = 20) {\n  const x = (particleSize / 2 + Math.random() * particleSize * 3) * (Math.random() > 0.5 ? 1 : -1);\n  const y = particleSize + Math.random() * particleSize * 4;\n\n  return `M 0 0 C 0 0 ${x} ${-y - particleSize} ${x} ${y}`;\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"O9uCTt5C\",\"animated-icon\":\"HiI6SMxF\",\"animatedIcon\":\"HiI6SMxF\",\"effect\":\"NhFcTGja\",\"animating\":\"ikfZ6Igz\",\"withEffectOnly\":\"jjRJmHCg\"};","import React, {\n  memo, useMemo, useRef,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiAvailableReaction, ApiReaction, ApiStickerSet } from '../../../api/types';\nimport type { ObserveFn } from '../../../hooks/useIntersectionObserver';\n\nimport { isSameReaction } from '../../../global/helpers';\nimport { selectPerformanceSettingsValue, selectTabState } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { roundToNearestEven } from '../../../util/math';\nimport { REM } from '../helpers/mediaDimensions';\n\nimport useFlag from '../../../hooks/useFlag';\nimport { useIsIntersecting } from '../../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMedia from '../../../hooks/useMedia';\nimport useShowTransitionDeprecated from '../../../hooks/useShowTransitionDeprecated';\nimport useCustomEmoji from '../hooks/useCustomEmoji';\n\nimport AnimatedSticker from '../AnimatedSticker';\nimport CustomEmoji from '../CustomEmoji';\nimport ReactionStaticEmoji from '../ReactionStaticEmoji';\nimport CustomEmojiEffect from './CustomEmojiEffect';\n\nimport styles from './ReactionAnimatedEmoji.module.scss';\n\ntype OwnProps = {\n  containerId: string;\n  reaction: ApiReaction;\n  className?: string;\n  size?: number;\n  effectSize?: number;\n  withEffectOnly?: boolean;\n  shouldPause?: boolean;\n  shouldLoop?: boolean;\n  loopLimit?: number;\n  observeIntersection?: ObserveFn;\n};\n\ntype StateProps = {\n  activeReactions?: ApiReaction[];\n  availableReactions?: ApiAvailableReaction[];\n  genericEffects?: ApiStickerSet;\n  withEffects?: boolean;\n};\n\nconst ICON_SIZE = 1.5 * REM;\nconst CENTER_ICON_MULTIPLIER = 1.9;\nconst EFFECT_SIZE = 6.5 * REM;\nconst CUSTOM_EMOJI_EFFECT_MULTIPLIER = 0.5;\nconst MIN_PARTICLE_SIZE = REM;\n\nconst ReactionAnimatedEmoji = ({\n  containerId,\n  reaction,\n  className,\n  size = ICON_SIZE,\n  effectSize = EFFECT_SIZE,\n  activeReactions,\n  availableReactions,\n  genericEffects,\n  withEffects,\n  withEffectOnly,\n  shouldPause,\n  shouldLoop,\n  loopLimit,\n  observeIntersection,\n}: OwnProps & StateProps) => {\n  const { stopActiveReaction } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n\n  const isCustom = 'documentId' in reaction;\n\n  const availableReaction = useMemo(() => (\n    availableReactions?.find((r) => isSameReaction(r.reaction, reaction))\n  ), [availableReactions, reaction]);\n  const centerIconId = availableReaction?.centerIcon?.id;\n\n  const { customEmoji } = useCustomEmoji(isCustom ? reaction.documentId : undefined);\n\n  const assignedEffectId = useMemo(() => {\n    if (!isCustom) return availableReaction?.aroundAnimation?.id;\n\n    if (!customEmoji) return undefined;\n    const assignedId = availableReactions?.find((available) => available.reaction.emoticon === customEmoji.emoji)\n      ?.aroundAnimation?.id;\n    return assignedId;\n  }, [availableReaction, availableReactions, customEmoji, isCustom]);\n\n  const effectId = useMemo(() => {\n    if (assignedEffectId) {\n      return assignedEffectId;\n    }\n\n    if (!genericEffects?.stickers) {\n      return undefined;\n    }\n\n    const { stickers } = genericEffects;\n    const randomIndex = Math.floor(Math.random() * stickers.length);\n\n    return stickers[randomIndex].id;\n  }, [assignedEffectId, genericEffects]);\n\n  const isIntersecting = useIsIntersecting(ref, observeIntersection);\n\n  const mediaHashCenterIcon = centerIconId && `sticker${centerIconId}`;\n  const mediaHashEffect = effectId && `sticker${effectId}`;\n\n  const mediaDataCenterIcon = useMedia(mediaHashCenterIcon, !centerIconId);\n  const mediaDataEffect = useMedia(mediaHashEffect, !effectId);\n\n  const activeReaction = useMemo(() => (\n    activeReactions?.find((active) => isSameReaction(active, reaction))\n  ), [activeReactions, reaction]);\n\n  const shouldPlayEffect = Boolean(\n    withEffects && activeReaction && (isCustom || mediaDataCenterIcon) && mediaDataEffect,\n  );\n  const shouldPlayCenter = isIntersecting && ((shouldPlayEffect && !withEffectOnly) || shouldLoop);\n  const {\n    shouldRender: shouldRenderEffect,\n    transitionClassNames: animationClassNames,\n  } = useShowTransitionDeprecated(shouldPlayEffect, undefined, true, 'slow');\n  const {\n    shouldRender: shouldRenderCenter,\n    transitionClassNames: centerAnimationClassNames,\n  } = useShowTransitionDeprecated(shouldPlayCenter, undefined, true, 'slow');\n\n  const handleEnded = useLastCallback(() => {\n    stopActiveReaction({ containerId, reaction });\n  });\n\n  const [isAnimationLoaded, markAnimationLoaded, unmarkAnimationLoaded] = useFlag();\n  const shouldShowStatic = !isCustom && (!shouldPlayCenter || !isAnimationLoaded);\n  const {\n    shouldRender: shouldRenderStatic,\n    transitionClassNames: staticClassNames,\n  } = useShowTransitionDeprecated(shouldShowStatic, undefined, true);\n\n  const rootClassName = buildClassName(\n    styles.root,\n    shouldRenderEffect && styles.animating,\n    withEffectOnly && styles.withEffectOnly,\n    className,\n  );\n\n  return (\n    <div className={rootClassName} ref={ref}>\n      {!withEffectOnly && shouldRenderStatic && (\n        <ReactionStaticEmoji\n          className={staticClassNames}\n          reaction={reaction}\n          availableReactions={availableReactions}\n          size={size}\n          observeIntersection={observeIntersection}\n        />\n      )}\n      {!withEffectOnly && isCustom && (\n        <CustomEmoji\n          documentId={reaction.documentId}\n          className={styles.customEmoji}\n          size={size}\n          noPlay={shouldPause}\n          noVideoOnMobile\n          loopLimit={loopLimit}\n          observeIntersectionForPlaying={observeIntersection}\n        />\n      )}\n      {shouldRenderCenter && !isCustom && (\n        <AnimatedSticker\n          key={`${centerIconId}-${size}`}\n          className={buildClassName(styles.animatedIcon, centerAnimationClassNames)}\n          size={roundToNearestEven(size * CENTER_ICON_MULTIPLIER)}\n          tgsUrl={mediaDataCenterIcon}\n          play={isIntersecting && !shouldPause}\n          noLoop={!shouldLoop}\n          onLoad={markAnimationLoaded}\n          onEnded={unmarkAnimationLoaded}\n        />\n      )}\n      {shouldRenderEffect && (\n        <>\n          <AnimatedSticker\n            key={`${effectId}-${effectSize}`}\n            className={buildClassName(styles.effect, animationClassNames)}\n            size={effectSize}\n            tgsUrl={mediaDataEffect}\n            play={isIntersecting}\n            noLoop\n            onEnded={handleEnded}\n          />\n          {isCustom && !assignedEffectId && isIntersecting && (\n            <CustomEmojiEffect\n              reaction={reaction}\n              className={animationClassNames}\n              particleSize={Math.max(size * CUSTOM_EMOJI_EFFECT_MULTIPLIER, MIN_PARTICLE_SIZE)}\n              onEnded={handleEnded}\n            />\n          )}\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { containerId }) => {\n    const { genericEmojiEffects, reactions } = global;\n    const { activeReactions } = selectTabState(global);\n\n    const withEffects = selectPerformanceSettingsValue(global, 'reactionEffects');\n\n    return {\n      activeReactions: activeReactions?.[containerId],\n      availableReactions: reactions.availableReactions,\n      genericEffects: genericEmojiEffects,\n      withEffects,\n    };\n  },\n)(ReactionAnimatedEmoji));\n","import type { FC } from '../../lib/teact/teact';\nimport React from '../../lib/teact/teact';\n\nimport type { OwnProps } from './ChatFolderModal';\n\nimport { Bundles } from '../../util/moduleLoader';\n\nimport useModuleLoader from '../../hooks/useModuleLoader';\n\nconst ChatFolderModalAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const ChatFolderModal = useModuleLoader(Bundles.Extra, 'ChatFolderModal', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return ChatFolderModal ? <ChatFolderModal {...props} /> : undefined;\n};\n\nexport default ChatFolderModalAsync;\n","import type { FC } from '../../lib/teact/teact';\nimport React from '../../lib/teact/teact';\n\nimport type { OwnProps } from './MuteChatModal';\n\nimport { Bundles } from '../../util/moduleLoader';\n\nimport useModuleLoader from '../../hooks/useModuleLoader';\n\nconst MuteChatModalAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const MuteChatModal = useModuleLoader(Bundles.Extra, 'MuteChatModal', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return MuteChatModal ? <MuteChatModal {...props} /> : undefined;\n};\n\nexport default MuteChatModalAsync;\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"byPckqUT\",\"indicator\":\"nl36F75B\",\"indicatorInner\":\"AA5s1Pu4\",\"selected\":\"qy2i51dM\",\"active\":\"IsUWP16T\",\"bar-animation-transform-2\":\"p_1Kbke9\",\"barAnimationTransform2\":\"p_1Kbke9\",\"bar-animation-transform-1\":\"gOCprMbJ\",\"barAnimationTransform1\":\"gOCprMbJ\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo } from '../../../lib/teact/teact';\n\nimport buildClassName from '../../../util/buildClassName';\n\nimport styles from './ChatCallStatus.module.scss';\n\ntype OwnProps = {\n  isSelected?: boolean;\n  isActive?: boolean;\n  isMobile?: boolean;\n};\n\nconst ChatCallStatus: FC<OwnProps> = ({\n  isSelected,\n  isActive,\n  isMobile,\n}) => {\n  return (\n    <div className={buildClassName(\n      styles.root,\n      isActive && styles.active,\n      isSelected && !isMobile && styles.selected,\n    )}\n    >\n      <div className={styles.indicator}>\n        <div className={styles.indicatorInner} />\n        <div className={styles.indicatorInner} />\n        <div className={styles.indicatorInner} />\n      </div>\n    </div>\n  );\n};\n\nexport default memo(ChatCallStatus);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useEffect, useMemo } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type {\n  ApiChat,\n  ApiMessage,\n  ApiMessageOutgoingStatus,\n  ApiPeer,\n  ApiTopic,\n  ApiTypingStatus,\n  ApiUser,\n  ApiUserStatus,\n} from '../../../api/types';\nimport type { ApiDraft } from '../../../global/types';\nimport type { ObserveFn } from '../../../hooks/useIntersectionObserver';\nimport type { ChatAnimationTypes } from './hooks';\nimport { MAIN_THREAD_ID } from '../../../api/types';\nimport { StoryViewerOrigin } from '../../../types';\n\nimport {\n  getMessageAction,\n  getPrivateChatUserId,\n  isUserId,\n  isUserOnline,\n  selectIsChatMuted,\n} from '../../../global/helpers';\nimport { getMessageReplyInfo } from '../../../global/helpers/replies';\nimport {\n  selectCanAnimateInterface,\n  selectChat,\n  selectChatLastMessage,\n  selectChatLastMessageId,\n  selectChatMessage,\n  selectCurrentMessageList,\n  selectDraft,\n  selectIsForumPanelClosed,\n  selectIsForumPanelOpen,\n  selectNotifyExceptions,\n  selectNotifySettings,\n  selectOutgoingStatus,\n  selectPeer,\n  selectTabState,\n  selectThreadParam,\n  selectTopicFromMessage,\n  selectTopicsInfo,\n  selectUser,\n  selectUserStatus,\n} from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { createLocationHash } from '../../../util/routing';\nimport { IS_OPEN_IN_NEW_TAB_SUPPORTED } from '../../../util/windowEnvironment';\n\nimport useSelectorSignal from '../../../hooks/data/useSelectorSignal';\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useChatContextActions from '../../../hooks/useChatContextActions';\nimport useEnsureMessage from '../../../hooks/useEnsureMessage';\nimport useFlag from '../../../hooks/useFlag';\nimport { useIsIntersecting } from '../../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useShowTransitionDeprecated from '../../../hooks/useShowTransitionDeprecated';\nimport useChatListEntry from './hooks/useChatListEntry';\n\nimport Avatar from '../../common/Avatar';\nimport DeleteChatModal from '../../common/DeleteChatModal';\nimport FullNameTitle from '../../common/FullNameTitle';\nimport LastMessageMeta from '../../common/LastMessageMeta';\nimport ReportModal from '../../common/ReportModal';\nimport ListItem from '../../ui/ListItem';\nimport ChatFolderModal from '../ChatFolderModal.async';\nimport MuteChatModal from '../MuteChatModal.async';\nimport ChatBadge from './ChatBadge';\nimport ChatCallStatus from './ChatCallStatus';\n\nimport './Chat.scss';\n\ntype OwnProps = {\n  chatId: string;\n  folderId?: number;\n  orderDiff: number;\n  animationType: ChatAnimationTypes;\n  isPinned?: boolean;\n  offsetTop?: number;\n  isSavedDialog?: boolean;\n  isPreview?: boolean;\n  previewMessageId?: number;\n  className?: string;\n  observeIntersection?: ObserveFn;\n  onDragEnter?: (chatId: string) => void;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  listedTopicIds?: number[];\n  topics?: Record<number, ApiTopic>;\n  isMuted?: boolean;\n  user?: ApiUser;\n  userStatus?: ApiUserStatus;\n  actionTargetUserIds?: string[];\n  actionTargetMessage?: ApiMessage;\n  actionTargetChatId?: string;\n  lastMessageSender?: ApiPeer;\n  lastMessageOutgoingStatus?: ApiMessageOutgoingStatus;\n  draft?: ApiDraft;\n  isSelected?: boolean;\n  isSelectedForum?: boolean;\n  isForumPanelOpen?: boolean;\n  canScrollDown?: boolean;\n  canChangeFolder?: boolean;\n  lastMessageTopic?: ApiTopic;\n  typingStatus?: ApiTypingStatus;\n  withInterfaceAnimations?: boolean;\n  lastMessageId?: number;\n  lastMessage?: ApiMessage;\n  currentUserId: string;\n  isSynced?: boolean;\n};\n\nconst Chat: FC<OwnProps & StateProps> = ({\n  chatId,\n  folderId,\n  orderDiff,\n  animationType,\n  isPinned,\n  listedTopicIds,\n  topics,\n  observeIntersection,\n  chat,\n  isMuted,\n  user,\n  userStatus,\n  actionTargetUserIds,\n  lastMessageSender,\n  lastMessageOutgoingStatus,\n  actionTargetMessage,\n  actionTargetChatId,\n  offsetTop,\n  draft,\n  withInterfaceAnimations,\n  isSelected,\n  isSelectedForum,\n  isForumPanelOpen,\n  canScrollDown,\n  canChangeFolder,\n  lastMessageTopic,\n  typingStatus,\n  lastMessageId,\n  lastMessage,\n  isSavedDialog,\n  currentUserId,\n  isPreview,\n  previewMessageId,\n  className,\n  isSynced,\n  onDragEnter,\n}) => {\n  const {\n    openChat,\n    openSavedDialog,\n    toggleChatInfo,\n    focusLastMessage,\n    focusMessage,\n    loadTopics,\n    openForumPanel,\n    closeForumPanel,\n    setShouldCloseRightColumn,\n  } = getActions();\n\n  const { isMobile } = useAppLayout();\n  const [isDeleteModalOpen, openDeleteModal, closeDeleteModal] = useFlag();\n  const [isMuteModalOpen, openMuteModal, closeMuteModal] = useFlag();\n  const [isChatFolderModalOpen, openChatFolderModal, closeChatFolderModal] = useFlag();\n  const [isReportModalOpen, openReportModal, closeReportModal] = useFlag();\n  const [shouldRenderDeleteModal, markRenderDeleteModal, unmarkRenderDeleteModal] = useFlag();\n  const [shouldRenderMuteModal, markRenderMuteModal, unmarkRenderMuteModal] = useFlag();\n  const [shouldRenderChatFolderModal, markRenderChatFolderModal, unmarkRenderChatFolderModal] = useFlag();\n  const [shouldRenderReportModal, markRenderReportModal, unmarkRenderReportModal] = useFlag();\n\n  const { isForum, isForumAsMessages } = chat || {};\n\n  useEnsureMessage(isSavedDialog ? currentUserId : chatId, lastMessageId, lastMessage);\n\n  const { renderSubtitle, ref } = useChatListEntry({\n    chat,\n    chatId,\n    lastMessage,\n    typingStatus,\n    draft,\n    actionTargetMessage,\n    actionTargetUserIds,\n    actionTargetChatId,\n    lastMessageTopic,\n    lastMessageSender,\n    observeIntersection,\n    animationType,\n    withInterfaceAnimations,\n    orderDiff,\n    isSavedDialog,\n    isPreview,\n    topics,\n  });\n\n  const getIsForumPanelClosed = useSelectorSignal(selectIsForumPanelClosed);\n\n  const handleClick = useLastCallback(() => {\n    const noForumTopicPanel = isMobile && isForumAsMessages;\n\n    if (isMobile) {\n      setShouldCloseRightColumn({ value: true });\n    }\n\n    if (isPreview) {\n      focusMessage({\n        chatId,\n        messageId: previewMessageId!,\n      });\n      return;\n    }\n\n    if (isSavedDialog) {\n      openSavedDialog({ chatId, noForumTopicPanel: true }, { forceOnHeavyAnimation: true });\n\n      if (isMobile) {\n        toggleChatInfo({ force: false });\n      }\n      return;\n    }\n\n    if (isForum) {\n      if (isForumPanelOpen) {\n        closeForumPanel(undefined, { forceOnHeavyAnimation: true });\n\n        return;\n      } else {\n        if (!noForumTopicPanel) {\n          openForumPanel({ chatId }, { forceOnHeavyAnimation: true });\n        }\n\n        if (!isForumAsMessages) return;\n      }\n    }\n\n    openChat({ id: chatId, noForumTopicPanel, shouldReplaceHistory: true }, { forceOnHeavyAnimation: true });\n\n    if (isSelected && canScrollDown) {\n      focusLastMessage();\n    }\n  });\n\n  const handleDragEnter = useLastCallback((e) => {\n    e.preventDefault();\n    onDragEnter?.(chatId);\n  });\n\n  const handleDelete = useLastCallback(() => {\n    markRenderDeleteModal();\n    openDeleteModal();\n  });\n\n  const handleMute = useLastCallback(() => {\n    markRenderMuteModal();\n    openMuteModal();\n  });\n\n  const handleChatFolderChange = useLastCallback(() => {\n    markRenderChatFolderModal();\n    openChatFolderModal();\n  });\n\n  const handleReport = useLastCallback(() => {\n    markRenderReportModal();\n    openReportModal();\n  });\n\n  const contextActions = useChatContextActions({\n    chat,\n    user,\n    handleDelete,\n    handleMute,\n    handleChatFolderChange,\n    handleReport,\n    folderId,\n    isPinned,\n    isMuted,\n    canChangeFolder,\n    isSavedDialog,\n    currentUserId,\n    isPreview,\n  });\n\n  const isIntersecting = useIsIntersecting(ref, chat ? observeIntersection : undefined);\n\n  // Load the forum topics to display unread count badge\n  useEffect(() => {\n    if (isIntersecting && isForum && isSynced && listedTopicIds === undefined) {\n      loadTopics({ chatId });\n    }\n  }, [chatId, listedTopicIds, isSynced, isForum, isIntersecting]);\n\n  const isOnline = user && userStatus && isUserOnline(user, userStatus);\n  const { hasShownClass: isAvatarOnlineShown } = useShowTransitionDeprecated(isOnline);\n\n  const href = useMemo(() => {\n    if (!IS_OPEN_IN_NEW_TAB_SUPPORTED) return undefined;\n\n    if (isSavedDialog) {\n      return `#${createLocationHash(currentUserId, 'thread', chatId)}`;\n    }\n\n    return `#${createLocationHash(chatId, 'thread', MAIN_THREAD_ID)}`;\n  }, [chatId, currentUserId, isSavedDialog]);\n\n  if (!chat) {\n    return undefined;\n  }\n\n  const peer = user || chat;\n\n  const chatClassName = buildClassName(\n    'Chat chat-item-clickable',\n    isUserId(chatId) ? 'private' : 'group',\n    isForum && 'forum',\n    isSelected && 'selected',\n    isSelectedForum && 'selected-forum',\n    isPreview && 'standalone',\n    className,\n  );\n\n  return (\n    <ListItem\n      ref={ref}\n      className={chatClassName}\n      href={href}\n      style={`top: ${offsetTop}px`}\n      ripple={!isForum && !isMobile}\n      contextActions={contextActions}\n      onClick={handleClick}\n      onDragEnter={handleDragEnter}\n      withPortalForMenu\n    >\n      <div className={buildClassName('status', 'status-clickable')}>\n        <Avatar\n          peer={peer}\n          isSavedMessages={user?.isSelf}\n          isSavedDialog={isSavedDialog}\n          size={isPreview ? 'medium' : 'large'}\n          withStory={!user?.isSelf}\n          withStoryGap={isAvatarOnlineShown}\n          storyViewerOrigin={StoryViewerOrigin.ChatList}\n          storyViewerMode=\"single-peer\"\n        />\n        <div className=\"avatar-badge-wrapper\">\n          <div className={buildClassName('avatar-online', isAvatarOnlineShown && 'avatar-online-shown')} />\n          <ChatBadge\n            chat={chat}\n            isMuted={isMuted}\n            shouldShowOnlyMostImportant\n            forceHidden={getIsForumPanelClosed}\n            topics={topics}\n          />\n        </div>\n        {chat.isCallActive && chat.isCallNotEmpty && (\n          <ChatCallStatus isMobile={isMobile} isSelected={isSelected} isActive={withInterfaceAnimations} />\n        )}\n      </div>\n      <div className=\"info\">\n        <div className=\"info-row\">\n          <FullNameTitle\n            peer={peer}\n            withEmojiStatus\n            isSavedMessages={chatId === user?.id && user?.isSelf}\n            isSavedDialog={isSavedDialog}\n            observeIntersection={observeIntersection}\n          />\n          {isMuted && !isSavedDialog && <i className=\"icon icon-muted\" />}\n          <div className=\"separator\" />\n          {lastMessage && (\n            <LastMessageMeta\n              message={lastMessage}\n              outgoingStatus={!isSavedDialog ? lastMessageOutgoingStatus : undefined}\n              draftDate={draft?.date}\n            />\n          )}\n        </div>\n        <div className=\"subtitle\">\n          {renderSubtitle()}\n          {!isPreview && (\n            <ChatBadge\n              chat={chat}\n              isPinned={isPinned}\n              isMuted={isMuted}\n              isSavedDialog={isSavedDialog}\n              topics={topics}\n            />\n          )}\n        </div>\n      </div>\n      {shouldRenderDeleteModal && (\n        <DeleteChatModal\n          isOpen={isDeleteModalOpen}\n          onClose={closeDeleteModal}\n          onCloseAnimationEnd={unmarkRenderDeleteModal}\n          chat={chat}\n          isSavedDialog={isSavedDialog}\n        />\n      )}\n      {shouldRenderMuteModal && (\n        <MuteChatModal\n          isOpen={isMuteModalOpen}\n          onClose={closeMuteModal}\n          onCloseAnimationEnd={unmarkRenderMuteModal}\n          chatId={chatId}\n        />\n      )}\n      {shouldRenderChatFolderModal && (\n        <ChatFolderModal\n          isOpen={isChatFolderModalOpen}\n          onClose={closeChatFolderModal}\n          onCloseAnimationEnd={unmarkRenderChatFolderModal}\n          chatId={chatId}\n        />\n      )}\n      {shouldRenderReportModal && (\n        <ReportModal\n          isOpen={isReportModalOpen}\n          onClose={closeReportModal}\n          onCloseAnimationEnd={unmarkRenderReportModal}\n          peerId={chatId}\n          subject=\"peer\"\n        />\n      )}\n    </ListItem>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, {\n    chatId, isSavedDialog, isPreview, previewMessageId,\n  }): StateProps => {\n    const chat = selectChat(global, chatId);\n    if (!chat) {\n      return {\n        currentUserId: global.currentUserId!,\n      };\n    }\n\n    const lastMessageId = previewMessageId || selectChatLastMessageId(global, chatId, isSavedDialog ? 'saved' : 'all');\n    const lastMessage = previewMessageId\n      ? selectChatMessage(global, chatId, previewMessageId)\n      : selectChatLastMessage(global, chatId, isSavedDialog ? 'saved' : 'all');\n    const { senderId, isOutgoing, forwardInfo } = lastMessage || {};\n    const actualSenderId = isSavedDialog ? forwardInfo?.fromId : senderId;\n    const replyToMessageId = lastMessage && getMessageReplyInfo(lastMessage)?.replyToMsgId;\n    const lastMessageSender = actualSenderId ? selectPeer(global, actualSenderId) : undefined;\n    const lastMessageAction = lastMessage ? getMessageAction(lastMessage) : undefined;\n    const actionTargetMessage = lastMessageAction && replyToMessageId\n      ? selectChatMessage(global, chat.id, replyToMessageId)\n      : undefined;\n    const { targetUserIds: actionTargetUserIds, targetChatId: actionTargetChatId } = lastMessageAction || {};\n    const privateChatUserId = getPrivateChatUserId(chat);\n\n    const {\n      chatId: currentChatId,\n      threadId: currentThreadId,\n      type: messageListType,\n    } = selectCurrentMessageList(global) || {};\n    const isSelected = !isPreview && chatId === currentChatId && (isSavedDialog\n      ? chatId === currentThreadId : currentThreadId === MAIN_THREAD_ID);\n    const isSelectedForum = (chat.isForum && chatId === currentChatId)\n      || chatId === selectTabState(global).forumPanelChatId;\n\n    const user = privateChatUserId ? selectUser(global, privateChatUserId) : undefined;\n    const userStatus = privateChatUserId ? selectUserStatus(global, privateChatUserId) : undefined;\n    const lastMessageTopic = lastMessage && selectTopicFromMessage(global, lastMessage);\n\n    const typingStatus = selectThreadParam(global, chatId, MAIN_THREAD_ID, 'typingStatus');\n\n    const topicsInfo = selectTopicsInfo(global, chatId);\n\n    return {\n      chat,\n      isMuted: selectIsChatMuted(chat, selectNotifySettings(global), selectNotifyExceptions(global)),\n      lastMessageSender,\n      actionTargetUserIds,\n      actionTargetChatId,\n      actionTargetMessage,\n      draft: selectDraft(global, chatId, MAIN_THREAD_ID),\n      isSelected,\n      isSelectedForum,\n      isForumPanelOpen: selectIsForumPanelOpen(global),\n      canScrollDown: isSelected && messageListType === 'thread',\n      canChangeFolder: (global.chatFolders.orderedIds?.length || 0) > 1,\n      ...(isOutgoing && lastMessage && {\n        lastMessageOutgoingStatus: selectOutgoingStatus(global, lastMessage),\n      }),\n      user,\n      userStatus,\n      lastMessageTopic,\n      typingStatus,\n      withInterfaceAnimations: selectCanAnimateInterface(global),\n      lastMessage,\n      lastMessageId,\n      currentUserId: global.currentUserId!,\n      listedTopicIds: topicsInfo?.listedTopicIds,\n      topics: topicsInfo?.topicsById,\n      isSynced: global.isSynced,\n    };\n  },\n)(Chat));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useMemo } from '../../../lib/teact/teact';\n\nimport type { ApiChat, ApiTopic } from '../../../api/types';\nimport type { Signal } from '../../../util/signals';\n\nimport buildClassName from '../../../util/buildClassName';\nimport { isSignal } from '../../../util/signals';\nimport { formatIntegerCompact } from '../../../util/textFormat';\n\nimport useDerivedState from '../../../hooks/useDerivedState';\n\nimport AnimatedCounter from '../../common/AnimatedCounter';\nimport ShowTransition from '../../ui/ShowTransition';\n\nimport './ChatBadge.scss';\n\ntype OwnProps = {\n  chat: ApiChat;\n  topic?: ApiTopic;\n  wasTopicOpened?: boolean;\n  isPinned?: boolean;\n  isMuted?: boolean;\n  isSavedDialog?: boolean;\n  shouldShowOnlyMostImportant?: boolean;\n  forceHidden?: boolean | Signal<boolean>;\n  topics?: Record<number, ApiTopic>;\n};\n\nconst ChatBadge: FC<OwnProps> = ({\n  topic,\n  topics,\n  chat,\n  isPinned,\n  isMuted,\n  shouldShowOnlyMostImportant,\n  wasTopicOpened,\n  forceHidden,\n  isSavedDialog,\n}) => {\n  const {\n    unreadMentionsCount = 0, unreadReactionsCount = 0,\n  } = !chat.isForum ? chat : {}; // TODO[forums] Unread mentions and reactions temporarily disabled for forums\n\n  const isTopicUnopened = !isPinned && topic && !wasTopicOpened;\n  const isForum = chat.isForum && !topic;\n  const topicsWithUnread = useMemo(() => (\n    isForum && topics ? Object.values(topics).filter(({ unreadCount }) => unreadCount) : undefined\n  ), [topics, isForum]);\n\n  const unreadCount = useMemo(() => (\n    isForum\n      // If we have unmuted topics, display the count of those. Otherwise, display the count of all topics.\n      ? ((isMuted && topicsWithUnread?.filter((acc) => acc.isMuted === false).length)\n        || topicsWithUnread?.length)\n      : (topic || chat).unreadCount\n  ), [chat, topic, topicsWithUnread, isForum, isMuted]);\n\n  const shouldBeMuted = useMemo(() => {\n    const hasUnmutedUnreadTopics = topics\n      && Object.values(topics).some((acc) => !acc.isMuted && acc.unreadCount);\n\n    return isMuted || (topics && !hasUnmutedUnreadTopics);\n  }, [topics, isMuted]);\n\n  const hasUnreadMark = topic ? false : chat.hasUnreadMark;\n\n  const resolvedForceHidden = useDerivedState(\n    () => (isSignal(forceHidden) ? forceHidden() : forceHidden),\n    [forceHidden],\n  );\n  const isShown = !resolvedForceHidden && Boolean(\n    unreadCount || unreadMentionsCount || hasUnreadMark || isPinned || unreadReactionsCount\n    || isTopicUnopened,\n  );\n\n  const isUnread = Boolean((unreadCount || hasUnreadMark) && !isSavedDialog);\n  const className = buildClassName(\n    'ChatBadge',\n    shouldBeMuted && 'muted',\n    !isUnread && isPinned && 'pinned',\n    isUnread && 'unread',\n  );\n\n  function renderContent() {\n    const unreadReactionsElement = unreadReactionsCount && (\n      <div className={buildClassName('ChatBadge reaction', shouldBeMuted && 'muted')}>\n        <i className=\"icon icon-heart\" />\n      </div>\n    );\n\n    const unreadMentionsElement = unreadMentionsCount && (\n      <div className=\"ChatBadge mention\">\n        <i className=\"icon icon-mention\" />\n      </div>\n    );\n\n    const unopenedTopicElement = isTopicUnopened && (\n      <div className={buildClassName('ChatBadge unopened', shouldBeMuted && 'muted')} />\n    );\n\n    const unreadCountElement = (hasUnreadMark || unreadCount) ? (\n      <div className={className}>\n        {!hasUnreadMark && <AnimatedCounter text={formatIntegerCompact(unreadCount!)} />}\n      </div>\n    ) : undefined;\n\n    const pinnedElement = isPinned && (\n      <div className={className}>\n        <i className=\"icon icon-pinned-chat\" />\n      </div>\n    );\n\n    const visiblePinnedElement = !unreadCountElement && !unreadMentionsElement && !unreadReactionsElement\n      && pinnedElement;\n\n    const elements = [\n      unopenedTopicElement, unreadReactionsElement, unreadMentionsElement, unreadCountElement, visiblePinnedElement,\n    ].filter(Boolean);\n\n    if (isSavedDialog) return pinnedElement;\n\n    if (elements.length === 0) return undefined;\n\n    if (elements.length === 1) return elements[0];\n\n    if (shouldShowOnlyMostImportant) {\n      const importanceOrderedElements = [\n        unreadMentionsElement, unreadCountElement, unreadReactionsElement, pinnedElement,\n      ].filter(Boolean);\n      return importanceOrderedElements[0];\n    }\n\n    return (\n      <div className=\"ChatBadge-wrapper\">\n        {elements}\n      </div>\n    );\n  }\n\n  return (\n    <ShowTransition isCustom className=\"ChatBadge-transition\" isOpen={isShown}>\n      {renderContent()}\n    </ShowTransition>\n  );\n};\n\nexport default memo(ChatBadge);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"sG8AAzvK\",\"minimized\":\"lTOui0dp\",\"button\":\"bNkLqJf1\",\"title\":\"rMTpNazX\",\"unread-count\":\"O7esHjyC\",\"unreadCount\":\"O7esHjyC\",\"info\":\"OS2LWzdu\",\"name\":\"bkCtPuPQ\",\"icon\":\"f4LUPgr4\",\"avatarWrapper\":\"RMY__Znz\",\"avatar\":\"qeb0Aox1\",\"chatsPreview\":\"_1817Hwgd\",\"unread\":\"SS39xuL3\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback, useMemo } from '../../../lib/teact/teact';\nimport { getActions, getGlobal } from '../../../global';\n\nimport type { GlobalState } from '../../../global/types';\n\nimport { ARCHIVED_FOLDER_ID } from '../../../config';\nimport { getChatTitle } from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\nimport { compact } from '../../../util/iteratees';\nimport { formatIntegerCompact } from '../../../util/textFormat';\nimport renderText from '../../common/helpers/renderText';\n\nimport { useFolderManagerForOrderedIds, useFolderManagerForUnreadCounters } from '../../../hooks/useFolderManager';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Badge from '../../ui/Badge';\nimport ListItem, { type MenuItemContextAction } from '../../ui/ListItem';\n\nimport styles from './Archive.module.scss';\n\ntype OwnProps = {\n  archiveSettings: GlobalState['archiveSettings'];\n  onDragEnter?: NoneToVoidFunction;\n  onClick?: NoneToVoidFunction;\n};\n\nconst PREVIEW_SLICE = 5;\n\nconst Archive: FC<OwnProps> = ({\n  archiveSettings,\n  onDragEnter,\n  onClick,\n}) => {\n  const { updateArchiveSettings } = getActions();\n  const lang = useOldLang();\n\n  const orderedChatIds = useFolderManagerForOrderedIds(ARCHIVED_FOLDER_ID);\n  const unreadCounters = useFolderManagerForUnreadCounters();\n  const archiveUnreadCount = unreadCounters[ARCHIVED_FOLDER_ID]?.chatsCount;\n\n  const previewItems = useMemo(() => {\n    if (!orderedChatIds?.length) return lang('Loading');\n\n    const chatsById = getGlobal().chats.byId;\n\n    return orderedChatIds.slice(0, PREVIEW_SLICE).map((chatId, i, arr) => {\n      const isLast = i === arr.length - 1;\n      const chat = chatsById[chatId];\n      if (!chat) {\n        return undefined;\n      }\n\n      const title = getChatTitle(lang, chat);\n\n      return (\n        <>\n          <span className={buildClassName(styles.chat, archiveUnreadCount && chat.unreadCount && styles.unread)}>\n            {renderText(title)}\n          </span>\n          {isLast ? '' : ', '}\n        </>\n      );\n    });\n  }, [orderedChatIds, lang, archiveUnreadCount]);\n\n  const contextActions = useMemo(() => {\n    const actionMinimize = !archiveSettings.isMinimized && {\n      title: lang('lng_context_archive_collapse'),\n      icon: 'collapse',\n      handler: () => {\n        updateArchiveSettings({ isMinimized: true });\n      },\n    } satisfies MenuItemContextAction;\n\n    const actionExpand = archiveSettings.isMinimized && {\n      title: lang('lng_context_archive_expand'),\n      icon: 'expand',\n      handler: () => {\n        updateArchiveSettings({ isMinimized: false });\n      },\n    } satisfies MenuItemContextAction;\n\n    const actionHide = {\n      title: lang('lng_context_archive_to_menu'),\n      icon: 'archive-to-main',\n      handler: () => {\n        updateArchiveSettings({ isHidden: true });\n      },\n    } satisfies MenuItemContextAction;\n\n    return compact([actionMinimize, actionExpand, actionHide]);\n  }, [archiveSettings.isMinimized, lang, updateArchiveSettings]);\n\n  const handleDragEnter = useCallback((e) => {\n    e.preventDefault();\n    onDragEnter?.();\n  }, [onDragEnter]);\n\n  function renderCollapsed() {\n    return (\n      <div className={buildClassName(styles.info, 'info')}>\n        <div className=\"info-row\">\n          <div className={buildClassName('title', styles.title)}>\n            <h3 dir=\"auto\" className={buildClassName(styles.name, 'fullName')}>\n              <i className={buildClassName(styles.icon, 'icon', 'icon-archive-filled')} />\n              {lang('ArchivedChats')}\n            </h3>\n          </div>\n          <Badge\n            className={styles.unreadCount}\n            text={archiveUnreadCount ? formatIntegerCompact(archiveUnreadCount) : undefined}\n          />\n        </div>\n      </div>\n    );\n  }\n\n  function renderRegular() {\n    return (\n      <>\n        <div className={buildClassName('status', styles.avatarWrapper)}>\n          <div className={buildClassName('Avatar', styles.avatar)}>\n            <i className=\"icon icon-archive-filled\" />\n          </div>\n        </div>\n        <div className={buildClassName(styles.info, 'info')}>\n          <div className=\"info-row\">\n            <div className={buildClassName('title', styles.title)}>\n              <h3 dir=\"auto\" className={buildClassName(styles.name, 'fullName')}>{lang('ArchivedChats')}</h3>\n            </div>\n          </div>\n          <div className=\"subtitle\">\n            <div className={buildClassName('status', styles.chatsPreview)}>\n              {previewItems}\n            </div>\n            <Badge\n              className={styles.unreadCount}\n              text={archiveUnreadCount ? formatIntegerCompact(archiveUnreadCount) : undefined}\n            />\n          </div>\n        </div>\n      </>\n    );\n  }\n\n  return (\n    <ListItem\n      onClick={onClick}\n      onDragEnter={handleDragEnter}\n      className={buildClassName(\n        styles.root,\n        archiveSettings.isMinimized && styles.minimized,\n        'chat-item-clickable',\n        'chat-item-archive',\n      )}\n      buttonClassName={styles.button}\n      contextActions={contextActions}\n      withPortalForMenu\n    >\n      {archiveSettings.isMinimized ? renderCollapsed() : renderRegular()}\n    </ListItem>\n  );\n};\n\nexport default memo(Archive);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"yftKUVDQ\",\"sticker\":\"UCBfMOiz\",\"title\":\"dB9cHelg\",\"description\":\"TJ_liZcJ\",\"is-ios\":\"z51XfrFn\",\"isIos\":\"z51XfrFn\",\"is-macos\":\"tiLqJXxs\",\"isMacos\":\"tiLqJXxs\",\"button-text\":\"aL7e0w4t\",\"buttonText\":\"aL7e0w4t\",\"centered\":\"NefQ8HbN\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../../lib/teact/teact';\nimport { withGlobal } from '../../../global';\n\nimport type { ApiChatFolder, ApiSticker } from '../../../api/types';\nimport type { FolderEditDispatch } from '../../../hooks/reducers/useFoldersReducer';\nimport { SettingsScreens } from '../../../types';\n\nimport { selectAnimatedEmoji, selectChatFolder } from '../../../global/selectors';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport AnimatedIconFromSticker from '../../common/AnimatedIconFromSticker';\nimport Button from '../../ui/Button';\n\nimport styles from './EmptyFolder.module.scss';\n\ntype OwnProps = {\n  folderId?: number;\n  folderType: 'all' | 'archived' | 'saved' | 'folder';\n  foldersDispatch: FolderEditDispatch;\n  onSettingsScreenSelect: (screen: SettingsScreens) => void;\n};\n\ntype StateProps = {\n  chatFolder?: ApiChatFolder;\n  animatedEmoji?: ApiSticker;\n};\n\nconst ICON_SIZE = 96;\n\nconst EmptyFolder: FC<OwnProps & StateProps> = ({\n  chatFolder, animatedEmoji, foldersDispatch, onSettingsScreenSelect,\n}) => {\n  const lang = useOldLang();\n  const { isMobile } = useAppLayout();\n\n  const handleEditFolder = useCallback(() => {\n    foldersDispatch({ type: 'editFolder', payload: chatFolder });\n    onSettingsScreenSelect(SettingsScreens.FoldersEditFolderFromChatList);\n  }, [chatFolder, foldersDispatch, onSettingsScreenSelect]);\n\n  return (\n    <div className={styles.root}>\n      <div className={styles.sticker}>\n        {animatedEmoji && <AnimatedIconFromSticker sticker={animatedEmoji} size={ICON_SIZE} />}\n      </div>\n      <h3 className={styles.title} dir=\"auto\">{lang('FilterNoChatsToDisplay')}</h3>\n      <p className={styles.description} dir=\"auto\">\n        {lang(chatFolder ? 'ChatList.EmptyChatListFilterText' : 'Chat.EmptyChat')}\n      </p>\n      {chatFolder && (\n        <Button\n          ripple={!isMobile}\n          fluid\n          pill\n          onClick={handleEditFolder}\n          size=\"smaller\"\n          isRtl={lang.isRtl}\n        >\n          <i className=\"icon icon-settings\" />\n          <div className={styles.buttonText}>\n            {lang('ChatList.EmptyChatListEditFilter')}\n          </div>\n        </Button>\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>((global, { folderId, folderType }): StateProps => {\n  const chatFolder = folderId && folderType === 'folder' ? selectChatFolder(global, folderId) : undefined;\n\n  return {\n    chatFolder,\n    animatedEmoji: selectAnimatedEmoji(global, '📂'),\n  };\n})(EmptyFolder));\n","// extracted by mini-css-extract-plugin\nexport default {\"minimized\":\"lTOui0dp\",\"root\":\"yEkGgZVL\",\"title\":\"VhAJDrnz\",\"info\":\"WmyL1NJ8\",\"buttons\":\"_40UGD1Y\",\"button\":\"pedMJD_v\"};","import React, { memo, useMemo, useRef } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiSession } from '../../../api/types';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useResizeObserver from '../../../hooks/useResizeObserver';\n\nimport Button from '../../ui/Button';\n\nimport styles from './UnconfirmedSession.module.scss';\n\ntype OwnProps = {\n  sessions: Record<string, ApiSession>;\n  onHeightChange: (height: number) => void;\n};\n\nconst UnconfirmedSession = ({ sessions, onHeightChange } : OwnProps) => {\n  const { changeSessionSettings, terminateAuthorization, showNotification } = getActions();\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n  const lang = useOldLang();\n\n  useResizeObserver(ref, (entry) => {\n    const height = entry.borderBoxSize?.[0]?.blockSize || entry.contentRect.height;\n    onHeightChange(height);\n  });\n\n  const firstUnconfirmed = useMemo(() => {\n    return Object.values(sessions).sort((a, b) => b.dateCreated - a.dateCreated)\n      .find((session) => session.isUnconfirmed)!;\n  }, [sessions]);\n\n  const locationString = useMemo(() => {\n    return [firstUnconfirmed.deviceModel, firstUnconfirmed.region, firstUnconfirmed.country].filter(Boolean).join(', ');\n  }, [firstUnconfirmed]);\n\n  const handleAccept = useLastCallback(() => {\n    changeSessionSettings({\n      hash: firstUnconfirmed.hash,\n      isConfirmed: true,\n    });\n  });\n\n  const handleReject = useLastCallback(() => {\n    terminateAuthorization({ hash: firstUnconfirmed.hash });\n    showNotification({\n      title: lang('UnconfirmedAuthDeniedTitle', 1),\n      message: lang('UnconfirmedAuthDeniedMessageSingle', locationString),\n    });\n  });\n\n  return (\n    <div className={styles.root} ref={ref}>\n      <h2 className={styles.title}>{lang('UnconfirmedAuthTitle')}</h2>\n      <p className={styles.info}>\n        {lang('UnconfirmedAuthSingle', locationString)}\n      </p>\n      <div className={styles.buttons}>\n        <Button fluid isText size=\"smaller\" className={styles.button} onClick={handleAccept}>\n          {lang('UnconfirmedAuthConfirm')}\n        </Button>\n        <Button fluid isText size=\"smaller\" color=\"danger\" onClick={handleReject} className={styles.button}>\n          {lang('UnconfirmedAuthDeny')}\n        </Button>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(UnconfirmedSession);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo, useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiSession } from '../../../api/types';\nimport type { GlobalState } from '../../../global/types';\nimport type { FolderEditDispatch } from '../../../hooks/reducers/useFoldersReducer';\nimport type { SettingsScreens } from '../../../types';\nimport { LeftColumnContent } from '../../../types';\n\nimport {\n  ALL_FOLDER_ID,\n  ARCHIVE_MINIMIZED_HEIGHT,\n  ARCHIVED_FOLDER_ID,\n  CHAT_HEIGHT_PX,\n  CHAT_LIST_SLICE,\n  FRESH_AUTH_PERIOD,\n  SAVED_FOLDER_ID,\n} from '../../../config';\nimport buildClassName from '../../../util/buildClassName';\nimport { getOrderKey, getPinnedChatsCount } from '../../../util/folderManager';\nimport { getServerTime } from '../../../util/serverTime';\nimport { IS_APP, IS_MAC_OS } from '../../../util/windowEnvironment';\n\nimport usePeerStoriesPolling from '../../../hooks/polling/usePeerStoriesPolling';\nimport useTopOverscroll from '../../../hooks/scroll/useTopOverscroll';\nimport useDebouncedCallback from '../../../hooks/useDebouncedCallback';\nimport { useFolderManagerForOrderedIds } from '../../../hooks/useFolderManager';\nimport { useHotkeys } from '../../../hooks/useHotkeys';\nimport useInfiniteScroll from '../../../hooks/useInfiniteScroll';\nimport { useIntersectionObserver } from '../../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOrderDiff from './hooks/useOrderDiff';\n\nimport InfiniteScroll from '../../ui/InfiniteScroll';\nimport Loading from '../../ui/Loading';\nimport Archive from './Archive';\nimport Chat from './Chat';\nimport EmptyFolder from './EmptyFolder';\nimport UnconfirmedSession from './UnconfirmedSession';\n\ntype OwnProps = {\n  className?: string;\n  folderType: 'all' | 'archived' | 'saved' | 'folder';\n  folderId?: number;\n  isActive: boolean;\n  canDisplayArchive?: boolean;\n  archiveSettings?: GlobalState['archiveSettings'];\n  isForumPanelOpen?: boolean;\n  sessions?: Record<string, ApiSession>;\n  foldersDispatch?: FolderEditDispatch;\n  onSettingsScreenSelect?: (screen: SettingsScreens) => void;\n  onLeftColumnContentChange?: (content: LeftColumnContent) => void;\n};\n\nconst INTERSECTION_THROTTLE = 200;\nconst DRAG_ENTER_DEBOUNCE = 500;\nconst RESERVED_HOTKEYS = new Set(['9', '0']);\n\nconst ChatList: FC<OwnProps> = ({\n  className,\n  folderType,\n  folderId,\n  isActive,\n  isForumPanelOpen,\n  canDisplayArchive,\n  archiveSettings,\n  sessions,\n  foldersDispatch,\n  onSettingsScreenSelect,\n  onLeftColumnContentChange,\n}) => {\n  const {\n    openChat,\n    openNextChat,\n    closeForumPanel,\n  } = getActions();\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  const shouldIgnoreDragRef = useRef(false);\n  const [unconfirmedSessionHeight, setUnconfirmedSessionHeight] = useState(0);\n\n  const isArchived = folderType === 'archived';\n  const isAllFolder = folderType === 'all';\n  const isSaved = folderType === 'saved';\n  const resolvedFolderId = (\n    isAllFolder ? ALL_FOLDER_ID : isArchived ? ARCHIVED_FOLDER_ID : isSaved ? SAVED_FOLDER_ID : folderId!\n  );\n\n  const shouldDisplayArchive = isAllFolder && canDisplayArchive && archiveSettings;\n\n  const orderedIds = useFolderManagerForOrderedIds(resolvedFolderId);\n  usePeerStoriesPolling(orderedIds);\n\n  const chatsHeight = (orderedIds?.length || 0) * CHAT_HEIGHT_PX;\n  const archiveHeight = shouldDisplayArchive\n    ? archiveSettings?.isMinimized ? ARCHIVE_MINIMIZED_HEIGHT : CHAT_HEIGHT_PX : 0;\n\n  const { orderDiffById, getAnimationType } = useOrderDiff(orderedIds);\n\n  const [viewportIds, getMore] = useInfiniteScroll(undefined, orderedIds, undefined, CHAT_LIST_SLICE);\n\n  const shouldShowUnconfirmedSessions = useMemo(() => {\n    const sessionsArray = Object.values(sessions || {});\n    const current = sessionsArray.find((session) => session.isCurrent);\n    if (!current || getServerTime() - current.dateCreated < FRESH_AUTH_PERIOD) return false;\n\n    return isAllFolder && sessionsArray.some((session) => session.isUnconfirmed);\n  }, [isAllFolder, sessions]);\n\n  useEffect(() => {\n    if (!shouldShowUnconfirmedSessions) setUnconfirmedSessionHeight(0);\n  }, [shouldShowUnconfirmedSessions]);\n\n  // Support <Alt>+<Up/Down> to navigate between chats\n  useHotkeys(useMemo(() => (isActive && orderedIds?.length ? {\n    'Alt+ArrowUp': (e: KeyboardEvent) => {\n      e.preventDefault();\n      openNextChat({ targetIndexDelta: -1, orderedIds });\n    },\n    'Alt+ArrowDown': (e: KeyboardEvent) => {\n      e.preventDefault();\n      openNextChat({ targetIndexDelta: 1, orderedIds });\n    },\n  } : undefined), [isActive, orderedIds]));\n\n  // Support <Cmd>+<Digit> to navigate between chats\n  useEffect(() => {\n    if (!isActive || isSaved || !orderedIds || !IS_APP) {\n      return undefined;\n    }\n\n    function handleKeyDown(e: KeyboardEvent) {\n      if (((IS_MAC_OS && e.metaKey) || (!IS_MAC_OS && e.ctrlKey)) && e.code.startsWith('Digit')) {\n        const [, digit] = e.code.match(/Digit(\\d)/) || [];\n        if (!digit || RESERVED_HOTKEYS.has(digit)) return;\n\n        const isArchiveInList = shouldDisplayArchive && archiveSettings && !archiveSettings.isMinimized;\n\n        const shift = isArchiveInList ? -1 : 0;\n        const position = Number(digit) + shift - 1;\n\n        if (isArchiveInList && position === -1) {\n          onLeftColumnContentChange?.(LeftColumnContent.Archived);\n          return;\n        }\n\n        if (position > orderedIds!.length - 1) return;\n\n        openChat({ id: orderedIds![position], shouldReplaceHistory: true });\n      }\n    }\n\n    document.addEventListener('keydown', handleKeyDown);\n\n    return () => {\n      document.removeEventListener('keydown', handleKeyDown);\n    };\n  }, [\n    archiveSettings, isSaved, isActive, onLeftColumnContentChange, openChat, openNextChat, orderedIds,\n    shouldDisplayArchive,\n  ]);\n\n  const { observe } = useIntersectionObserver({\n    rootRef: containerRef,\n    throttleMs: INTERSECTION_THROTTLE,\n  });\n\n  const handleArchivedClick = useLastCallback(() => {\n    onLeftColumnContentChange!(LeftColumnContent.Archived);\n    closeForumPanel();\n  });\n\n  const handleArchivedDragEnter = useLastCallback(() => {\n    if (shouldIgnoreDragRef.current) {\n      shouldIgnoreDragRef.current = false;\n      return;\n    }\n    handleArchivedClick();\n  });\n\n  const handleDragEnter = useDebouncedCallback((chatId: string) => {\n    if (shouldIgnoreDragRef.current) {\n      shouldIgnoreDragRef.current = false;\n      return;\n    }\n    openChat({ id: chatId, shouldReplaceHistory: true });\n  }, [openChat], DRAG_ENTER_DEBOUNCE, true);\n\n  const handleDragLeave = useLastCallback((e: React.DragEvent<HTMLDivElement>) => {\n    const rect = e.currentTarget.getBoundingClientRect();\n    const x = e.clientX - rect.left;\n    const y = e.clientY - rect.top;\n    if (x < rect.width || y < rect.y) return;\n    shouldIgnoreDragRef.current = true;\n  });\n\n  function renderChats() {\n    const viewportOffset = orderedIds!.indexOf(viewportIds![0]);\n\n    const pinnedCount = getPinnedChatsCount(resolvedFolderId) || 0;\n\n    return viewportIds!.map((id, i) => {\n      const isPinned = viewportOffset + i < pinnedCount;\n      const offsetTop = unconfirmedSessionHeight + archiveHeight + (viewportOffset + i) * CHAT_HEIGHT_PX;\n\n      return (\n        <Chat\n          key={id}\n          teactOrderKey={isPinned ? i : getOrderKey(id, isSaved)}\n          chatId={id}\n          isPinned={isPinned}\n          folderId={folderId}\n          isSavedDialog={isSaved}\n          animationType={getAnimationType(id)}\n          orderDiff={orderDiffById[id]}\n          offsetTop={offsetTop}\n          observeIntersection={observe}\n          onDragEnter={handleDragEnter}\n        />\n      );\n    });\n  }\n\n  return (\n    <InfiniteScroll\n      className={buildClassName('chat-list custom-scroll', isForumPanelOpen && 'forum-panel-open', className)}\n      ref={containerRef}\n      items={viewportIds}\n      itemSelector=\".ListItem:not(.chat-item-archive)\"\n      preloadBackwards={CHAT_LIST_SLICE}\n      withAbsolutePositioning\n      maxHeight={chatsHeight + archiveHeight + unconfirmedSessionHeight}\n      onLoadMore={getMore}\n      onDragLeave={handleDragLeave}\n    >\n      {shouldShowUnconfirmedSessions && (\n        <UnconfirmedSession\n          key=\"unconfirmed\"\n          sessions={sessions!}\n          onHeightChange={setUnconfirmedSessionHeight}\n        />\n      )}\n      {shouldDisplayArchive && (\n        <Archive\n          key=\"archive\"\n          archiveSettings={archiveSettings}\n          onClick={handleArchivedClick}\n          onDragEnter={handleArchivedDragEnter}\n        />\n      )}\n      {viewportIds?.length ? (\n        renderChats()\n      ) : viewportIds && !viewportIds.length && !isSaved ? (\n        (\n          <EmptyFolder\n            folderId={folderId}\n            folderType={folderType}\n            foldersDispatch={foldersDispatch!}\n            onSettingsScreenSelect={onSettingsScreenSelect!}\n          />\n        )\n      ) : (\n        <Loading key=\"loading\" />\n      )}\n    </InfiniteScroll>\n  );\n};\n\nexport default memo(ChatList);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"Ky16H_sV\",\"button-text\":\"W01t9CIf\",\"buttonText\":\"W01t9CIf\",\"sticker\":\"c8lE3XW5\",\"title\":\"wlwD1B1Q\",\"description\":\"V8OCFHmp\",\"is-ios\":\"IxW_z_r0\",\"isIos\":\"IxW_z_r0\",\"is-macos\":\"OFxKGCEJ\",\"isMacos\":\"OFxKGCEJ\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiSticker } from '../../../api/types';\n\nimport { getHasAdminRight } from '../../../global/helpers';\nimport { selectAnimatedEmoji, selectChat } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { REM } from '../../common/helpers/mediaDimensions';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport AnimatedIconFromSticker from '../../common/AnimatedIconFromSticker';\nimport Button from '../../ui/Button';\n\nimport styles from './EmptyForum.module.scss';\n\ntype OwnProps = {\n  chatId: string;\n};\n\ntype StateProps = {\n  animatedEmoji?: ApiSticker;\n  canManageTopics?: boolean;\n};\n\nconst ICON_SIZE = 7 * REM;\n\nconst EmptyForum: FC<OwnProps & StateProps> = ({\n  chatId, animatedEmoji, canManageTopics,\n}) => {\n  const { openCreateTopicPanel } = getActions();\n\n  const lang = useOldLang();\n  const { isMobile } = useAppLayout();\n\n  const handleCreateTopic = useCallback(() => {\n    openCreateTopicPanel({ chatId });\n  }, [chatId, openCreateTopicPanel]);\n\n  return (\n    <div className={styles.root}>\n      <div className={styles.sticker}>\n        {animatedEmoji && <AnimatedIconFromSticker sticker={animatedEmoji} size={ICON_SIZE} />}\n      </div>\n      <h3 className={styles.title} dir=\"auto\">{lang('ChatList.EmptyTopicsTitle')}</h3>\n      <p className={buildClassName(styles.description, styles.centered)} dir=\"auto\">\n        {lang('ChatList.EmptyTopicsDescription')}\n      </p>\n      {canManageTopics && (\n        <Button\n          ripple={!isMobile}\n          fluid\n          onClick={handleCreateTopic}\n          size=\"smaller\"\n          isRtl={lang.isRtl}\n        >\n          <div className={styles.buttonText}>\n            {lang('ChatList.EmptyTopicsCreate')}\n          </div>\n        </Button>\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>((global, { chatId }): StateProps => {\n  const chat = selectChat(global, chatId);\n  const canManageTopics = chat && (chat.isCreator || getHasAdminRight(chat, 'manageTopics'));\n\n  return {\n    animatedEmoji: selectAnimatedEmoji(global, '🐣'),\n    canManageTopics,\n  };\n})(EmptyForum));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"Fn34Vu_9\",\"closed-icon\":\"MB7Gomjn\",\"closedIcon\":\"MB7Gomjn\",\"topic-icon\":\"oXJl4tra\",\"topicIcon\":\"oXJl4tra\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type {\n  ApiChat, ApiMessage, ApiMessageOutgoingStatus,\n  ApiPeer, ApiTopic, ApiTypingStatus,\n} from '../../../api/types';\nimport type { ApiDraft } from '../../../global/types';\nimport type { ObserveFn } from '../../../hooks/useIntersectionObserver';\nimport type { ChatAnimationTypes } from './hooks';\n\nimport { getMessageAction } from '../../../global/helpers';\nimport { getMessageReplyInfo } from '../../../global/helpers/replies';\nimport {\n  selectCanAnimateInterface,\n  selectCanDeleteTopic,\n  selectChat,\n  selectChatMessage,\n  selectCurrentMessageList,\n  selectDraft,\n  selectOutgoingStatus,\n  selectThreadInfo,\n  selectThreadParam,\n  selectTopics,\n  selectUser,\n} from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { createLocationHash } from '../../../util/routing';\nimport { IS_OPEN_IN_NEW_TAB_SUPPORTED } from '../../../util/windowEnvironment';\nimport renderText from '../../common/helpers/renderText';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useChatListEntry from './hooks/useChatListEntry';\nimport useTopicContextActions from './hooks/useTopicContextActions';\n\nimport LastMessageMeta from '../../common/LastMessageMeta';\nimport TopicIcon from '../../common/TopicIcon';\nimport ConfirmDialog from '../../ui/ConfirmDialog';\nimport ListItem from '../../ui/ListItem';\nimport MuteChatModal from '../MuteChatModal.async';\nimport ChatBadge from './ChatBadge';\n\nimport styles from './Topic.module.scss';\n\ntype OwnProps = {\n  chatId: string;\n  topic: ApiTopic;\n  isSelected: boolean;\n  style: string;\n  observeIntersection?: ObserveFn;\n  orderDiff: number;\n  animationType: ChatAnimationTypes;\n};\n\ntype StateProps = {\n  chat: ApiChat;\n  canDelete?: boolean;\n  lastMessage?: ApiMessage;\n  lastMessageOutgoingStatus?: ApiMessageOutgoingStatus;\n  actionTargetMessage?: ApiMessage;\n  actionTargetUserIds?: string[];\n  lastMessageSender?: ApiPeer;\n  actionTargetChatId?: string;\n  typingStatus?: ApiTypingStatus;\n  draft?: ApiDraft;\n  canScrollDown?: boolean;\n  wasTopicOpened?: boolean;\n  withInterfaceAnimations?: boolean;\n  topics?: Record<number, ApiTopic>;\n};\n\nconst Topic: FC<OwnProps & StateProps> = ({\n  topic,\n  isSelected,\n  chatId,\n  chat,\n  style,\n  lastMessage,\n  canScrollDown,\n  lastMessageOutgoingStatus,\n  observeIntersection,\n  canDelete,\n  actionTargetMessage,\n  actionTargetUserIds,\n  actionTargetChatId,\n  lastMessageSender,\n  animationType,\n  withInterfaceAnimations,\n  orderDiff,\n  typingStatus,\n  draft,\n  wasTopicOpened,\n  topics,\n}) => {\n  const {\n    openThread,\n    deleteTopic,\n    focusLastMessage,\n    setViewForumAsMessages,\n  } = getActions();\n\n  const lang = useOldLang();\n\n  const [isDeleteModalOpen, openDeleteModal, closeDeleteModal] = useFlag();\n  const [isMuteModalOpen, openMuteModal, closeMuteModal] = useFlag();\n  const [shouldRenderDeleteModal, markRenderDeleteModal, unmarkRenderDeleteModal] = useFlag();\n  const [shouldRenderMuteModal, markRenderMuteModal, unmarkRenderMuteModal] = useFlag();\n\n  const {\n    isPinned, isClosed,\n  } = topic;\n  const isMuted = topic.isMuted || (topic.isMuted === undefined && chat.isMuted);\n\n  const handleOpenDeleteModal = useLastCallback(() => {\n    markRenderDeleteModal();\n    openDeleteModal();\n  });\n\n  const handleDelete = useLastCallback(() => {\n    deleteTopic({ chatId: chat.id, topicId: topic.id });\n  });\n\n  const handleMute = useLastCallback(() => {\n    markRenderMuteModal();\n    openMuteModal();\n  });\n\n  const { renderSubtitle, ref } = useChatListEntry({\n    chat,\n    chatId,\n    lastMessage,\n    draft,\n    actionTargetMessage,\n    actionTargetUserIds,\n    actionTargetChatId,\n    lastMessageSender,\n    lastMessageTopic: topic,\n    observeIntersection,\n    isTopic: true,\n    typingStatus,\n    topics,\n\n    animationType,\n    withInterfaceAnimations,\n    orderDiff,\n  });\n\n  const handleOpenTopic = useLastCallback(() => {\n    openThread({ chatId, threadId: topic.id, shouldReplaceHistory: true });\n    setViewForumAsMessages({ chatId, isEnabled: false });\n\n    if (canScrollDown) {\n      focusLastMessage();\n    }\n  });\n\n  const contextActions = useTopicContextActions({\n    topic,\n    chat,\n    wasOpened: wasTopicOpened,\n    canDelete,\n    handleDelete: handleOpenDeleteModal,\n    handleMute,\n  });\n\n  return (\n    <ListItem\n      className={buildClassName(\n        styles.root,\n        'Chat',\n        isSelected && 'selected',\n        'chat-item-clickable',\n      )}\n      onClick={handleOpenTopic}\n      style={style}\n      href={IS_OPEN_IN_NEW_TAB_SUPPORTED ? `#${createLocationHash(chatId, 'thread', topic.id)}` : undefined}\n      contextActions={contextActions}\n      withPortalForMenu\n      ref={ref}\n    >\n      <div className=\"info\">\n        <div className=\"info-row\">\n          <div className={buildClassName('title')}>\n            <TopicIcon topic={topic} className={styles.topicIcon} observeIntersection={observeIntersection} />\n            <h3 dir=\"auto\" className=\"fullName\">{renderText(topic.title)}</h3>\n          </div>\n          {topic.isMuted && <i className=\"icon icon-muted\" />}\n          <div className=\"separator\" />\n          {isClosed && (\n            <i className={buildClassName(\n              'icon',\n              'icon-lock-badge',\n              styles.closedIcon,\n            )}\n            />\n          )}\n          {lastMessage && (\n            <LastMessageMeta\n              message={lastMessage}\n              outgoingStatus={lastMessageOutgoingStatus}\n            />\n          )}\n        </div>\n        <div className=\"subtitle\">\n          {renderSubtitle()}\n          <ChatBadge\n            chat={chat}\n            isPinned={isPinned}\n            isMuted={isMuted}\n            topic={topic}\n            wasTopicOpened={wasTopicOpened}\n            topics={topics}\n          />\n        </div>\n      </div>\n      {shouldRenderDeleteModal && (\n        <ConfirmDialog\n          isOpen={isDeleteModalOpen}\n          onClose={closeDeleteModal}\n          onCloseAnimationEnd={unmarkRenderDeleteModal}\n          confirmIsDestructive\n          confirmHandler={handleDelete}\n          text={lang('lng_forum_topic_delete_sure')}\n          confirmLabel={lang('Delete')}\n        />\n      )}\n      {shouldRenderMuteModal && (\n        <MuteChatModal\n          isOpen={isMuteModalOpen}\n          onClose={closeMuteModal}\n          onCloseAnimationEnd={unmarkRenderMuteModal}\n          chatId={chatId}\n          topicId={topic.id}\n        />\n      )}\n    </ListItem>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId, topic, isSelected }) => {\n    const chat = selectChat(global, chatId);\n\n    const lastMessage = selectChatMessage(global, chatId, topic.lastMessageId);\n    const { senderId, isOutgoing } = lastMessage || {};\n    const replyToMessageId = lastMessage && getMessageReplyInfo(lastMessage)?.replyToMsgId;\n    const lastMessageSender = senderId\n      ? (selectUser(global, senderId) || selectChat(global, senderId)) : undefined;\n    const lastMessageAction = lastMessage ? getMessageAction(lastMessage) : undefined;\n    const actionTargetMessage = lastMessageAction && replyToMessageId\n      ? selectChatMessage(global, chatId, replyToMessageId)\n      : undefined;\n    const { targetUserIds: actionTargetUserIds, targetChatId: actionTargetChatId } = lastMessageAction || {};\n    const typingStatus = selectThreadParam(global, chatId, topic.id, 'typingStatus');\n    const draft = selectDraft(global, chatId, topic.id);\n    const threadInfo = selectThreadInfo(global, chatId, topic.id);\n    const wasTopicOpened = Boolean(threadInfo?.lastReadInboxMessageId);\n    const topics = selectTopics(global, chatId);\n\n    const { chatId: currentChatId, threadId: currentThreadId } = selectCurrentMessageList(global) || {};\n\n    return {\n      chat,\n      lastMessage,\n      actionTargetUserIds,\n      actionTargetChatId,\n      actionTargetMessage,\n      lastMessageSender,\n      typingStatus,\n      canDelete: selectCanDeleteTopic(global, chatId, topic.id),\n      withInterfaceAnimations: selectCanAnimateInterface(global),\n      draft,\n      ...(isOutgoing && lastMessage && {\n        lastMessageOutgoingStatus: selectOutgoingStatus(global, lastMessage),\n      }),\n      canScrollDown: isSelected && chat?.id === currentChatId && currentThreadId === topic.id,\n      wasTopicOpened,\n      topics,\n    };\n  },\n)(Topic));\n","import { useMemo } from '../../../../lib/teact/teact';\nimport { getActions } from '../../../../global';\n\nimport type { ApiChat, ApiTopic } from '../../../../api/types';\nimport type { MenuItemContextAction } from '../../../ui/ListItem';\n\nimport { getCanManageTopic, getHasAdminRight } from '../../../../global/helpers';\nimport { compact } from '../../../../util/iteratees';\nimport { IS_OPEN_IN_NEW_TAB_SUPPORTED } from '../../../../util/windowEnvironment';\n\nimport useOldLang from '../../../../hooks/useOldLang';\n\nexport default function useTopicContextActions({\n  topic,\n  chat,\n  wasOpened,\n  canDelete,\n  handleDelete,\n  handleMute,\n}: {\n  topic: ApiTopic;\n  chat: ApiChat;\n  wasOpened?: boolean;\n  canDelete?: boolean;\n  handleDelete?: NoneToVoidFunction;\n  handleMute?: NoneToVoidFunction;\n}) {\n  const lang = useOldLang();\n\n  return useMemo(() => {\n    const {\n      isPinned, isMuted, isClosed, id: topicId,\n    } = topic;\n\n    const chatId = chat.id;\n\n    const {\n      editTopic,\n      toggleTopicPinned,\n      markTopicRead,\n      updateTopicMutedState,\n      openChatInNewTab,\n    } = getActions();\n\n    const canToggleClosed = getCanManageTopic(chat, topic);\n    const canTogglePinned = chat.isCreator || getHasAdminRight(chat, 'manageTopics');\n\n    const actionOpenInNewTab = IS_OPEN_IN_NEW_TAB_SUPPORTED && {\n      title: 'Open in new tab',\n      icon: 'open-in-new-tab',\n      handler: () => {\n        openChatInNewTab({ chatId: chat.id, threadId: topicId });\n      },\n    };\n\n    const actionUnreadMark = topic.unreadCount || !wasOpened\n      ? {\n        title: lang('MarkAsRead'),\n        icon: 'readchats',\n        handler: () => {\n          markTopicRead({ chatId, topicId });\n        },\n      }\n      : undefined;\n\n    const actionPin = canTogglePinned ? (isPinned\n      ? {\n        title: lang('UnpinFromTop'),\n        icon: 'unpin',\n        handler: () => toggleTopicPinned({ chatId, topicId, isPinned: false }),\n      }\n      : {\n        title: lang('PinToTop'),\n        icon: 'pin',\n        handler: () => toggleTopicPinned({ chatId, topicId, isPinned: true }),\n      }) : undefined;\n\n    const actionMute = ((chat.isMuted && isMuted !== false) || isMuted === true)\n      ? {\n        title: lang('ChatList.Unmute'),\n        icon: 'unmute',\n        handler: () => updateTopicMutedState({ chatId, topicId, isMuted: false }),\n      }\n      : {\n        title: `${lang('ChatList.Mute')}...`,\n        icon: 'mute',\n        handler: handleMute,\n      };\n\n    const actionCloseTopic = canToggleClosed ? (isClosed\n      ? {\n        title: lang('lng_forum_topic_reopen'),\n        icon: 'reopen-topic',\n        handler: () => editTopic({ chatId, topicId, isClosed: false }),\n      }\n      : {\n        title: lang('lng_forum_topic_close'),\n        icon: 'close-topic',\n        handler: () => editTopic({ chatId, topicId, isClosed: true }),\n      }) : undefined;\n\n    const actionDelete = canDelete ? {\n      title: lang('lng_forum_topic_delete'),\n      icon: 'delete',\n      destructive: true,\n      handler: handleDelete,\n    } : undefined;\n\n    return compact([\n      actionOpenInNewTab,\n      actionPin,\n      actionUnreadMark,\n      actionMute,\n      actionCloseTopic,\n      actionDelete,\n    ]) as MenuItemContextAction[];\n  }, [topic, chat, wasOpened, lang, canDelete, handleDelete, handleMute]);\n}\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  beginHeavyAnimation,\n  memo, useEffect, useMemo, useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiChat } from '../../../api/types';\nimport type { TopicsInfo } from '../../../global/types';\nimport { MAIN_THREAD_ID } from '../../../api/types';\n\nimport {\n  GENERAL_TOPIC_ID, TOPIC_HEIGHT_PX, TOPIC_LIST_SENSITIVE_AREA, TOPICS_SLICE,\n} from '../../../config';\nimport { requestNextMutation } from '../../../lib/fasterdom/fasterdom';\nimport { getOrderedTopics } from '../../../global/helpers';\nimport {\n  selectCanAnimateInterface,\n  selectChat,\n  selectCurrentMessageList,\n  selectIsForumPanelOpen,\n  selectTabState,\n  selectTopicsInfo,\n} from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport captureEscKeyListener from '../../../util/captureEscKeyListener';\nimport { captureEvents, SwipeDirection } from '../../../util/captureEvents';\nimport { waitForTransitionEnd } from '../../../util/cssAnimationEndListeners';\nimport { IS_TOUCH_ENV } from '../../../util/windowEnvironment';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useInfiniteScroll from '../../../hooks/useInfiniteScroll';\nimport { useIntersectionObserver, useOnIntersect } from '../../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\nimport usePreviousDeprecated from '../../../hooks/usePreviousDeprecated';\nimport useOrderDiff from './hooks/useOrderDiff';\n\nimport GroupCallTopPane from '../../calls/group/GroupCallTopPane';\nimport GroupChatInfo from '../../common/GroupChatInfo';\nimport HeaderActions from '../../middle/HeaderActions';\nimport Button from '../../ui/Button';\nimport InfiniteScroll from '../../ui/InfiniteScroll';\nimport Loading from '../../ui/Loading';\nimport EmptyForum from './EmptyForum';\nimport Topic from './Topic';\n\nimport styles from './ForumPanel.module.scss';\n\ntype OwnProps = {\n  isOpen?: boolean;\n  isHidden?: boolean;\n  onTopicSearch?: NoneToVoidFunction;\n  onCloseAnimationEnd?: VoidFunction;\n  onOpenAnimationStart?: VoidFunction;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  topicsInfo?: TopicsInfo;\n  currentTopicId?: number;\n  withInterfaceAnimations?: boolean;\n};\n\nconst INTERSECTION_THROTTLE = 200;\n\nconst ForumPanel: FC<OwnProps & StateProps> = ({\n  chat,\n  currentTopicId,\n  isOpen,\n  isHidden,\n  topicsInfo,\n  onTopicSearch,\n  onCloseAnimationEnd,\n  onOpenAnimationStart,\n  withInterfaceAnimations,\n}) => {\n  const {\n    closeForumPanel, openChatWithInfo, loadTopics,\n  } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const scrollTopHandlerRef = useRef<HTMLDivElement>(null);\n  const { isMobile } = useAppLayout();\n  const chatId = chat?.id;\n\n  useEffect(() => {\n    if (chatId && !topicsInfo) {\n      loadTopics({ chatId });\n    }\n  }, [topicsInfo, chatId]);\n\n  const [isScrolled, setIsScrolled] = useState(false);\n  const lang = useOldLang();\n\n  const handleClose = useLastCallback(() => {\n    closeForumPanel();\n  });\n\n  useEffect(() => {\n    if (!withInterfaceAnimations && !isOpen) {\n      onCloseAnimationEnd?.();\n    }\n  }, [withInterfaceAnimations, isOpen, onCloseAnimationEnd]);\n\n  const handleToggleChatInfo = useLastCallback(() => {\n    if (!chat) return;\n    openChatWithInfo({ id: chat.id, shouldReplaceHistory: true });\n  });\n\n  const { observe } = useIntersectionObserver({\n    rootRef: containerRef,\n    throttleMs: INTERSECTION_THROTTLE,\n  });\n\n  useOnIntersect(scrollTopHandlerRef, observe, ({ isIntersecting }) => {\n    setIsScrolled(!isIntersecting);\n  });\n\n  const orderedIds = useMemo(() => {\n    return topicsInfo\n      ? getOrderedTopics(\n        Object.values(topicsInfo.topicsById),\n        topicsInfo.orderedPinnedTopicIds,\n      ).map(({ id }) => id)\n      : [];\n  }, [topicsInfo]);\n\n  const { orderDiffById, getAnimationType } = useOrderDiff(orderedIds, chat?.id);\n\n  const [viewportIds, getMore] = useInfiniteScroll(() => {\n    if (!chat) return;\n    loadTopics({ chatId: chat.id });\n  }, orderedIds, !topicsInfo?.totalCount || orderedIds.length >= topicsInfo.totalCount, TOPICS_SLICE);\n\n  const shouldRenderRef = useRef(false);\n  const isVisible = isOpen && !isHidden;\n  const prevIsVisible = usePreviousDeprecated(isVisible);\n\n  if (prevIsVisible !== isVisible) {\n    shouldRenderRef.current = false;\n  }\n\n  useHistoryBack({\n    isActive: isVisible,\n    onBack: handleClose,\n  });\n\n  useEffect(() => (isVisible ? captureEscKeyListener(handleClose) : undefined), [handleClose, isVisible]);\n\n  useEffect(() => {\n    if (prevIsVisible !== isVisible) {\n      // For performance reasons, we delay animation of the topic list panel to the next animation frame\n      requestNextMutation(() => {\n        if (!ref.current) return;\n\n        const endHeavyAnimation = beginHeavyAnimation();\n        waitForTransitionEnd(ref.current, endHeavyAnimation);\n\n        onOpenAnimationStart?.();\n\n        if (isVisible) {\n          shouldRenderRef.current = true;\n          ref.current!.style.transform = 'none';\n        } else {\n          shouldRenderRef.current = false;\n          ref.current!.style.transform = '';\n        }\n      });\n    }\n  }, [isVisible, onOpenAnimationStart, prevIsVisible]);\n\n  useEffect(() => {\n    if (!IS_TOUCH_ENV) {\n      return undefined;\n    }\n\n    return captureEvents(ref.current!, {\n      selectorToPreventScroll: '.chat-list',\n      onSwipe: ((e, direction) => {\n        const closeDirection = lang.isRtl ? SwipeDirection.Left : SwipeDirection.Right;\n\n        if (direction === closeDirection) {\n          closeForumPanel();\n          return true;\n        }\n\n        return false;\n      }),\n    });\n  }, [closeForumPanel, lang.isRtl]);\n\n  function renderTopics() {\n    const viewportOffset = orderedIds!.indexOf(viewportIds![0]);\n\n    return viewportIds?.map((id, i) => (\n      <Topic\n        key={id}\n        chatId={chat!.id}\n        topic={topicsInfo!.topicsById[id]}\n        style={`top: ${(viewportOffset + i) * TOPIC_HEIGHT_PX}px;`}\n        isSelected={currentTopicId === id}\n        observeIntersection={observe}\n        animationType={getAnimationType(id)}\n        orderDiff={orderDiffById[id]}\n      />\n    ));\n  }\n\n  const isLoading = topicsInfo === undefined;\n\n  return (\n    <div\n      ref={ref}\n      className={buildClassName(\n        styles.root,\n        isScrolled && styles.scrolled,\n        lang.isRtl && styles.rtl,\n        !withInterfaceAnimations && styles.noAnimation,\n      )}\n      onTransitionEnd={!isOpen ? onCloseAnimationEnd : undefined}\n    >\n      <div id=\"TopicListHeader\" className=\"left-header\">\n        <Button\n          round\n          size=\"smaller\"\n          color=\"translucent\"\n          onClick={handleClose}\n          ariaLabel={lang('Close')}\n        >\n          <i className=\"icon icon-close\" />\n        </Button>\n\n        {chat && (\n          <GroupChatInfo\n            noAvatar\n            className={styles.info}\n            chatId={chat.id}\n            onClick={handleToggleChatInfo}\n          />\n        )}\n\n        {chat\n          && (\n            <HeaderActions\n              chatId={chat.id}\n              threadId={MAIN_THREAD_ID}\n              messageListType=\"thread\"\n              canExpandActions={false}\n              isForForum\n              isMobile={isMobile}\n              onTopicSearch={onTopicSearch}\n            />\n          )}\n      </div>\n\n      {chat && <GroupCallTopPane chatId={chat.id} hasPinnedOffset={false} className={styles.groupCall} />}\n\n      <div className={styles.notch} />\n\n      <InfiniteScroll\n        className=\"chat-list custom-scroll\"\n        ref={containerRef}\n        items={viewportIds}\n        preloadBackwards={TOPICS_SLICE}\n        withAbsolutePositioning\n        maxHeight={(orderedIds?.length || 0) * TOPIC_HEIGHT_PX}\n        onLoadMore={getMore}\n        sensitiveArea={TOPIC_LIST_SENSITIVE_AREA}\n        beforeChildren={<div ref={scrollTopHandlerRef} className={styles.scrollTopHandler} />}\n      >\n        {Boolean(viewportIds?.length) && (\n          renderTopics()\n        )}\n        {isLoading && !viewportIds?.length && (\n          <Loading key=\"loading\" />\n        )}\n      </InfiniteScroll>\n      {!isLoading && viewportIds?.length === 1 && viewportIds[0] === GENERAL_TOPIC_ID && (\n        <EmptyForum chatId={chatId!} />\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const chatId = selectTabState(global).forumPanelChatId;\n    const chat = chatId ? selectChat(global, chatId) : undefined;\n    const {\n      chatId: currentChatId,\n      threadId: currentThreadId,\n    } = selectCurrentMessageList(global) || {};\n    const topicsInfo = chatId ? selectTopicsInfo(global, chatId) : undefined;\n\n    return {\n      chat,\n      currentTopicId: chatId === currentChatId ? Number(currentThreadId) : undefined,\n      withInterfaceAnimations: selectCanAnimateInterface(global),\n      topicsInfo,\n    };\n  },\n  (global) => selectIsForumPanelOpen(global),\n)(ForumPanel));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"MlF2n1nb\",\"rtl\":\"Xs2y1fCE\",\"no-animation\":\"kmDMv6D8\",\"noAnimation\":\"kmDMv6D8\",\"group-call\":\"wUpRjGJ2\",\"groupCall\":\"wUpRjGJ2\",\"notch\":\"hGeb3TQJ\",\"scrolled\":\"SZ24u3cn\",\"scroll-top-handler\":\"ERz3fcar\",\"scrollTopHandler\":\"ERz3fcar\",\"info\":\"Sf633zAP\"};","import { useMemo } from '../../../../lib/teact/teact';\n\nexport enum ChatAnimationTypes {\n  Move,\n  Opacity,\n  None,\n}\n\nexport function useChatAnimationType<T extends number | string>(orderDiffById: Record<T, number>) {\n  return useMemo(() => {\n    const orderDiffs = Object.values(orderDiffById) as number[];\n    const numberOfUp = orderDiffs.filter((diff) => diff < 0).length;\n    const numberOfDown = orderDiffs.filter((diff) => diff > 0).length;\n\n    return (chatId: T): ChatAnimationTypes => {\n      const orderDiff = orderDiffById[chatId];\n      if (orderDiff === 0) {\n        return ChatAnimationTypes.None;\n      }\n\n      if (\n        orderDiff === Infinity\n        || orderDiff === -Infinity\n        || (numberOfUp <= numberOfDown && orderDiff < 0)\n        || (numberOfDown < numberOfUp && orderDiff > 0)\n      ) {\n        return ChatAnimationTypes.Opacity;\n      }\n\n      return ChatAnimationTypes.Move;\n    };\n  }, [orderDiffById]);\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"Ow6Ij9O5\",\"title-row\":\"CBda1UmC\",\"titleRow\":\"CBda1UmC\",\"loading\":\"L4Zk0yMN\",\"other-column\":\"d0hTIVJn\",\"otherColumn\":\"d0hTIVJn\",\"main-column\":\"lEbV6HrI\",\"mainColumn\":\"lEbV6HrI\",\"unread\":\"BhS75ocD\",\"last-message\":\"KJ16dBus\",\"lastMessage\":\"KJ16dBus\",\"after-wrapper\":\"uWo2dhui\",\"afterWrapper\":\"uWo2dhui\",\"after\":\"g3XnC73g\",\"title\":\"k3Ch25ZQ\",\"otherColumnIcon\":\"oknhG11L\",\"other-column-title\":\"ZUj3xAjs\",\"otherColumnTitle\":\"ZUj3xAjs\",\"other-columns\":\"IkuCBmvA\",\"otherColumns\":\"IkuCBmvA\",\"ellipsis\":\"_m_2xcPW\",\"reverse-corner\":\"U_yhhC0w\",\"reverseCorner\":\"U_yhhC0w\",\"overwritten-width\":\"HV0wCR4O\",\"overwrittenWidth\":\"HV0wCR4O\"};","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo,\n  useEffect,\n  useMemo,\n  useRef,\n  useState,\n} from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport type { ApiChat, ApiTopic } from '../../api/types';\nimport type { ObserveFn } from '../../hooks/useIntersectionObserver';\n\nimport { getOrderedTopics } from '../../global/helpers';\nimport buildClassName from '../../util/buildClassName';\nimport { REM } from './helpers/mediaDimensions';\nimport renderText from './helpers/renderText';\n\nimport { getIsMobile } from '../../hooks/useAppLayout';\nimport { useFastClick } from '../../hooks/useFastClick';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport TopicIcon from './TopicIcon';\n\nimport styles from './ChatForumLastMessage.module.scss';\n\ntype OwnProps = {\n  chat: ApiChat;\n  topics?: Record<number, ApiTopic>;\n  renderLastMessage: () => React.ReactNode;\n  observeIntersection?: ObserveFn;\n};\n\nconst NO_CORNER_THRESHOLD = Number(REM);\nconst MAX_TOPICS = 3;\n\nconst ChatForumLastMessage: FC<OwnProps> = ({\n  chat,\n  topics,\n  renderLastMessage,\n  observeIntersection,\n}) => {\n  const { openThread } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const lastMessageRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const mainColumnRef = useRef<HTMLDivElement>(null);\n\n  const lang = useOldLang();\n\n  const [lastActiveTopic, ...otherTopics] = useMemo(() => {\n    if (!topics) {\n      return [];\n    }\n\n    return getOrderedTopics(Object.values(topics), undefined, true).slice(0, MAX_TOPICS);\n  }, [topics]);\n\n  const [isReversedCorner, setIsReversedCorner] = useState(false);\n  const [overwrittenWidth, setOverwrittenWidth] = useState<number | undefined>(undefined);\n\n  const {\n    handleClick: handleOpenTopicClick,\n    handleMouseDown: handleOpenTopicMouseDown,\n  } = useFastClick((e: React.MouseEvent<HTMLDivElement>) => {\n    if (lastActiveTopic.unreadCount === 0 || chat.isForumAsMessages) return;\n\n    e.stopPropagation();\n    e.preventDefault();\n\n    openThread({\n      chatId: chat.id,\n      threadId: lastActiveTopic.id,\n      shouldReplaceHistory: true,\n      noForumTopicPanel: getIsMobile(),\n    });\n  });\n\n  useEffect(() => {\n    const lastMessageElement = lastMessageRef.current;\n    const mainColumnElement = mainColumnRef.current;\n    if (!lastMessageElement || !mainColumnElement) return;\n\n    const lastMessageWidth = lastMessageElement.offsetWidth;\n    const mainColumnWidth = mainColumnElement.offsetWidth;\n\n    if (Math.abs(lastMessageWidth - mainColumnWidth) < NO_CORNER_THRESHOLD) {\n      setOverwrittenWidth(Math.max(lastMessageWidth, mainColumnWidth));\n    } else {\n      setOverwrittenWidth(undefined);\n    }\n    setIsReversedCorner(lastMessageWidth > mainColumnWidth);\n  }, [lastActiveTopic, renderLastMessage]);\n\n  return (\n    <div\n      className={buildClassName(\n        styles.root,\n        isReversedCorner && styles.reverseCorner,\n        overwrittenWidth && styles.overwrittenWidth,\n      )}\n      dir={lang.isRtl ? 'rtl' : undefined}\n      style={overwrittenWidth ? `--overwritten-width: ${overwrittenWidth}px` : undefined}\n    >\n      {lastActiveTopic && (\n        <div className={styles.titleRow}>\n          <div\n            className={buildClassName(\n              styles.mainColumn,\n              lastActiveTopic.unreadCount && styles.unread,\n            )}\n            ref={mainColumnRef}\n            onClick={handleOpenTopicClick}\n            onMouseDown={handleOpenTopicMouseDown}\n          >\n            <TopicIcon\n              topic={lastActiveTopic}\n              observeIntersection={observeIntersection}\n            />\n            <div className={styles.title}>{renderText(lastActiveTopic.title)}</div>\n            {!overwrittenWidth && isReversedCorner && (\n              <div className={styles.afterWrapper}>\n                <div className={styles.after} />\n              </div>\n            )}\n          </div>\n\n          <div className={styles.otherColumns}>\n            {otherTopics.map((topic) => (\n              <div\n                className={buildClassName(\n                  styles.otherColumn, topic.unreadCount && styles.unread,\n                )}\n                key={topic.id}\n              >\n                <TopicIcon\n                  topic={topic}\n                  className={styles.otherColumnIcon}\n                  observeIntersection={observeIntersection}\n                />\n                <span className={styles.otherColumnTitle}>{renderText(topic.title)}</span>\n              </div>\n            ))}\n          </div>\n\n          <div className={styles.ellipsis} />\n        </div>\n      )}\n      {!lastActiveTopic && <div className={buildClassName(styles.titleRow, styles.loading)}>{lang('Loading')}</div>}\n      <div\n        className={buildClassName(styles.lastMessage, lastActiveTopic?.unreadCount && styles.unread)}\n        ref={lastMessageRef}\n        onClick={handleOpenTopicClick}\n        onMouseDown={handleOpenTopicMouseDown}\n      >\n        {renderLastMessage()}\n        {!overwrittenWidth && !isReversedCorner && (\n          <div className={styles.afterWrapper}>\n            <div className={styles.after} />\n          </div>\n        )}\n      </div>\n\n    </div>\n  );\n};\n\nexport default memo(ChatForumLastMessage);\n","import React, {\n  useCallback, useLayoutEffect, useMemo, useRef,\n} from '../../../../lib/teact/teact';\nimport { getGlobal } from '../../../../global';\n\nimport type {\n  ApiChat, ApiMessage, ApiPeer, ApiTopic, ApiTypingStatus, ApiUser,\n} from '../../../../api/types';\nimport type { ApiDraft } from '../../../../global/types';\nimport type { ObserveFn } from '../../../../hooks/useIntersectionObserver';\n\nimport { ANIMATION_END_DELAY, CHAT_HEIGHT_PX } from '../../../../config';\nimport { requestMutation } from '../../../../lib/fasterdom/fasterdom';\nimport {\n  getExpiredMessageDescription,\n  getMessageIsSpoiler,\n  getMessageMediaHash,\n  getMessageMediaThumbDataUri,\n  getMessageRoundVideo,\n  getMessageSenderName,\n  getMessageSticker,\n  getMessageVideo,\n  isActionMessage,\n  isChatChannel,\n  isExpiredMessage,\n} from '../../../../global/helpers';\nimport { getMessageReplyInfo } from '../../../../global/helpers/replies';\nimport buildClassName from '../../../../util/buildClassName';\nimport { renderActionMessageText } from '../../../common/helpers/renderActionMessageText';\nimport renderText from '../../../common/helpers/renderText';\nimport { renderTextWithEntities } from '../../../common/helpers/renderTextWithEntities';\nimport { ChatAnimationTypes } from './useChatAnimationType';\n\nimport useEnsureMessage from '../../../../hooks/useEnsureMessage';\nimport useMedia from '../../../../hooks/useMedia';\nimport useOldLang from '../../../../hooks/useOldLang';\n\nimport ChatForumLastMessage from '../../../common/ChatForumLastMessage';\nimport MessageSummary from '../../../common/MessageSummary';\nimport TypingStatus from '../../../common/TypingStatus';\n\nconst ANIMATION_DURATION = 200;\n\nexport default function useChatListEntry({\n  chat,\n  topics,\n  lastMessage,\n  chatId,\n  typingStatus,\n  draft,\n  actionTargetMessage,\n  actionTargetUserIds,\n  lastMessageTopic,\n  lastMessageSender,\n  actionTargetChatId,\n  observeIntersection,\n  animationType,\n  orderDiff,\n  withInterfaceAnimations,\n  isTopic,\n  isSavedDialog,\n  isPreview,\n}: {\n  chat?: ApiChat;\n  topics?: Record<number, ApiTopic>;\n  lastMessage?: ApiMessage;\n  chatId: string;\n  typingStatus?: ApiTypingStatus;\n  draft?: ApiDraft;\n  actionTargetMessage?: ApiMessage;\n  actionTargetUserIds?: string[];\n  lastMessageTopic?: ApiTopic;\n  lastMessageSender?: ApiPeer;\n  actionTargetChatId?: string;\n  observeIntersection?: ObserveFn;\n  isTopic?: boolean;\n  isSavedDialog?: boolean;\n  isPreview?: boolean;\n\n  animationType: ChatAnimationTypes;\n  orderDiff: number;\n  withInterfaceAnimations?: boolean;\n}) {\n  const lang = useOldLang();\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n\n  const isAction = lastMessage && isActionMessage(lastMessage);\n\n  const replyToMessageId = lastMessage && getMessageReplyInfo(lastMessage)?.replyToMsgId;\n  useEnsureMessage(chatId, isAction ? replyToMessageId : undefined, actionTargetMessage);\n\n  const mediaHasPreview = lastMessage && !getMessageSticker(lastMessage);\n\n  const mediaThumbnail = mediaHasPreview ? getMessageMediaThumbDataUri(lastMessage) : undefined;\n  const mediaBlobUrl = useMedia(mediaHasPreview ? getMessageMediaHash(lastMessage, 'micro') : undefined);\n  const isRoundVideo = Boolean(lastMessage && getMessageRoundVideo(lastMessage));\n\n  const actionTargetUsers = useMemo(() => {\n    if (!actionTargetUserIds) {\n      return undefined;\n    }\n\n    // No need for expensive global updates on users, so we avoid them\n    const usersById = getGlobal().users.byId;\n    return actionTargetUserIds.map((userId) => usersById[userId]).filter(Boolean);\n  }, [actionTargetUserIds]);\n\n  const renderLastMessageOrTyping = useCallback(() => {\n    if (!isSavedDialog && !isPreview\n        && typingStatus && lastMessage && typingStatus.timestamp > lastMessage.date * 1000) {\n      return <TypingStatus typingStatus={typingStatus} />;\n    }\n\n    const isDraftReplyToTopic = draft && draft.replyInfo?.replyToMsgId === lastMessageTopic?.id;\n    const isEmptyLocalReply = draft?.replyInfo && !draft.text && draft.isLocal;\n\n    const canDisplayDraft = !chat?.isForum && !isSavedDialog && !isPreview && draft && !isEmptyLocalReply\n      && (!isTopic || !isDraftReplyToTopic);\n\n    if (canDisplayDraft) {\n      return (\n        <p className=\"last-message\" dir={lang.isRtl ? 'auto' : 'ltr'}>\n          <span className=\"draft\">{lang('Draft')}</span>\n          {renderTextWithEntities({\n            text: draft.text?.text || '',\n            entities: draft.text?.entities,\n            isSimple: true,\n            withTranslucentThumbs: true,\n          })}\n        </p>\n      );\n    }\n\n    if (!lastMessage) {\n      return undefined;\n    }\n\n    if (isExpiredMessage(lastMessage)) {\n      return (\n        <p className=\"last-message shared-canvas-container\" dir={lang.isRtl ? 'auto' : 'ltr'}>\n          {getExpiredMessageDescription(lang, lastMessage)}\n        </p>\n      );\n    }\n\n    if (isAction) {\n      const isChat = chat && (isChatChannel(chat) || lastMessage.senderId === lastMessage.chatId);\n\n      return (\n        <p className=\"last-message shared-canvas-container\" dir={lang.isRtl ? 'auto' : 'ltr'}>\n          {renderActionMessageText(\n            lang,\n            lastMessage,\n            !isChat ? lastMessageSender as ApiUser : undefined,\n            isChat ? chat : undefined,\n            actionTargetUsers,\n            actionTargetMessage,\n            actionTargetChatId,\n            lastMessageTopic,\n            { isEmbedded: true },\n            undefined,\n            undefined,\n          )}\n        </p>\n      );\n    }\n\n    const senderName = getMessageSenderName(lang, chatId, lastMessageSender);\n\n    return (\n      <p className=\"last-message shared-canvas-container\" dir={lang.isRtl ? 'auto' : 'ltr'}>\n        {senderName && (\n          <>\n            <span className=\"sender-name\">{renderText(senderName)}</span>\n            <span className=\"colon\">:</span>\n          </>\n        )}\n        {!isSavedDialog && lastMessage.forwardInfo && (<i className=\"icon icon-share-filled chat-prefix-icon\" />)}\n        {lastMessage.replyInfo?.type === 'story' && (<i className=\"icon icon-story-reply chat-prefix-icon\" />)}\n        {renderSummary(lastMessage, observeIntersection, mediaBlobUrl || mediaThumbnail, isRoundVideo)}\n      </p>\n    );\n  }, [\n    actionTargetChatId, actionTargetMessage, actionTargetUsers, chat, chatId, draft, isAction,\n    isRoundVideo, isTopic, lang, lastMessage, lastMessageSender, lastMessageTopic, mediaBlobUrl, mediaThumbnail,\n    observeIntersection, typingStatus, isSavedDialog, isPreview,\n  ]);\n\n  function renderSubtitle() {\n    if (chat?.isForum && !isTopic) {\n      return (\n        <ChatForumLastMessage\n          chat={chat}\n          renderLastMessage={renderLastMessageOrTyping}\n          observeIntersection={observeIntersection}\n          topics={topics}\n        />\n      );\n    }\n\n    return renderLastMessageOrTyping();\n  }\n\n  // Sets animation excess values when `orderDiff` changes and then resets excess values to animate\n  useLayoutEffect(() => {\n    const element = ref.current;\n\n    if (!withInterfaceAnimations || !element) {\n      return;\n    }\n\n    // TODO Refactor animation: create `useListAnimation` that owns `orderDiff` and `animationType`\n    if (animationType === ChatAnimationTypes.Opacity) {\n      element.style.opacity = '0';\n\n      requestMutation(() => {\n        element.classList.add('animate-opacity');\n        element.style.opacity = '1';\n      });\n    } else if (animationType === ChatAnimationTypes.Move) {\n      element.style.transform = `translate3d(0, ${-orderDiff * CHAT_HEIGHT_PX}px, 0)`;\n\n      requestMutation(() => {\n        element.classList.add('animate-transform');\n        element.style.transform = '';\n      });\n    } else {\n      return;\n    }\n\n    setTimeout(() => {\n      requestMutation(() => {\n        element.classList.remove('animate-opacity', 'animate-transform');\n        element.style.opacity = '';\n        element.style.transform = '';\n      });\n    }, ANIMATION_DURATION + ANIMATION_END_DELAY);\n  }, [withInterfaceAnimations, orderDiff, animationType]);\n\n  return {\n    renderSubtitle,\n    ref,\n  };\n}\n\nfunction renderSummary(\n  message: ApiMessage, observeIntersection?: ObserveFn, blobUrl?: string, isRoundVideo?: boolean,\n) {\n  const messageSummary = (\n    <MessageSummary\n      message={message}\n      noEmoji={Boolean(blobUrl)}\n      observeIntersectionForLoading={observeIntersection}\n      inChatList\n    />\n  );\n\n  if (!blobUrl) {\n    return messageSummary;\n  }\n\n  const isSpoiler = getMessageIsSpoiler(message);\n\n  return (\n    <span className=\"media-preview\">\n      <img\n        src={blobUrl}\n        alt=\"\"\n        className={\n          buildClassName('media-preview--image', isRoundVideo && 'round', isSpoiler && 'media-preview-spoiler')\n        }\n        draggable={false}\n      />\n      {getMessageVideo(message) && <i className=\"icon icon-play\" />}\n      {messageSummary}\n    </span>\n  );\n}\n","import { useRef } from '../../../../lib/teact/teact';\n\nimport useForceUpdate from '../../../../hooks/useForceUpdate';\nimport usePreviousDeprecated from '../../../../hooks/usePreviousDeprecated';\n\nexport default function useLeftHeaderButtonRtlForumTransition(shouldHideSearch?: boolean) {\n  const forceUpdate = useForceUpdate();\n  const shouldDisableDropdownMenuTransitionRef = useRef(shouldHideSearch);\n  const prevShouldHideSearch = usePreviousDeprecated(shouldHideSearch);\n\n  function handleDropdownMenuTransitionEnd() {\n    shouldDisableDropdownMenuTransitionRef.current = Boolean(shouldHideSearch);\n    forceUpdate();\n  }\n\n  if (shouldHideSearch === false && prevShouldHideSearch !== shouldHideSearch) {\n    shouldDisableDropdownMenuTransitionRef.current = false;\n  }\n\n  return { shouldDisableDropdownMenuTransitionRef, handleDropdownMenuTransitionEnd };\n}\n","import { useMemo } from '../../../../lib/teact/teact';\n\nimport { mapValues } from '../../../../util/iteratees';\nimport { useChatAnimationType } from './useChatAnimationType';\n\nimport usePreviousDeprecated from '../../../../hooks/usePreviousDeprecated';\n\nexport default function useOrderDiff(orderedIds: (string | number)[] | undefined, key?: string) {\n  const orderById = useMemo(() => {\n    if (!orderedIds) {\n      return undefined;\n    }\n\n    return orderedIds.reduce((acc, id, i) => {\n      acc[id] = i;\n      return acc;\n    }, {} as Record<string, number>);\n  }, [orderedIds]);\n\n  const prevOrderById = usePreviousDeprecated(orderById);\n  const prevChatId = usePreviousDeprecated(key);\n\n  const orderDiffById = useMemo(() => {\n    if (!orderById || !prevOrderById || key !== prevChatId) {\n      return {};\n    }\n\n    return mapValues(orderById, (order, id) => {\n      return prevOrderById[id] !== undefined ? order - prevOrderById[id] : -Infinity;\n    });\n  }, [key, orderById, prevChatId, prevOrderById]);\n\n  const getAnimationType = useChatAnimationType(orderDiffById);\n\n  return {\n    orderDiffById,\n    getAnimationType,\n  };\n}\n","import type { ApiChat, ApiMessage, ApiUser } from '../../../../api/types';\nimport type { LangFn } from '../../../../hooks/useOldLang';\n\nimport {\n  getChatTitle,\n  getSenderTitle,\n  isChatGroup,\n  isUserId,\n} from '../../../../global/helpers';\n\nexport function getSenderName(\n  lang: LangFn, message: ApiMessage, chatsById: Record<string, ApiChat>, usersById: Record<string, ApiUser>,\n) {\n  const { senderId } = message;\n  if (!senderId) {\n    return undefined;\n  }\n\n  const sender = isUserId(senderId) ? usersById[senderId] : chatsById[senderId];\n\n  let senderName = getSenderTitle(lang, sender);\n\n  const chat = chatsById[message.chatId];\n  if (chat) {\n    if ('isSelf' in sender && sender.isSelf) {\n      senderName = `${lang('FromYou')} → ${getChatTitle(lang, chat)}`;\n    } else if (isChatGroup(chat)) {\n      senderName += ` → ${getChatTitle(lang, chat)}`;\n    }\n  }\n\n  return senderName;\n}\n","import { useCallback, useEffect, useState } from 'react';\r\n\r\nimport type { Workspace } from '../types';\r\n\r\nexport function useStorage() {\r\n  const [savedWorkspaces, setSavedWorkspaces] = useLocalStorage<Workspace[]>({\r\n    key: \"workspaces\",\r\n    initValue: [],\r\n  });\r\n  const [\r\n    currentWorkspaceId,\r\n    setCurrentWorkspaceId,\r\n  ] = useLocalStorage<string>({\r\n    key: \"currentWorkspaceId\",\r\n    initValue: \"0\",\r\n  });\r\n\r\n  return {\r\n    savedWorkspaces,\r\n    setSavedWorkspaces,\r\n    currentWorkspaceId,\r\n    setCurrentWorkspaceId,\r\n  };\r\n}\r\n\r\ntype UseLocalStorageProps<T> = {\r\n  key: string;\r\n  initValue: T;\r\n};\r\n\r\nfunction useLocalStorage<T>({ key, initValue }: UseLocalStorageProps<T>):\r\n[value: T, setValue: (val: T) => void] {\r\n  const eventName = `update_storage_${key}`;\r\n\r\n  const getStoredValue: () => (T | undefined) = useCallback(() => {\r\n    const value = localStorage.getItem(key);\r\n    if (value !== null) {\r\n      try {\r\n        return JSON.parse(value);\r\n      } catch (e) {\r\n        console.error((e as Error).message);\r\n      }\r\n    }\r\n    return undefined;\r\n  }, [key]);\r\n\r\n  const writeValue: (value: T) => void = useCallback((value) => {\r\n    const stringifiedValue = JSON.stringify(value);\r\n    if (localStorage.getItem(key) !== stringifiedValue) {\r\n      localStorage.setItem(key, stringifiedValue);\r\n      window.dispatchEvent(new Event(eventName));\r\n    }\r\n  }, [eventName, key]);\r\n\r\n  const restoreValue: () => T = useCallback(() => {\r\n    const storedValue = getStoredValue();\r\n    if (storedValue !== undefined) {\r\n      return storedValue;\r\n    } else {\r\n      writeValue(initValue);\r\n      return initValue;\r\n    }\r\n  }, [getStoredValue, writeValue, initValue]);\r\n\r\n  const [state, setState] = useState<T>(restoreValue());\r\n\r\n  useEffect(() => {\r\n    const listenStorageChange = () => {\r\n      setState(restoreValue());\r\n    };\r\n    window.addEventListener(eventName, listenStorageChange);\r\n    return () => window.removeEventListener(eventName, listenStorageChange);\r\n  }, [eventName, restoreValue]);\r\n\r\n  const setStateSafe = (value: T) => {\r\n    try {\r\n      writeValue(value);\r\n    } catch (e) {\r\n      console.error((e as Error).message);\r\n    }\r\n  };\r\n\r\n  return [state, setStateSafe];\r\n}\r\n","import type { FC } from 'react';\r\nimport React, { useState, useCallback, useEffect } from 'react';\r\nimport { getGlobal, getActions } from '../../../global';\r\nimport styles from './WorkspaceSettingsPage.module.scss';\r\n\r\nimport { useStorage } from '../../../hooks/useStorage.react';\r\nimport { Workspace } from '../../../types';\r\n\r\ninterface OwnProps {\r\n  onBack: () => void;\r\n  workspaceId?: string;\r\n}\r\n\r\nconst WorkspaceSettingsPage: FC<OwnProps> = ({\r\n  onBack,\r\n  workspaceId,\r\n}) => {\r\n  const global = getGlobal();\r\n  const { setActiveChatFolder } = getActions();\r\n  const chatFoldersById = global.chatFolders.byId;\r\n  const orderedFolderIds = global.chatFolders.orderedIds;\r\n  const folders = orderedFolderIds ? orderedFolderIds.map((id) => chatFoldersById[id]).filter(Boolean) : [];\r\n\r\n  const [workspaceName, setWorkspaceName] = useState('');\r\n  const [selectedFolderIds, setSelectedFolderIds] = useState<number[]>([]);\r\n  const { savedWorkspaces, setSavedWorkspaces, setCurrentWorkspaceId } = useStorage();\r\n\r\n  useEffect(() => {\r\n    if (workspaceId) {\r\n      const workspace = savedWorkspaces.find(w => w.id === workspaceId);\r\n      if (workspace) {\r\n        setWorkspaceName(workspace.name);\r\n        setSelectedFolderIds(workspace.foldersIds || []);\r\n      }\r\n    }\r\n  }, [workspaceId, savedWorkspaces]);\r\n\r\n  const isFormValid = selectedFolderIds.length > 0 && workspaceName.trim() !== '';\r\n\r\n  const handleSubmit = useCallback((e: React.FormEvent) => {\r\n    e.preventDefault();\r\n    const trimmedName = workspaceName.trim();\r\n    if (isFormValid) {\r\n      if (workspaceId) {\r\n        setSavedWorkspaces(\r\n          savedWorkspaces.map(w =>\r\n            w.id === workspaceId ? { ...w, name: trimmedName, foldersIds: selectedFolderIds } : w\r\n          )\r\n        );\r\n      } else {\r\n        const newWorkspace: Workspace = {\r\n          id: Date.now().toString(),\r\n          name: trimmedName,\r\n          foldersIds: selectedFolderIds,\r\n        };\r\n        setSavedWorkspaces([...savedWorkspaces, newWorkspace]);\r\n        setCurrentWorkspaceId(newWorkspace.id);\r\n      }\r\n      setActiveChatFolder({ activeChatFolder: 0 }, { forceOnHeavyAnimation: true });\r\n      onBack();\r\n    }\r\n  }, [workspaceName, selectedFolderIds, workspaceId, onBack, setSavedWorkspaces, savedWorkspaces, isFormValid]);\r\n\r\n  const handleNameChange = useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\r\n    setWorkspaceName(e.target.value);\r\n  }, [setWorkspaceName]);\r\n\r\n  const handleFolderSelect = useCallback((folderId: number) => {\r\n    setSelectedFolderIds(prevIds =>\r\n      prevIds.includes(folderId)\r\n        ? prevIds.filter(id => id !== folderId)\r\n        : [...prevIds, folderId]\r\n    );\r\n  }, [setSelectedFolderIds]);\r\n\r\n  const handleDeleteWorkspace = useCallback(() => {\r\n    setSavedWorkspaces(savedWorkspaces.filter(w => w.id !== workspaceId));\r\n    setCurrentWorkspaceId('0');\r\n    onBack();\r\n  }, [workspaceId, setSavedWorkspaces, setCurrentWorkspaceId, onBack]);\r\n\r\n  return (\r\n    <div className={styles.container}>\r\n      <button onClick={onBack} className={styles.backButton}>Back</button>\r\n      <form onSubmit={handleSubmit} className={styles.form}>\r\n        <div className={styles.inputGroup}>\r\n          <input\r\n            id=\"workspace-name\"\r\n            type=\"text\"\r\n            value={workspaceName}\r\n            onChange={handleNameChange}\r\n            placeholder=\"Workspace name\"\r\n            required\r\n            className={styles.input}\r\n          />\r\n          {workspaceId && (\r\n            <button onClick={handleDeleteWorkspace} className={styles.deleteButton} aria-label=\"Delete workspace\" title=\"Delete workspace\">\r\n              <i className=\"icon icon-delete\" />\r\n            </button>\r\n          )}\r\n        </div>\r\n        <div className={styles.folderSelection}>\r\n          <h3 className={styles.folderSelectionTitle}>Select folders:</h3>\r\n          {folders.map((folder) => (\r\n            <label key={folder.id} className={styles.folderCheckbox}>\r\n              <input\r\n                type=\"checkbox\"\r\n                checked={selectedFolderIds.includes(folder.id)}\r\n                onChange={() => handleFolderSelect(folder.id)}\r\n              />\r\n              {folder.title}\r\n            </label>\r\n          ))}\r\n        </div>\r\n        <button \r\n          type=\"submit\" \r\n          className={styles.button} \r\n          disabled={!isFormValid}\r\n        >\r\n          {workspaceId ? 'Update' : 'Create'} Workspace\r\n        </button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default WorkspaceSettingsPage;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"TkMdoSgB\",\"form\":\"R5LiynVk\",\"inputGroup\":\"rXYDvMD_\",\"input\":\"MShoj44c\",\"button\":\"qkIu9yaQ\",\"deleteButton\":\"W4KZ2BII\",\"backButton\":\"DQG6S5I0\",\"folderSelection\":\"O_Cd23Eg\",\"folderSelectionTitle\":\"l5L9wNuk\",\"folderCheckbox\":\"IyvhGFUK\"};","import React from 'react';\r\nimport { createRoot } from 'react-dom/client';\r\nimport WorkspaceSettingsPage from './WorkspaceSettingsPage.react';\r\n\r\nconst workspaceSettingsElement = document.getElementById('workspace-settings');\r\nconst workspaceSettingsRoot = createRoot(workspaceSettingsElement!);\r\n\r\ninterface OwnProps {\r\n  isOpen: boolean;\r\n  onClose: () => void;\r\n  workspaceId?: string;\r\n}\r\n\r\nconst WorkspaceSettingsPageRoot: React.FC<OwnProps> = ({ isOpen, onClose, workspaceId }) => {\r\n  workspaceSettingsRoot.render(\r\n    isOpen ? (\r\n      <WorkspaceSettingsPage onBack={onClose} workspaceId={workspaceId} /> \r\n    ) : undefined,\r\n  );\r\n\r\n  return undefined;\r\n};\r\n\r\nexport default WorkspaceSettingsPageRoot;\r\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useState } from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport type { ApiMessage } from '../../api/types';\nimport type { TextPart } from '../../types';\nimport { MAIN_THREAD_ID } from '../../api/types';\nimport { MediaViewerOrigin, SettingsScreens } from '../../types';\n\nimport { getPhotoMediaHash, getVideoProfilePhotoMediaHash } from '../../global/helpers';\nimport { fetchBlob } from '../../util/files';\n\nimport useFlag from '../../hooks/useFlag';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useMedia from '../../hooks/useMedia';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Avatar from '../common/Avatar';\nimport ConfirmDialog from '../ui/ConfirmDialog';\nimport CropModal from '../ui/CropModal';\n\ntype OwnProps = {\n  message: ApiMessage;\n  renderContent: () => TextPart | undefined;\n};\n\nconst ActionMessageSuggestedAvatar: FC<OwnProps> = ({\n  message,\n  renderContent,\n}) => {\n  const {\n    openMediaViewer, uploadProfilePhoto, showNotification,\n  } = getActions();\n\n  const { isOutgoing } = message;\n\n  const lang = useOldLang();\n  const [cropModalBlob, setCropModalBlob] = useState<Blob | undefined>();\n  const [isVideoModalOpen, openVideoModal, closeVideoModal] = useFlag(false);\n  const photo = message.content.action!.photo!;\n  const suggestedPhotoUrl = useMedia(getPhotoMediaHash(photo, 'full'));\n  const suggestedVideoUrl = useMedia(getVideoProfilePhotoMediaHash(photo));\n  const isVideo = message.content.action!.photo?.isVideo;\n\n  const showAvatarNotification = useLastCallback(() => {\n    showNotification({\n      title: lang('ApplyAvatarHintTitle'),\n      message: lang('ApplyAvatarHint'),\n      action: {\n        action: 'requestNextSettingsScreen',\n        payload: {\n          screen: SettingsScreens.Main,\n        },\n      },\n      actionText: lang('Open'),\n    });\n  });\n\n  const handleSetSuggestedAvatar = useLastCallback((file: File) => {\n    setCropModalBlob(undefined);\n    uploadProfilePhoto({ file });\n    showAvatarNotification();\n  });\n\n  const handleCloseCropModal = useLastCallback(() => {\n    setCropModalBlob(undefined);\n  });\n\n  const handleSetVideo = useLastCallback(async () => {\n    if (!suggestedVideoUrl) return;\n\n    closeVideoModal();\n    showAvatarNotification();\n\n    // TODO Once we support uploading video avatars, add crop/trim modal here\n    const blob = await fetchBlob(suggestedVideoUrl);\n    uploadProfilePhoto({\n      file: new File([blob], 'avatar.mp4'),\n      isVideo: true,\n      videoTs: photo.videoSizes?.find((l) => l.videoStartTs !== undefined)?.videoStartTs,\n    });\n  });\n\n  const handleViewSuggestedAvatar = async () => {\n    if (!isOutgoing && suggestedPhotoUrl) {\n      if (isVideo) {\n        openVideoModal();\n      } else {\n        setCropModalBlob(await fetchBlob(suggestedPhotoUrl));\n      }\n    } else {\n      openMediaViewer({\n        chatId: message.chatId,\n        messageId: message.id,\n        threadId: MAIN_THREAD_ID,\n        origin: MediaViewerOrigin.SuggestedAvatar,\n      });\n    }\n  };\n\n  return (\n    <span className=\"action-message-suggested-avatar\" tabIndex={0} role=\"button\" onClick={handleViewSuggestedAvatar}>\n      <Avatar\n        photo={message.content.action!.photo}\n        loopIndefinitely\n        withVideo={isVideo}\n        size=\"jumbo\"\n      />\n      <span>{renderContent()}</span>\n\n      <span className=\"action-message-button\">{lang(isVideo ? 'ViewVideoAction' : 'ViewPhotoAction')}</span>\n      <CropModal\n        file={cropModalBlob}\n        onClose={handleCloseCropModal}\n        onChange={handleSetSuggestedAvatar}\n      />\n      <ConfirmDialog\n        isOpen={isVideoModalOpen}\n        title={lang('SuggestedVideo')}\n        confirmHandler={handleSetVideo}\n        onClose={closeVideoModal}\n        textParts={renderContent()}\n      />\n    </span>\n  );\n};\n\nexport default memo(ActionMessageSuggestedAvatar);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"V3RHiOJR\",\"notch\":\"tfG_BSDt\",\"notch-path\":\"HVbeGv4t\",\"notchPath\":\"HVbeGv4t\",\"join-text\":\"UHAMd4fI\",\"joinText\":\"UHAMd4fI\",\"header\":\"s7QOi22Q\",\"title\":\"JstcOhAN\",\"close\":\"meewH7t_\",\"icon\":\"d8axZxyN\",\"skeleton\":\"xKVZv7KE\",\"inner\":\"njAC8dR9\",\"is-appearing\":\"eb8rX09E\",\"isAppearing\":\"eb8rX09E\",\"channels-appear\":\"AL2cLQ4i\",\"channelsAppear\":\"AL2cLQ4i\",\"is-hiding\":\"XR6_qLCc\",\"isHiding\":\"XR6_qLCc\",\"channels-disappear\":\"TwwnoiuD\",\"channelsDisappear\":\"TwwnoiuD\",\"channel-list\":\"h4gWlNen\",\"channelList\":\"h4gWlNen\",\"item\":\"glDpC2av\",\"last-item\":\"MBChXyXk\",\"lastItem\":\"MBChXyXk\",\"avatar\":\"gqCs9fSo\",\"badge\":\"gnYhwnvf\",\"members-count\":\"HWgwnKui\",\"membersCount\":\"HWgwnKui\",\"channel-title\":\"BTNQ4KBH\",\"channelTitle\":\"BTNQ4KBH\",\"fake-avatar\":\"Xl9MVMTn\",\"fakeAvatar\":\"Xl9MVMTn\",\"fake-avatar-inner\":\"Qizai7yv\",\"fakeAvatarInner\":\"Qizai7yv\",\"last-fake-avatar\":\"JxSmtOFi\",\"lastFakeAvatar\":\"JxSmtOFi\"};","import React, {\n  memo, useEffect, useMemo, useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../../global';\n\nimport type { ApiChat } from '../../../api/types';\n\nimport {\n  selectChat,\n  selectIsCurrentUserPremium,\n  selectSimilarChannelIds,\n} from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { formatIntegerCompact } from '../../../util/textFormat';\n\nimport useTimeout from '../../../hooks/schedulers/useTimeout';\nimport useAverageColor from '../../../hooks/useAverageColor';\nimport useFlag from '../../../hooks/useFlag';\nimport useHorizontalScroll from '../../../hooks/useHorizontalScroll';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Avatar from '../../common/Avatar';\nimport Icon from '../../common/icons/Icon';\nimport Button from '../../ui/Button';\nimport Skeleton from '../../ui/placeholder/Skeleton';\n\nimport styles from './SimilarChannels.module.scss';\n\nconst DEFAULT_BADGE_COLOR = '#3C3C4399';\nconst SHOW_CHANNELS_NUMBER = 10;\nconst MIN_SKELETON_DELAY = 300;\nconst MAX_SKELETON_DELAY = 2000;\n\ntype OwnProps = {\n  chatId: string;\n};\n\ntype StateProps = {\n  similarChannelIds?: string[];\n  shouldShowInChat?: boolean;\n  count: number;\n  isCurrentUserPremium: boolean;\n};\n\nconst SimilarChannels = ({\n  chatId,\n  similarChannelIds,\n  shouldShowInChat,\n  count,\n  isCurrentUserPremium,\n}: StateProps & OwnProps) => {\n  const lang = useOldLang();\n  const { toggleChannelRecommendations, loadChannelRecommendations } = getActions();\n  const [isShowing, markShowing, markNotShowing] = useFlag(false);\n  const [isHiding, markHiding, markNotHiding] = useFlag(false);\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n  const similarChannels = useMemo(() => {\n    if (!similarChannelIds) {\n      return undefined;\n    }\n\n    const global = getGlobal();\n    return similarChannelIds.map((id) => selectChat(global, id)).filter(Boolean);\n  }, [similarChannelIds]);\n  // Show skeleton while loading similar channels\n  const [shoulRenderSkeleton, setShoulRenderSkeleton] = useState(!similarChannelIds);\n  const firstSimilarChannels = useMemo(() => similarChannels?.slice(0, SHOW_CHANNELS_NUMBER), [similarChannels]);\n  const areSimilarChannelsPresent = Boolean(firstSimilarChannels?.length);\n\n  useHorizontalScroll(ref, !areSimilarChannelsPresent || !shouldShowInChat || shoulRenderSkeleton, true);\n  const isAnimating = isHiding || isShowing;\n  const shouldRenderChannels = Boolean(\n    !shoulRenderSkeleton\n      && (shouldShowInChat || isAnimating)\n      && areSimilarChannelsPresent,\n  );\n\n  useEffect(() => {\n    if (!similarChannelIds) {\n      loadChannelRecommendations({ chatId });\n    }\n  }, [chatId, similarChannelIds]);\n\n  useTimeout(() => setShoulRenderSkeleton(false), MAX_SKELETON_DELAY);\n\n  useEffect(() => {\n    if (shoulRenderSkeleton && similarChannels && shouldShowInChat) {\n      const id = setTimeout(() => {\n        setShoulRenderSkeleton(false);\n      }, MIN_SKELETON_DELAY);\n\n      return () => clearTimeout(id);\n    }\n\n    return undefined;\n  }, [similarChannels, shouldShowInChat, shoulRenderSkeleton]);\n\n  const handleToggle = useLastCallback(() => {\n    toggleChannelRecommendations({ chatId });\n    if (shouldShowInChat) {\n      markNotShowing();\n      markHiding();\n    } else {\n      markShowing();\n      markNotHiding();\n    }\n  });\n\n  return (\n    <div className={buildClassName(styles.root)}>\n      <div className=\"join-text\">\n        <span\n          className={buildClassName(areSimilarChannelsPresent && styles.joinText)}\n          onClick={areSimilarChannelsPresent ? handleToggle : undefined}\n        >\n          {lang('ChannelJoined')}\n        </span>\n      </div>\n      {shoulRenderSkeleton && <Skeleton className={styles.skeleton} />}\n      {shouldRenderChannels && (\n        <div\n          className={buildClassName(\n            isShowing && styles.isAppearing,\n            isHiding && styles.isHiding,\n          )}\n        >\n          <div className={styles.notch}>\n            <svg\n              width=\"19\"\n              height=\"7\"\n              viewBox=\"0 0 19 7\"\n              fill=\"none\"\n              xmlns=\"http://www.w3.org/2000/svg\"\n            >\n              <path\n                className={styles.notchPath}\n                fill-rule=\"evenodd\"\n                clip-rule=\"evenodd\"\n                d=\"M19 7C16.8992 7 13.59 3.88897 11.5003 1.67424C10.7648 0.894688 10.397 0.50491 10.0434 0.385149C9.70568 0.270811 9.4225 0.270474 9.08456 0.38401C8.73059 0.50293 8.36133 0.892443 7.62279 1.67147C5.52303 3.88637 2.18302 7 0 7L19 7Z\"\n                fill=\"white\"\n              />\n            </svg>\n          </div>\n          <div className={styles.inner}>\n            <div className={styles.header}>\n              <span className={styles.title}>{lang('SimilarChannels')}</span>\n              <Button\n                className={styles.close}\n                color=\"translucent\"\n                onClick={handleToggle}\n              >\n                <Icon name=\"close\" />\n              </Button>\n            </div>\n            <div ref={ref} className={buildClassName(styles.channelList, 'no-scrollbar')}>\n              {firstSimilarChannels?.map((channel, i) => {\n                return i === SHOW_CHANNELS_NUMBER - 1 ? (\n                  <MoreChannels\n                    channel={channel}\n                    chatId={chatId}\n                    channelsCount={count - SHOW_CHANNELS_NUMBER + 1}\n                    isCurrentUserPremium={isCurrentUserPremium}\n                  />\n                ) : (\n                  <SimilarChannel channel={channel} />\n                );\n              })}\n            </div>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nfunction SimilarChannel({ channel }: { channel: ApiChat }) {\n  const { openChat } = getActions();\n  const color = useAverageColor(channel, DEFAULT_BADGE_COLOR);\n\n  return (\n    <div className={styles.item} onClick={() => openChat({ id: channel.id })}>\n      <Avatar className={styles.avatar} key={channel.id} size=\"large\" peer={channel} />\n      <div style={`background: ${color}`} className={styles.badge}>\n        <i className={buildClassName(styles.icon, 'icon icon-user-filled')} />\n        <span className={styles.membersCount}>{formatIntegerCompact(channel?.membersCount || 0)}\n        </span>\n      </div>\n      <span className={styles.channelTitle}>{channel.title}</span>\n    </div>\n  );\n}\n\nfunction MoreChannels({\n  channel,\n  chatId,\n  channelsCount,\n  isCurrentUserPremium,\n}: {\n  channel: ApiChat;\n  chatId: string;\n  channelsCount: number;\n  isCurrentUserPremium: boolean;\n}) {\n  const { openPremiumModal, openChatWithInfo } = getActions();\n  const lang = useOldLang();\n\n  const handleClickMore = () => {\n    if (isCurrentUserPremium) {\n      openChatWithInfo({\n        id: chatId, shouldReplaceHistory: true, profileTab: 'similarChannels', forceScrollProfileTab: true,\n      });\n    } else {\n      openPremiumModal();\n    }\n  };\n\n  return (\n    <div\n      className={buildClassName(styles.item, styles.lastItem)}\n      onClick={() => handleClickMore()}\n    >\n      <Avatar className={styles.avatar} key={channel.id} size=\"large\" peer={channel} />\n      <div className={styles.fakeAvatar}>\n        <div className={styles.fakeAvatarInner} />\n      </div>\n      <div className={buildClassName(styles.fakeAvatar, styles.lastFakeAvatar)}>\n        <div className={styles.fakeAvatarInner} />\n      </div>\n      <div className={styles.badge}>\n        <span className={styles.membersCount}>{`+${channelsCount}`}</span>\n        {!isCurrentUserPremium && <Icon name=\"lock-badge\" className={styles.icon} />}\n      </div>\n      <span className={styles.channelTitle}>{lang('MoreSimilar')}</span>\n    </div>\n  );\n}\n\nexport default memo(\n  withGlobal<OwnProps>((global, { chatId }): StateProps => {\n    const { similarChannelIds, shouldShowInChat, count } = selectSimilarChannelIds(global, chatId) || {};\n    const isCurrentUserPremium = selectIsCurrentUserPremium(global);\n\n    return {\n      similarChannelIds,\n      shouldShowInChat,\n      count,\n      isCurrentUserPremium,\n    };\n  })(SimilarChannels),\n);\n","import { useEffect, useState } from '../lib/teact/teact';\n\nimport type { ApiChat } from '../api/types';\nimport { ApiMediaFormat } from '../api/types';\n\nimport { getChatAvatarHash } from '../global/helpers';\nimport { getAverageColor, rgb2hex } from '../util/colors';\nimport useMedia from './useMedia';\n\nfunction useAverageColor(chat: ApiChat, fallbackColor = '#00000000') {\n  const [color, setColor] = useState(fallbackColor);\n  const imgBlobUrl = useMedia(getChatAvatarHash(chat), false, ApiMediaFormat.BlobUrl);\n\n  useEffect(() => {\n    (async () => {\n      if (!imgBlobUrl) {\n        return;\n      }\n\n      const averageColor = await getAverageColor(imgBlobUrl);\n      setColor(`#${rgb2hex(averageColor)}`);\n    })();\n  }, [imgBlobUrl]);\n\n  return color;\n}\n\nexport default useAverageColor;\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useMemo, useRef, useUnmountCleanup,\n} from '../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../global';\n\nimport type {\n  ApiChat, ApiMessage, ApiSticker, ApiTopic, ApiUser,\n} from '../../api/types';\nimport type { MessageListType } from '../../global/types';\nimport type { ObserveFn } from '../../hooks/useIntersectionObserver';\nimport type { FocusDirection, ThreadId } from '../../types';\nimport type { OnIntersectPinnedMessage } from './hooks/usePinnedMessage';\n\nimport { getChatTitle, getMessageHtmlId, isJoinedChannelMessage } from '../../global/helpers';\nimport { getMessageReplyInfo } from '../../global/helpers/replies';\nimport {\n  selectCanPlayAnimatedEmojis,\n  selectChat,\n  selectChatMessage,\n  selectGiftStickerForDuration,\n  selectGiftStickerForStars,\n  selectIsMessageFocused,\n  selectTabState,\n  selectTopicFromMessage,\n  selectUser,\n} from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport { formatInteger } from '../../util/textFormat';\nimport { renderActionMessageText } from '../common/helpers/renderActionMessageText';\nimport renderText from '../common/helpers/renderText';\nimport { preventMessageInputBlur } from './helpers/preventMessageInputBlur';\n\nimport useContextMenuHandlers from '../../hooks/useContextMenuHandlers';\nimport useEnsureMessage from '../../hooks/useEnsureMessage';\nimport useFlag from '../../hooks/useFlag';\nimport { useIsIntersecting, useOnIntersect } from '../../hooks/useIntersectionObserver';\nimport useLang from '../../hooks/useLang';\nimport useOldLang from '../../hooks/useOldLang';\nimport useShowTransitionDeprecated from '../../hooks/useShowTransitionDeprecated';\nimport useFocusMessage from './message/hooks/useFocusMessage';\n\nimport AnimatedIconFromSticker from '../common/AnimatedIconFromSticker';\nimport ActionMessageSuggestedAvatar from './ActionMessageSuggestedAvatar';\nimport ContextMenuContainer from './message/ContextMenuContainer.async';\nimport SimilarChannels from './message/SimilarChannels';\n\ntype OwnProps = {\n  message: ApiMessage;\n  threadId?: ThreadId;\n  messageListType?: MessageListType;\n  observeIntersectionForReading?: ObserveFn;\n  observeIntersectionForLoading?: ObserveFn;\n  observeIntersectionForPlaying?: ObserveFn;\n  isEmbedded?: boolean;\n  appearanceOrder?: number;\n  isJustAdded?: boolean;\n  isLastInList?: boolean;\n  isInsideTopic?: boolean;\n  memoFirstUnreadIdRef?: { current: number | undefined };\n  onIntersectPinnedMessage?: OnIntersectPinnedMessage;\n};\n\ntype StateProps = {\n  senderUser?: ApiUser;\n  senderChat?: ApiChat;\n  targetUserIds?: string[];\n  targetMessage?: ApiMessage;\n  targetChatId?: string;\n  targetChat?: ApiChat;\n  isFocused: boolean;\n  topic?: ApiTopic;\n  focusDirection?: FocusDirection;\n  noFocusHighlight?: boolean;\n  premiumGiftSticker?: ApiSticker;\n  starGiftSticker?: ApiSticker;\n  canPlayAnimatedEmojis?: boolean;\n};\n\nconst APPEARANCE_DELAY = 10;\n\nconst ActionMessage: FC<OwnProps & StateProps> = ({\n  message,\n  isEmbedded,\n  appearanceOrder = 0,\n  isJustAdded,\n  isLastInList,\n  senderUser,\n  senderChat,\n  targetUserIds,\n  targetMessage,\n  targetChatId,\n  targetChat,\n  isFocused,\n  focusDirection,\n  noFocusHighlight,\n  premiumGiftSticker,\n  starGiftSticker,\n  isInsideTopic,\n  topic,\n  memoFirstUnreadIdRef,\n  canPlayAnimatedEmojis,\n  observeIntersectionForReading,\n  observeIntersectionForLoading,\n  observeIntersectionForPlaying,\n  onIntersectPinnedMessage,\n}) => {\n  const {\n    openPremiumModal,\n    requestConfetti,\n    checkGiftCode,\n    getReceipt,\n    openStarsTransactionFromGift,\n    openPrizeStarsTransactionFromGiveaway,\n  } = getActions();\n\n  const oldLang = useOldLang();\n  const lang = useLang();\n\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n\n  useOnIntersect(ref, observeIntersectionForReading);\n  useEnsureMessage(\n    message.chatId,\n    message.replyInfo?.type === 'message' ? message.replyInfo.replyToMsgId : undefined,\n    targetMessage,\n  );\n  useFocusMessage(ref, message.chatId, isFocused, focusDirection, noFocusHighlight, isJustAdded);\n\n  useUnmountCleanup(() => {\n    if (message.isPinned) {\n      onIntersectPinnedMessage?.({ viewportPinnedIdsToRemove: [message.id] });\n    }\n  });\n\n  const noAppearanceAnimation = appearanceOrder <= 0;\n  const [isShown, markShown] = useFlag(noAppearanceAnimation);\n  const isPremiumGift = message.content.action?.type === 'giftPremium';\n  const isGiftCode = message.content.action?.type === 'giftCode';\n  const isSuggestedAvatar = message.content.action?.type === 'suggestProfilePhoto' && message.content.action!.photo;\n  const isJoinedMessage = isJoinedChannelMessage(message);\n  const isStarsGift = message.content.action?.type === 'giftStars';\n  const isPrizeStars = message.content.action?.type === 'prizeStars';\n\n  useEffect(() => {\n    if (noAppearanceAnimation) {\n      return;\n    }\n\n    setTimeout(markShown, appearanceOrder * APPEARANCE_DELAY);\n  }, [appearanceOrder, markShown, noAppearanceAnimation]);\n\n  const isVisible = useIsIntersecting(ref, observeIntersectionForPlaying);\n\n  const shouldShowConfettiRef = useRef((() => {\n    const isUnread = memoFirstUnreadIdRef?.current && message.id >= memoFirstUnreadIdRef.current;\n    return isPremiumGift && !message.isOutgoing && isUnread;\n  })());\n\n  useEffect(() => {\n    if (isVisible && shouldShowConfettiRef.current) {\n      shouldShowConfettiRef.current = false;\n      requestConfetti({ withStars: true });\n    }\n  }, [isVisible, requestConfetti]);\n\n  const { transitionClassNames } = useShowTransitionDeprecated(isShown, undefined, noAppearanceAnimation, false);\n\n  // No need for expensive global updates on users and chats, so we avoid them\n  const usersById = getGlobal().users.byId;\n  const targetUsers = useMemo(() => {\n    return targetUserIds\n      ? targetUserIds.map((userId) => usersById?.[userId]).filter(Boolean)\n      : undefined;\n  }, [targetUserIds, usersById]);\n\n  const renderContent = useCallback(() => {\n    return renderActionMessageText(\n      oldLang,\n      message,\n      senderUser,\n      senderChat,\n      targetUsers,\n      targetMessage,\n      targetChatId,\n      topic,\n      { isEmbedded },\n      observeIntersectionForLoading,\n      observeIntersectionForPlaying,\n    );\n  }, [\n    isEmbedded, message, observeIntersectionForLoading, observeIntersectionForPlaying, oldLang,\n    senderChat, senderUser, targetChatId, targetMessage, targetUsers, topic,\n  ]);\n\n  const {\n    isContextMenuOpen, contextMenuAnchor,\n    handleBeforeContextMenu, handleContextMenu,\n    handleContextMenuClose, handleContextMenuHide,\n  } = useContextMenuHandlers(ref);\n  const isContextMenuShown = contextMenuAnchor !== undefined;\n\n  const handleMouseDown = (e: React.MouseEvent<HTMLDivElement, MouseEvent>) => {\n    preventMessageInputBlur(e);\n    handleBeforeContextMenu(e);\n  };\n\n  const handleStarGiftClick = () => {\n    openStarsTransactionFromGift({\n      chatId: message.chatId,\n      messageId: message.id,\n    });\n  };\n\n  const handlePremiumGiftClick = () => {\n    openPremiumModal({\n      isGift: true,\n      fromUserId: senderUser?.id,\n      toUserId: targetUserIds?.[0],\n      monthsAmount: message.content.action?.months || 0,\n    });\n  };\n\n  const handlePrizeStarsClick = () => {\n    openPrizeStarsTransactionFromGiveaway({\n      chatId: message.chatId,\n      messageId: message.id,\n    });\n  };\n\n  const handleGiftCodeClick = () => {\n    const slug = message.content.action?.slug;\n    if (!slug) return;\n    checkGiftCode({ slug, message: { chatId: message.chatId, messageId: message.id } });\n  };\n\n  const handleClick = () => {\n    if (message.content.action?.type === 'receipt') {\n      getReceipt({\n        chatId: message.chatId,\n        messageId: message.id,\n      });\n    }\n  };\n\n  // TODO Refactoring for action rendering\n  const shouldSkipRender = isInsideTopic && message.content.action?.text === 'TopicWasCreatedAction';\n  if (shouldSkipRender) {\n    return <span ref={ref} />;\n  }\n\n  if (isEmbedded) {\n    return <span ref={ref} className=\"embedded-action-message\">{renderContent()}</span>;\n  }\n\n  function renderGift() {\n    return (\n      <span\n        className=\"action-message-gift\"\n        tabIndex={0}\n        role=\"button\"\n        onClick={handlePremiumGiftClick}\n      >\n        <AnimatedIconFromSticker\n          key={message.id}\n          sticker={premiumGiftSticker}\n          play={canPlayAnimatedEmojis}\n          noLoop\n          nonInteractive\n        />\n        <strong>{oldLang('ActionGiftPremiumTitle')}</strong>\n        <span>\n          {oldLang('ActionGiftPremiumSubtitle', oldLang('Months', message.content.action?.months, 'i'))}\n        </span>\n\n        <span className=\"action-message-button\">{oldLang('ActionGiftPremiumView')}</span>\n      </span>\n    );\n  }\n\n  function renderGiftCode() {\n    const isFromGiveaway = message.content.action?.isGiveaway;\n    const isUnclaimed = message.content.action?.isUnclaimed;\n    return (\n      <span\n        className=\"action-message-gift action-message-gift-code\"\n        tabIndex={0}\n        role=\"button\"\n        onClick={handleGiftCodeClick}\n      >\n        <AnimatedIconFromSticker\n          key={message.id}\n          sticker={premiumGiftSticker}\n          play={canPlayAnimatedEmojis}\n          noLoop\n          nonInteractive\n        />\n        <strong>\n          {oldLang(isUnclaimed ? 'BoostingUnclaimedPrize' : 'BoostingCongratulations')}\n        </strong>\n        <span className=\"action-message-subtitle\">\n          {targetChat && renderText(\n            oldLang(\n              isFromGiveaway ? 'BoostingReceivedGiftFrom' : isUnclaimed\n                ? 'BoostingReceivedPrizeFrom' : 'BoostingYouHaveUnclaimedPrize',\n              getChatTitle(oldLang, targetChat),\n            ),\n            ['simple_markdown'],\n          )}\n        </span>\n        <span className=\"action-message-subtitle\">\n          {renderText(oldLang(\n            'BoostingUnclaimedPrizeDuration',\n            oldLang('Months', message.content.action?.months, 'i'),\n          ), ['simple_markdown'])}\n        </span>\n\n        <span className=\"action-message-button\">{\n          oldLang('BoostingReceivedGiftOpenBtn')\n        }\n        </span>\n      </span>\n    );\n  }\n\n  function renderStarsGift() {\n    return (\n      <span\n        className=\"action-message-gift action-message-gift-code\"\n        tabIndex={0}\n        role=\"button\"\n        onClick={handleStarGiftClick}\n      >\n        <AnimatedIconFromSticker\n          key={message.id}\n          sticker={starGiftSticker}\n          play={canPlayAnimatedEmojis}\n          noLoop\n          nonInteractive\n        />\n        <div className=\"action-message-stars-balance\">\n          {formatInteger(message.content.action!.stars!)}\n          <strong>{oldLang('Stars')}</strong>\n        </div>\n        <span className=\"action-message-stars-subtitle\">\n          {renderText(\n            oldLang(!message.isOutgoing\n              ? 'ActionGiftStarsSubtitleYou' : 'ActionGiftStarsSubtitle', getChatTitle(oldLang, targetChat!)),\n            ['simple_markdown'],\n          )}\n        </span>\n        <span className=\"action-message-button\">{\n          oldLang('ActionGiftPremiumView')\n        }\n        </span>\n      </span>\n    );\n  }\n\n  function renderPrizeStars() {\n    const isUnclaimed = message.content.action?.isUnclaimed;\n\n    return (\n      <span\n        className=\"action-message-gift action-message-gift-code\"\n        tabIndex={0}\n        role=\"button\"\n        onClick={handlePrizeStarsClick}\n      >\n        <AnimatedIconFromSticker\n          key={message.id}\n          sticker={starGiftSticker}\n          play={canPlayAnimatedEmojis}\n          noLoop\n          nonInteractive\n        />\n        <strong>\n          {oldLang(isUnclaimed ? 'BoostingUnclaimedPrize' : 'BoostingCongratulations')}\n        </strong>\n        <span className=\"action-message-subtitle\">\n          {targetChat && renderText(oldLang(isUnclaimed\n            ? 'BoostingReceivedPrizeFrom' : 'BoostingYouHaveUnclaimedPrize', getChatTitle(oldLang, targetChat)),\n          ['simple_markdown'])}\n        </span>\n        <span className=\"action-message-subtitle\">\n          {renderText(lang(\n            'PrizeCredits', {\n              count: (\n                <b>{formatInteger(message.content.action?.stars!)}</b>\n              ),\n            }, {\n              withNodes: true,\n            },\n          ), ['simple_markdown'])}\n        </span>\n        <span className=\"action-message-button\">{\n          oldLang('ActionGiftPremiumView')\n        }\n        </span>\n      </span>\n    );\n  }\n\n  const className = buildClassName(\n    'ActionMessage message-list-item',\n    isFocused && !noFocusHighlight && 'focused',\n    (isPremiumGift || isSuggestedAvatar) && 'centered-action',\n    isContextMenuShown && 'has-menu-open',\n    isLastInList && 'last-in-list',\n    transitionClassNames,\n  );\n\n  return (\n    <div\n      ref={ref}\n      id={getMessageHtmlId(message.id)}\n      className={className}\n      data-message-id={message.id}\n      data-is-pinned={message.isPinned || undefined}\n      onMouseDown={handleMouseDown}\n      onContextMenu={handleContextMenu}\n    >\n      {!isSuggestedAvatar && !isGiftCode && !isJoinedMessage && (\n        <span className=\"action-message-content\" onClick={handleClick}>{renderContent()}</span>\n      )}\n      {isPremiumGift && renderGift()}\n      {isGiftCode && renderGiftCode()}\n      {isStarsGift && renderStarsGift()}\n      {isPrizeStars && renderPrizeStars()}\n      {isSuggestedAvatar && (\n        <ActionMessageSuggestedAvatar message={message} renderContent={renderContent} />\n      )}\n      {isJoinedMessage && <SimilarChannels chatId={targetChatId!} />}\n      {contextMenuAnchor && (\n        <ContextMenuContainer\n          isOpen={isContextMenuOpen}\n          anchor={contextMenuAnchor}\n          message={message}\n          messageListType=\"thread\"\n          onClose={handleContextMenuClose}\n          onCloseAnimationEnd={handleContextMenuHide}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { message, threadId }): StateProps => {\n    const {\n      chatId, senderId, content,\n    } = message;\n\n    const { targetUserIds, targetChatId } = content.action || {};\n    const targetMessageId = getMessageReplyInfo(message)?.replyToMsgId;\n    const targetMessage = targetMessageId\n      ? selectChatMessage(global, chatId, targetMessageId)\n      : undefined;\n\n    const isFocused = threadId ? selectIsMessageFocused(global, message, threadId) : false;\n    const {\n      direction: focusDirection,\n      noHighlight: noFocusHighlight,\n    } = (isFocused && selectTabState(global).focusedMessage) || {};\n\n    const senderUser = selectUser(global, senderId || chatId);\n    const senderChat = selectChat(global, chatId);\n\n    const targetChat = targetChatId ? selectChat(global, targetChatId) : undefined;\n\n    const giftDuration = content.action?.months;\n    const premiumGiftSticker = selectGiftStickerForDuration(global, giftDuration);\n\n    const starCount = content.action?.stars;\n    const starGiftSticker = selectGiftStickerForStars(global, starCount);\n\n    const topic = selectTopicFromMessage(global, message);\n\n    return {\n      senderUser,\n      senderChat,\n      targetChat,\n      targetChatId,\n      targetUserIds,\n      targetMessage,\n      isFocused,\n      premiumGiftSticker,\n      starGiftSticker,\n      topic,\n      canPlayAnimatedEmojis: selectCanPlayAnimatedEmojis(global),\n      ...(isFocused && {\n        focusDirection,\n        noFocusHighlight,\n      }),\n    };\n  },\n)(ActionMessage));\n","import type { FC } from '../../lib/teact/teact';\nimport React from '../../lib/teact/teact';\n\nimport type { OwnProps } from './HeaderMenuContainer';\n\nimport { Bundles } from '../../util/moduleLoader';\n\nimport useModuleLoader from '../../hooks/useModuleLoader';\n\nconst HeaderMenuContainerAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const HeaderMenuContainer = useModuleLoader(Bundles.Extra, 'HeaderMenuContainer', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return HeaderMenuContainer ? <HeaderMenuContainer {...props} /> : undefined;\n};\n\nexport default HeaderMenuContainerAsync;\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useMemo, useRef, useState,\n} from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { MessageListType } from '../../global/types';\nimport type { IAnchorPosition, ThreadId } from '../../types';\nimport { MAIN_THREAD_ID } from '../../api/types';\nimport { ManagementScreens } from '../../types';\n\nimport { requestMeasure, requestNextMutation } from '../../lib/fasterdom/fasterdom';\nimport {\n  getHasAdminRight,\n  getIsSavedDialog,\n  isAnonymousForwardsChat,\n  isChatBasicGroup, isChatChannel, isChatSuperGroup, isUserId,\n} from '../../global/helpers';\nimport {\n  selectBot,\n  selectCanAnimateInterface,\n  selectCanTranslateChat,\n  selectChat,\n  selectChatFullInfo,\n  selectIsChatBotNotStarted,\n  selectIsChatWithSelf,\n  selectIsInSelectMode,\n  selectIsRightColumnShown,\n  selectIsUserBlocked,\n  selectLanguageCode,\n  selectRequestedChatTranslationLanguage,\n  selectTranslationLanguage,\n  selectUserFullInfo,\n} from '../../global/selectors';\nimport { ARE_CALLS_SUPPORTED, IS_APP } from '../../util/windowEnvironment';\n\nimport { useHotkeys } from '../../hooks/useHotkeys';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Button from '../ui/Button';\nimport DropdownMenu from '../ui/DropdownMenu';\nimport MenuItem from '../ui/MenuItem';\nimport MenuSeparator from '../ui/MenuSeparator';\nimport HeaderMenuContainer from './HeaderMenuContainer.async';\n\ninterface OwnProps {\n  chatId: string;\n  threadId: ThreadId;\n  messageListType: MessageListType;\n  canExpandActions: boolean;\n  isForForum?: boolean;\n  isMobile?: boolean;\n  onTopicSearch?: NoneToVoidFunction;\n}\n\ninterface StateProps {\n  noMenu?: boolean;\n  isChannel?: boolean;\n  isRightColumnShown?: boolean;\n  canStartBot?: boolean;\n  canRestartBot?: boolean;\n  canUnblock?: boolean;\n  canSubscribe?: boolean;\n  canSearch?: boolean;\n  canCall?: boolean;\n  canMute?: boolean;\n  canViewStatistics?: boolean;\n  canViewMonetization?: boolean;\n  canViewBoosts?: boolean;\n  canShowBoostModal?: boolean;\n  canLeave?: boolean;\n  canEnterVoiceChat?: boolean;\n  canCreateVoiceChat?: boolean;\n  pendingJoinRequests?: number;\n  shouldJoinToSend?: boolean;\n  shouldSendJoinRequest?: boolean;\n  noAnimation?: boolean;\n  canTranslate?: boolean;\n  isTranslating?: boolean;\n  translationLanguage: string;\n  language: string;\n  detectedChatLanguage?: string;\n  doNotTranslate: string[];\n}\n\n// Chrome breaks layout when focusing input during transition\nconst SEARCH_FOCUS_DELAY_MS = 320;\n\nconst HeaderActions: FC<OwnProps & StateProps> = ({\n  chatId,\n  threadId,\n  noMenu,\n  isMobile,\n  isChannel,\n  canStartBot,\n  canRestartBot,\n  canUnblock,\n  canSubscribe,\n  canSearch,\n  canCall,\n  canMute,\n  canViewStatistics,\n  canViewMonetization,\n  canViewBoosts,\n  canShowBoostModal,\n  canLeave,\n  canEnterVoiceChat,\n  canCreateVoiceChat,\n  pendingJoinRequests,\n  isRightColumnShown,\n  isForForum,\n  canExpandActions,\n  shouldJoinToSend,\n  shouldSendJoinRequest,\n  noAnimation,\n  canTranslate,\n  isTranslating,\n  translationLanguage,\n  language,\n  detectedChatLanguage,\n  doNotTranslate,\n  onTopicSearch,\n}) => {\n  const {\n    joinChannel,\n    sendBotCommand,\n    openMiddleSearch,\n    restartBot,\n    requestMasterAndRequestCall,\n    requestNextManagementScreen,\n    showNotification,\n    openChat,\n    requestChatTranslation,\n    togglePeerTranslations,\n    openChatLanguageModal,\n    setSettingOption,\n    unblockUser,\n    setViewForumAsMessages,\n  } = getActions();\n  // eslint-disable-next-line no-null/no-null\n  const menuButtonRef = useRef<HTMLButtonElement>(null);\n  const lang = useOldLang();\n  const [isMenuOpen, setIsMenuOpen] = useState(false);\n  const [menuAnchor, setMenuAnchor] = useState<IAnchorPosition | undefined>(undefined);\n\n  const handleHeaderMenuOpen = useLastCallback(() => {\n    setIsMenuOpen(true);\n    const rect = menuButtonRef.current!.getBoundingClientRect();\n    setMenuAnchor({ x: rect.right, y: rect.bottom });\n  });\n\n  const handleHeaderMenuClose = useLastCallback(() => {\n    setIsMenuOpen(false);\n  });\n\n  const handleHeaderMenuHide = useLastCallback(() => {\n    setMenuAnchor(undefined);\n  });\n\n  const handleSubscribeClick = useLastCallback(() => {\n    joinChannel({ chatId });\n    if (shouldSendJoinRequest) {\n      showNotification({\n        message: isChannel ? lang('RequestToJoinChannelSentDescription') : lang('RequestToJoinGroupSentDescription'),\n      });\n    }\n  });\n\n  const handleStartBot = useLastCallback(() => {\n    sendBotCommand({ command: '/start' });\n  });\n\n  const handleRestartBot = useLastCallback(() => {\n    restartBot({ chatId });\n  });\n\n  const handleUnblock = useLastCallback(() => {\n    unblockUser({ userId: chatId });\n  });\n\n  const handleTranslateClick = useLastCallback(() => {\n    if (isTranslating) {\n      requestChatTranslation({ chatId, toLanguageCode: undefined });\n      return;\n    }\n\n    requestChatTranslation({ chatId, toLanguageCode: translationLanguage });\n  });\n\n  const handleJoinRequestsClick = useLastCallback(() => {\n    requestNextManagementScreen({ screen: ManagementScreens.JoinRequests });\n  });\n\n  const handleSearchClick = useLastCallback(() => {\n    if (isForForum) {\n      onTopicSearch?.();\n      return;\n    }\n\n    openMiddleSearch();\n\n    if (isMobile) {\n      // iOS requires synchronous focus on user event.\n      setFocusInSearchInput();\n    } else if (noAnimation) {\n      // The second RAF is necessary because Teact must update the state and render the async component\n      requestMeasure(() => {\n        requestNextMutation(setFocusInSearchInput);\n      });\n    } else {\n      setTimeout(setFocusInSearchInput, SEARCH_FOCUS_DELAY_MS);\n    }\n  });\n\n  const handleAsMessagesClick = useLastCallback(() => {\n    openChat({ id: chatId });\n    setViewForumAsMessages({ chatId, isEnabled: true });\n  });\n\n  const handleRequestCall = useLastCallback(() => {\n    requestMasterAndRequestCall({ userId: chatId });\n  });\n\n  const handleHotkeySearchClick = useLastCallback((e: KeyboardEvent) => {\n    if (!canSearch || !IS_APP || e.shiftKey) {\n      return;\n    }\n\n    e.preventDefault();\n    handleSearchClick();\n  });\n\n  const getTextWithLanguage = useLastCallback((langKey: string, langCode: string) => {\n    const simplified = langCode.split('-')[0];\n    const translationKey = `TranslateLanguage${simplified.toUpperCase()}`;\n    const name = lang(translationKey);\n    if (name !== translationKey) {\n      return lang(langKey, name);\n    }\n\n    const translatedNames = new Intl.DisplayNames([language], { type: 'language' });\n    const translatedName = translatedNames.of(langCode)!;\n    return lang(`${langKey}Other`, translatedName);\n  });\n\n  const buttonText = useMemo(() => {\n    if (isTranslating) return lang('ShowOriginalButton');\n\n    return getTextWithLanguage('TranslateToButton', translationLanguage);\n  }, [translationLanguage, getTextWithLanguage, isTranslating, lang]);\n\n  const doNotTranslateText = useMemo(() => {\n    if (!detectedChatLanguage) return undefined;\n\n    return getTextWithLanguage('DoNotTranslateLanguage', detectedChatLanguage);\n  }, [getTextWithLanguage, detectedChatLanguage]);\n\n  const handleHide = useLastCallback(() => {\n    togglePeerTranslations({ chatId, isEnabled: false });\n    requestChatTranslation({ chatId, toLanguageCode: undefined });\n  });\n\n  const handleChangeLanguage = useLastCallback(() => {\n    openChatLanguageModal({ chatId });\n  });\n\n  const handleDoNotTranslate = useLastCallback(() => {\n    if (!detectedChatLanguage) return;\n\n    setSettingOption({\n      doNotTranslate: [...doNotTranslate, detectedChatLanguage],\n    });\n    requestChatTranslation({ chatId, toLanguageCode: undefined });\n\n    showNotification({ message: getTextWithLanguage('AddedToDoNotTranslate', detectedChatLanguage) });\n  });\n\n  useHotkeys(useMemo(() => ({\n    'Mod+F': handleHotkeySearchClick,\n  }), []));\n\n  const MoreMenuButton: FC<{ onTrigger: () => void; isOpen?: boolean }> = useMemo(() => {\n    return ({ onTrigger, isOpen }) => (\n      <Button\n        round\n        ripple={isRightColumnShown}\n        color=\"translucent\"\n        size=\"smaller\"\n        className={isOpen ? 'active' : ''}\n        onClick={onTrigger}\n        ariaLabel={lang('TranslateMessage')}\n      >\n        <i className=\"icon icon-language\" aria-hidden />\n      </Button>\n    );\n  }, [isRightColumnShown, lang]);\n\n  return (\n    <div className=\"HeaderActions\">\n      {!isForForum && canTranslate && (\n        <DropdownMenu\n          className=\"stickers-more-menu with-menu-transitions\"\n          trigger={MoreMenuButton}\n          positionX=\"right\"\n        >\n          <MenuItem icon=\"language\" onClick={handleTranslateClick}>\n            {buttonText}\n          </MenuItem>\n          <MenuItem icon=\"replace\" onClick={handleChangeLanguage}>\n            {lang('Chat.Translate.Menu.To')}\n          </MenuItem>\n          <MenuSeparator />\n          {detectedChatLanguage\n            && <MenuItem icon=\"hand-stop\" onClick={handleDoNotTranslate}>{doNotTranslateText}</MenuItem>}\n          <MenuItem icon=\"close-circle\" onClick={handleHide}>{lang('Hide')}</MenuItem>\n        </DropdownMenu>\n      )}\n      {!isMobile && (\n        <>\n          {canExpandActions && !shouldSendJoinRequest && (canSubscribe || shouldJoinToSend) && (\n            <Button\n              size=\"tiny\"\n              ripple\n              fluid\n              onClick={handleSubscribeClick}\n            >\n              {lang(isChannel ? 'ProfileJoinChannel' : 'ProfileJoinGroup')}\n            </Button>\n          )}\n          {canExpandActions && shouldSendJoinRequest && (\n            <Button\n              size=\"tiny\"\n              ripple\n              fluid\n              onClick={handleSubscribeClick}\n            >\n              {lang('ChannelJoinRequest')}\n            </Button>\n          )}\n          {canExpandActions && canStartBot && (\n            <Button\n              size=\"tiny\"\n              ripple\n              fluid\n              onClick={handleStartBot}\n            >\n              {lang('BotStart')}\n            </Button>\n          )}\n          {canExpandActions && canRestartBot && (\n            <Button\n              size=\"tiny\"\n              ripple\n              fluid\n              onClick={handleRestartBot}\n            >\n              {lang('BotRestart')}\n            </Button>\n          )}\n          {canExpandActions && canUnblock && (\n            <Button\n              size=\"tiny\"\n              ripple\n              fluid\n              onClick={handleUnblock}\n            >\n              {lang('Unblock')}\n            </Button>\n          )}\n          {canSearch && (\n            <Button\n              round\n              ripple={isRightColumnShown}\n              color=\"translucent\"\n              size=\"smaller\"\n              onClick={handleSearchClick}\n              ariaLabel={lang('Conversation.SearchPlaceholder')}\n            >\n              <i className=\"icon icon-search\" aria-hidden />\n            </Button>\n          )}\n          {canCall && (\n            <Button\n              round\n              color=\"translucent\"\n              size=\"smaller\"\n              onClick={handleRequestCall}\n              ariaLabel=\"Call\"\n            >\n              <i className=\"icon icon-phone\" aria-hidden />\n            </Button>\n          )}\n        </>\n      )}\n      {!isForForum && Boolean(pendingJoinRequests) && (\n        <Button\n          round\n          className=\"badge-button\"\n          ripple={isRightColumnShown}\n          color=\"translucent\"\n          size=\"smaller\"\n          onClick={handleJoinRequestsClick}\n          ariaLabel={isChannel ? lang('SubscribeRequests') : lang('MemberRequests')}\n        >\n          <i className=\"icon icon-user\" aria-hidden />\n          <div className=\"badge\">{pendingJoinRequests}</div>\n        </Button>\n      )}\n      <Button\n        ref={menuButtonRef}\n        className={isMenuOpen ? 'active' : ''}\n        round\n        ripple={!isMobile}\n        size=\"smaller\"\n        color=\"translucent\"\n        disabled={noMenu}\n        ariaLabel=\"More actions\"\n        onClick={handleHeaderMenuOpen}\n      >\n        <i className=\"icon icon-more\" aria-hidden />\n      </Button>\n      {menuAnchor && (\n        <HeaderMenuContainer\n          chatId={chatId}\n          threadId={threadId}\n          isOpen={isMenuOpen}\n          anchor={menuAnchor}\n          withExtraActions={isMobile || !canExpandActions}\n          isChannel={isChannel}\n          canStartBot={canStartBot}\n          canSubscribe={canSubscribe}\n          canSearch={canSearch}\n          canCall={canCall}\n          canMute={canMute}\n          canViewStatistics={canViewStatistics}\n          canViewBoosts={canViewBoosts}\n          canViewMonetization={canViewMonetization}\n          canShowBoostModal={canShowBoostModal}\n          canLeave={canLeave}\n          canEnterVoiceChat={canEnterVoiceChat}\n          canCreateVoiceChat={canCreateVoiceChat}\n          pendingJoinRequests={pendingJoinRequests}\n          onJoinRequestsClick={handleJoinRequestsClick}\n          withForumActions={isForForum}\n          onSubscribeChannel={handleSubscribeClick}\n          onSearchClick={handleSearchClick}\n          onAsMessagesClick={handleAsMessagesClick}\n          onClose={handleHeaderMenuClose}\n          onCloseAnimationEnd={handleHeaderMenuHide}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, {\n    chatId, threadId, messageListType, isMobile,\n  }): StateProps => {\n    const chat = selectChat(global, chatId);\n    const isChannel = Boolean(chat && isChatChannel(chat));\n    const isSuperGroup = Boolean(chat && isChatSuperGroup(chat));\n    const language = selectLanguageCode(global);\n    const translationLanguage = selectTranslationLanguage(global);\n    const isPrivate = isUserId(chatId);\n    const { doNotTranslate } = global.settings.byKey;\n\n    if (!chat || chat.isRestricted || selectIsInSelectMode(global)) {\n      return {\n        noMenu: true,\n        language,\n        translationLanguage,\n        doNotTranslate,\n      };\n    }\n\n    const bot = selectBot(global, chatId);\n    const chatFullInfo = !isPrivate ? selectChatFullInfo(global, chatId) : undefined;\n    const userFullInfo = isPrivate ? selectUserFullInfo(global, chatId) : undefined;\n    const fullInfo = chatFullInfo || userFullInfo;\n    const isChatWithSelf = selectIsChatWithSelf(global, chatId);\n    const isMainThread = messageListType === 'thread' && threadId === MAIN_THREAD_ID;\n    const isDiscussionThread = messageListType === 'thread' && threadId !== MAIN_THREAD_ID;\n    const isRightColumnShown = selectIsRightColumnShown(global, isMobile);\n\n    const isSavedDialog = getIsSavedDialog(chatId, threadId, global.currentUserId);\n\n    const isUserBlocked = isPrivate ? selectIsUserBlocked(global, chatId) : false;\n    const canRestartBot = Boolean(bot && isUserBlocked);\n    const canStartBot = !canRestartBot && Boolean(selectIsChatBotNotStarted(global, chatId));\n    const canUnblock = isUserBlocked && !bot;\n    const canSubscribe = Boolean(\n      (isMainThread || chat.isForum) && (isChannel || isSuperGroup) && chat.isNotJoined,\n    );\n    const canSearch = isMainThread || isDiscussionThread;\n    const canCall = ARE_CALLS_SUPPORTED && isUserId(chat.id) && !isChatWithSelf && !bot && !chat.isSupport\n      && !isAnonymousForwardsChat(chat.id);\n    const canMute = isMainThread && !isChatWithSelf && !canSubscribe;\n    const canLeave = isSavedDialog || (isMainThread && !canSubscribe);\n    const canEnterVoiceChat = ARE_CALLS_SUPPORTED && isMainThread && chat.isCallActive;\n    const canCreateVoiceChat = ARE_CALLS_SUPPORTED && isMainThread && !chat.isCallActive\n      && (chat.adminRights?.manageCall || (chat.isCreator && isChatBasicGroup(chat)));\n    const canViewStatistics = isMainThread && chatFullInfo?.canViewStatistics;\n    const canViewMonetization = isMainThread && chatFullInfo?.canViewMonetization;\n    const canViewBoosts = isMainThread\n      && (isSuperGroup || isChannel) && (canViewStatistics || getHasAdminRight(chat, 'postStories'));\n    const canShowBoostModal = !canViewBoosts && (isSuperGroup || isChannel);\n    const pendingJoinRequests = isMainThread ? chatFullInfo?.requestsPending : undefined;\n    const shouldJoinToSend = Boolean(chat?.isNotJoined && chat.isJoinToSend);\n    const shouldSendJoinRequest = Boolean(chat?.isNotJoined && chat.isJoinRequest);\n    const noAnimation = !selectCanAnimateInterface(global);\n\n    const isTranslating = Boolean(selectRequestedChatTranslationLanguage(global, chatId));\n    const canTranslate = selectCanTranslateChat(global, chatId) && !fullInfo?.isTranslationDisabled;\n\n    return {\n      noMenu: false,\n      isChannel,\n      isRightColumnShown,\n      canStartBot,\n      canRestartBot,\n      canSubscribe,\n      canSearch,\n      canCall,\n      canMute,\n      canViewStatistics,\n      canViewMonetization,\n      canViewBoosts,\n      canShowBoostModal,\n      canLeave,\n      canEnterVoiceChat,\n      canCreateVoiceChat,\n      pendingJoinRequests,\n      shouldJoinToSend,\n      shouldSendJoinRequest,\n      noAnimation,\n      canTranslate,\n      isTranslating,\n      translationLanguage,\n      language,\n      doNotTranslate,\n      detectedChatLanguage: chat.detectedLanguage,\n      canUnblock,\n    };\n  },\n)(HeaderActions));\n\nfunction setFocusInSearchInput() {\n  const searchInput = document.querySelector<HTMLInputElement>('#MiddleSearch input');\n  searchInput?.focus();\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"mklnEg0s\",\"compact\":\"VGmPJoga\",\"image\":\"tT8KQwg0\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useMemo } from '../../../lib/teact/teact';\n\nimport type { ApiDocument } from '../../../api/types';\nimport type { ISettings } from '../../../types';\nimport { ApiMediaFormat } from '../../../api/types';\n\nimport { getDocumentMediaHash } from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useMedia from '../../../hooks/useMedia';\n\nimport styles from './AttachBotIcon.module.scss';\n\ntype OwnProps = {\n  icon: ApiDocument;\n  theme: ISettings['theme'];\n};\n\nconst ADDITIONAL_STROKE_WIDTH = '0.5px';\nconst DARK_THEME_COLOR = 'rgb(170, 170, 170)';\nconst LIGHT_THEME_COLOR = 'rgb(112, 117, 121)';\nconst COLOR_REPLACE_PATTERN = /#fff/gi;\n\nconst AttachBotIcon: FC<OwnProps> = ({\n  icon, theme,\n}) => {\n  const { isTouchScreen } = useAppLayout();\n  const mediaData = useMedia(getDocumentMediaHash(icon, 'full'), false, ApiMediaFormat.Text);\n\n  const iconSvg = useMemo(() => {\n    if (!mediaData) return '';\n    const color = theme === 'dark' ? DARK_THEME_COLOR : LIGHT_THEME_COLOR;\n\n    const mediaDataWithReplacedColors = mediaData.replace(COLOR_REPLACE_PATTERN, color);\n    const doc = new DOMParser().parseFromString(mediaDataWithReplacedColors, 'image/svg+xml');\n    doc.querySelectorAll('path').forEach((path) => {\n      path.style.stroke = color;\n      path.style.strokeWidth = ADDITIONAL_STROKE_WIDTH;\n    });\n\n    return `data:image/svg+xml;utf8,${doc.documentElement.outerHTML}`;\n  }, [mediaData, theme]);\n\n  return (\n    <i className={buildClassName(styles.root, 'icon', !isTouchScreen && styles.compact)}>\n      <img\n        src={iconSvg}\n        alt=\"\"\n        className={buildClassName(styles.image, !isTouchScreen && styles.compact)}\n        draggable={false}\n      />\n    </i>\n  );\n};\n\nexport default memo(AttachBotIcon);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useMemo, useState,\n} from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiAttachBot } from '../../../api/types';\nimport type { IAnchorPosition, ISettings, ThreadId } from '../../../types';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Menu from '../../ui/Menu';\nimport MenuItem from '../../ui/MenuItem';\nimport AttachBotIcon from './AttachBotIcon';\n\ntype OwnProps = {\n  bot: ApiAttachBot;\n  theme: ISettings['theme'];\n  isInSideMenu?: true;\n  chatId?: string;\n  threadId?: ThreadId;\n  canShowNew?: boolean;\n  onMenuOpened: VoidFunction;\n  onMenuClosed: VoidFunction;\n};\n\nconst AttachBotItem: FC<OwnProps> = ({\n  bot,\n  theme,\n  chatId,\n  threadId,\n  isInSideMenu,\n  canShowNew,\n  onMenuOpened,\n  onMenuClosed,\n}) => {\n  const { callAttachBot, toggleAttachBot } = getActions();\n\n  const lang = useOldLang();\n\n  const icon = useMemo(() => {\n    return bot.icons.find(({ name }) => name === 'default_static')?.document;\n  }, [bot.icons]);\n\n  const [isMenuOpen, openMenu, closeMenu] = useFlag();\n  const [menuPosition, setMenuPosition] = useState<IAnchorPosition | undefined>(undefined);\n\n  const handleContextMenu = useLastCallback((e: React.UIEvent) => {\n    e.preventDefault();\n    const rect = e.currentTarget.getBoundingClientRect();\n    setMenuPosition({ x: rect.right, y: rect.bottom });\n    onMenuOpened();\n    openMenu();\n  });\n\n  const handleClick = useLastCallback(() => {\n    if (isInSideMenu) {\n      callAttachBot({\n        bot,\n        isFromSideMenu: true,\n      });\n    } else {\n      callAttachBot({\n        bot,\n        chatId: chatId!,\n        threadId,\n      });\n    }\n  });\n\n  const handleCloseMenu = useLastCallback(() => {\n    closeMenu();\n    onMenuClosed();\n  });\n\n  const handleCloseAnimationEnd = useLastCallback(() => {\n    setMenuPosition(undefined);\n  });\n\n  const handleRemoveBot = useLastCallback(() => {\n    toggleAttachBot({\n      botId: bot.id,\n      isEnabled: false,\n    });\n  });\n\n  return (\n    <MenuItem\n      key={bot.id}\n      customIcon={icon && <AttachBotIcon icon={icon} theme={theme} />}\n      icon={!icon ? 'bots' : undefined}\n      onClick={handleClick}\n      onContextMenu={handleContextMenu}\n    >\n      {bot.shortName}\n      {canShowNew && bot.isDisclaimerNeeded && <span className=\"menu-item-badge\">{lang('New')}</span>}\n      {menuPosition && (\n        <Menu\n          isOpen={isMenuOpen}\n          positionX=\"right\"\n          style={`left: ${menuPosition.x}px;top: ${menuPosition.y}px;`}\n          className=\"bot-attach-context-menu\"\n          autoClose\n          withPortal\n          onClose={handleCloseMenu}\n          onCloseAnimationEnd={handleCloseAnimationEnd}\n        >\n          <MenuItem icon=\"stop\" destructive onClick={handleRemoveBot}>{lang('WebApp.RemoveBot')}</MenuItem>\n        </Menu>\n      )}\n\n    </MenuItem>\n  );\n};\n\nexport default memo(AttachBotItem);\n","import type { FC } from '../../../lib/teact/teact';\nimport React from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './CustomEmojiTooltip';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst CustomEmojiTooltipAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const CustomEmojiTooltip = useModuleLoader(Bundles.Extra, 'CustomEmojiTooltip', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return CustomEmojiTooltip ? <CustomEmojiTooltip {...props} /> : undefined;\n};\n\nexport default CustomEmojiTooltipAsync;\n","import type { FC } from '../../../lib/teact/teact';\nimport React from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './CustomSendMenu';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst CustomSendMenuAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const CustomSend = useModuleLoader(Bundles.Extra, 'CustomSendMenu', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return CustomSend ? <CustomSend {...props} /> : undefined;\n};\n\nexport default CustomSendMenuAsync;\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo } from '../../../lib/teact/teact';\n\nimport buildClassName from '../../../util/buildClassName';\n\nimport useFlag from '../../../hooks/useFlag';\n\nimport './DropTarget.scss';\n\nexport type OwnProps = {\n  isQuick?: boolean;\n  isGeneric?: boolean;\n  onFileSelect: (e: React.DragEvent<HTMLDivElement>) => void;\n};\n\nconst DropTarget: FC<OwnProps> = ({ isQuick, isGeneric, onFileSelect }) => {\n  const [isHovered, markHovered, unmarkHovered] = useFlag();\n\n  const handleDragLeave = (e: React.DragEvent<HTMLDivElement>) => {\n    const { relatedTarget: toTarget } = e;\n\n    if (toTarget) {\n      e.stopPropagation();\n    }\n\n    unmarkHovered();\n  };\n\n  const className = buildClassName(\n    'DropTarget',\n    isHovered && 'hovered',\n  );\n\n  return (\n    <div\n      className={className}\n      onDrop={onFileSelect}\n      onDragEnter={markHovered}\n      onDragLeave={handleDragLeave}\n      data-dropzone\n    >\n      <div className=\"target-content\">\n        <div className={`icon icon-${isQuick ? 'photo' : 'document'}`} />\n        <div className=\"title\">Drop files here to send them</div>\n        {!isGeneric && <div className=\"description\">{isQuick ? 'in a quick way' : 'without compression'}</div>}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(DropTarget);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useEffect, useRef } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiMessage } from '../../../api/types';\n\nimport { canReplaceMessageMedia } from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\nimport captureEscKeyListener from '../../../util/captureEscKeyListener';\nimport buildAttachment from './helpers/buildAttachment';\nimport getFilesFromDataTransferItems from './helpers/getFilesFromDataTransferItems';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\nimport usePreviousDeprecated from '../../../hooks/usePreviousDeprecated';\nimport useShowTransitionDeprecated from '../../../hooks/useShowTransitionDeprecated';\n\nimport Portal from '../../ui/Portal';\nimport DropTarget from './DropTarget';\n\nimport './DropArea.scss';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  withQuick?: boolean;\n  onHide: NoneToVoidFunction;\n  onFileSelect: (files: File[], suggestCompression?: boolean) => void;\n  editingMessage?: ApiMessage | undefined;\n};\n\nexport enum DropAreaState {\n  None = 'none',\n  Document = 'document',\n  QuickFile = 'quick_file',\n}\n\nconst DROP_LEAVE_TIMEOUT_MS = 150;\n\nconst DropArea: FC<OwnProps> = ({\n  isOpen, withQuick, onHide, onFileSelect, editingMessage,\n}) => {\n  const lang = useOldLang();\n  const { showNotification } = getActions();\n  // eslint-disable-next-line no-null/no-null\n  const hideTimeoutRef = useRef<number>(null);\n  const prevWithQuick = usePreviousDeprecated(withQuick);\n  const { shouldRender, transitionClassNames } = useShowTransitionDeprecated(isOpen);\n  const isInAlbum = editingMessage && editingMessage?.groupedId;\n\n  useEffect(() => (isOpen ? captureEscKeyListener(onHide) : undefined), [isOpen, onHide]);\n\n  const handleFilesDrop = useLastCallback(async (e: React.DragEvent<HTMLDivElement>) => {\n    const { dataTransfer: dt } = e;\n    let files: File[] = [];\n\n    if (dt.files && dt.files.length > 0 && (!dt.items || !dt.items.length)) {\n      files = files.concat(Array.from(dt.files));\n    } else if (dt.items && dt.items.length > 0) {\n      const folderFiles = await getFilesFromDataTransferItems(dt.items);\n      const newAttachment = folderFiles && await buildAttachment(folderFiles[0].name, folderFiles[0]);\n      const canReplace = editingMessage && newAttachment && canReplaceMessageMedia(editingMessage, newAttachment);\n\n      if (canReplace) {\n        showNotification({ message: lang(isInAlbum ? 'lng_edit_media_album_error' : 'lng_edit_media_invalid_file') });\n        return;\n      }\n      if (folderFiles?.length) {\n        files = files.concat(folderFiles);\n      }\n    }\n\n    onHide();\n    onFileSelect(files, withQuick ? false : undefined);\n  });\n\n  const handleQuickFilesDrop = useLastCallback((e: React.DragEvent<HTMLDivElement>) => {\n    const { dataTransfer: dt } = e;\n\n    if (dt.files && dt.files.length > 0) {\n      onHide();\n      onFileSelect(Array.from(dt.files), true);\n    }\n  });\n\n  const handleDragLeave = useLastCallback((e: React.DragEvent<HTMLDivElement>) => {\n    e.stopPropagation();\n\n    const { target: fromTarget, relatedTarget: toTarget } = e;\n\n    // Esc button pressed during drag event\n    if (\n      (fromTarget as HTMLDivElement).matches('.DropTarget, .DropArea') && (\n        !toTarget || !(toTarget as HTMLDivElement)!.matches('.DropTarget, .DropArea')\n      )\n    ) {\n      hideTimeoutRef.current = window.setTimeout(() => {\n        onHide();\n      }, DROP_LEAVE_TIMEOUT_MS);\n    }\n  });\n\n  const handleDragOver = () => {\n    if (hideTimeoutRef.current) {\n      window.clearTimeout(hideTimeoutRef.current);\n    }\n  };\n\n  if (!shouldRender) {\n    return undefined;\n  }\n\n  const shouldRenderQuick = withQuick || prevWithQuick;\n\n  const className = buildClassName(\n    'DropArea',\n    transitionClassNames,\n  );\n\n  return (\n    <Portal containerId=\"#middle-column-portals\">\n      <div\n        className={className}\n        onDragLeave={handleDragLeave}\n        onDragOver={handleDragOver}\n        onDrop={onHide}\n        onClick={onHide}\n      >\n        <DropTarget onFileSelect={handleFilesDrop} isGeneric={!shouldRenderQuick} />\n        {shouldRenderQuick && <DropTarget onFileSelect={handleQuickFilesDrop} isQuick />}\n      </div>\n    </Portal>\n  );\n};\n\nexport default memo(DropArea);\n","import type { FC } from '../../../lib/teact/teact';\nimport React from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './EmojiTooltip';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst EmojiTooltipAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const EmojiTooltip = useModuleLoader(Bundles.Extra, 'EmojiTooltip', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return EmojiTooltip ? <EmojiTooltip {...props} /> : undefined;\n};\n\nexport default EmojiTooltipAsync;\n","import { requestMeasure, requestMutation } from '../lib/fasterdom/fasterdom';\nimport safePlay from './safePlay';\n\ntype AbsoluteVideoOptions = {\n  position: { x: number; y: number };\n  noLoop?: boolean;\n  size: number;\n  style?: string;\n};\n\nexport default class AbsoluteVideo {\n  private video?: HTMLVideoElement;\n\n  private isPlaying = false;\n\n  constructor(\n    videoUrl: string,\n    private container: HTMLElement,\n    private options: AbsoluteVideoOptions,\n  ) {\n    this.video = document.createElement('video');\n    this.video.src = videoUrl;\n    this.video.disablePictureInPicture = true;\n    this.video.muted = true;\n    if (options.style) {\n      this.video.setAttribute('style', options.style);\n    }\n    this.video.style.position = 'absolute';\n    this.video.load();\n\n    if (!this.options.noLoop) {\n      this.video.loop = true;\n    }\n\n    requestMutation(() => {\n      this.container.appendChild(this.video!);\n\n      this.recalculatePositionAndSize();\n    });\n  }\n\n  public play() {\n    if (this.isPlaying || !this.video) return;\n    this.recalculatePositionAndSize();\n    if (this.video.paused) {\n      safePlay(this.video);\n    }\n    this.isPlaying = true;\n  }\n\n  public pause() {\n    if (!this.isPlaying || !this.video) return;\n    if (!this.video.paused) {\n      this.video.pause();\n    }\n    this.isPlaying = false;\n  }\n\n  public destroy() {\n    this.pause();\n    this.video?.remove();\n    this.video = undefined;\n  }\n\n  public updatePosition(position: AbsoluteVideoOptions['position']) {\n    this.options.position = position;\n    this.recalculatePositionAndSize();\n  }\n\n  private recalculatePositionAndSize() {\n    const { size, position: { x, y } } = this.options;\n    requestMeasure(() => {\n      if (!this.video) return;\n      const video = this.video;\n      const { width, height } = this.container.getBoundingClientRect();\n      requestMutation(() => {\n        video.style.left = `${Math.round(x * width)}px`;\n        video.style.top = `${Math.round(y * height)}px`;\n        video.style.width = `${size}px`;\n        video.style.height = `${size}px`;\n      });\n    });\n  }\n}\n","import {\n  useEffect, useLayoutEffect, useRef,\n} from '../../../../lib/teact/teact';\nimport { getGlobal } from '../../../../global';\n\nimport type { ApiSticker } from '../../../../api/types';\nimport type { Signal } from '../../../../util/signals';\n\nimport { requestMeasure } from '../../../../lib/fasterdom/fasterdom';\nimport { ensureRLottie } from '../../../../lib/rlottie/RLottie.async';\nimport { selectIsAlwaysHighPriorityEmoji } from '../../../../global/selectors';\nimport AbsoluteVideo from '../../../../util/AbsoluteVideo';\nimport {\n  addCustomEmojiInputRenderCallback,\n  getCustomEmojiMediaDataForInput,\n} from '../../../../util/emoji/customEmojiManager';\nimport { round } from '../../../../util/math';\nimport { hexToRgb } from '../../../../util/switchTheme';\nimport { REM } from '../../../common/helpers/mediaDimensions';\n\nimport useColorFilter from '../../../../hooks/stickers/useColorFilter';\nimport useDynamicColorListener from '../../../../hooks/stickers/useDynamicColorListener';\nimport useEffectWithPrevDeps from '../../../../hooks/useEffectWithPrevDeps';\nimport useLastCallback from '../../../../hooks/useLastCallback';\nimport useResizeObserver from '../../../../hooks/useResizeObserver';\nimport useThrottledCallback from '../../../../hooks/useThrottledCallback';\nimport useBackgroundMode from '../../../../hooks/window/useBackgroundMode';\nimport useDevicePixelRatio from '../../../../hooks/window/useDevicePixelRatio';\n\nconst SIZE = 1.25 * REM;\nconst THROTTLE_MS = 300;\n\ntype CustomEmojiPlayer = {\n  play: () => void;\n  pause: () => void;\n  destroy: () => void;\n  updatePosition: (x: number, y: number) => void;\n};\n\nexport default function useInputCustomEmojis(\n  getHtml: Signal<string>,\n  inputRef: React.RefObject<HTMLDivElement>,\n  sharedCanvasRef: React.RefObject<HTMLCanvasElement>,\n  sharedCanvasHqRef: React.RefObject<HTMLCanvasElement>,\n  absoluteContainerRef: React.RefObject<HTMLElement>,\n  prefixId: string,\n  canPlayAnimatedEmojis: boolean,\n  isReady?: boolean,\n  isActive?: boolean,\n) {\n  const customColor = useDynamicColorListener(inputRef, !isReady);\n  const colorFilter = useColorFilter(customColor, true);\n  const dpr = useDevicePixelRatio();\n  const playersById = useRef<Map<string, CustomEmojiPlayer>>(new Map());\n\n  const clearPlayers = useLastCallback((ids: string[]) => {\n    ids.forEach((id) => {\n      const player = playersById.current.get(id);\n      if (player) {\n        player.destroy();\n        playersById.current.delete(id);\n      }\n    });\n  });\n\n  const synchronizeElements = useLastCallback(() => {\n    if (!isReady || !inputRef.current || !sharedCanvasRef.current || !sharedCanvasHqRef.current) return;\n\n    const global = getGlobal();\n    const playerIdsToClear = new Set(playersById.current.keys());\n    const customEmojis = Array.from(inputRef.current.querySelectorAll<HTMLElement>('.custom-emoji'));\n\n    customEmojis.forEach((element) => {\n      if (!element.dataset.uniqueId) {\n        return;\n      }\n      const playerId = `${prefixId}${element.dataset.uniqueId}${customColor || ''}`;\n      const documentId = element.dataset.documentId!;\n\n      playerIdsToClear.delete(playerId);\n\n      const mediaUrl = getCustomEmojiMediaDataForInput(documentId);\n      if (!mediaUrl) {\n        return;\n      }\n\n      const canvasBounds = sharedCanvasRef.current!.getBoundingClientRect();\n      const elementBounds = element.getBoundingClientRect();\n      const x = round((elementBounds.left - canvasBounds.left) / canvasBounds.width, 4);\n      const y = round((elementBounds.top - canvasBounds.top) / canvasBounds.height, 4);\n\n      if (playersById.current.has(playerId)) {\n        const player = playersById.current.get(playerId)!;\n        player.updatePosition(x, y);\n        return;\n      }\n\n      const customEmoji = global.customEmojis.byId[documentId];\n      if (!customEmoji) {\n        return;\n      }\n      const isHq = customEmoji?.stickerSetInfo && selectIsAlwaysHighPriorityEmoji(global, customEmoji.stickerSetInfo);\n      const renderId = [\n        prefixId, documentId, customColor, dpr,\n      ].filter(Boolean).join('_');\n\n      createPlayer({\n        customEmoji,\n        sharedCanvasRef,\n        sharedCanvasHqRef,\n        absoluteContainerRef,\n        renderId,\n        viewId: playerId,\n        mediaUrl,\n        isHq,\n        position: { x, y },\n        textColor: customColor,\n        colorFilter,\n      }).then((animation) => {\n        if (canPlayAnimatedEmojis) {\n          animation.play();\n        }\n\n        playersById.current.set(playerId, animation);\n      });\n    });\n\n    clearPlayers(Array.from(playerIdsToClear));\n  });\n\n  useEffect(() => {\n    return addCustomEmojiInputRenderCallback(synchronizeElements);\n  }, [synchronizeElements]);\n\n  useEffect(() => {\n    const activePlayersById = playersById.current;\n    // Always clear players on unmount\n    return () => {\n      clearPlayers(Array.from(activePlayersById.keys()));\n    };\n  }, []);\n\n  useEffect(() => {\n    if (!getHtml() || !inputRef.current || !sharedCanvasRef.current || !isActive || !isReady) {\n      clearPlayers(Array.from(playersById.current.keys()));\n      return;\n    }\n\n    // Wait one frame for DOM to update\n    requestMeasure(() => {\n      synchronizeElements();\n    });\n  }, [getHtml, synchronizeElements, inputRef, clearPlayers, sharedCanvasRef, isActive, isReady]);\n\n  useLayoutEffect(() => {\n    document.documentElement.style.setProperty('--input-custom-emoji-filter', colorFilter || 'none');\n  }, [colorFilter]);\n\n  useEffectWithPrevDeps(([prevCustomColor]) => {\n    if (prevCustomColor !== undefined && customColor !== prevCustomColor) {\n      synchronizeElements();\n    }\n  }, [customColor, synchronizeElements]);\n\n  const throttledSynchronizeElements = useThrottledCallback(\n    synchronizeElements,\n    [synchronizeElements],\n    THROTTLE_MS,\n    false,\n  );\n  useResizeObserver(sharedCanvasRef, throttledSynchronizeElements);\n  useEffectWithPrevDeps(([prevDpr]) => {\n    if (dpr !== prevDpr) {\n      clearPlayers(Array.from(playersById.current.keys()));\n      synchronizeElements();\n    }\n  }, [dpr, synchronizeElements]);\n\n  const freezeAnimation = useLastCallback(() => {\n    playersById.current.forEach((player) => {\n      player.pause();\n    });\n  });\n\n  const unfreezeAnimation = useLastCallback(() => {\n    if (!canPlayAnimatedEmojis) {\n      return;\n    }\n\n    playersById.current?.forEach((player) => {\n      player.play();\n    });\n  });\n\n  const unfreezeAnimationOnRaf = useLastCallback(() => {\n    requestMeasure(unfreezeAnimation);\n  });\n\n  // Pausing frame may not happen in background,\n  // so we need to make sure it happens right after focusing,\n  // then we can play again.\n  useBackgroundMode(freezeAnimation, unfreezeAnimationOnRaf);\n}\n\nasync function createPlayer({\n  customEmoji,\n  sharedCanvasRef,\n  sharedCanvasHqRef,\n  absoluteContainerRef,\n  renderId,\n  viewId,\n  mediaUrl,\n  position,\n  isHq,\n  textColor,\n  colorFilter,\n}: {\n  customEmoji: ApiSticker;\n  sharedCanvasRef: React.RefObject<HTMLCanvasElement>;\n  sharedCanvasHqRef: React.RefObject<HTMLCanvasElement>;\n  absoluteContainerRef: React.RefObject<HTMLElement>;\n  renderId: string;\n  viewId: string;\n  mediaUrl: string;\n  position: { x: number; y: number };\n  isHq?: boolean;\n  textColor?: string;\n  colorFilter?: string;\n}): Promise<CustomEmojiPlayer> {\n  if (customEmoji.isLottie) {\n    const color = customEmoji.shouldUseTextColor && textColor ? hexToRgb(textColor) : undefined;\n    const RLottie = await ensureRLottie();\n    const lottie = RLottie.init(\n      mediaUrl,\n      isHq ? sharedCanvasHqRef.current! : sharedCanvasRef.current!,\n      renderId,\n      {\n        size: SIZE,\n        coords: position,\n        isLowPriority: !isHq,\n      },\n      viewId,\n      color ? [color.r, color.g, color.b] : undefined,\n    );\n\n    return {\n      play: () => lottie.play(),\n      pause: () => lottie.pause(),\n      destroy: () => lottie.removeView(viewId),\n      updatePosition: (x: number, y: number) => {\n        return lottie.setSharedCanvasCoords(viewId, { x, y });\n      },\n    };\n  }\n\n  if (customEmoji.isVideo) {\n    const style = customEmoji.shouldUseTextColor && colorFilter ? `filter: ${colorFilter};` : undefined;\n    const absoluteVideo = new AbsoluteVideo(\n      mediaUrl,\n      absoluteContainerRef.current!,\n      { size: SIZE, position, style },\n    );\n    return {\n      play: () => absoluteVideo.play(),\n      pause: () => absoluteVideo.pause(),\n      destroy: () => absoluteVideo.destroy(),\n      updatePosition: (x: number, y: number) => absoluteVideo.updatePosition({ x, y }),\n    };\n  }\n\n  throw new Error('Unsupported custom emoji type');\n}\n","import type { FC } from '../../../lib/teact/teact';\nimport React from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './TextFormatter';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst TextFormatterAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const TextFormatter = useModuleLoader(Bundles.Extra, 'TextFormatter', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return TextFormatter ? <TextFormatter {...props} /> : undefined;\n};\n\nexport default TextFormatterAsync;\n","import type { ChangeEvent, RefObject } from 'react';\nimport type { FC } from '../../../lib/teact/teact';\nimport React, {\n  getIsHeavyAnimating,\n  memo, useEffect, useLayoutEffect,\n  useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiInputMessageReplyInfo } from '../../../api/types';\nimport type { IAnchorPosition, ISettings, ThreadId } from '../../../types';\nimport type { Signal } from '../../../util/signals';\n\nimport { EDITABLE_INPUT_ID } from '../../../config';\nimport { requestForcedReflow, requestMutation } from '../../../lib/fasterdom/fasterdom';\nimport { selectCanPlayAnimatedEmojis, selectDraft, selectIsInSelectMode } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport captureKeyboardListeners from '../../../util/captureKeyboardListeners';\nimport { getIsDirectTextInputDisabled } from '../../../util/directInputManager';\nimport parseEmojiOnlyString from '../../../util/emoji/parseEmojiOnlyString';\nimport focusEditableElement from '../../../util/focusEditableElement';\nimport { debounce } from '../../../util/schedulers';\nimport {\n  IS_ANDROID, IS_EMOJI_SUPPORTED, IS_IOS, IS_TOUCH_ENV,\n} from '../../../util/windowEnvironment';\nimport renderText from '../../common/helpers/renderText';\nimport { isSelectionInsideInput } from './helpers/selection';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useDerivedState from '../../../hooks/useDerivedState';\nimport useFlag from '../../../hooks/useFlag';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useInputCustomEmojis from './hooks/useInputCustomEmojis';\n\nimport Button from '../../ui/Button';\nimport TextTimer from '../../ui/TextTimer';\nimport TextFormatter from './TextFormatter.async';\n\nconst CONTEXT_MENU_CLOSE_DELAY_MS = 100;\n// Focus slows down animation, also it breaks transition layout in Chrome\nconst FOCUS_DELAY_MS = 350;\nconst TRANSITION_DURATION_FACTOR = 50;\n\nconst SCROLLER_CLASS = 'input-scroller';\nconst INPUT_WRAPPER_CLASS = 'message-input-wrapper';\n\ntype OwnProps = {\n  ref?: RefObject<HTMLDivElement>;\n  id: string;\n  chatId: string;\n  threadId: ThreadId;\n  isAttachmentModalInput?: boolean;\n  isStoryInput?: boolean;\n  customEmojiPrefix: string;\n  editableInputId?: string;\n  isReady: boolean;\n  isActive: boolean;\n  getHtml: Signal<string>;\n  placeholder: string;\n  timedPlaceholderLangKey?: string;\n  timedPlaceholderDate?: number;\n  forcedPlaceholder?: string;\n  noFocusInterception?: boolean;\n  canAutoFocus: boolean;\n  shouldSuppressFocus?: boolean;\n  shouldSuppressTextFormatter?: boolean;\n  canSendPlainText?: boolean;\n  onUpdate: (html: string) => void;\n  onSuppressedFocus?: () => void;\n  onSend: () => void;\n  onScroll?: (event: React.UIEvent<HTMLElement>) => void;\n  captionLimit?: number;\n  onFocus?: NoneToVoidFunction;\n  onBlur?: NoneToVoidFunction;\n  isNeedPremium?: boolean;\n};\n\ntype StateProps = {\n  replyInfo?: ApiInputMessageReplyInfo;\n  isSelectModeActive?: boolean;\n  messageSendKeyCombo?: ISettings['messageSendKeyCombo'];\n  canPlayAnimatedEmojis: boolean;\n};\n\nconst MAX_ATTACHMENT_MODAL_INPUT_HEIGHT = 160;\nconst MAX_STORY_MODAL_INPUT_HEIGHT = 128;\nconst TAB_INDEX_PRIORITY_TIMEOUT = 2000;\n// Heuristics allowing the user to make a triple click\nconst SELECTION_RECALCULATE_DELAY_MS = 260;\nconst TEXT_FORMATTER_SAFE_AREA_PX = 140;\n// For some reason Safari inserts `<br>` after user removes text from input\nconst SAFARI_BR = '<br>';\nconst IGNORE_KEYS = [\n  'Esc', 'Escape', 'Enter', 'PageUp', 'PageDown', 'Meta', 'Alt', 'Ctrl', 'ArrowDown', 'ArrowUp', 'Control', 'Shift',\n];\n\nfunction clearSelection() {\n  const selection = window.getSelection();\n  if (!selection) {\n    return;\n  }\n\n  if (selection.removeAllRanges) {\n    selection.removeAllRanges();\n  } else if (selection.empty) {\n    selection.empty();\n  }\n}\n\nconst MessageInput: FC<OwnProps & StateProps> = ({\n  ref,\n  id,\n  chatId,\n  captionLimit,\n  isAttachmentModalInput,\n  isStoryInput,\n  customEmojiPrefix,\n  editableInputId,\n  isReady,\n  isActive,\n  getHtml,\n  placeholder,\n  timedPlaceholderLangKey,\n  timedPlaceholderDate,\n  forcedPlaceholder,\n  canSendPlainText,\n  canAutoFocus,\n  noFocusInterception,\n  shouldSuppressFocus,\n  shouldSuppressTextFormatter,\n  replyInfo,\n  isSelectModeActive,\n  canPlayAnimatedEmojis,\n  messageSendKeyCombo,\n  onUpdate,\n  onSuppressedFocus,\n  onSend,\n  onScroll,\n  onFocus,\n  onBlur,\n  isNeedPremium,\n}) => {\n  const {\n    editLastMessage,\n    replyToNextMessage,\n    showAllowedMessageTypesNotification,\n    openPremiumModal,\n  } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  let inputRef = useRef<HTMLDivElement>(null);\n  if (ref) {\n    inputRef = ref;\n  }\n\n  // eslint-disable-next-line no-null/no-null\n  const selectionTimeoutRef = useRef<number>(null);\n  // eslint-disable-next-line no-null/no-null\n  const cloneRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const scrollerCloneRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const sharedCanvasRef = useRef<HTMLCanvasElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const sharedCanvasHqRef = useRef<HTMLCanvasElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const absoluteContainerRef = useRef<HTMLDivElement>(null);\n\n  const lang = useOldLang();\n  const isContextMenuOpenRef = useRef(false);\n  const [isTextFormatterOpen, openTextFormatter, closeTextFormatter] = useFlag();\n  const [textFormatterAnchorPosition, setTextFormatterAnchorPosition] = useState<IAnchorPosition>();\n  const [selectedRange, setSelectedRange] = useState<Range>();\n  const [isTextFormatterDisabled, setIsTextFormatterDisabled] = useState<boolean>(false);\n  const { isMobile } = useAppLayout();\n  const isMobileDevice = isMobile && (IS_IOS || IS_ANDROID);\n\n  const [shouldDisplayTimer, setShouldDisplayTimer] = useState(false);\n\n  useEffect(() => {\n    setShouldDisplayTimer(Boolean(timedPlaceholderLangKey && timedPlaceholderDate));\n  }, [timedPlaceholderDate, timedPlaceholderLangKey]);\n\n  const handleTimerEnd = useLastCallback(() => {\n    setShouldDisplayTimer(false);\n  });\n\n  useInputCustomEmojis(\n    getHtml,\n    inputRef,\n    sharedCanvasRef,\n    sharedCanvasHqRef,\n    absoluteContainerRef,\n    customEmojiPrefix,\n    canPlayAnimatedEmojis,\n    isReady,\n    isActive,\n  );\n\n  const maxInputHeight = isAttachmentModalInput\n    ? MAX_ATTACHMENT_MODAL_INPUT_HEIGHT\n    : isStoryInput ? MAX_STORY_MODAL_INPUT_HEIGHT : (isMobile ? 256 : 416);\n  const updateInputHeight = useLastCallback((willSend = false) => {\n    requestForcedReflow(() => {\n      const scroller = inputRef.current!.closest<HTMLDivElement>(`.${SCROLLER_CLASS}`)!;\n      const currentHeight = Number(scroller.style.height.replace('px', ''));\n      const clone = scrollerCloneRef.current!;\n      const { scrollHeight } = clone;\n      const newHeight = Math.min(scrollHeight, maxInputHeight);\n\n      if (newHeight === currentHeight) {\n        return undefined;\n      }\n\n      const isOverflown = scrollHeight > maxInputHeight;\n\n      function exec() {\n        const transitionDuration = Math.round(\n          TRANSITION_DURATION_FACTOR * Math.log(Math.abs(newHeight - currentHeight)),\n        );\n        scroller.style.height = `${newHeight}px`;\n        scroller.style.transitionDuration = `${transitionDuration}ms`;\n        scroller.classList.toggle('overflown', isOverflown);\n      }\n\n      if (willSend) {\n        // Delay to next frame to sync with sending animation\n        requestMutation(exec);\n        return undefined;\n      } else {\n        return exec;\n      }\n    });\n  });\n\n  useLayoutEffect(() => {\n    if (!isAttachmentModalInput) return;\n    updateInputHeight(false);\n  }, [isAttachmentModalInput, updateInputHeight]);\n\n  const htmlRef = useRef(getHtml());\n  useLayoutEffect(() => {\n    const html = isActive ? getHtml() : '';\n\n    if (html !== inputRef.current!.innerHTML) {\n      inputRef.current!.innerHTML = html;\n    }\n\n    if (html !== cloneRef.current!.innerHTML) {\n      cloneRef.current!.innerHTML = html;\n    }\n\n    if (html !== htmlRef.current) {\n      htmlRef.current = html;\n\n      updateInputHeight(!html);\n    }\n  }, [getHtml, isActive, updateInputHeight]);\n\n  const chatIdRef = useRef(chatId);\n  chatIdRef.current = chatId;\n  const focusInput = useLastCallback(() => {\n    if (!inputRef.current || isNeedPremium) {\n      return;\n    }\n\n    if (getIsHeavyAnimating()) {\n      setTimeout(focusInput, FOCUS_DELAY_MS);\n      return;\n    }\n\n    focusEditableElement(inputRef.current!);\n  });\n\n  const handleCloseTextFormatter = useLastCallback(() => {\n    closeTextFormatter();\n    clearSelection();\n  });\n\n  function checkSelection() {\n    // Disable the formatter on iOS devices for now.\n    if (IS_IOS) {\n      return false;\n    }\n\n    const selection = window.getSelection();\n    if (!selection || !selection.rangeCount || isContextMenuOpenRef.current) {\n      closeTextFormatter();\n      if (IS_ANDROID) {\n        setIsTextFormatterDisabled(false);\n      }\n      return false;\n    }\n\n    const selectionRange = selection.getRangeAt(0);\n    const selectedText = selectionRange.toString().trim();\n    if (\n      shouldSuppressTextFormatter\n      || !isSelectionInsideInput(selectionRange, editableInputId || EDITABLE_INPUT_ID)\n      || !selectedText\n      || parseEmojiOnlyString(selectedText)\n      || !selectionRange.START_TO_END\n    ) {\n      closeTextFormatter();\n      return false;\n    }\n\n    return true;\n  }\n\n  function processSelection() {\n    if (!checkSelection()) {\n      return;\n    }\n\n    if (isTextFormatterDisabled) {\n      return;\n    }\n\n    const selectionRange = window.getSelection()!.getRangeAt(0);\n    const selectionRect = selectionRange.getBoundingClientRect();\n    const scrollerRect = inputRef.current!.closest<HTMLDivElement>(`.${SCROLLER_CLASS}`)!.getBoundingClientRect();\n\n    let x = (selectionRect.left + selectionRect.width / 2) - scrollerRect.left;\n\n    if (x < TEXT_FORMATTER_SAFE_AREA_PX) {\n      x = TEXT_FORMATTER_SAFE_AREA_PX;\n    } else if (x > scrollerRect.width - TEXT_FORMATTER_SAFE_AREA_PX) {\n      x = scrollerRect.width - TEXT_FORMATTER_SAFE_AREA_PX;\n    }\n\n    setTextFormatterAnchorPosition({\n      x,\n      y: selectionRect.top - scrollerRect.top,\n    });\n\n    setSelectedRange(selectionRange);\n    openTextFormatter();\n  }\n\n  function processSelectionWithTimeout() {\n    if (selectionTimeoutRef.current) {\n      window.clearTimeout(selectionTimeoutRef.current);\n    }\n    // Small delay to allow browser properly recalculate selection\n    selectionTimeoutRef.current = window.setTimeout(processSelection, SELECTION_RECALCULATE_DELAY_MS);\n  }\n\n  function handleMouseDown(e: React.MouseEvent<HTMLDivElement, MouseEvent>) {\n    if (e.button !== 2) {\n      const listenerEl = e.currentTarget.closest(`.${INPUT_WRAPPER_CLASS}`) || e.target;\n\n      listenerEl.addEventListener('mouseup', processSelectionWithTimeout, { once: true });\n      return;\n    }\n\n    if (isContextMenuOpenRef.current) {\n      return;\n    }\n\n    isContextMenuOpenRef.current = true;\n\n    function handleCloseContextMenu(e2: KeyboardEvent | MouseEvent) {\n      if (e2 instanceof KeyboardEvent && e2.key !== 'Esc' && e2.key !== 'Escape') {\n        return;\n      }\n\n      setTimeout(() => {\n        isContextMenuOpenRef.current = false;\n      }, CONTEXT_MENU_CLOSE_DELAY_MS);\n\n      window.removeEventListener('keydown', handleCloseContextMenu);\n      window.removeEventListener('mousedown', handleCloseContextMenu);\n    }\n\n    document.addEventListener('mousedown', handleCloseContextMenu);\n    document.addEventListener('keydown', handleCloseContextMenu);\n  }\n\n  function handleKeyDown(e: React.KeyboardEvent<HTMLDivElement>) {\n    // https://levelup.gitconnected.com/javascript-events-handlers-keyboard-and-load-events-1b3e46a6b0c3#1960\n    const { isComposing } = e;\n\n    const html = getHtml();\n    if (!isComposing && !html && (e.metaKey || e.ctrlKey)) {\n      const targetIndexDelta = e.key === 'ArrowDown' ? 1 : e.key === 'ArrowUp' ? -1 : undefined;\n      if (targetIndexDelta) {\n        e.preventDefault();\n\n        replyToNextMessage({ targetIndexDelta });\n        return;\n      }\n    }\n\n    if (!isComposing && e.key === 'Enter' && !e.shiftKey) {\n      if (\n        !isMobileDevice\n        && (\n          (messageSendKeyCombo === 'enter' && !e.shiftKey)\n          || (messageSendKeyCombo === 'ctrl-enter' && (e.ctrlKey || e.metaKey))\n        )\n      ) {\n        e.preventDefault();\n\n        closeTextFormatter();\n        onSend();\n      }\n    } else if (!isComposing && e.key === 'ArrowUp' && !html && !e.metaKey && !e.ctrlKey && !e.altKey) {\n      e.preventDefault();\n      editLastMessage();\n    } else {\n      e.target.addEventListener('keyup', processSelectionWithTimeout, { once: true });\n    }\n  }\n\n  function handleChange(e: ChangeEvent<HTMLDivElement>) {\n    const { innerHTML, textContent } = e.currentTarget;\n\n    onUpdate(innerHTML === SAFARI_BR ? '' : innerHTML);\n\n    // Reset focus on the input to remove any active styling when input is cleared\n    if (\n      !IS_TOUCH_ENV\n      && (!textContent || !textContent.length)\n      // When emojis are not supported, innerHTML contains an emoji img tag that doesn't exist in the textContext\n      && !(!IS_EMOJI_SUPPORTED && innerHTML.includes('emoji-small'))\n      && !(innerHTML.includes('custom-emoji'))\n    ) {\n      const selection = window.getSelection()!;\n      if (selection) {\n        inputRef.current!.blur();\n        selection.removeAllRanges();\n        focusEditableElement(inputRef.current!, true);\n      }\n    }\n  }\n\n  function handleAndroidContextMenu(e: React.MouseEvent<HTMLDivElement, MouseEvent>) {\n    if (!checkSelection()) {\n      return;\n    }\n\n    setIsTextFormatterDisabled(!isTextFormatterDisabled);\n\n    if (!isTextFormatterDisabled) {\n      e.preventDefault();\n      e.stopPropagation();\n\n      processSelection();\n    } else {\n      closeTextFormatter();\n    }\n  }\n\n  function handleClick() {\n    if (isAttachmentModalInput || canSendPlainText || (isStoryInput && isNeedPremium)) return;\n    showAllowedMessageTypesNotification({ chatId });\n  }\n\n  const handleOpenPremiumModal = useLastCallback(() => openPremiumModal());\n\n  useEffect(() => {\n    if (IS_TOUCH_ENV) {\n      return;\n    }\n\n    if (canAutoFocus) {\n      focusInput();\n    }\n  }, [chatId, focusInput, replyInfo, canAutoFocus]);\n\n  useEffect(() => {\n    if (\n      !chatId\n      || editableInputId !== EDITABLE_INPUT_ID\n      || noFocusInterception\n      || isMobileDevice\n      || isSelectModeActive\n    ) {\n      return undefined;\n    }\n\n    const handleDocumentKeyDown = (e: KeyboardEvent) => {\n      if (getIsDirectTextInputDisabled()) {\n        return;\n      }\n\n      const { key } = e;\n      const target = e.target as HTMLElement | undefined;\n\n      if (!target || IGNORE_KEYS.includes(key)) {\n        return;\n      }\n\n      const input = inputRef.current!;\n      const isSelectionCollapsed = document.getSelection()?.isCollapsed;\n\n      if (\n        ((key.startsWith('Arrow') || (e.shiftKey && key === 'Shift')) && !isSelectionCollapsed)\n        || (e.code === 'KeyC' && (e.ctrlKey || e.metaKey) && target.tagName !== 'INPUT')\n      ) {\n        return;\n      }\n\n      if (\n        input\n        && target !== input\n        && target.tagName !== 'INPUT'\n        && target.tagName !== 'TEXTAREA'\n        && !target.isContentEditable\n      ) {\n        focusEditableElement(input, true, true);\n\n        const newEvent = new KeyboardEvent(e.type, e as any);\n        input.dispatchEvent(newEvent);\n      }\n    };\n\n    document.addEventListener('keydown', handleDocumentKeyDown, true);\n\n    return () => {\n      document.removeEventListener('keydown', handleDocumentKeyDown, true);\n    };\n  }, [chatId, editableInputId, isMobileDevice, isSelectModeActive, noFocusInterception]);\n\n  useEffect(() => {\n    const captureFirstTab = debounce((e: KeyboardEvent) => {\n      if (e.key === 'Tab' && !getIsDirectTextInputDisabled()) {\n        e.preventDefault();\n        requestMutation(focusInput);\n      }\n    }, TAB_INDEX_PRIORITY_TIMEOUT, true, false);\n\n    return captureKeyboardListeners({ onTab: captureFirstTab });\n  }, [focusInput]);\n\n  useEffect(() => {\n    const input = inputRef.current!;\n\n    function suppressFocus() {\n      input.blur();\n    }\n\n    if (shouldSuppressFocus) {\n      input.addEventListener('focus', suppressFocus);\n    }\n\n    return () => {\n      input.removeEventListener('focus', suppressFocus);\n    };\n  }, [shouldSuppressFocus]);\n\n  const isTouched = useDerivedState(() => Boolean(isActive && getHtml()), [isActive, getHtml]);\n\n  const className = buildClassName(\n    'form-control allow-selection',\n    isTouched && 'touched',\n    shouldSuppressFocus && 'focus-disabled',\n  );\n\n  const inputScrollerContentClass = buildClassName('input-scroller-content', isNeedPremium && 'is-need-premium');\n\n  return (\n    <div id={id} onClick={shouldSuppressFocus ? onSuppressedFocus : undefined} dir={lang.isRtl ? 'rtl' : undefined}>\n      <div\n        className={buildClassName('custom-scroll', SCROLLER_CLASS, isNeedPremium && 'is-need-premium')}\n        onScroll={onScroll}\n        onClick={!isAttachmentModalInput && !canSendPlainText ? handleClick : undefined}\n      >\n        <div className={inputScrollerContentClass}>\n          <div\n            ref={inputRef}\n            id={editableInputId || EDITABLE_INPUT_ID}\n            className={className}\n            contentEditable={isAttachmentModalInput || canSendPlainText}\n            role=\"textbox\"\n            dir=\"auto\"\n            tabIndex={0}\n            onClick={focusInput}\n            onChange={handleChange}\n            onKeyDown={handleKeyDown}\n            onMouseDown={handleMouseDown}\n            onContextMenu={IS_ANDROID ? handleAndroidContextMenu : undefined}\n            onTouchCancel={IS_ANDROID ? processSelectionWithTimeout : undefined}\n            aria-label={placeholder}\n            onFocus={!isNeedPremium ? onFocus : undefined}\n            onBlur={!isNeedPremium ? onBlur : undefined}\n          />\n          {!forcedPlaceholder && (\n            <span\n              className={buildClassName(\n                'placeholder-text',\n                !isAttachmentModalInput && !canSendPlainText && 'with-icon',\n                isNeedPremium && 'is-need-premium',\n              )}\n              dir=\"auto\"\n            >\n              {!isAttachmentModalInput && !canSendPlainText\n                && <i className=\"icon icon-lock-badge placeholder-icon\" />}\n              {shouldDisplayTimer ? (\n                <TextTimer langKey={timedPlaceholderLangKey!} endsAt={timedPlaceholderDate!} onEnd={handleTimerEnd} />\n              ) : placeholder}\n              {isStoryInput && isNeedPremium && (\n                <Button className=\"unlock-button\" size=\"tiny\" color=\"adaptive\" onClick={handleOpenPremiumModal}>\n                  {lang('StoryRepliesLockedButton')}\n                </Button>\n              )}\n            </span>\n          )}\n          <canvas ref={sharedCanvasRef} className=\"shared-canvas\" />\n          <canvas ref={sharedCanvasHqRef} className=\"shared-canvas\" />\n          <div ref={absoluteContainerRef} className=\"absolute-video-container\" />\n        </div>\n      </div>\n      <div\n        ref={scrollerCloneRef}\n        className={buildClassName('custom-scroll',\n          SCROLLER_CLASS,\n          'clone',\n          isNeedPremium && 'is-need-premium')}\n      >\n        <div className={inputScrollerContentClass}>\n          <div ref={cloneRef} className={buildClassName(className, 'clone')} dir=\"auto\" />\n        </div>\n      </div>\n      {captionLimit !== undefined && (\n        <div className=\"max-length-indicator\" dir=\"auto\">\n          {captionLimit}\n        </div>\n      )}\n      <TextFormatter\n        isOpen={isTextFormatterOpen}\n        anchorPosition={textFormatterAnchorPosition}\n        selectedRange={selectedRange}\n        setSelectedRange={setSelectedRange}\n        onClose={handleCloseTextFormatter}\n      />\n      {forcedPlaceholder && <span className=\"forced-placeholder\">{renderText(forcedPlaceholder!)}</span>}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId, threadId }: OwnProps): StateProps => {\n    const { messageSendKeyCombo } = global.settings.byKey;\n\n    return {\n      messageSendKeyCombo,\n      replyInfo: chatId && threadId ? selectDraft(global, chatId, threadId)?.replyInfo : undefined,\n      isSelectModeActive: selectIsInSelectMode(global),\n      canPlayAnimatedEmojis: selectCanPlayAnimatedEmojis(global),\n    };\n  },\n)(MessageInput));\n","import type { FC } from '../../../lib/teact/teact';\nimport React from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './SymbolMenu';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst SymbolMenuAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const SymbolMenu = useModuleLoader(Bundles.Extra, 'SymbolMenu', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return SymbolMenu ? <SymbolMenu {...props} /> : undefined;\n};\n\nexport default SymbolMenuAsync;\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useRef, useState } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiSticker, ApiVideo } from '../../../api/types';\nimport type { IAnchorPosition, ThreadId } from '../../../types';\n\nimport { EDITABLE_INPUT_CSS_SELECTOR, EDITABLE_INPUT_MODAL_CSS_SELECTOR } from '../../../config';\nimport buildClassName from '../../../util/buildClassName';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useLastCallback from '../../../hooks/useLastCallback';\n\nimport Button from '../../ui/Button';\nimport ResponsiveHoverButton from '../../ui/ResponsiveHoverButton';\nimport Spinner from '../../ui/Spinner';\nimport SymbolMenu from './SymbolMenu.async';\n\nconst MOBILE_KEYBOARD_HIDE_DELAY_MS = 100;\n\ntype OwnProps = {\n  chatId: string;\n  threadId?: ThreadId;\n  isMobile?: boolean;\n  isReady?: boolean;\n  isSymbolMenuOpen?: boolean;\n  canSendGifs?: boolean;\n  canSendStickers?: boolean;\n  isMessageComposer?: boolean;\n  idPrefix: string;\n  forceDarkTheme?: boolean;\n  openSymbolMenu: VoidFunction;\n  closeSymbolMenu: VoidFunction;\n  onCustomEmojiSelect: (emoji: ApiSticker) => void;\n  onStickerSelect?: (\n    sticker: ApiSticker,\n    isSilent?: boolean,\n    shouldSchedule?: boolean,\n    shouldPreserveInput?: boolean,\n    canUpdateStickerSetsOrder?: boolean,\n  ) => void;\n  onGifSelect?: (gif: ApiVideo, isSilent?: boolean, shouldSchedule?: boolean) => void;\n  onRemoveSymbol: VoidFunction;\n  onEmojiSelect: (emoji: string) => void;\n  closeBotCommandMenu?: VoidFunction;\n  closeSendAsMenu?: VoidFunction;\n  isSymbolMenuForced?: boolean;\n  isAttachmentModal?: boolean;\n  canSendPlainText?: boolean;\n  className?: string;\n  inputCssSelector?: string;\n};\n\nconst SymbolMenuButton: FC<OwnProps> = ({\n  chatId,\n  threadId,\n  isMobile,\n  canSendGifs,\n  canSendStickers,\n  isMessageComposer,\n  isReady,\n  isSymbolMenuOpen,\n  idPrefix,\n  isAttachmentModal,\n  canSendPlainText,\n  isSymbolMenuForced,\n  className,\n  forceDarkTheme,\n  inputCssSelector = EDITABLE_INPUT_CSS_SELECTOR,\n  openSymbolMenu,\n  closeSymbolMenu,\n  onCustomEmojiSelect,\n  onStickerSelect,\n  onGifSelect,\n  onRemoveSymbol,\n  onEmojiSelect,\n  closeBotCommandMenu,\n  closeSendAsMenu,\n}) => {\n  const {\n    setStickerSearchQuery,\n    setGifSearchQuery,\n    addRecentEmoji,\n    addRecentCustomEmoji,\n  } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const triggerRef = useRef<HTMLDivElement>(null);\n\n  const [isSymbolMenuLoaded, onSymbolMenuLoadingComplete] = useFlag();\n  const [contextMenuAnchor, setContextMenuAnchor] = useState<IAnchorPosition | undefined>(undefined);\n\n  const symbolMenuButtonClassName = buildClassName(\n    'mobile-symbol-menu-button',\n    !isReady && 'not-ready',\n    isSymbolMenuLoaded\n      ? (isSymbolMenuOpen && 'menu-opened')\n      : (isSymbolMenuOpen && 'is-loading'),\n  );\n\n  const handleActivateSymbolMenu = useLastCallback(() => {\n    closeBotCommandMenu?.();\n    closeSendAsMenu?.();\n    openSymbolMenu();\n    const triggerEl = triggerRef.current;\n    if (!triggerEl) return;\n    const { x, y } = triggerEl.getBoundingClientRect();\n    setContextMenuAnchor({ x, y });\n  });\n\n  const handleSearchOpen = useLastCallback((type: 'stickers' | 'gifs') => {\n    if (type === 'stickers') {\n      setStickerSearchQuery({ query: '' });\n      setGifSearchQuery({ query: undefined });\n    } else {\n      setGifSearchQuery({ query: '' });\n      setStickerSearchQuery({ query: undefined });\n    }\n  });\n\n  const handleSymbolMenuOpen = useLastCallback(() => {\n    const messageInput = document.querySelector<HTMLDivElement>(\n      isAttachmentModal ? EDITABLE_INPUT_MODAL_CSS_SELECTOR : inputCssSelector,\n    );\n\n    if (!isMobile || messageInput !== document.activeElement) {\n      openSymbolMenu();\n      return;\n    }\n\n    messageInput?.blur();\n    setTimeout(() => {\n      closeBotCommandMenu?.();\n      openSymbolMenu();\n    }, MOBILE_KEYBOARD_HIDE_DELAY_MS);\n  });\n\n  const getTriggerElement = useLastCallback(() => triggerRef.current);\n  const getRootElement = useLastCallback(() => triggerRef.current?.closest('.custom-scroll, .no-scrollbar'));\n  const getMenuElement = useLastCallback(() => document.querySelector('#portals .SymbolMenu .bubble'));\n  const getLayout = useLastCallback(() => ({ withPortal: true }));\n\n  return (\n    <>\n      {isMobile ? (\n        <Button\n          className={symbolMenuButtonClassName}\n          round\n          color=\"translucent\"\n          onClick={isSymbolMenuOpen ? closeSymbolMenu : handleSymbolMenuOpen}\n          ariaLabel=\"Choose emoji, sticker or GIF\"\n        >\n          <i className=\"icon icon-smile\" />\n          <i className=\"icon icon-keyboard\" />\n          {isSymbolMenuOpen && !isSymbolMenuLoaded && <Spinner color=\"gray\" />}\n        </Button>\n      ) : (\n        <ResponsiveHoverButton\n          className={buildClassName('symbol-menu-button', isSymbolMenuOpen && 'activated')}\n          round\n          color=\"translucent\"\n          onActivate={handleActivateSymbolMenu}\n          ariaLabel=\"Choose emoji, sticker or GIF\"\n        >\n          <div ref={triggerRef} className=\"symbol-menu-trigger\" />\n          <i className=\"icon icon-smile\" />\n        </ResponsiveHoverButton>\n      )}\n\n      <SymbolMenu\n        chatId={chatId}\n        threadId={threadId}\n        isOpen={isSymbolMenuOpen || Boolean(isSymbolMenuForced)}\n        canSendGifs={canSendGifs}\n        canSendStickers={canSendStickers}\n        isMessageComposer={isMessageComposer}\n        idPrefix={idPrefix}\n        onLoad={onSymbolMenuLoadingComplete}\n        onClose={closeSymbolMenu}\n        onEmojiSelect={onEmojiSelect}\n        onStickerSelect={onStickerSelect}\n        onCustomEmojiSelect={onCustomEmojiSelect}\n        onGifSelect={onGifSelect}\n        onRemoveSymbol={onRemoveSymbol}\n        onSearchOpen={handleSearchOpen}\n        addRecentEmoji={addRecentEmoji}\n        addRecentCustomEmoji={addRecentCustomEmoji}\n        isAttachmentModal={isAttachmentModal}\n        canSendPlainText={canSendPlainText}\n        className={buildClassName(className, forceDarkTheme && 'component-theme-dark')}\n        anchor={isAttachmentModal ? contextMenuAnchor : undefined}\n        getTriggerElement={isAttachmentModal ? getTriggerElement : undefined}\n        getRootElement={isAttachmentModal ? getRootElement : undefined}\n        getMenuElement={isAttachmentModal ? getMenuElement : undefined}\n        getLayout={isAttachmentModal ? getLayout : undefined}\n      />\n    </>\n  );\n};\n\nexport default memo(SymbolMenuButton);\n","import type { ApiAttachment } from '../../../../api/types';\n\nimport {\n  GIF_MIME_TYPE,\n  SUPPORTED_AUDIO_CONTENT_TYPES,\n  SUPPORTED_PHOTO_CONTENT_TYPES,\n  SUPPORTED_VIDEO_CONTENT_TYPES,\n} from '../../../../config';\nimport { parseAudioMetadata } from '../../../../util/audio';\nimport {\n  createPosterForVideo,\n  preloadImage,\n  preloadVideo,\n} from '../../../../util/files';\nimport { scaleImage } from '../../../../util/imageResize';\n\nconst MAX_QUICK_IMG_SIZE = 1280; // px\nconst MAX_THUMB_IMG_SIZE = 40; // px\nconst MAX_ASPECT_RATIO = 20;\nconst FILE_EXT_REGEX = /\\.[^/.]+$/;\n\nexport default async function buildAttachment(\n  filename: string, blob: Blob, options?: Partial<ApiAttachment>,\n): Promise<ApiAttachment> {\n  const blobUrl = URL.createObjectURL(blob);\n  const { type: mimeType, size } = blob;\n  let quick;\n  let audio;\n  let previewBlobUrl;\n  let shouldSendAsFile;\n\n  if (SUPPORTED_PHOTO_CONTENT_TYPES.has(mimeType)) {\n    const img = await preloadImage(blobUrl);\n    const { width, height } = img;\n    shouldSendAsFile = !validateAspectRatio(width, height);\n\n    const shouldShrink = Math.max(width, height) > MAX_QUICK_IMG_SIZE;\n    const isGif = mimeType === GIF_MIME_TYPE;\n\n    if (!shouldSendAsFile) {\n      if (!options?.compressedBlobUrl && !isGif && (shouldShrink || mimeType !== 'image/jpeg')) {\n        const resizedUrl = await scaleImage(\n          blobUrl, shouldShrink ? MAX_QUICK_IMG_SIZE / Math.max(width, height) : 1, 'image/jpeg',\n        );\n        URL.revokeObjectURL(blobUrl);\n        return buildAttachment(filename, blob, {\n          compressedBlobUrl: resizedUrl,\n        });\n      }\n\n      if (mimeType === 'image/jpeg') {\n        filename = filename.replace(FILE_EXT_REGEX, '.jpg');\n      }\n\n      quick = { width, height };\n    }\n\n    const shouldShrinkPreview = Math.max(width, height) > MAX_THUMB_IMG_SIZE;\n    if (shouldShrinkPreview) {\n      previewBlobUrl = await scaleImage(\n        blobUrl, MAX_THUMB_IMG_SIZE / Math.max(width, height), 'image/jpeg',\n      );\n    } else {\n      previewBlobUrl = blobUrl;\n    }\n  } else if (SUPPORTED_VIDEO_CONTENT_TYPES.has(mimeType)) {\n    try {\n      const { videoWidth: width, videoHeight: height, duration } = await preloadVideo(blobUrl);\n      shouldSendAsFile = !validateAspectRatio(width, height);\n      if (!shouldSendAsFile) {\n        quick = { width: width!, height: height!, duration: duration! };\n      }\n    } catch (err) {\n      shouldSendAsFile = true;\n    }\n\n    previewBlobUrl = await createPosterForVideo(blobUrl);\n  } else if (SUPPORTED_AUDIO_CONTENT_TYPES.has(mimeType)) {\n    const {\n      duration, title, performer, coverUrl,\n    } = await parseAudioMetadata(blobUrl);\n    audio = {\n      duration: duration || 0,\n      title,\n      performer,\n    };\n    previewBlobUrl = coverUrl;\n  }\n\n  return {\n    blobUrl,\n    filename,\n    mimeType,\n    size,\n    quick,\n    audio,\n    previewBlobUrl,\n    shouldSendAsFile: shouldSendAsFile || undefined,\n    uniqueId: `${Date.now()}-${Math.random()}`,\n    ...options,\n  };\n}\n\nexport function prepareAttachmentsToSend(\n  attachments: ApiAttachment[], shouldSendCompressed?: boolean,\n): ApiAttachment[] {\n  return attachments.map((attach) => {\n    if (shouldSendCompressed) {\n      if (attach.compressedBlobUrl) {\n        return {\n          ...attach,\n          blobUrl: attach.compressedBlobUrl,\n        };\n      }\n      return attach;\n    }\n\n    return {\n      ...attach,\n      shouldSendAsFile: !(attach.voice || attach.audio) || undefined,\n      shouldSendAsSpoiler: undefined,\n    };\n  });\n}\n\nfunction validateAspectRatio(width: number, height: number) {\n  const maxAspectRatio = Math.max(width, height) / Math.min(width, height);\n  return maxAspectRatio <= MAX_ASPECT_RATIO;\n}\n","type AudioMetadata = {\n  title?: string;\n  performer?: string;\n  duration?: number;\n  coverUrl?: string;\n};\n\nexport async function parseAudioMetadata(url: string): Promise<AudioMetadata> {\n  const { fetchFromUrl, selectCover } = await import('../lib/music-metadata-browser');\n  const metadata = await fetchFromUrl(url);\n  const { common: { title, artist, picture }, format: { duration } } = metadata;\n\n  const cover = selectCover(picture);\n  const coverBlob = cover ? new Blob([cover.data], { type: cover.format }) : undefined;\n  const coverUrl = coverBlob ? URL.createObjectURL(coverBlob) : undefined;\n\n  return {\n    title,\n    performer: artist,\n    duration,\n    coverUrl,\n  };\n}\n","import { validateFiles } from '../../../../util/files';\n\nexport default async function getFilesFromDataTransferItems(dataTransferItems: DataTransferItemList) {\n  const files: File[] = [];\n\n  function traverseFileTreePromise(entry: FileSystemEntry | File, item: DataTransferItem) {\n    return new Promise((resolve) => {\n      if (entry instanceof File) {\n        files.push(entry);\n        resolve(entry);\n      } else if (entry.isFile) {\n        const itemFile = item.getAsFile();\n        (entry as FileSystemFileEntry).file((file) => {\n          files.push(file);\n          resolve(file);\n        }, () => {\n          // iOS Safari throws an error \"NotFoundError: Path does not exist\" for files from the clipboard\n          // https://stackoverflow.com/a/50059309\n          if (itemFile) {\n            files.push(itemFile);\n          }\n          resolve(itemFile);\n        });\n      } else if (entry.isDirectory) {\n        const dirReader = (entry as FileSystemDirectoryEntry).createReader();\n        dirReader.readEntries((entries) => {\n          const entriesPromises = [];\n          for (let i = 0; i < entries.length; i++) {\n            entriesPromises.push(traverseFileTreePromise(entries[i], item));\n          }\n          resolve(Promise.all(entriesPromises));\n        });\n      }\n    });\n  }\n\n  const entriesPromises = [];\n  for (let i = 0; i < dataTransferItems.length; i++) {\n    const item = dataTransferItems[i];\n    if (item.kind === 'file') {\n      const entry = item.webkitGetAsEntry() || item.getAsFile();\n      if (entry) {\n        entriesPromises.push(traverseFileTreePromise(entry, item));\n      }\n    }\n  }\n\n  await Promise.all(entriesPromises);\n\n  return validateFiles(files);\n}\n","const RE_BR = /(<br>|<br\\s?\\/>)/g;\nconst RE_SPACE = /(&nbsp;|\\u00A0)/g;\nconst RE_CLEAN_HTML = /(<div>|<\\/div>)/gi;\nconst RE_EXTRA_NEW_LINE = /\\n$/i;\n\nexport function prepareForRegExp(html: string) {\n  return html\n    .replace(RE_SPACE, ' ')\n    .replace(RE_BR, '\\n')\n    .replace(RE_CLEAN_HTML, '')\n    .replace(RE_EXTRA_NEW_LINE, '');\n}\n","import React, { type TeactNode } from '../../../../lib/teact/teact';\n\nimport type { ApiKeyboardButton } from '../../../../api/types';\n\nimport { STARS_ICON_PLACEHOLDER } from '../../../../config';\nimport { replaceWithTeact } from '../../../../util/replaceWithTeact';\nimport renderText from '../../../common/helpers/renderText';\n\nimport { type LangFn } from '../../../../hooks/useOldLang';\n\nimport Icon from '../../../common/icons/Icon';\n\nexport default function renderKeyboardButtonText(lang: LangFn, button: ApiKeyboardButton): TeactNode {\n  if (button.type === 'receipt') {\n    return lang('PaymentReceipt');\n  }\n\n  if (button.type === 'buy') {\n    return replaceWithTeact(button.text, STARS_ICON_PLACEHOLDER, <Icon className=\"star-currency-icon\" name=\"star\" />);\n  }\n\n  return renderText(button.text);\n}\n","const MAX_NESTING_PARENTS = 5;\n\nexport function isSelectionInsideInput(selectionRange: Range, inputId: string) {\n  const { commonAncestorContainer } = selectionRange;\n  let parentNode: HTMLElement | null = commonAncestorContainer as HTMLElement;\n  let iterations = 1;\n  while (parentNode && parentNode.id !== inputId && iterations < MAX_NESTING_PARENTS) {\n    parentNode = parentNode.parentElement;\n    iterations++;\n  }\n\n  return Boolean(parentNode && parentNode.id === inputId);\n}\n","import type { RefObject } from 'react';\nimport { useEffect } from '../../../../lib/teact/teact';\nimport { getActions } from '../../../../global';\n\nimport type { ApiSticker } from '../../../../api/types';\nimport type { Signal } from '../../../../util/signals';\n\nimport { EMOJI_IMG_REGEX } from '../../../../config';\nimport { requestNextMutation } from '../../../../lib/fasterdom/fasterdom';\nimport twemojiRegex from '../../../../lib/twemojiRegex';\nimport focusEditableElement from '../../../../util/focusEditableElement';\nimport { getHtmlBeforeSelection } from '../../../../util/selection';\nimport { IS_EMOJI_SUPPORTED } from '../../../../util/windowEnvironment';\nimport { buildCustomEmojiHtml } from '../helpers/customEmoji';\n\nimport { useThrottledResolver } from '../../../../hooks/useAsyncResolvers';\nimport useDerivedSignal from '../../../../hooks/useDerivedSignal';\nimport useDerivedState from '../../../../hooks/useDerivedState';\nimport useFlag from '../../../../hooks/useFlag';\nimport useLastCallback from '../../../../hooks/useLastCallback';\n\nconst THROTTLE = 300;\nconst RE_ENDS_ON_EMOJI = new RegExp(`(${twemojiRegex.source})$`, 'g');\nconst RE_ENDS_ON_EMOJI_IMG = new RegExp(`${EMOJI_IMG_REGEX.source}$`, 'g');\n\nexport default function useCustomEmojiTooltip(\n  isEnabled: boolean,\n  getHtml: Signal<string>,\n  setHtml: (html: string) => void,\n  getSelectionRange: Signal<Range | undefined>,\n  inputRef: RefObject<HTMLDivElement>,\n  customEmojis?: ApiSticker[],\n) {\n  const { loadCustomEmojiForEmoji, clearCustomEmojiForEmoji } = getActions();\n\n  const [isManuallyClosed, markManuallyClosed, unmarkManuallyClosed] = useFlag(false);\n\n  const extractLastEmojiThrottled = useThrottledResolver(() => {\n    const html = getHtml();\n    if (!isEnabled || !html || !getSelectionRange()?.collapsed) return undefined;\n\n    const hasEmoji = html.match(IS_EMOJI_SUPPORTED ? twemojiRegex : EMOJI_IMG_REGEX);\n    if (!hasEmoji) return undefined;\n\n    const htmlBeforeSelection = getHtmlBeforeSelection(inputRef.current!);\n\n    return htmlBeforeSelection.match(IS_EMOJI_SUPPORTED ? RE_ENDS_ON_EMOJI : RE_ENDS_ON_EMOJI_IMG)?.[0];\n  }, [getHtml, getSelectionRange, inputRef, isEnabled], THROTTLE);\n\n  const getLastEmoji = useDerivedSignal(\n    extractLastEmojiThrottled, [extractLastEmojiThrottled, getHtml, getSelectionRange], true,\n  );\n\n  const isActive = useDerivedState(() => Boolean(getLastEmoji()), [getLastEmoji]);\n  const hasCustomEmojis = Boolean(customEmojis?.length);\n\n  useEffect(() => {\n    if (!isEnabled || !isActive) return;\n\n    const lastEmoji = getLastEmoji();\n    if (lastEmoji) {\n      if (!hasCustomEmojis) {\n        loadCustomEmojiForEmoji({\n          emoji: IS_EMOJI_SUPPORTED ? lastEmoji : lastEmoji.match(/.+alt=\"(.+)\"/)?.[1]!,\n        });\n      }\n    } else {\n      clearCustomEmojiForEmoji();\n    }\n  }, [isEnabled, isActive, getLastEmoji, hasCustomEmojis, clearCustomEmojiForEmoji, loadCustomEmojiForEmoji]);\n\n  const insertCustomEmoji = useLastCallback((emoji: ApiSticker) => {\n    const lastEmoji = getLastEmoji();\n    if (!isEnabled || !lastEmoji) return;\n\n    const inputEl = inputRef.current!;\n    const htmlBeforeSelection = getHtmlBeforeSelection(inputEl);\n    const regexText = IS_EMOJI_SUPPORTED\n      ? lastEmoji\n      // Escape regexp special chars\n      : lastEmoji.replace(/[-/\\\\^$*+?.()|[\\]{}]/g, '\\\\$&');\n    const regex = new RegExp(`(${regexText})\\\\1*$`, '');\n    const matched = htmlBeforeSelection.match(regex)![0];\n    const count = matched.length / lastEmoji.length;\n    const newHtml = htmlBeforeSelection.replace(regex, buildCustomEmojiHtml(emoji).repeat(count));\n    const htmlAfterSelection = inputEl.innerHTML.substring(htmlBeforeSelection.length);\n\n    setHtml(`${newHtml}${htmlAfterSelection}`);\n\n    requestNextMutation(() => {\n      focusEditableElement(inputEl, true, true);\n    });\n  });\n\n  useEffect(unmarkManuallyClosed, [unmarkManuallyClosed, getHtml]);\n\n  return {\n    isCustomEmojiTooltipOpen: Boolean(isActive && hasCustomEmojis && !isManuallyClosed),\n    closeCustomEmojiTooltip: markManuallyClosed,\n    insertCustomEmoji,\n  };\n}\n","import { useEffect, useState } from '../../../../lib/teact/teact';\nimport { getGlobal } from '../../../../global';\n\nimport type { ApiSticker } from '../../../../api/types';\nimport type { EmojiData, EmojiModule, EmojiRawData } from '../../../../util/emoji/emoji';\nimport type { Signal } from '../../../../util/signals';\n\nimport { EDITABLE_INPUT_CSS_SELECTOR, EDITABLE_INPUT_ID } from '../../../../config';\nimport { requestNextMutation } from '../../../../lib/fasterdom/fasterdom';\nimport { selectCustomEmojiForEmojis } from '../../../../global/selectors';\nimport { uncompressEmoji } from '../../../../util/emoji/emoji';\nimport focusEditableElement from '../../../../util/focusEditableElement';\nimport {\n  buildCollectionByKey, mapValues, pickTruthy, unique, uniqueByField,\n} from '../../../../util/iteratees';\nimport { MEMO_EMPTY_ARRAY } from '../../../../util/memo';\nimport memoized from '../../../../util/memoized';\nimport renderText from '../../../common/helpers/renderText';\nimport { buildCustomEmojiHtml } from '../helpers/customEmoji';\nimport { prepareForRegExp } from '../helpers/prepareForRegExp';\n\nimport { useThrottledResolver } from '../../../../hooks/useAsyncResolvers';\nimport useDerivedSignal from '../../../../hooks/useDerivedSignal';\nimport useFlag from '../../../../hooks/useFlag';\nimport useLastCallback from '../../../../hooks/useLastCallback';\n\ninterface Library {\n  keywords: string[];\n  byKeyword: Record<string, Emoji[]>;\n  names: string[];\n  byName: Record<string, Emoji[]>;\n  maxKeyLength: number;\n}\n\nlet emojiDataPromise: Promise<EmojiModule>;\nlet emojiRawData: EmojiRawData;\nlet emojiData: EmojiData;\n\nlet RE_EMOJI_SEARCH: RegExp;\nlet RE_LOWERCASE_TEST: RegExp;\nconst EMOJIS_LIMIT = 36;\nconst FILTER_MIN_LENGTH = 2;\n\nconst THROTTLE = 300;\n\nconst prepareRecentEmojisMemo = memoized(prepareRecentEmojis);\nconst prepareLibraryMemo = memoized(prepareLibrary);\nconst searchInLibraryMemo = memoized(searchInLibrary);\n\ntry {\n  RE_EMOJI_SEARCH = /(^|\\s):(?!\\s)[-+_:'\\s\\p{L}\\p{N}]*$/gui;\n  RE_LOWERCASE_TEST = /\\p{Ll}/u;\n} catch (e) {\n  // Support for older versions of firefox\n  RE_EMOJI_SEARCH = /(^|\\s):(?!\\s)[-+_:'\\s\\d\\wа-яёґєії]*$/gi;\n  RE_LOWERCASE_TEST = /[a-zяёґєії]/;\n}\n\nexport default function useEmojiTooltip(\n  isEnabled: boolean,\n  getHtml: Signal<string>,\n  setHtml: (html: string) => void,\n  inputId = EDITABLE_INPUT_ID,\n  recentEmojiIds: string[],\n  baseEmojiKeywords?: Record<string, string[]>,\n  emojiKeywords?: Record<string, string[]>,\n) {\n  const [isManuallyClosed, markManuallyClosed, unmarkManuallyClosed] = useFlag(false);\n\n  const [byId, setById] = useState<Record<string, Emoji> | undefined>();\n  const [filteredEmojis, setFilteredEmojis] = useState<Emoji[]>(MEMO_EMPTY_ARRAY);\n  const [filteredCustomEmojis, setFilteredCustomEmojis] = useState<ApiSticker[]>(MEMO_EMPTY_ARRAY);\n\n  // Initialize data on first render\n  useEffect(() => {\n    if (!isEnabled) return;\n\n    function exec() {\n      setById(emojiData.emojis);\n    }\n\n    if (emojiData) {\n      exec();\n    } else {\n      ensureEmojiData().then(exec);\n    }\n  }, [isEnabled]);\n\n  const detectEmojiCodeThrottled = useThrottledResolver(() => {\n    const html = getHtml();\n    return isEnabled && html.includes(':') ? prepareForRegExp(html).match(RE_EMOJI_SEARCH)?.[0].trim() : undefined;\n  }, [getHtml, isEnabled], THROTTLE);\n\n  const getEmojiCode = useDerivedSignal(\n    detectEmojiCodeThrottled, [detectEmojiCodeThrottled, getHtml], true,\n  );\n\n  const updateFiltered = useLastCallback((emojis: Emoji[]) => {\n    setFilteredEmojis(emojis);\n\n    if (emojis === MEMO_EMPTY_ARRAY) {\n      setFilteredCustomEmojis(MEMO_EMPTY_ARRAY);\n      return;\n    }\n\n    const nativeEmojis = emojis.map((emoji) => emoji.native);\n    const customEmojis = uniqueByField(\n      selectCustomEmojiForEmojis(getGlobal(), nativeEmojis),\n      'id',\n    );\n    setFilteredCustomEmojis(customEmojis);\n  });\n\n  const insertEmoji = useLastCallback((emoji: string | ApiSticker, isForce = false) => {\n    const html = getHtml();\n    if (!html) return;\n\n    const atIndex = html.lastIndexOf(':', isForce ? html.lastIndexOf(':') - 1 : undefined);\n\n    if (atIndex !== -1) {\n      const emojiHtml = typeof emoji === 'string' ? renderText(emoji, ['emoji_html']) : buildCustomEmojiHtml(emoji);\n      setHtml(`${html.substring(0, atIndex)}${emojiHtml}`);\n\n      const messageInput = inputId === EDITABLE_INPUT_ID\n        ? document.querySelector<HTMLDivElement>(EDITABLE_INPUT_CSS_SELECTOR)!\n        : document.getElementById(inputId) as HTMLDivElement;\n\n      requestNextMutation(() => {\n        focusEditableElement(messageInput, true, true);\n      });\n    }\n\n    updateFiltered(MEMO_EMPTY_ARRAY);\n  });\n\n  useEffect(() => {\n    const emojiCode = getEmojiCode();\n    if (!emojiCode || !byId) {\n      updateFiltered(MEMO_EMPTY_ARRAY);\n      return;\n    }\n\n    const newShouldAutoInsert = emojiCode.length > 2 && emojiCode.endsWith(':');\n\n    const filter = emojiCode.substring(1, newShouldAutoInsert ? 1 + emojiCode.length - 2 : undefined);\n    let matched: Emoji[] = MEMO_EMPTY_ARRAY;\n\n    if (!filter) {\n      matched = prepareRecentEmojisMemo(byId, recentEmojiIds, EMOJIS_LIMIT);\n    } else if ((filter.length === 1 && RE_LOWERCASE_TEST.test(filter)) || filter.length >= FILTER_MIN_LENGTH) {\n      const library = prepareLibraryMemo(byId, baseEmojiKeywords, emojiKeywords);\n      matched = searchInLibraryMemo(library, filter.toLowerCase(), EMOJIS_LIMIT);\n    }\n\n    if (!matched.length) {\n      updateFiltered(MEMO_EMPTY_ARRAY);\n      return;\n    }\n\n    if (newShouldAutoInsert) {\n      insertEmoji(matched[0].native, true);\n    } else {\n      updateFiltered(matched);\n    }\n  }, [\n    baseEmojiKeywords, byId, getEmojiCode, emojiKeywords, insertEmoji, recentEmojiIds, updateFiltered,\n  ]);\n\n  useEffect(unmarkManuallyClosed, [unmarkManuallyClosed, getHtml]);\n\n  return {\n    isEmojiTooltipOpen: Boolean(filteredEmojis.length || filteredCustomEmojis.length) && !isManuallyClosed,\n    closeEmojiTooltip: markManuallyClosed,\n    filteredEmojis,\n    filteredCustomEmojis,\n    insertEmoji,\n  };\n}\n\nasync function ensureEmojiData() {\n  if (!emojiDataPromise) {\n    emojiDataPromise = import('emoji-data-ios/emoji-data.json');\n    emojiRawData = (await emojiDataPromise).default;\n\n    emojiData = uncompressEmoji(emojiRawData);\n  }\n\n  return emojiDataPromise;\n}\n\nfunction prepareRecentEmojis(byId: Record<string, Emoji>, recentEmojiIds: string[], limit: number) {\n  if (!byId || !recentEmojiIds.length) {\n    return MEMO_EMPTY_ARRAY;\n  }\n\n  return Object.values(pickTruthy(byId, recentEmojiIds)).slice(0, limit);\n}\n\nfunction prepareLibrary(\n  byId: Record<string, Emoji>,\n  baseEmojiKeywords?: Record<string, string[]>,\n  emojiKeywords?: Record<string, string[]>,\n): Library {\n  const emojis = Object.values(byId);\n\n  const byNative = buildCollectionByKey<Emoji>(emojis, 'native');\n  const baseEmojisByKeyword = baseEmojiKeywords\n    ? mapValues(baseEmojiKeywords, (natives) => {\n      return Object.values(pickTruthy(byNative, natives));\n    })\n    : {};\n  const emojisByKeyword = emojiKeywords\n    ? mapValues(emojiKeywords, (natives) => {\n      return Object.values(pickTruthy(byNative, natives));\n    })\n    : {};\n\n  const byKeyword = { ...baseEmojisByKeyword, ...emojisByKeyword };\n  const keywords = ([] as string[]).concat(Object.keys(baseEmojisByKeyword), Object.keys(emojisByKeyword));\n\n  const byName = emojis.reduce((result, emoji) => {\n    emoji.names.forEach((name) => {\n      if (!result[name]) {\n        result[name] = [];\n      }\n\n      result[name].push(emoji);\n    });\n\n    return result;\n  }, {} as Record<string, Emoji[]>);\n\n  const names = Object.keys(byName);\n  const maxKeyLength = keywords.reduce((max, keyword) => Math.max(max, keyword.length), 0);\n\n  return {\n    byKeyword,\n    keywords,\n    byName,\n    names,\n    maxKeyLength,\n  };\n}\n\nfunction searchInLibrary(library: Library, filter: string, limit: number) {\n  const {\n    byKeyword, keywords, byName, names, maxKeyLength,\n  } = library;\n\n  let matched: Emoji[] = [];\n\n  if (filter.length > maxKeyLength) {\n    return MEMO_EMPTY_ARRAY;\n  }\n\n  const matchedKeywords = keywords.filter((keyword) => keyword.startsWith(filter)).sort();\n  matched = matched.concat(Object.values(pickTruthy(byKeyword!, matchedKeywords)).flat());\n\n  // Also search by names, which is useful for non-English languages\n  const matchedNames = names.filter((name) => name.startsWith(filter));\n  matched = matched.concat(Object.values(pickTruthy(byName, matchedNames)).flat());\n\n  matched = unique(matched);\n\n  if (!matched.length) {\n    return MEMO_EMPTY_ARRAY;\n  }\n\n  return matched.slice(0, limit);\n}\n","import type { RefObject } from 'react';\nimport { useEffect, useState } from '../../../../lib/teact/teact';\nimport { getGlobal } from '../../../../global';\n\nimport type { ApiChatMember, ApiUser } from '../../../../api/types';\nimport type { Signal } from '../../../../util/signals';\nimport { ApiMessageEntityTypes } from '../../../../api/types';\n\nimport { requestNextMutation } from '../../../../lib/fasterdom/fasterdom';\nimport { filterUsersByName, getMainUsername, getUserFirstOrLastName } from '../../../../global/helpers';\nimport focusEditableElement from '../../../../util/focusEditableElement';\nimport { pickTruthy, unique } from '../../../../util/iteratees';\nimport { getCaretPosition, getHtmlBeforeSelection, setCaretPosition } from '../../../../util/selection';\nimport { prepareForRegExp } from '../helpers/prepareForRegExp';\n\nimport { useThrottledResolver } from '../../../../hooks/useAsyncResolvers';\nimport useDerivedSignal from '../../../../hooks/useDerivedSignal';\nimport useFlag from '../../../../hooks/useFlag';\nimport useLastCallback from '../../../../hooks/useLastCallback';\n\nconst THROTTLE = 300;\n\nlet RE_USERNAME_SEARCH: RegExp;\ntry {\n  RE_USERNAME_SEARCH = /(^|\\s)@[-_\\p{L}\\p{M}\\p{N}]*$/gui;\n} catch (e) {\n  // Support for older versions of Firefox\n  RE_USERNAME_SEARCH = /(^|\\s)@[-_\\d\\wа-яёґєії]*$/gi;\n}\n\nexport default function useMentionTooltip(\n  isEnabled: boolean,\n  getHtml: Signal<string>,\n  setHtml: (html: string) => void,\n  getSelectionRange: Signal<Range | undefined>,\n  inputRef: RefObject<HTMLDivElement>,\n  groupChatMembers?: ApiChatMember[],\n  topInlineBotIds?: string[],\n  currentUserId?: string,\n) {\n  const [filteredUsers, setFilteredUsers] = useState<ApiUser[] | undefined>();\n  const [isManuallyClosed, markManuallyClosed, unmarkManuallyClosed] = useFlag(false);\n\n  const extractUsernameTagThrottled = useThrottledResolver(() => {\n    const html = getHtml();\n    if (!isEnabled || !getSelectionRange()?.collapsed || !html.includes('@')) return undefined;\n\n    const htmlBeforeSelection = getHtmlBeforeSelection(inputRef.current!);\n\n    return prepareForRegExp(htmlBeforeSelection).match(RE_USERNAME_SEARCH)?.[0].trim();\n  }, [isEnabled, getHtml, getSelectionRange, inputRef], THROTTLE);\n\n  const getUsernameTag = useDerivedSignal(\n    extractUsernameTagThrottled, [extractUsernameTagThrottled, getHtml, getSelectionRange], true,\n  );\n\n  const getWithInlineBots = useDerivedSignal(() => {\n    return isEnabled && getHtml().startsWith('@');\n  }, [getHtml, isEnabled]);\n\n  useEffect(() => {\n    const usernameTag = getUsernameTag();\n\n    if (!usernameTag || !(groupChatMembers || topInlineBotIds)) {\n      setFilteredUsers(undefined);\n      return;\n    }\n\n    // No need for expensive global updates on users, so we avoid them\n    const usersById = getGlobal().users.byId;\n    if (!usersById) {\n      setFilteredUsers(undefined);\n      return;\n    }\n\n    const memberIds = groupChatMembers?.reduce((acc: string[], member) => {\n      if (member.userId !== currentUserId) {\n        acc.push(member.userId);\n      }\n\n      return acc;\n    }, []);\n\n    const filter = usernameTag.substring(1);\n    const filteredIds = filterUsersByName(unique([\n      ...((getWithInlineBots() && topInlineBotIds) || []),\n      ...(memberIds || []),\n    ]), usersById, filter);\n\n    setFilteredUsers(Object.values(pickTruthy(usersById, filteredIds)));\n  }, [currentUserId, groupChatMembers, topInlineBotIds, getUsernameTag, getWithInlineBots]);\n\n  const insertMention = useLastCallback((user: ApiUser, forceFocus = false) => {\n    if (!user.usernames && !getUserFirstOrLastName(user)) {\n      return;\n    }\n\n    const mainUsername = getMainUsername(user);\n    const userFirstOrLastName = getUserFirstOrLastName(user) || '';\n    const htmlToInsert = mainUsername\n      ? `@${mainUsername}`\n      : `<a\n          class=\"text-entity-link\"\n          data-entity-type=\"${ApiMessageEntityTypes.MentionName}\"\n          data-user-id=\"${user.id}\"\n          contenteditable=\"false\"\n          dir=\"auto\"\n        >${userFirstOrLastName}</a>`;\n\n    const inputEl = inputRef.current!;\n    const htmlBeforeSelection = getHtmlBeforeSelection(inputEl);\n    const fixedHtmlBeforeSelection = cleanWebkitNewLines(htmlBeforeSelection);\n    const atIndex = fixedHtmlBeforeSelection.lastIndexOf('@');\n    const shiftCaretPosition = (mainUsername ? mainUsername.length + 1 : userFirstOrLastName.length)\n      - (fixedHtmlBeforeSelection.length - atIndex);\n\n    if (atIndex !== -1) {\n      const newHtml = `${fixedHtmlBeforeSelection.substr(0, atIndex)}${htmlToInsert}&nbsp;`;\n      const htmlAfterSelection = cleanWebkitNewLines(inputEl.innerHTML).substring(fixedHtmlBeforeSelection.length);\n      const caretPosition = getCaretPosition(inputEl);\n      setHtml(`${newHtml}${htmlAfterSelection}`);\n\n      requestNextMutation(() => {\n        const newCaretPosition = caretPosition + shiftCaretPosition + 1;\n        focusEditableElement(inputEl, forceFocus);\n        if (newCaretPosition >= 0) {\n          setCaretPosition(inputEl, newCaretPosition);\n        }\n      });\n    }\n\n    setFilteredUsers(undefined);\n  });\n\n  useEffect(unmarkManuallyClosed, [unmarkManuallyClosed, getHtml]);\n\n  return {\n    isMentionTooltipOpen: Boolean(filteredUsers?.length && !isManuallyClosed),\n    closeMentionTooltip: markManuallyClosed,\n    insertMention,\n    mentionFilteredUsers: filteredUsers,\n  };\n}\n\n// Webkit replaces the line break with the `<div><br /></div>` or `<div></div>` code.\n// It is necessary to clean the html to a single form before processing.\nfunction cleanWebkitNewLines(html: string) {\n  return html.replace(/<div>(<br>|<br\\s?\\/>)?<\\/div>/gi, '<br>');\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"EVLTkrt1\",\"preview\":\"V3HabdKr\",\"linkPreview\":\"ClGe8yij\",\"media\":\"WAItYc5d\",\"nonInteractive\":\"AQWPv0bP\",\"expired\":\"tprkr7qf\",\"expiredIcon\":\"nLA7VEhv\"};","import React, { memo, useEffect } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiMessageStoryData, ApiTypeStory } from '../../../api/types';\n\nimport { getStoryMediaHash } from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\nimport { formatMediaDuration } from '../../../util/dates/dateFormat';\nimport { IS_CANVAS_FILTER_SUPPORTED } from '../../../util/windowEnvironment';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useCanvasBlur from '../../../hooks/useCanvasBlur';\nimport useCurrentOrPrev from '../../../hooks/useCurrentOrPrev';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMedia from '../../../hooks/useMedia';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useShowTransitionDeprecated from '../../../hooks/useShowTransitionDeprecated';\n\nimport MediaAreaOverlay from '../../story/mediaArea/MediaAreaOverlay';\n\nimport styles from './BaseStory.module.scss';\n\ninterface OwnProps {\n  story?: ApiTypeStory | ApiMessageStoryData;\n  isPreview?: boolean;\n  isProtected?: boolean;\n  isConnected?: boolean;\n}\n\nfunction BaseStory({\n  story, isPreview, isProtected, isConnected,\n}: OwnProps) {\n  const { openStoryViewer, loadPeerStoriesByIds, showNotification } = getActions();\n\n  const lang = useOldLang();\n  const { isMobile } = useAppLayout();\n  const isExpired = story && 'isDeleted' in story;\n  const isLoaded = story && 'content' in story;\n  const video = isLoaded ? story.content.video : undefined;\n  const imageHash = isLoaded ? getStoryMediaHash(story) : undefined;\n  const imgBlobUrl = useMedia(imageHash);\n  const thumbnail = isLoaded ? (video ? video.thumbnail?.dataUri : story.content.photo?.thumbnail?.dataUri) : undefined;\n  const mediaUrl = useCurrentOrPrev(imgBlobUrl, true);\n  const { shouldRender, transitionClassNames } = useShowTransitionDeprecated(Boolean(mediaUrl));\n  const blurredBackgroundRef = useCanvasBlur(\n    thumbnail,\n    isExpired && !isPreview,\n    isMobile && !IS_CANVAS_FILTER_SUPPORTED,\n  );\n\n  const fullClassName = buildClassName(\n    styles.root,\n    'media-inner',\n    (!isConnected || isExpired) && styles.nonInteractive,\n    isExpired && styles.expired,\n    isPreview && styles.preview,\n  );\n\n  useEffect(() => {\n    if (story && !(isLoaded || isExpired)) {\n      loadPeerStoriesByIds({ peerId: story.peerId, storyIds: [story.id] });\n    }\n  }, [story, isExpired, isLoaded]);\n\n  const handleClick = useLastCallback(() => {\n    if (isExpired) {\n      showNotification({\n        message: lang('StoryNotFound'),\n      });\n      return;\n    }\n\n    openStoryViewer({\n      peerId: story!.peerId,\n      storyId: story!.id,\n      isSinglePeer: true,\n      isSingleStory: true,\n    });\n  });\n\n  return (\n    <div\n      className={fullClassName}\n      onClick={isConnected ? handleClick : undefined}\n    >\n      {!isExpired && isPreview && (\n        <canvas ref={blurredBackgroundRef} className=\"thumbnail blurred-bg\" />\n      )}\n      {shouldRender && (\n        <>\n          <img\n            src={mediaUrl}\n            alt=\"\"\n            className={buildClassName(styles.media, isPreview && styles.linkPreview, transitionClassNames)}\n            draggable={false}\n          />\n          {isLoaded && <MediaAreaOverlay story={story} className={transitionClassNames} />}\n        </>\n      )}\n      {isExpired && (\n        <span>\n          <i className={buildClassName(styles.expiredIcon, 'icon icon-story-expired')} aria-hidden />\n          {lang('StoryExpiredSubtitle')}\n        </span>\n      )}\n      {Boolean(video?.duration) && (\n        <div className=\"message-media-duration\">\n          {formatMediaDuration(video!.duration)}\n        </div>\n      )}\n      {isProtected && <span className=\"protector\" />}\n    </div>\n  );\n}\n\nexport default memo(BaseStory);\n","import type { FC } from '../../../lib/teact/teact';\nimport React from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './ContextMenuContainer';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst ContextMenuContainerAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const ContextMenuContainer = useModuleLoader(Bundles.Extra, 'ContextMenuContainer', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return ContextMenuContainer ? <ContextMenuContainer {...props} /> : undefined;\n};\n\nexport default ContextMenuContainerAsync;\n","// extracted by mini-css-extract-plugin\nexport default {\"anchor\":\"IYu2f7FM\",\"mirrorAnchor\":\"GsTZawTE\",\"root\":\"McmbiWZE\",\"mirror\":\"wNvU2uqi\"};","import React, { memo, useEffect, useRef } from '../../../lib/teact/teact';\n\nimport type { ApiAvailableEffect } from '../../../api/types';\n\nimport buildClassName from '../../../util/buildClassName';\n\nimport useFlag from '../../../hooks/useFlag';\nimport { type ObserveFn, useIsIntersecting } from '../../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMedia from '../../../hooks/useMedia';\nimport useOverlayPosition from './hooks/useOverlayPosition';\n\nimport AnimatedSticker from '../../common/AnimatedSticker';\nimport Portal from '../../ui/Portal';\n\nimport styles from './MessageEffect.module.scss';\n\ntype OwnProps = {\n  messageId?: number;\n  isMirrored?: boolean;\n  effect: ApiAvailableEffect;\n  shouldPlay?: boolean;\n  observeIntersectionForLoading?: ObserveFn;\n  observeIntersectionForPlaying?: ObserveFn;\n  onStop?: VoidFunction;\n};\n\nconst EFFECT_SIZE = 256;\n\nconst MessageEffect = ({\n  messageId,\n  isMirrored,\n  effect,\n  shouldPlay,\n  observeIntersectionForLoading,\n  observeIntersectionForPlaying,\n  onStop,\n}: OwnProps) => {\n  // eslint-disable-next-line no-null/no-null\n  const anchorRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n  const canLoad = useIsIntersecting(anchorRef, observeIntersectionForLoading);\n  const canPlay = useIsIntersecting(anchorRef, observeIntersectionForPlaying);\n\n  const [isPlaying, startPlaying, stopPlaying] = useFlag();\n  const [isPositionUpdateRequired, requirePositionUpdate, resetPositionUpdate] = useFlag();\n\n  const effectHash = getEffectHash(effect);\n  const effectBlob = useMedia(effectHash, !canLoad);\n\n  const handleEnded = useLastCallback(() => {\n    stopPlaying();\n    onStop?.();\n  });\n\n  const updatePosition = useOverlayPosition({\n    anchorRef,\n    overlayRef: ref,\n    isMirrored,\n    isDisabled: !isPlaying,\n    isForMessageEffect: true,\n    id: effect.id,\n  });\n\n  useEffect(() => {\n    if (isPositionUpdateRequired) updatePosition();\n    resetPositionUpdate();\n  }, [updatePosition, resetPositionUpdate, isPositionUpdateRequired]);\n\n  useEffect(() => {\n    if (canPlay && shouldPlay && effectBlob) {\n      startPlaying();\n      requirePositionUpdate();\n    }\n  }, [canPlay, effectBlob, shouldPlay, updatePosition]);\n\n  const effectClassName = buildClassName(\n    styles.root,\n    isMirrored && styles.mirror,\n  );\n\n  return (\n    <div className={buildClassName(styles.anchor, isMirrored && styles.mirrorAnchor)} ref={anchorRef}>\n      {isPlaying && (\n        <Portal>\n          <AnimatedSticker\n            ref={ref}\n            key={`effect-${messageId ?? effect.id}`}\n            className={effectClassName}\n            tgsUrl={effectBlob}\n            size={EFFECT_SIZE}\n            play\n            isLowPriority\n            noLoop\n            forceAlways\n            onEnded={handleEnded}\n          />\n        </Portal>\n      )}\n    </div>\n  );\n};\n\nfunction getEffectHash(effect: ApiAvailableEffect) {\n  if (effect.effectAnimationId) {\n    return `sticker${effect.effectAnimationId}`;\n  }\n\n  return `sticker${effect.effectStickerId}?size=f`;\n}\n\nexport default memo(MessageEffect);\n","import React, { useEffect, useRef, useState } from '../../../lib/teact/teact';\n\nimport type { ApiMediaExtendedPreview, ApiPhoto } from '../../../api/types';\nimport type { ObserveFn } from '../../../hooks/useIntersectionObserver';\nimport type { ISettings } from '../../../types';\nimport type { IMediaDimensions } from './helpers/calculateAlbumLayout';\n\nimport { CUSTOM_APPENDIX_ATTRIBUTE, MESSAGE_CONTENT_SELECTOR } from '../../../config';\nimport { requestMutation } from '../../../lib/fasterdom/fasterdom';\nimport {\n  getMediaFormat, getMediaThumbUri, getMediaTransferState, getPhotoMediaHash,\n} from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\nimport getCustomAppendixBg from './helpers/getCustomAppendixBg';\nimport { calculateMediaDimensions, MIN_MEDIA_HEIGHT } from './helpers/mediaDimensions';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useFlag from '../../../hooks/useFlag';\nimport { useIsIntersecting } from '../../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useLayoutEffectWithPrevDeps from '../../../hooks/useLayoutEffectWithPrevDeps';\nimport useMediaTransition from '../../../hooks/useMediaTransition';\nimport useMediaWithLoadProgress from '../../../hooks/useMediaWithLoadProgress';\nimport usePreviousDeprecated from '../../../hooks/usePreviousDeprecated';\nimport useShowTransition from '../../../hooks/useShowTransition';\nimport useBlurredMediaThumbRef from './hooks/useBlurredMediaThumbRef';\n\nimport MediaSpoiler from '../../common/MediaSpoiler';\nimport ProgressSpinner from '../../ui/ProgressSpinner';\n\nexport type OwnProps<T> = {\n  id?: string;\n  photo: ApiPhoto | ApiMediaExtendedPreview;\n  isInWebPage?: boolean;\n  messageText?: string;\n  isOwn?: boolean;\n  observeIntersection?: ObserveFn;\n  noAvatars?: boolean;\n  canAutoLoad?: boolean;\n  isInSelectMode?: boolean;\n  isSelected?: boolean;\n  uploadProgress?: number;\n  forcedWidth?: number;\n  size?: 'inline' | 'pictogram';\n  shouldAffectAppendix?: boolean;\n  dimensions?: IMediaDimensions & { isSmall?: boolean };\n  asForwarded?: boolean;\n  nonInteractive?: boolean;\n  isDownloading?: boolean;\n  isProtected?: boolean;\n  theme: ISettings['theme'];\n  className?: string;\n  clickArg?: T;\n  onClick?: (arg: T, e: React.MouseEvent<HTMLElement>) => void;\n  onCancelUpload?: (arg: T) => void;\n};\n\n// eslint-disable-next-line @typescript-eslint/comma-dangle\nconst Photo = <T,>({\n  id,\n  photo,\n  messageText,\n  isOwn,\n  observeIntersection,\n  noAvatars,\n  canAutoLoad,\n  isInSelectMode,\n  isSelected,\n  uploadProgress,\n  forcedWidth,\n  size = 'inline',\n  dimensions,\n  asForwarded,\n  nonInteractive,\n  shouldAffectAppendix,\n  isDownloading,\n  isProtected,\n  theme,\n  isInWebPage,\n  clickArg,\n  className,\n  onClick,\n  onCancelUpload,\n}: OwnProps<T>) => {\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n  const isPaidPreview = photo.mediaType === 'extendedMediaPreview';\n\n  const localBlobUrl = !isPaidPreview ? photo.blobUrl : undefined;\n\n  const isIntersecting = useIsIntersecting(ref, observeIntersection);\n\n  const { isMobile } = useAppLayout();\n  const [isLoadAllowed, setIsLoadAllowed] = useState(canAutoLoad);\n  const shouldLoad = isLoadAllowed && isIntersecting && !isPaidPreview;\n  const {\n    mediaData, loadProgress,\n  } = useMediaWithLoadProgress(!isPaidPreview ? getPhotoMediaHash(photo, size) : undefined, !shouldLoad);\n  const fullMediaData = localBlobUrl || mediaData;\n\n  const withBlurredBackground = Boolean(forcedWidth);\n  const [withThumb] = useState(!fullMediaData);\n  const noThumb = Boolean(fullMediaData);\n  const thumbRef = useBlurredMediaThumbRef(photo, noThumb);\n  useMediaTransition(!noThumb, { ref: thumbRef });\n  const blurredBackgroundRef = useBlurredMediaThumbRef(photo, !withBlurredBackground);\n  const thumbDataUri = getMediaThumbUri(photo);\n\n  const [isSpoilerShown, showSpoiler, hideSpoiler] = useFlag(isPaidPreview || photo.isSpoiler);\n\n  useEffect(() => {\n    if (isPaidPreview || photo.isSpoiler) {\n      showSpoiler();\n    } else {\n      hideSpoiler();\n    }\n  }, [isPaidPreview, photo]);\n\n  const {\n    loadProgress: downloadProgress,\n  } = useMediaWithLoadProgress(\n    !isPaidPreview ? getPhotoMediaHash(photo, 'download') : undefined,\n    !isDownloading,\n    !isPaidPreview ? getMediaFormat(photo, 'download') : undefined,\n  );\n\n  const {\n    isUploading, isTransferring, transferProgress,\n  } = getMediaTransferState(\n    uploadProgress || (isDownloading ? downloadProgress : loadProgress),\n    shouldLoad && !fullMediaData,\n    uploadProgress !== undefined,\n  );\n  const wasLoadDisabled = usePreviousDeprecated(isLoadAllowed) === false;\n\n  const {\n    ref: spinnerRef,\n    shouldRender: shouldRenderSpinner,\n  } = useShowTransition({\n    isOpen: isTransferring,\n    noMountTransition: wasLoadDisabled,\n    className: 'slow',\n    withShouldRender: true,\n  });\n  const {\n    ref: downloadButtonRef,\n    shouldRender: shouldRenderDownloadButton,\n  } = useShowTransition({\n    isOpen: !fullMediaData && !isLoadAllowed,\n    withShouldRender: true,\n  });\n\n  const handleClick = useLastCallback((e: React.MouseEvent<HTMLElement>) => {\n    if (isUploading) {\n      onCancelUpload?.(clickArg!);\n      return;\n    }\n\n    if (!fullMediaData) {\n      setIsLoadAllowed((isAllowed) => !isAllowed);\n      return;\n    }\n\n    if (isSpoilerShown) {\n      hideSpoiler();\n      return;\n    }\n\n    onClick?.(clickArg!, e);\n  });\n\n  useLayoutEffectWithPrevDeps(([prevShouldAffectAppendix]) => {\n    if (!shouldAffectAppendix) {\n      if (prevShouldAffectAppendix) {\n        ref.current!.closest<HTMLDivElement>(MESSAGE_CONTENT_SELECTOR)!.removeAttribute(CUSTOM_APPENDIX_ATTRIBUTE);\n      }\n      return;\n    }\n\n    const contentEl = ref.current!.closest<HTMLDivElement>(MESSAGE_CONTENT_SELECTOR)!;\n    if (fullMediaData) {\n      const messageId = Number(contentEl.closest<HTMLDivElement>('.Message')!.dataset.messageId);\n      getCustomAppendixBg(fullMediaData, Boolean(isOwn), messageId, isSelected, theme).then((appendixBg) => {\n        requestMutation(() => {\n          contentEl.style.setProperty('--appendix-bg', appendixBg);\n          contentEl.setAttribute(CUSTOM_APPENDIX_ATTRIBUTE, '');\n        });\n      });\n    } else {\n      contentEl.classList.add('has-appendix-thumb');\n    }\n  }, [shouldAffectAppendix, fullMediaData, isOwn, isInSelectMode, isSelected, theme]);\n\n  const { width, height, isSmall } = dimensions || calculateMediaDimensions({\n    media: photo,\n    isOwn,\n    asForwarded,\n    noAvatars,\n    isMobile,\n    messageText,\n    isInWebPage,\n  });\n\n  const componentClassName = buildClassName(\n    'media-inner',\n    !isUploading && !nonInteractive && 'interactive',\n    isSmall && 'small-image',\n    width === height && 'square-image',\n    height < MIN_MEDIA_HEIGHT && 'fix-min-height',\n    className,\n  );\n\n  const dimensionsStyle = dimensions ? ` width: ${width}px; left: ${dimensions.x}px; top: ${dimensions.y}px;` : '';\n  const style = size === 'inline' ? `height: ${height}px;${dimensionsStyle}` : undefined;\n\n  return (\n    <div\n      id={id}\n      ref={ref}\n      className={componentClassName}\n      style={style}\n      onClick={isUploading ? undefined : handleClick}\n    >\n      {withBlurredBackground && (\n        <canvas ref={blurredBackgroundRef} className=\"thumbnail blurred-bg\" />\n      )}\n      {fullMediaData && (\n        <img\n          src={fullMediaData}\n          className={buildClassName('full-media', withBlurredBackground && 'with-blurred-bg')}\n          alt=\"\"\n          style={forcedWidth ? `width: ${forcedWidth}px` : undefined}\n          draggable={!isProtected}\n        />\n      )}\n      {withThumb && (\n        <canvas ref={thumbRef} className=\"thumbnail\" />\n      )}\n      {isProtected && <span className=\"protector\" />}\n      {shouldRenderSpinner && !shouldRenderDownloadButton && (\n        <div ref={spinnerRef} className=\"media-loading\">\n          <ProgressSpinner progress={transferProgress} onClick={isUploading ? handleClick : undefined} />\n        </div>\n      )}\n      {shouldRenderDownloadButton && <i ref={downloadButtonRef} className=\"icon icon-download\" />}\n      <MediaSpoiler\n        isVisible={isSpoilerShown}\n        withAnimation\n        thumbDataUri={thumbDataUri}\n        width={width}\n        height={height}\n        className=\"media-spoiler\"\n      />\n      {isTransferring && (\n        <span className=\"message-transfer-progress\">{Math.round(transferProgress * 100)}%</span>\n      )}\n    </div>\n  );\n};\n\nexport default Photo;\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  useEffect, useLayoutEffect, useRef, useSignal, useState,\n} from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiMessage } from '../../../api/types';\nimport type { ObserveFn } from '../../../hooks/useIntersectionObserver';\nimport { ApiMediaFormat } from '../../../api/types';\n\nimport {\n  getMediaFormat,\n  getMessageMediaThumbDataUri,\n  getVideoMediaHash,\n  hasMessageTtl,\n} from '../../../global/helpers';\nimport { stopCurrentAudio } from '../../../util/audioPlayer';\nimport buildClassName from '../../../util/buildClassName';\nimport { formatMediaDuration } from '../../../util/dates/dateFormat';\nimport safePlay from '../../../util/safePlay';\nimport { ROUND_VIDEO_DIMENSIONS_PX } from '../../common/helpers/mediaDimensions';\n\nimport { useThrottledSignal } from '../../../hooks/useAsyncResolvers';\nimport useFlag from '../../../hooks/useFlag';\nimport { useIsIntersecting } from '../../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMediaTransition from '../../../hooks/useMediaTransition';\nimport useMediaWithLoadProgress from '../../../hooks/useMediaWithLoadProgress';\nimport usePreviousDeprecated from '../../../hooks/usePreviousDeprecated';\nimport useShowTransition from '../../../hooks/useShowTransition';\nimport useBlurredMediaThumbRef from './hooks/useBlurredMediaThumbRef';\n\nimport Icon from '../../common/icons/Icon';\nimport MediaSpoiler from '../../common/MediaSpoiler';\nimport Button from '../../ui/Button';\nimport OptimizedVideo from '../../ui/OptimizedVideo';\nimport ProgressSpinner from '../../ui/ProgressSpinner';\n\nimport './RoundVideo.scss';\n\ntype OwnProps = {\n  message: ApiMessage;\n  className?: string;\n  canAutoLoad?: boolean;\n  isDownloading?: boolean;\n  origin?: 'oneTimeModal';\n  observeIntersection?: ObserveFn;\n  onStop?: NoneToVoidFunction;\n  onReadMedia?: NoneToVoidFunction;\n};\n\nconst PROGRESS_CENTER = ROUND_VIDEO_DIMENSIONS_PX / 2;\nconst PROGRESS_MARGIN = 6;\nconst PROGRESS_CIRCUMFERENCE = (PROGRESS_CENTER - PROGRESS_MARGIN) * 2 * Math.PI;\nconst PROGRESS_THROTTLE = 16; // Min period needed for `playerEl.currentTime` to update\n\nlet stopPrevious: NoneToVoidFunction;\n\nconst RoundVideo: FC<OwnProps> = ({\n  message,\n  className,\n  canAutoLoad,\n  isDownloading,\n  origin,\n  observeIntersection,\n  onStop,\n  onReadMedia,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const playerRef = useRef<HTMLVideoElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const circleRef = useRef<SVGCircleElement>(null);\n\n  const video = message.content.video!;\n\n  const { cancelMediaDownload, openOneTimeMediaModal } = getActions();\n\n  const isIntersecting = useIsIntersecting(ref, observeIntersection);\n\n  const [isLoadAllowed, setIsLoadAllowed] = useState(canAutoLoad);\n  const shouldLoad = Boolean(isLoadAllowed && isIntersecting);\n  const { mediaData, loadProgress } = useMediaWithLoadProgress(\n    getVideoMediaHash(video, 'inline'),\n    !shouldLoad,\n    getMediaFormat(video, 'inline'),\n  );\n\n  const { loadProgress: downloadProgress } = useMediaWithLoadProgress(\n    getVideoMediaHash(video, 'download'),\n    !isDownloading,\n    ApiMediaFormat.BlobUrl,\n  );\n\n  const [isPlayerReady, markPlayerReady] = useFlag();\n  const hasTtl = hasMessageTtl(message);\n  const isInOneTimeModal = origin === 'oneTimeModal';\n  const shouldRenderSpoiler = hasTtl && !isInOneTimeModal;\n  const hasThumb = Boolean(getMessageMediaThumbDataUri(message));\n  const noThumb = !hasThumb || isPlayerReady || shouldRenderSpoiler;\n  const thumbRef = useBlurredMediaThumbRef(video, noThumb);\n  useMediaTransition(!noThumb, { ref: thumbRef });\n  const thumbDataUri = getMessageMediaThumbDataUri(message);\n  const isTransferring = (isLoadAllowed && !isPlayerReady) || isDownloading;\n  const wasLoadDisabled = usePreviousDeprecated(isLoadAllowed) === false;\n\n  const {\n    ref: spinnerRef,\n    shouldRender: shouldRenderSpinner,\n  } = useShowTransition({\n    isOpen: isTransferring,\n    noMountTransition: wasLoadDisabled,\n    withShouldRender: true,\n  });\n\n  const [isActivated, setIsActivated] = useState(false);\n\n  const [getProgress, setProgress] = useSignal(0);\n  const getThrottledProgress = useThrottledSignal(getProgress, PROGRESS_THROTTLE);\n\n  useEffect(() => {\n    if (!isActivated) {\n      return;\n    }\n\n    const playerEl = playerRef.current!;\n    setProgress(playerEl.currentTime / playerEl.duration);\n  }, [setProgress, isActivated, getThrottledProgress]);\n\n  useLayoutEffect(() => {\n    if (!isActivated || !circleRef.current) {\n      return;\n    }\n\n    const strokeDashOffset = PROGRESS_CIRCUMFERENCE - getThrottledProgress() * PROGRESS_CIRCUMFERENCE;\n    circleRef.current.setAttribute('stroke-dashoffset', strokeDashOffset.toString());\n  }, [isActivated, getThrottledProgress]);\n\n  const shouldPlay = Boolean(mediaData && isIntersecting);\n\n  const stopPlaying = useLastCallback(() => {\n    if (!playerRef.current) {\n      return;\n    }\n\n    setIsActivated(false);\n    setProgress(0);\n    safePlay(playerRef.current);\n  });\n\n  const capturePlaying = useLastCallback(() => {\n    stopPrevious?.();\n    stopPrevious = stopPlaying;\n  });\n\n  const togglePlaying = useLastCallback(() => {\n    const playerEl = playerRef.current!;\n    if (isActivated) {\n      if (playerEl.paused) {\n        safePlay(playerEl);\n        stopCurrentAudio();\n      } else {\n        playerEl.pause();\n      }\n    } else {\n      capturePlaying();\n      // Pause is a workaround for iOS Safari – otherwise it stops video after several frames\n      playerEl.pause();\n      playerEl.currentTime = 0;\n      safePlay(playerEl);\n      stopCurrentAudio();\n      setIsActivated(true);\n    }\n  });\n\n  useEffect(() => {\n    if (!isInOneTimeModal) {\n      return;\n    }\n    togglePlaying();\n  }, [isInOneTimeModal]);\n\n  const handleClick = useLastCallback(() => {\n    if (!mediaData) {\n      setIsLoadAllowed((isAllowed) => !isAllowed);\n\n      return;\n    }\n\n    if (isDownloading) {\n      cancelMediaDownload({ media: video });\n      return;\n    }\n\n    if (hasTtl && !isInOneTimeModal) {\n      openOneTimeMediaModal({ message });\n      onReadMedia?.();\n      return;\n    }\n\n    togglePlaying();\n  });\n\n  const handleTimeUpdate = useLastCallback((e: React.UIEvent<HTMLVideoElement>) => {\n    const playerEl = e.currentTarget;\n    setProgress(playerEl.currentTime / playerEl.duration);\n  });\n\n  function renderPlayWrapper() {\n    return (\n      <div className=\"play-wrapper\">\n        <Button\n          color=\"dark\"\n          round\n          size=\"smaller\"\n          className=\"play\"\n          nonInteractive\n        >\n          <Icon name=\"play\" />\n        </Button>\n        <Icon name=\"view-once\" />\n      </div>\n    );\n  }\n\n  return (\n    <div\n      ref={ref}\n      className={buildClassName('RoundVideo', 'media-inner', isInOneTimeModal && 'non-interactive', className)}\n      onClick={handleClick}\n    >\n      {mediaData && (\n        <div className=\"video-wrapper\">\n          {shouldRenderSpoiler && (\n            <MediaSpoiler\n              isVisible\n              thumbDataUri={thumbDataUri}\n              width={ROUND_VIDEO_DIMENSIONS_PX}\n              height={ROUND_VIDEO_DIMENSIONS_PX}\n              className=\"media-spoiler\"\n            />\n          )}\n          <OptimizedVideo\n            canPlay={shouldPlay}\n            ref={playerRef}\n            src={mediaData}\n            className=\"full-media\"\n            width={ROUND_VIDEO_DIMENSIONS_PX}\n            height={ROUND_VIDEO_DIMENSIONS_PX}\n            autoPlay={!shouldRenderSpoiler}\n            disablePictureInPicture\n            muted={!isActivated}\n            loop={!isActivated}\n            playsInline\n            isPriority\n            onEnded={isActivated ? onStop ?? stopPlaying : undefined}\n            onTimeUpdate={isActivated ? handleTimeUpdate : undefined}\n            onReady={markPlayerReady}\n          />\n        </div>\n      )}\n      {!shouldRenderSpoiler && (\n        <canvas\n          ref={thumbRef}\n          className=\"thumbnail\"\n          style={`width: ${ROUND_VIDEO_DIMENSIONS_PX}px; height: ${ROUND_VIDEO_DIMENSIONS_PX}px`}\n        />\n      )}\n      <div className=\"progress\">\n        {isActivated && (\n          <svg width={ROUND_VIDEO_DIMENSIONS_PX} height={ROUND_VIDEO_DIMENSIONS_PX}>\n            <circle\n              ref={circleRef}\n              cx={PROGRESS_CENTER}\n              cy={PROGRESS_CENTER}\n              r={PROGRESS_CENTER - PROGRESS_MARGIN}\n              className=\"progress-circle\"\n              transform={`rotate(-90, ${PROGRESS_CENTER}, ${PROGRESS_CENTER})`}\n              stroke-dasharray={PROGRESS_CIRCUMFERENCE}\n              stroke-dashoffset={PROGRESS_CIRCUMFERENCE}\n            />\n          </svg>\n        )}\n      </div>\n      {shouldRenderSpinner && (\n        <div ref={spinnerRef} className=\"media-loading\">\n          <ProgressSpinner progress={isDownloading ? downloadProgress : loadProgress} />\n        </div>\n      )}\n      {shouldRenderSpoiler && !shouldRenderSpinner && renderPlayWrapper()}\n      {!mediaData && !isLoadAllowed && (\n        <i className=\"icon icon-download\" />\n      )}\n      {!isInOneTimeModal && (\n        <div className=\"message-media-duration\">\n          {isActivated ? formatMediaDuration(playerRef.current!.currentTime) : formatMediaDuration(video.duration)}\n          {(!isActivated || playerRef.current!.paused) && <Icon name=\"muted\" />}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default RoundVideo;\n","import React, { useEffect, useRef, useState } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiMediaExtendedPreview, ApiVideo } from '../../../api/types';\nimport type { ObserveFn } from '../../../hooks/useIntersectionObserver';\nimport type { IMediaDimensions } from './helpers/calculateAlbumLayout';\n\nimport {\n  getMediaFormat, getMediaThumbUri, getMediaTransferState, getVideoMediaHash,\n} from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\nimport { formatMediaDuration } from '../../../util/dates/dateFormat';\nimport * as mediaLoader from '../../../util/mediaLoader';\nimport { calculateExtendedPreviewDimensions, calculateVideoDimensions } from '../../common/helpers/mediaDimensions';\nimport { MIN_MEDIA_HEIGHT } from './helpers/mediaDimensions';\n\nimport useUnsupportedMedia from '../../../hooks/media/useUnsupportedMedia';\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useFlag from '../../../hooks/useFlag';\nimport { useIsIntersecting } from '../../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMedia from '../../../hooks/useMedia';\nimport useMediaTransition from '../../../hooks/useMediaTransition';\nimport useMediaWithLoadProgress from '../../../hooks/useMediaWithLoadProgress';\nimport usePreviousDeprecated from '../../../hooks/usePreviousDeprecated';\nimport useShowTransition from '../../../hooks/useShowTransition';\nimport useBlurredMediaThumbRef from './hooks/useBlurredMediaThumbRef';\n\nimport MediaSpoiler from '../../common/MediaSpoiler';\nimport OptimizedVideo from '../../ui/OptimizedVideo';\nimport ProgressSpinner from '../../ui/ProgressSpinner';\n\nexport type OwnProps<T> = {\n  id?: string;\n  video: ApiVideo | ApiMediaExtendedPreview;\n  isOwn?: boolean;\n  isInWebPage?: boolean;\n  observeIntersectionForLoading?: ObserveFn;\n  observeIntersectionForPlaying?: ObserveFn;\n  noAvatars?: boolean;\n  canAutoLoad?: boolean;\n  canAutoPlay?: boolean;\n  uploadProgress?: number;\n  forcedWidth?: number;\n  dimensions?: IMediaDimensions;\n  asForwarded?: boolean;\n  isDownloading?: boolean;\n  isProtected?: boolean;\n  className?: string;\n  clickArg?: T;\n  onClick?: (arg: T, e: React.MouseEvent<HTMLElement>) => void;\n  onCancelUpload?: (arg: T) => void;\n};\n\n// eslint-disable-next-line @typescript-eslint/comma-dangle\nconst Video = <T,>({\n  id,\n  video,\n  isOwn,\n  isInWebPage,\n  observeIntersectionForLoading,\n  observeIntersectionForPlaying,\n  noAvatars,\n  canAutoLoad,\n  canAutoPlay,\n  uploadProgress,\n  forcedWidth,\n  dimensions,\n  asForwarded,\n  isDownloading,\n  isProtected,\n  className,\n  clickArg,\n  onClick,\n  onCancelUpload,\n}: OwnProps<T>) => {\n  const { cancelMediaDownload } = getActions();\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const videoRef = useRef<HTMLVideoElement>(null);\n\n  const isPaidPreview = video.mediaType === 'extendedMediaPreview';\n\n  const localBlobUrl = !isPaidPreview ? video.blobUrl : undefined;\n\n  const [isSpoilerShown, showSpoiler, hideSpoiler] = useFlag(isPaidPreview || video.isSpoiler);\n\n  useEffect(() => {\n    if (isPaidPreview || video.isSpoiler) {\n      showSpoiler();\n    } else {\n      hideSpoiler();\n    }\n  }, [isPaidPreview, video]);\n\n  const isIntersectingForLoading = useIsIntersecting(ref, observeIntersectionForLoading);\n  const isIntersectingForPlaying = (\n    useIsIntersecting(ref, observeIntersectionForPlaying)\n    && isIntersectingForLoading\n  );\n  const wasIntersectedRef = useRef(isIntersectingForLoading);\n  if (isIntersectingForPlaying && !wasIntersectedRef.current) {\n    wasIntersectedRef.current = true;\n  }\n\n  const { isMobile } = useAppLayout();\n  const [isLoadAllowed, setIsLoadAllowed] = useState(canAutoLoad);\n  const shouldLoad = Boolean(isLoadAllowed && isIntersectingForLoading && !isPaidPreview);\n  const [isPlayAllowed, setIsPlayAllowed] = useState(Boolean(canAutoPlay && !isSpoilerShown));\n\n  const fullMediaHash = !isPaidPreview ? getVideoMediaHash(video, 'inline') : undefined;\n  const [isFullMediaPreloaded] = useState(Boolean(fullMediaHash && mediaLoader.getFromMemory(fullMediaHash)));\n  const { mediaData, loadProgress } = useMediaWithLoadProgress(\n    fullMediaHash,\n    !shouldLoad,\n    !isPaidPreview ? getMediaFormat(video, 'inline') : undefined,\n  );\n  const fullMediaData = localBlobUrl || mediaData;\n  const [isPlayerReady, markPlayerReady] = useFlag();\n\n  const thumbDataUri = getMediaThumbUri(video);\n  const hasThumb = Boolean(thumbDataUri);\n  const withBlurredBackground = Boolean(forcedWidth);\n\n  const previewMediaHash = !isPaidPreview ? getVideoMediaHash(video, 'preview') : undefined;\n  const [isPreviewPreloaded] = useState(Boolean(previewMediaHash && mediaLoader.getFromMemory(previewMediaHash)));\n  const canLoadPreview = isIntersectingForLoading;\n  const previewBlobUrl = useMedia(previewMediaHash, !canLoadPreview);\n  const previewRef = useMediaTransition<HTMLImageElement>((hasThumb || previewBlobUrl) && !isPlayerReady);\n\n  const noThumb = Boolean(!hasThumb || previewBlobUrl || isPlayerReady);\n  const thumbRef = useBlurredMediaThumbRef(video, noThumb);\n  useMediaTransition(!noThumb, { ref: thumbRef });\n  const blurredBackgroundRef = useBlurredMediaThumbRef(video, !withBlurredBackground);\n\n  const isInline = fullMediaData && wasIntersectedRef.current;\n\n  const isUnsupported = useUnsupportedMedia(videoRef, true, !isInline);\n  const { loadProgress: downloadProgress } = useMediaWithLoadProgress(\n    !isPaidPreview ? getVideoMediaHash(video, 'download') : undefined,\n    !isDownloading,\n    !isPaidPreview ? getMediaFormat(video, 'download') : undefined,\n  );\n\n  const { isUploading, isTransferring, transferProgress } = getMediaTransferState(\n    uploadProgress || (isDownloading ? downloadProgress : loadProgress),\n    (shouldLoad && !isPlayerReady && !isFullMediaPreloaded) || isDownloading,\n    uploadProgress !== undefined,\n  );\n\n  const wasLoadDisabled = usePreviousDeprecated(isLoadAllowed) === false;\n  const {\n    ref: spinnerRef,\n    shouldRender: shouldRenderSpinner,\n  } = useShowTransition({\n    isOpen: isTransferring && !isUnsupported,\n    noMountTransition: wasLoadDisabled,\n    withShouldRender: true,\n  });\n  const {\n    ref: playButtonRef,\n  } = useShowTransition({\n    isOpen: Boolean((isLoadAllowed || fullMediaData) && !isPlayAllowed && !shouldRenderSpinner),\n  });\n\n  const [playProgress, setPlayProgress] = useState<number>(0);\n  const handleTimeUpdate = useLastCallback((e: React.SyntheticEvent<HTMLVideoElement>) => {\n    setPlayProgress(Math.max(0, e.currentTarget.currentTime - 1));\n  });\n\n  const duration = (Number.isFinite(videoRef.current?.duration) ? videoRef.current?.duration : video.duration) || 0;\n\n  const {\n    width, height,\n  } = dimensions || (\n    isPaidPreview\n      ? calculateExtendedPreviewDimensions(video, Boolean(isOwn), asForwarded, isInWebPage, noAvatars, isMobile)\n      : calculateVideoDimensions(video, Boolean(isOwn), asForwarded, isInWebPage, noAvatars, isMobile)\n  );\n\n  const handleClick = useLastCallback((e: React.MouseEvent<HTMLElement, MouseEvent>, isFromSpinner?: boolean) => {\n    if (isUploading) {\n      onCancelUpload?.(clickArg!);\n      return;\n    }\n\n    if (!isPaidPreview && isDownloading) {\n      cancelMediaDownload({ media: video });\n      return;\n    }\n\n    if (!fullMediaData) {\n      setIsLoadAllowed((isAllowed) => !isAllowed);\n      return;\n    }\n\n    if (fullMediaData && !isPlayAllowed) {\n      setIsPlayAllowed(true);\n    }\n\n    if (isSpoilerShown) {\n      hideSpoiler();\n      return;\n    }\n\n    if (isFromSpinner && shouldLoad && !isPlayerReady && !isFullMediaPreloaded) {\n      setIsLoadAllowed(false);\n      e.stopPropagation();\n      return;\n    }\n\n    onClick?.(clickArg!, e);\n  });\n\n  const handleClickOnSpinner = useLastCallback(\n    (e: React.MouseEvent<HTMLElement, MouseEvent>) => {\n      handleClick(e, true);\n    },\n  );\n\n  const componentClassName = buildClassName(\n    'media-inner dark',\n    !isUploading && 'interactive',\n    height < MIN_MEDIA_HEIGHT && 'fix-min-height',\n    className,\n  );\n\n  const dimensionsStyle = dimensions ? ` width: ${width}px; left: ${dimensions.x}px; top: ${dimensions.y}px;` : '';\n  const style = `height: ${height}px;${dimensionsStyle}`;\n\n  return (\n    <div\n      ref={ref}\n      id={id}\n      className={componentClassName}\n      style={style}\n      onClick={isUploading ? undefined : (e) => handleClick(e)}\n    >\n      {withBlurredBackground && (\n        <canvas ref={blurredBackgroundRef} className=\"thumbnail blurred-bg\" />\n      )}\n      {isInline && (\n        <OptimizedVideo\n          ref={videoRef}\n          src={fullMediaData}\n          className={buildClassName('full-media', withBlurredBackground && 'with-blurred-bg')}\n          canPlay={isPlayAllowed && isIntersectingForPlaying && !isUnsupported}\n          muted\n          loop\n          playsInline\n          draggable={!isProtected}\n          onTimeUpdate={handleTimeUpdate}\n          onReady={markPlayerReady}\n          style={forcedWidth ? `width: ${forcedWidth}px` : undefined}\n        />\n      )}\n      <img\n        ref={previewRef}\n        src={previewBlobUrl}\n        className={buildClassName('thumbnail', withBlurredBackground && 'with-blurred-bg')}\n        alt=\"\"\n        style={forcedWidth ? `width: ${forcedWidth}px;` : undefined}\n        draggable={!isProtected}\n      />\n      {hasThumb && !isPreviewPreloaded && (\n        <canvas ref={thumbRef} className=\"thumbnail\" />\n      )}\n      {isProtected && <span className=\"protector\" />}\n      <i ref={playButtonRef} className=\"icon icon-large-play\" />\n      <MediaSpoiler\n        isVisible={isSpoilerShown}\n        withAnimation\n        thumbDataUri={thumbDataUri}\n        width={width}\n        height={height}\n        className=\"media-spoiler\"\n      />\n      {shouldRenderSpinner && (\n        <div ref={spinnerRef} className=\"media-loading\">\n          <ProgressSpinner\n            progress={transferProgress}\n            onClick={handleClickOnSpinner}\n          />\n        </div>\n      )}\n      {!isLoadAllowed && !fullMediaData && (\n        <i className=\"icon icon-download\" />\n      )}\n      {isTransferring && (!isUnsupported || isDownloading) ? (\n        <span className=\"message-transfer-progress\">\n          {(isUploading || isDownloading) ? `${Math.round(transferProgress * 100)}%` : '...'}\n        </span>\n      ) : (\n        <div className=\"message-media-duration\">\n          {!isPaidPreview && video.isGif ? 'GIF' : formatMediaDuration(Math.max(duration - playProgress, 0))}\n          {isUnsupported && <i className=\"icon icon-message-failed playback-failed\" />}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default Video;\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useRef } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiMessage, ApiTypeStory } from '../../../api/types';\nimport type { ObserveFn } from '../../../hooks/useIntersectionObserver';\nimport { AudioOrigin, type ISettings } from '../../../types';\n\nimport { getMessageWebPage } from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\nimport trimText from '../../../util/trimText';\nimport renderText from '../../common/helpers/renderText';\nimport { calculateMediaDimensions } from './helpers/mediaDimensions';\nimport { getWebpageButtonText } from './helpers/webpageType';\n\nimport useDynamicColorListener from '../../../hooks/stickers/useDynamicColorListener';\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useEnsureStory from '../../../hooks/useEnsureStory';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Audio from '../../common/Audio';\nimport Document from '../../common/Document';\nimport EmojiIconBackground from '../../common/embedded/EmojiIconBackground';\nimport SafeLink from '../../common/SafeLink';\nimport StickerView from '../../common/StickerView';\nimport Button from '../../ui/Button';\nimport BaseStory from './BaseStory';\nimport Photo from './Photo';\nimport Video from './Video';\n\nimport './WebPage.scss';\n\nconst MAX_TEXT_LENGTH = 170; // symbols\nconst WEBPAGE_STORY_TYPE = 'telegram_story';\nconst STICKER_SIZE = 80;\nconst EMOJI_SIZE = 38;\n\ntype OwnProps = {\n  message: ApiMessage;\n  observeIntersectionForLoading?: ObserveFn;\n  observeIntersectionForPlaying?: ObserveFn;\n  noAvatars?: boolean;\n  canAutoLoad?: boolean;\n  canAutoPlay?: boolean;\n  inPreview?: boolean;\n  asForwarded?: boolean;\n  isDownloading?: boolean;\n  isProtected?: boolean;\n  isConnected?: boolean;\n  backgroundEmojiId?: string;\n  theme: ISettings['theme'];\n  story?: ApiTypeStory;\n  shouldWarnAboutSvg?: boolean;\n  autoLoadFileMaxSizeMb?: number;\n  onAudioPlay?: NoneToVoidFunction;\n  onMediaClick?: NoneToVoidFunction;\n  onCancelMediaTransfer?: NoneToVoidFunction;\n  onContainerClick?: ((e: React.MouseEvent) => void);\n  isEditing?: boolean;\n};\n\nconst WebPage: FC<OwnProps> = ({\n  message,\n  observeIntersectionForLoading,\n  observeIntersectionForPlaying,\n  noAvatars,\n  canAutoLoad,\n  canAutoPlay,\n  inPreview,\n  asForwarded,\n  isDownloading = false,\n  isProtected,\n  isConnected,\n  story,\n  theme,\n  backgroundEmojiId,\n  shouldWarnAboutSvg,\n  autoLoadFileMaxSizeMb,\n  onMediaClick,\n  onContainerClick,\n  onAudioPlay,\n  onCancelMediaTransfer,\n  isEditing,\n}) => {\n  const { openTelegramLink } = getActions();\n  const webPage = getMessageWebPage(message);\n  const { isMobile } = useAppLayout();\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const stickersRef = useRef<HTMLDivElement>(null);\n\n  const lang = useOldLang();\n\n  const handleMediaClick = useLastCallback(() => {\n    onMediaClick!();\n  });\n  const handleContainerClick = useLastCallback((e: React.MouseEvent) => {\n    onContainerClick?.(e);\n  });\n\n  const handleQuickButtonClick = useLastCallback(() => {\n    if (!webPage) return;\n    openTelegramLink({\n      url: webPage.url,\n    });\n  });\n\n  const { story: storyData, stickers } = webPage || {};\n\n  useEnsureStory(storyData?.peerId, storyData?.id, story);\n\n  const hasCustomColor = stickers?.isWithTextColor || stickers?.documents?.[0]?.shouldUseTextColor;\n  const customColor = useDynamicColorListener(stickersRef, !hasCustomColor);\n\n  if (!webPage) {\n    return undefined;\n  }\n\n  const {\n    siteName,\n    url,\n    displayUrl,\n    title,\n    description,\n    photo,\n    video,\n    audio,\n    type,\n    document,\n  } = webPage;\n  const isStory = type === WEBPAGE_STORY_TYPE;\n  const isExpiredStory = story && 'isDeleted' in story;\n  const quickButtonLangKey = !inPreview && !isExpiredStory ? getWebpageButtonText(type) : undefined;\n  const truncatedDescription = trimText(description, MAX_TEXT_LENGTH);\n  const isArticle = Boolean(truncatedDescription || title || siteName);\n  let isSquarePhoto = Boolean(stickers);\n  if (isArticle && webPage?.photo && !webPage.video) {\n    const { width, height } = calculateMediaDimensions({\n      media: webPage.photo,\n      isOwn: message.isOutgoing,\n      isInWebPage: true,\n      asForwarded,\n      noAvatars,\n      isMobile,\n    });\n    isSquarePhoto = width === height;\n  }\n  const isMediaInteractive = (photo || video) && onMediaClick && !isSquarePhoto;\n\n  const className = buildClassName(\n    'WebPage',\n    inPreview && 'in-preview',\n    !isEditing && inPreview && 'interactive',\n    isSquarePhoto && 'with-square-photo',\n    !photo && !video && !inPreview && 'without-media',\n    video && 'with-video',\n    !isArticle && 'no-article',\n    document && 'with-document',\n    quickButtonLangKey && 'with-quick-button',\n  );\n\n  function renderQuickButton(langKey: string) {\n    return (\n      <Button\n        className=\"WebPage--quick-button\"\n        size=\"tiny\"\n        color=\"translucent\"\n        isRectangular\n        onClick={handleQuickButtonClick}\n      >\n        {lang(langKey)}\n      </Button>\n    );\n  }\n\n  return (\n    <div\n      ref={ref}\n      className={className}\n      data-initial={(siteName || displayUrl)[0]}\n      dir={lang.isRtl ? 'rtl' : 'auto'}\n      onClick={handleContainerClick}\n    >\n      <div className={buildClassName('WebPage--content', isStory && 'is-story')}>\n        {backgroundEmojiId && (\n          <EmojiIconBackground\n            emojiDocumentId={backgroundEmojiId}\n            className=\"WebPage--background-icons\"\n          />\n        )}\n        {isStory && (\n          <BaseStory story={story} isProtected={isProtected} isConnected={isConnected} isPreview />\n        )}\n        {photo && !video && (\n          <Photo\n            photo={photo}\n            isOwn={message.isOutgoing}\n            isInWebPage\n            observeIntersection={observeIntersectionForLoading}\n            noAvatars={noAvatars}\n            canAutoLoad={canAutoLoad}\n            size={isSquarePhoto ? 'pictogram' : 'inline'}\n            asForwarded={asForwarded}\n            nonInteractive={!isMediaInteractive}\n            isDownloading={isDownloading}\n            isProtected={isProtected}\n            theme={theme}\n            onClick={isMediaInteractive ? handleMediaClick : undefined}\n            onCancelUpload={onCancelMediaTransfer}\n          />\n        )}\n        {isArticle && (\n          <div className=\"WebPage-text\">\n            <SafeLink className=\"site-name\" url={url} text={siteName || displayUrl} />\n            {!inPreview && title && (\n              <p className=\"site-title\">{renderText(title)}</p>\n            )}\n            {truncatedDescription && (\n              <p className=\"site-description\">{renderText(truncatedDescription, ['emoji', 'br'])}</p>\n            )}\n          </div>\n        )}\n        {!inPreview && video && (\n          <Video\n            video={video}\n            isOwn={message.isOutgoing}\n            isInWebPage\n            observeIntersectionForLoading={observeIntersectionForLoading!}\n            noAvatars={noAvatars}\n            canAutoLoad={canAutoLoad}\n            canAutoPlay={canAutoPlay}\n            asForwarded={asForwarded}\n            isDownloading={isDownloading}\n            isProtected={isProtected}\n            onClick={isMediaInteractive ? handleMediaClick : undefined}\n            onCancelUpload={onCancelMediaTransfer}\n          />\n        )}\n        {!inPreview && audio && (\n          <Audio\n            theme={theme}\n            message={message}\n            origin={AudioOrigin.Inline}\n            noAvatars={noAvatars}\n            isDownloading={isDownloading}\n            onPlay={onAudioPlay}\n            onCancelUpload={onCancelMediaTransfer}\n          />\n        )}\n        {!inPreview && document && (\n          <Document\n            document={document}\n            message={message}\n            observeIntersection={observeIntersectionForLoading}\n            autoLoadFileMaxSizeMb={autoLoadFileMaxSizeMb}\n            onMediaClick={handleMediaClick}\n            onCancelUpload={onCancelMediaTransfer}\n            isDownloading={isDownloading}\n            shouldWarnAboutSvg={shouldWarnAboutSvg}\n          />\n        )}\n        {!inPreview && stickers && (\n          <div\n            ref={stickersRef}\n            className={buildClassName(\n              'media-inner', 'square-image', stickers.isEmoji && 'WebPage--emoji-grid', 'WebPage--stickers',\n            )}\n          >\n            {stickers.documents.map((sticker) => (\n              <div key={sticker.id} className=\"WebPage--sticker\">\n                <StickerView\n                  containerRef={stickersRef}\n                  sticker={sticker}\n                  shouldLoop\n                  size={stickers.isEmoji ? EMOJI_SIZE : STICKER_SIZE}\n                  customColor={customColor}\n                  observeIntersectionForPlaying={observeIntersectionForPlaying}\n                  observeIntersectionForLoading={observeIntersectionForLoading}\n                />\n              </div>\n            ))}\n          </div>\n        )}\n        {inPreview && displayUrl && !isArticle && (\n          <div className=\"WebPage-text\">\n            <p className=\"site-name\">{displayUrl}</p>\n            <p className=\"site-description\">{lang('Chat.Empty.LinkPreview')}</p>\n          </div>\n        )}\n      </div>\n      {quickButtonLangKey && renderQuickButton(quickButtonLangKey)}\n    </div>\n  );\n};\n\nexport default memo(WebPage);\n","// https://github.com/telegramdesktop/tdesktop/blob/3da787791f6d227f69b32bf4003bc6071d05e2ac/Telegram/SourceFiles/history/view/history_view_view_button.cpp#L51\nexport function getWebpageButtonText(type?: string) {\n  switch (type) {\n    case 'telegram_channel_request':\n    case 'telegram_megagroup_request':\n    case 'telegram_chat_request':\n      return 'lng_view_button_request_join';\n    case 'telegram_message':\n      return 'lng_view_button_message';\n    case 'telegram_bot':\n      return 'lng_view_button_bot';\n    case 'telegram_voicechat':\n      return 'lng_view_button_voice_chat';\n    case 'telegram_livestream':\n      return 'lng_view_button_voice_chat_channel';\n    case 'telegram_megagroup':\n    case 'telegram_chat':\n      return 'lng_view_button_group';\n    case 'telegram_channel':\n      return 'lng_view_button_channel';\n    case 'telegram_user':\n      return 'lng_view_button_user';\n    case 'telegram_botapp':\n      return 'lng_view_button_bot_app';\n    case 'telegram_chatlist':\n      return 'ViewChatList';\n    case 'telegram_story':\n      return 'lng_view_button_story';\n    case 'telegram_channel_boost':\n    case 'telegram_group_boost':\n      return 'lng_view_button_boost';\n    case 'telegram_stickerset':\n      return 'lng_view_button_stickerset';\n    default:\n      return undefined;\n  }\n}\n","import type { ISettings } from '../../../../types';\n\nimport { MAX_WORKERS, requestMediaWorker } from '../../../../util/launchMediaWorkers';\n\nconst SELECTED_APPENDIX_COLORS = {\n  dark: {\n    outgoing: 'rgb(135,116,225)',\n    incoming: 'rgb(33,33,33)',\n  },\n  light: {\n    outgoing: 'rgb(238,255,222)',\n    incoming: 'rgb(255,255,255)',\n  },\n};\n\nexport default function getCustomAppendixBg(\n  src: string, isOwn: boolean, id: number, isSelected?: boolean, theme?: ISettings['theme'],\n) {\n  if (isSelected) {\n    return Promise.resolve(SELECTED_APPENDIX_COLORS[theme || 'light'][isOwn ? 'outgoing' : 'incoming']);\n  }\n\n  return requestMediaWorker({\n    name: 'offscreen-canvas:getAppendixColorFromImage',\n    args: [src, isOwn],\n  }, Math.round(id) % MAX_WORKERS);\n}\n","import type { ApiMediaExtendedPreview, ApiPhoto, ApiVideo } from '../../../../api/types';\n\nimport {\n  calculateExtendedPreviewDimensions,\n  calculateInlineImageDimensions,\n  calculateVideoDimensions,\n  REM,\n} from '../../../common/helpers/mediaDimensions';\n\nconst SMALL_IMAGE_THRESHOLD = 12;\nconst MIN_MESSAGE_LENGTH_FOR_BLUR = 40;\nexport const MIN_MEDIA_WIDTH_WITH_TEXT = 20 * REM;\nconst MIN_MEDIA_WIDTH = SMALL_IMAGE_THRESHOLD * REM;\nexport const MIN_MEDIA_HEIGHT = 5 * REM;\n\nexport function getMinMediaWidth(text?: string, hasCommentButton?: boolean) {\n  return (text?.length ?? 0) > MIN_MESSAGE_LENGTH_FOR_BLUR || hasCommentButton\n    ? MIN_MEDIA_WIDTH_WITH_TEXT\n    : MIN_MEDIA_WIDTH;\n}\n\nexport function calculateMediaDimensions({\n  media,\n  messageText,\n  isOwn,\n  isInWebPage,\n  asForwarded,\n  noAvatars,\n  isMobile,\n} : {\n  media: ApiPhoto | ApiVideo | ApiMediaExtendedPreview;\n  messageText?: string;\n  isOwn?: boolean;\n  isInWebPage?: boolean;\n  asForwarded?: boolean;\n  noAvatars?: boolean;\n  isMobile?: boolean;\n}) {\n  const isPhoto = media.mediaType === 'photo';\n  const isVideo = media.mediaType === 'video';\n  const isWebPagePhoto = isPhoto && isInWebPage;\n  const isWebPageVideo = isVideo && isInWebPage;\n  const { width, height } = isPhoto\n    ? calculateInlineImageDimensions(media, isOwn, asForwarded, isWebPagePhoto, noAvatars, isMobile)\n    : isVideo ? calculateVideoDimensions(media, isOwn, asForwarded, isWebPageVideo, noAvatars, isMobile)\n      : calculateExtendedPreviewDimensions(media, isOwn, asForwarded, isInWebPage, noAvatars, isMobile);\n\n  const minMediaWidth = getMinMediaWidth(messageText);\n\n  let stretchFactor = 1;\n  if (width < minMediaWidth && minMediaWidth - width < SMALL_IMAGE_THRESHOLD) {\n    stretchFactor = minMediaWidth / width;\n  }\n  if (height * stretchFactor < MIN_MEDIA_HEIGHT && MIN_MEDIA_HEIGHT - height * stretchFactor < SMALL_IMAGE_THRESHOLD) {\n    stretchFactor = MIN_MEDIA_HEIGHT / height;\n  }\n\n  const finalWidth = Math.round(width * stretchFactor);\n  const finalHeight = Math.round(height * stretchFactor);\n\n  return {\n    width: finalWidth,\n    height: finalHeight,\n    isSmall: finalWidth < minMediaWidth || finalHeight < MIN_MEDIA_HEIGHT,\n  };\n}\n","import { useLayoutEffect, useMemo, useRef } from '../lib/teact/teact';\n\nimport cycleRestrict from '../util/cycleRestrict';\nimport { MAX_WORKERS, requestMediaWorker } from '../util/launchMediaWorkers';\n\nconst RADIUS = 7;\n\nlet lastWorkerIndex = -1;\n\nexport default function useOffscreenCanvasBlur(\n  thumbData?: string, // data URI or blob URL\n  isDisabled = false,\n  radius = RADIUS,\n) {\n  // eslint-disable-next-line no-null/no-null\n  const canvasRef = useRef<HTMLCanvasElement>(null);\n  const workerIndex = useMemo(() => cycleRestrict(MAX_WORKERS, ++lastWorkerIndex), []);\n  const offscreenRef = useRef<OffscreenCanvas>();\n\n  useLayoutEffect(() => {\n    if (!thumbData || isDisabled || offscreenRef.current) return;\n\n    const canvas = canvasRef.current;\n    if (!canvas) return;\n\n    offscreenRef.current = canvas.transferControlToOffscreen();\n\n    requestMediaWorker({\n      name: 'offscreen-canvas:blurThumb',\n      args: [offscreenRef.current, thumbData, radius],\n      transferables: [offscreenRef.current],\n    }, workerIndex);\n  }, [thumbData, isDisabled, radius, workerIndex]);\n\n  return canvasRef;\n}\n","import { getMediaThumbUri, type MediaWithThumbs } from '../../../../global/helpers';\n\nimport useOffscreenCanvasBlur from '../../../../hooks/useOffscreenCanvasBlur';\n\ntype CanvasBlurReturnType = ReturnType<typeof useOffscreenCanvasBlur>;\n\nexport default function useBlurredMediaThumbRef(\n  forcedUri: string | undefined, isDisabled: boolean,\n): CanvasBlurReturnType;\nexport default function useBlurredMediaThumbRef(media: MediaWithThumbs, isDisabled?: boolean) : CanvasBlurReturnType;\nexport default function useBlurredMediaThumbRef(\n  media: MediaWithThumbs | string | undefined,\n  isDisabled?: boolean,\n) {\n  const dataUri = media ? typeof media === 'string' ? media : getMediaThumbUri(media) : undefined;\n\n  return useOffscreenCanvasBlur(dataUri, isDisabled);\n}\n","import { useLayoutEffect, useRef } from '../../../../lib/teact/teact';\nimport { addExtraClass } from '../../../../lib/teact/teact-dom';\n\nimport type { FocusDirection, ScrollTargetPosition } from '../../../../types';\n\nimport { SCROLL_MAX_DISTANCE } from '../../../../config';\nimport {\n  requestForcedReflow, requestMeasure, requestMutation,\n} from '../../../../lib/fasterdom/fasterdom';\nimport animateScroll from '../../../../util/animateScroll';\n\n// This is used when the viewport was replaced.\nconst BOTTOM_FOCUS_OFFSET = 500;\nconst RELOCATED_FOCUS_OFFSET = SCROLL_MAX_DISTANCE;\nconst FOCUS_MARGIN = 20;\n\nexport default function useFocusMessage(\n  elementRef: { current: HTMLDivElement | null },\n  chatId: string,\n  isFocused?: boolean,\n  focusDirection?: FocusDirection,\n  noFocusHighlight?: boolean,\n  isResizingContainer?: boolean,\n  isJustAdded?: boolean,\n  isQuote?: boolean,\n  scrollTargetPosition?: ScrollTargetPosition,\n) {\n  const isRelocatedRef = useRef(!isJustAdded);\n\n  useLayoutEffect(() => {\n    const isRelocated = isRelocatedRef.current;\n    isRelocatedRef.current = false;\n\n    if (isFocused && elementRef.current) {\n      const messagesContainer = elementRef.current.closest<HTMLDivElement>('.MessageList')!;\n      // `noFocusHighlight` is always called with “scroll-to-bottom” buttons\n      const isToBottom = noFocusHighlight;\n      const scrollPosition = scrollTargetPosition || isToBottom ? 'end' : 'centerOrTop';\n\n      const exec = () => {\n        const result = animateScroll(\n          messagesContainer,\n          elementRef.current!,\n          scrollPosition,\n          FOCUS_MARGIN,\n          focusDirection !== undefined ? (isToBottom ? BOTTOM_FOCUS_OFFSET : RELOCATED_FOCUS_OFFSET) : undefined,\n          focusDirection,\n          undefined,\n          isResizingContainer,\n          true,\n        );\n\n        if (isQuote) {\n          const firstQuote = elementRef.current!.querySelector<HTMLSpanElement>('.is-quote');\n          if (firstQuote) {\n            requestMutation(() => {\n              addExtraClass(firstQuote, 'animate');\n            });\n          }\n        }\n\n        return result;\n      };\n\n      if (isRelocated) {\n        // We need this to override scroll setting from Message List layout effect\n        requestForcedReflow(exec);\n      } else {\n        requestMeasure(() => {\n          requestMutation(exec()!);\n        });\n      }\n    }\n  }, [\n    elementRef, chatId, isFocused, focusDirection, noFocusHighlight, isResizingContainer, isQuote, scrollTargetPosition,\n  ]);\n}\n","import { useEffect } from '../../../../lib/teact/teact';\nimport { getActions } from '../../../../global';\n\nimport type { ChatTranslatedMessages } from '../../../../global/types';\n\nimport { throttle } from '../../../../util/schedulers';\n\nconst MESSAGE_LIMIT_PER_REQUEST = 20;\nconst THROTTLE_DELAY = 500;\nconst PENDING_TRANSLATIONS = new Map<string, Map<string, number[]>>();\n\nexport default function useMessageTranslation(\n  chatTranslations: ChatTranslatedMessages | undefined,\n  chatId?: string,\n  messageId?: number,\n  requestedLanguageCode?: string,\n) {\n  const messageTranslation = requestedLanguageCode && messageId\n    ? chatTranslations?.byLangCode[requestedLanguageCode]?.[messageId] : undefined;\n\n  const { isPending, text } = messageTranslation || {};\n\n  useEffect(() => {\n    if (!chatId || !messageId) return;\n\n    if (!text && isPending === undefined && requestedLanguageCode) {\n      addPendingTranslation(chatId, messageId, requestedLanguageCode);\n    }\n  }, [chatId, text, isPending, messageId, requestedLanguageCode]);\n\n  if (!chatId || !messageId) {\n    return {\n      isPending: false,\n      translatedText: undefined,\n    };\n  }\n\n  return {\n    isPending,\n    translatedText: text,\n  };\n}\n\nconst throttledProcessPending = throttle(processPending, THROTTLE_DELAY);\n\nfunction processPending() {\n  const { translateMessages } = getActions();\n  let hasUnprocessed = false;\n  PENDING_TRANSLATIONS.forEach((chats, toLanguageCode) => {\n    chats.forEach((messageIds, chatId) => {\n      const messageIdsToTranslate = messageIds.slice(0, MESSAGE_LIMIT_PER_REQUEST);\n\n      if (messageIdsToTranslate.length < messageIds.length) {\n        hasUnprocessed = true;\n      }\n\n      translateMessages({ chatId, messageIds: messageIdsToTranslate, toLanguageCode });\n\n      removePendingTranslations(chatId, messageIdsToTranslate, toLanguageCode);\n    });\n  });\n\n  if (hasUnprocessed) {\n    throttledProcessPending();\n  }\n}\n\nfunction addPendingTranslation(\n  chatId: string,\n  messageId: number,\n  toLanguageCode: string,\n) {\n  const languageTranslations = PENDING_TRANSLATIONS.get(toLanguageCode) || new Map<string, number[]>();\n  const messageIds = languageTranslations.get(chatId) || [];\n\n  if (messageIds.includes(messageId)) {\n    throttledProcessPending();\n    return;\n  }\n\n  messageIds.push(messageId);\n  languageTranslations.set(chatId, messageIds);\n  PENDING_TRANSLATIONS.set(toLanguageCode, languageTranslations);\n\n  getActions().markMessagesTranslationPending({ chatId, messageIds, toLanguageCode });\n\n  throttledProcessPending();\n}\n\nfunction removePendingTranslations(\n  chatId: string,\n  messageIds: number[],\n  toLanguageCode: string,\n) {\n  const languageTranslations = PENDING_TRANSLATIONS.get(toLanguageCode);\n  if (!languageTranslations?.size) {\n    PENDING_TRANSLATIONS.delete(toLanguageCode);\n    return;\n  }\n\n  const oldMessageIds = languageTranslations.get(chatId);\n  if (!oldMessageIds?.length) {\n    languageTranslations.delete(chatId);\n    return;\n  }\n\n  const newMessageIds = oldMessageIds.filter((id) => !messageIds.includes(id));\n\n  if (!newMessageIds?.length) {\n    languageTranslations.delete(chatId);\n    if (!languageTranslations.size) {\n      PENDING_TRANSLATIONS.delete(toLanguageCode);\n    }\n    return;\n  }\n\n  languageTranslations.set(chatId, newMessageIds);\n}\n","import { type RefObject } from 'react';\nimport { useEffect } from '../../../../lib/teact/teact';\n\nimport { requestMutation } from '../../../../lib/fasterdom/fasterdom';\nimport { REM } from '../../../common/helpers/mediaDimensions';\n\nimport useLastCallback from '../../../../hooks/useLastCallback';\n\nconst OFFSET_X = REM;\n\nexport default function useOverlayPosition({\n  anchorRef,\n  overlayRef,\n  isMirrored,\n  isForMessageEffect,\n  isDisabled,\n  id,\n} : {\n  anchorRef: RefObject<HTMLDivElement>;\n  overlayRef: RefObject<HTMLDivElement>;\n  isMirrored?: boolean;\n  isForMessageEffect?: boolean;\n  isDisabled?: boolean;\n  id?: string;\n}) {\n  const updatePosition = useLastCallback(() => {\n    const element = overlayRef.current;\n    const anchor = anchorRef.current;\n    if (!element || !anchor) {\n      return;\n    }\n\n    const anchorRect = anchor.getBoundingClientRect();\n    const elementRect = element.getBoundingClientRect();\n    const windowWidth = window.innerWidth;\n\n    requestMutation(() => {\n      const anchorCenterY = anchorRect.top + anchorRect.height / 2;\n      const anchorBottomY = anchorRect.bottom;\n      const y = isForMessageEffect ? anchorBottomY : anchorCenterY;\n      element.style.top = `${y - elementRect.height / 2}px`;\n\n      if (isMirrored) {\n        element.style.left = `${anchorRect.left - OFFSET_X}px`;\n      } else {\n        element.style.right = `${windowWidth - anchorRect.right - OFFSET_X}px`;\n      }\n    });\n  });\n\n  useEffect(() => {\n    if (isDisabled) return;\n    updatePosition();\n  }, [isDisabled, id]);\n\n  useEffect(() => {\n    if (isDisabled) return undefined;\n\n    const messagesContainer = anchorRef.current!.closest<HTMLDivElement>('.MessageList')!;\n    if (!messagesContainer) return undefined;\n\n    messagesContainer.addEventListener('scroll', updatePosition, { passive: true });\n\n    return () => {\n      messagesContainer.removeEventListener('scroll', updatePosition);\n    };\n  }, [isDisabled, anchorRef]);\n\n  return updatePosition;\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"uGUjDZKl\",\"custom\":\"oc1hpMwv\",\"visible\":\"kqcWe4tf\",\"custom-animated\":\"sx6RTuAU\",\"customAnimated\":\"sx6RTuAU\",\"custom-fade-in\":\"_p445E1b\",\"customFadeIn\":\"_p445E1b\",\"chosen\":\"M62HGuIV\",\"static-icon\":\"MZ2tH980\",\"staticIcon\":\"MZ2tH980\",\"lock\":\"WMpEr5XQ\"};","import type { FC } from '../../../../lib/teact/teact';\nimport React, { memo } from '../../../../lib/teact/teact';\n\nimport type { ApiReaction, ApiReactionCustomEmoji } from '../../../../api/types';\n\nimport buildClassName from '../../../../util/buildClassName';\nimport { REM } from '../../../common/helpers/mediaDimensions';\n\nimport CustomEmoji from '../../../common/CustomEmoji';\nimport Icon from '../../../common/icons/Icon';\n\nimport styles from './ReactionSelectorReaction.module.scss';\n\nconst REACTION_SIZE = 2 * REM;\n\ntype OwnProps = {\n  reaction: ApiReactionCustomEmoji;\n  chosen?: boolean;\n  isReady?: boolean;\n  noAppearAnimation?: boolean;\n  style?: string;\n  isLocked?: boolean;\n  onToggleReaction: (reaction: ApiReaction) => void;\n};\n\nconst ReactionSelectorCustomReaction: FC<OwnProps> = ({\n  reaction,\n  chosen,\n  isReady,\n  noAppearAnimation,\n  style,\n  isLocked,\n  onToggleReaction,\n}) => {\n  function handleClick() {\n    onToggleReaction(reaction);\n  }\n\n  return (\n    <div\n      className={buildClassName(\n        styles.root,\n        styles.custom,\n        chosen && styles.chosen,\n        !noAppearAnimation && isReady && styles.customAnimated,\n        noAppearAnimation && styles.visible,\n      )}\n      style={style}\n      onClick={handleClick}\n    >\n      <CustomEmoji\n        documentId={reaction.documentId}\n        size={REACTION_SIZE}\n      />\n      {isLocked && (\n        <Icon className={styles.lock} name=\"lock-badge\" />\n      )}\n    </div>\n  );\n};\n\nexport default memo(ReactionSelectorCustomReaction);\n","import type { FC } from '../../../../lib/teact/teact';\nimport React, { memo } from '../../../../lib/teact/teact';\n\nimport type { ApiAvailableReaction, ApiReaction } from '../../../../api/types';\n\nimport buildClassName from '../../../../util/buildClassName';\nimport { REM } from '../../../common/helpers/mediaDimensions';\n\nimport useFlag from '../../../../hooks/useFlag';\nimport useMedia from '../../../../hooks/useMedia';\n\nimport AnimatedSticker from '../../../common/AnimatedSticker';\nimport Icon from '../../../common/icons/Icon';\n\nimport styles from './ReactionSelectorReaction.module.scss';\n\nconst REACTION_SIZE = 2 * REM;\n\ntype OwnProps = {\n  reaction: ApiAvailableReaction;\n  isReady?: boolean;\n  chosen?: boolean;\n  noAppearAnimation?: boolean;\n  isLocked?: boolean;\n  onToggleReaction: (reaction: ApiReaction) => void;\n};\n\nconst ReactionSelectorReaction: FC<OwnProps> = ({\n  reaction,\n  isReady,\n  noAppearAnimation,\n  chosen,\n  isLocked,\n  onToggleReaction,\n}) => {\n  const mediaAppearData = useMedia(`sticker${reaction.appearAnimation?.id}`, !isReady || noAppearAnimation);\n  const mediaData = useMedia(`document${reaction.selectAnimation?.id}`, !isReady || noAppearAnimation);\n  const staticIconData = useMedia(`document${reaction.staticIcon?.id}`, !noAppearAnimation);\n  const [isAnimationLoaded, markAnimationLoaded] = useFlag();\n\n  const [isFirstPlay, , unmarkIsFirstPlay] = useFlag(true);\n  const [isActivated, activate, deactivate] = useFlag();\n\n  function handleClick() {\n    onToggleReaction(reaction.reaction);\n  }\n\n  return (\n    <div\n      className={buildClassName(styles.root, chosen && styles.chosen)}\n      onClick={handleClick}\n      onMouseEnter={isReady && !isFirstPlay ? activate : undefined}\n    >\n      {noAppearAnimation && (\n        <img\n          className={styles.staticIcon}\n          src={staticIconData}\n          alt={reaction.reaction.emoticon}\n          draggable={false}\n        />\n      )}\n      {!isAnimationLoaded && !noAppearAnimation && (\n        <AnimatedSticker\n          key={reaction.appearAnimation?.id}\n          tgsUrl={mediaAppearData}\n          play={isFirstPlay}\n          noLoop\n          size={REACTION_SIZE}\n          onEnded={unmarkIsFirstPlay}\n          forceAlways\n        />\n      )}\n      {!isFirstPlay && !noAppearAnimation && (\n        <AnimatedSticker\n          key={reaction.selectAnimation?.id}\n          tgsUrl={mediaData}\n          play={isActivated}\n          noLoop\n          size={REACTION_SIZE}\n          onLoad={markAnimationLoaded}\n          onEnded={deactivate}\n          forceAlways\n        />\n      )}\n      {isLocked && (\n        <Icon className={styles.lock} name=\"lock-badge\" />\n      )}\n    </div>\n  );\n};\n\nexport default memo(ReactionSelectorReaction);\n","import type { FC } from '../../../../lib/teact/teact';\nimport React, { memo, useMemo, useRef } from '../../../../lib/teact/teact';\nimport { getActions } from '../../../../global';\n\nimport type {\n  ApiAvailableReaction, ApiChatReactions, ApiReaction, ApiReactionCount,\n} from '../../../../api/types';\nimport type { IAnchorPosition } from '../../../../types';\n\nimport {\n  canSendReaction, getReactionKey, isSameReaction, sortReactions,\n} from '../../../../global/helpers';\nimport buildClassName, { createClassNameBuilder } from '../../../../util/buildClassName';\n\nimport useLastCallback from '../../../../hooks/useLastCallback';\nimport useOldLang from '../../../../hooks/useOldLang';\n\nimport Button from '../../../ui/Button';\nimport Link from '../../../ui/Link';\nimport ReactionSelectorCustomReaction from './ReactionSelectorCustomReaction';\nimport ReactionSelectorReaction from './ReactionSelectorReaction';\n\nimport './ReactionSelector.scss';\n\ntype OwnProps = {\n  enabledReactions?: ApiChatReactions;\n  isPrivate?: boolean;\n  topReactions?: ApiReaction[];\n  defaultTagReactions?: ApiReaction[];\n  effectReactions?: ApiReaction[];\n  allAvailableReactions?: ApiAvailableReaction[];\n  currentReactions?: ApiReactionCount[];\n  reactionsLimit?: number;\n  isReady?: boolean;\n  canBuyPremium?: boolean;\n  isCurrentUserPremium?: boolean;\n  canPlayAnimatedEmojis?: boolean;\n  className?: string;\n  isInSavedMessages?: boolean;\n  isInStoryViewer?: boolean;\n  isForEffects?: boolean;\n  onClose?: NoneToVoidFunction;\n  onToggleReaction: (reaction: ApiReaction) => void;\n  onShowMore: (position: IAnchorPosition) => void;\n};\n\nconst cn = createClassNameBuilder('ReactionSelector');\nconst REACTIONS_AMOUNT = 7;\nconst FADE_IN_DELAY = 20;\n\nconst ReactionSelector: FC<OwnProps> = ({\n  allAvailableReactions,\n  topReactions,\n  defaultTagReactions,\n  enabledReactions,\n  currentReactions,\n  reactionsLimit,\n  isPrivate,\n  isReady,\n  canPlayAnimatedEmojis,\n  className,\n  isCurrentUserPremium,\n  isInSavedMessages,\n  isInStoryViewer,\n  isForEffects,\n  effectReactions,\n  onClose,\n  onToggleReaction,\n  onShowMore,\n}) => {\n  const { openPremiumModal } = getActions();\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n  const lang = useOldLang();\n\n  const areReactionsLocked = isInSavedMessages && !isCurrentUserPremium && !isInStoryViewer;\n\n  const shouldUseCurrentReactions = Boolean(reactionsLimit\n    && currentReactions && currentReactions.length >= reactionsLimit);\n\n  const availableReactions = useMemo(() => {\n    const reactions = (() => {\n      if (shouldUseCurrentReactions) return currentReactions?.map((reaction) => reaction.reaction);\n      if (isForEffects) return effectReactions;\n      if (isInSavedMessages) return defaultTagReactions;\n      if (enabledReactions?.type === 'some') return enabledReactions.allowed;\n      return allAvailableReactions?.map((reaction) => reaction.reaction);\n    })();\n\n    const filteredReactions = reactions?.map((reaction) => {\n      const isCustomReaction = 'documentId' in reaction;\n      const availableReaction = allAvailableReactions?.find((r) => isSameReaction(r.reaction, reaction));\n\n      if (isForEffects) return availableReaction;\n\n      if ((!isCustomReaction && !availableReaction) || availableReaction?.isInactive) return undefined;\n\n      if (!isPrivate && !shouldUseCurrentReactions\n         && (!enabledReactions || !canSendReaction(reaction, enabledReactions))) {\n        return undefined;\n      }\n\n      return isCustomReaction ? reaction : availableReaction;\n    }).filter(Boolean) || [];\n\n    return sortReactions(filteredReactions, topReactions);\n  }, [\n    allAvailableReactions, currentReactions, defaultTagReactions, enabledReactions, isInSavedMessages, isPrivate,\n    topReactions, isForEffects, effectReactions, shouldUseCurrentReactions,\n\n  ]);\n\n  const reactionsToRender = useMemo(() => {\n    // Component can fit one more if we do not need show more button\n    return availableReactions.length === REACTIONS_AMOUNT + 1\n      ? availableReactions\n      : availableReactions.slice(0, REACTIONS_AMOUNT);\n  }, [availableReactions]);\n  const withMoreButton = reactionsToRender.length < availableReactions.length;\n\n  const userReactionIndexes = useMemo(() => {\n    const chosenReactions = currentReactions?.filter(({ chosenOrder }) => chosenOrder !== undefined) || [];\n    return new Set(chosenReactions.map(({ reaction }) => (\n      reactionsToRender.findIndex((r) => r && isSameReaction('reaction' in r ? r.reaction : r, reaction))\n    )));\n  }, [currentReactions, reactionsToRender]);\n\n  const handleShowMoreClick = useLastCallback(() => {\n    const bound = ref.current?.getBoundingClientRect() || { x: 0, y: 0 };\n    onShowMore({\n      x: bound.x,\n      y: bound.y,\n    });\n  });\n\n  const handleOpenPremiumModal = useLastCallback(() => {\n    onClose?.();\n    openPremiumModal({\n      initialSection: 'saved_tags',\n    });\n  });\n\n  const hintText = useMemo(() => {\n    if (isInSavedMessages) {\n      if (!isCurrentUserPremium) {\n        const text = lang('lng_subscribe_tag_about');\n        const parts = text.split('{link}');\n        return (\n          <span>\n            {parts[0]}\n            <Link isPrimary onClick={handleOpenPremiumModal}>\n              {lang('lng_subscribe_tag_link')}\n            </Link>\n            {parts[1]}\n          </span>\n        );\n      }\n\n      return lang('SavedTagReactionsHint2');\n    }\n\n    if (isInStoryViewer) {\n      return lang('StoryReactionsHint');\n    }\n\n    if (isForEffects) {\n      return lang('AddEffectMessageHint');\n    }\n\n    return undefined;\n  }, [isCurrentUserPremium, isInSavedMessages, isInStoryViewer, lang, isForEffects]);\n\n  if (!reactionsToRender.length) return undefined;\n\n  return (\n    <div className={buildClassName(cn('&'), className)} ref={ref}>\n      <div className={cn('bubble-small', lang.isRtl && 'isRtl')} />\n      <div className={cn('items-wrapper')}>\n        <div className={cn('bubble-big', lang.isRtl && 'isRtl')} />\n        <div className={cn('items')}>\n          {hintText && <div className={cn('hint')}>{hintText}</div>}\n          <div className={cn('reactions')} dir={lang.isRtl ? 'rtl' : undefined}>\n            {reactionsToRender.map((reaction, i) => (\n              'reaction' in reaction ? (\n                <ReactionSelectorReaction\n                  key={getReactionKey(reaction.reaction)}\n                  isReady={isReady}\n                  onToggleReaction={onToggleReaction}\n                  reaction={reaction}\n                  noAppearAnimation={!canPlayAnimatedEmojis}\n                  chosen={userReactionIndexes.has(i)}\n                  isLocked={areReactionsLocked}\n                />\n              ) : (\n                <ReactionSelectorCustomReaction\n                  key={getReactionKey(reaction)}\n                  isReady={isReady}\n                  onToggleReaction={onToggleReaction}\n                  reaction={reaction}\n                  noAppearAnimation={!canPlayAnimatedEmojis}\n                  chosen={userReactionIndexes.has(i)}\n                  isLocked={areReactionsLocked}\n                  style={`--_animation-delay: ${(REACTIONS_AMOUNT - i) * FADE_IN_DELAY}ms`}\n                />\n              )\n            ))}\n            {withMoreButton && (\n              <Button\n                color=\"translucent\"\n                className={cn('show-more')}\n                onClick={handleShowMoreClick}\n              >\n                <i className=\"icon icon-down\" />\n              </Button>\n            )}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(ReactionSelector);\n","// extracted by mini-css-extract-plugin\nexport default {\"subtitle\":\"cGrbcqD_\"};","import React, { memo, useState } from '../../../lib/teact/teact';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Button from '../../ui/Button';\nimport InputText from '../../ui/InputText';\nimport Modal from '../../ui/Modal';\n\nimport styles from './PromptDialog.module.scss';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  title: string;\n  subtitle?: React.ReactNode;\n  placeholder: string;\n  submitText?: string;\n  maxLength?: number;\n  initialValue?: string;\n  onClose: NoneToVoidFunction;\n  onSubmit: (text: string) => void;\n};\n\nconst PromptDialog = ({\n  isOpen,\n  title,\n  subtitle,\n  placeholder,\n  submitText,\n  maxLength,\n  initialValue = '',\n  onClose,\n  onSubmit,\n}: OwnProps) => {\n  const lang = useOldLang();\n\n  const [text, setText] = useState(initialValue);\n\n  const handleTextChange = useLastCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    setText(e.target.value);\n  });\n\n  const handleSubmit = useLastCallback(() => {\n    onSubmit(text);\n  });\n\n  return (\n    <Modal\n      className=\"narrow\"\n      title={title}\n      isOpen={isOpen}\n      onClose={onClose}\n      isSlim\n    >\n      {Boolean(subtitle) && (\n        <div className={styles.subtitle}>\n          {subtitle}\n        </div>\n      )}\n      <InputText\n        placeholder={placeholder}\n        value={text}\n        onChange={handleTextChange}\n        maxLength={maxLength}\n        teactExperimentControlled\n      />\n      <div className=\"dialog-buttons mt-2\">\n        <Button className=\"confirm-dialog-button\" onClick={handleSubmit}>\n          {submitText || lang('Save')}\n        </Button>\n        <Button className=\"confirm-dialog-button\" isText onClick={onClose}>\n          {lang('Cancel')}\n        </Button>\n      </div>\n    </Modal>\n  );\n};\n\nexport default memo(PromptDialog);\n","import React, { memo, useRef } from '../../../../lib/teact/teact';\nimport { getActions } from '../../../../global';\n\nimport type { ApiReaction, ApiSavedReactionTag } from '../../../../api/types';\nimport type { ObserveFn } from '../../../../hooks/useIntersectionObserver';\n\nimport buildClassName from '../../../../util/buildClassName';\nimport { REM } from '../../../common/helpers/mediaDimensions';\n\nimport useContextMenuHandlers from '../../../../hooks/useContextMenuHandlers';\nimport useFlag from '../../../../hooks/useFlag';\nimport useLastCallback from '../../../../hooks/useLastCallback';\nimport useOldLang from '../../../../hooks/useOldLang';\n\nimport ReactionAnimatedEmoji from '../../../common/reactions/ReactionAnimatedEmoji';\nimport PromptDialog from '../../../modals/prompt/PromptDialog';\nimport Button from '../../../ui/Button';\nimport Menu from '../../../ui/Menu';\nimport MenuItem from '../../../ui/MenuItem';\n\nimport styles from './ReactionButton.module.scss';\n\nconst REACTION_SIZE = 1.25 * REM;\nconst TITLE_MAX_LENGTH = 15;\nconst LOOP_LIMIT = 1;\n\ntype OwnProps = {\n  reaction: ApiReaction;\n  tag?: ApiSavedReactionTag;\n  containerId: string;\n  isChosen?: boolean;\n  isOwnMessage?: boolean;\n  withCount?: boolean;\n  className?: string;\n  chosenClassName?: string;\n  isDisabled?: boolean;\n  withContextMenu?: boolean;\n  observeIntersection?: ObserveFn;\n  onClick?: (reaction: ApiReaction) => void;\n  onRemove?: (reaction: ApiReaction) => void;\n};\n\nconst SavedTagButton = ({\n  reaction,\n  tag,\n  containerId,\n  isChosen,\n  isOwnMessage,\n  className,\n  chosenClassName,\n  withCount,\n  isDisabled,\n  withContextMenu,\n  observeIntersection,\n  onClick,\n  onRemove,\n}: OwnProps) => {\n  const { editSavedReactionTag } = getActions();\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLButtonElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const menuRef = useRef<HTMLDivElement>(null);\n\n  const lang = useOldLang();\n  const [isRenamePromptOpen, openRenamePrompt, closeRenamePrompt] = useFlag();\n\n  const { title, count } = tag || {};\n  const hasText = Boolean(title || (withCount && count));\n\n  const handleClick = useLastCallback(() => {\n    onClick?.(reaction);\n  });\n\n  const handleRemoveClick = useLastCallback(() => {\n    onRemove?.(reaction);\n  });\n\n  const handleRenameTag = useLastCallback((newTitle: string) => {\n    editSavedReactionTag({\n      reaction,\n      title: newTitle,\n    });\n    closeRenamePrompt();\n  });\n\n  const {\n    isContextMenuOpen,\n    contextMenuAnchor,\n    handleBeforeContextMenu,\n    handleContextMenu,\n    handleContextMenuClose,\n    handleContextMenuHide,\n  } = useContextMenuHandlers(ref, !withContextMenu);\n\n  const getTriggerElement = useLastCallback(() => ref.current);\n  const getRootElement = useLastCallback(() => document.body);\n  const getMenuElement = useLastCallback(() => menuRef.current);\n  const getLayout = useLastCallback(() => ({ withPortal: true, shouldAvoidNegativePosition: true }));\n\n  if (withCount && count === 0) {\n    return undefined;\n  }\n\n  return (\n    <Button\n      className={buildClassName(\n        styles.root,\n        styles.tag,\n        isOwnMessage && styles.own,\n        isChosen && styles.chosen,\n        isChosen && chosenClassName,\n        isDisabled && styles.disabled,\n        className,\n      )}\n      size=\"tiny\"\n      onClick={handleClick}\n      onMouseDown={handleBeforeContextMenu}\n      onContextMenu={handleContextMenu}\n      ref={ref}\n    >\n      <ReactionAnimatedEmoji\n        className={styles.animatedEmoji}\n        containerId={containerId}\n        reaction={reaction}\n        loopLimit={LOOP_LIMIT}\n        size={REACTION_SIZE}\n        observeIntersection={observeIntersection}\n      />\n      {hasText && (\n        <span className={styles.tagText}>\n          {title && <span>{title}</span>}\n          {withCount && <span>{count}</span>}\n        </span>\n      )}\n      <svg\n        className={styles.tail}\n        width=\"15\"\n        height=\"30\"\n        viewBox=\"0 0 15 30\"\n      >\n        <path className={styles.tailFill} d=\"m 0,30 c 3.1855,0 6.1803,-1.5176 8.0641,-4.0864 l 5.835,-7.9568 c 1.2906,-1.7599 1.2906,-4.1537 0,-5.9136 L 8.0641,4.08636 C 6.1803,1.51761 3.1855,0 0,0\" />\n      </svg>\n      {withContextMenu && (\n        <PromptDialog\n          isOpen={isRenamePromptOpen}\n          maxLength={TITLE_MAX_LENGTH}\n          title={lang(tag?.title ? 'SavedTagRenameTag' : 'SavedTagLabelTag')}\n          subtitle={lang('SavedTagLabelTagText')}\n          placeholder={lang('SavedTagLabelPlaceholder')}\n          initialValue={tag?.title}\n          onClose={closeRenamePrompt}\n          onSubmit={handleRenameTag}\n        />\n      )}\n      {withContextMenu && contextMenuAnchor && (\n        <Menu\n          ref={menuRef}\n          isOpen={isContextMenuOpen}\n          anchor={contextMenuAnchor}\n          getTriggerElement={getTriggerElement}\n          getRootElement={getRootElement}\n          getMenuElement={getMenuElement}\n          getLayout={getLayout}\n          autoClose\n          withPortal\n          onClose={handleContextMenuClose}\n          onCloseAnimationEnd={handleContextMenuHide}\n        >\n          <MenuItem icon=\"tag-filter\" onClick={handleClick}>\n            {lang('SavedTagFilterByTag')}\n          </MenuItem>\n          <MenuItem icon=\"tag-name\" onClick={openRenamePrompt}>\n            {lang(tag?.title ? 'SavedTagRenameTag' : 'SavedTagLabelTag')}\n          </MenuItem>\n          <MenuItem icon=\"tag-crossed\" destructive onClick={handleRemoveClick}>\n            {lang('SavedTagRemoveTag')}\n          </MenuItem>\n        </Menu>\n      )}\n    </Button>\n  );\n};\n\nexport default memo(SavedTagButton);\n","import { useEffect, useRef } from '../../../lib/teact/teact';\n\nimport useForceUpdate from '../../../hooks/useForceUpdate';\nimport useSyncEffect from '../../../hooks/useSyncEffect';\n\nexport default function useAsyncRendering<T extends any[]>(dependencies: T, delay?: number) {\n  const isDisabled = delay === undefined;\n  const shouldRenderRef = useRef(isDisabled);\n  const timeoutRef = useRef<number>();\n  const forceUpdate = useForceUpdate();\n\n  useSyncEffect(() => {\n    if (isDisabled) {\n      return;\n    }\n\n    shouldRenderRef.current = false;\n\n    if (timeoutRef.current) {\n      clearTimeout(timeoutRef.current);\n      timeoutRef.current = undefined;\n    }\n  // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n  }, dependencies);\n\n  useEffect(() => {\n    if (isDisabled || shouldRenderRef.current) {\n      return;\n    }\n\n    const exec = () => {\n      shouldRenderRef.current = true;\n      forceUpdate();\n    };\n\n    if (delay! > 0) {\n      timeoutRef.current = window.setTimeout(exec, delay);\n    } else {\n      exec();\n    }\n    // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n  }, dependencies);\n\n  return shouldRenderRef.current;\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"Gi8Nokbl\",\"header\":\"H01lE7mv\",\"title\":\"VQbs04hT\",\"caption\":\"X7bBlGdi\",\"table\":\"s5beXqqL\",\"tableCell\":\"gvrp3KoR\",\"tableHeading\":\"IHb3ZATQ\",\"tableValue\":\"zAPFdKbZ\",\"tableSecondaryValue\":\"_mYEmh_u\",\"value\":\"idLrmbhS\",\"negative\":\"SLfwGHQC\",\"decimalPart\":\"ZAfXkuWL\",\"decimalUsdPart\":\"HRXb_S2M\",\"toncoin\":\"it39BC_c\"};","import type { ReactNode } from 'react';\nimport type { FC } from '../../../lib/teact/teact';\nimport React, { memo } from '../../../lib/teact/teact';\n\nimport type {\n  ApiBoostStatistics, ApiChannelMonetizationStatistics,\n  ApiChannelStatistics, ApiGroupStatistics, ApiPostStatistics, StatisticsOverviewItem,\n} from '../../../api/types';\n\nimport buildClassName from '../../../util/buildClassName';\nimport { formatFullDate } from '../../../util/dates/dateFormat';\nimport { formatInteger, formatIntegerCompact } from '../../../util/textFormat';\n\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Icon from '../../common/icons/Icon';\n\nimport styles from './StatisticsOverview.module.scss';\n\ntype OverviewCell = {\n  name: string;\n  title: string;\n  isPercentage?: boolean;\n  withAbsoluteValue?: boolean;\n  isPlain?: boolean;\n  isApproximate?: boolean;\n};\n\nconst CHANNEL_OVERVIEW: OverviewCell[][] = [\n  [\n    { name: 'followers', title: 'ChannelStats.Overview.Followers' },\n    { name: 'enabledNotifications', title: 'ChannelStats.Overview.EnabledNotifications', isPercentage: true },\n  ],\n  [\n    { name: 'viewsPerPost', title: 'ChannelStats.Overview.ViewsPerPost' },\n    { name: 'viewsPerStory', title: 'ChannelStats.Overview.ViewsPerStory' },\n  ],\n  [\n    { name: 'sharesPerPost', title: 'ChannelStats.Overview.SharesPerPost' },\n    { name: 'sharesPerStory', title: 'ChannelStats.Overview.SharesPerStory' },\n  ],\n  [\n    { name: 'reactionsPerPost', title: 'ChannelStats.Overview.ReactionsPerPost' },\n    { name: 'reactionsPerStory', title: 'ChannelStats.Overview.ReactionsPerStory' },\n  ],\n];\n\nconst GROUP_OVERVIEW: OverviewCell[][] = [\n  [\n    { name: 'members', title: 'Stats.GroupMembers' },\n    { name: 'messages', title: 'Stats.GroupMessages' },\n  ],\n  [\n    { name: 'viewers', title: 'Stats.GroupViewers' },\n    { name: 'posters', title: 'Stats.GroupPosters' },\n  ],\n];\n\nconst MESSAGE_OVERVIEW: OverviewCell[][] = [\n  [\n    { name: 'viewsCount', title: 'Stats.Message.Views', isPlain: true },\n    { name: 'publicForwards', title: 'Stats.Message.PublicShares', isPlain: true },\n  ],\n  [\n    { name: 'reactionsCount', title: 'Channel.Stats.Overview.Reactions', isPlain: true },\n    {\n      name: 'forwardsCount', title: 'Stats.Message.PrivateShares', isPlain: true, isApproximate: true,\n    },\n  ],\n];\n\nconst STORY_OVERVIEW: OverviewCell[][] = [\n  [\n    { name: 'viewsCount', title: 'Channel.Stats.Overview.Views', isPlain: true },\n    { name: 'publicForwards', title: 'PublicShares', isPlain: true },\n  ],\n  [\n    { name: 'reactionsCount', title: 'Channel.Stats.Overview.Reactions', isPlain: true },\n    { name: 'forwardsCount', title: 'PrivateShares', isPlain: true },\n  ],\n];\n\nconst BOOST_OVERVIEW: OverviewCell[][] = [\n  [\n    { name: 'level', title: 'Stats.Boosts.Level', isPlain: true },\n    {\n      name: 'premiumSubscribers',\n      title: 'Stats.Boosts.PremiumSubscribers',\n      isPercentage: true,\n      isApproximate: true,\n      withAbsoluteValue: true,\n    },\n  ],\n  [\n    { name: 'boosts', title: 'Stats.Boosts.ExistingBoosts', isPlain: true },\n    { name: 'remainingBoosts', title: 'Stats.Boosts.BoostsToLevelUp', isPlain: true },\n  ],\n];\n\ntype StatisticsType = 'channel' | 'group' | 'message' | 'boost' | 'story' | 'monetization';\n\nexport type OwnProps = {\n  type: StatisticsType;\n  title?: string;\n  className?: string;\n  isToncoin?: boolean;\n  statistics:\n  ApiChannelStatistics |\n  ApiGroupStatistics |\n  ApiPostStatistics |\n  ApiBoostStatistics |\n  ApiChannelMonetizationStatistics;\n  subtitle?: ReactNode;\n};\n\nconst StatisticsOverview: FC<OwnProps> = ({\n  title,\n  type,\n  statistics,\n  isToncoin,\n  className,\n  subtitle,\n}) => {\n  const lang = useOldLang();\n\n  const renderOverviewItemValue = ({ change, percentage }: StatisticsOverviewItem) => {\n    if (!change) {\n      return undefined;\n    }\n\n    const isChangeNegative = Number(change) < 0;\n\n    return (\n      <span className={buildClassName(styles.value, isChangeNegative && styles.negative)}>\n        {isChangeNegative ? `-${formatIntegerCompact(Math.abs(change))}` : `+${formatIntegerCompact(change)}`}\n        {percentage && (\n          <>\n            {' '}\n            ({percentage}%)\n          </>\n        )}\n      </span>\n    );\n  };\n\n  const renderBalanceCell = (balance: number, usdRate: number, text: string) => {\n    const [integerTonPart, decimalTonPart] = balance.toFixed(4).split('.');\n    const [integerUsdPart, decimalUsdPart] = (balance * usdRate).toFixed(2).split('.');\n    return (\n      <div>\n        <Icon className={styles.toncoin} name=\"toncoin\" />\n        <b className={styles.tableValue}>\n          {integerTonPart}<span className={styles.decimalPart}>.{decimalTonPart}</span>\n        </b>\n        {' '}\n        <span className={styles.tableHeading}>\n          ≈ ${integerUsdPart}<span className={styles.decimalUsdPart}>.{decimalUsdPart}</span>\n        </span>\n        <h3 className={styles.tableHeading}>{lang(text)}</h3>\n      </div>\n    );\n  };\n\n  const { period } = (statistics as ApiGroupStatistics);\n  const { balances, usdRate } = (statistics as ApiChannelMonetizationStatistics);\n\n  const schema = getSchemaByType(type);\n\n  return (\n    <div className={buildClassName(styles.root, className)}>\n      <div className={styles.header}>\n        {title && (\n          <div className={styles.title}>\n            {title}\n          </div>\n        )}\n\n        {period && (\n          <div className={styles.caption}>\n            {formatFullDate(lang, period.minDate * 1000)} — {formatFullDate(lang, period.maxDate * 1000)}\n          </div>\n        )}\n      </div>\n\n      <table className={styles.table}>\n        {isToncoin ? (\n          <tr>\n            <td className={styles.tableCell}>\n              {renderBalanceCell(balances?.availableBalance || 0, usdRate || 0, 'lng_channel_earn_available')}\n              {renderBalanceCell(balances?.currentBalance || 0, usdRate || 0, 'lng_channel_earn_reward')}\n              {renderBalanceCell(balances?.overallRevenue || 0, usdRate || 0, 'lng_channel_earn_total')}\n            </td>\n          </tr>\n        ) : schema.map((row) => (\n          <tr>\n            {row.map((cell: OverviewCell) => {\n              const field = (statistics as any)[cell.name];\n\n              if (cell.isPlain) {\n                return (\n                  <td className={styles.tableCell}>\n                    <b className={styles.tableValue}>\n                      {`${cell.isApproximate ? '≈' : ''}${formatInteger(field)}`}\n                    </b>\n                    <h3 className={styles.tableHeading}>{lang(cell.title)}</h3>\n                  </td>\n                );\n              }\n\n              if (cell.isPercentage) {\n                return (\n                  <td className={styles.tableCell}>\n                    {cell.withAbsoluteValue && (\n                      <span className={styles.tableValue}>\n                        {`${cell.isApproximate ? '≈' : ''}${formatInteger(field.part)}`}\n                      </span>\n                    )}\n                    <span className={cell.withAbsoluteValue ? styles.tableSecondaryValue : styles.tableValue}>\n                      {field.percentage}%\n                    </span>\n                    <h3 className={styles.tableHeading}>{lang(cell.title)}</h3>\n                  </td>\n                );\n              }\n\n              return (\n                <td className={styles.tableCell}>\n                  <b className={styles.tableValue}>\n                    {formatIntegerCompact(field.current)}\n                  </b>\n                  {' '}\n                  {renderOverviewItemValue(field)}\n                  <h3 className={styles.tableHeading}>{lang(cell.title)}</h3>\n                </td>\n              );\n            })}\n          </tr>\n        ))}\n      </table>\n\n      {subtitle}\n    </div>\n  );\n};\n\nfunction getSchemaByType(type: StatisticsType) {\n  switch (type) {\n    case 'group':\n      return GROUP_OVERVIEW;\n    case 'message':\n      return MESSAGE_OVERVIEW;\n    case 'boost':\n      return BOOST_OVERVIEW;\n    case 'story':\n      return STORY_OVERVIEW;\n    case 'channel':\n    default:\n      return CHANNEL_OVERVIEW;\n  }\n}\n\nexport default memo(StatisticsOverview);\n","// extracted by mini-css-extract-plugin\nexport default {\"overlay\":\"RXAMu4VD\",\"mediaArea\":\"pruw1nLm\",\"preview\":\"_5HkplWee\",\"shiny\":\"xFjJpeOA\",\"wave\":\"Ux0tlNbE\",\"suggestedReaction\":\"WQ5DA3P_\",\"dark\":\"eic2vQ8c\",\"background\":\"j4MKFabm\",\"flipped\":\"furSXGdL\",\"reaction\":\"Et3MvYmN\",\"withCount\":\"mFTLUHm2\",\"reactionCount\":\"Tr8mYyDk\"};","import React, {\n  memo, useMemo, useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiMediaAreaSuggestedReaction, ApiStory } from '../../../api/types';\n\nimport { getStoryKey, isSameReaction, isUserId } from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\nimport buildStyle from '../../../util/buildStyle';\nimport { REM } from '../../common/helpers/mediaDimensions';\n\nimport useEffectWithPrevDeps from '../../../hooks/useEffectWithPrevDeps';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useResizeObserver from '../../../hooks/useResizeObserver';\n\nimport ReactionAnimatedEmoji from '../../common/reactions/ReactionAnimatedEmoji';\n\nimport styles from './MediaArea.module.scss';\n\ntype OwnProps = {\n  story: ApiStory;\n  mediaArea: ApiMediaAreaSuggestedReaction;\n  index: number;\n  isPreview?: boolean;\n  className?: string;\n  style?: string;\n};\n\nconst REACTION_SIZE_MULTIPLIER = 0.6;\nconst EFFECT_SIZE_MULTIPLIER = 4;\n\nconst MediaAreaSuggestedReaction = ({\n  story,\n  mediaArea,\n  index,\n  className,\n  style,\n  isPreview,\n}: OwnProps) => {\n  const { sendStoryReaction } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n  const [customEmojiSize, setCustomEmojiSize] = useState(1.5 * REM);\n\n  const { peerId, id, views } = story;\n  const { reactions } = views || {};\n  const { reaction, isDark, isFlipped } = mediaArea;\n\n  const isChannel = !isUserId(peerId);\n  const containerId = `${getStoryKey(peerId, id)}-${index}-${isPreview ? 'preview' : 'viewer'}`;\n\n  const reactionCount = useMemo(() => (\n    reactions?.find((r) => isSameReaction(r.reaction, reaction))?.count\n  ), [reaction, reactions]);\n  const shouldDisplayCount = !isPreview && Boolean(reactionCount) && isChannel;\n\n  const updateCustomEmojiSize = useLastCallback(() => {\n    if (!ref.current) return;\n    const height = ref.current.clientHeight;\n    setCustomEmojiSize(Math.round(height * REACTION_SIZE_MULTIPLIER));\n  });\n\n  useEffectWithPrevDeps(([prevReactionCount]) => {\n    if (Boolean(reactionCount) !== Boolean(prevReactionCount)) {\n      updateCustomEmojiSize();\n    }\n  }, [reactionCount]);\n\n  useResizeObserver(ref, updateCustomEmojiSize);\n\n  const handleClick = useLastCallback(() => {\n    sendStoryReaction({\n      peerId,\n      storyId: id,\n      containerId,\n      reaction,\n    });\n  });\n\n  return (\n    <div\n      ref={ref}\n      className={buildClassName(styles.suggestedReaction, isDark && styles.dark, className)}\n      style={buildStyle(style, `--custom-emoji-size: ${customEmojiSize}px`)}\n      onClick={handleClick}\n    >\n      <div\n        className={buildClassName(styles.background, isFlipped && styles.flipped)}\n      />\n      {Boolean(customEmojiSize) && (\n        <ReactionAnimatedEmoji\n          className={buildClassName(styles.reaction, shouldDisplayCount && styles.withCount)}\n          reaction={reaction}\n          containerId={containerId}\n          size={customEmojiSize}\n          effectSize={customEmojiSize * EFFECT_SIZE_MULTIPLIER}\n          shouldPause={isPreview}\n          shouldLoop={!isPreview}\n        />\n      )}\n      {shouldDisplayCount && (\n        <span className={styles.reactionCount}>{reactionCount}</span>\n      )}\n    </div>\n  );\n};\n\nexport default memo(MediaAreaSuggestedReaction);\n","import React, { memo, useEffect, useRef } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiMediaArea, ApiStory } from '../../../api/types';\n\nimport { MOBILE_SCREEN_MAX_WIDTH } from '../../../config';\nimport { requestMutation } from '../../../lib/fasterdom/fasterdom';\nimport buildClassName from '../../../util/buildClassName';\nimport buildStyle from '../../../util/buildStyle';\n\nimport useWindowSize from '../../../hooks/window/useWindowSize';\n\nimport MediaAreaSuggestedReaction from './MediaAreaSuggestedReaction';\n\nimport styles from './MediaArea.module.scss';\n\ntype OwnProps = {\n  story: ApiStory;\n  isActive?: boolean;\n  className?: string;\n};\n\nconst STORY_ASPECT_RATIO = 9 / 16;\n\nconst MediaAreaOverlay = ({\n  story, isActive, className,\n}: OwnProps) => {\n  const {\n    openMapModal, focusMessage, closeStoryViewer, openUrl,\n  } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n\n  const windowSize = useWindowSize();\n\n  useEffect(() => {\n    if (!ref.current || !isActive) return;\n    const element = ref.current;\n\n    if (windowSize.width > MOBILE_SCREEN_MAX_WIDTH) {\n      requestMutation(() => {\n        element.style.removeProperty('--media-width');\n        element.style.removeProperty('--media-height');\n      });\n      return;\n    }\n\n    const screenAspectRatio = windowSize.width / windowSize.height;\n\n    const width = screenAspectRatio < STORY_ASPECT_RATIO\n      ? element.clientHeight * STORY_ASPECT_RATIO : element.clientWidth;\n    const height = screenAspectRatio < STORY_ASPECT_RATIO\n      ? element.clientHeight : element.clientWidth / STORY_ASPECT_RATIO;\n\n    requestMutation(() => {\n      element.style.setProperty('--media-width', `${width}px`);\n      element.style.setProperty('--media-height', `${height}px`);\n    });\n  }, [isActive, windowSize]);\n\n  const handleMediaAreaClick = (mediaArea: ApiMediaArea) => {\n    switch (mediaArea.type) {\n      case 'geoPoint':\n      case 'venue': {\n        openMapModal({ geoPoint: mediaArea.geo });\n        break;\n      }\n      case 'channelPost': {\n        focusMessage({\n          chatId: mediaArea.channelId,\n          messageId: mediaArea.messageId,\n        });\n        closeStoryViewer();\n        break;\n      }\n      case 'url': {\n        openUrl({ url: mediaArea.url });\n        break;\n      }\n    }\n  };\n\n  const mediaAreas = story.mediaAreas;\n\n  return (\n    <div\n      className={buildClassName(styles.overlay, !isActive && styles.preview, className)}\n      ref={ref}\n    >\n      {mediaAreas?.map((mediaArea, i) => {\n        switch (mediaArea.type) {\n          case 'geoPoint':\n          case 'venue':\n          case 'channelPost':\n          case 'url': {\n            const isShiny = isActive && (mediaArea.type !== 'channelPost');\n            return (\n              <div\n                className={buildClassName(styles.mediaArea, isShiny && styles.shiny)}\n                style={prepareStyle(mediaArea)}\n                onClick={() => handleMediaAreaClick(mediaArea)}\n              />\n            );\n          }\n          case 'suggestedReaction':\n            return (\n              <MediaAreaSuggestedReaction\n                // eslint-disable-next-line react/no-array-index-key\n                key={`${mediaArea.type}-${i}`}\n                story={story}\n                mediaArea={mediaArea}\n                index={i}\n                isPreview={!isActive}\n                className={styles.mediaArea}\n                style={prepareStyle(mediaArea)}\n              />\n            );\n          default:\n            return undefined;\n        }\n      })}\n    </div>\n  );\n};\n\nfunction prepareStyle(mediaArea: ApiMediaArea) {\n  const {\n    x, y, width, height, rotation, radius,\n  } = mediaArea.coordinates;\n\n  return buildStyle(\n    `left: ${x}%`,\n    `top: ${y}%`,\n    `width: ${width}%`,\n    `height: ${height}%`,\n    `transform: rotate(${rotation}deg) translate(-50%, -50%)`,\n    Boolean(radius) && `border-radius: ${radius}%`,\n  );\n}\n\nexport default memo(MediaAreaOverlay);\n","import type {\n  ApiInputInvoice,\n  ApiMessage,\n  ApiRequestInputInvoice,\n  ApiStarsTransaction,\n  ApiStarsTransactionPeer,\n  ApiStarsTransactionPeerPeer,\n} from '../../api/types';\nimport type { CustomPeer } from '../../types';\nimport type { GlobalState } from '../types';\n\nimport { formatInteger } from '../../util/textFormat';\nimport { selectChat, selectUser } from '../selectors';\n\nexport function getRequestInputInvoice<T extends GlobalState>(\n  global: T, inputInvoice: ApiInputInvoice,\n): ApiRequestInputInvoice | undefined {\n  if (inputInvoice.type === 'slug') return inputInvoice;\n\n  if (inputInvoice.type === 'starsgift') {\n    const {\n      userId, stars, amount, currency,\n    } = inputInvoice;\n    const user = selectUser(global, userId);\n\n    if (!user) return undefined;\n\n    return {\n      type: 'stars',\n      purpose: {\n        type: 'starsgift',\n        user,\n        stars,\n        amount,\n        currency,\n      },\n    };\n  }\n\n  if (inputInvoice.type === 'stars') {\n    const {\n      stars, amount, currency,\n    } = inputInvoice;\n\n    return {\n      type: 'stars',\n      purpose: {\n        type: 'stars',\n        stars,\n        amount,\n        currency,\n      },\n    };\n  }\n\n  if (inputInvoice.type === 'message') {\n    const chat = selectChat(global, inputInvoice.chatId);\n    if (!chat) {\n      return undefined;\n    }\n    return {\n      type: 'message',\n      chat,\n      messageId: inputInvoice.messageId,\n    };\n  }\n\n  if (inputInvoice.type === 'giftcode') {\n    const {\n      userIds, boostChannelId, amount, currency, option,\n    } = inputInvoice;\n    const users = userIds.map((id) => selectUser(global, id)).filter(Boolean);\n    const boostChannel = boostChannelId ? selectChat(global, boostChannelId) : undefined;\n\n    return {\n      type: 'giveaway',\n      option,\n      purpose: {\n        type: 'giftcode',\n        amount,\n        currency,\n        users,\n        boostChannel,\n      },\n    };\n  }\n\n  if (inputInvoice.type === 'starsgiveaway') {\n    const {\n      chatId, additionalChannelIds, amount, currency, untilDate, areWinnersVisible, countries,\n      isOnlyForNewSubscribers, prizeDescription, stars, users,\n    } = inputInvoice;\n    const chat = selectChat(global, chatId);\n    if (!chat) {\n      return undefined;\n    }\n    const additionalChannels = additionalChannelIds?.map((id) => selectChat(global, id)).filter(Boolean);\n\n    return {\n      type: 'starsgiveaway',\n      purpose: {\n        type: 'starsgiveaway',\n        amount,\n        currency,\n        chat,\n        additionalChannels,\n        untilDate,\n        areWinnersVisible,\n        countries,\n        isOnlyForNewSubscribers,\n        prizeDescription,\n        stars,\n        users,\n      },\n    };\n  }\n\n  if (inputInvoice.type === 'giveaway') {\n    const {\n      chatId, additionalChannelIds, amount, currency, option, untilDate, areWinnersVisible, countries,\n      isOnlyForNewSubscribers, prizeDescription,\n    } = inputInvoice;\n    const chat = selectChat(global, chatId);\n    if (!chat) {\n      return undefined;\n    }\n    const additionalChannels = additionalChannelIds?.map((id) => selectChat(global, id)).filter(Boolean);\n\n    return {\n      type: 'giveaway',\n      option,\n      purpose: {\n        type: 'giveaway',\n        amount,\n        currency,\n        chat,\n        additionalChannels,\n        untilDate,\n        areWinnersVisible,\n        countries,\n        isOnlyForNewSubscribers,\n        prizeDescription,\n      },\n    };\n  }\n\n  return undefined;\n}\n\nexport function buildStarsTransactionCustomPeer(\n  peer: Exclude<ApiStarsTransactionPeer, ApiStarsTransactionPeerPeer>,\n): CustomPeer {\n  if (peer.type === 'appStore') {\n    return {\n      avatarIcon: 'star',\n      isCustomPeer: true,\n      titleKey: 'Stars.Intro.Transaction.AppleTopUp.Title',\n      subtitleKey: 'Stars.Intro.Transaction.AppleTopUp.Subtitle',\n      peerColorId: 5,\n    };\n  }\n\n  if (peer.type === 'playMarket') {\n    return {\n      avatarIcon: 'star',\n      isCustomPeer: true,\n      titleKey: 'Stars.Intro.Transaction.GoogleTopUp.Title',\n      subtitleKey: 'Stars.Intro.Transaction.GoogleTopUp.Subtitle',\n      peerColorId: 3,\n    };\n  }\n\n  if (peer.type === 'fragment') {\n    return {\n      avatarIcon: 'star',\n      isCustomPeer: true,\n      titleKey: 'Stars.Intro.Transaction.FragmentTopUp.Title',\n      subtitleKey: 'Stars.Intro.Transaction.FragmentTopUp.Subtitle',\n      customPeerAvatarColor: '#000000',\n    };\n  }\n\n  if (peer.type === 'premiumBot') {\n    return {\n      avatarIcon: 'star',\n      isCustomPeer: true,\n      titleKey: 'Stars.Intro.Transaction.PremiumBotTopUp.Title',\n      subtitleKey: 'Stars.Intro.Transaction.PremiumBotTopUp.Subtitle',\n      peerColorId: 1,\n      withPremiumGradient: true,\n    };\n  }\n\n  if (peer.type === 'ads') {\n    return {\n      avatarIcon: 'star',\n      isCustomPeer: true,\n      titleKey: 'Stars.Intro.Transaction.TelegramAds.Title',\n      subtitleKey: 'Stars.Intro.Transaction.TelegramAds.Subtitle',\n      peerColorId: 2,\n    };\n  }\n\n  return {\n    avatarIcon: 'star',\n    isCustomPeer: true,\n    titleKey: 'Stars.Intro.Transaction.Unsupported.Title',\n    subtitleKey: 'Stars.Intro.Transaction.Unsupported.Title',\n    peerColorId: 0,\n  };\n}\n\nexport function formatStarsTransactionAmount(amount: number) {\n  if (amount < 0) {\n    return `- ${formatInteger(Math.abs(amount))}`;\n  }\n\n  return `+ ${formatInteger(amount)}`;\n}\n\nexport function getStarsTransactionFromGift(message: ApiMessage): ApiStarsTransaction | undefined {\n  const { action } = message.content;\n\n  if (action?.type !== 'giftStars') return undefined;\n\n  const { transactionId, stars } = action;\n\n  return {\n    id: transactionId!,\n    stars: stars!,\n    peer: {\n      type: 'peer',\n      id: message.isOutgoing ? message.chatId : (message.senderId || message.chatId),\n    },\n    date: message.date,\n    isGift: true,\n    isMyGift: message.isOutgoing || undefined,\n  };\n}\n\nexport function getPrizeStarsTransactionFromGiveaway(message: ApiMessage): ApiStarsTransaction | undefined {\n  const { action } = message.content;\n\n  if (action?.type !== 'prizeStars') return undefined;\n\n  const { transactionId, stars, targetChatId } = action;\n\n  return {\n    id: transactionId!,\n    stars: stars!,\n    peer: {\n      type: 'peer',\n      id: targetChatId!,\n    },\n    date: message.date,\n    isPrizeStars: true,\n  };\n}\n","import type { ApiChat, ApiPeer, ApiUser } from '../../api/types';\n\nimport { SERVICE_NOTIFICATIONS_USER_ID } from '../../config';\n\nexport function isApiPeerChat(peer: ApiPeer): peer is ApiChat {\n  return 'title' in peer;\n}\n\nexport function isApiPeerUser(peer: ApiPeer): peer is ApiUser {\n  return !isApiPeerChat(peer);\n}\n\nexport function getPeerTypeKey(peer: ApiPeer) {\n  if (isApiPeerChat(peer)) {\n    if (peer.type === 'chatTypeBasicGroup' || peer.type === 'chatTypeSuperGroup') {\n      return 'ChatList.PeerTypeGroup';\n    }\n\n    if (peer.type === 'chatTypeChannel') {\n      return 'ChatList.PeerTypeChannel';\n    }\n\n    if (peer.type === 'chatTypePrivate') {\n      return 'ChatList.PeerTypeNonContact';\n    }\n\n    return undefined;\n  }\n\n  if (peer.id === SERVICE_NOTIFICATIONS_USER_ID) {\n    return 'ServiceNotifications';\n  }\n\n  if (peer.isSupport) {\n    return 'SupportStatus';\n  }\n\n  if (peer.type && peer.type === 'userTypeBot') {\n    return 'ChatList.PeerTypeBot';\n  }\n\n  if (peer.isContact) {\n    return 'ChatList.PeerTypeContact';\n  }\n\n  return 'ChatList.PeerTypeNonContactUser';\n}\n","import { useEffect, useState } from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport { IS_MOBILE } from '../../util/windowEnvironment';\nimport useLastCallback from '../useLastCallback';\nimport useOldLang from '../useOldLang';\n\nconst NOTIFICATION_DURATION = 8000;\n\nexport default function useUnsupportedMedia(\n  ref: React.RefObject<HTMLVideoElement>, shouldDisableNotification?: boolean, isDisabled?: boolean,\n) {\n  const { showNotification } = getActions();\n  const lang = useOldLang();\n  const [isUnsupported, setIsUnsupported] = useState(false);\n\n  const handleUnsupported = useLastCallback(() => {\n    setIsUnsupported(true);\n    if (shouldDisableNotification) return;\n\n    showNotification({\n      message: IS_MOBILE ? lang('Video.Unsupported.Mobile') : lang('Video.Unsupported.Desktop'),\n      duration: NOTIFICATION_DURATION,\n    });\n  });\n\n  const onError = useLastCallback((event: Event) => {\n    const target = event.currentTarget as HTMLVideoElement;\n    const { error } = target;\n    if (!error) return;\n\n    // https://developer.mozilla.org/en-US/docs/Web/API/MediaError/code\n    if (error.code === 3 || error.code === 4) {\n      handleUnsupported();\n    }\n  });\n\n  const onCanPlay = useLastCallback((event: Event) => {\n    const target = event.currentTarget as HTMLVideoElement;\n\n    if (!target.videoHeight || !target.videoWidth) {\n      handleUnsupported();\n    }\n  });\n\n  useEffect(() => {\n    if (isDisabled) return undefined;\n\n    const { current } = ref;\n    if (!current) {\n      return undefined;\n    }\n\n    current.addEventListener('error', onError);\n    current.addEventListener('canplay', onCanPlay);\n\n    return () => {\n      current.removeEventListener('error', onError);\n      current.removeEventListener('canplay', onCanPlay);\n    };\n  }, [isDisabled, ref]);\n\n  return isUnsupported;\n}\n","import { useEffect, useMemo } from '../../lib/teact/teact';\nimport { getActions, getGlobal } from '../../global';\n\nimport type { ApiChat, ApiUser } from '../../api/types';\n\nimport { isChatChannel, isUserBot, isUserId } from '../../global/helpers';\nimport { selectPeer, selectUserStatus } from '../../global/selectors';\nimport { throttle } from '../../util/schedulers';\n\nconst POLLING_INTERVAL = 60 * 60 * 1000;\nconst PEER_LAST_POLLING_TIME = new Map<string, number>();\nlet PEER_ID_QUEUE = new Set<string>();\nconst LIMIT_PER_REQUEST = 100;\nconst REQUEST_THROTTLE = 500;\n\nconst loadFromQueue = throttle(() => {\n  const queue = Array.from(PEER_ID_QUEUE);\n  const queueToLoad = queue.slice(0, LIMIT_PER_REQUEST);\n  const otherQueue = queue.slice(LIMIT_PER_REQUEST + 1);\n\n  getActions().loadStoriesMaxIds({\n    peerIds: queueToLoad,\n  });\n\n  queueToLoad.forEach((id) => PEER_LAST_POLLING_TIME.set(id, Date.now()));\n\n  PEER_ID_QUEUE = new Set(otherQueue);\n\n  // Schedule next load\n  if (PEER_ID_QUEUE.size) {\n    loadFromQueue();\n  }\n}, REQUEST_THROTTLE);\n\nexport default function usePeerStoriesPolling(ids?: string[]) {\n  const peers = useMemo(() => {\n    const global = getGlobal();\n    return ids?.map((id) => selectPeer(global, id)).filter(Boolean);\n  }, [ids]);\n\n  const pollablePeerIds = useMemo(() => {\n    const global = getGlobal();\n    return peers?.filter((peer) => {\n      const lastPollingTime = PEER_LAST_POLLING_TIME.get(peer.id) || 0;\n      if (Date.now() - lastPollingTime < POLLING_INTERVAL) {\n        return false;\n      }\n\n      if (isUserId(peer.id)) {\n        const user = peer as ApiUser;\n        const status = selectUserStatus(global, user.id);\n        const isStatusAvailable = status && status.type !== 'userStatusEmpty';\n        return !user.isContact && !user.isSelf && !isUserBot(user) && !peer.isSupport && isStatusAvailable;\n      } else {\n        const chat = peer as ApiChat;\n        return isChatChannel(chat) && !chat.isRestricted;\n      }\n    }).map((user) => user.id);\n  }, [peers]);\n\n  useEffect(() => {\n    if (pollablePeerIds?.length) {\n      pollablePeerIds.forEach((id) => PEER_ID_QUEUE.add(id));\n      loadFromQueue();\n    }\n  }, [pollablePeerIds]);\n}\n","import { getGlobal } from '../../global';\n\nimport type { ApiChatFolder } from '../../api/types';\nimport type { IconName } from '../../types/icons';\nimport type { Dispatch, StateReducer } from '../useReducer';\n\nimport { selectChat } from '../../global/selectors';\nimport { omit, pick } from '../../util/iteratees';\nimport useReducer from '../useReducer';\n\nexport type FolderChatType = {\n  icon: IconName;\n  title: string;\n  key: keyof Pick<ApiChatFolder, (\n    'contacts' | 'nonContacts' | 'groups' | 'channels' | 'bots' |\n    'excludeMuted' | 'excludeArchived' | 'excludeRead'\n  )>;\n};\n\nconst INCLUDE_FILTER_FIELDS: Array<keyof FolderIncludeFilters> = [\n  'includedChatIds', 'bots', 'channels', 'groups', 'contacts', 'nonContacts',\n];\nconst EXCLUDE_FILTER_FIELDS: Array<keyof FolderExcludeFilters> = [\n  'excludedChatIds', 'excludeArchived', 'excludeMuted', 'excludeRead',\n];\n\nexport function selectChatFilters(state: FoldersState, mode: 'included' | 'excluded', selectTemp?: boolean) {\n  let selectedChatIds: string[] = [];\n  let selectedChatTypes: FolderChatType['key'][] = [];\n\n  if (mode === 'included') {\n    const {\n      includedChatIds,\n      ...includeFilters\n    } = selectTemp\n      ? state.includeFilters || {}\n      : pick(\n        state.folder,\n        INCLUDE_FILTER_FIELDS,\n      );\n\n    selectedChatIds = includedChatIds || [];\n    selectedChatTypes = (Object.keys(includeFilters) as Array<keyof typeof includeFilters>)\n      .filter((key) => Boolean(includeFilters[key]));\n  } else {\n    const {\n      excludedChatIds,\n      ...excludeFilters\n    } = selectTemp\n      ? state.excludeFilters || {}\n      : pick(\n        state.folder,\n        EXCLUDE_FILTER_FIELDS,\n      );\n\n    selectedChatIds = excludedChatIds || [];\n    selectedChatTypes = (Object.keys(excludeFilters) as Array<keyof typeof excludeFilters>)\n      .filter((key) => Boolean(excludeFilters[key]));\n  }\n\n  const global = getGlobal();\n  const existingSelectedChatIds = selectedChatIds.filter((id) => selectChat(global, id));\n\n  return {\n    selectedChatIds: existingSelectedChatIds,\n    selectedChatTypes,\n  };\n}\n\nfunction getSuggestedFolderName(includeFilters?: FolderIncludeFilters) {\n  if (includeFilters) {\n    const {\n      includedChatIds,\n      ...filters\n    } = includeFilters;\n\n    if (\n      Object.values(filters).filter(Boolean).length > 1\n      || (includedChatIds?.length)\n    ) {\n      return '';\n    }\n\n    if (filters.bots) {\n      return 'Bots';\n    } else if (filters.groups) {\n      return 'Groups';\n    } else if (filters.channels) {\n      return 'Channels';\n    } else if (filters.contacts) {\n      return 'Contacts';\n    } else if (filters.nonContacts) {\n      return 'Non-Contacts';\n    }\n  }\n\n  return '';\n}\n\ntype FolderIncludeFilters = Pick<ApiChatFolder, (\n  'includedChatIds' | 'bots' | 'channels' | 'groups' | 'contacts' | 'nonContacts'\n)>;\ntype FolderExcludeFilters = Pick<ApiChatFolder, 'excludedChatIds' | 'excludeArchived' | 'excludeMuted' | 'excludeRead'>;\n\nexport type FoldersState = {\n  mode: 'create' | 'edit';\n  isLoading?: boolean;\n  isTouched?: boolean;\n  error?: string;\n  folderId?: number;\n  chatFilter: string;\n  folder: Omit<ApiChatFolder, 'id' | 'description' | 'emoticon'>;\n  includeFilters?: FolderIncludeFilters;\n  excludeFilters?: FolderExcludeFilters;\n};\nexport type FoldersActions = (\n  'setTitle' | 'saveFilters' | 'editFolder' | 'reset' | 'setChatFilter' | 'setIsLoading' | 'setError' |\n  'editIncludeFilters' | 'editExcludeFilters' | 'setIncludeFilters' | 'setExcludeFilters' | 'setIsTouched' |\n  'setFolderId' | 'setIsChatlist'\n  );\nexport type FolderEditDispatch = Dispatch<FoldersState, FoldersActions>;\n\nconst INITIAL_STATE: FoldersState = {\n  mode: 'create',\n  chatFilter: '',\n  folder: {\n    title: '',\n    includedChatIds: [],\n    excludedChatIds: [],\n  },\n};\n\nconst foldersReducer: StateReducer<FoldersState, FoldersActions> = (\n  state,\n  action,\n) => {\n  switch (action.type) {\n    case 'setTitle':\n      return {\n        ...state,\n        folder: {\n          ...state.folder,\n          title: action.payload,\n        },\n        isTouched: true,\n      };\n    case 'setFolderId':\n      return {\n        ...state,\n        folderId: action.payload,\n        mode: 'edit',\n      };\n    case 'editIncludeFilters':\n      return {\n        ...state,\n        includeFilters: pick(\n          state.folder,\n          INCLUDE_FILTER_FIELDS,\n        ),\n      };\n    case 'editExcludeFilters':\n      return {\n        ...state,\n        excludeFilters: pick(\n          state.folder,\n          EXCLUDE_FILTER_FIELDS,\n        ),\n      };\n    case 'setIncludeFilters':\n      return {\n        ...state,\n        includeFilters: action.payload,\n        chatFilter: '',\n      };\n    case 'setExcludeFilters':\n      return {\n        ...state,\n        excludeFilters: action.payload,\n        chatFilter: '',\n      };\n    case 'saveFilters':\n      if (state.includeFilters) {\n        return {\n          ...state,\n          folder: {\n            ...omit(state.folder, INCLUDE_FILTER_FIELDS),\n            title: state.folder.title ? state.folder.title : getSuggestedFolderName(state.includeFilters),\n            ...state.includeFilters,\n          },\n          includeFilters: undefined,\n          chatFilter: '',\n          isTouched: true,\n        };\n      } else if (state.excludeFilters) {\n        return {\n          ...state,\n          folder: {\n            ...omit(state.folder, EXCLUDE_FILTER_FIELDS),\n            ...state.excludeFilters,\n          },\n          excludeFilters: undefined,\n          chatFilter: '',\n          isTouched: true,\n        };\n      } else {\n        return state;\n      }\n    case 'editFolder': {\n      const { id: folderId, description, ...folder } = action.payload;\n\n      return {\n        mode: 'edit',\n        folderId,\n        folder,\n        chatFilter: '',\n      };\n    }\n    case 'setChatFilter': {\n      return {\n        ...state,\n        chatFilter: action.payload,\n      };\n    }\n    case 'setIsTouched': {\n      return {\n        ...state,\n        isTouched: action.payload,\n      };\n    }\n    case 'setIsLoading': {\n      return {\n        ...state,\n        isLoading: action.payload,\n      };\n    }\n    case 'setError': {\n      return {\n        ...state,\n        isLoading: false,\n        error: action.payload,\n      };\n    }\n    case 'setIsChatlist':\n      return {\n        ...state,\n        folder: {\n          ...state.folder,\n          isChatList: action.payload,\n        },\n      };\n    case 'reset':\n      return INITIAL_STATE;\n    default:\n      return state;\n  }\n};\n\nconst useFoldersReducer = () => {\n  return useReducer(foldersReducer, INITIAL_STATE);\n};\n\nexport default useFoldersReducer;\n","import { useEffect } from '../../lib/teact/teact';\n\nimport useLastCallback from '../useLastCallback';\n\nfunction useTimeout(callback: NoneToVoidFunction, delay?: number) {\n  const savedCallback = useLastCallback(callback);\n\n  useEffect(() => {\n    if (typeof delay !== 'number') {\n      return undefined;\n    }\n\n    const id = setTimeout(() => savedCallback(), delay);\n    return () => clearTimeout(id);\n  }, [delay]);\n}\n\nexport default useTimeout;\n","import type { Scheduler } from '../util/schedulers';\nimport type { Signal } from '../util/signals';\n\nimport useDebouncedCallback from './useDebouncedCallback';\nimport useDerivedSignal from './useDerivedSignal';\nimport useThrottledCallback from './useThrottledCallback';\n\nexport function useThrottledResolver<T>(\n  resolver: () => T,\n  deps: any[],\n  msOrSchedulerFn: number | Scheduler,\n  noFirst = false,\n) {\n  return useThrottledCallback((setValue: (newValue: T) => void) => {\n    setValue(resolver());\n    // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n  }, deps, msOrSchedulerFn, noFirst);\n}\n\nexport function useThrottledSignal<T extends any>(\n  getValue: Signal<T>,\n  ms: number,\n  noFirst = false,\n): Signal<T> {\n  const throttledResolver = useThrottledResolver(() => getValue(), [getValue], ms, noFirst);\n\n  return useDerivedSignal(\n    throttledResolver, [throttledResolver, getValue], true,\n  );\n}\n\nexport function useDebouncedResolver<T>(\n  resolver: () => T,\n  deps: any[],\n  ms: number,\n  noFirst = false,\n  noLast = false,\n) {\n  return useDebouncedCallback((setValue: (newValue: T) => void) => {\n    setValue(resolver());\n    // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n  }, deps, ms, noFirst, noLast);\n}\n\nexport function useDebouncedSignal<T extends any>(\n  getValue: Signal<T>,\n  ms: number,\n  noFirst = false,\n  noLast = false,\n): Signal<T> {\n  const debouncedResolver = useDebouncedResolver(() => getValue(), [getValue], ms, noFirst, noLast);\n\n  return useDerivedSignal(\n    debouncedResolver, [debouncedResolver, getValue], true,\n  );\n}\n","import {\n  useEffect, useMemo, useRef, useState,\n} from '../lib/teact/teact';\nimport { getActions, getGlobal } from '../global';\n\nimport type { Track, TrackId } from '../util/audioPlayer';\nimport type { MediaSessionHandlers } from '../util/mediaSession';\n\nimport { PLAYBACK_RATE_FOR_AUDIO_MIN_DURATION } from '../config';\nimport { selectTabState } from '../global/selectors';\nimport { register } from '../util/audioPlayer';\nimport {\n  registerMediaSession, setPlaybackState, setPositionState, updateMetadata,\n} from '../util/mediaSession';\nimport { isSafariPatchInProgress } from '../util/patchSafariProgressiveAudio';\nimport useEffectWithPrevDeps from './useEffectWithPrevDeps';\nimport useLastCallback from './useLastCallback';\nimport useSyncEffect from './useSyncEffect';\n\ntype Handler = (e: Event) => void;\n\nconst DEFAULT_SKIP_TIME = 10;\n\nconst useAudioPlayer = (\n  trackId: TrackId | undefined,\n  originalDuration: number, // Sometimes incorrect for voice messages\n  trackType: Track['type'],\n  src?: string,\n  handlers?: Record<string, Handler>,\n  metadata?: MediaMetadata,\n  onInit?: (element: HTMLAudioElement) => void,\n  shouldPlay = false,\n  onForcePlay?: NoneToVoidFunction,\n  onTrackChange?: NoneToVoidFunction,\n  noPlaylist = false,\n  noProgressUpdates = false,\n  onPause?: NoneToVoidFunction,\n  noReset = false,\n  noHandleEvents = false,\n) => {\n  // eslint-disable-next-line no-null/no-null\n  const controllerRef = useRef<ReturnType<typeof register>>(null);\n\n  const [isPlaying, setIsPlaying] = useState(false);\n  let isPlayingSync = isPlaying;\n\n  const [playProgress, setPlayProgress] = useState<number>(0);\n\n  const handleTrackChange = useLastCallback(() => {\n    setIsPlaying(false);\n    if (onTrackChange) onTrackChange();\n  });\n\n  useSyncEffect(() => {\n    if (!trackId) {\n      return;\n    }\n    controllerRef.current = register(trackId, trackType, (eventName, e) => {\n      if (noHandleEvents) {\n        return;\n      }\n      switch (eventName) {\n        case 'onPlay': {\n          const {\n            setVolume, setPlaybackRate, toggleMuted, proxy,\n          } = controllerRef.current!;\n          setIsPlaying(true);\n          if (trackType !== 'oneTimeVoice') {\n            registerMediaSession(metadata, makeMediaHandlers(controllerRef));\n          }\n          setPlaybackState('playing');\n          const { audioPlayer } = selectTabState(getGlobal());\n          setVolume(audioPlayer.volume);\n          toggleMuted(Boolean(audioPlayer.isMuted));\n          const duration = proxy.duration && Number.isFinite(proxy.duration) ? proxy.duration : originalDuration;\n          if (trackType === 'voice' || duration > PLAYBACK_RATE_FOR_AUDIO_MIN_DURATION) {\n            setPlaybackRate(audioPlayer.playbackRate);\n          }\n          setPositionState({\n            duration: proxy.duration || 0,\n            playbackRate: proxy.playbackRate,\n            position: proxy.currentTime,\n          });\n          break;\n        }\n        case 'onRateChange': {\n          const { proxy } = controllerRef.current!;\n          setPositionState({\n            duration: proxy.duration || 0,\n            playbackRate: proxy.playbackRate,\n            position: proxy.currentTime,\n          });\n          break;\n        }\n        case 'onPause':\n          setIsPlaying(false);\n          setPlaybackState('paused');\n          onPause?.();\n          break;\n        case 'onTimeUpdate': {\n          const { proxy } = controllerRef.current!;\n          if (noReset && proxy.currentTime === 0) {\n            break;\n          }\n          const duration = proxy.duration && Number.isFinite(proxy.duration) ? proxy.duration : originalDuration;\n          if (!noProgressUpdates) setPlayProgress(proxy.currentTime / duration);\n          break;\n        }\n        case 'onEnded': {\n          setPlaybackState('paused');\n          break;\n        }\n      }\n      handlers?.[eventName]?.(e);\n    }, onForcePlay, handleTrackChange);\n\n    const { proxy } = controllerRef.current!;\n\n    if (!isPlaying && !proxy.paused) {\n      setIsPlaying(true);\n      // `isPlayingSync` is only needed to help `setIsPlaying` because it is asynchronous\n      // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n      isPlayingSync = true;\n    }\n\n    if (onInit && !noHandleEvents) {\n      onInit(proxy);\n    }\n  }, [trackId]);\n\n  useEffect(() => {\n    if (isPlaying && metadata) updateMetadata(metadata);\n  }, [metadata, isPlaying]);\n\n  const {\n    play,\n    pause,\n    setCurrentTime,\n    proxy,\n    destroy,\n    setVolume,\n    stop,\n    isFirst,\n    isLast,\n    requestNextTrack,\n    requestPreviousTrack,\n    setPlaybackRate,\n    toggleMuted,\n  } = controllerRef.current ?? {};\n\n  const duration = useMemo(() => {\n    return proxy?.duration && Number.isFinite(proxy.duration) ? proxy.duration : originalDuration;\n  }, [proxy?.duration, originalDuration]);\n\n  // RAF progress\n  useEffect(() => {\n    if (!proxy) {\n      return;\n    }\n    if (noReset && proxy.currentTime === 0) {\n      return;\n    }\n    if (duration && !isSafariPatchInProgress(proxy) && !noProgressUpdates) {\n      setPlayProgress(proxy.currentTime / duration);\n    }\n  }, [duration, playProgress, proxy, noProgressUpdates, noReset]);\n\n  // Cleanup\n  useEffect(() => () => {\n    destroy?.(noPlaylist);\n  }, [destroy, noPlaylist]);\n\n  // Autoplay once `src` is present\n  useEffectWithPrevDeps(([prevShouldPlay, prevSrc]) => {\n    if (prevShouldPlay === shouldPlay && src === prevSrc) {\n      return;\n    }\n\n    // When paused by another player\n    if (proxy?.src && proxy?.paused) {\n      return;\n    }\n\n    if (shouldPlay && src && !isPlaying) {\n      play?.(src);\n    }\n  }, [shouldPlay, src, isPlaying, play, proxy?.src, proxy?.paused, trackType]);\n\n  const playIfPresent = useLastCallback(() => {\n    if (src) {\n      play?.(src);\n    }\n  });\n\n  const playPause = useLastCallback(() => {\n    if (isPlaying) {\n      pause?.();\n    } else {\n      playIfPresent();\n    }\n  });\n\n  const setTime = useLastCallback((time: number) => {\n    setCurrentTime?.(time);\n    if (duration && proxy) {\n      setPlayProgress(proxy.currentTime / duration);\n    }\n  });\n\n  return {\n    isPlaying: isPlayingSync,\n    playProgress,\n    playPause,\n    pause,\n    play: playIfPresent,\n    stop,\n    setCurrentTime: setTime,\n    setVolume,\n    audioProxy: proxy,\n    duration,\n    requestNextTrack,\n    requestPreviousTrack,\n    isFirst,\n    isLast,\n    setPlaybackRate,\n    toggleMuted,\n  };\n};\n\nfunction makeMediaHandlers(controllerRef: React.RefObject<ReturnType<typeof register>>) {\n  let mediaHandlers: MediaSessionHandlers = {};\n  if (controllerRef && controllerRef.current) {\n    const {\n      play, pause, setCurrentTime, proxy, requestNextTrack, requestPreviousTrack, isFirst, isLast,\n    } = controllerRef.current;\n    mediaHandlers = {\n      play: () => {\n        play(proxy.src);\n      },\n      pause: () => {\n        pause();\n      },\n      stop: () => {\n        pause();\n        setCurrentTime(0);\n        getActions().closeAudioPlayer();\n      },\n      seekbackward: (event) => {\n        const skipTime = event.seekOffset || DEFAULT_SKIP_TIME;\n        setCurrentTime(Math.max(proxy.currentTime - skipTime, 0));\n      },\n      seekforward: (event) => {\n        const skipTime = event.seekOffset || DEFAULT_SKIP_TIME;\n        setCurrentTime(Math.min(proxy.currentTime + skipTime, proxy.duration));\n      },\n      seekTo: (event) => {\n        if (event.seekTime) {\n          setCurrentTime(event.seekTime);\n        }\n      },\n    };\n\n    if (!isLast()) {\n      mediaHandlers.nexttrack = () => {\n        requestNextTrack();\n      };\n    }\n    if (!isFirst()) {\n      mediaHandlers.previoustrack = () => {\n        requestPreviousTrack();\n      };\n    }\n  }\n  return mediaHandlers;\n}\n\nexport default useAudioPlayer;\n","import { useEffect, useRef } from '../lib/teact/teact';\n\nimport fastBlur from '../lib/fastBlur';\nimport { requestMeasure, requestMutation } from '../lib/fasterdom/fasterdom';\nimport { IS_CANVAS_FILTER_SUPPORTED } from '../util/windowEnvironment';\nimport useSyncEffect from './useSyncEffect';\n\nconst RADIUS = 2;\nconst ITERATIONS = 2;\n\nexport default function useCanvasBlur(\n  dataUri?: string,\n  isDisabled = false,\n  withRaf?: boolean,\n  radius = RADIUS,\n  preferredWidth?: number,\n  preferredHeight?: number,\n) {\n  // eslint-disable-next-line no-null/no-null\n  const canvasRef = useRef<HTMLCanvasElement>(null);\n  const isStarted = useRef();\n\n  useSyncEffect(() => {\n    if (!isDisabled) {\n      isStarted.current = false;\n    }\n  }, [dataUri, isDisabled]);\n\n  useEffect(() => {\n    const canvas = canvasRef.current;\n\n    if (!dataUri || !canvas || isDisabled || isStarted.current) {\n      return;\n    }\n\n    isStarted.current = true;\n\n    const img = new Image();\n\n    const processBlur = () => {\n      const width = preferredWidth || img.width;\n      const height = preferredHeight || img.height;\n      const ctx = canvas.getContext('2d', { alpha: false })!;\n\n      requestMutation(() => {\n        canvas.width = width;\n        canvas.height = height;\n\n        if (IS_CANVAS_FILTER_SUPPORTED) {\n          ctx.filter = `blur(${radius}px)`;\n        }\n\n        ctx.drawImage(img, -radius * 2, -radius * 2, width + radius * 4, height + radius * 4);\n\n        if (!IS_CANVAS_FILTER_SUPPORTED) {\n          fastBlur(ctx, 0, 0, width, height, radius, ITERATIONS);\n        }\n      });\n    };\n\n    img.onload = () => {\n      if (withRaf) {\n        requestMeasure(processBlur);\n      } else {\n        processBlur();\n      }\n    };\n\n    img.src = dataUri;\n  }, [dataUri, isDisabled, preferredHeight, preferredWidth, radius, withRaf]);\n\n  return canvasRef;\n}\n","import { useMemo } from '../lib/teact/teact';\nimport { getActions } from '../global';\n\nimport type { MenuItemContextAction } from '../components/ui/ListItem';\nimport { type ApiChat, type ApiUser } from '../api/types';\n\nimport { SERVICE_NOTIFICATIONS_USER_ID } from '../config';\nimport {\n  getCanDeleteChat, isChatArchived, isChatChannel, isChatGroup,\n  isUserId,\n} from '../global/helpers';\nimport { compact } from '../util/iteratees';\nimport { IS_ELECTRON, IS_OPEN_IN_NEW_TAB_SUPPORTED } from '../util/windowEnvironment';\nimport useOldLang from './useOldLang';\n\nconst useChatContextActions = ({\n  chat,\n  user,\n  folderId,\n  isPinned,\n  isMuted,\n  canChangeFolder,\n  isSavedDialog,\n  currentUserId,\n  isPreview,\n  handleDelete,\n  handleMute,\n  handleChatFolderChange,\n  handleReport,\n}: {\n  chat: ApiChat | undefined;\n  user: ApiUser | undefined;\n  folderId?: number;\n  isPinned?: boolean;\n  isMuted?: boolean;\n  canChangeFolder?: boolean;\n  isSavedDialog?: boolean;\n  currentUserId?: string;\n  isPreview?: boolean;\n  handleDelete?: NoneToVoidFunction;\n  handleMute?: NoneToVoidFunction;\n  handleChatFolderChange: NoneToVoidFunction;\n  handleReport?: NoneToVoidFunction;\n}, isInSearch = false) => {\n  const lang = useOldLang();\n\n  const { isSelf } = user || {};\n  const isServiceNotifications = user?.id === SERVICE_NOTIFICATIONS_USER_ID;\n\n  const deleteTitle = useMemo(() => {\n    if (!chat) return undefined;\n\n    if (isSavedDialog) {\n      return lang('Delete');\n    }\n\n    if (isUserId(chat.id)) {\n      return lang('DeleteChatUser');\n    }\n\n    if (getCanDeleteChat(chat)) {\n      return lang('DeleteChat');\n    }\n\n    if (isChatChannel(chat)) {\n      return lang('LeaveChannel');\n    }\n\n    return lang('Group.LeaveGroup');\n  }, [chat, isSavedDialog, lang]);\n\n  return useMemo(() => {\n    if (!chat || isPreview) {\n      return undefined;\n    }\n\n    const {\n      toggleChatPinned,\n      toggleSavedDialogPinned,\n      updateChatMutedState,\n      toggleChatArchived,\n      toggleChatUnread,\n      openChatInNewTab,\n    } = getActions();\n\n    const actionOpenInNewTab = IS_OPEN_IN_NEW_TAB_SUPPORTED && {\n      title: IS_ELECTRON ? 'Open in new window' : 'Open in new tab',\n      icon: 'open-in-new-tab',\n      handler: () => {\n        if (isSavedDialog) {\n          openChatInNewTab({ chatId: currentUserId!, threadId: chat.id });\n        } else {\n          openChatInNewTab({ chatId: chat.id });\n        }\n      },\n    };\n\n    const togglePinned = () => {\n      if (isSavedDialog) {\n        toggleSavedDialogPinned({ id: chat.id });\n      } else {\n        toggleChatPinned({ id: chat.id, folderId: folderId! });\n      }\n    };\n\n    const actionPin = isPinned\n      ? {\n        title: lang('UnpinFromTop'),\n        icon: 'unpin',\n        handler: togglePinned,\n      }\n      : {\n        title: lang('PinToTop'),\n        icon: 'pin',\n        handler: togglePinned,\n      };\n\n    const actionDelete = {\n      title: deleteTitle,\n      icon: 'delete',\n      destructive: true,\n      handler: handleDelete,\n    };\n\n    if (isSavedDialog) {\n      return compact([actionOpenInNewTab, actionPin, actionDelete]) as MenuItemContextAction[];\n    }\n\n    const actionAddToFolder = canChangeFolder ? {\n      title: lang('ChatList.Filter.AddToFolder'),\n      icon: 'folder',\n      handler: handleChatFolderChange,\n    } : undefined;\n\n    const actionMute = isMuted\n      ? {\n        title: lang('ChatList.Unmute'),\n        icon: 'unmute',\n        handler: () => updateChatMutedState({ chatId: chat.id, isMuted: false }),\n      }\n      : {\n        title: `${lang('ChatList.Mute')}...`,\n        icon: 'mute',\n        handler: handleMute,\n      };\n\n    if (isInSearch) {\n      return compact([actionOpenInNewTab, actionPin, actionAddToFolder, actionMute]) as MenuItemContextAction[];\n    }\n\n    const actionMaskAsRead = (chat.unreadCount || chat.hasUnreadMark)\n      ? { title: lang('MarkAsRead'), icon: 'readchats', handler: () => toggleChatUnread({ id: chat.id }) }\n      : undefined;\n    const actionMarkAsUnread = !(chat.unreadCount || chat.hasUnreadMark) && !chat.isForum\n      ? { title: lang('MarkAsUnread'), icon: 'unread', handler: () => toggleChatUnread({ id: chat.id }) }\n      : undefined;\n\n    const actionArchive = isChatArchived(chat)\n      ? { title: lang('Unarchive'), icon: 'unarchive', handler: () => toggleChatArchived({ id: chat.id }) }\n      : { title: lang('Archive'), icon: 'archive', handler: () => toggleChatArchived({ id: chat.id }) };\n\n    const canReport = handleReport && (isChatChannel(chat) || isChatGroup(chat) || (user && !user.isSelf));\n    const actionReport = canReport\n      ? { title: lang('ReportPeer.Report'), icon: 'flag', handler: handleReport }\n      : undefined;\n\n    const isInFolder = folderId !== undefined;\n\n    return compact([\n      actionOpenInNewTab,\n      actionAddToFolder,\n      actionMaskAsRead,\n      actionMarkAsUnread,\n      actionPin,\n      !isSelf && actionMute,\n      !isSelf && !isServiceNotifications && !isInFolder && actionArchive,\n      actionReport,\n      actionDelete,\n    ]) as MenuItemContextAction[];\n  }, [\n    chat, user, canChangeFolder, lang, handleChatFolderChange, isPinned, isInSearch, isMuted, currentUserId,\n    handleDelete, handleMute, handleReport, folderId, isSelf, isServiceNotifications, isSavedDialog, deleteTitle,\n    isPreview,\n  ]);\n};\n\nexport default useChatContextActions;\n","import { useEffect } from '../lib/teact/teact';\nimport { getActions } from '../global';\n\nimport type { ApiMessage } from '../api/types';\n\nexport default function useEnsureMessage(\n  chatId: string,\n  messageId?: number,\n  message?: ApiMessage,\n  replyOriginForId?: number,\n  isDisabled?: boolean,\n) {\n  const { loadMessage } = getActions();\n\n  useEffect(() => {\n    if (isDisabled) return;\n    if (messageId && !message) {\n      loadMessage({ chatId, messageId: messageId!, replyOriginForId: replyOriginForId! });\n    }\n  }, [isDisabled, chatId, message, messageId, replyOriginForId]);\n}\n","import { useEffect, useMemo } from '../lib/teact/teact';\nimport { getActions } from '../global';\n\nimport type { ApiTypeStory } from '../api/types';\n\nimport { throttle } from '../util/schedulers';\n\nconst THROTTLE_THRESHOLD_MS = 200;\n\nfunction useEnsureStory(\n  peerId?: string,\n  storyId?: number,\n  story?: ApiTypeStory,\n) {\n  const { loadPeerStoriesByIds } = getActions();\n\n  const loadStoryThrottled = useMemo(() => {\n    const throttled = throttle(loadPeerStoriesByIds, THROTTLE_THRESHOLD_MS, true);\n    return () => {\n      throttled({ peerId: peerId!, storyIds: [storyId!] });\n    };\n  }, [storyId, peerId]);\n\n  useEffect(() => {\n    const shouldLoadStory = !story || !('content' in story || 'isDeleted' in story);\n    if (peerId && storyId && shouldLoadStory) {\n      loadStoryThrottled();\n    }\n  }, [loadStoryThrottled, story, storyId, peerId]);\n}\n\nexport default useEnsureStory;\n","import { useEffect } from '../lib/teact/teact';\n\nimport {\n  addChatsCountCallback,\n  addOrderedIdsCallback,\n  addUnreadCountersCallback,\n  getChatsCount,\n  getOrderedIds,\n  getUnreadCounters,\n} from '../util/folderManager';\nimport useForceUpdate from './useForceUpdate';\n\nexport function useFolderManagerForOrderedIds(folderId: number) {\n  const forceUpdate = useForceUpdate();\n\n  useEffect(() => addOrderedIdsCallback(folderId, forceUpdate), [folderId, forceUpdate]);\n\n  return getOrderedIds(folderId);\n}\n\nexport function useFolderManagerForUnreadCounters() {\n  const forceUpdate = useForceUpdate();\n\n  useEffect(() => addUnreadCountersCallback(forceUpdate), [forceUpdate]);\n\n  return getUnreadCounters();\n}\n\nexport function useFolderManagerForChatsCount() {\n  const forceUpdate = useForceUpdate();\n\n  useEffect(() => addChatsCountCallback(forceUpdate), [forceUpdate]);\n\n  return getChatsCount();\n}\n","import { useRef } from '../lib/teact/teact';\n\nimport useForceUpdate from './useForceUpdate';\nimport useLastCallback from './useLastCallback';\nimport useSyncEffect from './useSyncEffect';\n\nexport default function useForumPanelRender(isForumPanelOpen = false) {\n  const shouldRenderForumPanelRef = useRef(isForumPanelOpen);\n  const isAnimationStartedRef = useRef(false);\n  const forceUpdate = useForceUpdate();\n\n  useSyncEffect(() => {\n    if (isForumPanelOpen) {\n      shouldRenderForumPanelRef.current = true;\n    }\n  }, [isForumPanelOpen]);\n\n  const handleForumPanelAnimationEnd = useLastCallback(() => {\n    shouldRenderForumPanelRef.current = false;\n    isAnimationStartedRef.current = false;\n    forceUpdate();\n  });\n\n  const handleForumPanelAnimationStart = useLastCallback(() => {\n    isAnimationStartedRef.current = true;\n    forceUpdate();\n  });\n\n  return {\n    shouldRenderForumPanel: shouldRenderForumPanelRef.current,\n    isAnimationStarted: isAnimationStartedRef.current,\n    handleForumPanelAnimationEnd,\n    handleForumPanelAnimationStart,\n  };\n}\n","import { useEffect, useSignal } from '../lib/teact/teact';\n\nexport default function useGetSelectionRange(inputSelector: string) {\n  const [getRange, setRange] = useSignal<Range | undefined>();\n\n  useEffect(() => {\n    function onSelectionChange() {\n      const selection = window.getSelection();\n      if (!selection?.rangeCount) return;\n\n      const range = selection.getRangeAt(0);\n      if (!range) {\n        return;\n      }\n\n      const inputEl = document.querySelector(inputSelector);\n      if (!inputEl) {\n        return;\n      }\n\n      const { commonAncestorContainer } = range;\n      const element = commonAncestorContainer instanceof Element\n        ? commonAncestorContainer\n        : commonAncestorContainer.parentElement!;\n      if (element.closest(inputSelector)) {\n        setRange(range);\n      }\n    }\n\n    document.addEventListener('selectionchange', onSelectionChange);\n\n    return () => document.removeEventListener('selectionchange', onSelectionChange);\n  }, [inputSelector, setRange]);\n\n  return getRange;\n}\n","import { useEffect } from '../lib/teact/teact';\n\nconst useHorizontalScroll = (\n  containerRef: React.RefObject<HTMLDivElement>,\n  isDisabled?: boolean,\n  shouldPreventDefault = false,\n) => {\n  useEffect(() => {\n    if (isDisabled) {\n      return undefined;\n    }\n\n    const container = containerRef.current!;\n\n    function handleScroll(e: WheelEvent) {\n      // Ignore horizontal scroll and let it work natively (e.g. on touchpad)\n      if (!e.deltaX) {\n        container!.scrollLeft += e.deltaY / 4;\n        if (shouldPreventDefault) e.preventDefault();\n      }\n    }\n\n    container.addEventListener('wheel', handleScroll, { passive: !shouldPreventDefault });\n\n    return () => {\n      container.removeEventListener('wheel', handleScroll);\n    };\n  }, [containerRef, isDisabled, shouldPreventDefault]);\n};\n\nexport default useHorizontalScroll;\n","import { useEffect } from '../lib/teact/teact';\n\nimport { createCallbackManager } from '../util/callbacks';\nimport { getHotkeyMatcher } from '../util/parseHotkey';\n\nconst IGNORE_TAGS = new Set(['INPUT', 'TEXTAREA', 'SELECT']);\n\nconst handlers = createCallbackManager();\ndocument.documentElement.addEventListener('keydown', handlers.runCallbacks);\n\nexport function useHotkeys(hotkeys?: Record<string, (e: KeyboardEvent) => void>) {\n  useEffect(() => {\n    if (!hotkeys) {\n      return undefined;\n    }\n\n    const entries = Object.entries(hotkeys);\n\n    function handleKeyDown(e: KeyboardEvent) {\n      if (!shouldFireEvent(e)) {\n        return;\n      }\n\n      entries.forEach(([hotkey, handler]) => {\n        if (getHotkeyMatcher(hotkey)(e)) {\n          handler(e);\n        }\n      });\n    }\n\n    return handlers.addCallback(handleKeyDown);\n  }, [hotkeys]);\n}\n\nfunction shouldFireEvent(e: KeyboardEvent) {\n  if (e.target instanceof HTMLElement) {\n    return !IGNORE_TAGS.has(e.target.tagName);\n  }\n\n  return true;\n}\n","// Original source from Mantine\n// https://github.com/mantinedev/mantine/blob/master/src/mantine-hooks/src/use-hotkeys/parse-hotkey.ts\n\nexport type KeyboardModifiers = {\n  alt: boolean;\n  ctrl: boolean;\n  meta: boolean;\n  mod: boolean;\n  shift: boolean;\n};\n\nexport type Hotkey = KeyboardModifiers & {\n  key?: string;\n};\n\ntype CheckHotkeyMatch = (event: KeyboardEvent) => boolean;\n\nexport function parseHotkey(hotkey: string): Hotkey {\n  const keys = hotkey\n    .toLowerCase()\n    .split('+')\n    .map((part) => part.trim());\n\n  const modifiers: KeyboardModifiers = {\n    alt: keys.includes('alt'),\n    ctrl: keys.includes('ctrl'),\n    meta: keys.includes('meta'),\n    mod: keys.includes('mod'),\n    shift: keys.includes('shift'),\n  };\n\n  const reservedKeys = ['alt', 'ctrl', 'meta', 'shift', 'mod'];\n\n  const freeKey = keys.find((key) => !reservedKeys.includes(key));\n\n  return {\n    ...modifiers,\n    key: freeKey,\n  };\n}\n\nfunction isExactHotkey(hotkey: Hotkey, event: KeyboardEvent): boolean {\n  const {\n    alt, ctrl, meta, mod, shift, key,\n  } = hotkey;\n  const {\n    altKey, ctrlKey, metaKey, shiftKey, key: pressedKey,\n  } = event;\n\n  if (alt !== altKey) {\n    return false;\n  }\n\n  if (mod) {\n    if (!ctrlKey && !metaKey) {\n      return false;\n    }\n  } else {\n    if (ctrl !== ctrlKey) {\n      return false;\n    }\n    if (meta !== metaKey) {\n      return false;\n    }\n  }\n  if (shift !== shiftKey) {\n    return false;\n  }\n\n  return Boolean(key\n    && (pressedKey.toLowerCase() === key.toLowerCase()\n      || event.code.replace('Key', '').toLowerCase() === key.toLowerCase()));\n}\n\nexport function getHotkeyMatcher(hotkey: string): CheckHotkeyMatch {\n  return (event) => isExactHotkey(parseHotkey(hotkey), event);\n}\n","import type { RefObject } from 'react';\nimport { useEffect } from '../lib/teact/teact';\n\nimport { requestMutation } from '../lib/fasterdom/fasterdom';\nimport useAppLayout from './useAppLayout';\n\n// Focus slows down animation, also it breaks transition layout in Chrome\nconst FOCUS_DELAY_MS = 500;\nconst MODAL_HIDE_DELAY_MS = 300;\n\nexport default function useInputFocusOnOpen(\n  inputRef: RefObject<HTMLInputElement | HTMLTextAreaElement>,\n  isOpen?: boolean,\n  onClose?: NoneToVoidFunction,\n) {\n  const { isMobile } = useAppLayout();\n\n  useEffect(() => {\n    if (isOpen) {\n      if (!isMobile) {\n        setTimeout(() => {\n          requestMutation(() => {\n            if (inputRef.current?.isConnected) {\n              inputRef.current.focus();\n            }\n          });\n        }, FOCUS_DELAY_MS);\n      }\n    } else {\n      if (inputRef.current?.isConnected) {\n        inputRef.current.blur();\n      }\n\n      if (onClose) {\n        setTimeout(onClose, MODAL_HIDE_DELAY_MS);\n      }\n    }\n  }, [inputRef, isMobile, isOpen, onClose]);\n}\n","import {\n  addLocalizationCallback,\n  getTranslationFn,\n  type LangFn,\n} from '../util/localization';\nimport useEffectOnce from './useEffectOnce';\nimport useForceUpdate from './useForceUpdate';\n\nconst useLang = (): LangFn => {\n  const forceUpdate = useForceUpdate();\n\n  useEffectOnce(() => {\n    return addLocalizationCallback(forceUpdate);\n  });\n\n  return getTranslationFn();\n};\n\nexport default useLang;\n","import { useCallback, useRef, useUnmountCleanup } from '../lib/teact/teact';\n\nconst DEFAULT_THRESHOLD = 250;\n\nfunction useLongPress({\n  onClick, onStart, onEnd, threshold = DEFAULT_THRESHOLD,\n}: {\n  onStart?: NoneToVoidFunction;\n  onClick?: (event: React.MouseEvent | React.TouchEvent) => void;\n  onEnd?: NoneToVoidFunction;\n  threshold?: number;\n}) {\n  const isLongPressActive = useRef(false);\n  const isPressed = useRef(false);\n  const timerId = useRef<number | undefined>(undefined);\n\n  const start = useCallback((e: React.MouseEvent | React.TouchEvent) => {\n    const canProcessEvent = ('button' in e && e.button === 0) || ('touches' in e && e.touches.length > 0);\n    if (isPressed.current || !canProcessEvent) {\n      return;\n    }\n\n    isPressed.current = true;\n    timerId.current = window.setTimeout(() => {\n      onStart?.();\n      isLongPressActive.current = true;\n    }, threshold);\n  }, [onStart, threshold]);\n\n  const cancel = useCallback((e: React.MouseEvent | React.TouchEvent) => {\n    if (!isPressed.current) return;\n\n    if (isLongPressActive.current) {\n      onEnd?.();\n    } else {\n      onClick?.(e);\n    }\n\n    isLongPressActive.current = false;\n    isPressed.current = false;\n    window.clearTimeout(timerId.current);\n  }, [onEnd, onClick]);\n\n  useUnmountCleanup(() => {\n    window.clearTimeout(timerId.current);\n  });\n\n  return {\n    onMouseDown: start,\n    onMouseUp: cancel,\n    onMouseLeave: cancel,\n    onTouchStart: start,\n    onTouchEnd: cancel,\n  };\n}\n\nexport default useLongPress;\n","import {\n  useEffect, useMemo, useRef, useState,\n} from '../lib/teact/teact';\n\nimport { ApiMediaFormat } from '../api/types';\n\nimport { selectIsSynced } from '../global/selectors';\nimport * as mediaLoader from '../util/mediaLoader';\nimport { throttle } from '../util/schedulers';\nimport { IS_PROGRESSIVE_SUPPORTED } from '../util/windowEnvironment';\nimport useSelector from './data/useSelector';\nimport useForceUpdate from './useForceUpdate';\nimport useUniqueId from './useUniqueId';\n\nconst STREAMING_PROGRESS = 0.75;\nconst STREAMING_TIMEOUT = 1500;\nconst PROGRESS_THROTTLE = 500;\n\nexport default function useMediaWithLoadProgress(\n  mediaHash: string | undefined,\n  noLoad = false,\n  mediaFormat = ApiMediaFormat.BlobUrl,\n  delay?: number | false,\n  isHtmlAllowed = false,\n) {\n  const mediaData = mediaHash ? mediaLoader.getFromMemory(mediaHash) : undefined;\n  const isStreaming = IS_PROGRESSIVE_SUPPORTED && mediaFormat === ApiMediaFormat.Progressive;\n  const forceUpdate = useForceUpdate();\n  const isSynced = useSelector(selectIsSynced);\n  const id = useUniqueId();\n  const [loadProgress, setLoadProgress] = useState(mediaData && !isStreaming ? 1 : 0);\n  const startedAtRef = useRef<number>();\n\n  const handleProgress = useMemo(() => {\n    return throttle((progress: number) => {\n      if (startedAtRef.current && (!delay || (Date.now() - startedAtRef.current > delay))) {\n        setLoadProgress(progress);\n      }\n    }, PROGRESS_THROTTLE, true);\n  }, [delay]);\n\n  useEffect(() => {\n    if (!noLoad && mediaHash) {\n      if (!mediaData) {\n        setLoadProgress(0);\n\n        if (startedAtRef.current) {\n          mediaLoader.cancelProgress(handleProgress);\n        }\n\n        startedAtRef.current = Date.now();\n\n        mediaLoader.fetch(mediaHash, mediaFormat, isHtmlAllowed, handleProgress, id).then(() => {\n          const spentTime = Date.now() - startedAtRef.current!;\n          startedAtRef.current = undefined;\n\n          if (!delay || spentTime >= delay) {\n            forceUpdate();\n          } else {\n            setTimeout(forceUpdate, delay - spentTime);\n          }\n        });\n      } else if (isStreaming) {\n        setTimeout(() => {\n          setLoadProgress(STREAMING_PROGRESS);\n        }, STREAMING_TIMEOUT);\n      }\n    }\n  }, [\n    noLoad, mediaHash, mediaData, mediaFormat, isStreaming, delay, handleProgress, isHtmlAllowed, id, isSynced,\n  ]);\n\n  useEffect(() => {\n    if (noLoad && startedAtRef.current) {\n      mediaLoader.cancelProgress(handleProgress);\n      setLoadProgress(0);\n      startedAtRef.current = undefined;\n    }\n  }, [handleProgress, noLoad]);\n\n  useEffect(() => {\n    return () => {\n      if (mediaHash) {\n        mediaLoader.removeCallback(mediaHash, id);\n      }\n    };\n  }, [id, mediaHash]);\n\n  return { mediaData, loadProgress };\n}\n","import { useEffect, useRef } from '../lib/teact/teact';\n\nimport { IS_TOUCH_ENV } from '../util/windowEnvironment';\nimport useLastCallback from './useLastCallback';\n\nconst MENU_CLOSE_TIMEOUT = 250;\nlet closeTimeout: number | undefined;\n\nexport default function useMouseInside(\n  isOpen: boolean, onClose: NoneToVoidFunction, menuCloseTimeout = MENU_CLOSE_TIMEOUT, isDisabled = false,\n) {\n  const isMouseInside = useRef(false);\n\n  const markMouseInside = useLastCallback(() => {\n    isMouseInside.current = true;\n  });\n\n  useEffect(() => {\n    if (closeTimeout) {\n      clearTimeout(closeTimeout);\n      closeTimeout = undefined;\n    }\n\n    if (isOpen && !IS_TOUCH_ENV && !isDisabled) {\n      closeTimeout = window.setTimeout(() => {\n        if (!isMouseInside.current) {\n          onClose();\n        }\n      }, menuCloseTimeout * 2);\n    }\n  }, [isDisabled, isOpen, menuCloseTimeout, onClose]);\n\n  const handleMouseEnter = useLastCallback(() => {\n    isMouseInside.current = true;\n  });\n\n  const handleMouseLeave = useLastCallback(() => {\n    isMouseInside.current = false;\n\n    if (closeTimeout) {\n      clearTimeout(closeTimeout);\n      closeTimeout = undefined;\n    }\n\n    closeTimeout = window.setTimeout(() => {\n      if (!isMouseInside.current) {\n        onClose();\n      }\n    }, menuCloseTimeout);\n  });\n\n  return [handleMouseEnter, handleMouseLeave, markMouseInside];\n}\n","import { useRef } from '../lib/teact/teact';\n\nimport useForceUpdate from './useForceUpdate';\nimport usePreviousDeprecated from './usePreviousDeprecated';\nimport useSyncEffect from './useSyncEffect';\n\nexport default function usePrevDuringAnimation<T>(current: T, duration?: number): T {\n  const prev = usePreviousDeprecated(current, true);\n  const timeoutRef = useRef<number>();\n  const forceUpdate = useForceUpdate();\n  // eslint-disable-next-line no-null/no-null\n  const isCurrentPresent = current !== undefined && current !== null;\n  // eslint-disable-next-line no-null/no-null\n  const isPrevPresent = prev !== undefined && prev !== null;\n\n  if (isCurrentPresent && timeoutRef.current) {\n    clearTimeout(timeoutRef.current);\n    timeoutRef.current = undefined;\n  }\n\n  useSyncEffect(() => {\n    // When `current` becomes empty\n    if (duration && !isCurrentPresent && isPrevPresent && !timeoutRef.current) {\n      timeoutRef.current = window.setTimeout(() => {\n        timeoutRef.current = undefined;\n        forceUpdate();\n      }, duration);\n    }\n  }, [duration, forceUpdate, isCurrentPresent, isPrevPresent]);\n\n  return (!timeoutRef.current || !duration || isCurrentPresent ? current : prev)!;\n}\n","import { useCallback, useRef } from '../lib/teact/teact';\n\nimport useForceUpdate from './useForceUpdate';\n\nexport type ReducerAction<Actions> = { type: Actions; payload?: any };\nexport type StateReducer<State, Actions> = (state: State, action: ReducerAction<Actions>) => State;\nexport type Dispatch<State, Actions> = (action: ReducerAction<Actions>) => State;\n\nexport default function useReducer<State, Actions>(\n  reducer: StateReducer<State, Actions>,\n  initialState: State,\n) {\n  const forceUpdate = useForceUpdate();\n  const reducerRef = useRef(reducer);\n  const state = useRef(initialState);\n\n  const dispatch = useCallback((action: ReducerAction<Actions>) => {\n    state.current = reducerRef.current(state.current, action);\n    forceUpdate();\n    return state.current;\n  }, []);\n\n  return [\n    state.current,\n    dispatch,\n  ] as [State, Dispatch<State, Actions>];\n}\n","import useDebouncedCallback from './useDebouncedCallback';\n\nexport default function useRunDebounced(ms: number, noFirst?: boolean, noLast?: boolean, deps: any = []) {\n  return useDebouncedCallback((cb: NoneToVoidFunction) => {\n    cb();\n    // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n  }, deps, ms, noFirst, noLast);\n}\n","import type { FC } from '../../lib/teact/teact';\nimport React from '../../lib/teact/teact';\n\nimport type { OwnProps } from './CalendarModal';\n\nimport { Bundles } from '../../util/moduleLoader';\n\nimport useModuleLoader from '../../hooks/useModuleLoader';\n\nconst CalendarModalAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const CalendarModal = useModuleLoader(Bundles.Extra, 'CalendarModal', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return CalendarModal ? <CalendarModal {...props} /> : undefined;\n};\n\nexport default CalendarModalAsync;\n","import React, { useState } from '../lib/teact/teact';\n\nimport { SCHEDULED_WHEN_ONLINE } from '../config';\nimport { getDayStartAt } from '../util/dates/dateFormat';\nimport { getServerTimeOffset } from '../util/serverTime';\nimport useLastCallback from './useLastCallback';\nimport useOldLang from './useOldLang';\n\nimport CalendarModal from '../components/common/CalendarModal.async';\n\ntype OnScheduledCallback = (scheduledAt: number) => void;\n\nconst useSchedule = (\n  canScheduleUntilOnline?: boolean,\n  onCancel?: () => void,\n  openAt?: number,\n) => {\n  const lang = useOldLang();\n  const [onScheduled, setOnScheduled] = useState<OnScheduledCallback | undefined>();\n\n  const handleMessageSchedule = useLastCallback((date: Date, isWhenOnline = false) => {\n    // Scheduled time can not be less than 10 seconds in future\n    const scheduledAt = Math.round(Math.max(date.getTime(), Date.now() + 60 * 1000) / 1000)\n      + (isWhenOnline ? 0 : getServerTimeOffset());\n    onScheduled?.(scheduledAt);\n    setOnScheduled(undefined);\n  });\n\n  const handleMessageScheduleUntilOnline = useLastCallback(() => {\n    handleMessageSchedule(new Date(SCHEDULED_WHEN_ONLINE * 1000), true);\n  });\n\n  const handleCloseCalendar = useLastCallback(() => {\n    setOnScheduled(undefined);\n    onCancel?.();\n  });\n\n  const requestCalendar = useLastCallback((whenScheduled: OnScheduledCallback) => {\n    setOnScheduled(() => whenScheduled);\n  });\n\n  const scheduledDefaultDate = openAt ? new Date(openAt * 1000) : new Date();\n  scheduledDefaultDate.setSeconds(0);\n  scheduledDefaultDate.setMilliseconds(0);\n\n  const scheduledMaxDate = new Date();\n  scheduledMaxDate.setFullYear(scheduledMaxDate.getFullYear() + 1);\n\n  const calendar = (\n    <CalendarModal\n      isOpen={Boolean(onScheduled)}\n      withTimePicker\n      selectedAt={scheduledDefaultDate.getTime()}\n      maxAt={getDayStartAt(scheduledMaxDate)}\n      isFutureMode\n      secondButtonLabel={canScheduleUntilOnline ? lang('Schedule.SendWhenOnline') : undefined}\n      onClose={handleCloseCalendar}\n      onSubmit={handleMessageSchedule}\n      onSecondButtonClick={canScheduleUntilOnline ? handleMessageScheduleUntilOnline : undefined}\n    />\n  );\n\n  return [requestCalendar, calendar] as const;\n};\n\nexport default useSchedule;\n","import { useMemo } from '../lib/teact/teact';\nimport { getActions } from '../global';\n\nimport type { ApiSendMessageAction } from '../api/types';\nimport type { ThreadId } from '../types';\n\nimport { SEND_MESSAGE_ACTION_INTERVAL } from '../config';\nimport { throttle } from '../util/schedulers';\n\nconst useSendMessageAction = (chatId?: string, threadId?: ThreadId) => {\n  return useMemo(() => {\n    return throttle((action: ApiSendMessageAction) => {\n      if (!chatId || !threadId) return;\n      getActions().sendMessageAction({ chatId, threadId, action });\n    }, SEND_MESSAGE_ACTION_INTERVAL);\n  }, [chatId, threadId]);\n};\n\nexport default useSendMessageAction;\n","import { useEffect } from '../../lib/teact/teact';\n\nimport { onBeforeUnload } from '../../util/schedulers';\nimport useLastCallback from '../useLastCallback';\n\nexport default function useBeforeUnload(callback: AnyToVoidFunction) {\n  const lastCallback = useLastCallback(callback);\n\n  useEffect(() => onBeforeUnload(lastCallback), [lastCallback]);\n}\n","import generateUniqueId from './generateUniqueId';\nimport { throttleWithTickEnd } from './schedulers';\n\nexport interface CancellableCallback {\n  (\n    ...args: any[]\n  ): void;\n\n  isCanceled?: boolean;\n}\n\ntype InitPayload = {\n  type: 'init';\n  messageId?: string;\n  args: any;\n};\n\ntype CallMethodPayload = {\n  type: 'callMethod';\n  messageId?: string;\n  name: string;\n  args: any;\n  withCallback?: boolean;\n};\n\ntype CancelProgressPayload = {\n  type: 'cancelProgress';\n  messageId: string;\n};\n\nexport type OriginPayload =\n  InitPayload\n  | CallMethodPayload\n  | CancelProgressPayload;\n\nexport type OriginMessageData = {\n  channel?: string;\n  payloads: OriginPayload[];\n};\n\nexport interface OriginMessageEvent {\n  data: OriginMessageData;\n}\n\nexport type ApiUpdate =\n  { type: string }\n  & any;\n\nexport type WorkerPayload =\n  {\n    channel?: string;\n    type: 'update';\n    update: ApiUpdate;\n  }\n  |\n  {\n    channel?: string;\n    type: 'methodResponse';\n    messageId: string;\n    response?: any;\n    error?: { message: string };\n  }\n  |\n  {\n    channel?: string;\n    type: 'methodCallback';\n    messageId: string;\n    callbackArgs: any[];\n  }\n  |\n  {\n    channel?: string;\n    type: 'unhandledError';\n    error?: { message: string };\n  };\n\nexport type WorkerMessageData = {\n  channel?: string;\n  payloads: WorkerPayload[];\n};\n\nexport interface WorkerMessageEvent {\n  data: WorkerMessageData;\n}\n\ninterface RequestState {\n  messageId: string;\n  resolve: Function;\n  reject: Function;\n  callback: AnyToVoidFunction;\n}\n\ntype InputRequestTypes = Record<string, AnyFunction>;\n\ntype Values<T> = T[keyof T];\nexport type RequestTypes<T extends InputRequestTypes> = Values<{\n  [Name in keyof (T)]: {\n    name: Name & string;\n    args: Parameters<T[Name]>;\n    transferables?: Transferable[];\n  }\n}>;\n\nclass ConnectorClass<T extends InputRequestTypes> {\n  private requestStates = new Map<string, RequestState>();\n\n  private requestStatesByCallback = new Map<AnyToVoidFunction, RequestState>();\n\n  private pendingPayloads: OriginPayload[] = [];\n\n  private pendingTransferables: Transferable[] = [];\n\n  constructor(\n    public target: Worker,\n    private onUpdate?: (update: ApiUpdate) => void,\n    private channel?: string,\n  ) {\n  }\n\n  // eslint-disable-next-line class-methods-use-this\n  public destroy() {\n  }\n\n  init(...args: any[]) {\n    this.postMessageOnTickEnd({\n      type: 'init',\n      args,\n    });\n  }\n\n  request(messageData: RequestTypes<T>) {\n    const { requestStates, requestStatesByCallback } = this;\n    const { transferables, ...restMessageData } = messageData;\n\n    const messageId = generateUniqueId();\n    const payload: CallMethodPayload = {\n      type: 'callMethod',\n      messageId,\n      ...restMessageData,\n    };\n\n    const requestState = { messageId } as RequestState;\n\n    // Re-wrap type because of `postMessage`\n    const promise: Promise<any> = new Promise((resolve, reject) => {\n      Object.assign(requestState, { resolve, reject });\n    });\n\n    if (typeof payload.args[payload.args.length - 1] === 'function') {\n      payload.withCallback = true;\n\n      const callback = payload.args.pop() as AnyToVoidFunction;\n      requestState.callback = callback;\n      requestStatesByCallback.set(callback, requestState);\n    }\n\n    requestStates.set(messageId, requestState);\n    promise\n      .catch(() => undefined)\n      .finally(() => {\n        requestStates.delete(messageId);\n\n        if (requestState.callback) {\n          requestStatesByCallback.delete(requestState.callback);\n        }\n      });\n\n    this.postMessageOnTickEnd(payload, transferables);\n\n    return promise;\n  }\n\n  cancelCallback(progressCallback: CancellableCallback) {\n    progressCallback.isCanceled = true;\n\n    const { messageId } = this.requestStatesByCallback.get(progressCallback) || {};\n    if (!messageId) {\n      return;\n    }\n\n    this.postMessageOnTickEnd({\n      type: 'cancelProgress',\n      messageId,\n    });\n  }\n\n  onMessage(data: WorkerMessageData) {\n    const { requestStates, channel } = this;\n    if (data.channel !== channel) {\n      return;\n    }\n\n    data.payloads.forEach((payload) => {\n      if (payload.type === 'update' && this.onUpdate) {\n        this.onUpdate(payload.update);\n      }\n      if (payload.type === 'methodResponse') {\n        const requestState = requestStates.get(payload.messageId);\n        if (requestState) {\n          if (payload.error) {\n            requestState.reject(payload.error);\n          } else {\n            requestState.resolve(payload.response);\n          }\n        }\n      } else if (payload.type === 'methodCallback') {\n        const requestState = requestStates.get(payload.messageId);\n        requestState?.callback?.(...payload.callbackArgs);\n      } else if (payload.type === 'unhandledError') {\n        throw new Error(payload.error?.message);\n      }\n    });\n  }\n\n  private postMessageOnTickEnd(payload: OriginPayload, transferables?: Transferable[]) {\n    this.pendingPayloads.push(payload);\n\n    if (transferables) {\n      this.pendingTransferables.push(...transferables);\n    }\n\n    this.postMessagesOnTickEnd();\n  }\n\n  private postMessagesOnTickEnd = throttleWithTickEnd(() => {\n    const { channel } = this;\n    const payloads = this.pendingPayloads;\n    const transferables = this.pendingTransferables;\n\n    this.pendingPayloads = [];\n    this.pendingTransferables = [];\n\n    this.target.postMessage({ channel, payloads }, transferables);\n  });\n}\n\nexport function createConnector<T extends InputRequestTypes>(\n  worker: Worker,\n  onUpdate?: (update: ApiUpdate) => void,\n  channel?: string,\n) {\n  const connector = new ConnectorClass<T>(worker, onUpdate, channel);\n\n  function handleMessage({ data }: WorkerMessageEvent) {\n    connector.onMessage(data);\n  }\n\n  worker.addEventListener('message', handleMessage);\n\n  connector.destroy = () => {\n    worker.removeEventListener('message', handleMessage);\n  };\n\n  return connector;\n}\n\nexport type Connector<T extends InputRequestTypes = InputRequestTypes> = ReturnType<typeof createConnector<T>>;\n","import { getGlobal } from '../global';\n\nimport { requestMutation } from '../lib/fasterdom/fasterdom';\nimport { selectCanAnimateInterface } from '../global/selectors';\nimport { animate } from './animation';\n\nconst DEFAULT_DURATION = 300;\n\nconst stopById: Map<string, VoidFunction> = new Map();\n\nexport default function animateHorizontalScroll(container: HTMLElement, left: number, duration = DEFAULT_DURATION) {\n  if (!selectCanAnimateInterface(getGlobal())) {\n    duration = 0;\n  }\n\n  const isRtl = container.getAttribute('dir') === 'rtl';\n  const {\n    scrollLeft, offsetWidth: containerWidth, scrollWidth, dataset: { scrollId },\n  } = container;\n\n  let path = left - scrollLeft;\n\n  if (path < 0) {\n    const remainingPath = -scrollLeft * (isRtl ? -1 : 1);\n    path = Math.max(path, remainingPath);\n  } else if (path > 0) {\n    const remainingPath = scrollWidth - (scrollLeft + containerWidth);\n    path = Math.min(path, remainingPath);\n  }\n\n  if (path === 0) {\n    return Promise.resolve();\n  }\n\n  if (scrollId && stopById.has(scrollId)) {\n    stopById.get(scrollId)!();\n  }\n\n  const target = scrollLeft + path;\n\n  return new Promise<void>((resolve) => {\n    requestMutation(() => {\n      if (duration === 0) {\n        container.scrollLeft = target;\n        resolve();\n        return;\n      }\n\n      let isStopped = false;\n      const id = Math.random().toString();\n      container.dataset.scrollId = id;\n      stopById.set(id, () => {\n        isStopped = true;\n      });\n\n      container.style.scrollSnapType = 'none';\n\n      const startAt = Date.now();\n\n      animate(() => {\n        if (isStopped) return false;\n\n        const t = Math.min((Date.now() - startAt) / duration, 1);\n\n        const currentPath = path * (1 - transition(t));\n        container.scrollLeft = Math.round(target - currentPath);\n\n        if (t >= 1) {\n          container.style.scrollSnapType = '';\n          delete container.dataset.scrollId;\n          stopById.delete(id);\n          resolve();\n        }\n\n        return t < 1;\n      }, requestMutation);\n    });\n  });\n}\n\nfunction transition(t: number) {\n  return 1 - ((1 - t) ** 3.5);\n}\n","import { beginHeavyAnimation } from '../lib/teact/teact';\nimport { getGlobal } from '../global';\n\nimport type { ScrollTargetPosition } from '../types';\nimport { FocusDirection } from '../types';\n\nimport {\n  SCROLL_MAX_DISTANCE,\n  SCROLL_MAX_DURATION,\n  SCROLL_MIN_DURATION,\n  SCROLL_SHORT_TRANSITION_MAX_DISTANCE,\n} from '../config';\nimport { requestMeasure, requestMutation } from '../lib/fasterdom/fasterdom';\nimport { selectCanAnimateInterface } from '../global/selectors';\nimport { animateSingle, cancelSingleAnimation } from './animation';\nimport { IS_ANDROID } from './windowEnvironment';\n\ntype Params = Parameters<typeof createMutateFunction>;\n\nlet isAnimating = false;\nlet currentArgs: Parameters<typeof createMutateFunction> | undefined;\nlet onHeavyAnimationEnd: NoneToVoidFunction | undefined;\n\nexport default function animateScroll(...args: Params | [...Params, boolean]) {\n  currentArgs = args.slice(0, 8) as Params;\n\n  const mutate = createMutateFunction(...currentArgs);\n\n  const shouldReturnMutationFn = args[8];\n  if (shouldReturnMutationFn) {\n    return mutate;\n  }\n\n  requestMutation(mutate);\n  return undefined;\n}\n\nexport function restartCurrentScrollAnimation() {\n  if (!isAnimating) {\n    return;\n  }\n\n  cancelSingleAnimation();\n\n  requestMeasure(() => {\n    requestMutation(createMutateFunction(...currentArgs!));\n  });\n}\n\nfunction createMutateFunction(\n  container: HTMLElement,\n  element: HTMLElement,\n  position: ScrollTargetPosition,\n  margin = 0,\n  maxDistance = SCROLL_MAX_DISTANCE,\n  forceDirection?: FocusDirection,\n  forceDuration?: number,\n  forceNormalContainerHeight?: boolean,\n) {\n  if (\n    forceDirection === FocusDirection.Static\n    || !selectCanAnimateInterface(getGlobal())\n  ) {\n    forceDuration = 0;\n  }\n\n  const { offsetTop: elementTop, offsetHeight: elementHeight } = element;\n  const { scrollTop: currentScrollTop, offsetHeight: containerHeight, scrollHeight } = container;\n  const targetContainerHeight = forceNormalContainerHeight && container.dataset.normalHeight\n    ? Number(container.dataset.normalHeight)\n    : containerHeight;\n\n  let scrollTo!: number;\n  switch (position) {\n    case 'start':\n      scrollTo = (elementTop - margin) + (IS_ANDROID ? 1 : 0);\n      break;\n    case 'end':\n      scrollTo = (elementTop + elementHeight + margin) - targetContainerHeight;\n      break;\n    // 'nearest' is not supported yet\n    case 'nearest':\n    case 'center':\n    case 'centerOrTop':\n      scrollTo = elementHeight < targetContainerHeight\n        ? (elementTop + elementHeight / 2 - targetContainerHeight / 2)\n        : (elementTop - margin);\n      break;\n  }\n\n  const scrollFrom = calculateScrollFrom(container, scrollTo, maxDistance, forceDirection);\n\n  let path = scrollTo - scrollFrom;\n  if (path < 0) {\n    const remainingPath = -scrollFrom;\n    path = Math.max(path, remainingPath);\n  } else if (path > 0) {\n    const remainingPath = scrollHeight - (scrollFrom + targetContainerHeight);\n    path = Math.min(path, remainingPath);\n  }\n\n  const absPath = Math.abs(path);\n\n  return () => {\n    if (absPath < 1) {\n      if (currentScrollTop !== scrollFrom) {\n        container.scrollTop = scrollFrom;\n      }\n\n      return;\n    }\n\n    const target = scrollFrom + path;\n\n    if (forceDuration === 0) {\n      container.scrollTop = target;\n      return;\n    }\n\n    const transition = absPath <= SCROLL_SHORT_TRANSITION_MAX_DISTANCE ? shortTransition : longTransition;\n    const duration = forceDuration || (\n      SCROLL_MIN_DURATION\n      + (absPath / SCROLL_MAX_DISTANCE) * (SCROLL_MAX_DURATION - SCROLL_MIN_DURATION)\n    );\n    const startAt = Date.now();\n\n    isAnimating = true;\n\n    const prevOnHeavyAnimationEnd = onHeavyAnimationEnd;\n    onHeavyAnimationEnd = beginHeavyAnimation(undefined, true);\n    prevOnHeavyAnimationEnd?.();\n\n    animateSingle(() => {\n      const t = Math.min((Date.now() - startAt) / duration, 1);\n      const currentPath = path * (1 - transition(t));\n      const newScrollTop = Math.round(target - currentPath);\n\n      container.scrollTop = newScrollTop;\n\n      isAnimating = t < 1 && newScrollTop !== target;\n\n      if (!isAnimating) {\n        currentArgs = undefined;\n\n        onHeavyAnimationEnd?.();\n        onHeavyAnimationEnd = undefined;\n      }\n\n      return isAnimating;\n    }, requestMutation);\n  };\n}\n\nexport function isAnimatingScroll() {\n  return isAnimating;\n}\n\nexport function cancelScrollBlockingAnimation() {\n  onHeavyAnimationEnd!();\n  onHeavyAnimationEnd = undefined;\n}\n\nfunction calculateScrollFrom(\n  container: HTMLElement,\n  scrollTo: number,\n  maxDistance = SCROLL_MAX_DISTANCE,\n  forceDirection?: FocusDirection,\n) {\n  const { scrollTop } = container;\n\n  if (forceDirection === undefined) {\n    const offset = scrollTo - scrollTop;\n\n    if (offset < -maxDistance) {\n      return scrollTop + (offset + maxDistance);\n    } else if (offset > maxDistance) {\n      return scrollTop + (offset - maxDistance);\n    }\n  } else if (forceDirection === FocusDirection.Up) {\n    return scrollTo + maxDistance;\n  } else if (forceDirection === FocusDirection.Down) {\n    return Math.max(0, scrollTo - maxDistance);\n  }\n\n  return scrollTop;\n}\n\nfunction shortTransition(t: number) {\n  return 1 - ((1 - t) ** 3.5);\n}\n\nfunction longTransition(t: number) {\n  return 1 - ((1 - t) ** 6);\n}\n","import { getActions, getGlobal } from '../global';\n\nimport type { ApiMessage } from '../api/types';\nimport type { MessageKey } from './keys/messageKey';\nimport { AudioOrigin, GlobalSearchContent } from '../types';\n\nimport { requestNextMutation } from '../lib/fasterdom/fasterdom';\nimport { selectCurrentMessageList, selectTabState } from '../global/selectors';\nimport { getMessageServerKey, parseMessageKey } from './keys/messageKey';\nimport { isSafariPatchInProgress, patchSafariProgressiveAudio } from './patchSafariProgressiveAudio';\nimport safePlay from './safePlay';\nimport { IS_SAFARI } from './windowEnvironment';\n\ntype Handler = (eventName: string, e: Event) => void;\nexport type TrackId = `${MessageKey}-${number}`;\n\nexport interface Track {\n  audio: HTMLAudioElement;\n  proxy: HTMLAudioElement;\n  type: 'voice' | 'audio' | 'oneTimeVoice';\n  handlers: Handler[];\n  onForcePlay?: NoneToVoidFunction;\n  onTrackChange?: NoneToVoidFunction;\n}\n\nconst tracks = new Map<TrackId, Track>();\n\nlet voiceQueue: TrackId[] = [];\nlet musicQueue: TrackId[] = [];\n\nlet currentTrackId: TrackId | undefined;\n\nfunction createAudio(\n  trackId: TrackId,\n  type: Track['type'],\n  onForcePlay?: NoneToVoidFunction,\n  onTrackChange?: NoneToVoidFunction,\n): Track {\n  const audio = new Audio();\n\n  function handleEvent(eventName: string) {\n    return (e: Event) => {\n      if (!tracks.has(trackId)) {\n        return;\n      }\n\n      if (isSafariPatchInProgress(audio)) {\n        return;\n      }\n\n      tracks.get(trackId)!.handlers.forEach((handler) => {\n        handler(eventName, e);\n      });\n    };\n  }\n\n  audio.addEventListener('timeupdate', handleEvent('onTimeUpdate'));\n  audio.addEventListener('play', handleEvent('onPlay'));\n  audio.addEventListener('pause', handleEvent('onPause'));\n  audio.addEventListener('loadstart', handleEvent('onLoadStart'));\n  audio.addEventListener('loadeddata', handleEvent('onLoadedData'));\n  audio.addEventListener('playing', handleEvent('onPlaying'));\n  audio.addEventListener('ended', () => {\n    if (!tracks.has(trackId)) {\n      return;\n    }\n\n    if (isSafariPatchInProgress(audio)) {\n      return;\n    }\n\n    playNext(trackId);\n  });\n\n  return {\n    audio,\n    type,\n    proxy: new Proxy(audio, {\n      get: (target, key: keyof HTMLAudioElement) => target[key],\n    }),\n    handlers: [],\n    onForcePlay,\n    onTrackChange,\n  };\n}\n\nfunction playNext(trackId: TrackId, isReverseOrder?: boolean) {\n  const currentTrack = currentTrackId && tracks.get(currentTrackId);\n  if (currentTrack) {\n    currentTrack.audio.pause();\n    currentTrack.audio.currentTime = 0;\n    if (currentTrack.onTrackChange) currentTrack.onTrackChange();\n  }\n\n  const origin = selectTabState(getGlobal()).audioPlayer.origin || AudioOrigin.Inline;\n\n  const nextTrackId = findNextInQueue(trackId, origin, isReverseOrder);\n  if (!nextTrackId) {\n    return;\n  }\n\n  if (!tracks.has(nextTrackId)) {\n    // A bit hacky way to continue playlist when switching chat\n    getActions().openAudioPlayer(parseMessageKey(splitTrackId(nextTrackId).messageKey));\n\n    return;\n  }\n\n  const nextTrack = tracks.get(nextTrackId)!;\n\n  if (nextTrack.onForcePlay) {\n    nextTrack.onForcePlay();\n  }\n\n  currentTrackId = nextTrackId;\n\n  if (nextTrack.audio.src) {\n    safePlay(nextTrack.audio);\n  }\n}\n\nexport function stopCurrentAudio() {\n  const currentTrack = currentTrackId && tracks.get(currentTrackId);\n  if (currentTrack) {\n    currentTrack.audio.pause();\n  }\n}\n\nexport function register(\n  trackId: TrackId,\n  trackType: Track['type'],\n  handler: Handler,\n  onForcePlay?: NoneToVoidFunction,\n  onTrackChange?: NoneToVoidFunction,\n) {\n  if (!tracks.has(trackId)) {\n    const track = createAudio(trackId, trackType, onForcePlay, onTrackChange);\n    tracks.set(trackId, track);\n    addTrackToQueue(track, trackId);\n  }\n  const { audio, proxy, handlers } = tracks.get(trackId)!;\n\n  handlers.push(handler);\n\n  return {\n    play(src: string) {\n      if (!audio.paused) return;\n      const currentTrack = currentTrackId && tracks.get(currentTrackId);\n      if (currentTrack && currentTrackId !== trackId) {\n        currentTrack.audio.pause();\n        currentTrack.audio.currentTime = 0;\n        if (isSafariPatchInProgress(currentTrack.audio)) {\n          currentTrack.audio.dataset.preventPlayAfterPatch = 'true';\n        }\n        if (currentTrack.onTrackChange) currentTrack.onTrackChange();\n      }\n\n      currentTrackId = trackId;\n\n      if (!audio.src) {\n        audio.src = src;\n        audio.preload = 'auto';\n\n        if (src.includes('/progressive/') && IS_SAFARI) {\n          delete audio.dataset.preventPlayAfterPatch;\n          patchSafariProgressiveAudio(audio);\n        }\n      }\n\n      safePlay(audio);\n      cleanUpQueue(trackType, trackId);\n    },\n\n    pause() {\n      if (currentTrackId === trackId) {\n        audio.pause();\n      }\n    },\n\n    stop() {\n      if (currentTrackId === trackId) {\n        // Hack, reset `src` to remove default media session notification\n        const prevSrc = audio.src;\n        audio.pause();\n        // `onPause` not called otherwise, but required to sync UI\n        requestNextMutation(() => {\n          audio.src = '';\n          audio.src = prevSrc;\n        });\n      }\n    },\n\n    setCurrentTime(time: number) {\n      if (currentTrackId === trackId) {\n        if (audio.fastSeek) {\n          audio.fastSeek(time);\n        } else {\n          audio.currentTime = time;\n        }\n      }\n    },\n\n    setVolume(volume: number) {\n      if (currentTrackId === trackId) {\n        audio.volume = volume;\n        audio.muted = false;\n      }\n    },\n\n    setPlaybackRate(rate: number) {\n      if (currentTrackId === trackId) {\n        audio.playbackRate = rate;\n      }\n    },\n\n    toggleMuted(muted?: boolean) {\n      if (muted === undefined) {\n        audio.muted = !audio.muted;\n      } else {\n        audio.muted = muted;\n      }\n    },\n\n    proxy,\n\n    requestNextTrack() {\n      playNext(trackId);\n    },\n\n    isLast() {\n      return !findNextInQueue(trackId, selectTabState(getGlobal()).audioPlayer.origin);\n    },\n\n    isFirst() {\n      return !findNextInQueue(trackId, selectTabState(getGlobal()).audioPlayer.origin, true);\n    },\n\n    requestPreviousTrack() {\n      playNext(trackId, true);\n    },\n\n    destroy(shouldRemoveFromQueue = false) {\n      const track = tracks.get(trackId);\n      if (!track) {\n        return;\n      }\n\n      track.handlers = track.handlers.filter((h) => h !== handler);\n\n      if (!track.handlers.length) {\n        track.audio.pause();\n        tracks.delete(trackId);\n\n        if (shouldRemoveFromQueue) {\n          removeFromQueue(track, trackId);\n        }\n\n        if (trackId === currentTrackId) {\n          currentTrackId = undefined;\n        }\n      }\n    },\n  };\n}\n\nfunction getTrackQueue(track: Track) {\n  switch (track.type) {\n    case 'audio': return musicQueue;\n    case 'voice': return voiceQueue;\n    default: return undefined;\n  }\n}\n\nfunction addTrackToQueue(track: Track, trackId: TrackId) {\n  if (track.type === 'audio' && !musicQueue.includes(trackId)) {\n    musicQueue.push(trackId);\n    musicQueue.sort(trackIdComparator);\n  }\n\n  if (track.type === 'voice' && !voiceQueue.includes(trackId)) {\n    voiceQueue.push(trackId);\n    voiceQueue.sort(trackIdComparator);\n  }\n}\n\nfunction removeFromQueue(track: Track, trackId: TrackId) {\n  const trackIdFilter = (el: TrackId) => el !== trackId;\n  if (track.type === 'audio') {\n    musicQueue = musicQueue.filter(trackIdFilter);\n  }\n\n  if (track.type === 'voice') {\n    voiceQueue = voiceQueue.filter(trackIdFilter);\n  }\n}\n\nfunction cleanUpQueue(type: Track['type'], trackId: TrackId) {\n  if (selectTabState(getGlobal()).globalSearch.currentContent === GlobalSearchContent.Music) return;\n  const { chatId } = parseMessageKey(splitTrackId(trackId).messageKey);\n  const openedChatId = selectCurrentMessageList(getGlobal())?.chatId;\n  const queueFilter = (id: string) => (\n    id.startsWith(`msg${chatId}`) || (openedChatId && id.startsWith(`msg${openedChatId}`))\n  );\n\n  if (type === 'audio') {\n    musicQueue = musicQueue.filter(queueFilter);\n  }\n\n  if (type === 'voice') {\n    voiceQueue = voiceQueue.filter(queueFilter);\n  }\n}\n\nfunction findNextInQueue(currentId: TrackId, origin = AudioOrigin.Inline, isReverseOrder?: boolean) {\n  const track = tracks.get(currentId)!;\n  const queue = getTrackQueue(track);\n  if (!queue) return undefined;\n\n  if (origin === AudioOrigin.Search) {\n    const index = queue.indexOf(currentId);\n    if (index < 0) return undefined;\n    const direction = isReverseOrder ? -1 : 1;\n    return queue[index + direction];\n  }\n\n  const { chatId } = parseMessageKey(splitTrackId(currentId).messageKey);\n  const chatAudio = queue.filter((id) => id.startsWith(`msg${chatId}`));\n  const index = chatAudio.indexOf(currentId);\n  if (index < 0) return undefined;\n  let direction = origin === AudioOrigin.Inline ? -1 : 1;\n  if (isReverseOrder) direction *= -1;\n  return chatAudio[index + direction];\n}\n\nexport function makeTrackId(message: ApiMessage): TrackId | undefined {\n  const key = getMessageServerKey(message);\n  if (!key) {\n    return undefined;\n  }\n  return `${key}-${message.date}`;\n}\n\nfunction splitTrackId(trackId: TrackId) {\n  const messageKey = trackId.match(/^msg(-?\\d+)-(\\d+)/)![0] as MessageKey;\n  const date = Number(trackId.split('-').pop());\n  return {\n    messageKey,\n    date,\n  };\n}\n\n// Descending order by date\nfunction trackIdComparator(one?: TrackId, two?: TrackId) {\n  if (!one || !two) return 0;\n  const { date: dateOne, messageKey: keyOne } = splitTrackId(one);\n  const { date: dateTwo, messageKey: keyTwo } = splitTrackId(two);\n  const diff = dateTwo - dateOne;\n  return diff === 0 ? keyTwo.localeCompare(keyOne) : diff;\n}\n","/* eslint-disable eqeqeq */\n/* eslint-disable prefer-template */\n/* eslint-disable prefer-const */\n/* eslint-disable prefer-destructuring */\n/* eslint-disable one-var */\n/* eslint-disable one-var-declaration-per-line */\n\nimport { preloadImage } from './files';\n\n/**\n * HEX > RGB\n * input: 'xxxxxx' (ex. 'ed15fa') case-insensitive\n * output: [r, g, b] ([0-255, 0-255, 0-255])\n */\nexport function hex2rgb(param: string): [number, number, number] {\n  return [\n    parseInt(param.substring(0, 2), 16),\n    parseInt(param.substring(2, 4), 16),\n    parseInt(param.substring(4, 6), 16),\n  ];\n}\n\n/**\n * RGB > HEX\n * input: [r, g, b] ([0-255, 0-255, 0-255])\n * output: 'xxxxxx' (ex. 'ff0000')\n */\nexport function rgb2hex(param: [number, number, number]) {\n  const p0 = param[0].toString(16);\n  const p1 = param[1].toString(16);\n  const p2 = param[2].toString(16);\n  return (p0.length == 1 ? '0' + p0 : p0) + (p1.length == 1 ? '0' + p1 : p1) + (p2.length == 1 ? '0' + p2 : p2);\n}\n\n/**\n * Converts an RGB color value to HSV. Conversion formula\n * adapted from http://en.wikipedia.org/wiki/HSV_color_space.\n * Assumes r, g, and b are contained in the set [0, 255] and\n * returns h, s, and v in the set [0, 1].\n *\n * @param   Number  r       The red color value\n * @param   Number  g       The green color value\n * @param   Number  b       The blue color value\n * @return  Array           The HSV representation\n */\nexport function rgb2hsb([r, g, b]: [number, number, number]): [number, number, number] {\n  r /= 255;\n  g /= 255;\n  b /= 255;\n\n  let max = Math.max(r, g, b), min = Math.min(r, g, b);\n  let h!: number, s: number, v: number = max;\n\n  let d = max - min;\n  s = max == 0 ? 0 : d / max;\n\n  if (max == min) {\n    h = 0; // achromatic\n  } else {\n    switch (max) {\n      case r:\n        h = (g - b) / d + (g < b ? 6 : 0);\n        break;\n      case g:\n        h = (b - r) / d + 2;\n        break;\n      case b:\n        h = (r - g) / d + 4;\n        break;\n    }\n\n    h /= 6;\n  }\n\n  return [h, s, v];\n}\n\n/**\n * Converts an HSV color value to RGB. Conversion formula\n * adapted from http://en.wikipedia.org/wiki/HSV_color_space.\n * Assumes h, s, and v are contained in the set [0, 1] and\n * returns r, g, and b in the set [0, 255].\n *\n * @param   Number  h       The hue\n * @param   Number  s       The saturation\n * @param   Number  v       The value\n * @return  Array           The RGB representation\n */\nexport function hsb2rgb([h, s, v]: [number, number, number]): [number, number, number] {\n  let r!: number, g!: number, b!: number;\n\n  let i = Math.floor(h * 6);\n  let f = h * 6 - i;\n  let p = v * (1 - s);\n  let q = v * (1 - f * s);\n  let t = v * (1 - (1 - f) * s);\n\n  switch (i % 6) {\n    case 0:\n      r = v;\n      g = t;\n      b = p;\n      break;\n    case 1:\n      r = q;\n      g = v;\n      b = p;\n      break;\n    case 2:\n      r = p;\n      g = v;\n      b = t;\n      break;\n    case 3:\n      r = p;\n      g = q;\n      b = v;\n      break;\n    case 4:\n      r = t;\n      g = p;\n      b = v;\n      break;\n    case 5:\n      r = v;\n      g = p;\n      b = q;\n      break;\n  }\n\n  return [\n    Math.round(r * 255),\n    Math.round(g * 255),\n    Math.round(b * 255),\n  ];\n}\n\nexport async function getAverageColor(url: string): Promise<[number, number, number]> {\n  // Only visit every 5 pixels\n  const blockSize = 5;\n  const defaultRGB: [number, number, number] = [0, 0, 0];\n  let data;\n  let width;\n  let height;\n  let i = -4;\n  let length;\n  let rgb: [number, number, number] = [0, 0, 0];\n  let count = 0;\n\n  const canvas = document.createElement('canvas');\n  const context = canvas.getContext && canvas.getContext('2d');\n  if (!context) {\n    return defaultRGB;\n  }\n\n  const image = await preloadImage(url);\n  height = image.naturalHeight || image.offsetHeight || image.height;\n  width = image.naturalWidth || image.offsetWidth || image.width;\n  canvas.height = height;\n  canvas.width = width;\n\n  context.drawImage(image, 0, 0);\n\n  try {\n    data = context.getImageData(0, 0, width, height);\n  } catch (e) {\n    return defaultRGB;\n  }\n\n  length = data.data.length;\n\n  // eslint-disable-next-line no-cond-assign\n  while ((i += blockSize * 4) < length) {\n    if (data.data[i + 3] === 0) continue; // Ignore fully transparent pixels\n    ++count;\n    rgb[0] += data.data[i];\n    rgb[1] += data.data[i + 1];\n    rgb[2] += data.data[i + 2];\n  }\n\n  rgb[0] = Math.floor(rgb[0] / count);\n  rgb[1] = Math.floor(rgb[1] / count);\n  rgb[2] = Math.floor(rgb[2] / count);\n\n  return rgb;\n}\n\nexport function getColorLuma(rgbColor: [number, number, number]) {\n  const [r, g, b] = rgbColor;\n  const luma = 0.2126 * r + 0.7152 * g + 0.0722 * b;\n  return luma;\n}\n\n// Function was adapted from https://github.com/telegramdesktop/tdesktop/blob/35ff621b5b52f7e3553fb0f990ea13ade7101b8e/Telegram/SourceFiles/data/data_wall_paper.cpp#L518\nexport function getPatternColor(rgbColor: [number, number, number]) {\n  let [hue, saturation, value] = rgb2hsb(rgbColor);\n\n  saturation = Math.min(1, saturation + 0.05 + 0.1 * (1 - saturation));\n  value = value > 0.5\n    ? Math.max(0, value * 0.65)\n    : Math.max(0, Math.min(1, 1 - value * 0.65));\n\n  return `hsla(${hue * 360}, ${saturation * 100}%, ${value * 100}%, .4)`;\n}\n","export default function cycleRestrict(length: number, index: number) {\n  return index - Math.floor(index / length) * length;\n}\n","import { pause } from './schedulers';\n\ntype PendingDownload = {\n  url: string;\n  filename: string;\n};\n\n// Chrome prevents more than 10 downloads per second\nconst LIMIT_PER_BATCH = 10;\nconst BATCH_INTERVAL = 1000;\n\nlet pendingDownloads: PendingDownload[] = [];\nlet planned = false;\n\nexport default function download(url: string, filename: string) {\n  pendingDownloads.push({ url, filename });\n  if (!planned) {\n    planned = true;\n    setTimeout(async () => {\n      await processQueue();\n      planned = false;\n    }, BATCH_INTERVAL);\n  }\n}\n\nasync function processQueue() {\n  let count = 0;\n  for (const pendingDownload of pendingDownloads) {\n    downloadOne(pendingDownload);\n    count++;\n    if (count === LIMIT_PER_BATCH) {\n      await pause(BATCH_INTERVAL);\n      count = 0;\n    }\n  }\n  pendingDownloads = [];\n}\n\nfunction downloadOne({ url, filename }: PendingDownload) {\n  const link = document.createElement('a');\n  link.href = url;\n  link.download = filename;\n  try {\n    link.click();\n  } catch (err) {\n    // eslint-disable-next-line no-console\n    console.error(err); // Suppress redundant \"Blob loading failed\" error popup on IOS\n  }\n}\n","import EMOJI_REGEX from '../../lib/twemojiRegex';\nimport fixNonStandardEmoji from './fixNonStandardEmoji';\n\nconst DETECT_UP_TO = 100;\nconst MAX_LENGTH = DETECT_UP_TO * 8; // Maximum 8 code points per one emoji.\n\nexport default function parseEmojiOnlyString(text: string): number | false {\n  const standardizedText = fixNonStandardEmoji(text);\n  const lines = standardizedText.split('\\n');\n  const textWithoutNewlines = lines.join('');\n  if (textWithoutNewlines.length > MAX_LENGTH) {\n    return false;\n  }\n\n  const totalCount = countIfEmojiOnly(textWithoutNewlines);\n  if (!totalCount || totalCount > DETECT_UP_TO) {\n    return false;\n  }\n\n  // Calculate max emoji count per column or line. Used in UI to determine the size of the emoji.\n  let max = lines.length;\n  for (const line of lines) {\n    const count = countIfEmojiOnly(line);\n    if (count === false) {\n      return false;\n    }\n    if (count > max) {\n      max = count;\n    }\n  }\n\n  return max;\n}\n\nfunction countIfEmojiOnly(line: string): false | number {\n  const iterator = line.matchAll(EMOJI_REGEX);\n  let count = 0;\n  let currentIndex = 0;\n\n  for (const match of iterator) {\n    if (match.index !== currentIndex) {\n      return false;\n    }\n\n    count++;\n    currentIndex = match.index + match[0].length;\n  }\n\n  if (currentIndex !== line.length) {\n    return false;\n  }\n\n  return count;\n}\n","import { IS_TOUCH_ENV } from './windowEnvironment';\n\nexport default function focusEditableElement(element: HTMLElement, force?: boolean, forcePlaceCaretAtEnd?: boolean) {\n  if (!force && element === document.activeElement) {\n    return;\n  }\n\n  const selection = window.getSelection()!;\n  const range = document.createRange();\n  const lastChild = element.lastChild || element;\n\n  if (!IS_TOUCH_ENV && !forcePlaceCaretAtEnd && (!lastChild || !lastChild.nodeValue)) {\n    element.focus();\n    return;\n  }\n\n  range.selectNodeContents(forcePlaceCaretAtEnd ? element : lastChild);\n  // `false` means collapse to the end rather than the start\n  range.collapse(false);\n  selection.removeAllRanges();\n  selection.addRange(range);\n}\n","import { MESSAGE_CONTENT_CLASS_NAME } from '../config';\n\nconst ELEMENT_NODE = 1;\n\nexport default function getMessageIdsForSelectedText() {\n  const selection = window.getSelection();\n  let selectedFragments = selection?.rangeCount ? selection.getRangeAt(0).cloneContents() : undefined;\n\n  const shouldIncludeLastMessage = selection?.focusNode && selection.focusOffset > 0\n    && hasParentWithClassName(selection.focusNode, MESSAGE_CONTENT_CLASS_NAME);\n  if (!selectedFragments || selectedFragments.childElementCount === 0) {\n    return undefined;\n  }\n\n  const messageIds = Array.from(selectedFragments.children)\n    .reduce((result, node) => {\n      if (node.nodeType === ELEMENT_NODE && node.classList.contains('message-date-group')) {\n        return Array.from(node.querySelectorAll('.Message'))\n          .reduce((acc, messageEl) => acc.concat(Number((messageEl as HTMLElement).dataset.messageId)), result);\n      } else if (node.nodeType === ELEMENT_NODE && node.classList.contains('Message')) {\n        return result.concat(Number((node as HTMLElement).dataset.messageId));\n      }\n\n      return result;\n    }, [] as number[]);\n\n  // Cleanup a document fragment because it is playing media content in the background\n  while (selectedFragments.firstChild) {\n    selectedFragments.removeChild(selectedFragments.firstChild);\n  }\n  selectedFragments = undefined;\n\n  if (!shouldIncludeLastMessage) {\n    messageIds.pop();\n  }\n\n  return messageIds;\n}\n\nfunction hasParentWithClassName(element: Node, className: string): boolean {\n  if (element.nodeType === ELEMENT_NODE && (element as HTMLElement).classList.contains(className)) {\n    return true;\n  }\n\n  return element.parentNode ? hasParentWithClassName(element.parentNode, className) : false;\n}\n","import { getAverageColor, getColorLuma } from './colors';\n\nconst LUMA_THRESHOLD = 240;\n\nexport function scaleImage(image: string | Blob, ratio: number, outputType: string = 'image/png'): Promise<string> {\n  const url = image instanceof Blob ? URL.createObjectURL(image) : image;\n  const img = new Image();\n  return new Promise((resolve) => {\n    img.onload = () => {\n      scale(img, img.width * ratio, img.height * ratio, outputType)\n        .then((blob) => {\n          if (!blob) throw new Error('Image resize failed!');\n          return URL.createObjectURL(blob);\n        })\n        .then(resolve)\n        .finally(() => {\n          if (image instanceof Blob) {\n            URL.revokeObjectURL(url); // Revoke blob url that we created\n          }\n        });\n    };\n    img.src = url;\n  });\n}\n\nexport function resizeImage(\n  image: string | Blob, width: number, height: number, outputType: string = 'image/png',\n): Promise<string> {\n  const url = image instanceof Blob ? URL.createObjectURL(image) : image;\n  const img = new Image();\n  return new Promise((resolve) => {\n    img.onload = () => {\n      scale(img, width, height, outputType)\n        .then((blob) => {\n          if (!blob) throw new Error('Image resize failed!');\n          return URL.createObjectURL(blob);\n        })\n        .then(resolve)\n        .finally(() => {\n          if (image instanceof Blob) {\n            URL.revokeObjectURL(url); // Revoke blob url that we created\n          }\n        });\n    };\n    img.src = url;\n  });\n}\n\nasync function scale(\n  img: HTMLImageElement, width: number, height: number, outputType: string = 'image/png',\n): Promise<Blob | null> {\n  // Safari does not have built-in resize method with quality control\n  if ('createImageBitmap' in window) {\n    try {\n      const bitmap = await window.createImageBitmap(img,\n        { resizeWidth: width, resizeHeight: height, resizeQuality: 'high' });\n      if (bitmap.height !== height || bitmap.width !== width) {\n        throw new Error('Image bitmap resize not supported!'); // FF93 added support for options, but not resize\n      }\n      const averageColor = await getAverageColor(img.src);\n      const fillColor = getColorLuma(averageColor) < LUMA_THRESHOLD ? '#fff' : '#000';\n      return await new Promise((res) => {\n        const canvas = document.createElement('canvas');\n        canvas.width = bitmap.width;\n        canvas.height = bitmap.height;\n        const ctx2D = canvas.getContext('2d')!;\n        ctx2D.fillStyle = fillColor;\n        ctx2D.fillRect(0, 0, canvas.width, canvas.height);\n        const ctx = canvas.getContext('bitmaprenderer');\n        if (ctx) {\n          ctx.transferFromImageBitmap(bitmap);\n        } else {\n          ctx2D.drawImage(bitmap, 0, 0);\n        }\n        canvas.toBlob(res, outputType);\n      });\n    } catch (e) {\n      // Fallback. Firefox below 93 does not recognize `createImageBitmap` with 2 parameters\n      return steppedScale(img, width, height, undefined, outputType);\n    }\n  } else {\n    return steppedScale(img, width, height, undefined, outputType);\n  }\n}\n\nasync function steppedScale(\n  img: HTMLImageElement, width: number, height: number, step: number = 0.5, outputType: string = 'image/png',\n): Promise<Blob | null> {\n  const canvas = document.createElement('canvas');\n  const ctx = canvas.getContext('2d')!;\n  const oc = document.createElement('canvas');\n  const octx = oc.getContext('2d')!;\n\n  canvas.width = width;\n  canvas.height = height;\n\n  if (img.width * step > width) { // For performance avoid unnecessary drawing\n    const mul = 1 / step;\n    let cur = {\n      width: Math.floor(img.width * step),\n      height: Math.floor(img.height * step),\n    };\n\n    oc.width = cur.width;\n    oc.height = cur.height;\n\n    octx.drawImage(img, 0, 0, cur.width, cur.height);\n\n    while (cur.width * step > width) {\n      cur = {\n        width: Math.floor(cur.width * step),\n        height: Math.floor(cur.height * step),\n      };\n      octx.drawImage(oc, 0, 0, cur.width * mul, cur.height * mul, 0, 0, cur.width, cur.height);\n    }\n\n    ctx.drawImage(oc, 0, 0, cur.width, cur.height, 0, 0, canvas.width, canvas.height);\n  } else {\n    ctx.drawImage(img, 0, 0, canvas.width, canvas.height);\n  }\n\n  const averageColor = await getAverageColor(img.src);\n  const fillColor = getColorLuma(averageColor) < LUMA_THRESHOLD ? '#fff' : '#000';\n  ctx.fillStyle = fillColor;\n  ctx.globalCompositeOperation = 'destination-over';\n  ctx.fillRect(0, 0, canvas.width, canvas.height);\n  return new Promise((resolve) => {\n    canvas.toBlob(resolve, outputType);\n  });\n}\n","import windowSize from './windowSize';\n\nexport function isElementInViewport(el: HTMLElement) {\n  if (el.style.display === 'none') {\n    return false;\n  }\n\n  const rect = el.getBoundingClientRect();\n  const { height: windowHeight } = windowSize.get();\n\n  return (rect.top <= windowHeight) && ((rect.top + rect.height) >= 0);\n}\n","import type { MediaWorkerApi } from '../lib/mediaWorker/index.worker';\nimport type { Connector } from './PostMessageConnector';\n\nimport { IS_TEST } from '../config';\n\nimport { createConnector } from './PostMessageConnector';\n\nexport const MAX_WORKERS = Math.min(navigator.hardwareConcurrency || 4, 4);\n\nlet instances: {\n  worker: Worker;\n  connector: Connector<MediaWorkerApi>;\n}[] | undefined;\n\nexport default function launchMediaWorkers() {\n  if (IS_TEST) return [];\n  if (!instances) {\n    instances = new Array(MAX_WORKERS).fill(undefined).map(\n      () => {\n        const worker = new Worker(new URL('../lib/mediaWorker/index.worker.ts', import.meta.url));\n        const connector = createConnector<MediaWorkerApi>(worker, undefined, 'media');\n        return { worker, connector };\n      },\n    );\n  }\n\n  return instances;\n}\n\nexport function requestMediaWorker(payload: Parameters<Connector<MediaWorkerApi>['request']>[0], index: number) {\n  return launchMediaWorkers()[index].connector.request(payload);\n}\n","import type { ApiGeoPoint } from '../api/types';\n\nconst PROVIDERS = {\n  google: 'https://maps.google.com/maps',\n  bing: 'https://bing.com/maps/default.aspx',\n  osm: 'https://www.openstreetmap.org',\n  apple: 'https://maps.apple.com',\n};\n\n// https://github.com/TelegramMessenger/Telegram-iOS/blob/2a32c871882c4e1b1ccdecd34fccd301723b30d9/submodules/LocationResources/Sources/VenueIconResources.swift#L82\nconst VENUE_COLORS = new Map(Object.entries({\n  'building/medical': '#43b3f4',\n  'building/gym': '#43b3f4',\n  'education/cafeteria': '#f7943f',\n  'travel/bedandbreakfast': '#9987ff',\n  'travel/hotel': '#9987ff',\n  'travel/hostel': '#9987ff',\n  'travel/resort': '#9987ff',\n  'travel/hotel_bar': '#e56dd6',\n  arts_entertainment: '#e56dd6',\n  building: '#6e81b2',\n  education: '#a57348',\n  event: '#959595',\n  food: '#f7943f',\n  home: '#00aeef',\n  nightlife: '#e56dd6',\n  parks_outdoors: '#6cc039',\n  shops: '#ffb300',\n  travel: '#1c9fff',\n  work: '#ad7854',\n}));\n\nconst RANDOM_COLORS = [\n  '#e56cd5', '#f89440', '#9986ff', '#44b3f5', '#6dc139', '#ff5d5a', '#f87aad', '#6e82b3', '#f5ba21',\n];\n\nexport function prepareMapUrl(provider: keyof typeof PROVIDERS, point: Omit<ApiGeoPoint, 'accessHash'>, zoom = 15) {\n  const { lat, long } = point;\n  const providerUrl = PROVIDERS[provider];\n  switch (provider) {\n    case 'google':\n      return `${providerUrl}/place/${lat}+${long}/@${lat},${long},${zoom}z`;\n    case 'bing':\n      return `${providerUrl}?cp=${lat}~${long}&lvl=${zoom}&sp=point.${lat}_${long}`;\n    case 'apple':\n      return `${providerUrl}?q=${lat},${long}`;\n    case 'osm':\n    default:\n      return `${providerUrl}/?mlat=${lat}&mlon=${long}&zoom=${zoom}`;\n  }\n}\n\nexport function getMetersPerPixel(lat: number, zoom: number) {\n  // https://groups.google.com/g/google-maps-js-api-v3/c/hDRO4oHVSeM/m/osOYQYXg2oUJ\n  return (156543.03392 * Math.cos(lat * (Math.PI / 180))) / 2 ** zoom;\n}\n\nexport function getVenueIconUrl(type?: string) {\n  if (!type) return '';\n  return `https://ss3.4sqi.net/img/categories_v2/${type}_88.png`;\n}\n\n// https://github.com/TelegramMessenger/Telegram-iOS/blob/2a32c871882c4e1b1ccdecd34fccd301723b30d9/submodules/LocationResources/Sources/VenueIconResources.swift#L104\nexport function getVenueColor(type?: string) {\n  if (!type) return '#008df2';\n  return VENUE_COLORS.get(type)\n    || VENUE_COLORS.get(type.split('/')[0])\n    || RANDOM_COLORS[stringToNumber(type) % RANDOM_COLORS.length];\n}\n\nfunction stringToNumber(str: string) {\n  return str.split('').reduce((prevHash, currVal) => (\n    // eslint-disable-next-line no-bitwise\n    (((prevHash << 5) - prevHash) + currVal.charCodeAt(0)) | 0), 0);\n}\n","export type MediaSessionHandlers = {\n  play?: () => void;\n  pause?: () => void;\n  stop?: () => void;\n\n  previoustrack?: () => void;\n  nexttrack?: () => void;\n\n  togglemicrophone?: () => void;\n  togglecamera?: () => void;\n  hangup?: () => void;\n\n  seekbackward?: (details: MediaSessionActionDetails) => void;\n  seekforward?: (details: MediaSessionActionDetails) => void;\n  seekTo?: ((details: MediaSessionActionDetails) => void);\n};\n\ninterface MediaMetadataParameters {\n  title?: string;\n  artist?: string;\n  album?: string;\n  artwork?: MediaImage[];\n}\n\nconst DEFAULT_HANDLERS = {\n  play: undefined,\n  pause: undefined,\n  seekbackward: undefined,\n  seekforward: undefined,\n  previoustrack: undefined,\n  nexttrack: undefined,\n  stop: undefined,\n  seekTo: undefined,\n};\n\nexport function registerMediaSession(metadata?: MediaMetadata, handlers?: MediaSessionHandlers) {\n  const { mediaSession } = window.navigator;\n  if (mediaSession) {\n    if (metadata) updateMetadata(metadata);\n    if (handlers) setMediaSessionHandlers(handlers);\n  } else {\n    // eslint-disable-next-line no-console\n    console.warn('MediaSession API not supported in this browser');\n  }\n}\n\nexport function updateMetadata(metadata?: MediaMetadata) {\n  const { mediaSession } = window.navigator;\n  if (mediaSession) {\n    // eslint-disable-next-line no-null/no-null\n    mediaSession.metadata = metadata ?? null;\n  }\n}\n\nexport function setMediaSessionHandlers(handlers: MediaSessionHandlers) {\n  const { mediaSession } = window.navigator;\n  if (mediaSession) {\n    Object.entries({ ...DEFAULT_HANDLERS, ...handlers }).forEach(([key, handler]) => {\n      try {\n        // @ts-ignore API not standardized yet\n        mediaSession.setActionHandler(key, handler);\n      } catch (err) {\n        // Handler not supported, ignoring\n      }\n    });\n  }\n}\n\nexport function clearMediaSession() {\n  const { mediaSession } = window.navigator;\n  if (mediaSession) {\n    // eslint-disable-next-line no-null/no-null\n    mediaSession.metadata = null;\n    setMediaSessionHandlers(DEFAULT_HANDLERS);\n    if (mediaSession.playbackState) mediaSession.playbackState = 'none';\n    mediaSession.setPositionState?.();\n  }\n}\n\nexport function setPlaybackState(state: 'none' | 'paused' | 'playing' = 'none') {\n  const { mediaSession } = window.navigator;\n  if (mediaSession && mediaSession.playbackState) {\n    mediaSession.playbackState = state;\n  }\n}\n\nexport function setPositionState(state?: MediaPositionState) {\n  if (!state || state.position === undefined || state.duration === undefined) return;\n  state.position = Math.min(state.position, state.duration);\n\n  const { mediaSession } = window.navigator;\n  mediaSession?.setPositionState?.(state);\n}\n\nexport function buildMediaMetadata({\n  title, artist, album, artwork,\n}: MediaMetadataParameters) {\n  if ('MediaMetadata' in window) {\n    return new window.MediaMetadata({\n      title,\n      artist,\n      album,\n      artwork,\n    });\n  }\n  return undefined;\n}\n","import { areSortedArraysEqual } from './iteratees';\n\nconst cache = new WeakMap<AnyFunction, {\n  lastArgs: any[];\n  lastResult: any;\n}>();\n\nexport default function memoized<T extends AnyFunction>(fn: T) {\n  return (...args: Parameters<T>): ReturnType<T> => {\n    const cached = cache.get(fn);\n    if (cached && areSortedArraysEqual(cached.lastArgs, args)) {\n      return cached.lastResult;\n    }\n\n    const result = fn(...args);\n    cache.set(fn, { lastArgs: args, lastResult: result });\n    return result;\n  };\n}\n","import type { UniqueCustomPeer } from '../../types';\n\nexport const CUSTOM_PEER_PREMIUM: UniqueCustomPeer = {\n  isCustomPeer: true,\n  type: 'premium',\n  titleKey: 'PrivacyPremium',\n  subtitleKey: 'PrivacyPremiumText',\n  avatarIcon: 'star',\n  isAvatarSquare: true,\n  withPremiumGradient: true,\n};\n\nexport const CUSTOM_PEER_TO_BE_DISTRIBUTED: UniqueCustomPeer = {\n  isCustomPeer: true,\n  type: 'toBeDistributed',\n  titleKey: 'BoostingToBeDistributed',\n  avatarIcon: 'user',\n  withPremiumGradient: true,\n};\n\nexport const CUSTOM_PEER_STAR: UniqueCustomPeer = {\n  isCustomPeer: true,\n  type: 'stars',\n  titleKey: 'Stars',\n  avatarIcon: 'star',\n  peerColorId: 1,\n};\n\nexport const CUSTOM_PEER_INCLUDED_CHAT_TYPES: UniqueCustomPeer[] = [\n  {\n    isCustomPeer: true,\n    type: 'contacts',\n    titleKey: 'FilterContacts',\n    avatarIcon: 'user',\n    isAvatarSquare: true,\n    peerColorId: 5,\n  },\n  {\n    isCustomPeer: true,\n    type: 'nonContacts',\n    titleKey: 'FilterNonContacts',\n    avatarIcon: 'non-contacts',\n    isAvatarSquare: true,\n    peerColorId: 4,\n  },\n  {\n    isCustomPeer: true,\n    type: 'groups',\n    titleKey: 'FilterGroups',\n    avatarIcon: 'group',\n    isAvatarSquare: true,\n    peerColorId: 3,\n  },\n  {\n    isCustomPeer: true,\n    type: 'channels',\n    titleKey: 'FilterChannels',\n    avatarIcon: 'channel',\n    isAvatarSquare: true,\n    peerColorId: 1,\n  },\n  {\n    isCustomPeer: true,\n    type: 'bots',\n    titleKey: 'FilterBots',\n    avatarIcon: 'bots',\n    isAvatarSquare: true,\n    peerColorId: 6,\n  },\n];\n\nexport const CUSTOM_PEER_EXCLUDED_CHAT_TYPES: UniqueCustomPeer[] = [\n  {\n    isCustomPeer: true,\n    type: 'excludeMuted',\n    titleKey: 'FilterMuted',\n    avatarIcon: 'mute',\n    isAvatarSquare: true,\n    peerColorId: 6,\n  },\n  {\n    isCustomPeer: true,\n    type: 'excludeRead',\n    titleKey: 'FilterRead',\n    avatarIcon: 'readchats',\n    isAvatarSquare: true,\n    peerColorId: 4,\n  },\n  {\n    isCustomPeer: true,\n    type: 'excludeArchived',\n    titleKey: 'FilterArchived',\n    avatarIcon: 'archive',\n    isAvatarSquare: true,\n    peerColorId: 5,\n  },\n];\n","import type { ApiFormattedText, ApiMessageEntity } from '../api/types';\nimport { ApiMessageEntityTypes } from '../api/types';\n\nimport { RE_LINK_TEMPLATE } from '../config';\nimport { IS_EMOJI_SUPPORTED } from './windowEnvironment';\n\nexport const ENTITY_CLASS_BY_NODE_NAME: Record<string, ApiMessageEntityTypes> = {\n  B: ApiMessageEntityTypes.Bold,\n  STRONG: ApiMessageEntityTypes.Bold,\n  I: ApiMessageEntityTypes.Italic,\n  EM: ApiMessageEntityTypes.Italic,\n  INS: ApiMessageEntityTypes.Underline,\n  U: ApiMessageEntityTypes.Underline,\n  S: ApiMessageEntityTypes.Strike,\n  STRIKE: ApiMessageEntityTypes.Strike,\n  DEL: ApiMessageEntityTypes.Strike,\n  CODE: ApiMessageEntityTypes.Code,\n  PRE: ApiMessageEntityTypes.Pre,\n  BLOCKQUOTE: ApiMessageEntityTypes.Blockquote,\n};\n\nconst MAX_TAG_DEEPNESS = 3;\n\nexport default function parseHtmlAsFormattedText(\n  html: string, withMarkdownLinks = false, skipMarkdown = false,\n): ApiFormattedText {\n  const fragment = document.createElement('div');\n  fragment.innerHTML = skipMarkdown ? html\n    : withMarkdownLinks ? parseMarkdown(parseMarkdownLinks(html)) : parseMarkdown(html);\n  fixImageContent(fragment);\n  const text = fragment.innerText.trim().replace(/\\u200b+/g, '');\n  const trimShift = fragment.innerText.indexOf(text[0]);\n  let textIndex = -trimShift;\n  let recursionDeepness = 0;\n  const entities: ApiMessageEntity[] = [];\n\n  function addEntity(node: ChildNode) {\n    if (node.nodeType === Node.COMMENT_NODE) return;\n    const { index, entity } = getEntityDataFromNode(node, text, textIndex);\n\n    if (entity) {\n      textIndex = index;\n      entities.push(entity);\n    } else if (node.textContent) {\n      // Skip newlines on the beginning\n      if (index === 0 && node.textContent.trim() === '') {\n        return;\n      }\n      textIndex += node.textContent.length;\n    }\n\n    if (node.hasChildNodes() && recursionDeepness <= MAX_TAG_DEEPNESS) {\n      recursionDeepness += 1;\n      Array.from(node.childNodes).forEach(addEntity);\n    }\n  }\n\n  Array.from(fragment.childNodes).forEach((node) => {\n    recursionDeepness = 1;\n    addEntity(node);\n  });\n\n  return {\n    text,\n    entities: entities.length ? entities : undefined,\n  };\n}\n\nexport function fixImageContent(fragment: HTMLDivElement) {\n  fragment.querySelectorAll('img').forEach((node) => {\n    if (node.dataset.documentId) { // Custom Emoji\n      node.textContent = (node as HTMLImageElement).alt || '';\n    } else { // Regular emoji with image fallback\n      node.replaceWith(node.alt || '');\n    }\n  });\n}\n\nfunction parseMarkdown(html: string) {\n  let parsedHtml = html.slice(0);\n\n  // Strip redundant nbsp's\n  parsedHtml = parsedHtml.replace(/&nbsp;/g, ' ');\n\n  // Replace <div><br></div> with newline (new line in Safari)\n  parsedHtml = parsedHtml.replace(/<div><br([^>]*)?><\\/div>/g, '\\n');\n  // Replace <br> with newline\n  parsedHtml = parsedHtml.replace(/<br([^>]*)?>/g, '\\n');\n\n  // Strip redundant <div> tags\n  parsedHtml = parsedHtml.replace(/<\\/div>(\\s*)<div>/g, '\\n');\n  parsedHtml = parsedHtml.replace(/<div>/g, '\\n');\n  parsedHtml = parsedHtml.replace(/<\\/div>/g, '');\n\n  // Pre\n  parsedHtml = parsedHtml.replace(/^`{3}(.*?)[\\n\\r](.*?[\\n\\r]?)`{3}/gms, '<pre data-language=\"$1\">$2</pre>');\n  parsedHtml = parsedHtml.replace(/^`{3}[\\n\\r]?(.*?)[\\n\\r]?`{3}/gms, '<pre>$1</pre>');\n  parsedHtml = parsedHtml.replace(/[`]{3}([^`]+)[`]{3}/g, '<pre>$1</pre>');\n\n  // Code\n  parsedHtml = parsedHtml.replace(\n    /(?!<(code|pre)[^<]*|<\\/)[`]{1}([^`\\n]+)[`]{1}(?![^<]*<\\/(code|pre)>)/g,\n    '<code>$2</code>',\n  );\n\n  // Custom Emoji markdown tag\n  if (!IS_EMOJI_SUPPORTED) {\n    // Prepare alt text for custom emoji\n    parsedHtml = parsedHtml.replace(/\\[<img[^>]+alt=\"([^\"]+)\"[^>]*>]/gm, '[$1]');\n  }\n  parsedHtml = parsedHtml.replace(\n    /(?!<(?:code|pre)[^<]*|<\\/)\\[([^\\]\\n]+)\\]\\(customEmoji:(\\d+)\\)(?![^<]*<\\/(?:code|pre)>)/g,\n    '<img alt=\"$1\" data-document-id=\"$2\">',\n  );\n\n  // Other simple markdown\n  parsedHtml = parsedHtml.replace(\n    /(?!<(code|pre)[^<]*|<\\/)[*]{2}([^*\\n]+)[*]{2}(?![^<]*<\\/(code|pre)>)/g,\n    '<b>$2</b>',\n  );\n  parsedHtml = parsedHtml.replace(\n    /(?!<(code|pre)[^<]*|<\\/)[_]{2}([^_\\n]+)[_]{2}(?![^<]*<\\/(code|pre)>)/g,\n    '<i>$2</i>',\n  );\n  parsedHtml = parsedHtml.replace(\n    /(?!<(code|pre)[^<]*|<\\/)[~]{2}([^~\\n]+)[~]{2}(?![^<]*<\\/(code|pre)>)/g,\n    '<s>$2</s>',\n  );\n  parsedHtml = parsedHtml.replace(\n    /(?!<(code|pre)[^<]*|<\\/)[|]{2}([^|\\n]+)[|]{2}(?![^<]*<\\/(code|pre)>)/g,\n    `<span data-entity-type=\"${ApiMessageEntityTypes.Spoiler}\">$2</span>`,\n  );\n\n  return parsedHtml;\n}\n\nfunction parseMarkdownLinks(html: string) {\n  return html.replace(new RegExp(`\\\\[([^\\\\]]+?)]\\\\((${RE_LINK_TEMPLATE}+?)\\\\)`, 'g'), (_, text, link) => {\n    const url = link.includes('://') ? link : link.includes('@') ? `mailto:${link}` : `https://${link}`;\n    return `<a href=\"${url}\">${text}</a>`;\n  });\n}\n\nfunction getEntityDataFromNode(\n  node: ChildNode,\n  rawText: string,\n  textIndex: number,\n): { index: number; entity?: ApiMessageEntity } {\n  const type = getEntityTypeFromNode(node);\n\n  if (!type || !node.textContent) {\n    return {\n      index: textIndex,\n      entity: undefined,\n    };\n  }\n\n  const rawIndex = rawText.indexOf(node.textContent, textIndex);\n  // In some cases, last text entity ends with a newline (which gets trimmed from `rawText`).\n  // In this case, `rawIndex` would return `-1`, so we use `textIndex` instead.\n  const index = rawIndex >= 0 ? rawIndex : textIndex;\n  const offset = rawText.substring(0, index).length;\n  const { length } = rawText.substring(index, index + node.textContent.length);\n\n  if (type === ApiMessageEntityTypes.TextUrl) {\n    return {\n      index,\n      entity: {\n        type,\n        offset,\n        length,\n        url: (node as HTMLAnchorElement).href,\n      },\n    };\n  }\n  if (type === ApiMessageEntityTypes.MentionName) {\n    return {\n      index,\n      entity: {\n        type,\n        offset,\n        length,\n        userId: (node as HTMLAnchorElement).dataset.userId!,\n      },\n    };\n  }\n\n  if (type === ApiMessageEntityTypes.Pre) {\n    return {\n      index,\n      entity: {\n        type,\n        offset,\n        length,\n        language: (node as HTMLPreElement).dataset.language,\n      },\n    };\n  }\n\n  if (type === ApiMessageEntityTypes.CustomEmoji) {\n    return {\n      index,\n      entity: {\n        type,\n        offset,\n        length,\n        documentId: (node as HTMLImageElement).dataset.documentId!,\n      },\n    };\n  }\n\n  return {\n    index,\n    entity: {\n      type,\n      offset,\n      length,\n    },\n  };\n}\n\nfunction getEntityTypeFromNode(node: ChildNode): ApiMessageEntityTypes | undefined {\n  if (node instanceof HTMLElement && node.dataset.entityType) {\n    return node.dataset.entityType as ApiMessageEntityTypes;\n  }\n\n  if (ENTITY_CLASS_BY_NODE_NAME[node.nodeName]) {\n    return ENTITY_CLASS_BY_NODE_NAME[node.nodeName];\n  }\n\n  if (node.nodeName === 'A') {\n    const anchor = node as HTMLAnchorElement;\n    if (anchor.dataset.entityType === ApiMessageEntityTypes.MentionName) {\n      return ApiMessageEntityTypes.MentionName;\n    }\n    if (anchor.dataset.entityType === ApiMessageEntityTypes.Url) {\n      return ApiMessageEntityTypes.Url;\n    }\n    if (anchor.href.startsWith('mailto:')) {\n      return ApiMessageEntityTypes.Email;\n    }\n    if (anchor.href.startsWith('tel:')) {\n      return ApiMessageEntityTypes.Phone;\n    }\n    if (anchor.href !== anchor.textContent) {\n      return ApiMessageEntityTypes.TextUrl;\n    }\n\n    return ApiMessageEntityTypes.Url;\n  }\n\n  if (node.nodeName === 'SPAN') {\n    return (node as HTMLElement).dataset.entityType as any;\n  }\n\n  if (node.nodeName === 'IMG') {\n    if ((node as HTMLImageElement).dataset.documentId) {\n      return ApiMessageEntityTypes.CustomEmoji;\n    }\n  }\n\n  return undefined;\n}\n","const extractorEl = document.createElement('div');\n\nexport function insertHtmlInSelection(html: string) {\n  const selection = window.getSelection();\n\n  if (selection?.getRangeAt && selection.rangeCount) {\n    const range = selection.getRangeAt(0);\n    range.deleteContents();\n\n    const fragment = range.createContextualFragment(html);\n    const lastInsertedNode = fragment.lastChild;\n    range.insertNode(fragment);\n    if (lastInsertedNode) {\n      range.setStartAfter(lastInsertedNode);\n      range.setEndAfter(lastInsertedNode);\n    } else {\n      range.collapse(false);\n    }\n    selection.removeAllRanges();\n    selection.addRange(range);\n  }\n}\n\nexport function getHtmlBeforeSelection(container?: HTMLElement, useCommonAncestor?: boolean) {\n  if (!container) {\n    return '';\n  }\n\n  const sel = window.getSelection();\n  if (!sel || !sel.rangeCount) {\n    return container.innerHTML;\n  }\n\n  const range = sel.getRangeAt(0).cloneRange();\n  if (!range.intersectsNode(container)) {\n    return container.innerHTML;\n  }\n\n  if (!useCommonAncestor && !container.contains(range.commonAncestorContainer)) {\n    return '';\n  }\n\n  range.collapse(true);\n  range.setStart(container, 0);\n\n  extractorEl.innerHTML = '';\n  extractorEl.appendChild(range.cloneContents());\n\n  return extractorEl.innerHTML;\n}\n\n// https://stackoverflow.com/a/3976125\nexport function getCaretPosition(element: HTMLElement) {\n  let caretPosition = 0;\n  const selection = window.getSelection();\n  if (!selection || selection.rangeCount === 0) {\n    return caretPosition;\n  }\n\n  const range = selection.getRangeAt(0);\n  const caretRange = range.cloneRange();\n  caretRange.selectNodeContents(element);\n  caretRange.setEnd(range.endContainer, range.endOffset);\n  caretPosition = caretRange.toString().length;\n\n  return caretPosition;\n}\n\n// https://stackoverflow.com/a/36953852\nexport function setCaretPosition(element: Node, position: number) {\n  for (const node of element.childNodes) {\n    if (node.nodeType === Node.TEXT_NODE) {\n      if ((node as Text).length >= position) {\n        const range = document.createRange();\n        const selection = window.getSelection()!;\n        range.setStart(node, position);\n        range.collapse(true);\n        selection.removeAllRanges();\n        selection.addRange(range);\n\n        return -1;\n      } else {\n        position -= 'length' in node ? node.length as number : 0;\n      }\n    } else {\n      position = setCaretPosition(node, position);\n      if (position === -1) {\n        return -1;\n      }\n    }\n  }\n\n  return position;\n}\n\nexport function removeAllSelections() {\n  const selection = window.getSelection();\n  selection?.removeAllRanges();\n}\n","let fileSelector: HTMLInputElement;\n\nexport function openSystemFilesDialog(accept = '*', callback: (e: Event) => void, noMultiple = false) {\n  if (!fileSelector) {\n    fileSelector = document.createElement('input');\n    fileSelector.setAttribute('type', 'file');\n  }\n\n  fileSelector.setAttribute('accept', accept);\n\n  if (noMultiple) {\n    fileSelector.removeAttribute('multiple');\n  } else {\n    fileSelector.setAttribute('multiple', 'multiple');\n  }\n\n  // eslint-disable-next-line no-null/no-null\n  fileSelector.onchange = null;\n  fileSelector.value = '';\n  fileSelector.onchange = callback;\n\n  fileSelector.click();\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"YmM5biTv\",\"header\":\"S7WFT2bv\",\"pickerCategoryTitle\":\"YK1300x2\",\"pickerList\":\"yLCbiItq\",\"padded\":\"bXzIGw8s\",\"noResults\":\"dXWKD0ve\",\"onlineStatus\":\"d5GDOYh9\"};","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"gXO57D98\",\"chosen\":\"VXSJn0Sm\",\"animated-emoji\":\"lFjoRm_p\",\"animatedEmoji\":\"lFjoRm_p\",\"tag\":\"Dr889Kzc\",\"tail\":\"cUfY1b26\",\"is-safari\":\"rxxUijuG\",\"isSafari\":\"rxxUijuG\",\"tail-fill\":\"y591o4fN\",\"tailFill\":\"y591o4fN\",\"tag-text\":\"ly7cruxF\",\"tagText\":\"ly7cruxF\",\"counter\":\"P2FqNJAi\",\"disabled\":\"NRtGofbf\"};"],"names":["memo","withGlobal","global","_ref3","chatId","chat","selectChat","groupCall","selectChatGroupCall","isActive","selectTabState","isMasterTab","groupCalls","activeGroupCallId","undefined","id","Boolean","participantsCount","isLoaded","isCallNotEmpty","isCallActive","_ref","className","hasPinnedOffset","requestMasterAndJoinGroupCall","subscribeToGroupCallUpdates","getActions","lang","useOldLang","handleJoinGroupCall","useCallback","participants","fetchedParticipants","useMemo","usersById","getGlobal","users","byId","chatsById","chats","Object","values","slice","map","_ref2","filter","useEffect","subscribed","shouldRender","transitionClassNames","useShowTransitionDeprecated","renderingParticipantCount","useCurrentOrPrev","renderingFetchedParticipants","React","createElement","buildClassName","onClick","length","AvatarList","size","peers","Button","round","scheduledAnimationsCounter","resetCounterOnTickEnd","throttleWithTickEnd","text","isDisabled","isRtl","useLang","prevText","usePreviousDeprecated","forceUpdate","useForceUpdate","shouldAnimate","selectCanAnimateInterface","characters","elements","textLength","prevTextLength","i","charIndex","prevTextCharIndex","unshift","renderAnimatedCharacters","timeoutId","window","setTimeout","clearTimeout","dir","props","sticker","noLoad","forcePreview","otherProps","thumbDataUri","thumbnail","dataUri","localMediaHash","previewBlobUrl","useMedia","getStickerMediaHash","ApiMediaFormat","BlobUrl","tgsUrl","AnimatedIconWithPreview","_extends","previewUrl","loadedPreviewUrls","Set","isThumbOpen","unmarkThumbOpen","useFlag","thumbClassNames","useMediaTransitionDeprecated","isPreviewOpen","markPreviewOpen","unmarkPreviewOpen","has","previewClassNames","isAnimationReady","markAnimationReady","handlePreviewLoad","useLastCallback","add","handleAnimationReady","style","buildStyle","src","styles","draggable","onLoad","AnimatedIcon","TINY_SCREEN_WIDTH_MQL","matchMedia","WITH_AVATAR_TINY_SCREEN_WIDTH_MQL","renderSeekline","playProgress","bufferedRanges","seekerRef","ref","start","end","theme","message","senderTitle","uploadProgress","origin","date","noAvatars","isSelectable","isSelected","isDownloading","isTranscribing","isTranscriptionHidden","isTranscribed","isTranscriptionError","canDownload","canTranscribe","autoPlay","onHideTranscription","onPlay","onPause","onReadMedia","onCancelUpload","onDateClick","cancelMediaDownload","downloadMedia","transcribeAudio","openOneTimeMediaModal","content","audio","contentAudio","voice","video","isMediaUnread","getMessageWebPageAudio","media","isVoice","isSeeking","useRef","isMobile","useAppLayout","isActivated","setIsActivated","useState","shouldLoad","coverHash","getMediaHash","coverBlobUrl","hasTtl","hasMessageTtl","isInOneTimeModal","AudioOrigin","OneTimeModal","trackType","mediaData","getMediaFormat","loadProgress","downloadProgress","useMediaWithLoadProgress","handleForcePlay","handleTrackChange","isBuffered","bufferingHandlers","checkBuffering","useBuffering","noReset","isPlaying","playPause","setCurrentTime","duration","useAudioPlayer","makeTrackId","getMediaDuration","isMessageLocal","reversePlayProgress","isOwn","isOwnMessage","isReverse","waveformCanvasRef","arguments","withAvatar","canvasRef","data","spikes","peak","waveform","Array","Math","min","fill","MIN_SPIKES","MAX_SPIKES","matches","getSeeklineSpikeAmounts","durationFactor","spikesCount","fitCount","newData","springFactor","leftFiller","rightFiller","idx","floor","val","interpolateArray","encoded5bit","bitsCount","valuesCount","result","bitsData","l","byteIndex","bitShift","value","lastByteIndex","lastBitShift","lastValue","decodeWaveform","Uint8Array","useLayoutEffect","canvas","current","progress","fillStyle","progressFillStyle","width","height","ctx","getContext","scale","forEach","item","globalAlpha","spikeHeight","max","x","y","radius","SPIKE_WIDTH","beginPath","moveTo","arcTo","closePath","roundedRectangle","renderWaveform","useWaveformCanvas","withSeekline","isLoadingForPlaying","isUploading","isTransferring","transferProgress","getMediaTransferState","shouldRenderSpinner","spinnerClassNames","shouldRenderCross","handleButtonClick","setAudioPlayerOrigin","handleDownloadClick","originMessage","handleSeek","e","left","getBoundingClientRect","clientX","MouseEvent","targetTouches","stopPropagation","handleStartSeek","button","handleStopSeek","handleDateClick","handleTranscribe","messageId","renderFirstLine","title","fileName","captureEvents","onCapture","onRelease","onDrag","fullClassName","Inline","Search","SharedMedia","buttonClassNames","push","contentClassName","renderWithTitle","renderText","Link","formatPastTimeShort","formatMediaDuration","performer","renderSecondLine","ripple","color","ariaLabel","backgroundImage","nonInteractive","Icon","name","LOCAL_TGS_URLS","Flame","noLoop","ProgressSpinner","transparent","withColor","noCross","rotationOffset","showProgress","showSeekline","getFileSizeString","Fragment","formatMediaDateTime","renderAudio","onClickTranscribe","viewBox","rx","ry","stroke","renderVoice","DEFAULT_LIMIT","limit","badgeText","renderingBadgeText","root","peer","Avatar","avatar","badge","resetInput","applyIosAutoCapitalizationFix","inputEl","focus","IS_IOS","document","classList","body","appendChild","RE_COMMAND","GDOCS_ELEMENT_ID_REGEXP","GDOCS_STYLES","BOLD","ITALIC","UNDERLINE","STRIKETHROUGH","SUPERSCRIPT","SUBSCRIPT","ELEMENTS","ANCHOR","BLOCKQUOTE","headers","parseHtml","html","DOMParser","parseFromString","wrapNodeAnchor","node","href","anchor","cloneNode","wrapNodeInline","el","wrapNode","inner","newNode","fontWeight","fontStyle","textDecoration","verticalAlign","applyInlineStyles","dirty","createTextNode","textContent","styledNode","nodeName","childNodes","getCleanNode","newWrapper","createDocumentFragment","items","indexOf","applyBlockStyles","nodes","filterNode","nodeType","STYLE_TAG_REGEX","useClipboardPaste","insertTextAndUpdateCursor","setAttachments","setNextText","editedMessage","shouldStripCustomEmoji","onCustomEmojiStripped","showNotification","addEventListener","handlePaste","removeEventListener","async","clipboardData","input","activeElement","EDITABLE_INPUT_ID","EDITABLE_INPUT_MODAL_ID","EDITABLE_STORY_INPUT_ID","includes","pastedText","getData","substring","pastedFormattedText","parseHtmlAsFormattedText","fragment","clipboardContent","match","filteredNodes","from","cleanNodes","getCleanDocument","replace","innerHTML","err","DEBUG","console","error","textContents","querySelectorAll","getElementsByTagName","HTMLElement","removeAttribute","tagName","replaceWith","dataset","entityType","getAttribute","ignoreOnPaste","remove","ENTITY_CLASS_BY_NODE_NAME","setAttribute","innerText","alt","ApiMessageEntityTypes","MentionName","CustomEmoji","trimEnd","preparePastedHtml","containsCustomEmoji","stripCustomEmoji","files","preventDefault","getFilesFromDataTransferItems","textToPaste","entities","isWordDocument","documentElement","hasText","shouldSetAttachments","newAttachments","Promise","all","file","buildAttachment","canReplace","canReplaceMessageMedia","isUploadingDocumentSticker","isUploadingFileSticker","isInAlbum","groupedId","attachments","concat","isFrozen","URL_ENTITIES","TextUrl","Url","INLINE_BOT_QUERY_REGEXP","HAS_NEW_LINE","MEMO_NO_RESULT","username","query","canShowHelp","usernameLowered","tempEl","buildQueryStateMemo","memoized","toLowerCase","STARTS_ENDS_ON_EMOJI_IMG_REGEX","RegExp","EMOJI_IMG_REGEX","source","POLYFILL_OPTIONS","encoderPath","URL","reuseWorker","BLOB_PARAMS","type","opusRecorderPromise","OpusRecorder","mediaRecorder","init","default","analyzerCallback","startMediaRecorder","startedAt","Date","now","pausedAt","chunks","ondataavailable","typedArray","releaseAnalyzer","recorder","cb","sourceNode","analyser","context","createAnalyser","fftSize","connect","dataLength","frequencyBinCount","dataArray","isDestroyed","tick","getByteFrequencyData","volume","reduce","acc","requestMeasure","subscribeToAnalyzer","stop","resolve","reject","onstop","blob","Blob","onerror","delayStop","pause","AttachmentModal","useModuleLoader","Bundles","Extra","threadId","isButtonVisible","canAttachMedia","canAttachPolls","canSendPhotos","canSendVideos","canSendDocuments","canSendAudios","attachBots","peerType","isScheduled","shouldCollectDebugLogs","onFileSelect","onMenuOpen","onMenuClose","onPollCreate","hasReplaceableMedia","editingMessage","isAttachMenuOpen","openAttachMenu","closeAttachMenu","handleMouseEnter","handleMouseLeave","markMouseInside","useMouseInside","canSendVideoAndPhoto","canSendVideoOrPhoto","isAttachmentBotMenuOpen","markAttachmentBotMenuOpen","unmarkAttachmentBotMenuOpen","isMenuOpen","isPhotoOrVideo","getMessagePhoto","getMessageWebPagePhoto","getMessageVideo","getMessageWebPageVideo","isFile","getMessageAudio","getMessageVoice","getMessageDocument","handleToggleAttachMenu","handleFileSelect","shouldSuggestCompression","target","validatedFiles","validateFiles","handleQuickSelect","openSystemFilesDialog","CONTENT_TYPES_WITH_PREVIEW","SUPPORTED_PHOTO_CONTENT_TYPES","SUPPORTED_VIDEO_CONTENT_TYPES","join","handleDocumentSelect","SUPPORTED_AUDIO_CONTENT_TYPES","handleSendLogs","File","getDebugLogs","DEBUG_LOG_FILENAME","bots","bot","isForAttachMenu","attachMenuPeerTypes","ResponsiveHoverButton","onActivate","ariaControls","hasPopup","disabled","Menu","isOpen","autoClose","positionX","positionY","onClose","onCloseAnimationEnd","onMouseEnter","IS_TOUCH_ENV","onMouseLeave","noCloseOnBackdrop","ariaLabelledBy","MenuItem","icon","AttachBotItem","onMenuOpened","onMenuClosed","BotCommandMenu","selectCurrentMessageList","selectChatMessage","clickBotInlineButton","isKeyboardSingleUse","buttonTexts","texts","keyboardButtons","row","renderKeyboardButtonText","noCompact","j","textRef","textEl","scrollWidth","closest","setProperty","composerEl","removeProperty","ChatCommandTooltip","shouldForceShowEditing","messageListType","forwardMessages","fromChatId","toChatId","messageIds","forwardMessageIds","noAuthors","noCaptions","isShareMessageModalShown","isModalShown","shouldPreventComposerAnimation","editingId","selectEditingScheduledId","selectEditingId","isForwarding","forwardedMessages","draft","selectDraft","replyInfo","replyToPeerId","senderChat","sender","selectEditingMessage","replyToMsgId","selectSender","selectForwardedSender","selectPeer","forwardInfo","isChatWithSelf","selectIsChatWithSelf","isChannelPost","hiddenUserName","quoteText","isSenderChannel","isChatChannel","forwardsHaveCaptions","some","forward","keys","isContextMenuDisabled","storyData","isReplyToDiscussion","forwardedMessagesCount","isCurrentUserPremium","selectIsCurrentUserPremium","isInChangingRecipientMode","currentUserId","onClear","resetDraftReplyInfo","updateDraftReplyInfo","setEditingId","focusMessage","changeRecipient","openChatOrTopicWithReplyInDraft","setForwardNoAuthors","setForwardNoCaptions","exitForwardMode","setShouldPreventComposerAnimation","oldLang","isReplyToTopicStart","action","isShowingReply","isReplyWithQuote","isShown","clearEmbedded","captureEscKeyListener","isContextMenuOpen","contextMenuAnchor","handleContextMenu","handleContextMenuClose","handleContextMenuHide","useContextMenuHandlers","handleMessageClick","handleClearClick","buildAutoCloseMenuItemHandler","handleForwardToAnotherChatClick","handleShowMessageClick","focusMessageFromDraft","noForumTopicPanel","handleRemoveQuoteClick","handleChangeReplyRecipientClick","handleReplyInSenderChat","handleDoNotReplyClick","getTriggerElement","getRootElement","getMenuElement","querySelector","renderingSender","innerClassName","getPeerColorClass","leftIcon","customText","strippedMessage","strippedText","renderingLeftIcon","canReplyInSenderChat","onContextMenu","ClosableEmbeddedMessage","isInComposer","faded","customIcon","MenuSeparator","DropArea","InlineBotTooltip","MentionTooltip","PollModal","SendAsMenu","StickerTooltip","RE_LINK","RE_LINK_TEMPLATE","noWebPage","selectNoWebPage","attachmentSettings","selectTheme","webPagePreview","getHtml","isEditing","loadWebPagePreview","clearWebPagePreview","toggleMessageWebPage","updateAttachmentSettings","formattedTextWithLinkRef","isInvertedMedia","detectLinkDebounced","useDebouncedResolver","formattedText","linkEntity","find","entity","url","getLink","useDerivedSignal","link","useSyncEffect","useDerivedState","renderingWebPage","handleClearWebpagePreview","handlePreviewClick","updateIsInvertedMedia","photo","webPageWithoutPhoto","messageStub","webPage","WebPage","inPreview","onContainerClick","MainButtonState","_ref5","storyId","chatBot","REPLIES_USER_ID","selectBot","isChatWithBot","isChatWithUser","isUserId","chatBotFullInfo","selectUserFullInfo","chatFullInfo","selectChatFullInfo","messageWithActualBotKeyboard","selectNewestMessageWithBotKeyboardButtons","scheduledIds","selectScheduledIds","language","shouldSuggestStickers","shouldSuggestCustomEmoji","shouldUpdateStickerSetOrder","settings","byKey","baseEmojiKeywords","emojiKeywords","BASE_EMOJI_KEYWORD_LANG","botKeyboardMessageId","keyboardMessage","currentUser","selectUser","defaultSendAsId","sendAsId","sendAsPeerIds","adminRights","anonymous","sendAsUser","sendAsChat","requestedDraft","selectRequestedDraft","requestedDraftFiles","selectRequestedDraftFiles","tabState","isStoryViewerOpen","storyViewer","currentMessageList","isForCurrentMessageList","user","canSendVoiceByPrivacy","noVoiceMessages","slowMode","editingDraft","selectEditingScheduledDraft","selectEditingDraft","story","selectPeerStory","sentStoryReaction","sentReaction","replyToMessage","replyToTopic","isForum","isForumAsMessages","MAIN_THREAD_ID","selectTopicFromMessage","isInScheduledList","canSendQuickReplies","isContactRequirePremium","areEffectsSupported","SERVICE_NOTIFICATIONS_USER_ID","canPlayEffect","selectPerformanceSettingsValue","shouldPlayEffect","shouldPlayEffectInComposer","effectId","effect","availableEffectById","effectReactions","reactions","availableReactions","topReactions","isOnActiveTab","isBlurred","canScheduleUntilOnline","selectCanScheduleUntilOnline","isChannel","isRightColumnShown","selectIsRightColumnShown","isSelectModeActive","selectIsInSelectMode","withScheduledButton","botKeyboardPlaceholder","keyboardPlaceholder","pollModal","stickersForEmoji","stickers","forEmoji","customEmojiForEmoji","customEmojis","topInlineBotIds","topInlineBots","userIds","contentToBeScheduled","recentEmojis","keywords","inlineBots","byUsername","isInlineBotLoading","isLoading","botCommands","botInfo","commands","botMenuButton","menuButton","attachMenu","attachMenuPeerType","selectChatType","fileSizeLimit","selectCurrentLimit","MAX_UPLOAD_FILEPART_SIZE","captionLimit","isReactionPickerOpen","selectIsReactionPickerOpen","canBuyPremium","selectIsPremiumPurchaseBlocked","canPlayAnimatedEmojis","selectCanPlayAnimatedEmojis","canSendOneTimeMedia","stealthMode","stories","quickReplyMessages","quickReplies","messagesById","dropAreaState","isReady","onDropHide","onFocus","onBlur","inputPlaceholder","editableInputCssSelector","editableInputId","inputId","onForward","sendMessage","clearDraft","showDialog","openPollModal","closePollModal","loadScheduledHistory","openThread","addRecentEmoji","sendInlineBotResult","loadSendAs","resetOpenChatWithDraft","callAttachBot","addRecentCustomEmoji","showAllowedMessageTypesNotification","openStoryReactionPicker","closeReactionPicker","sendStoryReaction","editMessage","saveEffectInDraft","setReactionEffect","hideEffectInComposer","inputRef","storyReactionRef","setHtml","useSignal","isMounted","setIsMounted","getSelectionRange","useGetSelectionRange","lastMessageSendTimeSeconds","prevDropAreaState","windowWidth","windowSize","get","isInMessageList","isInStoryViewer","canShowSendAs","isSymbolMenuForced","forceShowSymbolMenu","cancelForceShowSymbolMenu","sendMessageAction","useSendMessageAction","isInputHasFocus","markInputHasFocus","unmarkInputHasFocus","onAttachMenuOpen","onAttachMenuClose","canMediaBeReplaced","emojiSet","members","groupChatMembers","chatBotCommands","chatEmojiSetId","isSentStoryReactionHeart","emoticon","HEART_REACTION","processMessageInputForCustomEmoji","customEmojiNotificationNumber","requestCalendar","calendar","useSchedule","useTimeout","isChannelWithProfiles","areProfilesShown","isChatSuperGroup","shouldAnimateSendAsButtonRef","prevChatId","prevSendAsPeerIds","hasAttachments","nextText","canSendStickers","canSendGifs","canAttachEmbedLinks","canSendVoices","canSendPlainText","getAllowedAttachmentOptions","isNeedPremium","isSendTextBlocked","hasWebPagePreview","isComposerBlocked","insertHtmlAndUpdateCursor","newHtml","inInputId","selection","getSelection","messageInput","getElementById","rangeCount","selectionRange","getRangeAt","isSelectionInsideInput","insertHtmlInSelection","dispatchEvent","Event","bubbles","requestNextMutation","focusEditableElement","insertFormattedTextAndUpdateCursor","getTextWithEntitiesAsHtml","insertCustomEmojiAndUpdateCursor","emoji","buildCustomEmojiHtml","insertNextText","shouldForceCompression","shouldForceAsFile","handleAppendFiles","onCaptionUpdate","handleClearAttachments","handleSetAttachments","openLimitReachedModal","setShouldForceAsFile","setShouldForceCompression","setShouldSuggestCompression","MEMO_EMPTY_ARRAY","newValue","attachment","getAttachmentMediaType","shouldForce","isSpoiler","newAttachment","shouldSendAsSpoiler","suggestCompression","useAttachmentModal","isBotKeyboardOpen","openBotKeyboard","closeBotKeyboard","isBotCommandMenuOpen","openBotCommandMenu","closeBotCommandMenu","isSymbolMenuOpen","openSymbolMenu","closeSymbolMenu","isSendAsMenuOpen","openSendAsMenu","closeSendAsMenu","isHoverDisabled","disableHover","enableHover","startRecordingVoice","stopRecordingVoice","pauseRecordingVoice","activeVoiceRecording","currentRecordTime","recordButtonRef","mainButtonRef","startRecordTimeRef","isViewOnceEnabled","setIsViewOnceEnabled","toogleViewOnceEnabled","useVoiceRecording","setActiveVoiceRecording","setCurrentRecordTime","IS_SAFARI","IS_VOICE_RECORDING_SUPPORTED","voiceRecording","tickVolume","requestMutation","boxShadow","shouldSendRecordingStatus","useInterval","SEND_MESSAGE_ACTION_INTERVAL","isEditingRef","useStateRef","isAdmin","isChatAdmin","isEmojiTooltipOpen","closeEmojiTooltip","filteredEmojis","filteredCustomEmojis","insertEmoji","useEmojiTooltip","isCustomEmojiTooltipOpen","closeCustomEmojiTooltip","insertCustomEmoji","useCustomEmojiTooltip","isStickerTooltipOpen","closeStickerTooltip","isEnabled","loadStickersForEmoji","clearStickersForEmoji","isManuallyClosed","markManuallyClosed","unmarkManuallyClosed","getSingleEmoji","IS_EMOJI_SUPPORTED","twemojiRegex","cleanHtml","prepareForRegExp","parseEmojiOnlyString","hasStickers","singleEmoji","useStickerTooltip","isMentionTooltipOpen","closeMentionTooltip","insertMention","mentionFilteredUsers","useMentionTooltip","isInlineBotTooltipOpen","botId","inlineBotId","isGallery","isInlineBotTooltipGallery","switchPm","inlineBotSwitchPm","switchWebview","inlineBotSwitchWebview","results","inlineBotResults","closeTooltip","closeInlineBotTooltip","help","inlineBotHelp","loadMore","loadMoreForInlineBot","queryInlineBot","resetInlineBot","resetAllInlineBots","extractBotQueryThrottled","useThrottledResolver","startsWith","getPlainText","parseBotQuery","prevUsername","offset","useInlineBotTooltip","hasQuickReplies","isChatCommandTooltipOpen","close","closeChatCommandTooltip","filteredBotCommands","botTooltipCommands","filteredQuickReplies","quickReplyCommands","setFilteredBotCommands","setFilteredQuickReplies","detectCommandThrottled","trim","getCommand","command","nextFilteredBotCommands","c","newFilteredQuickReplies","quickReply","shortcut","useChatCommandTooltip","saveDraft","loadCustomEmojis","isTouchedRef","isLocalDraft","isLocal","updateDraft","prevState","shouldKeepReply","runDebouncedForSaveDraft","useRunDebounced","DRAFT_DEBOUNCE","useLayoutEffectWithPrevDeps","prevThreadId","prevDraft","isTouched","customEmojiIds","documentId","ids","chatIdRef","threadIdRef","scopedСhatId","scopedThreadId","useBackgroundMode","useBeforeUnload","useDraft","resetComposer","handleEditComplete","handleEditCancel","useEditing","setEditingDraft","openDeleteMessageModal","setShouldForceShowEditing","replyingToId","useEffectWithPrevDeps","prevEditedMessage","prevReplyingToId","EDITABLE_INPUT_CSS_SELECTOR","shouldSetNoWebPage","edited","update","getShouldResetNoWebPageDebounced","restoreNewDraftAfterEditing","hasMessageMedia","messageList","isSchedule","handleBlur","resetComposerRef","stopRecordingVoiceRef","showCustomEmojiPremiumNotification","notificationNumber","payload","shouldReplaceHistory","actionText","initialSection","Number","mainButtonState","Edit","Schedule","Send","Record","Forward","canShowCustomSendMenu","isCustomSendMenuOpen","storyReactionPickerAnchor","handleStoryPickerContextMenu","handleBeforeContextMenu","handleBeforeStoryPickerContextMenu","handleStoryPickerContextMenuHide","peerId","position","handleEmbeddedClear","validateTextLength","isAttachmentModal","maxLength","extraLength","textParams","toString","hasErrorKey","checkSlowMode","nowSeconds","getServerTime","secondsSinceLastMessage","nextSendDateNotReached","nextSendDate","seconds","secondsRemaining","isSlowMode","blur","sendAttachments","attachmentsToSend","sendCompressed","shouldCompress","sendGrouped","shouldSendGrouped","isSilent","scheduledAt","prepareAttachmentsToSend","shouldGroupMessages","isLocalOnly","handleSendAttachmentsFromModal","handleSendAttachments","handleSend","currentAttachments","record","ttlSeconds","ONE_TIME_MEDIA_TTL_SECONDS","handleClickBotMenu","parsedLink","tryParseDeepLink","appName","processDeepLink","handleActivateBotCommandMenu","handleMessageSchedule","args","queryId","restArgs","_ref4","prevContentToBeScheduled","handleCustomEmojiSelect","emojiSetId","stickerSetInfo","isFree","handleCustomEmojiSelectAttachmentModal","handleGifSelect","gif","isScheduleRequested","handleStickerSelect","shouldPreserveInput","canUpdateStickerSetsOrder","isPreloadedGlobally","handleInlineBotSelect","inlineResult","handleBotCommandSelect","handlePollSend","poll","sendSilent","additionalArgs","handleSendAsMenuOpen","insertTextAndUpdateCursorAttachmentModal","removeSymbol","execCommand","tempInput","contentEditable","top","element","lastChild","range","createRange","setStart","setEnd","removeAllRanges","addRange","removeChild","deleteLastCharacterOutsideSelection","removeSymbolAttachmentModal","handleAllScheduledClick","withBotMenuButton","isBotMenuButtonOpen","timedPlaceholderLangKey","timedPlaceholderDate","activeUntil","isComposerHasFocus","isReactionSelectorOpen","placeholderForForumAsMessages","shouldRenderReactionSelector","reactionSelectorTransitonClassNames","areVoiceMessagesNotAllowed","mainButtonHandler","scheduledDefaultDate","setSeconds","setMilliseconds","scheduledMaxDate","setFullYear","getFullYear","sendButtonAriaLabel","handleToggleReaction","reaction","customEmojiMessage","isReaction","handleToggleEffectReaction","handleReactionPickerOpen","sendAsMessage","handleLikeStory","containerId","getStoryKey","handleSendScheduled","handleSendSilent","handleSendWhenOnline","SCHEDULED_WHEN_ONLINE","handleSendScheduledAttachments","handleSendSilentAttachments","handleRemoveEffect","handleStopEffect","onSend","withBotCommands","effectEmoji","DropAreaState","None","withQuick","QuickFile","onHide","ReactionSelector","allAvailableReactions","onToggleReaction","isPrivate","isInSavedMessages","onShowMore","isForMessage","shouldSchedule","forceDarkTheme","onSendSilent","onSendScheduled","onFileAppend","onAttachmentsUpdate","onCustomEmojiSelect","onRemoveSymbol","onEmojiSelect","isQuiz","shouldBeAnonymous","selectedSendAsId","filteredUsers","onInsertUserName","withUsername","self","filterUnits","dy","in","stdDeviation","d","isSavedMessages","onSelectResult","ComposerEmbeddedMessage","WebPagePreview","BotMenuButton","SymbolMenuButton","isMessageComposer","onGifSelect","onStickerSelect","inputCssSelector","idPrefix","MessageInput","customEmojiPrefix","isStoryInput","placeholder","forcedPlaceholder","canAutoFocus","noFocusInterception","shouldSuppressFocus","shouldSuppressTextFormatter","onUpdate","onSuppressedFocus","Spinner","formatVoiceRecordDuration","AttachMenu","BotKeyboardMenu","CustomEmojiTooltip","key","EmojiTooltip","emojis","onMouseDown","ReactionAnimatedEmoji","withEffectOnly","allowDisabledClick","noFastClick","MessageEffect","shouldPlay","onStop","CustomSendMenu","canSchedule","onSendSchedule","onSendWhenOnline","onRemoveEffect","withEffects","hasCurrentEffect","isSavedDialog","isPrivateChat","getPrivateChatUserId","isBot","isUserBot","isSupport","canDeleteForAll","contactName","getUserFirstOrLastName","isBasicGroup","isChatBasicGroup","isSuperGroup","leaveChannel","deleteHistory","deleteSavedHistory","deleteChannel","deleteChatUser","blockUser","chatTitle","getChatTitle","handleDeleteForAll","shouldDeleteForAll","handleDeleteAndStop","userId","handleDeleteChat","isCreator","handleLeaveChat","Modal","header","isText","SVG_EXTENSIONS","observeIntersection","smaller","canAutoLoad","autoLoadFileMaxSizeMb","withDate","datetime","shouldWarnAboutSvg","onMediaClick","setSettingOption","isSvgDialogOpen","openSvgDialog","closeSvgDialog","shouldNotWarnAboutSvg","setShouldNotWarnAboutSvg","timestamp","extension","getDocumentExtension","isIntersecting","useIsIntersecting","wasIntersected","markIntersected","isLoadAllowed","setIsLoadAllowed","shouldDownload","documentHash","getDocumentMediaHash","hasPreview","getDocumentHasPreview","getMediaThumbUri","localBlobUrl","previewData","withMediaViewer","innerMediaType","handleDownload","handleClick","handleSvgConfirm","thumbnailDataUri","actionIcon","isDocumentVideo","ConfirmDialog","confirmHandler","Checkbox","checked","label","onCheck","elementRef","withThumb","noThumb","thumbRef","useCanvasBlur","IS_CANVAS_FILTER_SUPPORTED","shouldSpinnerRender","getColorFromExtension","sizeString","subtitle","getDocumentThumbnailDimensions","TOPIC_ICON_SIZE","REM","threadInfo","selectThreadInfo","onlineCount","selectChatOnlineCount","areMessagesLoaded","selectChatMessages","topic","selectTopic","messagesCount","selectThreadMessagesCount","typingStatus","statusIcon","avatarSize","noAvatar","status","withDots","withFullInfo","withUpdatingStatus","withChatType","noRtl","noStatusOrTyping","withStory","storyViewerOrigin","noEmojiStatus","emojiStatusSize","onEmojiStatusClick","loadFullChat","openMediaViewer","loadMoreProfilePhotos","isTopic","isMin","isRestricted","isPreload","handleAvatarViewerOpen","hasMedia","isAvatarView","mediaIndex","MediaViewerOrigin","ProfileAvatar","MiddleHeaderAvatar","mainUsername","getMainUsername","storyViewerMode","TopicIcon","FullNameTitle","withEmojiStatus","DotAnimation","TypingStatus","Transition","shouldRestoreHeight","activeKey","getChatTypeString","groupStatus","getGroupStatus","onlineStatus","renderStatusOrTyping","outgoingStatus","draftDate","shouldUseDraft","MessageOutgoingStatus","withShare","onRevoke","openChatWithDraft","isOnlyCopy","copyLink","copyTextToClipboard","handleCopyClick","handleShare","PrimaryLinkMenuButton","onTrigger","readOnly","DropdownMenu","trigger","destructive","isProtected","getMessageMediaThumbDataUri","mediaBlobUrl","getMessageMediaHash","hasSpoiler","getMessageIsSpoiler","isSpoilerShown","hideSpoiler","getMessageHtmlId","decoding","stopEvent","MediaSpoiler","isVisible","isGif","withAnimation","rect","currentTarget","clientY","shiftX","shiftY","Keys","DEFAULT_TEXT","description","isPasswordVisible","hint","submitLabel","shouldShowSubmit","shouldResetValue","shouldDisablePasswordManager","noRipple","clearError","onChangePasswordVisibility","onInputChange","onSubmit","password","setPassword","canSubmit","setCanSubmit","focusDelayTimeoutMs","select","event","autoComplete","tabIndex","onChange","MIN_PASSWORD_LENGTH","role","leftText","rightText","floatingBadgeText","floatingBadgeIcon","floatingBadgeRef","parentContainerRef","setShiftX","tailPosition","setTailPosition","updateBadgePosition","badgeWidth","offsetWidth","parentWidth","minShift","maxShift","currentShift","safeShift","newTailPosition","useResizeObserver","hasFloatingBadge","isProgressFull","forceShowSelf","isSynced","userStatus","selectUserStatus","isSelf","customPeer","noFake","noVerified","adminMember","iconElement","rightElement","loadFullUser","customTitle","isOwner","subtitleKey","translatedStatus","getUserStatus","mainUserNameClassName","isUserOnline","RippleEffect","canPlayVideo","videoRef","isDeleted","isDeletedUser","isRepliesChat","isChatWithRepliesBot","isAnonymousForwards","isAnonymousForwardsChat","canHaveMedia","isVideo","avatarHash","avatarPhotoId","getChatAvatarHash","previewHash","getPhotoMediaHash","photoHash","getProfilePhotoMediaHash","photoBlobUrl","videoHash","getVideoProfilePhotoMediaHash","fullMediaData","isVideoReady","markVideoReady","isFullMediaReady","isBlurredThumb","blurredThumbCanvasRef","currentTime","specialIcon","OptimizedVideo","canPlay","muted","disablePictureInPicture","loop","playsInline","onReady","userFullName","getUserFullName","getFirstLetters","profilePhotos","selectPeerPhotos","avatarOwnerId","mediaViewer","currentTopicId","emojiStatus","emojiStatusSticker","openPremiumModal","openStickerSet","openPrivacySettingsNoticeModal","photos","prevMediaIndex","prevAvatarOwnerId","hasSlideAnimation","setHasSlideAnimation","slideAnimation","currentPhotoIndex","setCurrentPhotoIndex","isFirst","isLast","currentIndex","mediaHash","mediaLoader","usePhotosPreload","handleProfilePhotoClick","SettingsAvatar","handleStatusClick","fromUserId","selectPreviousMedia","selectNextMedia","handleOpenGetReadDateModal","isReadDate","selectorToPreventScroll","onSwipe","direction","SwipeDirection","Right","Left","letterClassName","noLoopLimit","totalPhotosLength","count","enumerator","activeDashIndex","MAX_PHOTO_DASH_COUNT","_","renderPhotoTabs","personalPhoto","fallbackPhoto","renderPhoto","canCopyTitle","isReadDateRestrictedByMe","membersCount","renderStatus","ProfilePhoto","withIconHeart","isCustom","availableReaction","available","isSameReaction","staticIconId","staticIcon","shouldApplySizeFix","shouldReplaceWithHeartIcon","observeIntersectionForPlaying","blankUrl","subject","reportMessages","reportPeer","reportProfilePhoto","reportStory","exitMessageSelectMode","selectedReason","setSelectedReason","setDescription","handleReport","reason","handleSelectReason","handleDescriptionChange","REPORT_OPTIONS","onEnter","RadioGroup","options","selected","InputText","iconEmojiId","loopLimit","TopicDefaultIcon","iconColor","topicId","typingUser","typingUserName","onMessageClick","linkData","getMessageWebPage","getFirstLinkInMessage","domain","siteName","formattedDescription","getMessageText","renderMessageSummary","displayUrl","truncatedDescription","trimText","safeLinkContent","Media","SafeLink","NBSP","EmbeddedMessage","forwardSender","noUserColors","chatTranslations","requestedChatTranslationLanguage","observeIntersectionForLoading","containedMedia","replyMedia","mediaThumbnail","useThumbnail","isRoundVideo","getMessageRoundVideo","isQuote","replyForwardInfo","replyFrom","shouldTranslate","isMessageTranslatable","translatedText","useMessageTranslation","getSenderTitle","senderChatTitle","forwardSenderTitle","areSendersSame","handleMouseDown","useFastClick","blobUrl","getPictogramDimensions","srcUrl","renderPictogram","backgroundEmojiId","EmojiIconBackground","emojiDocumentId","renderTextWithEntities","noLineBreaks","emojiSize","isActionMessage","ActionMessage","isEmbedded","MessageSummary","noEmoji","getMediaContentTypeDescription","CONTENT_NOT_SUPPORTED","renderMediaContentType","isChatGroup","isReplyToQuote","renderSender","freezeWhenClosed","ICON_POSITIONS","inline","block","opacity","EMOJI_SIZE","containerRef","emojiImage","setEmojiImage","dpr","useDevicePixelRatio","customEmoji","useCustomEmoji","previewMediaHash","customColor","useDynamicColorListener","preloadAfterHeavyAnimation","useThrottleForHeavyAnimation","preloadImage","then","updateCanvas","clearRect","save","translate","drawImage","restore","tintColor","isLottie","globalCompositeOperation","fillRect","updateCanvasAfterHeavyAnimation","updateCanvasSize","parentHeight","handleResize","entry","contentRect","container","getBoostProgressInfo","boostInfo","freezeOnLevelUp","level","boosts","currentLevelBoosts","nextLevelBoosts","hasMyBoost","prepaidGiveaways","isJustUpgraded","currentLevel","hasNextLevel","levelProgress","remainingBoosts","isMaxLevel","formatUsername","asAbsoluteLink","TME_LINK_PREFIX","renderMessageText","highlight","isSimple","truncateLength","forcePlayback","shouldRenderAsHtml","isForMediaViewer","contentNotSupportedText","messageKey","getMessageKey","TRUNCATED_SUMMARY_LENGTH","hasSpoilers","Spoiler","hasCustomEmoji","getMessageSummaryText","getMessageSummaryEmoji","emojiWithSpace","getMessageSummaryDescription","isArray","VERIFIED_PRIORITY_BASE","PINNED_PRIORITY_BASE","sortChatIds","chatIds","shouldPrioritizeVerified","priorityIds","orderBy","Infinity","priority","lastMessage","selectChatLastMessage","isVerified","ITEM_CLASS_NAME","categories","itemIds","categoryPlaceholderKey","filterValue","filterPlaceholder","notFoundText","searchInputId","itemClassName","noScrollRestore","isSearchable","lockedUnselectedSubtitle","isViewOnly","itemInputType","withStatus","withPeerTypes","withDefaultPadding","onFilterChange","onDisabledClick","onLoadMore","optionalProps","allowMultiple","lockedSelectedIds","lockedUnselectedIds","selectedCategories","selectedCategory","selectedIds","selectedId","shouldMinimize","lockedSelectedIdsSet","lockedUnselectedIdsSet","unlockedSelectedIds","categoriesByType","buildCollectionByKey","sortedItemIds","lockedSelectedBucket","unlockedBucket","lockedUnselectableBucket","handleItemClick","categoryType","newSelectedCategories","splice","onSelectedCategoriesChange","newSelectedIds","onSelectedIdsChange","onSelectedCategoryChange","onSelectedIdChange","handleFilterChange","viewportIds","getMore","useInfiniteScroll","renderItem","isCategory","category","peerOrCategory","isApiPeerChat","isAlwaysUnselected","isAlwaysSelected","isLocked","isChecked","subtitleClassName","langKey","getPeerTypeKey","getSubtitle","PickerItem","avatarElement","inactive","inputElement","Radio","onlyInput","inputPosition","beforeChildren","pickerCategoryTitle","PickerSelectedItem","clickArg","canClose","isMinimized","InfiniteScroll","pickerList","padded","itemSelector","Loading","noResults","titleClassName","isClickable","fluid","withPeerColors","titleText","titleKey","isAvatarSquare","DAY_MINUTES","WEEK_MINUTES","getWeekStart","setHours","day","getDay","diff","getDate","setDate","getTime","shiftTimeRanges","ranges","shift","shiftedRanges","startMinute","endMinute","sort","a","b","last","DAYS","businessHours","transitionRef","isExpanded","expand","collapse","isMyTime","showInMyTime","showInLocalTime","timezoneSignal","useSelectorSignal","timezones","timezoneMinuteDifference","timezone","timezoneId","getTimezoneOffset","utcOffset","workHours","weekStart","days","dayStart","dayEnd","splitDays","segments","formatTime","isBusinessOpen","localTimeHours","minutesSinceWeekStart","currentDay","handleTriggerOffset","slide","ACTIVE_SLIDE_CLASS_NAME","offsetHeight","handleAnimationStart","TO_SLIDE_CLASS_NAME","ListItem","iconClassName","multiline","isStatic","narrow","withColorTransition","onStart","formatWeekday","segment","EFFECT_EMOJIS","birthdayNumbers","animatedEmojiEffects","isPremiumPurchaseBlocked","birthday","isInSettings","openPremiumGiftModal","requestConfetti","animationPlayedRef","isPlayingAnimation","playAnimation","stopAnimation","formattedDate","isToday","age","today","year","setMonth","month","formatDateToString","code","getMonth","getAge","numbersForAge","numbers","endsWith","byEmoji","split","digit","effectSticker","randomEffect","random","hash","effectHash","column","valueKey","canGiftPremium","isPremium","handleOpenPremiumGiftModal","forUserIds","secondaryIcon","secondaryIconClassName","onSecondaryIconClick","IS_OFFSET_PATH_SUPPORTED","index","StickerView","forceAlways","shouldLoop","birthdate","m","DEFAULT_MAP_CONFIG","zoom","runDebounced","debounce","chatOrUserId","countryList","phoneCodes","phoneCodeList","isMuted","selectIsChatMuted","selectNotifySettings","selectNotifyExceptions","userFullInfo","chatInviteLink","inviteLink","bio","about","canInviteUsers","isUserRightBanned","getHasAdminRight","topicLink","selectTopicLink","hasSavedMessages","listIds","saved","personalChannel","personalChannelId","hasMainMiniApp","updateChatMutedState","updateTopicMutedState","loadPeerStories","openSavedDialog","openMapModal","requestCollectibleInfo","requestMainWebView","usernames","phoneNumber","chatUsernames","businessLocation","businessWorkHours","personalChannelMessageId","areNotificationsEnabled","setAreNotificationsEnabled","prevPeerId","locationMediaHash","geo","buildStaticMapHash","locationBlobUrl","locationRightComponent","Skeleton","isTopicInfo","shouldRenderAllLinks","activeUsernames","u","activeChatUsernames","getChatLink","handleClickLocation","address","geoPoint","handleNotificationChange","newAreNotificationsEnabled","handleOpenSavedDialog","copy","formattedNumber","formatPhoneNumberWithCode","handlePhoneClick","FRAGMENT_PHONE_LENGTH","FRAGMENT_PHONE_CODE","collectible","handleUsernameClick","isChat","isEditable","handleOpenApp","extractCurrentThemeParams","shouldMarkBotTrusted","appTermsInfo","terms","withNodes","Chat","orderDiff","animationType","ChatAnimationTypes","isPreview","previewMessageId","renderUsernames","allowSelection","UserBirthday","Switcher","BusinessHours","usernameList","otherUsernames","usernameLinks","s","particleSize","onEnded","stickerHash","getStickerHashById","previewMediaData","paths","generateRandomDropPath","path","withSharedAnimation","onAnimationEnd","ICON_SIZE","EFFECT_SIZE","MIN_PARTICLE_SIZE","genericEmojiEffects","activeReactions","genericEffects","effectSize","shouldPause","stopActiveReaction","r","centerIconId","centerIcon","assignedEffectId","aroundAnimation","assignedId","mediaHashCenterIcon","mediaHashEffect","mediaDataCenterIcon","mediaDataEffect","activeReaction","active","shouldPlayCenter","shouldRenderEffect","animationClassNames","shouldRenderCenter","centerAnimationClassNames","handleEnded","isAnimationLoaded","markAnimationLoaded","unmarkAnimationLoaded","shouldShowStatic","shouldRenderStatic","staticClassNames","rootClassName","animating","ReactionStaticEmoji","noPlay","noVideoOnMobile","AnimatedSticker","animatedIcon","roundToNearestEven","play","CustomEmojiEffect","ChatFolderModal","MuteChatModal","lastMessageId","selectChatLastMessageId","senderId","isOutgoing","actualSenderId","fromId","replyToMessageId","getMessageReplyInfo","lastMessageSender","lastMessageAction","getMessageAction","actionTargetMessage","targetUserIds","actionTargetUserIds","targetChatId","actionTargetChatId","privateChatUserId","currentChatId","currentThreadId","isSelectedForum","forumPanelChatId","lastMessageTopic","selectThreadParam","topicsInfo","selectTopicsInfo","isForumPanelOpen","selectIsForumPanelOpen","canScrollDown","canChangeFolder","chatFolders","orderedIds","lastMessageOutgoingStatus","selectOutgoingStatus","withInterfaceAnimations","listedTopicIds","topics","topicsById","folderId","isPinned","offsetTop","onDragEnter","openChat","toggleChatInfo","focusLastMessage","loadTopics","openForumPanel","closeForumPanel","setShouldCloseRightColumn","isDeleteModalOpen","openDeleteModal","closeDeleteModal","isMuteModalOpen","openMuteModal","closeMuteModal","isChatFolderModalOpen","openChatFolderModal","closeChatFolderModal","isReportModalOpen","openReportModal","closeReportModal","shouldRenderDeleteModal","markRenderDeleteModal","unmarkRenderDeleteModal","shouldRenderMuteModal","markRenderMuteModal","unmarkRenderMuteModal","shouldRenderChatFolderModal","markRenderChatFolderModal","unmarkRenderChatFolderModal","shouldRenderReportModal","markRenderReportModal","unmarkRenderReportModal","useEnsureMessage","renderSubtitle","useChatListEntry","getIsForumPanelClosed","selectIsForumPanelClosed","forceOnHeavyAnimation","force","handleDragEnter","handleDelete","handleMute","handleChatFolderChange","contextActions","useChatContextActions","isOnline","hasShownClass","isAvatarOnlineShown","IS_OPEN_IN_NEW_TAB_SUPPORTED","createLocationHash","chatClassName","withPortalForMenu","withStoryGap","StoryViewerOrigin","ChatList","ChatBadge","shouldShowOnlyMostImportant","forceHidden","ChatCallStatus","LastMessageMeta","DeleteChatModal","ReportModal","wasTopicOpened","unreadMentionsCount","unreadReactionsCount","isTopicUnopened","topicsWithUnread","unreadCount","shouldBeMuted","hasUnmutedUnreadTopics","hasUnreadMark","isSignal","isUnread","ShowTransition","unreadReactionsElement","unreadMentionsElement","unopenedTopicElement","unreadCountElement","AnimatedCounter","formatIntegerCompact","pinnedElement","renderContent","archiveSettings","updateArchiveSettings","orderedChatIds","useFolderManagerForOrderedIds","ARCHIVED_FOLDER_ID","unreadCounters","useFolderManagerForUnreadCounters","archiveUnreadCount","chatsCount","previewItems","arr","unread","actionMinimize","handler","actionExpand","actionHide","isHidden","compact","minimized","buttonClassName","info","Badge","avatarWrapper","chatsPreview","folderType","chatFolder","selectChatFolder","animatedEmoji","selectAnimatedEmoji","foldersDispatch","onSettingsScreenSelect","handleEditFolder","SettingsScreens","FoldersEditFolderFromChatList","AnimatedIconFromSticker","pill","sessions","onHeightChange","changeSessionSettings","terminateAuthorization","borderBoxSize","blockSize","firstUnconfirmed","dateCreated","session","isUnconfirmed","locationString","deviceModel","region","country","handleAccept","isConfirmed","handleReject","RESERVED_HOTKEYS","canDisplayArchive","onLeftColumnContentChange","openNextChat","shouldIgnoreDragRef","unconfirmedSessionHeight","setUnconfirmedSessionHeight","isArchived","isAllFolder","isSaved","resolvedFolderId","ALL_FOLDER_ID","SAVED_FOLDER_ID","shouldDisplayArchive","usePeerStoriesPolling","chatsHeight","CHAT_HEIGHT_PX","archiveHeight","ARCHIVE_MINIMIZED_HEIGHT","orderDiffById","getAnimationType","useOrderDiff","CHAT_LIST_SLICE","shouldShowUnconfirmedSessions","sessionsArray","isCurrent","FRESH_AUTH_PERIOD","useHotkeys","targetIndexDelta","IS_APP","handleKeyDown","IS_MAC_OS","metaKey","ctrlKey","isArchiveInList","LeftColumnContent","Archived","observe","useIntersectionObserver","rootRef","throttleMs","handleArchivedClick","handleArchivedDragEnter","useDebouncedCallback","handleDragLeave","preloadBackwards","withAbsolutePositioning","maxHeight","onDragLeave","UnconfirmedSession","Archive","viewportOffset","pinnedCount","getPinnedChatsCount","teactOrderKey","getOrderKey","renderChats","EmptyFolder","canManageTopics","openCreateTopicPanel","handleCreateTopic","centered","buttonText","lastReadInboxMessageId","selectTopics","canDelete","selectCanDeleteTopic","deleteTopic","setViewForumAsMessages","isClosed","handleOpenDeleteModal","handleOpenTopic","wasOpened","editTopic","toggleTopicPinned","markTopicRead","openChatInNewTab","canToggleClosed","getCanManageTopic","canTogglePinned","actionOpenInNewTab","actionUnreadMark","actionPin","actionMute","actionCloseTopic","actionDelete","useTopicContextActions","confirmIsDestructive","confirmLabel","onTopicSearch","onOpenAnimationStart","openChatWithInfo","scrollTopHandlerRef","isScrolled","setIsScrolled","handleClose","handleToggleChatInfo","useOnIntersect","getOrderedTopics","orderedPinnedTopicIds","totalCount","TOPICS_SLICE","shouldRenderRef","prevIsVisible","useHistoryBack","onBack","endHeavyAnimation","beginHeavyAnimation","waitForTransitionEnd","transform","onTransitionEnd","GroupChatInfo","HeaderActions","canExpandActions","isForForum","GroupCallTopPane","TOPIC_HEIGHT_PX","sensitiveArea","TOPIC_LIST_SENSITIVE_AREA","Topic","renderTopics","GENERAL_TOPIC_ID","EmptyForum","useChatAnimationType","orderDiffs","numberOfUp","numberOfDown","Opacity","Move","NO_CORNER_THRESHOLD","renderLastMessage","lastMessageRef","mainColumnRef","lastActiveTopic","otherTopics","isReversedCorner","setIsReversedCorner","overwrittenWidth","setOverwrittenWidth","handleOpenTopicClick","handleOpenTopicMouseDown","getIsMobile","lastMessageElement","mainColumnElement","lastMessageWidth","mainColumnWidth","abs","ANIMATION_DURATION","isAction","mediaHasPreview","getMessageSticker","actionTargetUsers","renderLastMessageOrTyping","isDraftReplyToTopic","isEmptyLocalReply","withTranslucentThumbs","isExpiredMessage","getExpiredMessageDescription","renderActionMessageText","senderName","getMessageSenderName","messageSummary","inChatList","renderSummary","ANIMATION_END_DELAY","ChatForumLastMessage","useLeftHeaderButtonRtlForumTransition","shouldHideSearch","shouldDisableDropdownMenuTransitionRef","prevShouldHideSearch","handleDropdownMenuTransitionEnd","orderById","prevOrderById","mapValues","order","getSenderName","useLocalStorage","initValue","eventName","getStoredValue","localStorage","getItem","JSON","parse","writeValue","stringifiedValue","stringify","setItem","restoreValue","storedValue","state","setState","listenStorageChange","workspaceId","setActiveChatFolder","chatFoldersById","orderedFolderIds","folders","workspaceName","setWorkspaceName","selectedFolderIds","setSelectedFolderIds","savedWorkspaces","setSavedWorkspaces","setCurrentWorkspaceId","currentWorkspaceId","useStorage","workspace","w","foldersIds","isFormValid","handleSubmit","trimmedName","newWorkspace","activeChatFolder","handleNameChange","handleFolderSelect","prevIds","handleDeleteWorkspace","required","folder","workspaceSettingsElement","workspaceSettingsRoot","createRoot","render","WorkspaceSettingsPage","uploadProfilePhoto","cropModalBlob","setCropModalBlob","isVideoModalOpen","openVideoModal","closeVideoModal","suggestedPhotoUrl","suggestedVideoUrl","showAvatarNotification","screen","Main","handleSetSuggestedAvatar","handleCloseCropModal","handleSetVideo","fetchBlob","videoTs","videoSizes","videoStartTs","SuggestedAvatar","loopIndefinitely","withVideo","CropModal","textParts","SimilarChannel","channel","fallbackColor","setColor","imgBlobUrl","averageColor","getAverageColor","rgb2hex","useAverageColor","MoreChannels","channelsCount","profileTab","forceScrollProfileTab","similarChannelIds","shouldShowInChat","selectSimilarChannelIds","toggleChannelRecommendations","loadChannelRecommendations","isShowing","markShowing","markNotShowing","isHiding","markHiding","markNotHiding","similarChannels","shoulRenderSkeleton","setShoulRenderSkeleton","firstSimilarChannels","areSimilarChannelsPresent","useHorizontalScroll","shouldRenderChannels","handleToggle","xmlns","SHOW_CHANNELS_NUMBER","targetMessageId","targetMessage","isFocused","selectIsMessageFocused","focusDirection","noHighlight","noFocusHighlight","focusedMessage","senderUser","targetChat","giftDuration","months","premiumGiftSticker","selectGiftStickerForDuration","starCount","stars","starGiftSticker","selectGiftStickerForStars","appearanceOrder","isJustAdded","isLastInList","isInsideTopic","memoFirstUnreadIdRef","observeIntersectionForReading","onIntersectPinnedMessage","checkGiftCode","getReceipt","openStarsTransactionFromGift","openPrizeStarsTransactionFromGiveaway","useFocusMessage","useUnmountCleanup","viewportPinnedIdsToRemove","noAppearanceAnimation","markShown","isPremiumGift","isGiftCode","isSuggestedAvatar","isJoinedMessage","isJoinedChannelMessage","isStarsGift","isPrizeStars","shouldShowConfettiRef","withStars","targetUsers","isContextMenuShown","handlePrizeStarsClick","handleGiftCodeClick","slug","preventMessageInputBlur","handlePremiumGiftClick","isGift","toUserId","monthsAmount","isFromGiveaway","isGiveaway","isUnclaimed","renderGiftCode","handleStarGiftClick","formatInteger","renderPrizeStars","ActionMessageSuggestedAvatar","SimilarChannels","ContextMenuContainer","HeaderMenuContainer","selectLanguageCode","translationLanguage","selectTranslationLanguage","doNotTranslate","noMenu","fullInfo","isMainThread","isDiscussionThread","getIsSavedDialog","isUserBlocked","selectIsUserBlocked","canRestartBot","canStartBot","selectIsChatBotNotStarted","canUnblock","canSubscribe","isNotJoined","canSearch","canCall","ARE_CALLS_SUPPORTED","canMute","canLeave","canEnterVoiceChat","canCreateVoiceChat","manageCall","canViewStatistics","canViewMonetization","canViewBoosts","canShowBoostModal","pendingJoinRequests","requestsPending","shouldJoinToSend","isJoinToSend","shouldSendJoinRequest","isJoinRequest","noAnimation","isTranslating","selectRequestedChatTranslationLanguage","canTranslate","selectCanTranslateChat","isTranslationDisabled","detectedChatLanguage","detectedLanguage","joinChannel","sendBotCommand","openMiddleSearch","restartBot","requestMasterAndRequestCall","requestNextManagementScreen","requestChatTranslation","togglePeerTranslations","openChatLanguageModal","unblockUser","menuButtonRef","setIsMenuOpen","menuAnchor","setMenuAnchor","handleHeaderMenuOpen","right","bottom","handleHeaderMenuClose","handleHeaderMenuHide","handleSubscribeClick","handleStartBot","handleRestartBot","handleUnblock","handleTranslateClick","toLanguageCode","handleJoinRequestsClick","ManagementScreens","JoinRequests","handleSearchClick","setFocusInSearchInput","handleAsMessagesClick","handleRequestCall","handleHotkeySearchClick","shiftKey","getTextWithLanguage","langCode","translationKey","toUpperCase","translatedName","Intl","DisplayNames","of","doNotTranslateText","handleHide","handleChangeLanguage","handleDoNotTranslate","MoreMenuButton","withExtraActions","onJoinRequestsClick","withForumActions","onSubscribeChannel","onSearchClick","onAsMessagesClick","searchInput","COLOR_REPLACE_PATTERN","isTouchScreen","Text","iconSvg","mediaDataWithReplacedColors","doc","strokeWidth","outerHTML","isInSideMenu","canShowNew","toggleAttachBot","icons","openMenu","closeMenu","menuPosition","setMenuPosition","isFromSideMenu","handleCloseMenu","handleCloseAnimationEnd","handleRemoveBot","AttachBotIcon","shortName","isDisclaimerNeeded","withPortal","CustomSend","isQuick","isGeneric","isHovered","markHovered","unmarkHovered","onDrop","relatedTarget","toTarget","hideTimeoutRef","prevWithQuick","handleFilesDrop","dataTransfer","dt","folderFiles","handleQuickFilesDrop","fromTarget","shouldRenderQuick","Portal","onDragOver","handleDragOver","DropTarget","AbsoluteVideo","constructor","videoUrl","_defineProperty","this","load","recalculatePositionAndSize","paused","safePlay","destroy","updatePosition","SIZE","TextFormatter","SCROLLER_CLASS","TEXT_FORMATTER_SAFE_AREA_PX","IGNORE_KEYS","messageSendKeyCombo","isAttachmentModalInput","onScroll","editLastMessage","replyToNextMessage","selectionTimeoutRef","cloneRef","scrollerCloneRef","sharedCanvasRef","sharedCanvasHqRef","absoluteContainerRef","isContextMenuOpenRef","isTextFormatterOpen","openTextFormatter","closeTextFormatter","textFormatterAnchorPosition","setTextFormatterAnchorPosition","selectedRange","setSelectedRange","isTextFormatterDisabled","setIsTextFormatterDisabled","isMobileDevice","IS_ANDROID","shouldDisplayTimer","setShouldDisplayTimer","handleTimerEnd","prefixId","colorFilter","useColorFilter","playersById","Map","clearPlayers","player","delete","synchronizeElements","playerIdsToClear","uniqueId","playerId","mediaUrl","getCustomEmojiMediaDataForInput","canvasBounds","elementBounds","isHq","selectIsAlwaysHighPriorityEmoji","renderId","viewId","textColor","shouldUseTextColor","hexToRgb","lottie","ensureRLottie","coords","isLowPriority","g","removeView","setSharedCanvasCoords","absoluteVideo","Error","createPlayer","animation","set","addCustomEmojiInputRenderCallback","activePlayersById","prevCustomColor","throttledSynchronizeElements","useThrottledCallback","prevDpr","freezeAnimation","unfreezeAnimation","unfreezeAnimationOnRaf","useInputCustomEmojis","maxInputHeight","updateInputHeight","willSend","requestForcedReflow","scroller","currentHeight","clone","scrollHeight","newHeight","isOverflown","exec","transitionDuration","log","toggle","htmlRef","focusInput","getIsHeavyAnimating","handleCloseTextFormatter","empty","clearSelection","checkSelection","selectedText","START_TO_END","processSelection","selectionRect","scrollerRect","processSelectionWithTimeout","handleOpenPremiumModal","handleDocumentKeyDown","getIsDirectTextInputDisabled","isSelectionCollapsed","isCollapsed","isContentEditable","newEvent","KeyboardEvent","captureFirstTab","captureKeyboardListeners","onTab","suppressFocus","inputScrollerContentClass","onKeyDown","isComposing","altKey","once","handleCloseContextMenu","e2","onTouchCancel","TextTimer","endsAt","onEnd","anchorPosition","SymbolMenu","setStickerSearchQuery","setGifSearchQuery","triggerRef","isSymbolMenuLoaded","onSymbolMenuLoadingComplete","setContextMenuAnchor","symbolMenuButtonClassName","handleActivateSymbolMenu","triggerEl","handleSearchOpen","handleSymbolMenuOpen","EDITABLE_INPUT_MODAL_CSS_SELECTOR","getLayout","onSearchOpen","MAX_QUICK_IMG_SIZE","MAX_THUMB_IMG_SIZE","MAX_ASPECT_RATIO","FILE_EXT_REGEX","filename","createObjectURL","mimeType","quick","shouldSendAsFile","img","validateAspectRatio","shouldShrink","GIF_MIME_TYPE","compressedBlobUrl","resizedUrl","scaleImage","revokeObjectURL","videoWidth","videoHeight","preloadVideo","createPosterForVideo","coverUrl","fetchFromUrl","selectCover","metadata","common","artist","picture","format","cover","coverBlob","parseAudioMetadata","shouldSendCompressed","attach","dataTransferItems","traverseFileTreePromise","itemFile","getAsFile","isDirectory","createReader","readEntries","entries","entriesPromises","kind","webkitGetAsEntry","RE_BR","RE_SPACE","RE_CLEAN_HTML","RE_EXTRA_NEW_LINE","replaceWithTeact","STARS_ICON_PLACEHOLDER","MAX_NESTING_PARENTS","commonAncestorContainer","parentNode","iterations","parentElement","THROTTLE","RE_ENDS_ON_EMOJI","RE_ENDS_ON_EMOJI_IMG","loadCustomEmojiForEmoji","clearCustomEmojiForEmoji","extractLastEmojiThrottled","collapsed","htmlBeforeSelection","getHtmlBeforeSelection","getLastEmoji","hasCustomEmojis","lastEmoji","regexText","regex","repeat","htmlAfterSelection","emojiDataPromise","emojiRawData","emojiData","RE_EMOJI_SEARCH","RE_LOWERCASE_TEST","EMOJIS_LIMIT","FILTER_MIN_LENGTH","prepareRecentEmojisMemo","recentEmojiIds","pickTruthy","prepareLibraryMemo","byNative","baseEmojisByKeyword","natives","emojisByKeyword","byKeyword","byName","names","maxKeyLength","keyword","searchInLibraryMemo","library","matched","matchedKeywords","flat","matchedNames","unique","setById","setFilteredEmojis","setFilteredCustomEmojis","uncompressEmoji","ensureEmojiData","detectEmojiCodeThrottled","getEmojiCode","updateFiltered","nativeEmojis","native","uniqueByField","selectCustomEmojiForEmojis","isForce","atIndex","lastIndexOf","emojiHtml","emojiCode","newShouldAutoInsert","test","RE_USERNAME_SEARCH","setFilteredUsers","extractUsernameTagThrottled","getUsernameTag","getWithInlineBots","usernameTag","memberIds","member","filteredIds","filterUsersByName","forceFocus","userFirstOrLastName","htmlToInsert","fixedHtmlBeforeSelection","cleanWebkitNewLines","shiftCaretPosition","substr","caretPosition","getCaretPosition","newCaretPosition","setCaretPosition","isConnected","openStoryViewer","loadPeerStoriesByIds","isExpired","imageHash","getStoryMediaHash","blurredBackgroundRef","storyIds","isSinglePeer","isSingleStory","MediaAreaOverlay","isMirrored","anchorRef","canLoad","startPlaying","stopPlaying","isPositionUpdateRequired","requirePositionUpdate","resetPositionUpdate","effectAnimationId","effectStickerId","getEffectHash","effectBlob","useOverlayPosition","overlayRef","isForMessageEffect","effectClassName","messageText","isInSelectMode","forcedWidth","dimensions","asForwarded","shouldAffectAppendix","isInWebPage","isPaidPreview","mediaType","withBlurredBackground","useBlurredMediaThumbRef","useMediaTransition","showSpoiler","wasLoadDisabled","spinnerRef","useShowTransition","noMountTransition","withShouldRender","downloadButtonRef","shouldRenderDownloadButton","isAllowed","prevShouldAffectAppendix","MESSAGE_CONTENT_SELECTOR","CUSTOM_APPENDIX_ATTRIBUTE","contentEl","getCustomAppendixBg","appendixBg","isSmall","calculateMediaDimensions","componentClassName","MIN_MEDIA_HEIGHT","dimensionsStyle","PROGRESS_CENTER","ROUND_VIDEO_DIMENSIONS_PX","PROGRESS_CIRCUMFERENCE","PI","stopPrevious","playerRef","circleRef","getVideoMediaHash","isPlayerReady","markPlayerReady","shouldRenderSpoiler","getProgress","setProgress","getThrottledProgress","useThrottledSignal","playerEl","strokeDashOffset","capturePlaying","togglePlaying","stopCurrentAudio","handleTimeUpdate","isPriority","onTimeUpdate","cx","cy","canAutoPlay","isIntersectingForLoading","isIntersectingForPlaying","wasIntersectedRef","isPlayAllowed","setIsPlayAllowed","fullMediaHash","isFullMediaPreloaded","hasThumb","isPreviewPreloaded","canLoadPreview","previewRef","isInline","isUnsupported","useUnsupportedMedia","playButtonRef","setPlayProgress","isFinite","calculateExtendedPreviewDimensions","calculateVideoDimensions","isFromSpinner","handleClickOnSpinner","onAudioPlay","onCancelMediaTransfer","openTelegramLink","stickersRef","handleMediaClick","handleContainerClick","handleQuickButtonClick","useEnsureStory","hasCustomColor","isWithTextColor","documents","isStory","quickButtonLangKey","getWebpageButtonText","isArticle","isSquarePhoto","isMediaInteractive","BaseStory","Photo","Video","Audio","Document","isEmoji","isRectangular","SELECTED_APPENDIX_COLORS","dark","outgoing","incoming","light","requestMediaWorker","MAX_WORKERS","SMALL_IMAGE_THRESHOLD","MIN_MESSAGE_LENGTH_FOR_BLUR","MIN_MEDIA_WIDTH_WITH_TEXT","MIN_MEDIA_WIDTH","getMinMediaWidth","hasCommentButton","isPhoto","isWebPagePhoto","isWebPageVideo","calculateInlineImageDimensions","minMediaWidth","stretchFactor","finalWidth","finalHeight","RADIUS","lastWorkerIndex","thumbData","workerIndex","cycleRestrict","offscreenRef","transferControlToOffscreen","transferables","useOffscreenCanvasBlur","BOTTOM_FOCUS_OFFSET","RELOCATED_FOCUS_OFFSET","SCROLL_MAX_DISTANCE","FOCUS_MARGIN","isResizingContainer","scrollTargetPosition","isRelocatedRef","isRelocated","messagesContainer","isToBottom","scrollPosition","animateScroll","firstQuote","addExtraClass","PENDING_TRANSLATIONS","requestedLanguageCode","messageTranslation","byLangCode","isPending","languageTranslations","markMessagesTranslationPending","throttledProcessPending","addPendingTranslation","throttle","translateMessages","hasUnprocessed","messageIdsToTranslate","oldMessageIds","newMessageIds","removePendingTranslations","OFFSET_X","anchorRect","elementRect","innerWidth","anchorCenterY","anchorBottomY","passive","REACTION_SIZE","chosen","noAppearAnimation","mediaAppearData","appearAnimation","selectAnimation","staticIconData","isFirstPlay","unmarkIsFirstPlay","activate","deactivate","cn","createClassNameBuilder","defaultTagReactions","enabledReactions","currentReactions","reactionsLimit","isForEffects","areReactionsLocked","shouldUseCurrentReactions","allowed","filteredReactions","isCustomReaction","isInactive","canSendReaction","sortReactions","reactionsToRender","REACTIONS_AMOUNT","withMoreButton","userReactionIndexes","chosenReactions","chosenOrder","findIndex","handleShowMoreClick","bound","hintText","parts","isPrimary","ReactionSelectorReaction","getReactionKey","ReactionSelectorCustomReaction","submitText","initialValue","setText","handleTextChange","isSlim","teactExperimentControlled","tag","isChosen","chosenClassName","withCount","withContextMenu","onRemove","editSavedReactionTag","menuRef","isRenamePromptOpen","openRenamePrompt","closeRenamePrompt","handleRemoveClick","handleRenameTag","newTitle","shouldAvoidNegativePosition","own","tagText","tail","tailFill","PromptDialog","useAsyncRendering","dependencies","delay","timeoutRef","CHANNEL_OVERVIEW","isPercentage","GROUP_OVERVIEW","MESSAGE_OVERVIEW","isPlain","isApproximate","STORY_OVERVIEW","BOOST_OVERVIEW","withAbsoluteValue","statistics","isToncoin","renderBalanceCell","balance","usdRate","integerTonPart","decimalTonPart","toFixed","integerUsdPart","decimalUsdPart","period","balances","schema","getSchemaByType","formatFullDate","minDate","maxDate","availableBalance","currentBalance","overallRevenue","cell","field","part","percentage","change","isChangeNegative","renderOverviewItemValue","mediaArea","customEmojiSize","setCustomEmojiSize","views","isDark","isFlipped","reactionCount","shouldDisplayCount","updateCustomEmojiSize","clientHeight","prevReactionCount","STORY_ASPECT_RATIO","prepareStyle","rotation","coordinates","closeStoryViewer","openUrl","useWindowSize","MOBILE_SCREEN_MAX_WIDTH","screenAspectRatio","clientWidth","mediaAreas","isShiny","channelId","handleMediaAreaClick","MediaAreaSuggestedReaction","getRequestInputInvoice","inputInvoice","amount","currency","purpose","boostChannelId","option","boostChannel","additionalChannelIds","untilDate","areWinnersVisible","countries","isOnlyForNewSubscribers","prizeDescription","additionalChannels","buildStarsTransactionCustomPeer","avatarIcon","isCustomPeer","peerColorId","customPeerAvatarColor","withPremiumGradient","formatStarsTransactionAmount","getStarsTransactionFromGift","transactionId","isMyGift","getPrizeStarsTransactionFromGiveaway","isContact","NOTIFICATION_DURATION","shouldDisableNotification","setIsUnsupported","handleUnsupported","IS_MOBILE","onError","onCanPlay","POLLING_INTERVAL","PEER_LAST_POLLING_TIME","PEER_ID_QUEUE","loadFromQueue","queue","queueToLoad","otherQueue","LIMIT_PER_REQUEST","loadStoriesMaxIds","peerIds","pollablePeerIds","lastPollingTime","isStatusAvailable","INCLUDE_FILTER_FIELDS","EXCLUDE_FILTER_FIELDS","selectChatFilters","mode","selectTemp","selectedChatIds","selectedChatTypes","includedChatIds","includeFilters","pick","excludedChatIds","excludeFilters","getSuggestedFolderName","filters","groups","channels","contacts","nonContacts","INITIAL_STATE","chatFilter","foldersReducer","omit","isChatList","useFoldersReducer","useReducer","callback","savedCallback","resolver","deps","msOrSchedulerFn","noFirst","setValue","getValue","ms","throttledResolver","noLast","useDebouncedSignal","debouncedResolver","trackId","originalDuration","handlers","onInit","onForcePlay","onTrackChange","noPlaylist","noProgressUpdates","noHandleEvents","controllerRef","setIsPlaying","isPlayingSync","register","setVolume","setPlaybackRate","toggleMuted","proxy","registerMediaSession","mediaHandlers","requestNextTrack","requestPreviousTrack","closeAudioPlayer","seekbackward","skipTime","seekOffset","seekforward","seekTo","seekTime","nexttrack","previoustrack","makeMediaHandlers","setPlaybackState","audioPlayer","PLAYBACK_RATE_FOR_AUDIO_MIN_DURATION","playbackRate","setPositionState","updateMetadata","isSafariPatchInProgress","prevShouldPlay","prevSrc","playIfPresent","setTime","time","audioProxy","ITERATIONS","withRaf","preferredWidth","preferredHeight","isStarted","Image","processBlur","alpha","fastBlur","onload","isInSearch","isServiceNotifications","deleteTitle","getCanDeleteChat","toggleChatPinned","toggleSavedDialogPinned","toggleChatArchived","toggleChatUnread","IS_ELECTRON","togglePinned","actionAddToFolder","actionMaskAsRead","actionMarkAsUnread","actionArchive","isChatArchived","actionReport","isInFolder","replyOriginForId","loadMessage","loadStoryThrottled","throttled","addOrderedIdsCallback","getOrderedIds","addUnreadCountersCallback","getUnreadCounters","useFolderManagerForChatsCount","addChatsCountCallback","getChatsCount","useForumPanelRender","shouldRenderForumPanelRef","isAnimationStartedRef","handleForumPanelAnimationEnd","handleForumPanelAnimationStart","shouldRenderForumPanel","isAnimationStarted","inputSelector","getRange","setRange","onSelectionChange","Element","shouldPreventDefault","handleScroll","deltaX","scrollLeft","deltaY","IGNORE_TAGS","createCallbackManager","hotkeys","addCallback","shouldFireEvent","hotkey","ctrl","meta","mod","pressedKey","isExactHotkey","modifiers","reservedKeys","parseHotkey","getHotkeyMatcher","runCallbacks","FOCUS_DELAY_MS","MODAL_HIDE_DELAY_MS","useInputFocusOnOpen","useEffectOnce","addLocalizationCallback","getTranslationFn","DEFAULT_THRESHOLD","threshold","isLongPressActive","isPressed","timerId","canProcessEvent","touches","cancel","onMouseUp","onTouchStart","onTouchEnd","STREAMING_PROGRESS","STREAMING_TIMEOUT","PROGRESS_THROTTLE","mediaFormat","isHtmlAllowed","isStreaming","IS_PROGRESSIVE_SUPPORTED","Progressive","useSelector","selectIsSynced","useUniqueId","setLoadProgress","startedAtRef","handleProgress","spentTime","MENU_CLOSE_TIMEOUT","closeTimeout","menuCloseTimeout","isMouseInside","usePrevDuringAnimation","prev","isCurrentPresent","isPrevPresent","reducer","initialState","reducerRef","dispatch","CalendarModal","onCancel","openAt","onScheduled","setOnScheduled","isWhenOnline","getServerTimeOffset","handleMessageScheduleUntilOnline","handleCloseCalendar","whenScheduled","withTimePicker","selectedAt","maxAt","getDayStartAt","isFutureMode","secondButtonLabel","onSecondButtonClick","lastCallback","onBeforeUnload","ConnectorClass","payloads","pendingPayloads","pendingTransferables","postMessage","_len","_key","postMessageOnTickEnd","request","messageData","requestStates","requestStatesByCallback","restMessageData","generateUniqueId","requestState","promise","assign","withCallback","pop","catch","finally","cancelCallback","progressCallback","isCanceled","onMessage","response","callbackArgs","postMessagesOnTickEnd","createConnector","worker","connector","handleMessage","DEFAULT_DURATION","stopById","animateHorizontalScroll","containerWidth","scrollId","remainingPath","isStopped","scrollSnapType","startAt","animate","t","currentPath","transition","currentArgs","onHeavyAnimationEnd","isAnimating","mutate","createMutateFunction","restartCurrentScrollAnimation","cancelSingleAnimation","margin","maxDistance","forceDirection","forceDuration","forceNormalContainerHeight","FocusDirection","Static","elementTop","elementHeight","scrollTop","currentScrollTop","containerHeight","targetContainerHeight","normalHeight","scrollTo","scrollFrom","Up","Down","calculateScrollFrom","absPath","SCROLL_SHORT_TRANSITION_MAX_DISTANCE","shortTransition","longTransition","SCROLL_MIN_DURATION","SCROLL_MAX_DURATION","prevOnHeavyAnimationEnd","animateSingle","newScrollTop","isAnimatingScroll","cancelScrollBlockingAnimation","tracks","currentTrackId","voiceQueue","musicQueue","playNext","isReverseOrder","currentTrack","nextTrackId","findNextInQueue","openAudioPlayer","parseMessageKey","splitTrackId","nextTrack","track","handleEvent","Proxy","createAudio","trackIdComparator","addTrackToQueue","preventPlayAfterPatch","preload","patchSafariProgressiveAudio","globalSearch","currentContent","GlobalSearchContent","Music","openedChatId","queueFilter","cleanUpQueue","fastSeek","rate","shouldRemoveFromQueue","h","trackIdFilter","removeFromQueue","currentId","getTrackQueue","chatAudio","getMessageServerKey","one","two","dateOne","keyOne","dateTwo","keyTwo","localeCompare","hex2rgb","param","parseInt","p0","p1","p2","rgb2hsb","v","hsb2rgb","f","p","q","defaultRGB","rgb","image","naturalHeight","naturalWidth","getImageData","getColorLuma","rgbColor","getPatternColor","hue","saturation","LIMIT_PER_BATCH","BATCH_INTERVAL","pendingDownloads","planned","download","pendingDownload","downloadOne","processQueue","click","DETECT_UP_TO","MAX_LENGTH","lines","fixNonStandardEmoji","textWithoutNewlines","countIfEmojiOnly","line","iterator","matchAll","EMOJI_REGEX","forcePlaceCaretAtEnd","nodeValue","selectNodeContents","ELEMENT_NODE","getMessageIdsForSelectedText","selectedFragments","cloneContents","shouldIncludeLastMessage","focusNode","focusOffset","hasParentWithClassName","MESSAGE_CONTENT_CLASS_NAME","childElementCount","children","contains","messageEl","firstChild","LUMA_THRESHOLD","ratio","outputType","resizeImage","steppedScale","bitmap","createImageBitmap","resizeWidth","resizeHeight","resizeQuality","fillColor","res","ctx2D","transferFromImageBitmap","toBlob","step","oc","octx","mul","cur","isElementInViewport","display","windowHeight","navigator","hardwareConcurrency","instances","launchMediaWorkers","IS_TEST","Worker","PROVIDERS","google","bing","osm","apple","VENUE_COLORS","arts_entertainment","building","education","food","home","nightlife","parks_outdoors","shops","travel","work","RANDOM_COLORS","prepareMapUrl","provider","point","lat","long","providerUrl","getMetersPerPixel","cos","getVenueIconUrl","getVenueColor","str","prevHash","currVal","charCodeAt","DEFAULT_HANDLERS","mediaSession","setMediaSessionHandlers","warn","setActionHandler","clearMediaSession","playbackState","buildMediaMetadata","album","artwork","MediaMetadata","cache","WeakMap","fn","cached","areSortedArraysEqual","lastArgs","lastResult","CUSTOM_PEER_PREMIUM","CUSTOM_PEER_TO_BE_DISTRIBUTED","CUSTOM_PEER_STAR","CUSTOM_PEER_INCLUDED_CHAT_TYPES","CUSTOM_PEER_EXCLUDED_CHAT_TYPES","B","Bold","STRONG","I","Italic","EM","INS","Underline","U","S","Strike","STRIKE","DEL","CODE","Code","PRE","Pre","Blockquote","MAX_TAG_DEEPNESS","withMarkdownLinks","skipMarkdown","parsedHtml","parseMarkdown","parseMarkdownLinks","fixImageContent","textIndex","recursionDeepness","addEntity","Node","COMMENT_NODE","rawText","Email","Phone","getEntityTypeFromNode","rawIndex","getEntityDataFromNode","hasChildNodes","extractorEl","deleteContents","createContextualFragment","lastInsertedNode","insertNode","setStartAfter","setEndAfter","useCommonAncestor","sel","cloneRange","intersectsNode","caretRange","endContainer","endOffset","TEXT_NODE","removeAllSelections","fileSelector","accept","noMultiple","onchange"],"sourceRoot":""}